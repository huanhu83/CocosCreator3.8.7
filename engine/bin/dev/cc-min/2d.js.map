{"version":3,"file":"2d.js","sources":["../../../cocos/2d/components/ui-mesh-renderer.ts","../../../cocos/2d/components/label-outline.ts","../../../cocos/2d/components/ui-static-batch.ts","../../../cocos/2d/components/label-shadow.ts","../../../cocos/2d/components/ui-opacity.ts","../../../cocos/2d/components/deprecated.ts","../../../cocos/2d/assembler/label/text-processing.ts","../../../cocos/2d/assembler/label/bmfontUtils.ts","../../../cocos/2d/assembler/label/bmfont.ts","../../../cocos/2d/assembler/label/letter-font.ts","../../../cocos/2d/assembler/label/letter.ts","../../../cocos/2d/assembler/label/ttfUtils.ts","../../../cocos/2d/assembler/label/ttf.ts","../../../cocos/2d/assembler/label/index.ts","../../../cocos/2d/assembler/sprite/bar-filled.ts","../../../cocos/2d/assembler/sprite/radial-filled.ts","../../../cocos/2d/assembler/sprite/sliced.ts","../../../cocos/2d/assembler/sprite/simple.ts","../../../cocos/2d/assembler/sprite/tiled.ts","../../../cocos/2d/assembler/sprite/index.ts","../../../cocos/2d/event/pointer-event-dispatcher.ts","../../../cocos/2d/renderer/deprecated.ts","../../../cocos/2d/index.ts"],"sourcesContent":["/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, executeInEditMode } from 'cc.decorator';\r\nimport { DEBUG, JSB } from 'internal:constants';\r\nimport { ModelRenderer } from '../../misc/model-renderer';\r\nimport { RenderPriority } from '../../rendering/define';\r\nimport { IBatcher } from '../renderer/i-batcher';\r\nimport { Stage } from '../renderer/stencil-manager';\r\nimport { Component } from '../../scene-graph/component';\r\nimport { NativeUIModelProxy } from '../renderer/native-2d';\r\nimport { uiRendererManager } from '../framework/ui-renderer-manager';\r\nimport { RenderEntity, RenderEntityType } from '../renderer/render-entity';\r\nimport { MeshRenderData, RenderData } from '../renderer/render-data';\r\nimport { assert, cclegacy, warnID } from '../../core';\r\nimport { RenderDrawInfoType } from '../renderer/render-draw-info';\r\nimport type { UIRenderer } from '../framework/ui-renderer';\r\n\r\n/**\r\n * @en\r\n * The component of model.\r\n * When you place particles or models in the UI, you must add this component to render.\r\n * The component must be placed on a node with the [[MeshRenderer]] or the [[ParticleSystem]].\r\n *\r\n * @zh\r\n * UI 模型基础组件。\r\n * 当你在 UI 中放置模型或者粒子的时候，必须添加该组件才能渲染。该组件必须放置在带有 [[MeshRenderer]] 或者 [[ParticleSystem]] 组件的节点上。\r\n * @deprecated This component is not recommended to be used, please use Render Texture instead.\r\n * See [UIMeshRenderer Reference](https://docs.cocos.com/creator/manual/en/ui-system/components/editor/ui-model.html)\r\n */\r\n@ccclass('cc.UIMeshRenderer')\r\n@help('i18n:cc.UIMeshRenderer')\r\n@executionOrder(110)\r\n@menu('UI/UIMeshRenderer')\r\n@executeInEditMode\r\nexport class UIMeshRenderer extends Component {\r\n    constructor () {\r\n        super();\r\n        this._renderEntity = new RenderEntity(RenderEntityType.DYNAMIC);\r\n        if (JSB) {\r\n            this._UIModelNativeProxy = new NativeUIModelProxy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the model component on this node\r\n     * @zh 获取同节点的 model 组件\r\n     */\r\n    public get modelComponent (): ModelRenderer | null {\r\n        return this._modelComponent;\r\n    }\r\n\r\n    private _modelComponent: ModelRenderer | null = null;\r\n\r\n    //nativeObj\r\n    private declare _UIModelNativeProxy: NativeUIModelProxy;\r\n    protected declare _renderEntity: RenderEntity;\r\n    public _dirtyVersion = -1;\r\n    public _internalId = -1;\r\n\r\n    public __preload (): void {\r\n        this.node._uiProps.uiComp = this;\r\n    }\r\n\r\n    onEnable (): void {\r\n        uiRendererManager.addRenderer(this);\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    onDisable (): void {\r\n        uiRendererManager.removeRenderer(this);\r\n        this.renderEntity.enabled = this._canRender();\r\n    }\r\n\r\n    public onLoad (): void {\r\n        if (!this.node._getUITransformComp()) {\r\n            this.node.addComponent('cc.UITransform');\r\n        }\r\n\r\n        this._modelComponent = this.getComponent('cc.ModelRenderer') as ModelRenderer;\r\n        if (!this._modelComponent) {\r\n            warnID(16378, this.node ? this.node.name : '');\r\n            return;\r\n        }\r\n        if (JSB) {\r\n            this._UIModelNativeProxy.attachNode(this.node);\r\n        }\r\n        this.renderEntity.setNode(this.node);\r\n    }\r\n\r\n    public onDestroy (): void {\r\n        this.renderEntity.setNode(null);\r\n        if (this.node._uiProps.uiComp === this) {\r\n            this.node._uiProps.uiComp = null;\r\n        }\r\n        this._modelComponent = this.getComponent('cc.ModelRenderer') as ModelRenderer;\r\n        if (!this._modelComponent) {\r\n            return;\r\n        }\r\n\r\n        this._modelComponent._sceneGetter = null;\r\n    }\r\n\r\n    /**\r\n     * @en Render data submission procedure, it update and assemble the render data to 2D data buffers before all children submission process.\r\n     * Usually called each frame when the ui flow assemble all render data to geometry buffers.\r\n     * Don't call it unless you know what you are doing.\r\n     * @zh 渲染数据组装程序，这个方法会在所有子节点数据组装之前更新并组装当前组件的渲染数据到 UI 的顶点数据缓冲区中。\r\n     * 一般在 UI 渲染流程中调用，用于组装所有的渲染数据到顶点数据缓冲区。\r\n     * 注意：不要手动调用该函数，除非你理解整个流程。\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _render (render: IBatcher): boolean {\r\n        if (this._modelComponent) {\r\n            const models = this._modelComponent._collectModels();\r\n            this._modelComponent._detachFromScene();\r\n            for (let i = 0; i < models.length; i++) {\r\n                if (models[i].enabled) {\r\n                    render.commitModel(this, models[i], this._modelComponent.material);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public fillBuffers (render: IBatcher): void {\r\n        if (this.enabled) {\r\n            this._render(render);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    // Native updateAssembler\r\n    public updateRenderer (): void {\r\n        if (JSB) {\r\n            this.renderEntity.enabled = this._canRender();\r\n            if (this._modelComponent) {\r\n                const models = this._modelComponent._collectModels();\r\n                this._modelComponent._detachFromScene(); // JSB\r\n                // clear models\r\n                this._UIModelNativeProxy.clearModels();\r\n                this._renderEntity.clearDynamicRenderDrawInfos();\r\n                for (let i = 0; i < models.length; i++) {\r\n                    if (models[i].enabled) {\r\n                        this._uploadRenderData(i);\r\n                        this._UIModelNativeProxy.updateModels(models[i]);\r\n                    }\r\n                }\r\n                this._UIModelNativeProxy.attachDrawInfo();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _uploadRenderData (index: number): void {\r\n        if (JSB) {\r\n            const renderData = MeshRenderData.add();\r\n            // TODO: here we weirdly use UIMeshRenderer as UIRenderer\r\n            // please fix the type @holycanvas\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14637\r\n            renderData.initRenderDrawInfo(this as unknown as UIRenderer, RenderDrawInfoType.MODEL);\r\n            // TODO: MeshRenderData and RenderData are both sub class of BaseRenderData, here we weirdly use MeshRenderData as RenderData\r\n            // please fix the type @holycanvas\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14637\r\n            this._renderData = renderData as unknown as RenderData;\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            this._renderData.material = this._modelComponent!.getMaterialInstance(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Post render data submission procedure, it's executed after assembler updated for all children.\r\n     * It may assemble some extra render data to the geometry buffers, or it may only change some render states.\r\n     * Don't call it unless you know what you are doing.\r\n     * @zh 后置渲染数据组装程序，它会在所有子节点的渲染数据组装完成后被调用。\r\n     * 它可能会组装额外的渲染数据到顶点数据缓冲区，也可能只是重置一些渲染状态。\r\n     * 注意：不要手动调用该函数，除非你理解整个流程。\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public postUpdateAssembler (render: IBatcher): void {\r\n        // No behavior for this component\r\n    }\r\n\r\n    public update (): void {\r\n        if (JSB) {\r\n            if (this._modelComponent) {\r\n                this._markForUpdateRenderData();\r\n            }\r\n        }\r\n        this._fitUIRenderQueue();\r\n    }\r\n\r\n    private _fitUIRenderQueue (): void {\r\n        if (!this._modelComponent) {\r\n            return;\r\n        }\r\n        const matNum = this._modelComponent.sharedMaterials.length;\r\n        for (let i = 0; i < matNum; i++) {\r\n            const material = this._modelComponent.getMaterialInstance(i);\r\n            if (material == null) {\r\n                continue;\r\n            }\r\n            const passes = material.passes;\r\n            const passNum = passes.length;\r\n            for (let j = 0; j < passNum; j++) {\r\n                const pass = passes[j];\r\n                pass.setPriority(RenderPriority.MAX - 11);\r\n                // Because the deferred pipeline cannot perform lighting processing on the uimodel,\r\n                // it may even cause the uimodel to crash in the metal backend,\r\n                // so force rendering uimodel in forward pipeline\r\n                material.recompileShaders({ CC_FORCE_FORWARD_SHADING: true }, j);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    // interface\r\n    public markForUpdateRenderData (enable = true): void {\r\n        this._markForUpdateRenderData(enable);\r\n    }\r\n\r\n    /**\r\n     * An internal method that marks the render data of the current component as modified so that the render data is recalculated.\r\n     * Adding this method is to minify the function name by `@mangle` since this method is frequently used in the engine.\r\n     * To keep the compatibility, the original method is still kept.\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _markForUpdateRenderData (enable = true): void {\r\n        uiRendererManager.markDirtyRenderer(this);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public stencilStage: Stage = Stage.DISABLED;\r\n\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public setNodeDirty (): void {\r\n        // No behavior for this component\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public setTextureDirty (): void {\r\n        // No behavior for this component\r\n    }\r\n\r\n    protected _canRender (): boolean {\r\n        return (this.enabled && this._modelComponent !== null);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get renderEntity (): RenderEntity {\r\n        if (DEBUG) {\r\n            assert(Boolean(this._renderEntity), 'this._renderEntity should not be invalid');\r\n        }\r\n        return this._renderEntity;\r\n    }\r\n\r\n    protected _renderData: RenderData | null = null;\r\n    /**\r\n     * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get renderData (): RenderData | null {\r\n        return this._renderData;\r\n    }\r\n}\r\n\r\ncclegacy.UIMeshRenderer = UIMeshRenderer;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, tooltip, requireComponent, executeInEditMode, serializable } from 'cc.decorator';\r\nimport { Component } from '../../scene-graph/component';\r\nimport { Color, assertIsTrue, cclegacy } from '../../core';\r\nimport { Label } from './label';\r\n\r\n/**\r\n * @en\r\n * Outline effect used to change the display, only for system fonts or TTF fonts.\r\n *\r\n * @zh\r\n * 描边效果组件,用于字体描边,只能用于系统字体。\r\n *\r\n * @deprecated since v3.8.2, please use [[Label.enableOutline]] instead.\r\n */\r\n@ccclass('cc.LabelOutline')\r\n@help('i18n:cc.LabelOutline')\r\n@executionOrder(110)\r\n@menu('UI/LabelOutline')\r\n@requireComponent(Label)\r\n@executeInEditMode\r\nexport class LabelOutline extends Component {\r\n    /**\r\n     * @en\r\n     * Outline color.\r\n     *\r\n     * @zh\r\n     * 改变描边的颜色。\r\n     *\r\n     * @deprecated since v3.8.2, please use [[Label.outlineColor]] instead.\r\n     */\r\n    @tooltip('i18n:labelOutline.color')\r\n    get color (): Readonly<Color> {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        return label.outlineColor;\r\n    }\r\n\r\n    set color (value) {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.outlineColor = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Change the outline width.\r\n     *\r\n     * @zh\r\n     * 改变描边的宽度。\r\n     *\r\n     * @deprecated since v3.8.2, please use [[Label.outlineWidth]] instead.\r\n     */\r\n    @tooltip('i18n:labelOutline.width')\r\n    get width (): number {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        return label.outlineWidth;\r\n    }\r\n\r\n    set width (value) {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.outlineWidth = value;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.8.2, please use [[Label.enableOutline]] instead.\r\n     */\r\n    public onEnable (): void {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.enableOutline = true;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.8.2, please use [[Label.enableOutline]] instead.\r\n     */\r\n    public onDisable (): void {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.enableOutline = false;\r\n    }\r\n}\r\n\r\ncclegacy.LabelOutline = LabelOutline;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, menu, executionOrder, visible, override } from 'cc.decorator';\r\nimport { UIRenderer } from '../framework/ui-renderer';\r\nimport { IBatcher } from '../renderer/i-batcher';\r\nimport { DrawBatch2D } from '../renderer/draw-batch';\r\nimport { Color, warnID } from '../../core';\r\nimport { StaticVBAccessor } from '../renderer/static-vb-accessor';\r\nimport { director } from '../../game';\r\nimport type { Batcher2D } from '../renderer/batcher-2d';\r\n\r\n/**\r\n * @en\r\n * Static batch component of UI.\r\n * This component is placed on the root node of all node objects that need to be batch.\r\n * Only sprites and label participate in the batch.\r\n * Static batch must be enabled manually, otherwise dynamic batch is still used.\r\n * Note: Do not place mask, Graphics, and objects such as UI models or particles under child nodes,\r\n * otherwise rendering will be skipped after static batching is enabled.\r\n *\r\n * @zh\r\n * UI 静态合批组件。\r\n * 该组件放在所有需要被静态合批的节点对象的根节点上，子节点放置对象必须是精灵和文本，其余对象不参与静态合批。\r\n * 用户必须通过手动方式启用收集静态合批数据[[markAsDirty]]，否则合批方式仍然采用动态合批（采集数据的流程相同）。此后渲染的内容是采用收集到的合批渲染数据，子节点的任何修改将不再有效。\r\n * 注意：子节点下不要放置 Mask，Graphics，以及 UI 模型或者粒子之类对象，否则会在启用完静态合批后跳过渲染。\r\n *\r\n * @deprecated Since v3.4.1, We have adopted a new rendering batching policy in v3.4.1,\r\n * which will result in an effective performance improvement for normal dynamic batching components,\r\n * so manual management with the UIStaticBatch component is no longer recommended and will be removed in the future\r\n */\r\n@ccclass('cc.UIStaticBatch')\r\n@help('i18n:cc.UIStaticBatch')\r\n@menu('2D/UIStaticBatch')\r\n@executionOrder(110)\r\nexport class UIStaticBatch extends UIRenderer {\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    @override\r\n    @visible(false)\r\n    get color (): Readonly<Color> {\r\n        return this._color;\r\n    }\r\n\r\n    set color (value) {\r\n        if (this._color === value) {\r\n            return;\r\n        }\r\n\r\n        this._color.set(value);\r\n    }\r\n\r\n    get drawBatchList (): DrawBatch2D[] {\r\n        return this._uiDrawBatchList;\r\n    }\r\n\r\n    protected _init = false;\r\n    protected _bufferAccessor: StaticVBAccessor | null = null;\r\n    protected _dirty = true;\r\n    private _uiDrawBatchList: DrawBatch2D[] = [];\r\n\r\n    public postUpdateAssembler (render: IBatcher): void {\r\n        // if (this._dirty) {\r\n        //     this._dirty = false;\r\n        //     this._init = true;\r\n        //     this.node._static = true;\r\n        //     render.endStaticBatch();\r\n        //     this._bufferAccessor!.uploadBuffers();\r\n        // }\r\n        // render.currIsStatic = false;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Recollect data tags.\r\n     * The render data will be recollected during the render phase of the current frame, and the next frame will be rendered using fixed data.\r\n     * Note: 尽量不要频繁调用此接口, 会有一定内存损耗.\r\n     *\r\n     * @zh\r\n     * 重新采集数据标记，会在当前帧的渲染阶段重新采集渲染数据，下一帧开始将会使用固定数据进行渲染。\r\n     * 注意：尽量不要频繁调用此接口，因为会清空原先存储的 ia 数据重新采集，会有一定内存损耗。\r\n     */\r\n    public markAsDirty (): void {\r\n\r\n        // this.node._static = false;\r\n        // this._dirty = true;\r\n        // this._init = false;\r\n        // this._clearData();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _requireDrawBatch (): DrawBatch2D {\r\n        const batch = new DrawBatch2D();\r\n        batch.isStatic = true;\r\n        this._uiDrawBatchList.push(batch);\r\n        return batch;\r\n    }\r\n\r\n    protected _clearData (): void {\r\n        if (this._bufferAccessor) {\r\n            this._bufferAccessor.reset();\r\n\r\n            const ui = this._getBatcher()!;\r\n            for (let i = 0; i < this._uiDrawBatchList.length; i++) {\r\n                const element = this._uiDrawBatchList[i];\r\n                element.destroy(ui);\r\n            }\r\n        }\r\n\r\n        this._uiDrawBatchList.length = 0;\r\n        this._init = false;\r\n    }\r\n\r\n    protected _getBatcher (): Batcher2D | null {\r\n        if (director.root && director.root.batcher2D) {\r\n            return director.root.batcher2D;\r\n        }\r\n        warnID(9301);\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, tooltip, requireComponent, executeInEditMode, serializable } from 'cc.decorator';\r\nimport { Component } from '../../scene-graph/component';\r\nimport { Color, Vec2, assertIsTrue } from '../../core';\r\nimport { Label } from './label';\r\n\r\n/**\r\n * @en Shadow effect for Label component, only for system fonts or TTF fonts.\r\n * @zh 用于给 Label 组件添加阴影效果，只能用于系统字体或 ttf 字体。\r\n *\r\n * @deprecated since v3.8.2, please use [[Label.enableShadow]] instead.\r\n */\r\n@ccclass('cc.LabelShadow')\r\n@help('i18n:cc.LabelShadow')\r\n@executionOrder(110)\r\n@menu('UI/LabelShadow')\r\n@requireComponent(Label)\r\n@executeInEditMode\r\nexport class LabelShadow extends Component {\r\n    /**\r\n     * @en\r\n     * Shadow color.\r\n     *\r\n     * @zh\r\n     * 阴影的颜色。\r\n     *\r\n     * @deprecated since v3.8.2, please use [[Label.shadowColor]] instead.\r\n     */\r\n    @tooltip('i18n:labelShadow.color')\r\n    get color (): Readonly<Color> {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        return label.shadowColor;\r\n    }\r\n\r\n    set color (value) {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.shadowColor = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Offset between font and shadow.\r\n     *\r\n     * @zh\r\n     * 字体与阴影的偏移。\r\n     *\r\n     * @deprecated since v3.8.2, please use [[Label.shadowOffset]] instead.\r\n     */\r\n    @tooltip('i18n:labelShadow.offset')\r\n    get offset (): Vec2 {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        return label.shadowOffset;\r\n    }\r\n\r\n    set offset (value) {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.shadowOffset = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * A non-negative float specifying the level of shadow blur.\r\n     *\r\n     * @zh\r\n     * 阴影的模糊程度。\r\n     *\r\n     * @deprecated since v3.8.2, please use [[Label.shadowBlur]] instead.\r\n     */\r\n    @tooltip('i18n:labelShadow.blur')\r\n    get blur (): number {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        return label.shadowBlur;\r\n    }\r\n\r\n    set blur (value) {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.shadowBlur = value;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.8.2, please use [[Label.enableShadow]] instead.\r\n     */\r\n    public onEnable (): void {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.enableShadow = true;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.8.2, please use [[Label.enableShadow]] instead.\r\n     */\r\n    public onDisable (): void {\r\n        const label = this.node.getComponent(Label);\r\n        assertIsTrue(label);\r\n        label.enableShadow = false;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, disallowMultiple, editable, executeInEditMode, executionOrder, help, menu, serializable, tooltip } from 'cc.decorator';\r\nimport { EDITOR_NOT_IN_PREVIEW, JSB } from 'internal:constants';\r\nimport { Component } from '../../scene-graph/component';\r\nimport { clamp } from '../../core';\r\n\r\n/**\r\n * @en\r\n * Set the UI transparency component.\r\n * This component can be used to influence subsequent render nodes.\r\n * Nodes that already have a rendering component can modify the alpha channel of color directly.\r\n *\r\n * @zh\r\n * UI 透明度设置组件。可以通过该组件设置透明度来影响后续的渲染节点。已经带有渲染组件的节点可以直接修改 color 的 alpha 通道。\r\n */\r\n@ccclass('cc.UIOpacity')\r\n@help('i18n:cc.UIOpacity')\r\n@executionOrder(110)\r\n@menu('UI/UIOpacity')\r\n@executeInEditMode\r\n@disallowMultiple\r\nexport class UIOpacity extends Component {\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The transparency value of the impact.\r\n     *\r\n     * @zh\r\n     * 透明度。\r\n     */\r\n    @editable\r\n    @tooltip('i18n:UIOpacity.opacity')\r\n    get opacity (): number {\r\n        return this._opacity;\r\n    }\r\n\r\n    set opacity (value) {\r\n        if (this._opacity === value) {\r\n            return;\r\n        }\r\n        value = clamp(value, 0, 255);\r\n        this._opacity = value;\r\n        this._syncLocalOpacity(value / 255);\r\n\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            setTimeout(() => {\r\n                EditorExtends.Node.emit('change', this.node.uuid, this.node);\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    @serializable\r\n    protected _opacity = 255;\r\n\r\n    public onEnable (): void {\r\n        this._syncLocalOpacity(this._opacity / 255);\r\n    }\r\n\r\n    public onDisable (): void {\r\n        this._syncLocalOpacity(1);\r\n    }\r\n\r\n    private _syncLocalOpacity (localOpacity: number): void {\r\n        this.node._uiProps.localOpacity = localOpacity;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Mask, MaskType } from './mask';\r\nimport { Label } from './label';\r\nimport { LabelOutline } from './label-outline';\r\nimport { RichText } from './rich-text';\r\nimport { Sprite } from './sprite';\r\nimport { UIMeshRenderer } from './ui-mesh-renderer';\r\nimport { Graphics } from './graphics';\r\nimport { UIStaticBatch } from './ui-static-batch';\r\nimport { UIOpacity } from './ui-opacity';\r\nimport { js, cclegacy, replaceProperty, markAsWarning } from '../../core';\r\nimport { LabelShadow } from './label-shadow';\r\n\r\n/**\r\n * Alias of [[Mask]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Mask as MaskComponent };\r\ncclegacy.MaskComponent = Mask;\r\njs.setClassAlias(Mask, 'cc.MaskComponent');\r\n/**\r\n * Alias of [[Label]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Label as LabelComponent };\r\ncclegacy.LabelComponent = Label;\r\njs.setClassAlias(Label, 'cc.LabelComponent');\r\n/**\r\n * Alias of [[LabelOutline]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { LabelOutline as LabelOutlineComponent };\r\ncclegacy.LabelOutlineComponent = LabelOutline;\r\njs.setClassAlias(LabelOutline, 'cc.LabelOutlineComponent');\r\n\r\n/**\r\n * Alias of [[RichText]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { RichText as RichTextComponent };\r\ncclegacy.RichTextComponent = RichText;\r\njs.setClassAlias(RichText, 'cc.RichTextComponent');\r\n/**\r\n * Alias of [[Sprite]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Sprite as SpriteComponent };\r\ncclegacy.SpriteComponent = Sprite;\r\njs.setClassAlias(Sprite, 'cc.SpriteComponent');\r\n/**\r\n * Alias of [[UIMeshRenderer]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { UIMeshRenderer as UIModelComponent };\r\ncclegacy.UIModelComponent = UIMeshRenderer;\r\njs.setClassAlias(UIMeshRenderer, 'cc.UIModelComponent');\r\n/**\r\n * Alias of [[Graphics]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Graphics as GraphicsComponent };\r\ncclegacy.GraphicsComponent = Graphics;\r\njs.setClassAlias(Graphics, 'cc.GraphicsComponent');\r\n/**\r\n * Alias of [[UIStaticBatch]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { UIStaticBatch as UIStaticBatchComponent };\r\njs.setClassAlias(UIStaticBatch, 'cc.UIStaticBatchComponent');\r\n/**\r\n * Alias of [[UIOpacity]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { UIOpacity as UIOpacityComponent };\r\njs.setClassAlias(UIOpacity, 'cc.UIOpacityComponent');\r\n\r\nreplaceProperty(Mask.prototype, 'Mask', [\r\n    {\r\n        name: 'graphics',\r\n        newName: 'subComp',\r\n        target: Mask.prototype,\r\n        targetName: 'Mask',\r\n    },\r\n]);\r\n\r\nreplaceProperty(MaskType, 'MaskType', [\r\n    {\r\n        name: 'RECT',\r\n        newName: 'GRAPHICS_RECT',\r\n        target: MaskType,\r\n        targetName: 'MaskType',\r\n    },\r\n    {\r\n        name: 'ELLIPSE',\r\n        newName: 'GRAPHICS_ELLIPSE',\r\n        target: MaskType,\r\n        targetName: 'MaskType',\r\n    },\r\n    {\r\n        name: 'IMAGE_STENCIL',\r\n        newName: 'SPRITE_STENCIL',\r\n        target: MaskType,\r\n        targetName: 'MaskType',\r\n    },\r\n]);\r\n\r\nmarkAsWarning(LabelOutline.prototype, 'LabelOutline', [\r\n    {\r\n        name: 'width',\r\n        suggest: 'Please use Label.outlineWidth instead.',\r\n    },\r\n    {\r\n        name: 'color',\r\n        suggest: 'Please use Label.outlineColor instead.',\r\n    },\r\n]);\r\n\r\nmarkAsWarning(LabelShadow.prototype, 'LabelShadow', [\r\n    {\r\n        name: 'color',\r\n        suggest: 'Please use Label.shadowColor instead.',\r\n    },\r\n    {\r\n        name: 'offset',\r\n        suggest: 'Please use Label.shadowOffset instead.',\r\n    },\r\n    {\r\n        name: 'blur',\r\n        suggest: 'Please use Label.shadowBlur instead.',\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { ANDROID, JSB } from 'internal:constants';\r\nimport { Texture2D } from '../../../asset/assets';\r\nimport { WrapMode } from '../../../asset/assets/asset-enum';\r\nimport { cclegacy, Color, Rect, Vec2 } from '../../../core';\r\nimport { logID, warnID } from '../../../core/platform';\r\nimport { SpriteFrame } from '../../assets';\r\nimport { FontLetterDefinition } from '../../assets/bitmap-font';\r\nimport { HorizontalTextAlignment, Overflow, VerticalTextAlignment } from '../../components/label';\r\nimport { CanvasPool, ISharedLabelData, shareLabelInfo } from './font-utils';\r\nimport { TextOutputLayoutData, TextOutputRenderData } from './text-output-data';\r\nimport { TextStyle } from './text-style';\r\nimport { TextLayout } from './text-layout';\r\nimport {\r\n    BASELINE_RATIO,\r\n    fragmentText,\r\n    getBaselineOffset,\r\n    getSymbolAt,\r\n    getSymbolCodeAt,\r\n    getSymbolLength,\r\n    isUnicodeCJK,\r\n    isUnicodeSpace,\r\n    safeMeasureText,\r\n} from '../../utils/text-utils';\r\nimport type { Batcher2D } from '../../renderer/batcher-2d';\r\n\r\nconst Alignment = [\r\n    'left', // macro.TextAlignment.LEFT\r\n    'center', // macro.TextAlignment.CENTER\r\n    'right', // macro.TextAlignment.RIGHT\r\n];\r\nconst MAX_SIZE = 2048;\r\nconst _BASELINE_OFFSET = getBaselineOffset();\r\nconst _invisibleAlpha = (1 / 255).toFixed(3);\r\nconst MAX_CALCULATION_NUM = 3;\r\n\r\nexport interface IRenderData {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    u: number;\r\n    v: number;\r\n    color: Color;\r\n}\r\n\r\nclass LetterInfo {\r\n    public char = '';\r\n    public valid = true;\r\n    public x = 0;\r\n    public y = 0;\r\n    public line = 0;\r\n    public hash = '';\r\n}\r\n\r\nexport class TextProcessing {\r\n    // -------------------- Common Part --------------------------\r\n    public static instance: TextProcessing;\r\n    constructor () {\r\n        const canvasData = this._canvasData = CanvasPool.getInstance().get();\r\n        this._canvas = canvasData.canvas;\r\n        this._context = canvasData.context;\r\n    }\r\n\r\n    public destroy (): void {\r\n        CanvasPool.getInstance().put(this._canvasData!);\r\n        this._canvasData = null;\r\n        this._canvas = null;\r\n        this._context = null;\r\n        this._lettersInfo.length = 0;\r\n    }\r\n\r\n    public processingString (\r\n        isBmFont: boolean,\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        inputString: string,\r\n        out?: string[],\r\n    ): void {\r\n        if (!isBmFont) {\r\n            let loopTime = 0;\r\n            this._fontScale = this._getStyleFontScale(style.fontSize, style.fontScale);\r\n            this._updatePaddingRect(style, outputLayoutData);\r\n            this._calculateLabelFont(style, layout, outputLayoutData, inputString);\r\n            // check & limit canvas size\r\n            while ((outputLayoutData.canvasSize.width > MAX_SIZE || outputLayoutData.canvasSize.height > MAX_SIZE)\r\n                && (loopTime <= MAX_CALCULATION_NUM)) {\r\n                loopTime++;\r\n                if (loopTime > MAX_CALCULATION_NUM) {\r\n                    this._fontScale = 1;\r\n                } else {\r\n                    // Current Canvas Size max dimension\r\n                    const maxValue = Math.max(outputLayoutData.canvasSize.width, outputLayoutData.canvasSize.height);\r\n                    const canvasScaleToMaxSizeRatio = MAX_SIZE / maxValue;\r\n                    this._fontScale *=  canvasScaleToMaxSizeRatio;\r\n                    this._fontScale = Math.max(1, this._fontScale);\r\n                }\r\n\r\n                this._updatePaddingRect(style, outputLayoutData);\r\n                this._calculateLabelFont(style, layout, outputLayoutData, inputString);\r\n            }\r\n        } else {\r\n            if (!style.fntConfig) { // for char\r\n                this._fontScale = this._getStyleFontScale(style.originFontSize, style.fontScale);\r\n            } else {\r\n                this._fontScale = 1;\r\n            }\r\n            shareLabelInfo.fontScale = this._fontScale;\r\n            this._setupBMFontOverflowMetrics(layout, outputLayoutData);\r\n            this._updateFontScale(style);\r\n            this._computeHorizontalKerningForText(style, layout, inputString);\r\n            this._alignText(style, layout, outputLayoutData, inputString);\r\n        }\r\n        if (out) {\r\n            out = outputLayoutData.parsedString;\r\n        }\r\n    }\r\n\r\n    public generateRenderInfo (\r\n        isBmFont: boolean,\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        outputRenderData: TextOutputRenderData,\r\n        inputString: string,\r\n        callback: AnyFunction,\r\n    ): void {\r\n        if (!isBmFont) {\r\n            this._updateLabelDimensions(style, layout, outputLayoutData);\r\n            this._updateTexture(style, layout, outputLayoutData, outputRenderData);\r\n            this.generateVertexData(isBmFont, style, layout, outputLayoutData, outputRenderData, inputString, callback);\r\n        } else {\r\n            this._computeAlignmentOffset(style, layout, outputLayoutData);\r\n            this.generateVertexData(isBmFont, style, layout, outputLayoutData, outputRenderData, inputString, callback);\r\n        }\r\n    }\r\n\r\n    public setCanvasUsed (canvas: HTMLCanvasElement, content: CanvasRenderingContext2D | null): void {\r\n        this._canvas = canvas;\r\n        this._context = content;\r\n    }\r\n    // -------------------- Common Part --------------------------\r\n\r\n    // -------------------- Canvas Mode Part --------------------------\r\n\r\n    // -------------------- String Processing Part --------------------------\r\n    private _context: CanvasRenderingContext2D | null = null;\r\n    private _canvas: HTMLCanvasElement | null = null;\r\n    private _canvasData: ISharedLabelData | null = null;\r\n\r\n    private _lettersInfo: LetterInfo[] = [];\r\n    private _tmpRect = new Rect();\r\n\r\n    private _maxFontSize = 100;\r\n    private _fontScale = 1;\r\n\r\n    private _getStyleFontScale (fontSize: number, fontScale: number): number {\r\n        let scale = fontScale;\r\n        const maxFontSize = this._maxFontSize;\r\n        if (scale * fontSize > maxFontSize && fontSize < maxFontSize) { // Font size limit\r\n            scale = maxFontSize / fontSize;\r\n        }\r\n        if (scale < 1) { scale = 1; }\r\n        return scale;\r\n    }\r\n\r\n    private _calculateLabelFont (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        inputString: string,\r\n    ): void {\r\n        if (!this._context) {\r\n            return;\r\n        }\r\n\r\n        style.actualFontSize = style.fontSize * this._fontScale;\r\n        if (ANDROID) {\r\n            // Android restriction only accepts integer font sizes\r\n            style.actualFontSize = Math.floor(style.actualFontSize);\r\n            this._fontScale = style.actualFontSize / style.fontSize;\r\n        }\r\n        const paragraphedStrings = inputString.split('\\n');\r\n\r\n        const _splitStrings = outputLayoutData.parsedString = paragraphedStrings;\r\n        const _fontDesc = this._getFontDesc(style.actualFontSize, style.fontFamily, style.isBold, style.isItalic);\r\n        this._context.font = style.fontDesc = _fontDesc;\r\n\r\n        const { canvasSize, nodeContentSize, canvasPadding, contentSizeExtend } = outputLayoutData;\r\n        const fontScale = this._fontScale;\r\n\r\n        switch (layout.overFlow) {\r\n        case Overflow.NONE: {\r\n            let canvasSizeX = 0;\r\n            let canvasSizeY = 0;\r\n            for (let i = 0; i < paragraphedStrings.length; ++i) {\r\n                const paraLength = safeMeasureText(this._context, paragraphedStrings[i], _fontDesc);\r\n                canvasSizeX = canvasSizeX > paraLength ? canvasSizeX : paraLength;\r\n            }\r\n            canvasSizeY = (_splitStrings.length + BASELINE_RATIO) * this._getLineHeight(layout.lineHeight, style.actualFontSize, style.fontSize);\r\n            const rawWidth = canvasSizeX;\r\n            const rawHeight = canvasSizeY;\r\n\r\n            canvasSize.width = rawWidth + canvasPadding.width * fontScale;\r\n            canvasSize.height = rawHeight + canvasPadding.height * fontScale;\r\n            nodeContentSize.width = (rawWidth + contentSizeExtend.width * fontScale) / fontScale;\r\n            nodeContentSize.height = (rawHeight + contentSizeExtend.height * fontScale) / fontScale;\r\n            break;\r\n        }\r\n        case Overflow.SHRINK: {\r\n            this._calculateShrinkFont(paragraphedStrings, style, layout, outputLayoutData);\r\n            this._calculateWrapText(paragraphedStrings, style, layout, outputLayoutData);\r\n            canvasSize.width  = nodeContentSize.width * fontScale;\r\n            canvasSize.height = nodeContentSize.height * fontScale;\r\n            break;\r\n        }\r\n        case Overflow.CLAMP: {\r\n            this._calculateWrapText(paragraphedStrings, style, layout, outputLayoutData);\r\n            canvasSize.width  = nodeContentSize.width * fontScale;\r\n            canvasSize.height = nodeContentSize.height * fontScale;\r\n            break;\r\n        }\r\n        case Overflow.RESIZE_HEIGHT: {\r\n            this._calculateWrapText(paragraphedStrings, style, layout, outputLayoutData);\r\n            const rawHeight = (outputLayoutData.parsedString.length + BASELINE_RATIO)\r\n            * this._getLineHeight(layout.lineHeight, style.actualFontSize, style.fontSize);\r\n\r\n            canvasSize.width  = nodeContentSize.width * fontScale;\r\n            canvasSize.height = (rawHeight + canvasPadding.height * fontScale);\r\n            // set node height\r\n            nodeContentSize.height = (rawHeight + contentSizeExtend.height * fontScale) / fontScale;\r\n            break;\r\n        }\r\n        default: {\r\n            // nop\r\n        }\r\n        }\r\n    }\r\n\r\n    // can cache\r\n    private _getFontDesc (fontSize: number, fontFamily: string, isBold: boolean, isItalic: boolean): string {\r\n        let fontDesc = `${fontSize.toString()}px `;\r\n        fontDesc += fontFamily;\r\n        if (isBold) {\r\n            fontDesc = `bold ${fontDesc}`;\r\n        }\r\n\r\n        if (isItalic) {\r\n            fontDesc = `italic ${fontDesc}`;\r\n        }\r\n\r\n        return fontDesc;\r\n    }\r\n\r\n    // can cache\r\n    private _getLineHeight (lineHeight: number, fontSize: number, drawFontsize: number): number {\r\n        let nodeSpacingY = lineHeight;\r\n        if (nodeSpacingY === 0) {\r\n            nodeSpacingY = fontSize;\r\n        } else {\r\n            nodeSpacingY = nodeSpacingY * fontSize / drawFontsize;\r\n        }\r\n\r\n        return nodeSpacingY;\r\n    }\r\n\r\n    private _calculateShrinkFont (paragraphedStrings: string[], style: TextStyle, layout: TextLayout, outputLayoutData: TextOutputLayoutData): void {\r\n        if (!this._context) return;\r\n        let _fontDesc = this._getFontDesc(style.actualFontSize, style.fontFamily, style.isBold, style.isItalic);\r\n        this._context.font = _fontDesc;\r\n        const paragraphLength = this._calculateParagraphLength(paragraphedStrings, this._context, _fontDesc);\r\n\r\n        let i = 0;\r\n        let totalHeight = 0;\r\n        let maxLength = 0;\r\n        let _fontSize = style.actualFontSize;\r\n\r\n        const { canvasSize, nodeContentSize, canvasPadding } = outputLayoutData;\r\n        const fontScale = this._fontScale;\r\n\r\n        if (layout.wrapping) {\r\n            const canvasWidthNoMargin = nodeContentSize.width * fontScale;\r\n            const canvasHeightNoMargin = nodeContentSize.height * fontScale;\r\n            if (canvasWidthNoMargin < 0 || canvasHeightNoMargin < 0) {\r\n                return;\r\n            }\r\n            totalHeight = canvasHeightNoMargin + 1;\r\n            const actualFontSize = style.actualFontSize + 1;\r\n            let textFragment: string[] = [];\r\n            let left = 0;\r\n            let right = actualFontSize | 0;\r\n            let mid = 0;\r\n\r\n            while (left < right) {\r\n                mid = (left + right + 1) >> 1;\r\n\r\n                if (mid <= 0) {\r\n                    logID(4003);\r\n                    break;\r\n                }\r\n\r\n                _fontSize = mid;\r\n                _fontDesc = this._getFontDesc(_fontSize, style.fontFamily, style.isBold, style.isItalic);\r\n                this._context.font = _fontDesc;\r\n                const lineHeight = this._getLineHeight(layout.lineHeight, _fontSize, style.fontSize);\r\n\r\n                totalHeight = 0;\r\n                for (i = 0; i < paragraphedStrings.length; ++i) {\r\n                    const allWidth = safeMeasureText(this._context, paragraphedStrings[i], _fontDesc);\r\n                    textFragment = fragmentText(\r\n                        paragraphedStrings[i],\r\n                        allWidth,\r\n                        canvasWidthNoMargin,\r\n                        this._measureText(this._context, _fontDesc),\r\n                    );\r\n                    totalHeight += textFragment.length * lineHeight;\r\n                }\r\n\r\n                if (totalHeight > canvasHeightNoMargin) {\r\n                    right = mid - 1;\r\n                } else {\r\n                    left = mid;\r\n                }\r\n            }\r\n\r\n            if (left === 0) {\r\n                logID(4003);\r\n            } else {\r\n                _fontSize = left;\r\n                _fontDesc = this._getFontDesc(_fontSize, style.fontFamily, style.isBold, style.isItalic);\r\n                this._context.font = _fontDesc;\r\n            }\r\n        } else {\r\n            totalHeight = paragraphedStrings.length * this._getLineHeight(layout.lineHeight, _fontSize, style.fontSize);\r\n\r\n            for (i = 0; i < paragraphedStrings.length; ++i) {\r\n                if (maxLength < paragraphLength[i]) {\r\n                    maxLength = paragraphLength[i];\r\n                }\r\n            }\r\n            const scaleX = (canvasSize.width - canvasPadding.width) * fontScale / maxLength;\r\n            const scaleY = (canvasSize.height * fontScale) / totalHeight;\r\n\r\n            _fontSize = (style.actualFontSize * Math.min(1, scaleX, scaleY)) | 0;\r\n            _fontDesc = this._getFontDesc(_fontSize, style.fontFamily, style.isBold, style.isItalic);\r\n            this._context.font = _fontDesc;\r\n        }\r\n\r\n        style.actualFontSize = _fontSize;\r\n        style.fontDesc = _fontDesc;\r\n    }\r\n\r\n    private _calculateWrapText (paragraphedStrings: string[], style: TextStyle, layout: TextLayout, outputLayoutData: TextOutputLayoutData): void {\r\n        if (!layout.wrapping || !this._context) return;\r\n\r\n        let _splitStrings: string[] = [];\r\n        const canvasWidthNoMargin = outputLayoutData.nodeContentSize.width * this._fontScale;\r\n        const _fontDesc = this._getFontDesc(style.actualFontSize, style.fontFamily, style.isBold, style.isItalic);\r\n        this._context.font = _fontDesc;\r\n        for (let i = 0; i < paragraphedStrings.length; ++i) {\r\n            const allWidth = safeMeasureText(this._context, paragraphedStrings[i], _fontDesc);\r\n            const textFragment = fragmentText(\r\n                paragraphedStrings[i],\r\n                allWidth,\r\n                canvasWidthNoMargin,\r\n                this._measureText(this._context, _fontDesc),\r\n            );\r\n            _splitStrings = _splitStrings.concat(textFragment);\r\n        }\r\n        outputLayoutData.parsedString = _splitStrings;\r\n        style.fontDesc = _fontDesc;\r\n    }\r\n\r\n    private _measureText (ctx: CanvasRenderingContext2D, fontDesc: string): (str: string) => number {\r\n        return (str: string): number => safeMeasureText(ctx, str, fontDesc);\r\n    }\r\n\r\n    private _calculateParagraphLength (paragraphedStrings: string[], ctx: CanvasRenderingContext2D, fontDesc: string): number[] {\r\n        return paragraphedStrings.map((para) => safeMeasureText(ctx, para, fontDesc));\r\n    }\r\n\r\n    private _updatePaddingRect (style: TextStyle, outputLayoutData: TextOutputLayoutData): void {\r\n        let top = 0;\r\n        let bottom = 0;\r\n        let left = 0;\r\n        let right = 0;\r\n        let outlineWidth = 0;\r\n        const { contentSizeExtend, canvasPadding } = outputLayoutData;\r\n        contentSizeExtend.width = contentSizeExtend.height = 0;\r\n        if (style.isOutlined) {\r\n            outlineWidth = style.outlineWidth;\r\n            top = bottom = left = right = outlineWidth;\r\n            contentSizeExtend.width = contentSizeExtend.height = outlineWidth * 2;\r\n        }\r\n        if (style.hasShadow) {\r\n            const shadowWidth = style.shadowBlur + outlineWidth;\r\n            const offsetX = style.shadowOffsetX;\r\n            const offsetY = style.shadowOffsetY;\r\n            left = Math.max(left, -offsetX + shadowWidth);\r\n            right = Math.max(right, offsetX + shadowWidth);\r\n            top = Math.max(top, offsetY + shadowWidth);\r\n            bottom = Math.max(bottom, -offsetY + shadowWidth);\r\n        }\r\n        if (style.isItalic) {\r\n            // 0.0174532925 = 3.141592653 / 180\r\n            const offset = style.fontSize * Math.tan(12 * 0.0174532925);\r\n            right += offset;\r\n            contentSizeExtend.width += offset;\r\n        }\r\n        canvasPadding.x = left;\r\n        canvasPadding.y = top;\r\n        canvasPadding.width = left + right;\r\n        canvasPadding.height = top + bottom;\r\n    }\r\n\r\n    // -------------------- String Processing Part --------------------------\r\n\r\n    // -------------------- Render Processing Part --------------------------\r\n\r\n    private _updateLabelDimensions (style: TextStyle, layout: TextLayout, outputLayoutData: TextOutputLayoutData): void {\r\n        const { canvasSize } = outputLayoutData;\r\n        canvasSize.width = Math.min(canvasSize.width, MAX_SIZE);\r\n        canvasSize.height = Math.min(canvasSize.height, MAX_SIZE);\r\n\r\n        const canvas = this._canvas!;\r\n        const context = this._context!;\r\n\r\n        canvas.width = canvasSize.width;\r\n        canvas.height = canvasSize.height;\r\n\r\n        context.font = style.fontDesc;\r\n        // align\r\n        context.textAlign = Alignment[layout.horizontalAlign] as CanvasTextAlign;\r\n        context.textBaseline = 'alphabetic';\r\n    }\r\n\r\n    private _calculateFillTextStartPosition (style: TextStyle, layout: TextLayout, outputLayoutData: TextOutputLayoutData): void {\r\n        let labelX = 0;\r\n        const { canvasSize, canvasPadding } = outputLayoutData;\r\n        if (layout.horizontalAlign === HorizontalTextAlignment.RIGHT as number) {\r\n            labelX = canvasSize.width - canvasPadding.width;\r\n        } else if (layout.horizontalAlign === HorizontalTextAlignment.CENTER as number) {\r\n            labelX = (canvasSize.width - canvasPadding.width) / 2;\r\n        }\r\n\r\n        const lineHeight = this._getLineHeight(layout.lineHeight, style.actualFontSize, style.fontSize);\r\n        const drawStartY = lineHeight * (outputLayoutData.parsedString.length - 1);\r\n        // TOP\r\n        let firstLinelabelY = style.actualFontSize * (1 - BASELINE_RATIO / 2);\r\n        if (layout.verticalAlign !== VerticalTextAlignment.TOP as number) {\r\n            // free space in vertical direction\r\n            let blank = drawStartY + canvasPadding.height + style.actualFontSize - canvasSize.height;\r\n            if (layout.verticalAlign === VerticalTextAlignment.BOTTOM as number) {\r\n                // Unlike BMFont, needs to reserve space below.\r\n                blank += BASELINE_RATIO / 2 * style.actualFontSize;\r\n                // BOTTOM\r\n                firstLinelabelY -= blank;\r\n            } else {\r\n                // CENTER\r\n                firstLinelabelY -= blank / 2;\r\n            }\r\n        }\r\n\r\n        firstLinelabelY += _BASELINE_OFFSET * style.actualFontSize;\r\n\r\n        outputLayoutData.startPosition.set(labelX + canvasPadding.x, firstLinelabelY + canvasPadding.y);\r\n    }\r\n\r\n    private _updateTexture (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        outputRenderData: TextOutputRenderData,\r\n    ): void {\r\n        const context = this._context;\r\n        const canvas = this._canvas;\r\n        if (!context || !canvas) {\r\n            return;\r\n        }\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.font = style.fontDesc;\r\n\r\n        this._calculateFillTextStartPosition(style, layout, outputLayoutData);\r\n        const lineHeight = this._getLineHeight(layout.lineHeight, style.actualFontSize, style.fontSize);\r\n        // use round for line join to avoid sharp intersect point\r\n        context.lineJoin = 'round';\r\n\r\n        if (style.isOutlined) {\r\n            context.fillStyle = `rgba(${style.outlineColor.r}, ${style.outlineColor.g}, ${style.outlineColor.b}, ${_invisibleAlpha})`;\r\n            // Notice: fillRect twice will not effect\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n        } else {\r\n            context.fillStyle = `rgba(${style.color.r}, ${style.color.g}, ${style.color.b}, ${_invisibleAlpha})`;\r\n            context.fillRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n        context.fillStyle = `rgb(${style.color.r}, ${style.color.g}, ${style.color.b})`;\r\n        const { startPosition } = outputLayoutData;\r\n        // Use the value that has been amplified by fontScale\r\n        const tempPos = new Vec2(startPosition.x, startPosition.y);\r\n        const drawTextPosX = tempPos.x;\r\n        let drawTextPosY = 0;\r\n        // draw shadow and underline\r\n        this._drawTextEffect(tempPos, lineHeight, style, layout, outputLayoutData);\r\n        const { parsedString } = outputLayoutData;\r\n        // draw text and outline\r\n        for (let i = 0; i < parsedString.length; ++i) {\r\n            drawTextPosY = tempPos.y + i * lineHeight;\r\n            //draw shadow\r\n            if (style.hasShadow) {\r\n                this._setupShadow(style);\r\n                context.fillText(parsedString[i], drawTextPosX, drawTextPosY);\r\n            }\r\n            //draw outline\r\n            if (style.isOutlined) {\r\n                this._setupOutline(style);\r\n                context.strokeText(parsedString[i], drawTextPosX, drawTextPosY);\r\n            }\r\n            //draw text\r\n            if (!style.hasShadow || style.isOutlined) {\r\n                context.fillText(parsedString[i], drawTextPosX, drawTextPosY);\r\n            }\r\n        }\r\n\r\n        if (style.hasShadow) {\r\n            context.shadowColor = 'transparent';\r\n        }\r\n\r\n        this._uploadTexture(outputRenderData);\r\n    }\r\n\r\n    private _uploadTexture (outputRenderData: TextOutputRenderData): void {\r\n        const canvas = this._canvas;\r\n        if (outputRenderData.texture && canvas) {\r\n            let tex: Texture2D;\r\n            if (outputRenderData.texture instanceof SpriteFrame) {\r\n                tex = (outputRenderData.texture.texture as Texture2D);\r\n            } else {\r\n                tex = outputRenderData.texture;\r\n            }\r\n\r\n            const uploadAgain = canvas.width !== 0 && canvas.height !== 0;\r\n\r\n            if (uploadAgain) {\r\n                const oldGfxTexture = tex.getGFXTexture();\r\n                const oldGfxSampler = tex.getGFXSampler();\r\n\r\n                tex.reset({\r\n                    width: canvas.width,\r\n                    height: canvas.height,\r\n                    mipmapLevel: 1,\r\n                });\r\n                tex.uploadData(canvas);\r\n                tex.setWrapMode(WrapMode.CLAMP_TO_EDGE, WrapMode.CLAMP_TO_EDGE);\r\n                if (outputRenderData.texture instanceof SpriteFrame) {\r\n                    outputRenderData.texture.rect = new Rect(0, 0, canvas.width, canvas.height);\r\n                    outputRenderData.texture._calculateUV();\r\n                }\r\n                if (cclegacy.director.root && cclegacy.director.root.batcher2D) {\r\n                    if (JSB) {\r\n                        // NOTE: Release the old descriptor set cache referenced by old gfx texture and sampler.\r\n                        // We should not release the new generated `tex.getGFXTexture()` and `tex.getGFXSampler()`\r\n                        // since `tex.reset(...)` will reset `gfxTexture` and `gfxSampler`.\r\n                        // The other non-JSB branch uses `tex.getHash()` which returns the hash value that will not be\r\n                        // changed after `tex.reset(...)`, so there will be no problems for non-JSB branch.\r\n                        (cclegacy.director.root.batcher2D as Batcher2D)._releaseDescriptorSetCache(oldGfxTexture, oldGfxSampler);\r\n                    } else {\r\n                        (cclegacy.director.root.batcher2D as Batcher2D)._releaseDescriptorSetCache(tex.getHash());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _drawTextEffect (\r\n        startPosition: Vec2,\r\n        lineHeight: number,\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n    ): void {\r\n        if (!style.hasShadow && !style.isOutlined && !style.isUnderline) return;\r\n        const context = this._context!;\r\n        const { parsedString } = outputLayoutData;\r\n\r\n        const isMultiple = parsedString.length > 1 && style.hasShadow;\r\n        const measureText = this._measureText(this._context!, style.fontDesc);\r\n        let drawTextPosX = 0;\r\n        let drawTextPosY = 0;\r\n\r\n        // draw shadow and (outline or text)\r\n        for (let i = 0; i < parsedString.length; ++i) {\r\n            drawTextPosX = startPosition.x;\r\n            drawTextPosY = startPosition.y + i * lineHeight;\r\n            // multiple lines need to be drawn outline and fill text\r\n            if (isMultiple) {\r\n                //draw shadow\r\n                if (style.hasShadow) {\r\n                    this._setupShadow(style);\r\n                    context.fillText(parsedString[i], drawTextPosX, drawTextPosY);\r\n                }\r\n                // draw outline\r\n                if (style.isOutlined) {\r\n                    this._setupOutline(style);\r\n                    context.strokeText(parsedString[i], drawTextPosX, drawTextPosY);\r\n                }\r\n\r\n                //draw text\r\n                if (!style.hasShadow || style.isOutlined) {\r\n                    context.fillText(parsedString[i], drawTextPosX, drawTextPosY);\r\n                }\r\n            }\r\n\r\n            // draw underline\r\n            if (style.isUnderline) {\r\n                const _drawUnderlineWidth = measureText(parsedString[i]);\r\n                const _drawUnderlinePos = new Vec2();\r\n                if (layout.horizontalAlign === HorizontalTextAlignment.RIGHT as number) {\r\n                    _drawUnderlinePos.x = startPosition.x - _drawUnderlineWidth;\r\n                } else if (layout.horizontalAlign === HorizontalTextAlignment.CENTER as number) {\r\n                    _drawUnderlinePos.x = startPosition.x - (_drawUnderlineWidth / 2);\r\n                } else {\r\n                    _drawUnderlinePos.x = startPosition.x;\r\n                }\r\n                _drawUnderlinePos.y = drawTextPosY + style.actualFontSize / 8;\r\n                context.fillRect(_drawUnderlinePos.x, _drawUnderlinePos.y, _drawUnderlineWidth, style.underlineHeight * this._fontScale);\r\n            }\r\n        }\r\n\r\n        if (isMultiple) {\r\n            context.shadowColor = 'transparent';\r\n        }\r\n    }\r\n\r\n    private _setupOutline (style: TextStyle): void {\r\n        const context = this._context!;\r\n        // draw outline need clear shadow\r\n        context.shadowBlur = 0;\r\n        context.shadowOffsetX = 0;\r\n        context.shadowOffsetY = 0;\r\n        context.strokeStyle = `rgba(${style.outlineColor.r}, ${style.outlineColor.g}, ${style.outlineColor.b}, ${style.outlineColor.a / 255})`;\r\n        context.lineWidth = style.outlineWidth * 2 * this._fontScale;\r\n    }\r\n\r\n    private _setupShadow (style: TextStyle): void {\r\n        const context = this._context!;\r\n        const fontScale = this._fontScale;\r\n        context.shadowColor = `rgba(${style.shadowColor.r}, ${style.shadowColor.g}, ${style.shadowColor.b}, ${style.shadowColor.a / 255})`;\r\n        context.shadowBlur = style.shadowBlur * fontScale;\r\n        context.shadowOffsetX = style.shadowOffsetX * fontScale;\r\n        context.shadowOffsetY = -style.shadowOffsetY * fontScale;\r\n    }\r\n\r\n    // -------------------- Render Processing Part --------------------------\r\n\r\n    private generateVertexData (\r\n        isBmFont: boolean,\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        outputRenderData: TextOutputRenderData,\r\n        inputString: string,\r\n        callback: AnyFunction,\r\n    ): void {\r\n        if (!isBmFont) {\r\n            this.updateQuatCount(outputRenderData); // update vbBuffer count\r\n            callback(style, outputLayoutData, outputRenderData);\r\n        } else {\r\n            this._updateQuads(style, layout, outputLayoutData, outputRenderData, inputString, callback);\r\n        }\r\n    }\r\n\r\n    private updateQuatCount (outputRenderData: TextOutputRenderData): void {\r\n        const data: IRenderData[] = outputRenderData.vertexBuffer;\r\n        const count = outputRenderData.quadCount;\r\n        if (data.length !== count) {\r\n            for (let i = data.length; i < count; i++) {\r\n                data.push({\r\n                    x: 0,\r\n                    y: 0,\r\n                    z: 0,\r\n                    u: 0,\r\n                    v: 0,\r\n                    color: Color.WHITE.clone(),\r\n                });\r\n            }\r\n\r\n            data.length = count;\r\n        }\r\n    }\r\n\r\n    // -------------------- Canvas Mode Part ---------------------------\r\n    // -------------------- Multiple Quad Mode Part --------------------\r\n\r\n    private _setupBMFontOverflowMetrics (layout: TextLayout, outputLayoutData: TextOutputLayoutData): void {\r\n        const { nodeContentSize } = outputLayoutData;\r\n        let newWidth = nodeContentSize.width;\r\n        let newHeight = nodeContentSize.height;\r\n\r\n        if (layout.overFlow === Overflow.RESIZE_HEIGHT as number) {\r\n            newHeight = 0;\r\n        }\r\n\r\n        if (layout.overFlow === Overflow.NONE as number) {\r\n            newWidth = 0;\r\n            newHeight = 0;\r\n        }\r\n\r\n        layout.textWidthTemp = newWidth;\r\n        layout.textHeightTemp = newHeight;\r\n        layout.textDimensions.width = newWidth;\r\n        layout.textDimensions.height = newHeight;\r\n        layout.maxLineWidth = newWidth;\r\n    }\r\n\r\n    private _updateFontScale (style: TextStyle): void {\r\n        style.bmfontScale = style.actualFontSize / (style.originFontSize * this._fontScale);\r\n    }\r\n\r\n    private _computeHorizontalKerningForText (style: TextStyle, layout: TextLayout, inputString: string): void {\r\n        const string = inputString;\r\n        const stringLen = string.length;\r\n        if (!style.fntConfig) return; // for char\r\n\r\n        const kerningDict = style.fntConfig.kerningDict;\r\n        const horizontalKerning = layout.horizontalKerning;\r\n\r\n        if (!kerningDict || kerningDict.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let prev = -1;\r\n        for (let i = 0; i < stringLen; ++i) {\r\n            const key = string.charCodeAt(i);\r\n            const kerningAmount = kerningDict[(prev << 16) | (key & 0xffff)] || 0;\r\n            if (i < stringLen - 1) {\r\n                horizontalKerning[i] = kerningAmount;\r\n            } else {\r\n                horizontalKerning[i] = 0;\r\n            }\r\n            prev = key;\r\n        }\r\n    }\r\n\r\n    private _alignText (style: TextStyle, layout: TextLayout, outputLayoutData: TextOutputLayoutData, inputString: string): void {\r\n        this._multilineTextWrap(style, layout, outputLayoutData, inputString, this._getFirstWordLen);\r\n\r\n        // shrink\r\n        if (layout.overFlow === Overflow.SHRINK as number) {\r\n            if (style.fontSize > 0 && this._isVerticalClamp(style, layout, outputLayoutData, inputString, this)) {\r\n                this._shrinkLabelToContentSize(style, layout, outputLayoutData, inputString, this._isVerticalClamp);\r\n            }\r\n            if (style.fontSize > 0 && this._isHorizontalNeedShrink(layout, outputLayoutData)) {\r\n                this._shrinkLabelToContentSize(style, layout, outputLayoutData, inputString, this._isHorizontalClamp);\r\n            }\r\n        }\r\n        this._parsedString(outputLayoutData, inputString);\r\n    }\r\n\r\n    private _parsedString (outputLayoutData: TextOutputLayoutData, inputString: string): void {\r\n        let _splitStrings: string[] = [];\r\n        let textFragment = '';\r\n        const length = getSymbolLength(inputString);\r\n        for (let i = 0, line = 0, l = length; i < l; ++i) {\r\n            const letterInfo = this._lettersInfo[i];\r\n            if (!letterInfo.valid) { continue; }\r\n            if (line === letterInfo.line) {\r\n                textFragment += letterInfo.char;\r\n            } else {\r\n                _splitStrings = _splitStrings.concat(textFragment);\r\n                line = letterInfo.line;\r\n                textFragment = '';\r\n            }\r\n        }\r\n        _splitStrings = _splitStrings.concat(textFragment);\r\n        outputLayoutData.parsedString = _splitStrings;\r\n    }\r\n\r\n    private _multilineTextWrap (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        inputString: string,\r\n        nextTokenFunc: (arg0: TextStyle, arg1: TextLayout, arg2: string, arg3: number, arg4: number) => number,\r\n    ): boolean {\r\n        layout.linesWidth.length = 0;\r\n\r\n        const _string = inputString;\r\n        const textLen = _string.length;\r\n\r\n        let lineIndex = 0;\r\n        let nextTokenX = 0;\r\n        let nextTokenY = 0;\r\n        let longestLine = 0;\r\n        let letterRight = 0;\r\n\r\n        let highestY = 0;\r\n        let lowestY = 0;\r\n        let letterDef: FontLetterDefinition | null = null;\r\n\r\n        const _lineSpacing = 0; // use less?\r\n\r\n        for (let index = 0; index < textLen;) {\r\n            let character = getSymbolAt(_string, index);\r\n            if (character === '\\n') {\r\n                layout.linesWidth.push(letterRight);\r\n                letterRight = 0;\r\n                lineIndex++;\r\n                nextTokenX = 0;\r\n                nextTokenY -= layout.lineHeight * this._getFontScale(style, layout) + _lineSpacing;\r\n                this._recordPlaceholderInfo(index, character);\r\n                index++;\r\n                continue;\r\n            }\r\n\r\n            const tokenLen = nextTokenFunc(style, layout, _string, index, textLen);\r\n            let tokenHighestY = highestY;\r\n            let tokenLowestY = lowestY;\r\n            let tokenRight = letterRight;\r\n            let nextLetterX = nextTokenX;\r\n            let newLine = false;\r\n            const letterPosition = new Vec2();\r\n\r\n            for (let tmp = 0; tmp < tokenLen; ++tmp) {\r\n                const letterIndex = index + tmp;\r\n                character = getSymbolAt(_string, letterIndex);\r\n                if (character === '\\r') {\r\n                    this._recordPlaceholderInfo(letterIndex, character);\r\n                    continue;\r\n                }\r\n                letterDef = shareLabelInfo.fontAtlas!.getLetterDefinitionForChar(character, shareLabelInfo);\r\n                if (!letterDef) {\r\n                    this._recordPlaceholderInfo(letterIndex, character);\r\n                    if (style.fntConfig != null) {\r\n                        logID(16354, style.fntConfig.atlasName as string, character);\r\n                    } else {\r\n                        logID(16355, style.fontFamily, character);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                const letterX = nextLetterX + letterDef.offsetX * style.bmfontScale - shareLabelInfo.margin;\r\n\r\n                if (layout.wrapping\r\n                    && layout.maxLineWidth > 0\r\n                    && nextTokenX > 0\r\n                    && letterX + letterDef.w * style.bmfontScale > layout.maxLineWidth\r\n                    && !isUnicodeSpace(character)) {\r\n                    layout.linesWidth.push(letterRight);\r\n                    letterRight = 0;\r\n                    lineIndex++;\r\n                    nextTokenX = 0;\r\n                    nextTokenY -= (layout.lineHeight * this._getFontScale(style, layout) + _lineSpacing);\r\n                    newLine = true;\r\n                    break;\r\n                } else {\r\n                    letterPosition.x = letterX;\r\n                }\r\n\r\n                letterPosition.y = nextTokenY - letterDef.offsetY * style.bmfontScale;\r\n                this._recordLetterInfo(letterPosition, character, letterIndex, lineIndex);\r\n\r\n                if (letterIndex + 1 < layout.horizontalKerning.length && letterIndex < textLen - 1) {\r\n                    nextLetterX += layout.horizontalKerning[letterIndex + 1] * style.bmfontScale;\r\n                }\r\n\r\n                nextLetterX += letterDef.xAdvance * style.bmfontScale + layout.spacingX;\r\n\r\n                tokenRight = letterPosition.x + letterDef.w * style.bmfontScale;\r\n\r\n                if (tokenHighestY < letterPosition.y) {\r\n                    tokenHighestY = letterPosition.y;\r\n                }\r\n\r\n                if (tokenLowestY > letterPosition.y - letterDef.h * style.bmfontScale) {\r\n                    tokenLowestY = letterPosition.y - letterDef.h * style.bmfontScale;\r\n                }\r\n            } // end of for loop\r\n\r\n            if (newLine) { continue; }\r\n\r\n            nextTokenX = nextLetterX;\r\n            letterRight = tokenRight;\r\n\r\n            if (highestY < tokenHighestY) {\r\n                highestY = tokenHighestY;\r\n            }\r\n            if (lowestY > tokenLowestY) {\r\n                lowestY = tokenLowestY;\r\n            }\r\n            if (longestLine < letterRight) {\r\n                longestLine = letterRight;\r\n            }\r\n\r\n            index += tokenLen;\r\n        } // end of for loop\r\n\r\n        layout.linesWidth.push(letterRight);\r\n\r\n        layout.numberOfLines = lineIndex + 1;\r\n        layout.textDesiredHeight = layout.numberOfLines * layout.lineHeight * this._getFontScale(style, layout);\r\n        if (layout.numberOfLines > 1) {\r\n            layout.textDesiredHeight += (layout.numberOfLines - 1) * _lineSpacing;\r\n        }\r\n\r\n        const { nodeContentSize } = outputLayoutData;\r\n\r\n        nodeContentSize.width = layout.textWidthTemp;\r\n        nodeContentSize.height = layout.textHeightTemp;\r\n        if (layout.textWidthTemp <= 0) {\r\n            nodeContentSize.width = parseFloat(longestLine.toFixed(2)) + shareLabelInfo.margin * 2;\r\n        }\r\n        if (layout.textHeightTemp <= 0) {\r\n            nodeContentSize.height = parseFloat(layout.textDesiredHeight.toFixed(2)) + shareLabelInfo.margin * 2;\r\n        }\r\n\r\n        layout.tailoredTopY = nodeContentSize.height;\r\n        layout.tailoredBottomY = 0;\r\n        if (highestY > 0) {\r\n            layout.tailoredTopY = nodeContentSize.height + highestY;\r\n        }\r\n        if (lowestY < -layout.textDesiredHeight) {\r\n            layout.tailoredBottomY = layout.textDesiredHeight + lowestY;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private _recordPlaceholderInfo (letterIndex: number, char: string): void {\r\n        const lettersInfo = this._lettersInfo;\r\n        if (letterIndex >= lettersInfo.length) {\r\n            const tmpInfo = new LetterInfo();\r\n            lettersInfo.push(tmpInfo);\r\n        }\r\n\r\n        lettersInfo[letterIndex].char = char;\r\n        lettersInfo[letterIndex].hash = `${getSymbolCodeAt(char, 0)}${shareLabelInfo.hash}`;\r\n        lettersInfo[letterIndex].valid = false;\r\n    }\r\n\r\n    private _recordLetterInfo (letterPosition: Vec2, character: string, letterIndex: number, lineIndex: number): void {\r\n        const lettersInfo = this._lettersInfo;\r\n        if (letterIndex >= lettersInfo.length) {\r\n            const tmpInfo = new LetterInfo();\r\n            lettersInfo.push(tmpInfo);\r\n        }\r\n\r\n        const char = getSymbolCodeAt(character, 0);\r\n        const key = `${char}${shareLabelInfo.hash}`;\r\n\r\n        lettersInfo[letterIndex].line = lineIndex;\r\n        lettersInfo[letterIndex].char = character;\r\n        lettersInfo[letterIndex].hash = key;\r\n        lettersInfo[letterIndex].valid = shareLabelInfo.fontAtlas!.getLetter(key).valid;\r\n        lettersInfo[letterIndex].x = letterPosition.x;\r\n        lettersInfo[letterIndex].y = letterPosition.y;\r\n    }\r\n\r\n    private _getFirstWordLen (style: TextStyle, layout: TextLayout, text: string, startIndex: number, textLen: number): number {\r\n        let character = getSymbolAt(text, startIndex);\r\n        if (isUnicodeCJK(character)\r\n            || character === '\\n'\r\n            || isUnicodeSpace(character)) {\r\n            return 1;\r\n        }\r\n\r\n        const fontAtlas = shareLabelInfo.fontAtlas!;\r\n        let len = 1;\r\n        let letterDef = fontAtlas.getLetterDefinitionForChar(character, shareLabelInfo);\r\n        if (!letterDef) {\r\n            return len;\r\n        }\r\n        let nextLetterX = letterDef.xAdvance * style.bmfontScale + layout.spacingX;\r\n        let letterX = 0;\r\n        for (let index = startIndex + 1; index < textLen; ++index) {\r\n            character = getSymbolAt(text, index);\r\n\r\n            letterDef = fontAtlas.getLetterDefinitionForChar(character, shareLabelInfo);\r\n            if (!letterDef) {\r\n                break;\r\n            }\r\n            letterX = nextLetterX + letterDef.offsetX * style.bmfontScale;\r\n\r\n            if (letterX + letterDef.w * style.bmfontScale > layout.maxLineWidth\r\n                && !isUnicodeSpace(character)\r\n                && layout.maxLineWidth > 0) {\r\n                return len;\r\n            }\r\n            nextLetterX += letterDef.xAdvance * style.bmfontScale + layout.spacingX;\r\n            if (character === '\\n'\r\n                || isUnicodeSpace(character)\r\n                || isUnicodeCJK(character)) {\r\n                break;\r\n            }\r\n            len++;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    private _computeAlignmentOffset (style: TextStyle, layout: TextLayout, outputLayoutData: TextOutputLayoutData): void {\r\n        const { nodeContentSize } = outputLayoutData;\r\n        layout.linesOffsetX.length = 0;\r\n        layout.letterOffsetY = 0;\r\n\r\n        switch (layout.horizontalAlign) {\r\n        case HorizontalTextAlignment.LEFT:\r\n            for (let i = 0; i < layout.numberOfLines; ++i) {\r\n                layout.linesOffsetX.push(0);\r\n            }\r\n            break;\r\n        case HorizontalTextAlignment.CENTER:\r\n            for (let i = 0, l = layout.linesWidth.length; i < l; i++) {\r\n                layout.linesOffsetX.push((nodeContentSize.width - layout.linesWidth[i]) / 2);\r\n            }\r\n            break;\r\n        case HorizontalTextAlignment.RIGHT:\r\n            for (let i = 0, l = layout.linesWidth.length; i < l; i++) {\r\n                layout.linesOffsetX.push(nodeContentSize.width - layout.linesWidth[i]);\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n\r\n        // TOP\r\n        layout.letterOffsetY = nodeContentSize.height;\r\n        if (layout.verticalAlign !== VerticalTextAlignment.TOP as number) {\r\n            const blank = nodeContentSize.height - layout.textDesiredHeight\r\n            + layout.lineHeight * this._getFontScale(style, layout) - style.originFontSize * this._fontScale * style.bmfontScale;\r\n            if (layout.verticalAlign === VerticalTextAlignment.BOTTOM as number) {\r\n                // BOTTOM\r\n                layout.letterOffsetY -= blank;\r\n            } else {\r\n                // CENTER:\r\n                layout.letterOffsetY -= blank / 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getFontScale (style: TextStyle, layout: TextLayout): number {\r\n        return layout.overFlow === (Overflow.SHRINK as number) ? style.bmfontScale : 1;\r\n    }\r\n\r\n    private _isVerticalClamp (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        inputString: string,\r\n        process: TextProcessing,\r\n    ): boolean {\r\n        if (layout.textDesiredHeight > outputLayoutData.nodeContentSize.height) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private _isHorizontalClamp (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        inputString: string,\r\n        process: TextProcessing,\r\n    ): boolean {\r\n        let letterClamp = false;\r\n        const _string = inputString;\r\n        const _length = getSymbolLength(_string);\r\n        for (let ctr = 0, l = _length; ctr < l; ++ctr) {\r\n            const letterInfo = process._lettersInfo[ctr];\r\n            if (letterInfo.valid) {\r\n                const letterDef = shareLabelInfo.fontAtlas!.getLetterDefinitionForChar(letterInfo.char, shareLabelInfo);\r\n                if (!letterDef) {\r\n                    continue;\r\n                }\r\n\r\n                const px = letterInfo.x + letterDef.w * style.bmfontScale;\r\n                const lineIndex = letterInfo.line;\r\n                if (layout.textWidthTemp > 0) {\r\n                    const { nodeContentSize } = outputLayoutData;\r\n                    if (!layout.wrapping) {\r\n                        if (px > nodeContentSize.width) {\r\n                            letterClamp = true;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        const wordWidth = layout.linesWidth[lineIndex];\r\n                        if (wordWidth > nodeContentSize.width && (px > nodeContentSize.width || px < 0)) {\r\n                            letterClamp = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return letterClamp;\r\n    }\r\n\r\n    private _isHorizontalNeedShrink (layout: TextLayout, outputLayoutData: TextOutputLayoutData): boolean {\r\n        let wordWidth = 0;\r\n        for (let ctr = 0, l = layout.linesWidth.length; ctr < l; ++ctr) {\r\n            wordWidth = layout.linesWidth[ctr];\r\n            if (wordWidth > outputLayoutData.nodeContentSize.width) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _shrinkLabelToContentSize (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        inputString: string,\r\n        lambda: (style: TextStyle, layout: TextLayout, outputLayoutData: TextOutputLayoutData,\r\n            inputString: string, process: TextProcessing) => boolean,\r\n    ): void {\r\n        const fontSize = style.actualFontSize;\r\n\r\n        let left = 0;\r\n        let right = fontSize | 0;\r\n        let mid = 0;\r\n        while (left < right) {\r\n            mid = (left + right + 1) >> 1;\r\n\r\n            const newFontSize = mid;\r\n            if (newFontSize <= 0) {\r\n                break;\r\n            }\r\n\r\n            style.bmfontScale = newFontSize / (style.originFontSize * this._fontScale);\r\n\r\n            this._multilineTextWrap(style, layout, outputLayoutData, inputString, this._getFirstWordLen);\r\n\r\n            this._computeAlignmentOffset(style, layout, outputLayoutData);\r\n\r\n            if (lambda(style, layout, outputLayoutData, inputString, this)) {\r\n                right = mid - 1;\r\n            } else {\r\n                left = mid;\r\n            }\r\n        }\r\n\r\n        if (left >= 0) {\r\n            this._scaleFontSizeDown(style, layout, outputLayoutData, inputString, left);\r\n        }\r\n    }\r\n\r\n    private _scaleFontSizeDown (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        inputString: string,\r\n        fontSize: number,\r\n    ): void {\r\n        let shouldUpdateContent = true;\r\n        if (!fontSize) {\r\n            fontSize = 0.1;\r\n            shouldUpdateContent = false;\r\n        }\r\n        style.actualFontSize = fontSize;\r\n\r\n        if (shouldUpdateContent) {\r\n            this._updateFontScale(style);\r\n            this._multilineTextWrap(style, layout, outputLayoutData, inputString, this._getFirstWordLen);\r\n        }\r\n    }\r\n\r\n    private _updateQuads (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        outputRenderData: TextOutputRenderData,\r\n        inputString: string,\r\n        callback,\r\n    ): boolean {\r\n        const fontAtlas = shareLabelInfo.fontAtlas!;\r\n        const texture =  style.spriteFrame ? style.spriteFrame.texture : fontAtlas.getTexture();\r\n        const { nodeContentSize } = outputLayoutData;\r\n\r\n        const appX = outputRenderData.uiTransAnchorX * nodeContentSize.width;\r\n        const appY = outputRenderData.uiTransAnchorY * nodeContentSize.height;\r\n\r\n        const ret = true;\r\n        const _length = getSymbolLength(inputString);\r\n        for (let ctr = 0, l = _length; ctr < l; ++ctr) {\r\n            const letterInfo = this._lettersInfo[ctr];\r\n            if (!letterInfo.valid) { continue; }\r\n            const letterDef = fontAtlas.getLetter(letterInfo.hash);\r\n            if (!letterDef) {\r\n                warnID(16353);\r\n                continue;\r\n            }\r\n\r\n            const tmpRect = this._tmpRect;\r\n            tmpRect.height = letterDef.h;\r\n            tmpRect.width = letterDef.w;\r\n            tmpRect.x = letterDef.u;\r\n            tmpRect.y = letterDef.v;\r\n\r\n            let py = letterInfo.y + layout.letterOffsetY;\r\n\r\n            if (layout.textHeightTemp > 0) {\r\n                if (py > layout.tailoredTopY) {\r\n                    const clipTop = py - layout.tailoredTopY;\r\n                    tmpRect.y += clipTop;\r\n                    tmpRect.height -= clipTop;\r\n                    py -= clipTop;\r\n                }\r\n\r\n                if ((py - tmpRect.height * style.bmfontScale < layout.tailoredBottomY) && layout.overFlow === Overflow.CLAMP as number) {\r\n                    tmpRect.height = (py < layout.tailoredBottomY) ? 0 : (py - layout.tailoredBottomY) / style.bmfontScale;\r\n                }\r\n            }\r\n\r\n            const lineIndex = letterInfo.line;\r\n            const px = letterInfo.x + letterDef.w / 2 * style.bmfontScale + layout.linesOffsetX[lineIndex];\r\n\r\n            if (layout.textWidthTemp > 0) {\r\n                if (this._isHorizontalClamped(layout, outputLayoutData, px, lineIndex)) {\r\n                    if (layout.overFlow === Overflow.CLAMP as number) {\r\n                        tmpRect.width = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (tmpRect.height > 0 && tmpRect.width > 0) {\r\n                const isRotated = this._determineRect(style);\r\n                const letterPositionX = letterInfo.x + layout.linesOffsetX[letterInfo.line];\r\n                const offset = outputRenderData.quadCount;\r\n                outputRenderData.quadCount += 4; // Hard Code\r\n                this.updateQuatCount(outputRenderData);\r\n                callback(style, outputLayoutData, outputRenderData, offset, texture, tmpRect, isRotated, letterPositionX - appX, py - appY);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private _isHorizontalClamped (layout: TextLayout, outputLayoutData: TextOutputLayoutData, px: number, lineIndex: number): boolean {\r\n        const { nodeContentSize } = outputLayoutData;\r\n        const wordWidth = layout.linesWidth[lineIndex];\r\n        const letterOverClamp = (px > nodeContentSize.width || px < 0);\r\n\r\n        if (!layout.wrapping) {\r\n            return letterOverClamp;\r\n        } else {\r\n            return (wordWidth > nodeContentSize.width && letterOverClamp);\r\n        }\r\n    }\r\n\r\n    private _determineRect (style: TextStyle): boolean {\r\n        const _spriteFrame = style.spriteFrame;\r\n        if (!_spriteFrame) return false; // for char mode\r\n        const isRotated = _spriteFrame.isRotated();\r\n\r\n        const originalSize = _spriteFrame.getOriginalSize();\r\n        const rect = _spriteFrame.getRect();\r\n        const offset = _spriteFrame.getOffset();\r\n        const trimmedLeft = offset.x + (originalSize.width - rect.width) / 2;\r\n        const trimmedTop = offset.y - (originalSize.height - rect.height) / 2;\r\n        const tmpRect = this._tmpRect;\r\n        if (!isRotated) {\r\n            tmpRect.x += (rect.x - trimmedLeft);\r\n            tmpRect.y += (rect.y + trimmedTop);\r\n        } else {\r\n            const originalX = tmpRect.x;\r\n            tmpRect.x = rect.x + rect.height - tmpRect.y - tmpRect.height - trimmedTop;\r\n            tmpRect.y = originalX + rect.y - trimmedLeft;\r\n            if (tmpRect.y < 0) {\r\n                tmpRect.height += trimmedTop;\r\n            }\r\n        }\r\n\r\n        return isRotated;\r\n    }\r\n\r\n    // -------------------- Multiple Quad Mode Part --------------------\r\n}\r\n\r\nTextProcessing.instance = new TextProcessing();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport { IConfig, FontAtlas, type BitmapFont } from '../../assets/bitmap-font';\r\nimport { SpriteFrame } from '../../assets/sprite-frame';\r\nimport { Rect, errorID } from '../../../core';\r\nimport { Label, Overflow, CacheMode } from '../../components/label';\r\nimport { UITransform } from '../../framework/ui-transform';\r\nimport { LetterAtlas, shareLabelInfo } from './font-utils';\r\nimport { dynamicAtlasManager } from '../../utils/dynamic-atlas/atlas-manager';\r\nimport { TextProcessing } from './text-processing';\r\nimport { TextOutputLayoutData, TextOutputRenderData } from './text-output-data';\r\nimport { TextStyle } from './text-style';\r\nimport { TextLayout } from './text-layout';\r\nimport { view } from '../../../ui/view';\r\n\r\nconst _defaultLetterAtlas = new LetterAtlas(64, 64);\r\nconst _defaultFontAtlas = new FontAtlas(null);\r\n\r\nlet _comp: Label | null = null;\r\nlet _uiTrans: UITransform | null = null;\r\n\r\nlet _fntConfig: IConfig | null = null;\r\nlet _spriteFrame: SpriteFrame | null = null;\r\nlet QUAD_INDICES: Uint16Array | null = null;\r\n\r\nexport class BmfontUtils {\r\n    updateProcessingData (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        outputRenderData: TextOutputRenderData,\r\n        comp: Label,\r\n        trans: UITransform,\r\n    ): void {\r\n        style.fontSize = comp.fontSize;\r\n        style.actualFontSize = comp.fontSize;\r\n        style.originFontSize = _fntConfig ? _fntConfig.fontSize : comp.fontSize;\r\n        layout.horizontalAlign = comp.horizontalAlign;\r\n        layout.verticalAlign = comp.verticalAlign;\r\n        layout.spacingX = comp.spacingX;\r\n        const overflow = comp.overflow;\r\n        layout.overFlow = overflow;\r\n        layout.lineHeight = comp.lineHeight;\r\n\r\n        const nodeContentSize = outputLayoutData.nodeContentSize;\r\n        nodeContentSize.width = trans.width;\r\n        nodeContentSize.height = trans.height;\r\n\r\n        // should wrap text\r\n        if (overflow === Overflow.NONE) {\r\n            layout.wrapping = false;\r\n            nodeContentSize.width += shareLabelInfo.margin * 2;\r\n            nodeContentSize.height += shareLabelInfo.margin * 2;\r\n        } else if (overflow === Overflow.RESIZE_HEIGHT) {\r\n            layout.wrapping = true;\r\n            nodeContentSize.height += shareLabelInfo.margin * 2;\r\n        } else {\r\n            layout.wrapping = comp.enableWrapText;\r\n        }\r\n        outputRenderData.uiTransAnchorX = trans.anchorX;\r\n        outputRenderData.uiTransAnchorY = trans.anchorY;\r\n\r\n        shareLabelInfo.lineHeight = comp.lineHeight;\r\n        shareLabelInfo.fontSize = comp.fontSize;\r\n\r\n        style.spriteFrame = _spriteFrame;\r\n        style.fntConfig = _fntConfig;\r\n        style.fontFamily = shareLabelInfo.fontFamily;\r\n\r\n        style.color.set(comp.color);\r\n    }\r\n\r\n    updateRenderData (comp: Label): void {\r\n        if (!comp.renderData) {\r\n            return;\r\n        }\r\n\r\n        if (_comp === comp) { return; }\r\n\r\n        if (comp.renderData.vertDirty) {\r\n            _comp = comp;\r\n            _uiTrans = _comp.node._getUITransformComp()!;\r\n            const renderData = comp.renderData;\r\n\r\n            const processing = TextProcessing.instance;\r\n            const style = comp.textStyle;\r\n            const layout = comp.textLayout;\r\n            const outputLayoutData = comp.textLayoutData;\r\n            const outputRenderData = comp.textRenderData;\r\n            style.fontScale = view.getScaleX();\r\n            this._updateFontFamily(comp);\r\n\r\n            this.updateProcessingData(style, layout, outputLayoutData, outputRenderData, comp, _uiTrans);\r\n\r\n            this._updateLabelInfo(comp);\r\n\r\n            style.fontDesc = shareLabelInfo.fontDesc;\r\n\r\n            // TextProcessing\r\n            processing.processingString(true, style, layout, outputLayoutData, comp.string);\r\n            // generateVertex\r\n            outputRenderData.quadCount = 0;\r\n            processing.generateRenderInfo(\r\n                true,\r\n                style,\r\n                layout,\r\n                outputLayoutData,\r\n                outputRenderData,\r\n                comp.string,\r\n                this.generateVertexData,\r\n            );\r\n            let isResized = false;\r\n            if (renderData.dataLength !== outputRenderData.quadCount) {\r\n                this.resetRenderData(comp);\r\n                renderData.dataLength = outputRenderData.quadCount;\r\n                renderData.resize(renderData.dataLength, renderData.dataLength / 2 * 3);\r\n                isResized = true;\r\n            }\r\n            const datalist = renderData.data;\r\n            for (let i = 0, l = outputRenderData.quadCount; i < l; i++) {\r\n                datalist[i] = outputRenderData.vertexBuffer[i];\r\n            }\r\n\r\n            const indexCount = renderData.indexCount;\r\n            this.createQuadIndices(indexCount);\r\n            renderData.chunk.setIndexBuffer(QUAD_INDICES!);\r\n\r\n            _comp.actualFontSize = style.actualFontSize;\r\n            _uiTrans.setContentSize(outputLayoutData.nodeContentSize);\r\n            this.updateUVs(comp);// dirty need\r\n            // It is reasonable that the '_comp.node._uiProps.colorDirty' interface should be used.\r\n            // But this function is not called when just modifying the opacity.\r\n            // So the value of '_comp.node._uiProps.colorDirty' does not change.\r\n            // And _uiProps.colorDirty is synchronized with renderEntity.colorDirty.\r\n            if (JSB && (_comp.renderEntity.colorDirty || isResized)) {\r\n                this.updateColor(comp); // dirty need\r\n                _comp.node._uiProps.colorDirty = false;\r\n            }\r\n\r\n            renderData.vertDirty = false;\r\n            _comp = null;\r\n\r\n            this._resetProperties();\r\n        }\r\n\r\n        if (comp.spriteFrame) {\r\n            const renderData = comp.renderData;\r\n            renderData.updateRenderData(comp, comp.spriteFrame);\r\n        }\r\n    }\r\n\r\n    updateUVs (label: Label): void {\r\n        const renderData = label.renderData;\r\n        if (!renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        const vertexCount = renderData.vertexCount;\r\n        const stride = renderData.floatStride;\r\n        const dataList = renderData.data;\r\n        let vertexOffset = 3;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const vert = dataList[i];\r\n            vData[vertexOffset] = vert.u;\r\n            vData[vertexOffset + 1] = vert.v;\r\n            vertexOffset += stride;\r\n        }\r\n    }\r\n\r\n    updateColor (label: Label): void {\r\n        const renderData = label.renderData;\r\n        if (JSB && renderData) {\r\n            const vertexCount = renderData.vertexCount;\r\n            if (vertexCount === 0) return;\r\n            const vData = renderData.chunk.vb;\r\n            const stride = renderData.floatStride;\r\n            let colorOffset = 5;\r\n            const color = label.color;\r\n            const colorR = color.r / 255;\r\n            const colorG = color.g / 255;\r\n            const colorB = color.b / 255;\r\n            const colorA = color.a / 255;\r\n            for (let i = 0; i < vertexCount; i++) {\r\n                vData[colorOffset] = colorR;\r\n                vData[colorOffset + 1] = colorG;\r\n                vData[colorOffset + 2] = colorB;\r\n                vData[colorOffset + 3] = colorA;\r\n                colorOffset += stride;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected resetRenderData (comp: Label): void {\r\n        const renderData = comp.renderData;\r\n        if (!renderData) return;\r\n        renderData.dataLength = 0;\r\n        renderData.resize(0, 0);\r\n    }\r\n\r\n    // callBack function\r\n    protected generateVertexData (\r\n        style: TextStyle,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        outputRenderData: TextOutputRenderData,\r\n        offset: number,\r\n        spriteFrame: SpriteFrame,\r\n        rect: Rect,\r\n        rotated: boolean,\r\n        x: number,\r\n        y: number,\r\n    ): void {\r\n        const dataOffset = offset;\r\n        const scale = style.bmfontScale;\r\n\r\n        const dataList = outputRenderData.vertexBuffer;\r\n        const texW = spriteFrame.width;\r\n        const texH = spriteFrame.height;\r\n\r\n        const rectWidth = rect.width;\r\n        const rectHeight = rect.height;\r\n\r\n        let l = 0;\r\n        let b = 0;\r\n        let t = 0;\r\n        let r = 0;\r\n        if (!rotated) {\r\n            l = (rect.x) / texW;\r\n            r = (rect.x + rectWidth) / texW;\r\n            b = (rect.y + rectHeight) / texH;\r\n            t = (rect.y) / texH;\r\n\r\n            dataList[dataOffset].u = l;\r\n            dataList[dataOffset].v = b;\r\n            dataList[dataOffset + 1].u = r;\r\n            dataList[dataOffset + 1].v = b;\r\n            dataList[dataOffset + 2].u = l;\r\n            dataList[dataOffset + 2].v = t;\r\n            dataList[dataOffset + 3].u = r;\r\n            dataList[dataOffset + 3].v = t;\r\n        } else {\r\n            l = (rect.x) / texW;\r\n            r = (rect.x + rectHeight) / texW;\r\n            b = (rect.y + rectWidth) / texH;\r\n            t = (rect.y) / texH;\r\n\r\n            dataList[dataOffset].u = l;\r\n            dataList[dataOffset].v = t;\r\n            dataList[dataOffset + 1].u = l;\r\n            dataList[dataOffset + 1].v = b;\r\n            dataList[dataOffset + 2].u = r;\r\n            dataList[dataOffset + 2].v = t;\r\n            dataList[dataOffset + 3].u = r;\r\n            dataList[dataOffset + 3].v = b;\r\n        }\r\n\r\n        dataList[dataOffset].x = x;\r\n        dataList[dataOffset].y = y - rectHeight * scale;\r\n        dataList[dataOffset + 1].x = x + rectWidth * scale;\r\n        dataList[dataOffset + 1].y = y - rectHeight * scale;\r\n        dataList[dataOffset + 2].x = x;\r\n        dataList[dataOffset + 2].y = y;\r\n        dataList[dataOffset + 3].x = x + rectWidth * scale;\r\n        dataList[dataOffset + 3].y = y;\r\n    }\r\n\r\n    protected _updateFontFamily (comp: Label): void {\r\n        const fontAsset = comp.font as BitmapFont;\r\n        _spriteFrame = fontAsset.spriteFrame;\r\n        _fntConfig = fontAsset.fntConfig;\r\n        shareLabelInfo.fontAtlas = fontAsset.fontDefDictionary;\r\n        if (!shareLabelInfo.fontAtlas) {\r\n            if (comp.cacheMode === CacheMode.CHAR) {\r\n                shareLabelInfo.fontAtlas = _defaultLetterAtlas;\r\n            } else {\r\n                shareLabelInfo.fontAtlas = _defaultFontAtlas;\r\n            }\r\n        }\r\n\r\n        dynamicAtlasManager.packToDynamicAtlas(comp, _spriteFrame);\r\n        // TODO update material and uv\r\n    }\r\n\r\n    protected _updateLabelInfo (comp: Label): void {\r\n        // clear\r\n        shareLabelInfo.hash = '';\r\n        shareLabelInfo.margin = 0;\r\n    }\r\n\r\n    protected _resetProperties (): void {\r\n        _fntConfig = null;\r\n        _spriteFrame = null;\r\n        shareLabelInfo.hash = '';\r\n        shareLabelInfo.margin = 0;\r\n    }\r\n\r\n    protected createQuadIndices (indexCount: number): void {\r\n        if (indexCount % 6 !== 0) {\r\n            errorID(16308);\r\n            return;\r\n        }\r\n        const quadCount = indexCount / 6;\r\n        QUAD_INDICES = new Uint16Array(indexCount);\r\n        let offset = 0;\r\n        for (let i = 0; i < quadCount; i++) {\r\n            QUAD_INDICES[offset++] = 0 + i * 4;\r\n            QUAD_INDICES[offset++] = 1 + i * 4;\r\n            QUAD_INDICES[offset++] = 2 + i * 4;\r\n            QUAD_INDICES[offset++] = 1 + i * 4;\r\n            QUAD_INDICES[offset++] = 3 + i * 4;\r\n            QUAD_INDICES[offset++] = 2 + i * 4;\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Color } from '../../../core';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport type { Label } from '../../components/label';\r\nimport type { IAssembler } from '../../renderer/base';\r\nimport { fillMeshVertices3D } from '../utils';\r\nimport { BmfontUtils } from './bmfontUtils';\r\nimport type { RenderData } from '../../renderer/render-data';\r\n\r\nconst tempColor = new Color(255, 255, 255, 255);\r\n\r\n/**\r\n * bmfont 组装器\r\n * 可通过 `UI.bmfont` 获取该组装器。\r\n */\r\nclass Bmfont extends BmfontUtils implements IAssembler {\r\n    createData (comp: Label): RenderData {\r\n        const renderData = comp.requestRenderData();\r\n        renderData.resize(0, 0);\r\n        return renderData;\r\n    }\r\n\r\n    fillBuffers (comp: Label, renderer: IBatcher): void {\r\n        const node = comp.node;\r\n        tempColor.set(comp.color);\r\n        tempColor.a = node._uiProps.opacity * 255;\r\n        // Fill All\r\n        fillMeshVertices3D(node, renderer, comp.renderData, tempColor);\r\n    }\r\n}\r\n\r\nexport const bmfont = new Bmfont();\r\n","/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport type { Label } from '../../components';\r\nimport { IAssembler } from '../../renderer/base';\r\nimport { BmfontUtils } from './bmfontUtils';\r\nimport { shareLabelInfo, LetterAtlas, computeHash, LetterRenderTexture } from './font-utils';\r\n\r\nconst _atlasWidth = 1024;\r\nconst _atlasHeight = 1024;\r\nconst _isBold = false;\r\n\r\nlet _shareAtlas: LetterAtlas | null  = null;\r\n\r\nexport class LetterFont extends BmfontUtils {\r\n    getAssemblerData (): LetterRenderTexture | null {\r\n        if (!_shareAtlas) {\r\n            _shareAtlas = new LetterAtlas(_atlasWidth, _atlasHeight);\r\n        }\r\n\r\n        return _shareAtlas.getTexture() as LetterRenderTexture | null;\r\n    }\r\n\r\n    protected _updateFontFamily (comp: Label): void {\r\n        shareLabelInfo.fontAtlas = _shareAtlas;\r\n        shareLabelInfo.fontFamily = this._getFontFamily(comp);\r\n\r\n        // outline\r\n        const isOutlined = comp.enableOutline && comp.outlineWidth > 0;\r\n        if (isOutlined) {\r\n            shareLabelInfo.isOutlined = true;\r\n            shareLabelInfo.margin = comp.outlineWidth;\r\n            shareLabelInfo.out = comp.outlineColor.clone();\r\n            shareLabelInfo.out.a = comp.outlineColor.a * comp.color.a / 255.0;\r\n        } else {\r\n            shareLabelInfo.isOutlined = false;\r\n            shareLabelInfo.margin = 0;\r\n        }\r\n    }\r\n\r\n    protected _getFontFamily (comp: Label): string {\r\n        let fontFamily = 'Arial';\r\n        if (!comp.useSystemFont) {\r\n            if (comp.font) {\r\n                fontFamily = comp.font._nativeAsset || 'Arial';\r\n            }\r\n        } else {\r\n            fontFamily = comp.fontFamily || 'Arial';\r\n        }\r\n\r\n        return fontFamily;\r\n    }\r\n\r\n    protected _updateLabelInfo (comp: Label): void {\r\n        shareLabelInfo.fontDesc = this._getFontDesc();\r\n        shareLabelInfo.color.set(comp.color);\r\n        shareLabelInfo.hash = computeHash(shareLabelInfo);\r\n    }\r\n\r\n    protected _getFontDesc (): string {\r\n        let fontDesc = `${shareLabelInfo.fontSize.toString()}px `;\r\n        fontDesc += shareLabelInfo.fontFamily;\r\n        if (_isBold) {\r\n            fontDesc = `bold ${fontDesc}`;\r\n        }\r\n\r\n        return fontDesc;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport { Color } from '../../../core';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport type { Label } from '../../components/label';\r\nimport { fillMeshVertices3D } from '../utils';\r\nimport { LetterFont } from './letter-font';\r\nimport type { RenderData } from '../../renderer/render-data';\r\nimport type { IAssembler } from '../../renderer/base';\r\n\r\nconst tempColor = new Color(255, 255, 255, 255);\r\n\r\n/**\r\n * letter 组装器\r\n * 可通过 `UI.letter` 获取该组装器。\r\n */\r\nclass Letter extends LetterFont implements IAssembler {\r\n    createData (comp: Label): RenderData {\r\n        const renderData = comp.requestRenderData();\r\n        renderData.resize(0, 0);\r\n        return renderData;\r\n    }\r\n\r\n    fillBuffers (comp: Label, renderer: IBatcher): void {\r\n        if (!comp.renderData) {\r\n            return;\r\n        }\r\n\r\n        const node = comp.node;\r\n        tempColor.a = node._uiProps.opacity * 255;\r\n        // Fill All\r\n        fillMeshVertices3D(node, renderer, comp.renderData, tempColor);\r\n    }\r\n\r\n    updateColor (label: Label): void {\r\n        const renderData = label.renderData;\r\n        if (JSB && renderData) {\r\n            const vertexCount = renderData.vertexCount;\r\n            if (vertexCount === 0) return;\r\n            const vData = renderData.chunk.vb;\r\n            const stride = renderData.floatStride;\r\n            let colorOffset = 5;\r\n            for (let i = 0; i < vertexCount; i++) {\r\n                vData[colorOffset] = 1;\r\n                vData[colorOffset + 1] = 1;\r\n                vData[colorOffset + 2] = 1;\r\n                vData[colorOffset + 3] = 1;\r\n                colorOffset += stride;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const letter = new Letter();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { CacheMode, Label } from '../../components';\r\nimport type { ISharedLabelData } from './font-utils';\r\nimport type { UITransform } from '../../framework/ui-transform';\r\nimport { dynamicAtlasManager } from '../../utils/dynamic-atlas/atlas-manager';\r\nimport { TextProcessing } from './text-processing';\r\nimport type { TextOutputLayoutData, TextOutputRenderData } from './text-output-data';\r\nimport type { TextStyle } from './text-style';\r\nimport type { TextLayout } from './text-layout';\r\nimport { view } from '../../../ui/view';\r\nimport { approx } from '../../../core';\r\n\r\nconst Overflow = Label.Overflow;\r\n\r\nexport class TTFUtils {\r\n    updateProcessingData (\r\n        style: TextStyle,\r\n        layout: TextLayout,\r\n        outputLayoutData: TextOutputLayoutData,\r\n        outputRenderData: TextOutputRenderData,\r\n        comp: Label,\r\n        trans: UITransform,\r\n    ): void {\r\n        // font info // both\r\n        style.isSystemFontUsed = comp.useSystemFont;\r\n        style.fontSize = comp.fontSize;\r\n\r\n        // node info // both\r\n        outputLayoutData.nodeContentSize.width = outputLayoutData.canvasSize.width = trans.width;\r\n        outputLayoutData.nodeContentSize.height = outputLayoutData.canvasSize.height = trans.height;\r\n        // layout info\r\n        layout.lineHeight = comp.lineHeight; // both\r\n        layout.overFlow = comp.overflow; // layout only // but change render\r\n        if (comp.overflow === Overflow.NONE) {\r\n            layout.wrapping = false;\r\n        } else if (comp.overflow === Overflow.RESIZE_HEIGHT) {\r\n            layout.wrapping = true;\r\n        } else {\r\n            layout.wrapping = comp.enableWrapText; // layout only // but change render\r\n        }\r\n\r\n        // effect info // both\r\n        style.isBold = comp.isBold;\r\n        style.isItalic = comp.isItalic;\r\n        style.isUnderline = comp.isUnderline;\r\n        style.underlineHeight = comp.underlineHeight;\r\n\r\n        // outline// both\r\n        const isOutlined = comp.enableOutline && comp.outlineWidth > 0;\r\n        if (isOutlined) {\r\n            style.isOutlined = true;\r\n            style.outlineColor.set(comp.outlineColor);\r\n            style.outlineWidth = comp.outlineWidth;\r\n        } else {\r\n            style.isOutlined = false;\r\n        }\r\n\r\n        // shadow// both\r\n        const isShadow = comp.enableShadow && (comp.shadowBlur > 0 || !approx(comp.shadowOffset.x, 0) || !approx(comp.shadowOffset.y, 0));\r\n        if (isShadow) {\r\n            style.hasShadow = true;\r\n            style.shadowColor.set(comp.shadowColor);\r\n            style.shadowBlur = comp.shadowBlur;\r\n            style.shadowOffsetX = comp.shadowOffset.x;\r\n            style.shadowOffsetY = comp.shadowOffset.y;\r\n        } else {\r\n            style.hasShadow = false;\r\n        }\r\n\r\n        // render info\r\n        style.color.set(comp.color);// may opacity bug // render Only\r\n        outputRenderData.texture = comp.spriteFrame; // render Only\r\n        outputRenderData.uiTransAnchorX = trans.anchorX; // render Only\r\n        outputRenderData.uiTransAnchorY = trans.anchorY; // render Only\r\n\r\n        layout.horizontalAlign = comp.horizontalAlign; // render Only\r\n        layout.verticalAlign = comp.verticalAlign; // render Only\r\n    }\r\n\r\n    getAssemblerData (): ISharedLabelData {\r\n        const sharedLabelData = Label._canvasPool.get();\r\n        sharedLabelData.canvas.width = sharedLabelData.canvas.height = 1;\r\n        return sharedLabelData;\r\n    }\r\n\r\n    resetAssemblerData (assemblerData: ISharedLabelData): void {\r\n        if (assemblerData) {\r\n            Label._canvasPool.put(assemblerData);\r\n        }\r\n    }\r\n\r\n    updateRenderData (comp: Label): void {\r\n        const renderData = comp.renderData;\r\n        if (!renderData) { return; }\r\n\r\n        if (renderData.vertDirty) {\r\n            const trans = comp.node._getUITransformComp()!;\r\n            const processing = TextProcessing.instance;\r\n            const style = comp.textStyle;\r\n            const layout = comp.textLayout;\r\n            const outputLayoutData = comp.textLayoutData;\r\n            const outputRenderData = comp.textRenderData;\r\n            style.fontScale = view.getScaleX();\r\n            this.updateProcessingData(style, layout, outputLayoutData, outputRenderData, comp, trans);\r\n            // use canvas in assemblerData // to do to optimize\r\n            processing.setCanvasUsed(comp.assemblerData!.canvas, comp.assemblerData!.context);\r\n            style.fontFamily = this._updateFontFamily(comp);\r\n            this._resetDynamicAtlas(comp);\r\n\r\n            // TextProcessing\r\n            processing.processingString(false, style, layout, outputLayoutData, comp.string);\r\n            processing.generateRenderInfo(\r\n                false,\r\n                style,\r\n                layout,\r\n                outputLayoutData,\r\n                outputRenderData,\r\n                comp.string,\r\n                this.generateVertexData,\r\n            );\r\n\r\n            renderData.textureDirty = true;\r\n            this._calDynamicAtlas(comp, outputLayoutData);\r\n\r\n            comp.actualFontSize = style.actualFontSize;\r\n            trans.setContentSize(outputLayoutData.nodeContentSize);\r\n\r\n            const datalist = renderData.data;\r\n            const vertexBuffer = outputRenderData.vertexBuffer;\r\n            datalist[0] = vertexBuffer[0];\r\n            datalist[1] = vertexBuffer[1];\r\n            datalist[2] = vertexBuffer[2];\r\n            datalist[3] = vertexBuffer[3];\r\n\r\n            this.updateUVs(comp);\r\n            renderData.vertDirty = false;\r\n            comp.contentWidth = outputLayoutData.nodeContentSize.width;\r\n        }\r\n\r\n        if (comp.spriteFrame) {\r\n            const renderData = comp.renderData;\r\n            renderData.updateRenderData(comp, comp.spriteFrame);\r\n        }\r\n    }\r\n\r\n    // callBack function\r\n    generateVertexData (style: TextStyle, outputLayoutData: TextOutputLayoutData, outputRenderData: TextOutputRenderData): void {\r\n        const data = outputRenderData.vertexBuffer;\r\n        const nodeContentSize = outputLayoutData.nodeContentSize;\r\n        const width = nodeContentSize.width;\r\n        const height = nodeContentSize.height;\r\n        const appX = outputRenderData.uiTransAnchorX * width;\r\n        const appY = outputRenderData.uiTransAnchorY * height;\r\n\r\n        data[0].x = -appX; // l\r\n        data[0].y = -appY; // b\r\n        data[1].x = width - appX; // r\r\n        data[1].y = -appY; // b\r\n        data[2].x = -appX; // l\r\n        data[2].y = height - appY; // t\r\n        data[3].x = width - appX; // r\r\n        data[3].y = height - appY; // t\r\n    }\r\n\r\n    updateVertexData (comp: Label): void {\r\n        // no needs to update vertex data\r\n    }\r\n\r\n    updateUVs (comp: Label): void {\r\n        // no needs to update uv data\r\n    }\r\n\r\n    _updateFontFamily (comp: Label): string {\r\n        let _fontFamily = '';\r\n        if (!comp.useSystemFont) {\r\n            if (comp.font) {\r\n                _fontFamily = comp.font._nativeAsset || 'Arial';\r\n            } else {\r\n                _fontFamily = 'Arial';\r\n            }\r\n        } else {\r\n            _fontFamily = comp.fontFamily || 'Arial';\r\n        }\r\n        return _fontFamily;\r\n    }\r\n\r\n    _calDynamicAtlas (comp: Label, outputLayoutData: TextOutputLayoutData): void {\r\n        if (comp.cacheMode !== CacheMode.BITMAP || outputLayoutData.canvasSize.width <= 0 || outputLayoutData.canvasSize.height <= 0) return;\r\n        const frame = comp.ttfSpriteFrame!;\r\n        dynamicAtlasManager.packToDynamicAtlas(comp, frame);\r\n        // TODO update material and uv\r\n    }\r\n\r\n    _resetDynamicAtlas (comp: Label): void {\r\n        if (comp.cacheMode !== CacheMode.BITMAP) return;\r\n        const frame = comp.ttfSpriteFrame!;\r\n        dynamicAtlasManager.deleteAtlasSpriteFrame(frame);\r\n        frame._resetDynamicAtlasFrame();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * ui-assembler 相关模块\r\n * @module ui-assembler\r\n */\r\n\r\nimport { Color } from '../../../core';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport type { Label } from '../../components/label';\r\nimport type { IAssembler } from '../../renderer/base';\r\nimport { TTFUtils } from './ttfUtils';\r\nimport type { IRenderData, RenderData } from '../../renderer/render-data';\r\n\r\nconst WHITE = Color.WHITE.clone();\r\nconst QUAD_INDICES = Uint16Array.from([0, 1, 2, 1, 3, 2]);\r\n\r\n/**\r\n * ttf 组装器\r\n * 可通过 `UI.ttf` 获取该组装器。\r\n */\r\nexport class TTF extends TTFUtils implements IAssembler {\r\n    createData (comp: Label): RenderData {\r\n        const renderData = comp.requestRenderData()!;\r\n\r\n        renderData.dataLength = 4;\r\n        renderData.resize(4, 6);\r\n\r\n        // hard code\r\n        comp.textRenderData.quadCount = 4;\r\n\r\n        const vData = renderData.chunk.vb;\r\n\r\n        const stride = renderData.floatStride;\r\n        const uvs = [\r\n            { u: 0, v: 1 },\r\n            { u: 1, v: 1 },\r\n            { u: 0, v: 0 },\r\n            { u: 1, v: 0 },\r\n        ];\r\n        let uvOffset = 3;\r\n        for (let i = 0, len = renderData.dataLength; i < len; ++i) {\r\n            vData[uvOffset] = uvs[i].u;\r\n            vData[uvOffset + 1] = uvs[i].v;\r\n            uvOffset += stride;\r\n        }\r\n        let offset = 5;\r\n        for (let i = 0; i < renderData.dataLength; i++) {\r\n            Color.toArray(vData, WHITE, offset);\r\n            offset += stride;\r\n        }\r\n        renderData.chunk.setIndexBuffer(QUAD_INDICES);\r\n        return renderData;\r\n    }\r\n\r\n    fillBuffers (comp: Label, renderer: IBatcher): void {\r\n        const renderData = comp.renderData;\r\n        if (!renderData) return;\r\n        const chunk = renderData.chunk;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const node = comp.node;\r\n\r\n        const vData = chunk.vb;\r\n\r\n        // normal version\r\n        const m = node.worldMatrix;\r\n        const stride = renderData.floatStride;\r\n        let offset = 0;\r\n        const length = dataList.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const curData = dataList[i];\r\n            const x = curData.x;\r\n            const y = curData.y;\r\n            let rhw = m.m03 * x + m.m07 * y + m.m15;\r\n            rhw = rhw ? 1 / rhw : 1;\r\n\r\n            offset = i * stride;\r\n            vData[offset + 0] = (m.m00 * x + m.m04 * y + m.m12) * rhw;\r\n            vData[offset + 1] = (m.m01 * x + m.m05 * y + m.m13) * rhw;\r\n            vData[offset + 2] = (m.m02 * x + m.m06 * y + m.m14) * rhw;\r\n        }\r\n\r\n        // quick version\r\n        const vid = chunk.vertexOffset;\r\n        const meshBuffer = chunk.meshBuffer;\r\n        const ib = chunk.meshBuffer.iData;\r\n        let indexOffset = meshBuffer.indexOffset;\r\n        ib[indexOffset++] = vid;\r\n        ib[indexOffset++] = vid + 1;\r\n        ib[indexOffset++] = vid + 2;\r\n        ib[indexOffset++] = vid + 2;\r\n        ib[indexOffset++] = vid + 1;\r\n        ib[indexOffset++] = vid + 3;\r\n        meshBuffer.indexOffset += 6;\r\n        // slow version\r\n        // const chunk = renderData.chunk;\r\n        // renderer.getBufferAccessor().appendIndices(chunk);\r\n    }\r\n\r\n    updateVertexData (comp: Label): void {\r\n        const renderData = comp.renderData;\r\n        if (!renderData) {\r\n            return;\r\n        }\r\n        const uiTrans = comp.node._getUITransformComp()!;\r\n        const width = uiTrans.width;\r\n        const height = uiTrans.height;\r\n        const appX = uiTrans.anchorX * width;\r\n        const appY = uiTrans.anchorY * height;\r\n\r\n        const data = renderData.data;\r\n        data[0].x = -appX; // l\r\n        data[0].y = -appY; // b\r\n        data[1].x = width - appX; // r\r\n        data[1].y = -appY; // b\r\n        data[2].x = -appX; // l\r\n        data[2].y = height - appY; // t\r\n        data[3].x = width - appX; // r\r\n        data[3].y = height - appY; // t\r\n    }\r\n\r\n    updateUVs (comp: Label): void {\r\n        const renderData = comp.renderData;\r\n        if (!renderData || !comp.ttfSpriteFrame) {\r\n            return;\r\n        }\r\n        const vData = renderData.chunk.vb;\r\n        const uv = comp.ttfSpriteFrame.uv;\r\n        const stride = renderData.floatStride;\r\n        let uvOffset = 3;\r\n        for (let i = 0; i < renderData.dataLength; ++i) {\r\n            const index = i * 2;\r\n            vData[uvOffset] = uv[index];\r\n            vData[uvOffset + 1] = uv[index + 1];\r\n            uvOffset += stride;\r\n        }\r\n    }\r\n\r\n    updateColor (comp: Label): void {\r\n        // no needs to update color\r\n    }\r\n}\r\n\r\nexport const ttf = new TTF();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BitmapFont } from '../../assets';\r\nimport { CacheMode, Label } from '../../components';\r\nimport type { IAssembler, IAssemblerManager } from '../../renderer/base';\r\nimport { bmfont } from './bmfont';\r\nimport { letter } from './letter';\r\nimport { ttf } from './ttf';\r\nimport { TextProcessing } from './text-processing';\r\n\r\nconst labelAssembler: IAssemblerManager = {\r\n    getAssembler (comp: Label): IAssembler {\r\n        let assembler: IAssembler = ttf;\r\n\r\n        if (comp.font instanceof BitmapFont) {\r\n            assembler = bmfont;\r\n        } else if (comp.cacheMode === CacheMode.CHAR) {\r\n            assembler = letter;\r\n        }\r\n\r\n        return assembler;\r\n    },\r\n\r\n    // Skip invalid labels (without own _assembler)\r\n    // updateRenderData(label) {\r\n    //     return label.__allocedDatas;\r\n    // }\r\n};\r\n\r\nexport {\r\n    labelAssembler,\r\n    ttf,\r\n    bmfont,\r\n    letter,\r\n    TextProcessing,\r\n};\r\n\r\nLabel.Assembler = labelAssembler;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport {  Mat4, errorID } from '../../../core';\r\nimport type { IRenderData, RenderData } from '../../renderer/render-data';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport { Sprite } from '../../components';\r\nimport type { IAssembler } from '../../renderer/base';\r\nimport { dynamicAtlasManager } from '../../utils/dynamic-atlas/atlas-manager';\r\nimport type { StaticVBChunk } from '../../renderer/static-vb-accessor';\r\n\r\nconst FillType = Sprite.FillType;\r\nconst m = new Mat4();\r\nconst QUAD_INDICES = Uint16Array.from([0, 1, 2, 1, 3, 2]);\r\n\r\n/**\r\n * barFilled 组装器\r\n * 可通过 `UI.barFilled` 获取该组装器。\r\n */\r\nclass BarFilled implements IAssembler {\r\n    updateRenderData (sprite: Sprite): void {\r\n        const frame = sprite.spriteFrame;\r\n        dynamicAtlasManager.packToDynamicAtlas(sprite, frame);\r\n        // TODO update material and uv\r\n\r\n        const renderData = sprite.renderData;\r\n        if (renderData && frame) {\r\n            const vertDirty = renderData.vertDirty;\r\n\r\n            if (!vertDirty) {\r\n                return;\r\n            }\r\n\r\n            let fillStart = sprite.fillStart;\r\n            let fillRange = sprite.fillRange;\r\n            if (fillRange < 0) {\r\n                fillStart += fillRange;\r\n                fillRange = -fillRange;\r\n            }\r\n            fillRange = fillStart + fillRange;\r\n            fillStart = fillStart > 1.0 ? 1.0 : fillStart;\r\n            fillStart = fillStart < 0.0 ? 0.0 : fillStart;\r\n            fillRange = fillRange > 1.0 ? 1.0 : fillRange;\r\n            fillRange = fillRange < 0.0 ? 0.0 : fillRange;\r\n            fillRange -= fillStart;\r\n            fillRange = fillRange < 0 ? 0 : fillRange;\r\n            let fillEnd = fillStart + fillRange;\r\n            fillEnd = fillEnd > 1 ? 1 : fillEnd;\r\n\r\n            this.updateUVs(sprite, fillStart, fillEnd); // need Dirty\r\n            this.updateVertexData(sprite, fillStart, fillEnd);\r\n            renderData.updateRenderData(sprite, frame);\r\n        }\r\n    }\r\n\r\n    updateUVs (sprite: Sprite, fillStart: number, fillEnd: number): void {\r\n        const spriteFrame = sprite.spriteFrame!;\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n\r\n        // build uvs\r\n        const atlasWidth = spriteFrame.width;\r\n        const atlasHeight = spriteFrame.height;\r\n        const textureRect = spriteFrame.rect;\r\n        // uv computation should take spriteSheet into account.\r\n        let ul = 0;\r\n        let vb = 0;\r\n        let ur = 0;\r\n        let vt = 0;\r\n        let quadUV0 = 0;\r\n        let quadUV1 = 0;\r\n        let quadUV2 = 0;\r\n        let quadUV3 = 0;\r\n        let quadUV4 = 0;\r\n        let quadUV5 = 0;\r\n        let quadUV6 = 0;\r\n        let quadUV7 = 0;\r\n        if (spriteFrame.isRotated()) {\r\n            ul = (textureRect.x) / atlasWidth;\r\n            vb = (textureRect.y + textureRect.width) / atlasHeight;\r\n            ur = (textureRect.x + textureRect.height) / atlasWidth;\r\n            vt = (textureRect.y) / atlasHeight;\r\n\r\n            quadUV0 = quadUV2 = ul;\r\n            quadUV4 = quadUV6 = ur;\r\n            quadUV3 = quadUV7 = vb;\r\n            quadUV1 = quadUV5 = vt;\r\n        } else {\r\n            ul = (textureRect.x) / atlasWidth;\r\n            vb = (textureRect.y + textureRect.height) / atlasHeight;\r\n            ur = (textureRect.x + textureRect.width) / atlasWidth;\r\n            vt = (textureRect.y) / atlasHeight;\r\n\r\n            quadUV0 = quadUV4 = ul;\r\n            quadUV2 = quadUV6 = ur;\r\n            quadUV1 = quadUV3 = vb;\r\n            quadUV5 = quadUV7 = vt;\r\n        }\r\n\r\n        const stride = renderData.floatStride;\r\n        let uvOffset = 3;\r\n        switch (sprite.fillType) {\r\n        case FillType.HORIZONTAL:\r\n            vData[uvOffset] = quadUV0 + (quadUV2 - quadUV0) * fillStart;\r\n            vData[uvOffset + 1] = quadUV1 + (quadUV3 - quadUV1) * fillStart;\r\n            uvOffset += stride;\r\n            vData[uvOffset] = quadUV0 + (quadUV2 - quadUV0) * fillEnd;\r\n            vData[uvOffset + 1] = quadUV1 + (quadUV3 - quadUV1) * fillEnd;\r\n            uvOffset += stride;\r\n            vData[uvOffset] = quadUV4 + (quadUV6 - quadUV4) * fillStart;\r\n            vData[uvOffset + 1] = quadUV5 + (quadUV7 - quadUV5) * fillStart;\r\n            uvOffset += stride;\r\n            vData[uvOffset] = quadUV4 + (quadUV6 - quadUV4) * fillEnd;\r\n            vData[uvOffset + 1] = quadUV5 + (quadUV7 - quadUV5) * fillEnd;\r\n            break;\r\n        case FillType.VERTICAL:\r\n            vData[uvOffset] = quadUV0 + (quadUV4 - quadUV0) * fillStart;\r\n            vData[uvOffset + 1] = quadUV1 + (quadUV5 - quadUV1) * fillStart;\r\n            uvOffset += stride;\r\n            vData[uvOffset] = quadUV2 + (quadUV6 - quadUV2) * fillStart;\r\n            vData[uvOffset + 1] = quadUV3 + (quadUV7 - quadUV3) * fillStart;\r\n            uvOffset += stride;\r\n            vData[uvOffset] = quadUV0 + (quadUV4 - quadUV0) * fillEnd;\r\n            vData[uvOffset + 1] = quadUV1 + (quadUV5 - quadUV1) * fillEnd;\r\n            uvOffset += stride;\r\n            vData[uvOffset] = quadUV2 + (quadUV6 - quadUV2) * fillEnd;\r\n            vData[uvOffset + 1] = quadUV3 + (quadUV7 - quadUV3) * fillEnd;\r\n            break;\r\n        default:\r\n            errorID(2626);\r\n            break;\r\n        }\r\n    }\r\n\r\n    private updateVertexData (sprite: Sprite, fillStart: number, fillEnd: number): void {\r\n        const renderData: RenderData | null = sprite.renderData;\r\n        if (!renderData) return;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const uiTrans = sprite.node._getUITransformComp()!;\r\n        const width = uiTrans.width;\r\n        const height = uiTrans.height;\r\n        const appX = uiTrans.anchorX * width;\r\n        const appY = uiTrans.anchorY * height;\r\n\r\n        let l = -appX;\r\n        let b = -appY;\r\n        let r = width - appX;\r\n        let t = height - appY;\r\n\r\n        let progressStart = 0;\r\n        let progressEnd = 0;\r\n        switch (sprite.fillType) {\r\n        case FillType.HORIZONTAL:\r\n            progressStart = l + (r - l) * fillStart;\r\n            progressEnd = l + (r - l) * fillEnd;\r\n\r\n            l = progressStart;\r\n            r = progressEnd;\r\n            break;\r\n        case FillType.VERTICAL:\r\n            progressStart = b + (t - b) * fillStart;\r\n            progressEnd = b + (t - b) * fillEnd;\r\n\r\n            b = progressStart;\r\n            t = progressEnd;\r\n            break;\r\n        default:\r\n            errorID(2626);\r\n            break;\r\n        }\r\n\r\n        dataList[0].x = l;\r\n        dataList[0].y = b;\r\n        dataList[1].x = r;\r\n        dataList[1].y = b;\r\n        dataList[2].x = l;\r\n        dataList[2].y = t;\r\n        dataList[3].x = r;\r\n        dataList[3].y = t;\r\n    }\r\n\r\n    createData (sprite: Sprite): RenderData {\r\n        const renderData: RenderData | null = sprite.requestRenderData();\r\n        // 0-4 for local vertex\r\n        renderData.dataLength = 4;\r\n        renderData.resize(4, 6);\r\n        renderData.chunk.setIndexBuffer(QUAD_INDICES);\r\n\r\n        // not need\r\n        renderData.data.forEach((data) => { data.z = 0; });\r\n        return renderData;\r\n    }\r\n\r\n    private updateWorldVertexData (sprite: Sprite, chunk: StaticVBChunk): void {\r\n        const node = sprite.node;\r\n        node.getWorldMatrix(m);\r\n\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const stride = renderData.floatStride;\r\n        const dataList = sprite.renderData.data;\r\n        const vData = chunk.vb;\r\n\r\n        let offset = 0;\r\n        for (let i = 0; i < 4; i++) {\r\n            const local = dataList[i];\r\n            const x = local.x;\r\n            const y = local.y;\r\n            let rhw = m.m03 * x + m.m07 * y + m.m15;\r\n            rhw = rhw ? 1 / rhw : 1;\r\n\r\n            offset = i * stride;\r\n            vData[offset] = (m.m00 * x + m.m04 * y + m.m12) * rhw;\r\n            vData[offset + 1] = (m.m01 * x + m.m05 * y + m.m13) * rhw;\r\n            vData[offset + 2] = (m.m02 * x + m.m06 * y + m.m14) * rhw;\r\n        }\r\n    }\r\n\r\n    fillBuffers (sprite: Sprite, renderer: IBatcher): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const chunk = renderData.chunk;\r\n        if (sprite._flagChangedVersion !== sprite.node.flagChangedVersion || renderData.vertDirty) {\r\n            this.updateWorldVertexData(sprite, chunk);\r\n            renderData.vertDirty = false;\r\n            sprite._flagChangedVersion = sprite.node.flagChangedVersion;\r\n        }\r\n\r\n        const bid = chunk.bufferId;\r\n        const vid = chunk.vertexOffset;\r\n        const meshBuffer = chunk.meshBuffer;\r\n        const ib = chunk.meshBuffer.iData;\r\n        let indexOffset = meshBuffer.indexOffset;\r\n        ib[indexOffset++] = vid;\r\n        ib[indexOffset++] = vid + 1;\r\n        ib[indexOffset++] = vid + 2;\r\n        ib[indexOffset++] = vid + 2;\r\n        ib[indexOffset++] = vid + 1;\r\n        ib[indexOffset++] = vid + 3;\r\n        meshBuffer.indexOffset += 6;\r\n    }\r\n\r\n    updateColor (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        const stride = renderData.floatStride;\r\n        let colorOffset = 5;\r\n        const color = sprite.color;\r\n        const colorR = color.r / 255;\r\n        const colorG = color.g / 255;\r\n        const colorB = color.b / 255;\r\n        const colorA = sprite.node._uiProps.opacity;\r\n        for (let i = 0; i < 4; i++) {\r\n            vData[colorOffset] = colorR;\r\n            vData[colorOffset + 1] = colorG;\r\n            vData[colorOffset + 2] = colorB;\r\n            vData[colorOffset + 3] = colorA;\r\n\r\n            colorOffset += stride;\r\n        }\r\n    }\r\n}\r\n\r\nexport const barFilled = new BarFilled();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport type { SpriteFrame } from '../../assets';\r\nimport { Mat4, Vec2 } from '../../../core';\r\nimport type { IRenderData, RenderData } from '../../renderer/render-data';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport type { Sprite } from '../../components';\r\nimport type { IAssembler } from '../../renderer/base';\r\nimport { dynamicAtlasManager } from '../../utils/dynamic-atlas/atlas-manager';\r\nimport type { StaticVBChunk } from '../../renderer/static-vb-accessor';\r\n\r\nconst PI_2 = Math.PI * 2;\r\nconst EPSILON = 1e-6;\r\nconst m = new Mat4();\r\n\r\nconst _vertPos: Vec2[] = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\r\nconst _vertices: number[] = new Array(4);\r\nconst _uvs: number[] = new Array(8);\r\nconst _intersectPoint_1: Vec2[] = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\r\nconst _intersectPoint_2: Vec2[] = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\r\nconst _center = new Vec2();\r\nconst _triangles: Vec2[] = [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\r\nlet QUAD_INDICES: Uint16Array | null = null;\r\n\r\nfunction _calcIntersectedPoints (\r\n    left: number,\r\n    right: number,\r\n    bottom: number,\r\n    top: number,\r\n    center: Vec2,\r\n    angle: number,\r\n    intersectPoints: Vec2[],\r\n): void {\r\n    // left bottom, right, top\r\n    let sinAngle = Math.sin(angle);\r\n    sinAngle = Math.abs(sinAngle) > EPSILON ? sinAngle : 0;\r\n    let cosAngle = Math.cos(angle);\r\n    cosAngle = Math.abs(cosAngle) > EPSILON ? cosAngle : 0;\r\n    let tanAngle = 0;\r\n    let cotAngle = 0;\r\n    if (cosAngle !== 0) {\r\n        tanAngle = sinAngle / cosAngle;\r\n        // calculate right and left\r\n        if ((left - center.x) * cosAngle > 0) {\r\n            const yLeft = center.y + tanAngle * (left - center.x);\r\n            intersectPoints[0].x = left;\r\n            intersectPoints[0].y = yLeft;\r\n        }\r\n        if ((right - center.x) * cosAngle > 0) {\r\n            const yRight = center.y + tanAngle * (right - center.x);\r\n\r\n            intersectPoints[2].x = right;\r\n            intersectPoints[2].y = yRight;\r\n        }\r\n    }\r\n\r\n    if (sinAngle !== 0) {\r\n        cotAngle = cosAngle / sinAngle;\r\n        // calculate  top and bottom\r\n        if ((top - center.y) * sinAngle > 0) {\r\n            const xTop = center.x + cotAngle * (top - center.y);\r\n            intersectPoints[3].x = xTop;\r\n            intersectPoints[3].y = top;\r\n        }\r\n        if ((bottom - center.y) * sinAngle > 0) {\r\n            const xBottom = center.x + cotAngle * (bottom - center.y);\r\n            intersectPoints[1].x = xBottom;\r\n            intersectPoints[1].y = bottom;\r\n        }\r\n    }\r\n}\r\n\r\nfunction _calculateVertices (sprite: Sprite): void {\r\n    const uiTrans = sprite.node._getUITransformComp()!;\r\n    const width = uiTrans.width;\r\n    const height = uiTrans.height;\r\n    const appX = uiTrans.anchorX * width;\r\n    const appY = uiTrans.anchorY * height;\r\n\r\n    const l = -appX;\r\n    const b = -appY;\r\n    const r = width - appX;\r\n    const t = height - appY;\r\n\r\n    const vertices = _vertices;\r\n    vertices[0] = l;\r\n    vertices[1] = b;\r\n    vertices[2] = r;\r\n    vertices[3] = t;\r\n\r\n    const fillCenter = sprite.fillCenter;\r\n    const cx = _center.x = Math.min(Math.max(0, fillCenter.x), 1) * (r - l) + l;\r\n    const cy = _center.y = Math.min(Math.max(0, fillCenter.y), 1) * (t - b) + b;\r\n\r\n    _vertPos[0].x = _vertPos[3].x = l;\r\n    _vertPos[1].x = _vertPos[2].x = r;\r\n    _vertPos[0].y = _vertPos[1].y = b;\r\n    _vertPos[2].y = _vertPos[3].y = t;\r\n\r\n    _triangles.forEach((num) => {\r\n        Vec2.set(num, 0, 0);\r\n    });\r\n\r\n    if (cx !== vertices[0]) {\r\n        Vec2.set(_triangles[0], 3, 0);\r\n    }\r\n    if (cx !== vertices[2]) {\r\n        Vec2.set(_triangles[2], 1, 2);\r\n    }\r\n    if (cy !== vertices[1]) {\r\n        Vec2.set(_triangles[1], 0, 1);\r\n    }\r\n    if (cy !== vertices[3]) {\r\n        Vec2.set(_triangles[3], 2, 3);\r\n    }\r\n}\r\n\r\nfunction _calculateUVs (spriteFrame: SpriteFrame): void {\r\n    const atlasWidth = spriteFrame.width;\r\n    const atlasHeight = spriteFrame.height;\r\n    const textureRect = spriteFrame.getRect();\r\n\r\n    let u0 = 0;\r\n    let u1 = 0;\r\n    let v0 = 0;\r\n    let v1 = 0;\r\n    const uvs = _uvs;\r\n\r\n    if (spriteFrame.isRotated()) {\r\n        u0 = (textureRect.x) / atlasWidth;\r\n        u1 = (textureRect.x + textureRect.height) / atlasWidth;\r\n\r\n        v0 = (textureRect.y) / atlasHeight;\r\n        v1 = (textureRect.y + textureRect.width) / atlasHeight;\r\n\r\n        uvs[0] = uvs[2] = u0;\r\n        uvs[4] = uvs[6] = u1;\r\n        uvs[3] = uvs[7] = v1;\r\n        uvs[1] = uvs[5] = v0;\r\n    } else {\r\n        u0 = (textureRect.x) / atlasWidth;\r\n        u1 = (textureRect.x + textureRect.width) / atlasWidth;\r\n\r\n        v0 = (textureRect.y) / atlasHeight;\r\n        v1 = (textureRect.y + textureRect.height) / atlasHeight;\r\n\r\n        uvs[0] = uvs[4] = u0;\r\n        uvs[2] = uvs[6] = u1;\r\n        uvs[1] = uvs[3] = v1;\r\n        uvs[5] = uvs[7] = v0;\r\n    }\r\n}\r\n\r\nfunction _getVertAngle (start: Vec2, end: Vec2): number {\r\n    const placementX = end.x - start.x;\r\n    const placementY = end.y - start.y;\r\n\r\n    if (placementX === 0 && placementY === 0) {\r\n        return 0;\r\n    } else if (placementX === 0) {\r\n        if (placementY > 0) {\r\n            return Math.PI * 0.5;\r\n        } else {\r\n            return Math.PI * 1.5;\r\n        }\r\n    } else {\r\n        let angle = Math.atan(placementY / placementX);\r\n        if (placementX < 0) {\r\n            angle += Math.PI;\r\n        }\r\n\r\n        return angle;\r\n    }\r\n}\r\n\r\nfunction _generateTriangle (dataList: IRenderData[], offset: number, vert0: Vec2, vert1: Vec2, vert2: Vec2): void {\r\n    const vertices = _vertices;\r\n    const v0x = vertices[0];\r\n    const v0y = vertices[1];\r\n    const v1x = vertices[2];\r\n    const v1y = vertices[3];\r\n\r\n    dataList[offset].x = vert0.x;\r\n    dataList[offset].y = vert0.y;\r\n    dataList[offset + 1].x = vert1.x;\r\n    dataList[offset + 1].y = vert1.y;\r\n    dataList[offset + 2].x = vert2.x;\r\n    dataList[offset + 2].y = vert2.y;\r\n\r\n    let progressX = 0;\r\n    let progressY = 0;\r\n    progressX = (vert0.x - v0x) / (v1x - v0x);\r\n    progressY = (vert0.y - v0y) / (v1y - v0y);\r\n    _generateUV(progressX, progressY, dataList, offset);\r\n\r\n    progressX = (vert1.x - v0x) / (v1x - v0x);\r\n    progressY = (vert1.y - v0y) / (v1y - v0y);\r\n    _generateUV(progressX, progressY, dataList, offset + 1);\r\n\r\n    progressX = (vert2.x - v0x) / (v1x - v0x);\r\n    progressY = (vert2.y - v0y) / (v1y - v0y);\r\n    _generateUV(progressX, progressY, dataList, offset + 2);\r\n}\r\n\r\nfunction _generateUV (progressX: number, progressY: number, data: IRenderData[], offset: number): void {\r\n    const uvs = _uvs;\r\n    const px1 = uvs[0] + (uvs[2] - uvs[0]) * progressX;\r\n    const px2 = uvs[4] + (uvs[6] - uvs[4]) * progressX;\r\n    const py1 = uvs[1] + (uvs[3] - uvs[1]) * progressX;\r\n    const py2 = uvs[5] + (uvs[7] - uvs[5]) * progressX;\r\n    const uv = data[offset];\r\n    uv.u = px1 + (px2 - px1) * progressY;\r\n    uv.v = py1 + (py2 - py1) * progressY;\r\n}\r\n\r\n/**\r\n * radialFilled 组装器\r\n * 可通过 `UI.radialFilled` 获取该组装器。\r\n */\r\nclass RadialFilled implements IAssembler {\r\n    createData (sprite: Sprite): RenderData {\r\n        return sprite.requestRenderData();\r\n    }\r\n\r\n    updateRenderData (sprite: Sprite): void {\r\n        const frame = sprite.spriteFrame;\r\n        dynamicAtlasManager.packToDynamicAtlas(sprite, frame);\r\n        // TODO update material and uv\r\n        this.updateUVs(sprite);\r\n\r\n        const renderData = sprite.renderData;\r\n        if (renderData && frame) {\r\n            if (!renderData.vertDirty) {\r\n                return;\r\n            }\r\n            const dataList = renderData.data;\r\n\r\n            let fillStart = sprite.fillStart;\r\n            let fillRange = sprite.fillRange;\r\n            if (fillRange < 0) {\r\n                fillStart += fillRange;\r\n                fillRange = -fillRange;\r\n            }\r\n            // do round fill start [0,1), include 0, exclude 1\r\n            while (fillStart >= 1.0) { fillStart -= 1.0; }\r\n            while (fillStart < 0.0) { fillStart += 1.0; }\r\n            fillStart *= PI_2;\r\n            fillRange *= PI_2;\r\n            const fillEnd = fillStart + fillRange;\r\n            // build vertices\r\n            _calculateVertices(sprite);\r\n            // build uvs\r\n            _calculateUVs(frame);\r\n            _calcIntersectedPoints(\r\n                _vertices[0],\r\n                _vertices[2],\r\n                _vertices[1],\r\n                _vertices[3],\r\n                _center,\r\n                fillStart,\r\n                _intersectPoint_1,\r\n            );\r\n            _calcIntersectedPoints(\r\n                _vertices[0],\r\n                _vertices[2],\r\n                _vertices[1],\r\n                _vertices[3],\r\n                _center,\r\n                fillStart + fillRange,\r\n                _intersectPoint_2,\r\n            );\r\n\r\n            let offset = 0;\r\n            for (let triangleIndex = 0; triangleIndex < 4; ++triangleIndex) {\r\n                const triangle = _triangles[triangleIndex];\r\n                if (!triangle) {\r\n                    continue;\r\n                }\r\n                // all in\r\n                if (fillRange >= PI_2) {\r\n                    renderData.dataLength = offset + 3;\r\n                    _generateTriangle(dataList, offset, _center, _vertPos[triangle.x], _vertPos[triangle.y]);\r\n                    offset += 3;\r\n                    continue;\r\n                }\r\n                // test against\r\n                let startAngle = _getVertAngle(_center, _vertPos[triangle.x]);\r\n                let endAngle = _getVertAngle(_center, _vertPos[triangle.y]);\r\n                if (endAngle < startAngle) { endAngle += PI_2; }\r\n                startAngle -= PI_2;\r\n                endAngle -= PI_2;\r\n                // testing\r\n                for (let testIndex = 0; testIndex < 3; ++testIndex) {\r\n                    if (startAngle >= fillEnd) {\r\n                        // all out\r\n                    } else if (startAngle >= fillStart) {\r\n                        renderData.dataLength = offset + 3;\r\n                        if (endAngle >= fillEnd) {\r\n                            // startAngle to fillEnd\r\n                            _generateTriangle(\r\n                                dataList,\r\n                                offset,\r\n                                _center,\r\n                                _vertPos[triangle.x],\r\n                                _intersectPoint_2[triangleIndex],\r\n                            );\r\n                        } else {\r\n                            // startAngle to endAngle\r\n                            _generateTriangle(\r\n                                dataList,\r\n                                offset,\r\n                                _center,\r\n                                _vertPos[triangle.x],\r\n                                _vertPos[triangle.y],\r\n                            );\r\n                        }\r\n                        offset += 3;\r\n                    } else if (endAngle > fillStart) {\r\n                        // startAngle < fillStart\r\n                        if (endAngle <= fillEnd) {\r\n                            renderData.dataLength = offset + 3;\r\n                            // fillStart to endAngle\r\n                            _generateTriangle(\r\n                                dataList,\r\n                                offset,\r\n                                _center,\r\n                                _intersectPoint_1[triangleIndex],\r\n                                _vertPos[triangle.y],\r\n                            );\r\n                            offset += 3;\r\n                        } else {\r\n                            renderData.dataLength = offset + 3;\r\n                            // fillStart to fillEnd\r\n                            _generateTriangle(\r\n                                dataList,\r\n                                offset,\r\n                                _center,\r\n                                _intersectPoint_1[triangleIndex],\r\n                                _intersectPoint_2[triangleIndex],\r\n                            );\r\n                            offset += 3;\r\n                        }\r\n                    }\r\n                    // add 2 * PI\r\n                    startAngle += PI_2;\r\n                    endAngle += PI_2;\r\n                }\r\n            }\r\n            // hack for native when offset is 0\r\n            if (offset === 0) {\r\n                renderData.dataLength = 0;\r\n            }\r\n            renderData.resize(offset, offset);\r\n            if (JSB) {\r\n                const indexCount = renderData.indexCount;\r\n                this.createQuadIndices(indexCount);\r\n                renderData.chunk.setIndexBuffer(QUAD_INDICES!);\r\n                // may can update color & uv here\r\n                // need dirty\r\n                this.updateWorldUVData(sprite);\r\n                //this.updateColorLate(sprite);\r\n                sprite.renderEntity.colorDirty = true;\r\n            }\r\n            renderData.updateRenderData(sprite, frame);\r\n        }\r\n    }\r\n\r\n    private createQuadIndices (indexCount: number): void {\r\n        if (!JSB) return;\r\n        QUAD_INDICES = null;\r\n        QUAD_INDICES = new Uint16Array(indexCount);\r\n        let offset = 0;\r\n        for (let i = 0; i < indexCount; i++) {\r\n            QUAD_INDICES[offset++] = i;\r\n        }\r\n    }\r\n\r\n    fillBuffers (comp: Sprite, renderer: IBatcher): void {\r\n        const node = comp.node;\r\n        const renderData = comp.renderData;\r\n        if (!renderData) return;\r\n        const chunk = renderData.chunk;\r\n        if (comp._flagChangedVersion !== node.flagChangedVersion || renderData.vertDirty) {\r\n            this.updateWorldVertexAndUVData(comp, chunk);\r\n            renderData.vertDirty = false;\r\n            comp._flagChangedVersion = node.flagChangedVersion;\r\n        }\r\n\r\n        // forColor\r\n        this.updateColorLate(comp);\r\n\r\n        const bid = chunk.bufferId;\r\n        const vid = chunk.vertexOffset;\r\n        const meshBuffer = chunk.meshBuffer;\r\n        const ib = chunk.meshBuffer.iData;\r\n        const indexOffset = meshBuffer.indexOffset;\r\n        for (let i = 0; i < renderData.indexCount; i++) {\r\n            ib[indexOffset + i] = vid + i;\r\n        }\r\n        meshBuffer.indexOffset += renderData.indexCount;\r\n        meshBuffer.setDirty();\r\n    }\r\n\r\n    private updateWorldUVData (sprite: Sprite): void {\r\n        if (!JSB) return;\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const stride = renderData.floatStride;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const vData = renderData.chunk.vb;\r\n        for (let i  = 0; i < dataList.length; i++) {\r\n            const offset = i * stride;\r\n            vData[offset + 3] = dataList[i].u;\r\n            vData[offset + 4] = dataList[i].v;\r\n        }\r\n    }\r\n\r\n    // only for TS\r\n    private updateWorldVertexAndUVData (sprite: Sprite, chunk: StaticVBChunk): void {\r\n        const node = sprite.node;\r\n        node.getWorldMatrix(m);\r\n\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const stride = renderData.floatStride;\r\n        const dataList = sprite.renderData.data;\r\n        const vData = chunk.vb;\r\n        const vertexCount = renderData.vertexCount;\r\n\r\n        let vertexOffset = 0;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const vert = dataList[i];\r\n            const x = vert.x;\r\n            const y = vert.y;\r\n            let rhw = m.m03 * x + m.m07 * y + m.m15;\r\n            rhw = rhw ? 1 / rhw : 1;\r\n\r\n            vData[vertexOffset + 0] = (m.m00 * x + m.m04 * y + m.m12) * rhw;\r\n            vData[vertexOffset + 1] = (m.m01 * x + m.m05 * y + m.m13) * rhw;\r\n            vData[vertexOffset + 2] = (m.m02 * x + m.m06 * y + m.m14) * rhw;\r\n            vData[vertexOffset + 3] = vert.u;\r\n            vData[vertexOffset + 4] = vert.v;\r\n            vertexOffset += stride;\r\n        }\r\n    }\r\n\r\n    // dirty Mark\r\n    // the real update uv is on updateWorldUVData\r\n    updateUVs (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        renderData.vertDirty = true;\r\n        sprite._markForUpdateRenderData();\r\n    }\r\n\r\n    // fill color here\r\n    private updateColorLate (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        const stride = renderData.floatStride;\r\n        const vertexCount = renderData.vertexCount;\r\n\r\n        let colorOffset = 5;\r\n        const color = sprite.color;\r\n        const colorR = color.r / 255;\r\n        const colorG = color.g / 255;\r\n        const colorB = color.b / 255;\r\n        const colorA = sprite.node._uiProps.opacity;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            vData[colorOffset] = colorR;\r\n            vData[colorOffset + 1] = colorG;\r\n            vData[colorOffset + 2] = colorB;\r\n            vData[colorOffset + 3] = colorA;\r\n            colorOffset += stride;\r\n        }\r\n    }\r\n\r\n    // Too early\r\n    updateColor (sprite: Sprite): void {\r\n        // Update color by updateColorLate\r\n    }\r\n}\r\n\r\nexport const radialFilled = new RadialFilled();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Color } from '../../../core';\r\nimport type { IRenderData, RenderData } from '../../renderer/render-data';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport type { Sprite } from '../../components';\r\nimport type { IAssembler } from '../../renderer/base';\r\nimport { dynamicAtlasManager } from '../../utils/dynamic-atlas/atlas-manager';\r\nimport type { StaticVBChunk } from '../../renderer/static-vb-accessor';\r\n\r\nconst tempRenderData: IRenderData[] = [];\r\nfor (let i = 0; i < 4; i++) {\r\n    tempRenderData.push({ x: 0, y: 0, z: 0, u: 0, v: 0, color: new Color() });\r\n}\r\n\r\n/**\r\n * sliced 组装器\r\n * 可通过 `UI.sliced` 获取该组装器。\r\n */\r\nclass Sliced implements IAssembler {\r\n    private QUAD_INDICES!: Uint16Array;\r\n\r\n    createData (sprite: Sprite): RenderData {\r\n        const renderData: RenderData | null = sprite.requestRenderData()!;\r\n        // 0-4 for local vertex\r\n        renderData.dataLength = 16;\r\n        renderData.resize(16, 54);\r\n        const quadIndices = this.QUAD_INDICES = new Uint16Array(54);\r\n        this.createQuadIndices(4, 4);\r\n        renderData.chunk.setIndexBuffer(quadIndices);\r\n        return renderData;\r\n    }\r\n\r\n    private createQuadIndices (vertexRow: number, vertexCol: number): void {\r\n        let offset = 0;\r\n        const quadIndices = this.QUAD_INDICES;\r\n        for (let curRow = 0; curRow < vertexRow - 1; curRow++) {\r\n            for (let curCol = 0; curCol < vertexCol - 1; curCol++) {\r\n                // vid is the index of the left bottom vertex in each rect.\r\n                const vid = curRow * vertexCol + curCol;\r\n\r\n                // left bottom\r\n                quadIndices[offset++] = vid;\r\n                // right bottom\r\n                quadIndices[offset++] = vid + 1;\r\n                // left top\r\n                quadIndices[offset++] = vid + vertexCol;\r\n\r\n                // right bottom\r\n                quadIndices[offset++] = vid + 1;\r\n                // right top\r\n                quadIndices[offset++] = vid + 1 + vertexCol;\r\n                // left top\r\n                quadIndices[offset++] = vid + vertexCol;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateRenderData (sprite: Sprite): void {\r\n        const frame = sprite.spriteFrame;\r\n\r\n        // TODO: Material API design and export from editor could affect the material activation process\r\n        // need to update the logic here\r\n        // if (frame) {\r\n        //     if (!frame._original && dynamicAtlasManager) {\r\n        //         dynamicAtlasManager.insertSpriteFrame(frame);\r\n        //     }\r\n        //     if (sprite._material._texture !== frame._texture) {\r\n        //         sprite._activateMaterial();\r\n        //     }\r\n        // }\r\n        dynamicAtlasManager.packToDynamicAtlas(sprite, frame);\r\n        // TODO update material and uv\r\n        this.updateUVs(sprite); // dirty need\r\n        //this.updateColor(sprite); // dirty need\r\n\r\n        const renderData = sprite.renderData;\r\n        if (renderData && frame) {\r\n            const vertDirty = renderData.vertDirty;\r\n            if (vertDirty) {\r\n                this.updateVertexData(sprite);\r\n            }\r\n            renderData.updateRenderData(sprite, frame);\r\n        }\r\n    }\r\n\r\n    private updateVertexData (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const uiTrans = sprite.node._getUITransformComp()!;\r\n        const width = uiTrans.width;\r\n        const height = uiTrans.height;\r\n        const appX = uiTrans.anchorX * width;\r\n        const appY = uiTrans.anchorY * height;\r\n\r\n        const frame = sprite.spriteFrame!;\r\n        const leftWidth = frame.insetLeft;\r\n        const rightWidth = frame.insetRight;\r\n        const topHeight = frame.insetTop;\r\n        const bottomHeight = frame.insetBottom;\r\n\r\n        let sizableWidth = width - leftWidth - rightWidth;\r\n        let sizableHeight = height - topHeight - bottomHeight;\r\n        let xScale = width / (leftWidth + rightWidth);\r\n        let yScale = height / (topHeight + bottomHeight);\r\n        xScale = (Number.isNaN(xScale) || xScale > 1) ? 1 : xScale;\r\n        yScale = (Number.isNaN(yScale) || yScale > 1) ? 1 : yScale;\r\n        sizableWidth = sizableWidth < 0 ? 0 : sizableWidth;\r\n        sizableHeight = sizableHeight < 0 ? 0 : sizableHeight;\r\n\r\n        tempRenderData[0].x = -appX;\r\n        tempRenderData[0].y = -appY;\r\n        tempRenderData[1].x = leftWidth * xScale - appX;\r\n        tempRenderData[1].y = bottomHeight * yScale - appY;\r\n        tempRenderData[2].x = tempRenderData[1].x + sizableWidth;\r\n        tempRenderData[2].y = tempRenderData[1].y + sizableHeight;\r\n        tempRenderData[3].x = width - appX;\r\n        tempRenderData[3].y = height - appY;\r\n\r\n        for (let curRow = 0; curRow < 4; curRow++) {\r\n            for (let curCol = 0; curCol < 4; curCol++) {\r\n                const curIndex = curRow * 4 + curCol;\r\n                if (curIndex < renderData.dataLength\r\n                    && curRow < tempRenderData.length\r\n                    && curCol < tempRenderData.length) {\r\n                    dataList[curIndex].x = tempRenderData[curCol].x;\r\n                    dataList[curIndex].y = tempRenderData[curRow].y;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fillBuffers (sprite: Sprite, renderer: IBatcher): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const chunk = renderData.chunk;\r\n        if (sprite._flagChangedVersion !== sprite.node.flagChangedVersion || renderData.vertDirty) {\r\n            this.updateWorldVertexData(sprite, chunk);\r\n            renderData.vertDirty = false;\r\n            sprite._flagChangedVersion = sprite.node.flagChangedVersion;\r\n        }\r\n\r\n        const bid = chunk.bufferId;\r\n        const vid = chunk.vertexOffset;\r\n        const meshBuffer = chunk.meshBuffer;\r\n        const ib = chunk.meshBuffer.iData;\r\n        let indexOffset = meshBuffer.indexOffset;\r\n        for (let r = 0; r < 3; ++r) {\r\n            for (let c = 0; c < 3; ++c) {\r\n                const start = vid + r * 4 + c;\r\n                ib[indexOffset++] = start;\r\n                ib[indexOffset++] = start + 1;\r\n                ib[indexOffset++] = start + 4;\r\n                ib[indexOffset++] = start + 1;\r\n                ib[indexOffset++] = start + 5;\r\n                ib[indexOffset++] = start + 4;\r\n            }\r\n        }\r\n        meshBuffer.indexOffset = indexOffset;\r\n    }\r\n\r\n    private updateWorldVertexData (sprite: Sprite, chunk: StaticVBChunk): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const stride = renderData.floatStride;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const vData = chunk.vb;\r\n        const node = sprite.node;\r\n        const m = node.worldMatrix;\r\n\r\n        const m00 = m.m00; const m01 = m.m01; const m02 = m.m02; const m03 = m.m03;\r\n        const m04 = m.m04; const m05 = m.m05; const m06 = m.m06; const m07 = m.m07;\r\n        const m12 = m.m12; const m13 = m.m13; const m14 = m.m14; const m15 = m.m15;\r\n\r\n        let offset = 0;\r\n        for (let row = 0; row < 4; ++row) {\r\n            const rowD = dataList[row * 4];\r\n            for (let col = 0; col < 4; ++col) {\r\n                const colD = dataList[col];\r\n                const x = colD.x;\r\n                const y = rowD.y;\r\n                let rhw = m03 * x + m07 * y + m15;\r\n                rhw = rhw ? 1 / rhw : 1;\r\n\r\n                offset = (row * 4 + col) * stride;\r\n                vData[offset + 0] = (m00 * x + m04 * y + m12) * rhw;\r\n                vData[offset + 1] = (m01 * x + m05 * y + m13) * rhw;\r\n                vData[offset + 2] = (m02 * x + m06 * y + m14) * rhw;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateUVs (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!sprite.spriteFrame || !renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        const stride = renderData.floatStride;\r\n        const uv = sprite.spriteFrame.uvSliced;\r\n        let uvOffset = 3;\r\n        for (let i = 0; i < 16; i++) {\r\n            vData[uvOffset] = uv[i].u;\r\n            vData[uvOffset + 1] = uv[i].v;\r\n            uvOffset += stride;\r\n        }\r\n    }\r\n\r\n    updateColor (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        const stride = renderData.floatStride;\r\n\r\n        let colorOffset = 5;\r\n        const color = sprite.color;\r\n        const colorR = color.r / 255;\r\n        const colorG = color.g / 255;\r\n        const colorB = color.b / 255;\r\n        const colorA = sprite.node._uiProps.opacity;\r\n        for (let i = 0; i < 16; i++) {\r\n            vData[colorOffset] = colorR;\r\n            vData[colorOffset + 1] = colorG;\r\n            vData[colorOffset + 2] = colorB;\r\n            vData[colorOffset + 3] = colorA;\r\n            colorOffset += stride;\r\n        }\r\n    }\r\n}\r\n\r\nexport const sliced = new Sliced();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @packageDocumentation\r\n * @module ui-assembler\r\n */\r\n\r\nimport type { IAssembler } from '../../renderer/base';\r\nimport type { IRenderData, RenderData } from '../../renderer/render-data';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport type { Sprite } from '../../components';\r\nimport { dynamicAtlasManager } from '../../utils/dynamic-atlas/atlas-manager';\r\nimport type { StaticVBChunk } from '../../renderer/static-vb-accessor';\r\n\r\nconst QUAD_INDICES = Uint16Array.from([0, 1, 2, 1, 3, 2]);\r\n\r\n/**\r\n * simple 组装器\r\n * 可通过 `UI.simple` 获取该组装器。\r\n */\r\nclass Simple implements IAssembler {\r\n    createData (sprite: Sprite): RenderData {\r\n        const renderData = sprite.requestRenderData();\r\n        renderData.dataLength = 4;\r\n        renderData.resize(4, 6);\r\n        renderData.chunk.setIndexBuffer(QUAD_INDICES);\r\n        return renderData;\r\n    }\r\n\r\n    updateRenderData (sprite: Sprite): void {\r\n        const frame = sprite.spriteFrame;\r\n\r\n        dynamicAtlasManager.packToDynamicAtlas(sprite, frame);\r\n        this.updateUVs(sprite);// dirty need\r\n        //this.updateColor(sprite);// dirty need\r\n\r\n        const renderData = sprite.renderData;\r\n        if (renderData && frame) {\r\n            if (renderData.vertDirty) {\r\n                this.updateVertexData(sprite);\r\n            }\r\n            renderData.updateRenderData(sprite, frame);\r\n        }\r\n    }\r\n\r\n    private updateWorldVerts (sprite: Sprite, chunk: StaticVBChunk): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const vData = chunk.vb;\r\n\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const node = sprite.node;\r\n        const m = node.worldMatrix;\r\n\r\n        const m00 = m.m00; const m01 = m.m01; const m02 = m.m02; const m03 = m.m03;\r\n        const m04 = m.m04; const m05 = m.m05; const m06 = m.m06; const m07 = m.m07;\r\n        const m12 = m.m12; const m13 = m.m13; const m14 = m.m14; const m15 = m.m15;\r\n\r\n        const stride = renderData.floatStride;\r\n        let offset = 0;\r\n        const length = dataList.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            const curData = dataList[i];\r\n            const x = curData.x;\r\n            const y = curData.y;\r\n            let rhw = m03 * x + m07 * y + m15;\r\n            rhw = rhw ? 1 / rhw : 1;\r\n\r\n            offset = i * stride;\r\n            vData[offset + 0] = (m00 * x + m04 * y + m12) * rhw;\r\n            vData[offset + 1] = (m01 * x + m05 * y + m13) * rhw;\r\n            vData[offset + 2] = (m02 * x + m06 * y + m14) * rhw;\r\n        }\r\n    }\r\n\r\n    fillBuffers (sprite: Sprite, renderer: IBatcher): void {\r\n        if (sprite === null) {\r\n            return;\r\n        }\r\n\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const chunk = renderData.chunk;\r\n        if (sprite._flagChangedVersion !== sprite.node.flagChangedVersion || renderData.vertDirty) {\r\n            // const vb = chunk.vertexAccessor.getVertexBuffer(chunk.bufferId);\r\n            this.updateWorldVerts(sprite, chunk);\r\n            renderData.vertDirty = false;\r\n            sprite._flagChangedVersion = sprite.node.flagChangedVersion;\r\n        }\r\n\r\n        // quick version\r\n        const vidOrigin = chunk.vertexOffset;\r\n        const meshBuffer = chunk.meshBuffer;\r\n        const ib = chunk.meshBuffer.iData;\r\n        let indexOffset = meshBuffer.indexOffset;\r\n\r\n        const vid = vidOrigin;\r\n\r\n        // left bottom\r\n        ib[indexOffset++] = vid;\r\n        // right bottom\r\n        ib[indexOffset++] = vid + 1;\r\n        // left top\r\n        ib[indexOffset++] = vid + 2;\r\n\r\n        // right bottom\r\n        ib[indexOffset++] = vid + 1;\r\n        // right top\r\n        ib[indexOffset++] = vid + 3;\r\n        // left top\r\n        ib[indexOffset++] = vid + 2;\r\n\r\n        // IndexOffset should add 6 when vertices of a rect are visited.\r\n        meshBuffer.indexOffset += 6;\r\n        // slow version\r\n        // renderer.switchBufferAccessor().appendIndices(chunk);\r\n    }\r\n\r\n    private updateVertexData (sprite: Sprite): void {\r\n        const renderData: RenderData | null = sprite.renderData;\r\n        if (!renderData) {\r\n            return;\r\n        }\r\n\r\n        const uiTrans = sprite.node._getUITransformComp()!;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const cw = uiTrans.width;\r\n        const ch = uiTrans.height;\r\n        const appX = uiTrans.anchorX * cw;\r\n        const appY = uiTrans.anchorY * ch;\r\n        let l = 0;\r\n        let b = 0;\r\n        let r = 0;\r\n        let t = 0;\r\n        if (sprite.trim) {\r\n            l = -appX;\r\n            b = -appY;\r\n            r = cw - appX;\r\n            t = ch - appY;\r\n        } else {\r\n            const frame = sprite.spriteFrame!;\r\n            const originSize = frame.originalSize;\r\n            const ow = originSize.width;\r\n            const oh = originSize.height;\r\n            const scaleX = cw / ow;\r\n            const scaleY = ch / oh;\r\n            const trimmedBorder = frame.trimmedBorder;\r\n            l = trimmedBorder.x * scaleX - appX;\r\n            b = trimmedBorder.z * scaleY - appY;\r\n            r = cw + trimmedBorder.y * scaleX - appX;\r\n            t = ch + trimmedBorder.w * scaleY - appY;\r\n        }\r\n\r\n        dataList[0].x = l;\r\n        dataList[0].y = b;\r\n\r\n        dataList[1].x = r;\r\n        dataList[1].y = b;\r\n\r\n        dataList[2].x = l;\r\n        dataList[2].y = t;\r\n\r\n        dataList[3].x = r;\r\n        dataList[3].y = t;\r\n\r\n        renderData.vertDirty = true;\r\n    }\r\n\r\n    updateUVs (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!sprite.spriteFrame || !renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        const uv = sprite.spriteFrame.uv;\r\n        const stride = renderData.floatStride;\r\n        let uvOffset = 3;\r\n        for (let i = 0; i < renderData.dataLength; ++i) {\r\n            const index = i * 2;\r\n            vData[uvOffset] = uv[index];\r\n            vData[uvOffset + 1] = uv[index + 1];\r\n            uvOffset += stride;\r\n        }\r\n    }\r\n\r\n    updateColor (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        let colorOffset = 5;\r\n        const color = sprite.color;\r\n        const colorR = color.r / 255;\r\n        const colorG = color.g / 255;\r\n        const colorB = color.b / 255;\r\n        const colorA = color.a / 255;\r\n        for (let i = 0; i < 4; i++, colorOffset += renderData.floatStride) {\r\n            vData[colorOffset] = colorR;\r\n            vData[colorOffset + 1] = colorG;\r\n            vData[colorOffset + 2] = colorB;\r\n            vData[colorOffset + 3] = colorA;\r\n        }\r\n    }\r\n}\r\n\r\nexport const simple = new Simple();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport type { IUV, SpriteFrame } from '../../assets/sprite-frame';\r\nimport { Mat4, Color, errorID } from '../../../core';\r\nimport type { IRenderData, RenderData } from '../../renderer/render-data';\r\nimport type { IBatcher } from '../../renderer/i-batcher';\r\nimport type { Sprite } from '../../components/sprite';\r\nimport type { UIRenderer } from '../../framework/ui-renderer';\r\nimport type { IAssembler } from '../../renderer/base';\r\nimport type { StaticVBChunk } from '../../renderer/static-vb-accessor';\r\nimport { dynamicAtlasManager } from '../../utils/dynamic-atlas/atlas-manager';\r\n\r\nconst m = new Mat4();\r\n\r\nlet origin: IUV;\r\nlet leftInner: IUV;\r\nlet rightInner: IUV;\r\nlet rightOuter: IUV;\r\nlet bottomInner: IUV;\r\nlet topInner: IUV;\r\nlet topOuter: IUV;\r\nlet tempRenderDataLength = 0;\r\nconst tempRenderData: IRenderData[] = [];\r\nlet QUAD_INDICES: Uint16Array | null = null;\r\n\r\nfunction has9SlicedOffsetVertexCount (spriteFrame: SpriteFrame): number {\r\n    if (spriteFrame) {\r\n        if (spriteFrame.insetTop > 0\r\n        || spriteFrame.insetBottom > 0\r\n        || spriteFrame.insetLeft > 0\r\n        || spriteFrame.insetRight > 0) {\r\n            return 2; // left + right\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nclass Tiled implements IAssembler {\r\n    createData (sprite: UIRenderer): RenderData {\r\n        return sprite.requestRenderData();\r\n    }\r\n\r\n    updateRenderData (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const frame = sprite.spriteFrame!;\r\n        if (!frame || !renderData) {\r\n            return;\r\n        }\r\n\r\n        dynamicAtlasManager.packToDynamicAtlas(sprite, frame);\r\n\r\n        if (!renderData.vertDirty) {\r\n            return;\r\n        }\r\n\r\n        const uiTrans = sprite.node._getUITransformComp()!;\r\n        const contentWidth = Math.abs(uiTrans.width);\r\n        const contentHeight = Math.abs(uiTrans.height);\r\n\r\n        const rect = frame.getRect();\r\n        const leftWidth = frame.insetLeft;\r\n        const rightWidth = frame.insetRight;\r\n        const centerWidth = rect.width - leftWidth - rightWidth;\r\n        const topHeight = frame.insetTop;\r\n        const bottomHeight = frame.insetBottom;\r\n        const centerHeight = rect.height - topHeight - bottomHeight;\r\n\r\n        let sizableWidth = contentWidth - leftWidth - rightWidth;\r\n        let sizableHeight = contentHeight - topHeight - bottomHeight;\r\n        sizableWidth = sizableWidth > 0 ? sizableWidth : 0;\r\n        sizableHeight = sizableHeight > 0 ? sizableHeight : 0;\r\n\r\n        const hRepeat = centerWidth === 0 ? sizableWidth : sizableWidth / centerWidth;\r\n        const vRepeat = centerHeight === 0 ? sizableHeight : sizableHeight / centerHeight;\r\n        const offsetVertexCount = has9SlicedOffsetVertexCount(frame);\r\n        const row = Math.ceil(vRepeat + offsetVertexCount);\r\n        const col = Math.ceil(hRepeat + offsetVertexCount);\r\n\r\n        renderData.dataLength = (row * 2) * (col * 2);\r\n\r\n        this.updateVerts(sprite, sizableWidth, sizableHeight, row, col);\r\n\r\n        if (JSB && renderData.vertexCount !== row * col * 4) {\r\n            sprite.renderEntity.colorDirty = true;\r\n        }\r\n        // update data property\r\n        renderData.resize(row * col * 4, row * col * 6);\r\n        // update index here\r\n        if (JSB) {\r\n            const indexCount = renderData.indexCount;\r\n            this.createQuadIndices(indexCount);\r\n            renderData.chunk.setIndexBuffer(QUAD_INDICES!);\r\n            // may can update color & uv here\r\n            // need dirty\r\n            this.updateWorldUVData(sprite);\r\n            //this.updateColorLate(sprite);\r\n        }\r\n\r\n        renderData.updateRenderData(sprite, frame);\r\n    }\r\n\r\n    private createQuadIndices (indexCount: number): void {\r\n        if (!JSB) return;\r\n        if (indexCount % 6 !== 0) {\r\n            errorID(16308);\r\n            return;\r\n        }\r\n        const quadCount = indexCount / 6;\r\n        QUAD_INDICES = new Uint16Array(indexCount);\r\n        let offset = 0;\r\n        for (let i = 0; i < quadCount; i++) {\r\n            QUAD_INDICES[offset++] = 0 + i * 4;\r\n            QUAD_INDICES[offset++] = 1 + i * 4;\r\n            QUAD_INDICES[offset++] = 2 + i * 4;\r\n            QUAD_INDICES[offset++] = 1 + i * 4;\r\n            QUAD_INDICES[offset++] = 3 + i * 4;\r\n            QUAD_INDICES[offset++] = 2 + i * 4;\r\n        }\r\n    }\r\n\r\n    // dirty Mark\r\n    // the real update uv is on updateWorldUVData\r\n    updateUVs (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        renderData.vertDirty = true;\r\n        sprite._markForUpdateRenderData();\r\n    }\r\n\r\n    fillBuffers (sprite: Sprite, renderer: IBatcher): void {\r\n        const node = sprite.node;\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const chunk = renderData.chunk;\r\n        if (chunk === null) {\r\n            // If too many vertices are requested, this will result in a chunk of null.\r\n            return;\r\n        }\r\n        if (sprite._flagChangedVersion !== node.flagChangedVersion || renderData.vertDirty) {\r\n            this.updateWorldVertexAndUVData(sprite, chunk);\r\n            renderData.vertDirty = false;\r\n            sprite._flagChangedVersion = node.flagChangedVersion;\r\n        }\r\n\r\n        // forColor\r\n        this.updateColorLate(sprite);\r\n\r\n        // update indices\r\n        const bid = chunk.bufferId;\r\n        let vid = chunk.vertexOffset;\r\n        const meshBuffer = chunk.meshBuffer;\r\n        const ib = chunk.meshBuffer.iData;\r\n        let indexOffset = meshBuffer.indexOffset;\r\n        for (let i = 0; i < renderData.indexCount; i += 6) {\r\n            ib[indexOffset++] = vid;\r\n            ib[indexOffset++] = vid + 1;\r\n            ib[indexOffset++] = vid + 2;\r\n            ib[indexOffset++] = vid + 1;\r\n            ib[indexOffset++] = vid + 3;\r\n            ib[indexOffset++] = vid + 2;\r\n            vid += 4;\r\n            meshBuffer.indexOffset += 6;\r\n        }\r\n        meshBuffer.setDirty();\r\n    }\r\n\r\n    private updateWorldUVData (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const stride = renderData.floatStride;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const vData = renderData.chunk.vb;\r\n        for (let i  = 0; i < dataList.length; i++) {\r\n            const offset = i * stride;\r\n            vData[offset + 3] = dataList[i].u;\r\n            vData[offset + 4] = dataList[i].v;\r\n        }\r\n    }\r\n\r\n    // only for TS\r\n    private updateWorldVertexAndUVData (sprite: Sprite, chunk: StaticVBChunk): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const node = sprite.node;\r\n        node.getWorldMatrix(m);\r\n\r\n        const stride = renderData.floatStride;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const vData = chunk.vb;\r\n\r\n        const length = dataList.length;\r\n        for (let i  = 0; i < length; i++) {\r\n            const x = dataList[i].x;\r\n            const y = dataList[i].y;\r\n            const z = dataList[i].z;\r\n            let rhw = m.m03 * x + m.m07 * y + m.m11 * z + m.m15;\r\n            rhw = rhw ? 1 / rhw : 1;\r\n\r\n            const offset = i * stride;\r\n            vData[offset] = (m.m00 * x + m.m04 * y + m.m08 * z + m.m12) * rhw;\r\n            vData[offset + 1] = (m.m01 * x + m.m05 * y + m.m09 * z + m.m13) * rhw;\r\n            vData[offset + 2] = (m.m02 * x + m.m06 * y + m.m10 * z + m.m14) * rhw;\r\n        }\r\n\r\n        this.updateWorldUVData(sprite);\r\n    }\r\n\r\n    private updateVerts (sprite: Sprite, sizableWidth: number, sizableHeight: number, row: number, col: number): void {\r\n        const uiTrans = sprite.node._getUITransformComp()!;\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const dataList: IRenderData[] = renderData.data;\r\n        const frame = sprite.spriteFrame!;\r\n\r\n        const rect = frame.rect;\r\n        const contentWidth = Math.abs(uiTrans.width);\r\n        const contentHeight = Math.abs(uiTrans.height);\r\n        const appx = uiTrans.anchorX * contentWidth;\r\n        const appy = uiTrans.anchorY * contentHeight;\r\n        const leftWidth = frame.insetLeft;\r\n        const rightWidth = frame.insetRight;\r\n        const centerWidth = rect.width - leftWidth - rightWidth;\r\n        const topHeight = frame.insetTop;\r\n        const bottomHeight = frame.insetBottom;\r\n        const centerHeight = rect.height - topHeight - bottomHeight;\r\n        const xScale = (uiTrans.width / (leftWidth + rightWidth)) > 1 ? 1 : (uiTrans.width / (leftWidth + rightWidth));\r\n        const yScale = (uiTrans.height / (topHeight + bottomHeight)) > 1 ? 1 : (uiTrans.height / (topHeight + bottomHeight));\r\n        let offsetWidth = 0;\r\n        let offsetHeight = 0;\r\n        if (centerWidth > 0) {\r\n            /*\r\n             * Because the float numerical calculation in javascript is not accurate enough,\r\n             * there is an expected result of 1.0, but the actual result is 1.000001.\r\n             */\r\n            offsetWidth = Math.floor(sizableWidth * 1000) / 1000 % centerWidth === 0 ? centerWidth : sizableWidth % centerWidth;\r\n        } else {\r\n            offsetWidth = sizableWidth;\r\n        }\r\n        if (centerHeight > 0) {\r\n            offsetHeight = Math.floor(sizableHeight * 1000) / 1000 % centerHeight === 0 ? centerHeight : sizableHeight % centerHeight;\r\n        } else {\r\n            offsetHeight = sizableHeight;\r\n        }\r\n\r\n        // 临时变量存前置数据\r\n        tempRenderData.length = 0;\r\n        tempRenderDataLength = Math.max(row + 1, col + 1);\r\n        for (let i = 0; i < tempRenderDataLength; i++) {\r\n            tempRenderData.push({ x: 0, y: 0, z: 0, u: 0, v: 0, color: new Color() });\r\n        }\r\n\r\n        const offsetVertexCount = has9SlicedOffsetVertexCount(frame);\r\n        if (offsetVertexCount === 0) {\r\n            for (let i = 0; i < tempRenderDataLength; i++) {\r\n                // for x\r\n                if (i >= col) {\r\n                    tempRenderData[i].x = contentWidth - appx;\r\n                } else {\r\n                    tempRenderData[i].x = -appx + i * centerWidth;\r\n                }\r\n\r\n                // for y\r\n                if (i >= row) {\r\n                    tempRenderData[i].y = contentHeight - appy;\r\n                } else {\r\n                    tempRenderData[i].y = -appy + i * centerHeight;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < tempRenderDataLength; i++) {\r\n                // for x\r\n                if (i === 0) {\r\n                    tempRenderData[i].x = -appx;\r\n                } else if (i === 1) {\r\n                    tempRenderData[i].x = -appx + leftWidth * xScale;\r\n                } else if (i > 1 && i < col - 1) {\r\n                    if (centerWidth > 0) {\r\n                        tempRenderData[i].x =  -appx + leftWidth * xScale + centerWidth * (i - 1);\r\n                    } else  {\r\n                        tempRenderData[i].x = leftWidth + sizableWidth - appx;\r\n                    }\r\n                } else if (i === col - 1) {\r\n                    tempRenderData[i].x = -appx + leftWidth * xScale + offsetWidth + centerWidth * (i - 2);\r\n                } else if (i >= col) {\r\n                    tempRenderData[i].x = Math.min(leftWidth + sizableWidth + rightWidth, contentWidth) - appx;\r\n                }\r\n\r\n                // for y\r\n                if (i === 0) {\r\n                    tempRenderData[i].y = -appy;\r\n                } else if (i === 1) {\r\n                    tempRenderData[i].y = -appy + bottomHeight * yScale;\r\n                } else if (i > 1 && i < row - 1) {\r\n                    if (centerHeight > 0) {\r\n                        tempRenderData[i].y =  -appy + bottomHeight * yScale + centerHeight * (i - 1);\r\n                    } else {\r\n                        tempRenderData[i].y = bottomHeight + sizableHeight - appy;\r\n                    }\r\n                } else if (i === row - 1) {\r\n                    tempRenderData[i].y =  -appy + bottomHeight * yScale + offsetHeight + centerHeight * (i - 2);\r\n                } else if (i >= row) {\r\n                    tempRenderData[i].y = Math.min(bottomHeight + sizableHeight + topHeight, contentHeight) - appy;\r\n                }\r\n            }\r\n        }\r\n\r\n        // 填datalist\r\n        let x = 0; let x1 = 0; let y = 0; let y1 = 0;\r\n        for (let yIndex = 0; yIndex < row; ++yIndex) {\r\n            y = tempRenderData[yIndex].y;\r\n            y1 = tempRenderData[yIndex + 1].y;\r\n            for (let xIndex = 0; xIndex < col; ++xIndex) {\r\n                x = tempRenderData[xIndex].x;\r\n                x1 = tempRenderData[xIndex + 1].x;\r\n\r\n                // 4 vertices in a rect\r\n                const curIndex = 4 * (yIndex * col + xIndex);\r\n                //left bottom\r\n                dataList[curIndex].x = x;\r\n                dataList[curIndex].y = y;\r\n                //right bottom\r\n                dataList[curIndex + 1].x = x1;\r\n                dataList[curIndex + 1].y = y;\r\n                //left top\r\n                dataList[curIndex + 2].x = x;\r\n                dataList[curIndex + 2].y = y1;\r\n                //right top\r\n                dataList[curIndex + 3].x = x1;\r\n                dataList[curIndex + 3].y = y1;\r\n            }\r\n        }\r\n\r\n        const rotated = frame.rotated;\r\n        const uv = frame.uv;\r\n        const uvSliced: IUV[] = frame.uvSliced;\r\n        // origin at left bottom\r\n        origin = uvSliced[0];\r\n        // on bottom edge\r\n        leftInner = uvSliced[1];\r\n        rightInner = uvSliced[2];\r\n        rightOuter = uvSliced[3];\r\n        // on left edge\r\n        bottomInner = uvSliced[4];\r\n        topInner = uvSliced[8];\r\n        topOuter = uvSliced[12];\r\n\r\n        let coefU = 0;\r\n        let coefV = 0;\r\n        const hRepeat = centerWidth === 0 ? sizableWidth : sizableWidth / centerWidth;\r\n        const vRepeat = centerHeight === 0 ? sizableHeight : sizableHeight / centerHeight;\r\n        const tempXVerts: any = [];\r\n        const tempYVerts: any = [];\r\n\r\n        for (let yIndexUV = 0; yIndexUV < row; ++yIndexUV) {\r\n            if (sizableHeight > centerHeight) {\r\n                //if 9 sliced, we should exclude bottom border vertex (yIndex-1)\r\n                const curYRectCount = offsetVertexCount > 0 ? yIndexUV : yIndexUV + 1;\r\n                // The height of the rect which contains the left bottom vertex in current loop should be calculated in total height.\r\n                if (sizableHeight >= curYRectCount * centerHeight) {\r\n                    coefV = 1;\r\n                } else {\r\n                    coefV = vRepeat % 1;\r\n                }\r\n            } else {\r\n                coefV = vRepeat;\r\n            }\r\n            for (let xIndexUV = 0; xIndexUV < col; ++xIndexUV) {\r\n                if (sizableWidth > centerWidth) {\r\n                //if 9 sliced, we should exclude left border vertex (xIndex-1)\r\n                    const curXRectCount = offsetVertexCount > 0 ? xIndexUV : xIndexUV + 1;\r\n                    // The width of the rect which contains the left bottom vertex in current loop should be calculated in total width.\r\n                    // Example: xIndex = 2 means that these is the third vertex, we should take the rect whose left bottom vertex is this\r\n                    // vertex into account, so the following condition should be comparing the values of content size and (2+1)*centerWidth.\r\n                    if (sizableWidth >= curXRectCount * centerWidth) {\r\n                        coefU = 1;\r\n                    } else {\r\n                        coefU = hRepeat % 1;\r\n                    }\r\n                } else {\r\n                    coefU = hRepeat;\r\n                }\r\n\r\n                if (rotated) {\r\n                    if (offsetVertexCount === 0) { //无九宫\r\n                        tempXVerts[0] = bottomInner.u;\r\n                        tempXVerts[1] = bottomInner.u;\r\n                        tempXVerts[2] = bottomInner.u + (topInner.u - bottomInner.u) * coefV;\r\n\r\n                        tempYVerts[0] = leftInner.v;\r\n                        tempYVerts[1] = leftInner.v + (rightInner.v - leftInner.v) * coefU;\r\n                        tempYVerts[2] = leftInner.v;\r\n                    } else { //有九宫\r\n                        if (yIndexUV === 0) {\r\n                            tempXVerts[0] = origin.u;\r\n                            tempXVerts[1] = origin.u;\r\n                            tempXVerts[2] = bottomInner.u;\r\n                        } else if (yIndexUV < (row - 1)) {\r\n                            tempXVerts[0] = bottomInner.u;\r\n                            tempXVerts[1] = bottomInner.u;\r\n                            tempXVerts[2] = bottomInner.u + (topInner.u - bottomInner.u) * coefV;\r\n                        } else if (yIndexUV === (row - 1)) {\r\n                            tempXVerts[0] = topInner.u;\r\n                            tempXVerts[1] = topInner.u;\r\n                            tempXVerts[2] = topOuter.u;\r\n                        }\r\n                        if (xIndexUV === 0) {\r\n                            tempYVerts[0] = origin.v;\r\n                            tempYVerts[1] = leftInner.v;\r\n                            tempYVerts[2] = origin.v;\r\n                        } else if (xIndexUV < (col - 1)) {\r\n                            tempYVerts[0] = leftInner.v;\r\n                            tempYVerts[1] = leftInner.v + (rightInner.v - leftInner.v) * coefU;\r\n                            tempYVerts[2] = leftInner.v;\r\n                        } else if (xIndexUV === (col - 1)) {\r\n                            tempYVerts[0] = rightInner.v;\r\n                            tempYVerts[1] = rightOuter.v;\r\n                            tempYVerts[2] = rightInner.v;\r\n                        }\r\n                    }\r\n                    tempXVerts[3] = tempXVerts[2];\r\n                    tempYVerts[3] = tempYVerts[1];\r\n                } else {\r\n                    if (offsetVertexCount === 0) { //无九宫\r\n                        tempXVerts[0] = leftInner.u;\r\n                        tempXVerts[1] = leftInner.u + (rightInner.u - leftInner.u) * coefU;\r\n                        tempXVerts[2] = leftInner.u;\r\n\r\n                        tempYVerts[0] = bottomInner.v;\r\n                        tempYVerts[1] = bottomInner.v;\r\n                        tempYVerts[2] = bottomInner.v + (topInner.v - bottomInner.v) * coefV;\r\n                    } else { //有九宫\r\n                        if (xIndexUV === 0) {\r\n                            tempXVerts[0] = origin.u;\r\n                            tempXVerts[1] = leftInner.u;\r\n                            tempXVerts[2] = origin.u;\r\n                        } else if (xIndexUV < (col - 1)) {\r\n                            tempXVerts[0] = leftInner.u;\r\n                            tempXVerts[1] = leftInner.u + (rightInner.u - leftInner.u) * coefU;\r\n                            tempXVerts[2] = leftInner.u;\r\n                        } else if (xIndexUV === (col - 1)) {\r\n                            tempXVerts[0] = rightInner.u;\r\n                            tempXVerts[1] = rightOuter.u;\r\n                            tempXVerts[2] = rightInner.u;\r\n                        }\r\n                        if (yIndexUV === 0) {\r\n                            tempYVerts[0] = origin.v;\r\n                            tempYVerts[1] = origin.v;\r\n                            tempYVerts[2] = bottomInner.v;\r\n                        } else if (yIndexUV < (row - 1)) {\r\n                            tempYVerts[0] = bottomInner.v;\r\n                            tempYVerts[1] = bottomInner.v;\r\n                            tempYVerts[2] = bottomInner.v + (topInner.v - bottomInner.v) * coefV;\r\n                        } else if (yIndexUV === (row - 1)) {\r\n                            tempYVerts[0] = topInner.v;\r\n                            tempYVerts[1] = topInner.v;\r\n                            tempYVerts[2] = topOuter.v;\r\n                        }\r\n                    }\r\n                    tempXVerts[3] = tempXVerts[1];\r\n                    tempYVerts[3] = tempYVerts[2];\r\n                }\r\n\r\n                // it represents the left bottom corner vertex of a rect\r\n                const curIndex = 4 * (yIndexUV * col + xIndexUV);\r\n                // lb\r\n                dataList[curIndex].u = tempXVerts[0];\r\n                dataList[curIndex].v = tempYVerts[0];\r\n                // rb\r\n                dataList[curIndex + 1].u = tempXVerts[1];\r\n                dataList[curIndex + 1].v = tempYVerts[1];\r\n                // lt\r\n                dataList[curIndex + 2].u = tempXVerts[2];\r\n                dataList[curIndex + 2].v = tempYVerts[2];\r\n                // rt\r\n                dataList[curIndex + 3].u = tempXVerts[3];\r\n                dataList[curIndex + 3].v = tempYVerts[3];\r\n            }\r\n        }\r\n    }\r\n\r\n    // fill color here\r\n    private updateColorLate (sprite: Sprite): void {\r\n        const renderData = sprite.renderData;\r\n        if (!renderData) return;\r\n        const vData = renderData.chunk.vb;\r\n        const stride = renderData.floatStride;\r\n        const vertexCount = renderData.vertexCount;\r\n\r\n        let colorOffset = 5;\r\n        const color = sprite.color;\r\n        const colorR = color.r / 255;\r\n        const colorG = color.g / 255;\r\n        const colorB = color.b / 255;\r\n        const colorA = sprite.node._uiProps.opacity;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            vData[colorOffset] = colorR;\r\n            vData[colorOffset + 1] = colorG;\r\n            vData[colorOffset + 2] = colorB;\r\n            vData[colorOffset + 3] = colorA;\r\n            colorOffset += stride;\r\n        }\r\n    }\r\n\r\n    // Too early\r\n    updateColor (sprite: Sprite): void {\r\n        // Update color by updateColorLate\r\n    }\r\n}\r\n\r\nexport const tiled = new Tiled();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { UIRenderer } from '../../framework/ui-renderer';\r\nimport { IAssembler, IAssemblerManager } from '../../renderer/base';\r\nimport { Sprite } from '../../components';\r\nimport { barFilled } from './bar-filled';\r\nimport { radialFilled } from './radial-filled';\r\nimport { simple } from './simple';\r\nimport { sliced } from './sliced';\r\nimport { tiled } from './tiled';\r\n\r\nconst SpriteType = Sprite.Type;\r\nconst FillType = Sprite.FillType;\r\n\r\n// Inline all type switch to avoid jit deoptimization during inlined function change\r\n\r\nconst spriteAssembler: IAssemblerManager = {\r\n    getAssembler (spriteComp: UIRenderer) {\r\n        let util: IAssembler = simple;\r\n\r\n        const comp = spriteComp as Sprite;\r\n        switch (comp.type) {\r\n        case SpriteType.SLICED:\r\n            util = sliced;\r\n            break;\r\n        case SpriteType.TILED:\r\n            util = tiled;\r\n            break;\r\n        case SpriteType.FILLED:\r\n            if (comp.fillType === FillType.RADIAL) {\r\n                util = radialFilled;\r\n            } else {\r\n                util = barFilled;\r\n            }\r\n            break;\r\n            // case SpriteType.MESH:\r\n            //     util = meshRenderUtil;\r\n            //     break;\r\n        default:\r\n            break;\r\n        }\r\n\r\n        return util;\r\n    },\r\n\r\n    // Skip invalid sprites (without own _assembler)\r\n    // updateRenderData (sprite) {\r\n    //     return sprite.__allocedDatas;\r\n    // },\r\n};\r\n\r\nSprite.Assembler = spriteAssembler;\r\n\r\nexport {\r\n    spriteAssembler,\r\n    simple,\r\n    sliced,\r\n    barFilled,\r\n    radialFilled,\r\n};\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Node } from '../../scene-graph/node';\r\nimport { Input, input } from '../../input';\r\nimport { Event, EventMouse, EventTouch } from '../../input/types';\r\nimport { DispatcherEventType, NodeEventProcessor } from '../../scene-graph/node-event-processor';\r\nimport { CCObjectFlags, js } from '../../core';\r\nimport { InputEventType } from '../../input/types/event-enum';\r\nimport { EventDispatcherPriority, IEventDispatcher } from '../../input/input';\r\n\r\nconst mouseEvents = [\r\n    InputEventType.MOUSE_DOWN,\r\n    InputEventType.MOUSE_MOVE,\r\n    InputEventType.MOUSE_UP,\r\n    InputEventType.MOUSE_WHEEL,\r\n    InputEventType.MOUSE_LEAVE,\r\n    InputEventType.MOUSE_ENTER,\r\n];\r\nconst touchEvents = [\r\n    InputEventType.TOUCH_START,\r\n    InputEventType.TOUCH_MOVE,\r\n    InputEventType.TOUCH_END,\r\n    InputEventType.TOUCH_CANCEL,\r\n];\r\nconst isDestroy = (node: Node): boolean => !!((node._objFlags & CCObjectFlags.Destroying) || (node._objFlags & CCObjectFlags.Destroyed));\r\nclass PointerEventDispatcher implements IEventDispatcher {\r\n    public priority: EventDispatcherPriority = EventDispatcherPriority.UI;\r\n\r\n    private _isListDirty = false;\r\n    private _inDispatchCount = 0;\r\n    private _pointerEventProcessorList: NodeEventProcessor[] = [];\r\n    private _processorListToAdd: NodeEventProcessor[] = [];\r\n    private _processorListToRemove: NodeEventProcessor[] = [];\r\n\r\n    constructor () {\r\n        input._registerEventDispatcher(this);\r\n        const callbacksInvoker = NodeEventProcessor.callbacksInvoker;\r\n        callbacksInvoker.on(DispatcherEventType.ADD_POINTER_EVENT_PROCESSOR, this.addPointerEventProcessor, this);\r\n        callbacksInvoker.on(DispatcherEventType.REMOVE_POINTER_EVENT_PROCESSOR, this.removePointerEventProcessor, this);\r\n        callbacksInvoker.on(DispatcherEventType.MARK_LIST_DIRTY, this._markListDirty, this);\r\n    }\r\n\r\n    onThrowException (): void {\r\n        this._inDispatchCount = 0;\r\n    }\r\n\r\n    public dispatchEvent (event: Event): boolean {\r\n        const eventType = event.type as Input.EventType;\r\n        if (touchEvents.includes(eventType)) {\r\n            return this.dispatchEventTouch(event as EventTouch);\r\n        } else if (mouseEvents.includes(eventType)) {\r\n            return this.dispatchEventMouse(event as EventMouse);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private addPointerEventProcessor (pointerEventProcessor: NodeEventProcessor): void {\r\n        if (this._inDispatchCount === 0) {\r\n            if (!this._pointerEventProcessorList.includes(pointerEventProcessor)) {\r\n                this._pointerEventProcessorList.push(pointerEventProcessor);\r\n                this._isListDirty = true;\r\n            }\r\n        } else if (!this._processorListToAdd.includes(pointerEventProcessor)) {\r\n            this._processorListToAdd.push(pointerEventProcessor);\r\n        }\r\n        js.array.remove(this._processorListToRemove, pointerEventProcessor);\r\n    }\r\n\r\n    private removePointerEventProcessor (pointerEventProcessor: NodeEventProcessor): void {\r\n        if (this._inDispatchCount === 0) {\r\n            js.array.remove(this._pointerEventProcessorList, pointerEventProcessor);\r\n            this._isListDirty = true;\r\n        } else if (!this._processorListToRemove.includes(pointerEventProcessor)) {\r\n            this._processorListToRemove.push(pointerEventProcessor);\r\n        }\r\n        js.array.remove(this._processorListToAdd, pointerEventProcessor);\r\n    }\r\n\r\n    private dispatchEventMouse (eventMouse: EventMouse): boolean {\r\n        this._inDispatchCount++;\r\n        this._sortPointerEventProcessorList();\r\n        const pointerEventProcessorList = this._pointerEventProcessorList;\r\n        const length = pointerEventProcessorList.length;\r\n        let dispatchToNextEventDispatcher = true;\r\n        for (let i = 0; i < length; ++i) {\r\n            const pointerEventProcessor = pointerEventProcessorList[i];\r\n            if (pointerEventProcessor.isEnabled && pointerEventProcessor.shouldHandleEventMouse\r\n                && pointerEventProcessor._handleEventMouse(eventMouse)) {\r\n                dispatchToNextEventDispatcher = false;\r\n                if (!eventMouse.preventSwallow) {\r\n                    break;\r\n                } else {\r\n                    eventMouse.preventSwallow = false;  // reset swallow state\r\n                }\r\n            }\r\n        }\r\n        if (--this._inDispatchCount <= 0) {\r\n            this._updatePointerEventProcessorList();\r\n        }\r\n        return dispatchToNextEventDispatcher;\r\n    }\r\n\r\n    private dispatchEventTouch (eventTouch: EventTouch): boolean {\r\n        this._inDispatchCount++;\r\n        this._sortPointerEventProcessorList();\r\n        const pointerEventProcessorList = this._pointerEventProcessorList;\r\n        const length = pointerEventProcessorList.length;\r\n        const touch = eventTouch.touch!;\r\n        let dispatchToNextEventDispatcher = true;\r\n        for (let i = 0; i < length; ++i) {\r\n            const pointerEventProcessor = pointerEventProcessorList[i];\r\n            if (pointerEventProcessor.isEnabled && pointerEventProcessor.shouldHandleEventTouch) {\r\n                if (eventTouch.type === InputEventType.TOUCH_START as string) {\r\n                    if (pointerEventProcessor._handleEventTouch(eventTouch)) {\r\n                        // pointerEventProcessor may be disabled in handling touch event above.\r\n                        if (pointerEventProcessor.isEnabled) {\r\n                            pointerEventProcessor.claimedTouchIdList.push(touch.getID());\r\n                        } else {\r\n                            const cancelEvent = new EventTouch([eventTouch.touch!], true, InputEventType.TOUCH_CANCEL);\r\n                            cancelEvent.touch = eventTouch.touch!;\r\n                            pointerEventProcessor.dispatchEvent(cancelEvent);\r\n                            pointerEventProcessor.claimedTouchIdList.length = 0;\r\n                        }\r\n\r\n                        dispatchToNextEventDispatcher = false;\r\n                        if (!eventTouch.preventSwallow) {\r\n                            break;\r\n                        } else {\r\n                            eventTouch.preventSwallow = false;  // reset swallow state\r\n                        }\r\n                    }\r\n                } else if (pointerEventProcessor.claimedTouchIdList.length > 0) {\r\n                    const index = pointerEventProcessor.claimedTouchIdList.indexOf(touch.getID());\r\n                    if (index !== -1) {\r\n                        pointerEventProcessor._handleEventTouch(eventTouch);\r\n                        if (eventTouch.type === (InputEventType.TOUCH_END as string) || eventTouch.type === (InputEventType.TOUCH_CANCEL as string)) {\r\n                            js.array.removeAt(pointerEventProcessor.claimedTouchIdList, index);\r\n                            // The event is handled, and the event can be swallowed, so should remove other EventProcessor's claimedTouchIdList.\r\n                            if (!eventTouch.preventSwallow) {\r\n                                this._removeClaimedTouch(i + 1, touch.getID());\r\n                            }\r\n                        }\r\n                        dispatchToNextEventDispatcher = false;\r\n                        if (!eventTouch.preventSwallow) {\r\n                            break;\r\n                        } else {\r\n                            eventTouch.preventSwallow = false;  // reset swallow state\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (--this._inDispatchCount <= 0) {\r\n            this._updatePointerEventProcessorList();\r\n        }\r\n        return dispatchToNextEventDispatcher;\r\n    }\r\n\r\n    private _removeClaimedTouch (eventProcessorIndex: number, touchID: number): void {\r\n        const pointerEventProcessorList = this._pointerEventProcessorList;\r\n        const length = pointerEventProcessorList.length;\r\n        for (let i = eventProcessorIndex; i < length; ++i) {\r\n            const pointerEventProcessor = pointerEventProcessorList[i];\r\n            const touchIndex = pointerEventProcessor.claimedTouchIdList.indexOf(touchID);\r\n            if (touchIndex !== -1) {\r\n                js.array.removeAt(pointerEventProcessor.claimedTouchIdList, touchIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updatePointerEventProcessorList (): void {\r\n        const listToAdd = this._processorListToAdd;\r\n        const addLength = listToAdd.length;\r\n        for (let i = 0; i < addLength; ++i) {\r\n            this.addPointerEventProcessor(listToAdd[i]);\r\n        }\r\n        listToAdd.length = 0;\r\n\r\n        const listToRemove = this._processorListToRemove;\r\n        const removeLength = listToRemove.length;\r\n        for (let i = 0; i < removeLength; ++i) {\r\n            this.removePointerEventProcessor(listToRemove[i]);\r\n        }\r\n        listToRemove.length = 0;\r\n    }\r\n\r\n    private _sortPointerEventProcessorList (): void {\r\n        if (!this._isListDirty) {\r\n            return;\r\n        }\r\n        const pointerEventProcessorList = this._pointerEventProcessorList;\r\n        const length = pointerEventProcessorList.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            const pointerEventProcessor = pointerEventProcessorList[i];\r\n            const node = pointerEventProcessor.node;\r\n            if (node._uiProps) {\r\n                const trans = node._getUITransformComp();\r\n                pointerEventProcessor.cachedCameraPriority = trans!.cameraPriority;\r\n            }\r\n        }\r\n        pointerEventProcessorList.sort(this._sortByPriority);\r\n        this._isListDirty = false;\r\n    }\r\n\r\n    private _sortByPriority (p1: NodeEventProcessor, p2: NodeEventProcessor): number {\r\n        const node1: Node = p1.node;\r\n        const node2: Node = p2.node;\r\n        if (!p2 || !node2 || isDestroy(node2) || !node2.activeInHierarchy || !node2._getUITransformComp()) {\r\n            return -1;\r\n        } else if (!p1 || !node1 || isDestroy(node1) || !node1.activeInHierarchy || !node1._getUITransformComp()) {\r\n            return 1;\r\n        }\r\n\r\n        if (p1.cachedCameraPriority !== p2.cachedCameraPriority) {\r\n            return p2.cachedCameraPriority - p1.cachedCameraPriority;\r\n        }\r\n        let n1: Node | null = node1;\r\n        let n2: Node | null = node2;\r\n        let ex = false;\r\n        while (n1!.parent?.uuid !== n2!.parent?.uuid) {\r\n            n1 = n1?.parent?.parent === null ? (ex = true) && node2 : n1 && n1.parent;\r\n            n2 = n2?.parent?.parent === null ? (ex = true) && node1 : n2 && n2.parent;\r\n        }\r\n\r\n        if (n1!.uuid === n2!.uuid) {\r\n            if (n1!.uuid === node2.uuid) {\r\n                return -1;\r\n            }\r\n            if (n1!.uuid === node1.uuid) {\r\n                return 1;\r\n            }\r\n        }\r\n\r\n        const priority1 = n1 ? n1.siblingIndex : 0;\r\n        const priority2 = n2 ? n2.siblingIndex : 0;\r\n\r\n        return ex ? priority1 - priority2 : priority2 - priority1;\r\n    }\r\n\r\n    private _markListDirty (): void {\r\n        this._isListDirty = true;\r\n    }\r\n}\r\n\r\nexport const pointerEventDispatcher = new PointerEventDispatcher();\r\n","/*\r\n Copyright (c) 2021-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport * as VertexFormat from './vertex-format';\r\nimport { Batcher2D } from './batcher-2d';\r\nimport { DrawBatch2D } from './draw-batch';\r\nimport { markAsWarning, replaceProperty, removeProperty, warnID } from '../../core';\r\nimport { MeshBuffer } from './mesh-buffer';\r\nimport { MeshRenderData } from './render-data';\r\nimport { Attribute } from '../../gfx/base/define';\r\n\r\nexport { VertexFormat as UIVertexFormat };\r\n\r\nexport { Batcher2D as UI };\r\n\r\nexport { UIDrawBatch };\r\n\r\n/**\r\n * @deprecated since v3.6.0, this is an engine private interface that will be removed in the future.\r\n * @internal\r\n */\r\nclass UIDrawBatch extends DrawBatch2D {\r\n}\r\n\r\nmarkAsWarning(\r\n    MeshBuffer.prototype,\r\n    'MeshBuffer',\r\n    [\r\n        'byteStart',\r\n        'vertexStart',\r\n        'indicesStart',\r\n        'request',\r\n    ].map((item) => ({\r\n        name: item,\r\n        suggest: `please use meshBuffer.accessor.${item} instead`,\r\n    })),\r\n);\r\n\r\nreplaceProperty(MeshBuffer.prototype, 'MeshBuffer', [\r\n    {\r\n        name: 'indicesOffset',\r\n        newName: 'indexOffset',\r\n    },\r\n]);\r\n\r\nremoveProperty(MeshBuffer.prototype, 'MeshBuffer', [\r\n    {\r\n        name: 'vertexBuffers',\r\n    },\r\n    {\r\n        name: 'indexBuffer',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Batcher2D.prototype, 'Batcher2D', [\r\n    {\r\n        name: 'currBufferBatch',\r\n        newName: 'currBufferAccessor',\r\n    },\r\n    {\r\n        name: 'acquireBufferBatch',\r\n        newName: 'switchBufferAccessor',\r\n    },\r\n]);\r\n\r\nremoveProperty(MeshRenderData.prototype, 'MeshRenderData', [\r\n    {\r\n        name: 'formatByte',\r\n    },\r\n    {\r\n        name: 'byteStart',\r\n    },\r\n    {\r\n        name: 'byteCount',\r\n    },\r\n]);\r\n\r\nreplaceProperty(MeshRenderData.prototype, 'MeshRenderData', [\r\n    {\r\n        name: 'indicesStart',\r\n        newName: 'indexStart',\r\n    },\r\n]);\r\n\r\nexport class QuadRenderData extends MeshRenderData {\r\n    constructor (vertexFormat: Attribute[]) {\r\n        super(vertexFormat);\r\n        warnID(9006);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport {\r\n    labelAssembler,\r\n    spriteAssembler,\r\n} from './assembler';\r\nimport { RenderData, MeshRenderData } from './renderer/render-data';\r\nimport { MeshBuffer } from './renderer/mesh-buffer';\r\nimport { StencilManager } from './renderer/stencil-manager';\r\nimport { cclegacy } from '../core';\r\nimport './event';\r\n\r\nimport './renderer/batcher-2d';\r\n\r\nexport * from './assets';\r\nexport * from './framework';\r\nexport * from './components';\r\nexport * from './renderer/render-data';\r\nexport * from './renderer/base';\r\nexport * from './renderer/deprecated';\r\nexport * from './utils';\r\n\r\nexport {\r\n    MeshBuffer,\r\n    StencilManager,\r\n    spriteAssembler, // use less\r\n    labelAssembler, // use less\r\n};\r\n\r\ncclegacy.UI = {\r\n    MeshBuffer, // use less\r\n    spriteAssembler, // use less\r\n    labelAssembler, // use less\r\n    RenderData,\r\n    MeshRenderData,\r\n};\r\n"],"names":["UIMeshRenderer","ccclass","_dec","_class","executionOrder","_dec2","_Component","_this","call","this","_modelComponent","_dirtyVersion","_internalId","stencilStage","Stage","DISABLED","_renderData","_renderEntity","RenderEntity","RenderEntityType","DYNAMIC","_inheritsLoose","_proto","prototype","__preload","node","_uiProps","uiComp","onEnable","uiRendererManager","addRenderer","_markForUpdateRenderData","onDisable","removeRenderer","renderEntity","enabled","_canRender","onLoad","_getUITransformComp","addComponent","getComponent","setNode","warnID","name","onDestroy","_sceneGetter","_render","render","models","_collectModels","_detachFromScene","i","length","commitModel","material","fillBuffers","updateRenderer","_uploadRenderData","postUpdateAssembler","update","_fitUIRenderQueue","matNum","sharedMaterials","getMaterialInstance","passes","passNum","j","setPriority","RenderPriority","MAX","recompileShaders","CC_FORCE_FORWARD_SHADING","markForUpdateRenderData","enable","markDirtyRenderer","setNodeDirty","setTextureDirty","_createClass","key","get","assert","Boolean","Component","exports","UIModelComponent","cclegacy","LabelOutline","requireComponent","Label","_dec3","apply","arguments","label","assertIsTrue","enableOutline","outlineColor","set","value","outlineWidth","LabelOutlineComponent","UIStaticBatch","_class2","_UIRenderer","_init","_bufferAccessor","_dirty","_uiDrawBatchList","markAsDirty","_requireDrawBatch","batch","DrawBatch2D","isStatic","push","_clearData","reset","ui","_getBatcher","destroy","director","root","batcher2D","_color","UIRenderer","override","Object","getOwnPropertyDescriptor","UIStaticBatchComponent","LabelShadow","enableShadow","shadowColor","shadowOffset","shadowBlur","UIOpacity","disallowMultiple","_opacity","_initializer","_syncLocalOpacity","localOpacity","clamp","serializable","UIOpacityComponent","MaskComponent","Mask","js","LabelComponent","RichTextComponent","RichText","SpriteComponent","Sprite","GraphicsComponent","Graphics","replaceProperty","newName","target","targetName","MaskType","markAsWarning","suggest","Alignment","MAX_SIZE","_BASELINE_OFFSET","getBaselineOffset","_invisibleAlpha","toFixed","LetterInfo","valid","x","y","line","hash","TextProcessing","_context","_canvas","_canvasData","_lettersInfo","_tmpRect","Rect","_maxFontSize","_fontScale","canvasData","CanvasPool","getInstance","canvas","context","put","processingString","isBmFont","style","layout","outputLayoutData","inputString","out","fntConfig","_getStyleFontScale","originFontSize","fontScale","shareLabelInfo","_setupBMFontOverflowMetrics","_updateFontScale","_computeHorizontalKerningForText","_alignText","loopTime","fontSize","_updatePaddingRect","_calculateLabelFont","canvasSize","width","height","maxValue","Math","max","canvasScaleToMaxSizeRatio","parsedString","generateRenderInfo","outputRenderData","callback","_computeAlignmentOffset","generateVertexData","_updateLabelDimensions","_updateTexture","setCanvasUsed","content","scale","maxFontSize","actualFontSize","paragraphedStrings","split","_splitStrings","_fontDesc","_getFontDesc","fontFamily","isBold","isItalic","font","fontDesc","nodeContentSize","canvasPadding","contentSizeExtend","overFlow","Overflow","NONE","canvasSizeX","paraLength","safeMeasureText","rawWidth","rawHeight","BASELINE_RATIO","_getLineHeight","lineHeight","SHRINK","_calculateShrinkFont","_calculateWrapText","CLAMP","RESIZE_HEIGHT","toString","drawFontsize","paragraphLength","_calculateParagraphLength","totalHeight","maxLength","_fontSize","wrapping","canvasWidthNoMargin","canvasHeightNoMargin","left","right","mid","logID","allWidth","fragmentText","_measureText","scaleX","scaleY","min","textFragment","concat","ctx","str","map","para","top","bottom","isOutlined","hasShadow","shadowWidth","offsetX","shadowOffsetX","offsetY","shadowOffsetY","offset","tan","textAlign","horizontalAlign","textBaseline","_calculateFillTextStartPosition","labelX","HorizontalTextAlignment","RIGHT","CENTER","drawStartY","firstLinelabelY","verticalAlign","VerticalTextAlignment","TOP","blank","BOTTOM","startPosition","clearRect","lineJoin","fillStyle","r","g","b","fillRect","color","tempPos","Vec2","drawTextPosX","drawTextPosY","_drawTextEffect","_setupShadow","fillText","_setupOutline","strokeText","_uploadTexture","tex","texture","SpriteFrame","getGFXTexture","getGFXSampler","mipmapLevel","uploadData","setWrapMode","WrapMode","CLAMP_TO_EDGE","rect","_calculateUV","_releaseDescriptorSetCache","getHash","isUnderline","isMultiple","measureText","_drawUnderlineWidth","_drawUnderlinePos","underlineHeight","strokeStyle","a","lineWidth","_updateQuads","updateQuatCount","data","vertexBuffer","count","quadCount","z","u","v","Color","WHITE","clone","newWidth","newHeight","textWidthTemp","textHeightTemp","textDimensions","maxLineWidth","bmfontScale","string","stringLen","kerningDict","horizontalKerning","prev","charCodeAt","kerningAmount","_multilineTextWrap","_getFirstWordLen","_isVerticalClamp","_shrinkLabelToContentSize","_isHorizontalNeedShrink","_isHorizontalClamp","_parsedString","l","getSymbolLength","letterInfo","nextTokenFunc","linesWidth","_string","textLen","lineIndex","nextTokenX","nextTokenY","longestLine","letterRight","highestY","lowestY","letterDef","index","character","getSymbolAt","tokenLen","tokenHighestY","tokenLowestY","tokenRight","nextLetterX","newLine","letterPosition","tmp","letterIndex","fontAtlas","getLetterDefinitionForChar","letterX","margin","w","isUnicodeSpace","_getFontScale","_recordLetterInfo","xAdvance","spacingX","h","_recordPlaceholderInfo","atlasName","numberOfLines","textDesiredHeight","parseFloat","tailoredTopY","tailoredBottomY","char","lettersInfo","tmpInfo","getSymbolCodeAt","getLetter","text","startIndex","isUnicodeCJK","len","linesOffsetX","letterOffsetY","LEFT","process","letterClamp","ctr","px","lambda","newFontSize","_scaleFontSizeDown","shouldUpdateContent","spriteFrame","getTexture","appX","uiTransAnchorX","appY","uiTransAnchorY","tmpRect","py","clipTop","_isHorizontalClamped","isRotated","_determineRect","letterPositionX","wordWidth","letterOverClamp","_spriteFrame","originalSize","getOriginalSize","getRect","getOffset","trimmedLeft","trimmedTop","originalX","instance","_defaultLetterAtlas","LetterAtlas","_defaultFontAtlas","FontAtlas","_comp","_uiTrans","_fntConfig","QUAD_INDICES","BmfontUtils","updateProcessingData","comp","trans","overflow","enableWrapText","anchorX","anchorY","updateRenderData","renderData","vertDirty","processing","textStyle","textLayout","textLayoutData","textRenderData","view","getScaleX","_updateFontFamily","_updateLabelInfo","dataLength","resetRenderData","resize","datalist","indexCount","createQuadIndices","chunk","setIndexBuffer","setContentSize","updateUVs","_resetProperties","vData","vb","vertexCount","stride","floatStride","dataList","vertexOffset","vert","updateColor","rotated","dataOffset","texW","texH","rectWidth","rectHeight","t","fontAsset","fontDefDictionary","cacheMode","CacheMode","CHAR","dynamicAtlasManager","packToDynamicAtlas","Uint16Array","errorID","tempColor","Bmfont","_BmfontUtils","createData","requestRenderData","renderer","opacity","fillMeshVertices3D","bmfont","_shareAtlas","LetterFont","getAssemblerData","_getFontFamily","useSystemFont","_nativeAsset","computeHash","Letter","_LetterFont","letter","TTFUtils","isSystemFontUsed","approx","sharedLabelData","_canvasPool","resetAssemblerData","assemblerData","_resetDynamicAtlas","textureDirty","_calDynamicAtlas","contentWidth","updateVertexData","BITMAP","frame","ttfSpriteFrame","deleteAtlasSpriteFrame","_resetDynamicAtlasFrame","from","TTF","_TTFUtils","uvs","uvOffset","toArray","m","worldMatrix","curData","rhw","m03","m07","m15","m00","m04","m12","m01","m05","m13","m02","m06","m14","vid","meshBuffer","ib","iData","indexOffset","uiTrans","uv","ttf","labelAssembler","getAssembler","assembler","BitmapFont","Assembler","FillType","Mat4","BarFilled","sprite","fillStart","fillRange","fillEnd","atlasWidth","atlasHeight","textureRect","ul","quadUV0","quadUV1","quadUV2","quadUV3","quadUV4","quadUV5","quadUV6","quadUV7","fillType","HORIZONTAL","VERTICAL","progressEnd","forEach","updateWorldVertexData","getWorldMatrix","local","_flagChangedVersion","flagChangedVersion","bufferId","colorOffset","colorR","colorG","colorB","colorA","barFilled","PI_2","PI","EPSILON","_vertPos","_vertices","Array","_uvs","_intersectPoint_1","_intersectPoint_2","_center","_triangles","_calcIntersectedPoints","center","angle","intersectPoints","sinAngle","sin","abs","cosAngle","cos","tanAngle","cotAngle","yLeft","yRight","xTop","xBottom","_calculateVertices","vertices","fillCenter","cx","cy","num","_getVertAngle","start","end","placementX","placementY","atan","_generateTriangle","vert0","vert1","vert2","v0x","v0y","v1x","v1y","_generateUV","progressX","progressY","px1","px2","py1","py2","RadialFilled","u0","u1","v0","v1","triangleIndex","triangle","startAngle","endAngle","testIndex","updateWorldVertexAndUVData","updateColorLate","setDirty","updateWorldUVData","radialFilled","Simple","updateWorldVerts","vidOrigin","cw","ch","trim","originSize","trimmedBorder","simple","tempRenderData","origin","leftInner","rightInner","rightOuter","bottomInner","topInner","topOuter","Sliced","quadIndices","vertexRow","vertexCol","curRow","curCol","leftWidth","insetLeft","rightWidth","insetRight","topHeight","insetTop","bottomHeight","insetBottom","sizableWidth","sizableHeight","xScale","yScale","Number","isNaN","curIndex","c","row","rowD","col","uvSliced","sliced","tempRenderDataLength","has9SlicedOffsetVertexCount","Tiled","contentHeight","centerWidth","centerHeight","hRepeat","vRepeat","offsetVertexCount","ceil","updateVerts","m11","m08","m09","m10","offsetWidth","offsetHeight","appx","appy","floor","x1","y1","yIndex","xIndex","coefU","coefV","tempXVerts","tempYVerts","yIndexUV","xIndexUV","tiled","SpriteType","Type","spriteAssembler","spriteComp","util","type","SLICED","TILED","FILLED","RADIAL","mouseEvents","InputEventType","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","MOUSE_WHEEL","MOUSE_LEAVE","MOUSE_ENTER","touchEvents","TOUCH_START","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","isDestroy","_objFlags","CCObjectFlags","Destroying","Destroyed","PointerEventDispatcher","priority","EventDispatcherPriority","UI","_isListDirty","_inDispatchCount","_pointerEventProcessorList","_processorListToAdd","_processorListToRemove","input","_registerEventDispatcher","callbacksInvoker","NodeEventProcessor","on","DispatcherEventType","ADD_POINTER_EVENT_PROCESSOR","addPointerEventProcessor","REMOVE_POINTER_EVENT_PROCESSOR","removePointerEventProcessor","MARK_LIST_DIRTY","_markListDirty","onThrowException","dispatchEvent","event","eventType","includes","dispatchEventTouch","dispatchEventMouse","pointerEventProcessor","eventMouse","_sortPointerEventProcessorList","pointerEventProcessorList","dispatchToNextEventDispatcher","isEnabled","shouldHandleEventMouse","_handleEventMouse","preventSwallow","_updatePointerEventProcessorList","eventTouch","touch","shouldHandleEventTouch","_handleEventTouch","claimedTouchIdList","getID","cancelEvent","EventTouch","indexOf","_removeClaimedTouch","eventProcessorIndex","touchID","touchIndex","listToAdd","addLength","listToRemove","removeLength","cachedCameraPriority","cameraPriority","sort","_sortByPriority","p1","p2","node1","node2","activeInHierarchy","n1","n2","ex","parent","_parent","uuid","_parent2","_n","_n$parent","_n2","_n2$parent","priority1","siblingIndex","priority2","_DrawBatch2D","UIDrawBatch","MeshBuffer","item","removeProperty","Batcher2D","MeshRenderData","_MeshRenderData","QuadRenderData","vertexFormat","RenderData"],"mappings":"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"}