{"version":3,"file":"animation-component-Dn_cQlIW.js","sources":["../../../cocos/animation/target-path.ts","../../../cocos/animation/define.ts","../../../cocos/animation/types.ts","../../../cocos/animation/playable.ts","../../../cocos/animation/animation-state.ts","../../../cocos/animation/pose-output.ts","../../../cocos/animation/global-animation-manager.ts","../../../cocos/animation/tracks/track.ts","../../../cocos/animation/cubic-spline-value.ts","../../../cocos/animation/tracks/real-track.ts","../../../cocos/animation/tracks/utils.ts","../../../cocos/animation/tracks/vector-track.ts","../../../cocos/animation/tracks/quat-track.ts","../../../cocos/animation/tracks/color-track.ts","../../../cocos/animation/tracks/size-track.ts","../../../cocos/animation/tracks/object-track.ts","../../../cocos/animation/event/event-emitter.ts","../../../cocos/animation/animation-curve.ts","../../../cocos/animation/tracks/untyped-track.ts","../../../cocos/animation/legacy-clip-data.ts","../../../cocos/animation/exotic-animation/exotic-animation.ts","../../../cocos/animation/auxiliary-curve-entry.ts","../../../cocos/animation/animation-clip.ts","../../../cocos/animation/cross-fade.ts","../../../cocos/animation/animation-component.ts"],"sourcesContent":["/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { Node } from '../scene-graph/node';\r\nimport { warnID } from '../core';\r\nimport type { Component } from '../scene-graph';\r\n\r\n/**\r\n * @deprecated Since V3.3, use [[TrackPath]] instead.\r\n */\r\nexport type PropertyPath = string | number;\r\n\r\n/**\r\n * @deprecated Since V3.3, use [[TrackPath]] instead.\r\n */\r\nexport interface ICustomTargetPath {\r\n    /**\r\n     * @en\r\n     * Gets next target from current target.\r\n     * If errors are encountered, `null` should be returned.\r\n     * @zh\r\n     * 从当前目标中获取下一个目标。\r\n     * 若错误发生，应返回 `null`。\r\n     * @param target\r\n     */\r\n    get(target: any): any;\r\n}\r\n\r\n/**\r\n * @deprecated Since V3.3, use [[TrackPath]] instead.\r\n */\r\nexport type TargetPath = PropertyPath | ICustomTargetPath;\r\n\r\n/**\r\n * @deprecated Since V3.3, use [[TrackPath]] instead.\r\n */\r\nexport function isPropertyPath (path: TargetPath): path is PropertyPath {\r\n    return typeof path === 'string' || typeof path === 'number';\r\n}\r\n\r\n/**\r\n * @deprecated Since V3.3, use [[TrackPath]] instead.\r\n */\r\nexport function isCustomPath<T extends ICustomTargetPath> (path: TargetPath, constructor: Constructor<T>): path is T {\r\n    return path instanceof constructor;\r\n}\r\n\r\n/**\r\n * @deprecated Since V3.3, use [[TrackPath]] instead.\r\n */\r\n@ccclass('cc.animation.HierarchyPath')\r\nexport class HierarchyPath implements ICustomTargetPath {\r\n    @serializable\r\n    public path = '';\r\n\r\n    constructor (path?: string) {\r\n        this.path = path || '';\r\n    }\r\n\r\n    public get (target: Node): Node | null {\r\n        if (!(target instanceof Node)) {\r\n            warnID(3925);\r\n            return null;\r\n        }\r\n        const result = target.getChildByPath(this.path);\r\n        if (!result) {\r\n            warnID(3926, target.name, this.path);\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * @deprecated Since V3.3, use [[TrackPath]] instead.\r\n */\r\n@ccclass('cc.animation.ComponentPath')\r\nexport class ComponentPath implements ICustomTargetPath {\r\n    @serializable\r\n    public component = '';\r\n\r\n    constructor (component?: string) {\r\n        this.component = component || '';\r\n    }\r\n\r\n    public get (target: Node): Component | null {\r\n        if (!(target instanceof Node)) {\r\n            warnID(3927);\r\n            return null;\r\n        }\r\n        const result = target.getComponent(this.component);\r\n        if (!result) {\r\n            warnID(3928, target.name, this.component);\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport const CLASS_NAME_PREFIX_ANIM = 'cc.animation.';\r\n\r\nexport const createEvalSymbol = Symbol('CreateEval');\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccenum, geometry } from '../core';\r\n\r\n/**\r\n * 动画使用的循环模式。\r\n */\r\nexport enum WrapMode {\r\n    /**\r\n     * 向 Animation Component 或者 AnimationClip 查找 wrapMode\r\n     */\r\n    Default = geometry.WrapModeMask.Default,\r\n\r\n    /**\r\n     * 动画只播放一遍\r\n     */\r\n    Normal = geometry.WrapModeMask.Normal,\r\n\r\n    /**\r\n     * 从最后一帧或结束位置开始反向播放，到第一帧或开始位置停止\r\n     */\r\n    Reverse = geometry.WrapModeMask.Reverse,\r\n\r\n    /**\r\n     * 循环播放\r\n     */\r\n    Loop = geometry.WrapModeMask.Loop,\r\n\r\n    /**\r\n     * 反向循环播放\r\n     */\r\n    LoopReverse = geometry.WrapModeMask.Loop | geometry.WrapModeMask.Reverse,\r\n\r\n    /**\r\n     * 从第一帧播放到最后一帧，然后反向播放回第一帧，到第一帧后再正向播放，如此循环\r\n     */\r\n    PingPong = geometry.WrapModeMask.PingPong,\r\n\r\n    /**\r\n     * 从最后一帧开始反向播放，其他同 PingPong\r\n     */\r\n    PingPongReverse = geometry.WrapModeMask.PingPong | geometry.WrapModeMask.Reverse,\r\n}\r\n\r\nccenum(WrapMode);\r\n\r\n/**\r\n * For internal\r\n */\r\nexport class WrappedInfo {\r\n    public ratio = 0;\r\n    public time = 0;\r\n    public direction = 1;\r\n    public stopped = true;\r\n    public iterations = 0;\r\n    public frameIndex: number = undefined as unknown as number;\r\n\r\n    constructor (info?: WrappedInfo) {\r\n        if (info) {\r\n            this.set(info);\r\n        }\r\n    }\r\n\r\n    public set (info: WrappedInfo): void {\r\n        this.ratio = info.ratio;\r\n        this.time = info.time;\r\n        this.direction = info.direction;\r\n        this.stopped = info.stopped;\r\n        this.iterations = info.iterations;\r\n        this.frameIndex = info.frameIndex;\r\n    }\r\n}\r\n\r\nexport interface ILerpable {\r\n    /**\r\n     * 在当前曲线值与目标曲线值之间插值。\r\n     * @param to 目标曲线值。\r\n     * @param t 插值比率。\r\n     * @param dt 当前曲线值与目标曲线值的时间间隔，单位为秒。\r\n     * @returns 插值结果。\r\n     */\r\n    lerp (to: any, t: number, dt: number): any;\r\n\r\n    /**\r\n     * 当直接使用曲线值作为采样结果时的结果值，它应该等同于插值比率为 0 时的插值结果。\r\n     * @returns 插值比率为 0 时的插值结果。\r\n     */\r\n    getNoLerp? (): any;\r\n}\r\n\r\nexport function isLerpable (object: any): object is ILerpable {\r\n    return typeof object.lerp === 'function';\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { getError } from '../core';\r\n\r\nexport class Playable {\r\n    /**\r\n     * @en Whether if this `Playable` is in playing.\r\n     * @zh 该 `Playable` 是否正在播放状态。\r\n     * @default false\r\n     */\r\n    get isPlaying (): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @en Whether if this `Playable` has been paused. This can be true even if in edit mode(isPlaying == false).\r\n     * @zh 该 `Playable` 是否已被暂停。\r\n     * @default false\r\n     */\r\n    get isPaused (): boolean {\r\n        return this._isPaused;\r\n    }\r\n\r\n    /**\r\n     * @en Whether if this `Playable` has been paused or stopped.\r\n     * @zh 该 `Playable` 是否已被暂停或停止。\r\n     */\r\n    get isMotionless (): boolean {\r\n        return !this.isPlaying || this.isPaused;\r\n    }\r\n\r\n    private _isPlaying = false;\r\n    private _isPaused = false;\r\n    private _stepOnce = false;\r\n\r\n    /**\r\n     * @en Play this animation.\r\n     * @zh 播放动画。\r\n     */\r\n    public play (): void {\r\n        if (this._isPlaying) {\r\n            if (this._isPaused) {\r\n                this._isPaused = false;\r\n                this.onResume();\r\n            } else {\r\n                this.onError(getError(3912));\r\n            }\r\n        } else {\r\n            this._isPlaying = true;\r\n            this.onPlay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stop this animation.\r\n     * @zh 停止动画播放。\r\n     */\r\n    public stop (): void {\r\n        if (this._isPlaying) {\r\n            this._isPlaying = false;\r\n            this.onStop();\r\n\r\n            // need reset pause flag after onStop\r\n            this._isPaused = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Pause this animation.\r\n     * @zh 暂停动画。\r\n     */\r\n    public pause (): void {\r\n        if (this._isPlaying && !this._isPaused) {\r\n            this._isPaused = true;\r\n            this.onPause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Resume this animation.\r\n     * @zh 重新播放动画。\r\n     */\r\n    public resume (): void {\r\n        if (this._isPlaying && this._isPaused) {\r\n            this._isPaused = false;\r\n            this.onResume();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Perform a single frame step.\r\n     * @zh 执行一帧动画。\r\n     */\r\n    public step (): void {\r\n        this.pause();\r\n        this._stepOnce = true;\r\n        if (!this._isPlaying) {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    public update (deltaTime: number): void {\r\n\r\n    }\r\n\r\n    protected onPlay (): void {\r\n\r\n    }\r\n\r\n    protected onPause (): void {\r\n\r\n    }\r\n\r\n    protected onResume (): void {\r\n\r\n    }\r\n\r\n    protected onStop (): void {\r\n\r\n    }\r\n\r\n    protected onError (message: string): void {\r\n\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { Node } from '../scene-graph/node';\r\nimport { AnimationClip } from './animation-clip';\r\nimport { Playable } from './playable';\r\nimport { WrapMode, WrappedInfo } from './types';\r\nimport { cclegacy, debug, geometry, ccenum, assertIsTrue } from '../core';\r\nimport { AnimationMask } from './marionette/animation-mask';\r\nimport { PoseOutput } from './pose-output';\r\nimport { BlendStateBuffer } from '../3d/skeletal-animation/skeletal-animation-blending';\r\nimport { getGlobalAnimationManager } from './global-animation-manager';\r\n\r\n/**\r\n * @en The event type supported by Animation\r\n * @zh Animation 支持的事件类型。\r\n */\r\nexport enum AnimationStateEventType {\r\n    /**\r\n     * @en Emit when begin playing animation\r\n     * @zh 开始播放时触发。\r\n     */\r\n    PLAY = 'play',\r\n    /**\r\n     * @en Emit when stop playing animation\r\n     * @zh 停止播放时触发。\r\n     */\r\n    STOP = 'stop',\r\n    /**\r\n     * @en Emit when pause animation\r\n     * @zh 暂停播放时触发。\r\n     */\r\n    PAUSE = 'pause',\r\n    /**\r\n     * @en Emit when resume animation\r\n     * @zh 恢复播放时触发。\r\n     */\r\n    RESUME = 'resume',\r\n\r\n    /**\r\n     * @en If animation repeat count is larger than 1, emit when animation play to the last frame.\r\n     * @zh 假如动画循环次数大于 1，当动画播放到最后一帧时触发。\r\n     */\r\n    LASTFRAME = 'lastframe',\r\n\r\n    /**\r\n     * @en Triggered when finish playing animation.\r\n     * @zh 动画完成播放时触发。\r\n     */\r\n    FINISHED = 'finished',\r\n}\r\nccenum(AnimationStateEventType);\r\n\r\n/**\r\n * @en\r\n * The AnimationState gives full control over animation playback process.\r\n * In most cases the Animation Component is sufficient and easier to use. Use the AnimationState if you need full control.\r\n * @zh\r\n * AnimationState 完全控制动画播放过程。<br/>\r\n * 大多数情况下 动画组件 是足够和易于使用的。如果您需要更多的动画控制接口，请使用 AnimationState。\r\n *\r\n */\r\nexport class AnimationState extends Playable {\r\n    /**\r\n     * @en The clip that is being played by this animation state.\r\n     * @zh 此动画状态正在播放的剪辑。\r\n     */\r\n    get clip (): AnimationClip {\r\n        return this._clip;\r\n    }\r\n\r\n    /**\r\n     * @en The name of the playing animation.\r\n     * @zh 动画的名字。\r\n     */\r\n    get name (): string {\r\n        return this._name;\r\n    }\r\n\r\n    get length (): number {\r\n        return this.duration;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Wrapping mode of the playing animation.\r\n     * Notice : dynamic change wrapMode will reset time and repeatCount property\r\n     * @zh\r\n     * 动画循环方式。\r\n     * 需要注意的是，动态修改 wrapMode 时，会重置 time 以及 repeatCount。\r\n     * @default: WrapMode.Normal\r\n     */\r\n    get wrapMode (): WrapMode {\r\n        return this._wrapMode;\r\n    }\r\n\r\n    set wrapMode (value: WrapMode) {\r\n        this._wrapMode = value;\r\n\r\n        // dynamic change wrapMode will need reset time to 0\r\n        this.time = 0;\r\n\r\n        if (value & geometry.WrapModeMask.Loop) {\r\n            this.repeatCount = Infinity;\r\n        } else {\r\n            this.repeatCount = 1;\r\n        }\r\n\r\n        this._clipEventEval?.setWrapMode(value);\r\n    }\r\n\r\n    /**\r\n     * @en The animation's iteration count property.\r\n     *\r\n     * A real number greater than or equal to zero (including positive infinity) representing the number of times\r\n     * to repeat the animation node.\r\n     *\r\n     * Values less than zero and NaN values are treated as the value 1.0 for the purpose of timing model\r\n     * calculations.\r\n     *\r\n     * @zh 迭代次数，指动画播放多少次后结束, normalize time。 如 2.5（2次半）。\r\n     *\r\n     * @default 1\r\n     */\r\n    get repeatCount (): number {\r\n        return this._repeatCount;\r\n    }\r\n\r\n    set repeatCount (value: number) {\r\n        this._repeatCount = value;\r\n\r\n        const shouldWrap = this._wrapMode & geometry.WrapModeMask.ShouldWrap;\r\n        const reverse = (this.wrapMode & geometry.WrapModeMask.Reverse) === geometry.WrapModeMask.Reverse;\r\n        if (value === Infinity && !shouldWrap && !reverse) {\r\n            this._useSimpleProcess = true;\r\n        } else {\r\n            this._useSimpleProcess = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The start delay which represents the number of seconds from an animation's start time to the start of\r\n     * the active interval.\r\n     * @zh 延迟多少秒播放。\r\n     * @default 0\r\n     */\r\n    get delay (): number {\r\n        return this._delay;\r\n    }\r\n\r\n    set delay (value: number) {\r\n        this._delayTime = this._delay = value;\r\n    }\r\n\r\n    // http://www.w3.org/TR/web-animations/#idl-def-AnimationTiming\r\n\r\n    /**\r\n     * @en The iteration duration of this animation in seconds. (length)\r\n     * @zh 单次动画的持续时间，秒。（动画长度）\r\n     * @readOnly\r\n     */\r\n    public duration = 1.0;\r\n\r\n    /**\r\n     * @en\r\n     * Gets or sets the playback range.\r\n     * The `min` and `max` field of the range are measured in seconds.\r\n     * While setting, the range object should be a valid range.\r\n     * The actual playback range would be the inclusion of this field and [0, duration].\r\n     * Set this field would reset the accumulated play time.\r\n     * If `min === max`, the animation always play at `min`.\r\n     * @zh\r\n     * 获取或设置播放范围。\r\n     * 范围的 `min`、`max` 字段都是以秒为单位的。\r\n     * 设置时，应当指定一个有效的范围；实际的播放范围是该字段和 [0, 周期] 之间的交集。\r\n     * 设置播放范围时将重置累计播放时间。\r\n     * 如果 `min === max`，该动画将一直在 `min` 处播放。\r\n     */\r\n    get playbackRange (): Readonly<{ min: number; max: number; }> {\r\n        return this._playbackRange;\r\n    }\r\n\r\n    set playbackRange (value) {\r\n        assertIsTrue(value.max >= value.min);\r\n        this._playbackRange.min = Math.max(value.min, 0);\r\n        this._playbackRange.max = Math.min(value.max, this.duration);\r\n        this._playbackDuration = this._playbackRange.max - this._playbackRange.min;\r\n        this.setTime(0.0);\r\n    }\r\n\r\n    /**\r\n     * @en The animation's playback speed. 1 is normal playback speed.\r\n     * @zh 播放速率。\r\n     * @default: 1.0\r\n     */\r\n    get speed (): number {\r\n        return this._speed;\r\n    }\r\n\r\n    set speed (value) {\r\n        this._speed = value;\r\n        this._clipEmbeddedPlayerEval?.notifyHostSpeedChanged(value);\r\n    }\r\n\r\n    /**\r\n     * @en The current accumulated time of this animation in seconds.\r\n     * @zh 动画当前**累计播放**的时间，单位为秒。\r\n     * @default 0\r\n     */\r\n    public time = 0.0;\r\n\r\n    /**\r\n     * @en Gets the time progress, in seconds.\r\n     * @zh 获取动画的时间进度，单位为秒。\r\n     */\r\n    get current (): number {\r\n        return this.getWrappedInfo(this.time).time;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the playback ratio.\r\n     * @zh 获取动画播放的比例时间。\r\n     */\r\n    get ratio (): number {\r\n        return this.duration === 0.0 ? 0.0 : this.current / this.duration;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The weight of this animation state.\r\n     * @zh\r\n     * 此动画状态的权重。\r\n     */\r\n    get weight (): number {\r\n        return this._weight;\r\n    }\r\n\r\n    set weight (value) {\r\n        this._weight = value;\r\n        if (this._poseOutput) {\r\n            this._poseOutput.weight = value;\r\n        }\r\n    }\r\n\r\n    public frameRate = 0;\r\n\r\n    /**\r\n     * @internal This field is only visible from within internal.\r\n     */\r\n    protected _targetNode: Node | null = null;\r\n\r\n    /**\r\n     * @internal This field is only visible from within internal.\r\n     */\r\n    protected _curveLoaded = false;\r\n\r\n    private _clip: AnimationClip;\r\n    private _speed = 1.0;\r\n    private _useSimpleProcess = false;\r\n    private _target: Node | null = null;\r\n    private _wrapMode = WrapMode.Normal;\r\n    private _repeatCount = 1;\r\n    private _delay = 0.0;\r\n    private _delayTime = 0.0;\r\n    /**\r\n     * Mark whether the current frame is played.\r\n     * When set new time to animation state, we should ensure the frame at the specified time being played at next update.\r\n     */\r\n    private _currentFramePlayed = false;\r\n    private _name: string;\r\n    private _lastIterations = NaN;\r\n    private _lastWrapInfo: WrappedInfo | null = null;\r\n    private _wrappedInfo = new WrappedInfo();\r\n    private _allowLastFrame = false;\r\n    private _blendStateWriterHost = {\r\n        weight: 0.0,\r\n    };\r\n    private declare _playbackRange: { min: number; max: number; };\r\n    private _playbackDuration = 0.0;\r\n    private _invDuration = 1.0;\r\n    private _poseOutput: PoseOutput | null = null;\r\n    private _weight = 1.0;\r\n    private _clipEval: ReturnType<AnimationClip['createEvaluator']> | undefined;\r\n    private _clipEventEval: ReturnType<AnimationClip['createEventEvaluator']> | undefined;\r\n    private _clipEmbeddedPlayerEval: ReturnType<AnimationClip['createEmbeddedPlayerEvaluator']> | undefined;\r\n    /**\r\n     * @internal For internal usage. Really hack...\r\n     */\r\n    protected _doNotCreateEval = false;\r\n\r\n    constructor (clip: AnimationClip, name = '') {\r\n        super();\r\n        this._clip = clip;\r\n        this._name = name || (clip && clip.name);\r\n        this._playbackRange = {\r\n            min: 0.0,\r\n            max: clip.duration,\r\n        };\r\n        this._playbackDuration = clip.duration;\r\n        if (!clip.duration) {\r\n            debug(`Clip ${clip.name} has zero duration.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is used for internal purpose only.\r\n     */\r\n    get curveLoaded (): boolean {\r\n        return this._curveLoaded;\r\n    }\r\n\r\n    public initialize (root: Node, blendStateBuffer?: BlendStateBuffer, mask?: AnimationMask): void {\r\n        if (this._curveLoaded) { return; }\r\n        this._curveLoaded = true;\r\n        if (this._poseOutput) {\r\n            this._poseOutput.destroy();\r\n            this._poseOutput = null;\r\n        }\r\n        if (this._clipEval) {\r\n            // TODO: destroy?\r\n            this._clipEval = undefined;\r\n        }\r\n        if (this._clipEventEval) {\r\n            this._clipEventEval = undefined;\r\n        }\r\n        if (this._clipEmbeddedPlayerEval) {\r\n            this._clipEmbeddedPlayerEval.destroy();\r\n            this._clipEmbeddedPlayerEval = undefined;\r\n        }\r\n        this._targetNode = root;\r\n        const clip = this._clip;\r\n\r\n        this.duration = clip.duration;\r\n        this._invDuration = 1.0 / this.duration;\r\n        this._speed = clip.speed;\r\n        this.wrapMode = clip.wrapMode;\r\n        this.frameRate = clip.sample;\r\n        this._playbackRange.min = 0.0;\r\n        this._playbackRange.max = clip.duration;\r\n        this._playbackDuration = clip.duration;\r\n\r\n        if ((this.wrapMode & geometry.WrapModeMask.Loop) === geometry.WrapModeMask.Loop) {\r\n            this.repeatCount = Infinity;\r\n        } else {\r\n            this.repeatCount = 1;\r\n        }\r\n\r\n        if (!this._doNotCreateEval) {\r\n            const pose = blendStateBuffer ?? getGlobalAnimationManager()?.blendState ?? null;\r\n            if (pose) {\r\n                this._poseOutput = new PoseOutput(pose);\r\n            }\r\n            this._clipEval = clip.createEvaluator({\r\n                target: root,\r\n                pose: this._poseOutput ?? undefined,\r\n                mask,\r\n            });\r\n        }\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            if (clip.containsAnyEvent()) {\r\n                this._clipEventEval = clip.createEventEvaluator(this._targetNode);\r\n            }\r\n        }\r\n\r\n        if (clip.containsAnyEmbeddedPlayer()) {\r\n            this._clipEmbeddedPlayerEval = clip.createEmbeddedPlayerEvaluator(this._targetNode);\r\n            this._clipEmbeddedPlayerEval.notifyHostSpeedChanged(this._speed);\r\n        }\r\n    }\r\n\r\n    public destroy (): void {\r\n        if (!this.isMotionless) {\r\n            getGlobalAnimationManager().removeAnimation(this);\r\n        }\r\n        if (this._poseOutput) {\r\n            this._poseOutput.destroy();\r\n            this._poseOutput = null;\r\n        }\r\n        // TODO: destroy?\r\n        this._clipEval = undefined!;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since V1.1.1, animation states were no longer defined as event targets.\r\n     * To process animation events, use `Animation` instead.\r\n     */\r\n    public emit (...args: any[]): void {\r\n        getGlobalAnimationManager().pushDelayEvent(this._emit, this, args);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since V1.1.1, animation states were no longer defined as event targets.\r\n     * To process animation events, use `Animation` instead.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public on (type: string, callback: Function, target?: any): void | null {\r\n        if (this._target && this._target.isValid) {\r\n            return this._target.on(type, callback, target);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since V1.1.1, animation states were no longer defined as event targets.\r\n     * To process animation events, use `Animation` instead.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public once (type: string, callback: Function, target?: any): void | null {\r\n        if (this._target && this._target.isValid) {\r\n            return this._target.once(type, callback, target);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since V1.1.1, animation states were no longer defined as event targets.\r\n     * To process animation events, use `Animation` instead.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public off (type: string, callback: Function, target?: any): void {\r\n        if (this._target && this._target.isValid) {\r\n            this._target.off(type, callback, target);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 是否允许触发 `LastFrame` 事件。\r\n     * 该方法仅用作内部用途。\r\n     * @en\r\n     * Whether `LastFrame` should be triggered.\r\n     * @param allowed True if the last frame events may be triggered.\r\n     * This method is only used for internal purpose only.\r\n     */\r\n    public allowLastFrameEvent (allowed: boolean): void {\r\n        this._allowLastFrame = allowed;\r\n    }\r\n\r\n    /**\r\n     * This method is used for internal purpose only.\r\n     * @internal\r\n     */\r\n    public _setEventTarget (target): void {\r\n        this._target = target;\r\n    }\r\n\r\n    public setTime (time: number): void {\r\n        this._currentFramePlayed = false;\r\n        this.time = time || 0.0;\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            const info = this.getWrappedInfo(time, this._wrappedInfo);\r\n            this._clipEventEval?.ignore(info.ratio, info.direction);\r\n        }\r\n    }\r\n\r\n    public update (delta: number): void {\r\n        // calculate delay time\r\n\r\n        if (this._delayTime > 0.0) {\r\n            this._delayTime -= delta;\r\n            if (this._delayTime > 0.0) {\r\n                // still waiting\r\n                return;\r\n            }\r\n        }\r\n\r\n        // make first frame perfect\r\n\r\n        // var playPerfectFirstFrame = (this.time === 0);\r\n        if (this._currentFramePlayed) {\r\n            this.time += (delta * this._speed);\r\n        } else {\r\n            this._currentFramePlayed = true;\r\n        }\r\n\r\n        this._process();\r\n    }\r\n\r\n    public sample (): WrappedInfo {\r\n        const info = this.getWrappedInfo(this.time, this._wrappedInfo);\r\n        this._sampleCurves(info.time);\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this._sampleEvents(info);\r\n        }\r\n        this._sampleEmbeddedPlayers(info);\r\n        return info;\r\n    }\r\n\r\n    protected onPlay (): void {\r\n        this.setTime(this._getPlaybackStart());\r\n        this._delayTime = this._delay;\r\n        this._onReplayOrResume();\r\n        this.emit(AnimationStateEventType.PLAY, this);\r\n        this._clipEmbeddedPlayerEval?.notifyHostPlay(this.current);\r\n    }\r\n\r\n    protected onStop (): void {\r\n        if (!this.isPaused) {\r\n            this._onPauseOrStop();\r\n        }\r\n        this.emit(AnimationStateEventType.STOP, this);\r\n        this._clipEmbeddedPlayerEval?.notifyHostStop();\r\n    }\r\n\r\n    protected onResume (): void {\r\n        this._onReplayOrResume();\r\n        this.emit(AnimationStateEventType.RESUME, this);\r\n        this._clipEmbeddedPlayerEval?.notifyHostPlay(this.current);\r\n    }\r\n\r\n    protected onPause (): void {\r\n        this._onPauseOrStop();\r\n        this.emit(AnimationStateEventType.PAUSE, this);\r\n        this._clipEmbeddedPlayerEval?.notifyHostPause(this.current);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _sampleCurves (time: number): void {\r\n        const { _poseOutput: poseOutput, _clipEval: clipEval } = this;\r\n        if (poseOutput) {\r\n            poseOutput.weight = this.weight;\r\n        }\r\n        if (clipEval) {\r\n            clipEval.evaluate(time);\r\n        }\r\n    }\r\n\r\n    private _process (): void {\r\n        if (this._useSimpleProcess) {\r\n            this.simpleProcess();\r\n        } else {\r\n            this.process();\r\n        }\r\n    }\r\n\r\n    private process (): void {\r\n        // sample\r\n        const info = this.sample();\r\n\r\n        if (this._allowLastFrame) {\r\n            let lastInfo;\r\n            if (!this._lastWrapInfo) {\r\n                lastInfo = this._lastWrapInfo = new WrappedInfo(info);\r\n            } else {\r\n                lastInfo = this._lastWrapInfo;\r\n            }\r\n\r\n            if (this.repeatCount > 1 && ((info.iterations | 0) > (lastInfo.iterations | 0))) {\r\n                this.emit(AnimationStateEventType.LASTFRAME, this);\r\n            }\r\n\r\n            lastInfo.set(info);\r\n        }\r\n\r\n        if (info.stopped) {\r\n            this.stop();\r\n            this.emit(AnimationStateEventType.FINISHED, this);\r\n        }\r\n    }\r\n\r\n    private simpleProcess (): void {\r\n        const playbackStart = this._playbackRange.min;\r\n        const playbackDuration = this._playbackDuration;\r\n\r\n        let time = 0.0;\r\n        let ratio = 0.0;\r\n        if (playbackDuration !== 0.0) {\r\n            time = this.time % playbackDuration;\r\n            if (time < 0.0) {\r\n                time += playbackDuration;\r\n            }\r\n            const realTime = playbackStart + time;\r\n            ratio = realTime * this._invDuration;\r\n        }\r\n        this._sampleCurves(playbackStart + time);\r\n\r\n        if (this._clipEventEval || this._clipEmbeddedPlayerEval) {\r\n            const wrapInfo = this.getWrappedInfo(this.time, this._wrappedInfo);\r\n            if (!EDITOR_NOT_IN_PREVIEW) {\r\n                this._sampleEvents(wrapInfo);\r\n            }\r\n\r\n            this._sampleEmbeddedPlayers(wrapInfo);\r\n        }\r\n\r\n        if (this._allowLastFrame) {\r\n            if (Number.isNaN(this._lastIterations)) {\r\n                this._lastIterations = ratio;\r\n            }\r\n\r\n            if ((this.time > 0 && this._lastIterations > ratio) || (this.time < 0 && this._lastIterations < ratio)) {\r\n                this.emit(AnimationStateEventType.LASTFRAME, this);\r\n            }\r\n\r\n            this._lastIterations = ratio;\r\n        }\r\n    }\r\n\r\n    private _needReverse (currentIterations: number): boolean {\r\n        const wrapMode = this.wrapMode;\r\n        let needReverse = false;\r\n\r\n        if ((wrapMode & geometry.WrapModeMask.PingPong) === geometry.WrapModeMask.PingPong) {\r\n            const isEnd = currentIterations - (currentIterations | 0) === 0;\r\n            if (isEnd && (currentIterations > 0)) {\r\n                currentIterations -= 1;\r\n            }\r\n\r\n            const isOddIteration = currentIterations & 1;\r\n            if (isOddIteration) {\r\n                needReverse = !needReverse;\r\n            }\r\n        }\r\n        if ((wrapMode & geometry.WrapModeMask.Reverse) === geometry.WrapModeMask.Reverse) {\r\n            needReverse = !needReverse;\r\n        }\r\n        return needReverse;\r\n    }\r\n\r\n    private getWrappedInfo (time: number, info?: WrappedInfo): WrappedInfo {\r\n        info = info || new WrappedInfo();\r\n\r\n        const {\r\n            _playbackRange: {\r\n                min: playbackStart,\r\n            },\r\n            _playbackDuration: playbackDuration,\r\n        } = this;\r\n\r\n        const repeatCount = this.repeatCount;\r\n\r\n        if (playbackDuration === 0.0) {\r\n            info.time = 0.0;\r\n            info.ratio = 0.0;\r\n            info.direction = 1.0;\r\n            info.stopped = !!Number.isFinite(repeatCount);\r\n            info.iterations = 0.0;\r\n            return info;\r\n        }\r\n\r\n        let stopped = false;\r\n\r\n        time -= playbackStart;\r\n\r\n        let currentIterations = time > 0 ? (time / playbackDuration) : -(time / playbackDuration);\r\n        if (currentIterations >= repeatCount) {\r\n            currentIterations = repeatCount;\r\n\r\n            stopped = true;\r\n            let tempRatio = repeatCount - (repeatCount | 0);\r\n            if (tempRatio === 0) {\r\n                tempRatio = 1;  // 如果播放过，动画不复位\r\n            }\r\n            time = tempRatio * playbackDuration * (time > 0 ? 1 : -1);\r\n        }\r\n\r\n        if (time > playbackDuration) {\r\n            const tempTime = time % playbackDuration;\r\n            time = tempTime === 0 ? playbackDuration : tempTime;\r\n        } else if (time < 0) {\r\n            time %= playbackDuration;\r\n            if (time !== 0) { time += playbackDuration; }\r\n        }\r\n\r\n        let needReverse = false;\r\n        const shouldWrap = this._wrapMode & geometry.WrapModeMask.ShouldWrap;\r\n        if (shouldWrap) {\r\n            needReverse = this._needReverse(currentIterations);\r\n        }\r\n\r\n        let direction = needReverse ? -1 : 1;\r\n        if (this.speed < 0) {\r\n            direction *= -1;\r\n        }\r\n\r\n        // calculate wrapped time\r\n        if (shouldWrap && needReverse) {\r\n            time = playbackDuration - time;\r\n        }\r\n\r\n        info.time = playbackStart + time;\r\n        info.ratio = info.time / this.duration;\r\n        info.direction = direction;\r\n        info.stopped = stopped;\r\n        info.iterations = currentIterations;\r\n\r\n        return info;\r\n    }\r\n\r\n    private _getPlaybackStart (): number {\r\n        return this._playbackRange.min;\r\n    }\r\n\r\n    private _sampleEvents (wrapInfo: WrappedInfo): void {\r\n        this._clipEventEval?.sample(\r\n            wrapInfo.ratio,\r\n            wrapInfo.direction,\r\n            wrapInfo.iterations,\r\n        );\r\n    }\r\n\r\n    private _sampleEmbeddedPlayers (wrapInfo: WrappedInfo): void {\r\n        this._clipEmbeddedPlayerEval?.evaluate(\r\n            wrapInfo.time,\r\n            Math.trunc(wrapInfo.iterations),\r\n        );\r\n    }\r\n\r\n    private _emit (type, state): void {\r\n        if (this._target && this._target.isValid) {\r\n            this._target.emit(type, type, state);\r\n        }\r\n    }\r\n\r\n    private _onReplayOrResume (): void {\r\n        getGlobalAnimationManager().addAnimation(this);\r\n    }\r\n\r\n    private _onPauseOrStop (): void {\r\n        getGlobalAnimationManager().removeAnimation(this);\r\n    }\r\n}\r\n\r\ncclegacy.AnimationState = AnimationState;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BlendStateBuffer, BlendingPropertyName, BlendStateWriter } from '../3d/skeletal-animation/skeletal-animation-blending';\r\nimport type { Node } from '../scene-graph';\r\n\r\nexport type Pose = BlendStateBuffer;\r\n\r\nexport class PoseOutput {\r\n    public weight = 0.0;\r\n\r\n    constructor (pose: Pose) {\r\n        this._pose = pose;\r\n    }\r\n\r\n    public destroy (): void {\r\n        for (let iBlendStateWriter = 0; iBlendStateWriter < this._blendStateWriters.length; ++iBlendStateWriter) {\r\n            this._pose.destroyWriter(this._blendStateWriters[iBlendStateWriter]);\r\n        }\r\n        this._blendStateWriters.length = 0;\r\n    }\r\n\r\n    public createPoseWriter (node: Node, property: BlendingPropertyName, constants: boolean): BlendStateWriter<BlendingPropertyName> {\r\n        const writer = this._pose.createWriter(node, property, this, constants);\r\n        this._blendStateWriters.push(writer);\r\n        return writer;\r\n    }\r\n\r\n    private _pose: Pose;\r\n\r\n    private _blendStateWriters: BlendStateWriter<any>[] = [];\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { cclegacy } from '../core';\r\nimport type { AnimationManager } from './animation-manager';\r\n\r\nexport function getGlobalAnimationManager (): AnimationManager {\r\n    const animationManager = cclegacy.director.getAnimationManager() as AnimationManager;\r\n    return animationManager;\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, uniquelyReferenced } from 'cc.decorator';\r\nimport { SUPPORT_JIT } from 'internal:constants';\r\nimport type { Component } from '../../scene-graph/component';\r\nimport { error, ObjectCurve, QuatCurve, RealCurve, errorID, warnID, js } from '../../core';\r\nimport { assertIsTrue } from '../../core/data/utils/asserts';\r\n\r\nimport { Node } from '../../scene-graph';\r\nimport { CLASS_NAME_PREFIX_ANIM, createEvalSymbol } from '../define';\r\nimport type { AnimationMask } from '../marionette/animation-mask';\r\nimport { PoseOutput } from '../pose-output';\r\nimport { ComponentPath, HierarchyPath, isPropertyPath, TargetPath } from '../target-path';\r\nimport { IValueProxyFactory } from '../value-proxy';\r\nimport { Range } from './utils';\r\n\r\nexport const normalizedFollowTag = Symbol('NormalizedFollow');\r\n\r\nconst parseTrsPathTag = Symbol('ConvertAsTrsPath');\r\n\r\nexport const trackBindingTag = Symbol('TrackBinding');\r\n\r\nexport interface RuntimeBinding<T = unknown> {\r\n    setValue(value: T): void;\r\n\r\n    getValue?(): T;\r\n}\r\n\r\nexport type Binder = (binding: TrackBinding) => undefined | RuntimeBinding;\r\n\r\nexport type TrsTrackPath = [HierarchyPath, 'position' | 'rotation' | 'scale' | 'eulerAngles'];\r\n\r\n/**\r\n * @en Describes how to find the animation target.\r\n * @zh 描述怎样寻址动画目标。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}TrackPath`)\r\nclass TrackPath {\r\n    /**\r\n     * @en The length of the path.\r\n     * @zh 此路径的段数。\r\n     */\r\n    get length (): number {\r\n        return this._paths.length;\r\n    }\r\n\r\n    /**\r\n     * @en Appends a property path.\r\n     * @zh 附加一段属性路径。\r\n     * @param name The property's name.\r\n     * @returns `this`\r\n     */\r\n    public toProperty (name: string): TrackPath {\r\n        this._paths.push(name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Appends an array element path.\r\n     * @zh 附加一段数组元素路径。\r\n     * @param index The element's index.\r\n     * @returns `this`\r\n     */\r\n    public toElement (index: number): TrackPath {\r\n        this._paths.push(index);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Appends a hierarchy path.\r\n     * @zh 附加一段层级路径。\r\n     * @param nodePath Path to the children.\r\n     * @returns `this`\r\n     */\r\n    public toHierarchy (nodePath: string): TrackPath {\r\n        this._paths.push(new HierarchyPath(nodePath));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Appends a component path.\r\n     * @zh 附加一段组件路径。\r\n     * @param constructor @en The constructor of the component. @zh 组件的构造函数。\r\n     * @returns `this`\r\n     */\r\n    public toComponent<T extends Component> (constructor: Constructor<T> | string): TrackPath {\r\n        const path = new ComponentPath(typeof constructor === 'string' ? constructor : js.getClassName(constructor));\r\n        this._paths.push(path);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @internal Reserved for backward compatibility. DO NOT USE IT IN YOUR CODE.\r\n     */\r\n    public toCustomized (resolver: CustomizedTrackPathResolver): TrackPath {\r\n        this._paths.push(resolver);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Appends paths to this path.\r\n     * @zh 附加指定路径到此路径后。\r\n     * @param trackPaths Paths to append.\r\n     * @returns `this`.\r\n     */\r\n    public append (...trackPaths: TrackPath[]): TrackPath {\r\n        const paths = this._paths.concat(...trackPaths.map((trackPath): TargetPath[] => trackPath._paths));\r\n        this._paths = paths;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @zh 判断指定路径段是否是属性路径。\r\n     * @en Decides if the specific path segment is property path.\r\n     * @param index Index to the segment。\r\n     * @returns The judgement result.\r\n     */\r\n    public isPropertyAt (index: number): boolean {\r\n        return typeof (this._paths[index]) === 'string';\r\n    }\r\n\r\n    /**\r\n     * @zh 将指定路径段视为属性路径，获取其描述的属性。\r\n     * @en Treats the path segment as a property path. Obtains the property it describes.\r\n     * @param index Index to the segment。\r\n     * @returns The property.\r\n     */\r\n    public parsePropertyAt (index: number): string {\r\n        return this._paths[index] as string;\r\n    }\r\n\r\n    /**\r\n     * @zh 判断指定路径段是否是数组元素路径。\r\n     * @en Decides if the specific path segment is an array element path.\r\n     * @param index Index to the segment。\r\n     * @returns The judgement result.\r\n     */\r\n    public isElementAt (index: number): boolean {\r\n        return typeof this._paths[index] === 'number';\r\n    }\r\n\r\n    /**\r\n     * @zh 将指定路径段视为数组元素路径，获取其描述的数组元素。\r\n     * @en Treats the path segment as an array element path. Obtains the element index it describes.\r\n     * @param index Index to the segment。\r\n     * @returns The element index.\r\n     */\r\n    public parseElementAt (index: number): number {\r\n        return this._paths[index] as number;\r\n    }\r\n\r\n    /**\r\n     * @zh 判断指定路径段是否是层级路径。\r\n     * @en Decides if the specific path segment is a hierarchy path.\r\n     * @param index Index to the segment。\r\n     * @returns The judgement result.\r\n     */\r\n    public isHierarchyAt (index: number): boolean {\r\n        return this._paths[index] instanceof HierarchyPath;\r\n    }\r\n\r\n    /**\r\n     * @zh 将指定路径段视为层级路径，获取其描述的层级路径。\r\n     * @en Treats the path segment as a hierarchy path. Obtains the hierarchy path it describes.\r\n     * @param index Index to the segment。\r\n     * @returns The hierarchy path.\r\n     */\r\n    public parseHierarchyAt (index: number): string {\r\n        assertIsTrue(this.isHierarchyAt(index));\r\n        return (this._paths[index] as HierarchyPath).path;\r\n    }\r\n\r\n    /**\r\n     * @zh 判断指定路径段是否是组件路径。\r\n     * @en Decides if the specific path segment is a component path.\r\n     * @param index Index to the segment。\r\n     * @returns The judgement result.\r\n     */\r\n    public isComponentAt (index: number): boolean {\r\n        return this._paths[index] instanceof ComponentPath;\r\n    }\r\n\r\n    /**\r\n     * @zh 将指定路径段视为组件路径，获取其描述的组件路径。\r\n     * @en Treats the path segment as a hierarchy path. Obtains the component path it describes.\r\n     * @param index Index to the segment。\r\n     * @returns The component path.\r\n     */\r\n    public parseComponentAt (index: number): string {\r\n        assertIsTrue(this.isComponentAt(index));\r\n        return (this._paths[index] as ComponentPath).component;\r\n    }\r\n\r\n    /**\r\n     * @en Slices a interval of the path.\r\n     * @zh 分割指定区段上的路径。\r\n     * @param beginIndex Begin index to the segment. Default to 0.\r\n     * @param endIndex End index to the segment. Default to the last segment.\r\n     * @returns The new path.\r\n     */\r\n    public slice (beginIndex?: number, endIndex?: number): TrackPath {\r\n        const trackPath = new TrackPath();\r\n        trackPath._paths = this._paths.slice(beginIndex, endIndex);\r\n        return trackPath;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public trace (object: unknown, beginIndex?: number, endIndex?: number): unknown {\r\n        beginIndex ??= 0;\r\n        endIndex ??= this._paths.length;\r\n        return this[normalizedFollowTag](object, beginIndex, endIndex);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [parseTrsPathTag] (): { node: string; property: \"position\" | \"scale\" | \"rotation\" | \"eulerAngles\"; } | null {\r\n        const { _paths: paths } = this;\r\n        const nPaths = paths.length;\r\n\r\n        let iPath = 0;\r\n\r\n        let nodePath = '';\r\n        for (; iPath < nPaths; ++iPath) {\r\n            const path = paths[iPath];\r\n            if (!(path instanceof HierarchyPath)) {\r\n                break;\r\n            } else if (!path.path) {\r\n                continue;\r\n            }  else if (nodePath) {\r\n                nodePath += `/${path.path}`;\r\n            } else {\r\n                nodePath = path.path;\r\n            }\r\n        }\r\n\r\n        if (iPath === nPaths) {\r\n            return null;\r\n        }\r\n\r\n        let prs: 'position' | 'scale' | 'rotation' | 'eulerAngles';\r\n        if (iPath !== nPaths - 1) {\r\n            return null;\r\n        }\r\n\r\n        switch (paths[iPath]) {\r\n        case 'position':\r\n        case 'scale':\r\n        case 'rotation':\r\n        case 'eulerAngles':\r\n            prs = paths[iPath] as typeof prs;\r\n            break;\r\n        default:\r\n            return null;\r\n        }\r\n\r\n        return { node: nodePath, property: prs };\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [normalizedFollowTag] (root: unknown, beginIndex: number, endIndex: number): unknown {\r\n        const { _paths: paths } = this;\r\n        let result = root;\r\n        for (let iPath = beginIndex; iPath < endIndex; ++iPath) {\r\n            const path = paths[iPath];\r\n            if (isPropertyPath(path)) {\r\n                if (!(path in (result as any))) {\r\n                    warnID(3929, path);\r\n                    return null;\r\n                } else {\r\n                    result = (result as any)[path];\r\n                }\r\n            } else {\r\n                result = path.get(result);\r\n            }\r\n            if (result === null) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    @serializable\r\n    private _paths: TargetPath[] = [];\r\n}\r\n\r\ninterface AnimationFunction {\r\n    getValue: () => any;\r\n    setValue: (val: any) => void\r\n}\r\n\r\n/**\r\n * Composite of track path and value proxy.\r\n * Not exposed to external. If there is any reason it should be exposed,\r\n * please redesign the public interfaces.\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}TrackBinding`)\r\n@uniquelyReferenced\r\nexport class TrackBinding {\r\n    @serializable\r\n    public path: Readonly<TrackPath> = new TrackPath();\r\n\r\n    @serializable\r\n    public proxy: IValueProxyFactory | undefined;\r\n\r\n    private static _animationFunctions = new WeakMap<Constructor, Map<string | number, AnimationFunction>>();\r\n\r\n    public parseTrsPath (): { node: string; property: \"position\" | \"scale\" | \"rotation\" | \"eulerAngles\"; } | null {\r\n        if (this.proxy) {\r\n            return null;\r\n        } else {\r\n            return this.path[parseTrsPathTag]();\r\n        }\r\n    }\r\n\r\n    public createRuntimeBinding (target: unknown, poseOutput: PoseOutput | undefined, isConstant: boolean): RuntimeBinding<unknown> | { target: any; setValue: any; getValue: any; } | null {\r\n        const { path, proxy } = this;\r\n        const nPaths = path.length;\r\n        const iLastPath = nPaths - 1;\r\n        if (nPaths !== 0 && (path.isPropertyAt(iLastPath) || path.isElementAt(iLastPath)) && !proxy) {\r\n            const lastPropertyKey = path.isPropertyAt(iLastPath)\r\n                ? path.parsePropertyAt(iLastPath)\r\n                : path.parseElementAt(iLastPath);\r\n            const resultTarget = path[normalizedFollowTag](target, 0, nPaths - 1) as any;\r\n            if (resultTarget === null) {\r\n                return null;\r\n            }\r\n            if (poseOutput && resultTarget instanceof Node && isTrsPropertyName(lastPropertyKey)) {\r\n                const blendStateWriter = poseOutput.createPoseWriter(resultTarget, lastPropertyKey, isConstant);\r\n                return blendStateWriter;\r\n            }\r\n            let setValue; let getValue;\r\n            if (SUPPORT_JIT) {\r\n                let animationFunction = TrackBinding._animationFunctions.get(resultTarget.constructor);\r\n                if (!animationFunction) {\r\n                    animationFunction = new Map();\r\n                    TrackBinding._animationFunctions.set(resultTarget.constructor, animationFunction);\r\n                }\r\n\r\n                let accessor = animationFunction.get(lastPropertyKey);\r\n                if (!accessor) {\r\n                    accessor = {\r\n                        // eslint-disable-next-line @typescript-eslint/no-implied-eval, no-new-func\r\n                        setValue: Function('value', `this.target.${lastPropertyKey} = value;`) as (val: any) => void,\r\n                        // eslint-disable-next-line @typescript-eslint/no-implied-eval, no-new-func\r\n                        getValue: Function(`return this.target.${lastPropertyKey};`) as () => any,\r\n                    };\r\n                    animationFunction.set(lastPropertyKey, accessor);\r\n                }\r\n                setValue = accessor.setValue;\r\n                getValue = accessor.getValue;\r\n            } else {\r\n                setValue = (value: unknown): void => {\r\n                    resultTarget[lastPropertyKey] = value;\r\n                };\r\n                getValue = (): unknown => resultTarget[lastPropertyKey] as unknown;\r\n            }\r\n            return {\r\n                target: resultTarget,\r\n                setValue,\r\n                getValue,\r\n            };\r\n        } else if (!proxy) {\r\n            errorID(3921);\r\n            return null;\r\n        } else {\r\n            const resultTarget = path[normalizedFollowTag](target, 0, nPaths);\r\n            if (resultTarget === null) {\r\n                return null;\r\n            }\r\n            const runtimeProxy = proxy.forTarget(resultTarget);\r\n            if (!runtimeProxy) {\r\n                return null;\r\n            }\r\n            const binding: RuntimeBinding = {\r\n                setValue: (value): void => {\r\n                    runtimeProxy.set(value);\r\n                },\r\n            };\r\n            const proxyGet = runtimeProxy.get;\r\n            if (proxyGet) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                binding.getValue = (): any => proxyGet.call(runtimeProxy);\r\n            }\r\n            return binding;\r\n        }\r\n    }\r\n\r\n    public isMaskedOff (mask: AnimationMask): boolean {\r\n        const trsPath = this.parseTrsPath();\r\n        if (!trsPath) {\r\n            return false;\r\n        }\r\n        const joints = mask.joints[Symbol.iterator]();\r\n        for (let jointMaskInfoIter = joints.next();\r\n            !jointMaskInfoIter.done;\r\n            jointMaskInfoIter = joints.next()) {\r\n            const { value: jointMaskInfo } = jointMaskInfoIter;\r\n            if (jointMaskInfo.path !== trsPath.node) {\r\n                continue;\r\n            }\r\n            return !jointMaskInfo.enabled;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function isTrsPropertyName (name: string | number): name is 'position' | 'rotation' | 'scale' | 'eulerAngles' {\r\n    return name === 'position' || name === 'rotation' || name === 'scale' || name === 'eulerAngles';\r\n}\r\n\r\ninterface CustomizedTrackPathResolver {\r\n    get (target: unknown): unknown;\r\n}\r\n\r\nexport { TrackPath };\r\n\r\n/**\r\n * @en\r\n * A track describes how to trace the target and how to animate it.\r\n * It's the basic unit of animation clip.\r\n * @zh\r\n * 轨道描述了动画目标的路径和动画的方式。它是动画剪辑的基础单元。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}Track`)\r\nexport abstract class Track {\r\n    /**\r\n     * @en Track path.\r\n     * @zh 轨道路径。\r\n     */\r\n    get path (): Readonly<TrackPath> {\r\n        return this._binding.path;\r\n    }\r\n\r\n    set path (value) {\r\n        this._binding.path = value;\r\n    }\r\n\r\n    /**\r\n     * @en Value proxy for the target.\r\n     * @zh 目标的值代理。\r\n     */\r\n    get proxy (): IValueProxyFactory | undefined {\r\n        return this._binding.proxy;\r\n    }\r\n\r\n    set proxy (value) {\r\n        this._binding.proxy = value;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    get [trackBindingTag] (): TrackBinding {\r\n        return this._binding;\r\n    }\r\n\r\n    /**\r\n     * @en Channels on this track.\r\n     * @zh 此轨道上的通道。\r\n     * @returns Iterator to the channels.\r\n     */\r\n    public channels (): Iterable<Channel> {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * @en Time range of this track.\r\n     * @zh 此轨道的时间范围。\r\n     * @returns The time range.\r\n     */\r\n    public range (): Range {\r\n        const range: Range = { min: Infinity, max: -Infinity };\r\n        for (const channel of this.channels()) {\r\n            range.min = Math.min(range.min, channel.curve.rangeMin);\r\n            range.max = Math.max(range.max, channel.curve.rangeMax);\r\n        }\r\n        return range;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public abstract [createEvalSymbol] (): TrackEval<any>;\r\n\r\n    @serializable\r\n    private _binding = new TrackBinding();\r\n}\r\n\r\nexport interface TrackEval<TValue> {\r\n    /**\r\n     * A flag indicating if the track requires a default value to be passed to `this.evaluate`.\r\n     */\r\n    readonly requiresDefault: boolean;\r\n\r\n    /**\r\n     * Evaluates the track.\r\n     * @param time The time.\r\n     * @param defaultValue A default value.\r\n     * This param will be passed if `this.requiresDefault === true` and\r\n     * the caller is able to provide such a default value.\r\n     */\r\n    evaluate(time: number, defaultValue?: TValue extends unknown ? unknown : Readonly<TValue>): TValue;\r\n}\r\n\r\nexport type Curve = RealCurve | QuatCurve | ObjectCurve<unknown>;\r\n\r\n/**\r\n * @en\r\n * Channel contains a curve.\r\n * @zh\r\n * 通道包含了一条曲线。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}Channel`)\r\nexport class Channel<T = Curve> {\r\n    constructor (curve: T) {\r\n        this._curve = curve;\r\n    }\r\n\r\n    /**\r\n     * @internal Not used for now.\r\n     */\r\n    public name = '';\r\n\r\n    /**\r\n     * @en The curve within the channel.\r\n     * @zh 通道中的曲线。\r\n     */\r\n    get curve (): T {\r\n        return this._curve;\r\n    }\r\n\r\n    @serializable\r\n    private _curve!: T;\r\n}\r\n\r\nexport type RealChannel = Channel<RealCurve>;\r\n\r\nexport type QuatChannel = Channel<QuatCurve>;\r\n\r\n/**\r\n * @en 表示一个包含了单条通道的轨道。\r\n * @zh Describes a track which contains only single channel.\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}SingleChannelTrack`)\r\nexport abstract class SingleChannelTrack<TCurve extends Curve> extends Track {\r\n    constructor () {\r\n        super();\r\n        this._channel = new Channel<TCurve>(this.createCurve());\r\n    }\r\n\r\n    /**\r\n     * @en The channel within the track.\r\n     * @zh 轨道包含的通道。\r\n     */\r\n    get channel (): Channel<TCurve> {\r\n        return this._channel;\r\n    }\r\n\r\n    public channels (): Iterable<Channel<TCurve>> {\r\n        return [this._channel];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected createCurve (): TCurve {\r\n        throw new Error(`Not impl`);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [createEvalSymbol] (): TrackEval<unknown> {\r\n        const { curve } = this._channel;\r\n        return new SingleChannelTrackEval(curve);\r\n    }\r\n\r\n    @serializable\r\n    private _channel: Channel<TCurve>;\r\n}\r\n\r\nclass SingleChannelTrackEval<TCurve extends Curve> implements TrackEval<unknown> {\r\n    constructor (private _curve: TCurve) {\r\n    }\r\n\r\n    public get requiresDefault (): boolean {\r\n        return false;\r\n    }\r\n\r\n    public evaluate (time: number): unknown {\r\n        return this._curve.evaluate(time);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { Quat, Vec2, Vec3, Vec4 } from '../core';\r\nimport { ILerpable } from './types';\r\n\r\ninterface ICubicSplineValue<T> extends ILerpable {\r\n    dataPoint: T;\r\n    inTangent: T;\r\n    outTangent: T;\r\n    lerp (to: ICubicSplineValue<T>, t: number, dt: number): T;\r\n    getNoLerp (): T;\r\n}\r\n\r\ntype CubicSplineValueConstructor<T> = new (dataPoint: T, inTangent: T, outTangent: T) => ICubicSplineValue<T>;\r\n\r\ntype ScaleFx<T> = (out: T, v: T, s: number) => T;\r\ntype ScaleAndAddFx<T> = (out: T, v1: T, v2: T, s: number) => T;\r\nfunction makeCubicSplineValueConstructor<T> (\r\n    name: string,\r\n    ConstructorX: new () => T,\r\n    scaleFx: ScaleFx<T>,\r\n    scaleAndAdd: ScaleAndAddFx<T>,\r\n): CubicSplineValueConstructor<T> {\r\n    let tempValue = new ConstructorX();\r\n    let m0 = new ConstructorX();\r\n    let m1 = new ConstructorX();\r\n\r\n    @ccclass(name)\r\n    class CubicSplineValueClass implements ICubicSplineValue<T> {\r\n        @serializable\r\n        public dataPoint: T = new ConstructorX();\r\n\r\n        @serializable\r\n        public inTangent: T = new ConstructorX();\r\n\r\n        @serializable\r\n        public outTangent: T = new ConstructorX();\r\n\r\n        constructor (dataPoint?: T, inTangent?: T, outTangent?: T) {\r\n            this.dataPoint = dataPoint || new ConstructorX();\r\n            this.inTangent = inTangent || new ConstructorX();\r\n            this.outTangent = outTangent || new ConstructorX();\r\n        }\r\n\r\n        public lerp (to: CubicSplineValueClass, t: number, dt: number):T {\r\n            const p0 = this.dataPoint;\r\n            const p1 = to.dataPoint;\r\n            // dt => t_k+1 - t_k\r\n            m0 = scaleFx(m0, this.inTangent, dt);\r\n            m1 = scaleFx(m1, to.outTangent, dt);\r\n            const t_3 = t * t * t;\r\n            const t_2 = t * t;\r\n            const f_0 = 2 * t_3 - 3 * t_2 + 1;\r\n            const f_1 = t_3 - 2 * t_2 + t;\r\n            const f_2 = -2 * t_3 + 3 * t_2;\r\n            const f_3 = t_3 - t_2;\r\n            tempValue = scaleFx(tempValue, p0, f_0);\r\n            tempValue = scaleAndAdd(tempValue, tempValue, m0, f_1);\r\n            tempValue = scaleAndAdd(tempValue, tempValue, p1, f_2);\r\n            tempValue = scaleAndAdd(tempValue, tempValue, m1, f_3);\r\n            return tempValue;\r\n        }\r\n\r\n        public getNoLerp (): T {\r\n            return this.dataPoint;\r\n        }\r\n    }\r\n\r\n    // TODO: This comparison appears to be unintentional because the types 'new () => T' and 'typeof Quat' have no overlap. @Lelie Leight\r\n    // Tracking issue: https://github.com/cocos/cocos-engine/issues/14640\r\n    if (ConstructorX as any === Quat) {\r\n        const lerp = CubicSplineValueClass.prototype.lerp;\r\n        CubicSplineValueClass.prototype.lerp = function (this: CubicSplineValueClass, to: CubicSplineValueClass, t: number, dt: number): Quat {\r\n            const result = lerp.call(this, to, t, dt) as Quat;\r\n            Quat.normalize(result, result);\r\n            return result;\r\n        };\r\n    }\r\n\r\n    return CubicSplineValueClass;\r\n}\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const CubicSplineVec2Value = makeCubicSplineValueConstructor(\r\n    'cc.CubicSplineVec2Value', Vec2, Vec2.multiplyScalar, Vec2.scaleAndAdd,\r\n);\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport type CubicSplineVec2Value = ICubicSplineValue<Vec2>;\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const CubicSplineVec3Value = makeCubicSplineValueConstructor(\r\n    'cc.CubicSplineVec3Value', Vec3, Vec3.multiplyScalar, Vec3.scaleAndAdd,\r\n);\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport type CubicSplineVec3Value = ICubicSplineValue<Vec3>;\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const CubicSplineVec4Value = makeCubicSplineValueConstructor(\r\n    'cc.CubicSplineVec4Value', Vec4, Vec4.multiplyScalar, Vec4.scaleAndAdd,\r\n);\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport type CubicSplineVec4Value = ICubicSplineValue<Vec4>;\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const CubicSplineQuatValue = makeCubicSplineValueConstructor(\r\n    'cc.CubicSplineQuatValue', Quat, Quat.multiplyScalar, Quat.scaleAndAdd,\r\n);\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\n@ccclass('cc.CubicSplineNumberValue')\r\nexport class CubicSplineNumberValue implements ICubicSplineValue<number> {\r\n    @serializable\r\n    public dataPoint = 0;\r\n\r\n    @serializable\r\n    public inTangent = 0;\r\n\r\n    @serializable\r\n    public outTangent = 0;\r\n\r\n    constructor (dataPoint: number, inTangent: number, outTangent: number) {\r\n        this.dataPoint = dataPoint;\r\n        this.inTangent = inTangent;\r\n        this.outTangent = outTangent;\r\n    }\r\n\r\n    public lerp (to: CubicSplineNumberValue, t: number, dt: number): number {\r\n        const p0 = this.dataPoint;\r\n        const p1 = to.dataPoint;\r\n        // dt => t_k+1 - t_k\r\n        const m0 = this.outTangent * dt;\r\n        const m1 = to.inTangent * dt;\r\n        const t_3 = t * t * t;\r\n        const t_2 = t * t;\r\n        const f_0 = 2 * t_3 - 3 * t_2 + 1;\r\n        const f_1 = t_3 - 2 * t_2 + t;\r\n        const f_2 = -2 * t_3 + 3 * t_2;\r\n        const f_3 = t_3 - t_2;\r\n        return p0 * f_0 + m0 * f_1 + p1 * f_2 + m1 * f_3;\r\n    }\r\n\r\n    public getNoLerp (): number {\r\n        return this.dataPoint;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass } from 'cc.decorator';\r\nimport { RealCurve } from '../../core';\r\nimport { CLASS_NAME_PREFIX_ANIM } from '../define';\r\nimport { SingleChannelTrack } from './track';\r\n\r\n/**\r\n * @en\r\n * A real track animates a scalar attribute of target.\r\n * @zh\r\n * 实数轨道描述目标上某个标量属性的动画。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}RealTrack`)\r\nexport class RealTrack extends SingleChannelTrack<RealCurve> {\r\n    /**\r\n     * @internal\r\n     */\r\n    protected createCurve (): RealCurve {\r\n        return new RealCurve();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport type { Curve } from './track';\r\n\r\nexport function maskIfEmpty<T extends Curve> (curve: T): T | undefined {\r\n    return curve.keyFramesCount === 0 ? undefined : curve;\r\n}\r\n\r\nexport interface Range {\r\n    min: number;\r\n    max: number;\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { RealCurve, Vec2, Vec3, Vec4 } from '../../core';\r\nimport { CLASS_NAME_PREFIX_ANIM, createEvalSymbol } from '../define';\r\nimport { Channel, RealChannel, RuntimeBinding, Track, TrackEval } from './track';\r\nimport { maskIfEmpty } from './utils';\r\n\r\nconst CHANNEL_NAMES: ReadonlyArray<string> = ['X', 'Y', 'Z', 'W'];\r\n\r\n/**\r\n * @en\r\n * A vector track animates a vector(in 2, 3, 4 dimension) attribute of target.\r\n * @zh\r\n * 向量轨道描述目标上某个（二、三、四维）向量属性的动画。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}VectorTrack`)\r\nexport class VectorTrack extends Track {\r\n    constructor () {\r\n        super();\r\n        this._channels = new Array(4) as VectorTrack['_channels'];\r\n        for (let i = 0; i < this._channels.length; ++i) {\r\n            const channel = new Channel<RealCurve>(new RealCurve());\r\n            channel.name = CHANNEL_NAMES[i];\r\n            this._channels[i] = channel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets or sets the count of components(dimension) available while evaluating of this track.\r\n     * @zh 获取或设置此轨道在求值时有效的分量数（维度）。\r\n     */\r\n    get componentsCount (): number {\r\n        return this._nComponents;\r\n    }\r\n\r\n    set componentsCount (value) {\r\n        this._nComponents = value;\r\n    }\r\n\r\n    /**\r\n     * @en The four channel of the track.\r\n     * @zh 返回此轨道的四条通道。\r\n     * @returns An readonly four length array in which\r\n     * the element at n denotes the channel of n-th vector component.\r\n     */\r\n    public channels (): [RealChannel, RealChannel, RealChannel, RealChannel] {\r\n        return this._channels;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [createEvalSymbol] (): Vec2TrackEval | Vec3TrackEval | Vec4TrackEval {\r\n        switch (this._nComponents) {\r\n        default:\r\n        case 2:\r\n            return new Vec2TrackEval(\r\n                maskIfEmpty(this._channels[0].curve),\r\n                maskIfEmpty(this._channels[1].curve),\r\n            );\r\n        case 3:\r\n            return new Vec3TrackEval(\r\n                maskIfEmpty(this._channels[0].curve),\r\n                maskIfEmpty(this._channels[1].curve),\r\n                maskIfEmpty(this._channels[2].curve),\r\n            );\r\n        case 4:\r\n            return new Vec4TrackEval(\r\n                maskIfEmpty(this._channels[0].curve),\r\n                maskIfEmpty(this._channels[1].curve),\r\n                maskIfEmpty(this._channels[2].curve),\r\n                maskIfEmpty(this._channels[3].curve),\r\n            );\r\n        }\r\n    }\r\n\r\n    @serializable\r\n    private _channels: [RealChannel, RealChannel, RealChannel, RealChannel];\r\n\r\n    @serializable\r\n    private _nComponents: number = 4;\r\n}\r\n\r\nexport class Vec2TrackEval implements TrackEval<Vec2> {\r\n    constructor (private _x: RealCurve | undefined, private _y: RealCurve | undefined) {\r\n\r\n    }\r\n\r\n    public get requiresDefault (): boolean {\r\n        return !this._x || !this._y;\r\n    }\r\n\r\n    public evaluate (time: number, defaultValue?: Readonly<Vec2>): Vec2 {\r\n        if (defaultValue) {\r\n            Vec2.copy(this._result, defaultValue);\r\n        }\r\n\r\n        if (this._x) {\r\n            this._result.x = this._x.evaluate(time);\r\n        }\r\n        if (this._y) {\r\n            this._result.y = this._y.evaluate(time);\r\n        }\r\n\r\n        return this._result;\r\n    }\r\n\r\n    private _result: Vec2 = new Vec2();\r\n}\r\n\r\nexport class Vec3TrackEval implements TrackEval<Vec3> {\r\n    constructor (private _x: RealCurve | undefined, private _y: RealCurve | undefined, private _z: RealCurve | undefined) {\r\n\r\n    }\r\n\r\n    public get requiresDefault (): boolean {\r\n        return !this._x || !this._y || !this._z;\r\n    }\r\n\r\n    public evaluate (time: number, defaultValue?: Readonly<Vec3>): Vec3 {\r\n        const { _x, _y, _z, _result } = this;\r\n        if (defaultValue) {\r\n            Vec3.copy(_result, defaultValue);\r\n        }\r\n        if (_x) {\r\n            _result.x = _x.evaluate(time);\r\n        }\r\n        if (_y) {\r\n            _result.y = _y.evaluate(time);\r\n        }\r\n        if (_z) {\r\n            _result.z = _z.evaluate(time);\r\n        }\r\n        return _result;\r\n    }\r\n\r\n    private _result: Vec3 = new Vec3();\r\n}\r\n\r\nexport class Vec4TrackEval implements TrackEval<Vec4> {\r\n    constructor (\r\n        private _x: RealCurve | undefined,\r\n        private _y: RealCurve | undefined,\r\n        private _z: RealCurve | undefined,\r\n        private _w: RealCurve | undefined,\r\n    ) {\r\n\r\n    }\r\n\r\n    public get requiresDefault (): boolean {\r\n        return !this._x || !this._y || !this._z || !this._w;\r\n    }\r\n\r\n    public evaluate (time: number, defaultValue?: Readonly<Vec4>): Vec4 {\r\n        if (defaultValue) {\r\n            Vec4.copy(this._result, defaultValue);\r\n        }\r\n\r\n        if (this._x) {\r\n            this._result.x = this._x.evaluate(time);\r\n        }\r\n        if (this._y) {\r\n            this._result.y = this._y.evaluate(time);\r\n        }\r\n        if (this._z) {\r\n            this._result.z = this._z.evaluate(time);\r\n        }\r\n        if (this._w) {\r\n            this._result.w = this._w.evaluate(time);\r\n        }\r\n\r\n        return this._result;\r\n    }\r\n\r\n    private _result: Vec4 = new Vec4();\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass } from 'cc.decorator';\r\nimport { QuatCurve, Quat } from '../../core';\r\nimport { CLASS_NAME_PREFIX_ANIM, createEvalSymbol } from '../define';\r\nimport { SingleChannelTrack, TrackEval } from './track';\r\n\r\n/**\r\n * @en\r\n * A quaternion track animates a quaternion(rotation) attribute of target.\r\n * @zh\r\n * 四元数轨道描述目标上某个四元数（旋转）属性的动画。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}QuatTrack`)\r\nexport class QuatTrack extends SingleChannelTrack<QuatCurve> {\r\n    /**\r\n     * @internal\r\n     */\r\n    protected createCurve (): QuatCurve {\r\n        return new QuatCurve();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [createEvalSymbol] (): QuatTrackEval {\r\n        return new QuatTrackEval(this.channels()[0].curve);\r\n    }\r\n}\r\n\r\nexport class QuatTrackEval implements TrackEval<Quat> {\r\n    constructor (private _curve: QuatCurve) {\r\n\r\n    }\r\n\r\n    public get requiresDefault (): boolean {\r\n        return false;\r\n    }\r\n\r\n    public evaluate (time: number): Quat {\r\n        this._curve.evaluate(time, this._result);\r\n        return this._result;\r\n    }\r\n\r\n    private _result: Quat = new Quat();\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { RealCurve, Color } from '../../core';\r\nimport { CLASS_NAME_PREFIX_ANIM, createEvalSymbol } from '../define';\r\nimport { Channel, RealChannel, RuntimeBinding, Track, TrackEval } from './track';\r\nimport { maskIfEmpty } from './utils';\r\n\r\nconst CHANNEL_NAMES: ReadonlyArray<string> = ['Red', 'Green', 'Blue', 'Alpha'];\r\n\r\n/**\r\n * @en\r\n * A color track animates a color attribute of target.\r\n * @zh\r\n * 颜色轨道描述目标上某个颜色属性的动画。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ColorTrack`)\r\nexport class ColorTrack extends Track {\r\n    constructor () {\r\n        super();\r\n        this._channels = new Array(4) as ColorTrack['_channels'];\r\n        for (let i = 0; i < this._channels.length; ++i) {\r\n            const channel = new Channel<RealCurve>(new RealCurve());\r\n            channel.name = CHANNEL_NAMES[i];\r\n            this._channels[i] = channel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The four channel of the track.\r\n     * @zh 返回此轨道的四条通道。\r\n     * @returns An readonly four length array in which\r\n     * the element at n denotes the channel of n-th(in order of RGBA) color component(in form of integer within 0-255).\r\n     */\r\n    public channels (): [RealChannel, RealChannel, RealChannel, RealChannel] {\r\n        return this._channels;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [createEvalSymbol] (): ColorTrackEval {\r\n        return new ColorTrackEval(\r\n            maskIfEmpty(this._channels[0].curve),\r\n            maskIfEmpty(this._channels[1].curve),\r\n            maskIfEmpty(this._channels[2].curve),\r\n            maskIfEmpty(this._channels[3].curve),\r\n        );\r\n    }\r\n\r\n    @serializable\r\n    private _channels: [RealChannel, RealChannel, RealChannel, RealChannel];\r\n}\r\n\r\nexport class ColorTrackEval implements TrackEval<Color> {\r\n    constructor (\r\n        private _x: RealCurve | undefined,\r\n        private _y: RealCurve | undefined,\r\n        private _z: RealCurve | undefined,\r\n        private _w: RealCurve | undefined,\r\n    ) {\r\n\r\n    }\r\n\r\n    public get requiresDefault (): boolean {\r\n        return !this._x || !this._y || !this._z || !this._w;\r\n    }\r\n\r\n    public evaluate (time: number, defaultValue?: Color): Color {\r\n        if (defaultValue) {\r\n            Color.copy(this._result, defaultValue);\r\n        }\r\n\r\n        if (this._x) {\r\n            this._result.r = this._x.evaluate(time);\r\n        }\r\n        if (this._y) {\r\n            this._result.g = this._y.evaluate(time);\r\n        }\r\n        if (this._z) {\r\n            this._result.b = this._z.evaluate(time);\r\n        }\r\n        if (this._w) {\r\n            this._result.a = this._w.evaluate(time);\r\n        }\r\n\r\n        return this._result;\r\n    }\r\n\r\n    private _result: Color = new Color();\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { RealCurve, Size } from '../../core';\r\nimport { CLASS_NAME_PREFIX_ANIM, createEvalSymbol } from '../define';\r\nimport { Channel, RealChannel, RuntimeBinding, Track, TrackEval } from './track';\r\nimport { maskIfEmpty } from './utils';\r\n\r\nconst CHANNEL_NAMES: ReadonlyArray<string> = ['Width', 'Height'];\r\n\r\n/**\r\n * @en\r\n * A size track animates a size attribute of target.\r\n * @zh\r\n * 尺寸轨道描述目标上某个尺寸属性的动画。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}SizeTrack`)\r\nexport class SizeTrack extends Track {\r\n    constructor () {\r\n        super();\r\n        this._channels = new Array(2) as SizeTrack['_channels'];\r\n        for (let i = 0; i < this._channels.length; ++i) {\r\n            const channel = new Channel<RealCurve>(new RealCurve());\r\n            channel.name = CHANNEL_NAMES[i];\r\n            this._channels[i] = channel;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The width channel and the height channel of the track.\r\n     * @zh 返回此轨道的宽度通道和高度通道。\r\n     * @returns An readonly array in which\r\n     * the first element is the width channel and the second element is the height channel.\r\n     */\r\n    public channels (): [RealChannel, RealChannel] {\r\n        return this._channels;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [createEvalSymbol] (): SizeTrackEval {\r\n        return new SizeTrackEval(\r\n            maskIfEmpty(this._channels[0].curve),\r\n            maskIfEmpty(this._channels[1].curve),\r\n        );\r\n    }\r\n\r\n    @serializable\r\n    private _channels: [RealChannel, RealChannel];\r\n}\r\n\r\nexport class SizeTrackEval implements TrackEval<Size> {\r\n    constructor (\r\n        private _width: RealCurve | undefined,\r\n        private _height: RealCurve | undefined,\r\n    ) {\r\n\r\n    }\r\n\r\n    public get requiresDefault (): boolean {\r\n        return !this._width || !this._height;\r\n    }\r\n\r\n    public evaluate (time: number, defaultValue?: Readonly<Size>): Size {\r\n        if (defaultValue) {\r\n            this._result.x = defaultValue.x;\r\n            this._result.y = defaultValue.y;\r\n        }\r\n\r\n        if (this._width) {\r\n            this._result.width = this._width.evaluate(time);\r\n        }\r\n        if (this._height) {\r\n            this._result.height = this._height.evaluate(time);\r\n        }\r\n\r\n        return this._result;\r\n    }\r\n\r\n    private _result: Size = new Size();\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass } from 'cc.decorator';\r\nimport { ObjectCurve } from '../../core';\r\nimport { CLASS_NAME_PREFIX_ANIM } from '../define';\r\nimport { SingleChannelTrack } from './track';\r\n\r\n/**\r\n * @en\r\n * An object track animates an object of attribute of target.\r\n * @zh\r\n * 对象轨道描述目标上某个对象类型的属性的动画。\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ObjectTrack`)\r\nexport class ObjectTrack<T> extends SingleChannelTrack<ObjectCurve<T>> {\r\n    /**\r\n     * @internal\r\n     */\r\n    protected createCurve (): ObjectCurve<T> {\r\n        return new ObjectCurve<T>();\r\n    }\r\n}\r\n","import { Node } from '../../scene-graph';\r\n\r\n/**\r\n * Invokes methods with specified `methodName` on each component of `node`,\r\n * the methods were registered binding to some animation related events(animation clip frame event or animation graph event).\r\n *\r\n * @param node The node to search components with.\r\n * @param methodName The method name to invoke.\r\n * @param args The arguments passed to the method.\r\n */\r\nexport function invokeComponentMethodsEngagedInAnimationEvent (node: Node, methodName: string, args: unknown[]): void {\r\n    const components = node.components;\r\n    const nComponents = components.length;\r\n    for (let iComponent = 0; iComponent < nComponents; ++iComponent) {\r\n        const component = components[iComponent];\r\n        const fx = component[methodName];\r\n        if (typeof fx === 'function') {\r\n            fx.apply(component, args);\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { lerp, Quat, errorID, cclegacy, binarySearchEpsilon, ValueType, bezierByTime, BezierControlPoints, easing } from '../core';\r\nimport { ILerpable, isLerpable } from './types';\r\nimport type * as legacy from './legacy-clip-data';\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport class RatioSampler {\r\n    public ratios: number[];\r\n\r\n    private _findRatio: (ratios: number[], ratio: number) => number;\r\n\r\n    constructor (ratios: number[]) {\r\n        this.ratios = ratios;\r\n        // If every piece of ratios are the same, we can use the quick function to find frame index.\r\n        let currRatioDif;\r\n        let lastRatioDif;\r\n        let canOptimize = true;\r\n        const EPSILON = 1e-6;\r\n        for (let i = 1, l = ratios.length; i < l; i++) {\r\n            currRatioDif = ratios[i] - ratios[i - 1];\r\n            if (i === 1) {\r\n                lastRatioDif = currRatioDif;\r\n            } else if (Math.abs(currRatioDif - lastRatioDif) > EPSILON) {\r\n                canOptimize = false;\r\n                break;\r\n            }\r\n        }\r\n        this._findRatio = canOptimize ? quickFindIndex : binarySearchEpsilon;\r\n    }\r\n\r\n    public sample (ratio: number): number {\r\n        return this._findRatio(this.ratios, ratio);\r\n    }\r\n}\r\ncclegacy.RatioSampler = RatioSampler;\r\n\r\n/**\r\n * @en\r\n * Animation curve.\r\n * @zh\r\n * 动画曲线。\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport class AnimCurve {\r\n    public static Linear = null;\r\n\r\n    public static Bezier (controlPoints: number[]): BezierControlPoints {\r\n        return controlPoints as BezierControlPoints;\r\n    }\r\n\r\n    public types?: Array<(legacy.LegacyEasingMethod | null)> = undefined;\r\n\r\n    public type?: legacy.LegacyEasingMethod | null = null;\r\n\r\n    /**\r\n     * The values of the keyframes. (y)\r\n     */\r\n    private _values: legacy.LegacyCurveValue[] = [];\r\n\r\n    /**\r\n     * Lerp function used. If undefined, no lerp is performed.\r\n     */\r\n    private _lerp: undefined | ((from: any, to: any, t: number, dt: number) => any) = undefined;\r\n\r\n    private _duration: number;\r\n\r\n    private _array?: any[];\r\n\r\n    constructor (propertyCurveData: Omit<legacy.LegacyClipCurveData, 'keys'>, duration: number) {\r\n        this._duration = duration;\r\n\r\n        // Install values.\r\n        this._values = propertyCurveData.values;\r\n\r\n        const getCurveType = (easingMethod: legacy.LegacyEasingMethod): legacy.LegacyEasingMethod | null => {\r\n            if (typeof easingMethod === 'string') {\r\n                return easingMethod;\r\n            } else if (Array.isArray(easingMethod)) {\r\n                if (easingMethod[0] === easingMethod[1]\r\n                    && easingMethod[2] === easingMethod[3]) {\r\n                    return AnimCurve.Linear;\r\n                } else {\r\n                    return AnimCurve.Bezier(easingMethod);\r\n                }\r\n            } else {\r\n                return AnimCurve.Linear;\r\n            }\r\n        };\r\n        if (propertyCurveData.easingMethod !== undefined) {\r\n            this.type = getCurveType(propertyCurveData.easingMethod);\r\n        } else if (Array.isArray(propertyCurveData.easingMethods)) {\r\n            this.types = propertyCurveData.easingMethods.map(getCurveType);\r\n        } else if (propertyCurveData.easingMethods !== undefined) {\r\n            this.types = new Array(this._values.length).fill(null);\r\n            for (const index of Object.keys(propertyCurveData.easingMethods)) {\r\n                this.types[index] = getCurveType(propertyCurveData.easingMethods[index]);\r\n            }\r\n        } else {\r\n            this.type = null;\r\n        }\r\n\r\n        const firstValue = propertyCurveData.values[0];\r\n\r\n        const interpolate = propertyCurveData.interpolate === undefined\r\n            ? true : propertyCurveData.interpolate;\r\n\r\n        // Setup the lerp function.\r\n        if (interpolate) {\r\n            this._lerp = selectLerpFx(firstValue);\r\n        }\r\n\r\n        if (propertyCurveData._arrayLength !== undefined) {\r\n            this._array = new Array(propertyCurveData._arrayLength);\r\n        }\r\n    }\r\n\r\n    public hasLerp (): boolean {\r\n        return !!this._lerp;\r\n    }\r\n\r\n    public valueAt (index: number): any {\r\n        if (this._array === undefined) {\r\n            const value = this._values[index];\r\n            if (value && value.getNoLerp) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return value.getNoLerp();\r\n            } else {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return value;\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this._array.length; ++i) {\r\n                this._array[i] = this._values[this._array.length * index + i];\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return this._array;\r\n        }\r\n    }\r\n\r\n    public valueBetween (ratio: number, from: number, fromRatio: number, to: number, toRatio: number): any {\r\n        if (this._lerp) {\r\n            const type = this.types ? this.types[from] : this.type;\r\n            const dRatio = (toRatio - fromRatio);\r\n            let ratioBetweenFrames = (ratio - fromRatio) / dRatio;\r\n            if (type) {\r\n                ratioBetweenFrames = computeRatioByType(ratioBetweenFrames, type);\r\n            }\r\n\r\n            if (this._array === undefined) {\r\n                const fromVal = this._values[from];\r\n                const toVal = this._values[to];\r\n                const value = this._lerp(fromVal, toVal, ratioBetweenFrames, dRatio * this._duration);\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return value;\r\n            } else {\r\n                for (let i = 0; i < this._array.length; ++i) {\r\n                    const fromVal = this._values[this._array.length *  from + i];\r\n                    const toVal = this._values[this._array.length * to + i];\r\n                    this._array[i] = this._lerp(fromVal, toVal, ratioBetweenFrames, dRatio * this._duration);\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return this._array;\r\n            }\r\n        } else if (this._array === undefined) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return this.valueAt(from);\r\n        } else {\r\n            for (let i = 0; i < this._array.length; ++i) {\r\n                this._array[i] = this._values[this._array.length *  from + i];\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return this._array;\r\n        }\r\n    }\r\n\r\n    public empty (): boolean {\r\n        return this._values.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if this curve only yields constants.\r\n     */\r\n    public constant (): boolean {\r\n        return this._values.length === 1;\r\n    }\r\n}\r\ncclegacy.AnimCurve = AnimCurve;\r\n\r\nexport class EventInfo {\r\n    public events: any[] = [];\r\n\r\n    /**\r\n     * @param func event function\r\n     * @param params event params\r\n     */\r\n    public add (func: string, params: any[]): void {\r\n        this.events.push({\r\n            func: func || '',\r\n            params: params || [],\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * @zh\r\n * 采样动画曲线。\r\n * @en\r\n * Samples an animation curve.\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n * @param curve @zh 动画曲线。@en The curve.\r\n * @param sampler @zh 采样器。@en The sampler.\r\n * @param ratio @zh 采样比率。@en Sample ratio([0, 1]).\r\n */\r\nexport function sampleAnimationCurve (curve: AnimCurve, sampler: RatioSampler, ratio: number): any {\r\n    let index = sampler.sample(ratio);\r\n    if (index < 0) {\r\n        index = ~index;\r\n        if (index <= 0) {\r\n            index = 0;\r\n        } else if (index >= sampler.ratios.length) {\r\n            index = sampler.ratios.length - 1;\r\n        } else {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return curve.valueBetween(\r\n                ratio, index - 1, sampler.ratios[index - 1], index, sampler.ratios[index],\r\n            );\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return curve.valueAt(index);\r\n}\r\ncclegacy.sampleAnimationCurve = sampleAnimationCurve;\r\n\r\n/**\r\n * @en\r\n * Compute a new ratio by curve type.\r\n * @zh\r\n * 根据曲线类型计算新的比例。\r\n * @param ratio - The origin ratio\r\n * @param type - If it's Array, then ratio will be computed with bezierByTime.\r\n * If it's string, then ratio will be computed with cc.easing function\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport function computeRatioByType (ratio: number, type: legacy.LegacyEasingMethod): number {\r\n    if (typeof type === 'string') {\r\n        const func = easing[type];\r\n        if (func) {\r\n            ratio = func(ratio);\r\n        } else {\r\n            errorID(3906, type);\r\n        }\r\n    } else if (Array.isArray(type)) {\r\n        // bezier curve\r\n        ratio = bezierByTime(type, ratio);\r\n    }\r\n\r\n    return ratio;\r\n}\r\n\r\n/**\r\n * Use this function if intervals between frames are same.\r\n */\r\nfunction quickFindIndex (ratios: number[], ratio: number): number {\r\n    const length = ratios.length - 1;\r\n\r\n    if (length === 0) { return 0; }\r\n\r\n    const start = ratios[0];\r\n    if (ratio < start) { return 0; }\r\n\r\n    const end = ratios[length];\r\n    if (ratio > end) { return length; }\r\n\r\n    ratio = (ratio - start) / (end - start);\r\n\r\n    const eachLength = 1 / length;\r\n    const index = ratio / eachLength;\r\n    const floorIndex = index | 0;\r\n    const EPSILON = 1e-6;\r\n\r\n    if ((index - floorIndex) < EPSILON) {\r\n        return floorIndex;\r\n    } else if ((floorIndex + 1 - index) < EPSILON) {\r\n        return floorIndex + 1;\r\n    }\r\n\r\n    return ~(floorIndex + 1);\r\n}\r\n\r\nconst selectLerpFx = ((): (value: any) => legacy.LegacyLerpFunction<any> | undefined => {\r\n    function makeValueTypeLerpFx<T extends ValueType> (constructor: Constructor<T>): (from: T, to: T, ratio: number) => T {\r\n        const tempValue = new constructor();\r\n        return (from: T, to: T, ratio: number): T => {\r\n            // TODO: `ValueType` class doesn't define lerp method\r\n            // please fix the type @Leslie Leigh\r\n        // Tracking issue: https://github.com/cocos/cocos-engine/issues/14640\r\n            (constructor as any).lerp(tempValue, from, to, ratio);\r\n            return tempValue;\r\n        };\r\n    }\r\n\r\n    function callLerpable (from: ILerpable, to: ILerpable, t: number, dt: number): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return from.lerp(to, t, dt);\r\n    }\r\n\r\n    function makeQuatSlerpFx (): (from: Quat, to: Quat, t: number, dt: number) => Quat {\r\n        const tempValue = new Quat();\r\n        return (from: Quat, to: Quat, t: number, dt: number): Quat => Quat.slerp(tempValue, from, to, t);\r\n    }\r\n\r\n    return (value: any): legacy.LegacyLerpFunction<any> | undefined => {\r\n        if (value === null) {\r\n            return undefined;\r\n        }\r\n        if (typeof value === 'number') {\r\n            return lerp;\r\n        } else if (typeof value === 'object' && value.constructor) {\r\n            if (value instanceof Quat) {\r\n                return makeQuatSlerpFx();\r\n            } else if (value instanceof ValueType) {\r\n                return makeValueTypeLerpFx(value.constructor as typeof ValueType);\r\n            } else if (value.constructor === Number) {\r\n                return lerp;\r\n            } else if (isLerpable(value)) {\r\n                return callLerpable;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n})();\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { RealCurve, Color, Size, Vec2, Vec3, Vec4, getError } from '../../core';\r\nimport { CLASS_NAME_PREFIX_ANIM, createEvalSymbol } from '../define';\r\nimport { IValueProxyFactory } from '../value-proxy';\r\nimport { ColorTrack, ColorTrackEval } from './color-track';\r\nimport { SizeTrackEval } from './size-track';\r\nimport { Channel, RealChannel, Track, TrackEval, TrackPath } from './track';\r\nimport { Vec2TrackEval, Vec3TrackEval, Vec4TrackEval, VectorTrack } from './vector-track';\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}UntypedTrackChannel`)\r\nclass UntypedTrackChannel extends Channel<RealCurve> {\r\n    @serializable\r\n    public property = '';\r\n\r\n    constructor () {\r\n        super(new RealCurve());\r\n    }\r\n}\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}UntypedTrack`)\r\nexport class UntypedTrack extends Track {\r\n    @serializable\r\n    private _channels: UntypedTrackChannel[] = [];\r\n\r\n    public channels (): UntypedTrackChannel[] {\r\n        return this._channels;\r\n    }\r\n\r\n    public [createEvalSymbol] (): TrackEval<unknown> {\r\n        throw new Error(`UntypedTrack should be handled specially. Please file an issue.`);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public createLegacyEval (hintValue?: unknown): Vec2TrackEval | Vec3TrackEval | Vec4TrackEval | ColorTrackEval | SizeTrackEval {\r\n        const trySearchCurve = (property: string): RealCurve | undefined => this._channels.find((channel): boolean => channel.property === property)?.curve;\r\n        switch (true) {\r\n        default:\r\n            throw new Error(getError(3931));\r\n        case hintValue instanceof Vec2:\r\n            return new Vec2TrackEval(\r\n                trySearchCurve('x'),\r\n                trySearchCurve('y'),\r\n            );\r\n        case hintValue instanceof Vec3:\r\n            return new Vec3TrackEval(\r\n                trySearchCurve('x'),\r\n                trySearchCurve('y'),\r\n                trySearchCurve('z'),\r\n            );\r\n        case hintValue instanceof Vec4:\r\n            return new Vec4TrackEval(\r\n                trySearchCurve('x'),\r\n                trySearchCurve('y'),\r\n                trySearchCurve('z'),\r\n                trySearchCurve('w'),\r\n            );\r\n        case hintValue instanceof Color:\r\n            // TODO: what if x, y, z, w?\r\n            return new ColorTrackEval(\r\n                trySearchCurve('r'),\r\n                trySearchCurve('g'),\r\n                trySearchCurve('b'),\r\n                trySearchCurve('a'),\r\n            );\r\n        case hintValue instanceof Size:\r\n            return new SizeTrackEval(\r\n                trySearchCurve('width'),\r\n                trySearchCurve('height'),\r\n            );\r\n        }\r\n    }\r\n\r\n    public addChannel (property: string): UntypedTrackChannel {\r\n        const channel = new UntypedTrackChannel();\r\n        channel.property = property;\r\n        this._channels.push(channel);\r\n        return channel;\r\n    }\r\n\r\n    public upgrade (refine: UntypedTrackRefine): Track | null {\r\n        const trySearchChannel = (property: string, outChannel: RealChannel): void => {\r\n            const untypedChannel = this.channels().find((channel): boolean => channel.property === property);\r\n            if (untypedChannel) {\r\n                outChannel.name = untypedChannel.name;\r\n                outChannel.curve.assignSorted(\r\n                    Array.from(untypedChannel.curve.times()),\r\n                    Array.from(untypedChannel.curve.values()),\r\n                );\r\n            }\r\n        };\r\n        const kind = refine(this.path, this.proxy);\r\n        switch (kind) {\r\n        default:\r\n            break;\r\n        case 'vec2': case 'vec3': case 'vec4': {\r\n            const track = new VectorTrack();\r\n            track.path = this.path;\r\n            track.proxy = this.proxy;\r\n            track.componentsCount = kind === 'vec2' ? 2 : kind === 'vec3' ? 3 : 4;\r\n            const [x, y, z, w] = track.channels();\r\n            switch (kind) {\r\n            case 'vec4':\r\n                trySearchChannel('w', w);\r\n                // fall through\r\n            case 'vec3':\r\n                trySearchChannel('z', z);\r\n                // fall through\r\n            default:\r\n            case 'vec2':\r\n                trySearchChannel('x', x);\r\n                trySearchChannel('y', y);\r\n            }\r\n            return track;\r\n        }\r\n        case 'color': {\r\n            const track = new ColorTrack();\r\n            const [r, g, b, a] = track.channels();\r\n            trySearchChannel('r', r);\r\n            trySearchChannel('g', g);\r\n            trySearchChannel('b', b);\r\n            trySearchChannel('a', a);\r\n            // TODO: we need float-int conversion if xyzw\r\n            trySearchChannel('x', r);\r\n            trySearchChannel('y', g);\r\n            trySearchChannel('z', b);\r\n            trySearchChannel('w', a);\r\n            return track;\r\n        }\r\n        case 'size':\r\n            break;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport type UntypedTrackRefine = (path: Readonly<TrackPath>, proxy: IValueProxyFactory | undefined) => 'vec2' | 'vec3' | 'vec4' | 'color' | 'size';\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ComponentPath, HierarchyPath, TargetPath } from './target-path';\r\nimport { IValueProxyFactory } from './value-proxy';\r\nimport { easing, QuatCurve, QuatInterpolationMode, RealCurve, RealInterpolationMode, RealKeyframeValue, TangentWeightMode,\r\n    warnID, Color, Quat, Size, Vec2, Vec3, Vec4, assertIsTrue, EasingMethod, BezierControlPoints, CompactValueTypeArray } from '../core';\r\nimport { AnimCurve, RatioSampler } from './animation-curve';\r\nimport { Track, TrackPath } from './tracks/track';\r\nimport { UntypedTrack } from './tracks/untyped-track';\r\nimport { RealTrack } from './tracks/real-track';\r\nimport { CubicSplineNumberValue, CubicSplineQuatValue, CubicSplineVec2Value, CubicSplineVec3Value, CubicSplineVec4Value } from './cubic-spline-value';\r\nimport { ColorTrack } from './tracks/color-track';\r\nimport { VectorTrack } from './tracks/vector-track';\r\nimport { QuatTrack } from './tracks/quat-track';\r\nimport { ObjectTrack } from './tracks/object-track';\r\nimport { SizeTrack } from './tracks/size-track';\r\n\r\n/**\r\n * 表示曲线值，曲线值可以是任意类型，但必须符合插值方式的要求。\r\n */\r\nexport type LegacyCurveValue = any;\r\n\r\n/**\r\n * 表示曲线的目标对象。\r\n */\r\nexport type LegacyCurveTarget = Record<string, any>;\r\n\r\n/**\r\n * 内置帧时间渐变方式名称。\r\n */\r\nexport type LegacyEasingMethodName = keyof (typeof easing);\r\n\r\n/**\r\n * 帧时间渐变方式。可能为内置帧时间渐变方式的名称或贝塞尔控制点。\r\n */\r\nexport type LegacyEasingMethod = LegacyEasingMethodName | BezierControlPoints;\r\n\r\nexport type LegacyCompressedEasingMethods = Record<number, LegacyEasingMethod>;\r\n\r\nexport type LegacyLerpFunction<T = any> = (from: T, to: T, t: number, dt: number) => T;\r\n\r\nexport interface LegacyClipCurveData {\r\n    /**\r\n     * 曲线使用的时间轴。\r\n     * @see {AnimationClip.keys}\r\n     */\r\n    keys: number;\r\n\r\n    /**\r\n     * 曲线值。曲线值的数量应和 `keys` 所引用时间轴的帧数相同。\r\n     */\r\n    values: LegacyCurveValue[];\r\n\r\n    /**\r\n     * 曲线任意两帧时间的渐变方式。仅当 `easingMethods === undefined` 时本字段才生效。\r\n     */\r\n    easingMethod?: LegacyEasingMethod;\r\n\r\n    /**\r\n     * 描述了每一帧时间到下一帧时间之间的渐变方式。\r\n     */\r\n    easingMethods?: LegacyEasingMethod[] | LegacyCompressedEasingMethods;\r\n\r\n    /**\r\n     * 是否进行插值。\r\n     * @default true\r\n     */\r\n    interpolate?: boolean;\r\n\r\n    /**\r\n     * For internal usage only.\r\n     */\r\n    _arrayLength?: number;\r\n}\r\n\r\nexport interface LegacyClipCurve {\r\n    commonTarget?: number;\r\n\r\n    modifiers: TargetPath[];\r\n\r\n    valueAdapter?: IValueProxyFactory;\r\n\r\n    data: LegacyClipCurveData;\r\n}\r\n\r\nexport interface LegacyCommonTarget {\r\n    modifiers: TargetPath[];\r\n    valueAdapter?: IValueProxyFactory;\r\n}\r\n\r\nexport type LegacyMaybeCompactCurve = Omit<LegacyClipCurve, 'data'> & {\r\n    data: Omit<LegacyClipCurveData, 'values'> & {\r\n        values: any[] | CompactValueTypeArray;\r\n    };\r\n};\r\n\r\nexport type LegacyMaybeCompactKeys = Array<number[] | CompactValueTypeArray>;\r\n\r\nexport type LegacyRuntimeCurve = Pick<LegacyClipCurve, 'modifiers' | 'valueAdapter' | 'commonTarget'> & {\r\n    /**\r\n     * 属性曲线。\r\n     */\r\n    curve: AnimCurve;\r\n\r\n    /**\r\n     * 曲线采样器。\r\n     */\r\n    sampler: RatioSampler | null;\r\n}\r\n\r\n// interface ConvertMap<TValue, TTrack> {\r\n//     valueConstructor: Constructor<TValue>;\r\n//     trackConstructor: Constructor<TTrack>;\r\n//     properties: [keyof TValue, number][];\r\n// }\r\n\r\n// const VECTOR_LIKE_CURVE_CONVERT_TABLE = [\r\n//     {\r\n//         valueConstructor: Size,\r\n//         trackConstructor: SizeTrack,\r\n//         properties: [['width', 0], ['height', 1]],\r\n//     } as ConvertMap<Size, SizeTrack>,\r\n//     {\r\n//         valueConstructor: Color,\r\n//         trackConstructor: ColorTrack,\r\n//         properties: [['r', 0], ['g', 1], ['b', 2], ['a', 3]],\r\n//     } as ConvertMap<Color, ColorTrack>,\r\n// ];\r\n\r\nexport class AnimationClipLegacyData {\r\n    constructor (duration: number) {\r\n        this._duration = duration;\r\n    }\r\n\r\n    get keys (): number[][] {\r\n        return this._keys;\r\n    }\r\n\r\n    set keys (value) {\r\n        this._keys = value;\r\n    }\r\n\r\n    get curves (): LegacyClipCurve[] {\r\n        return this._curves;\r\n    }\r\n\r\n    set curves (value) {\r\n        this._curves = value;\r\n        delete this._runtimeCurves;\r\n    }\r\n\r\n    get commonTargets (): LegacyCommonTarget[] {\r\n        return this._commonTargets;\r\n    }\r\n\r\n    set commonTargets (value) {\r\n        this._commonTargets = value;\r\n    }\r\n\r\n    /**\r\n     * 此动画的数据。\r\n     */\r\n    get data (): Uint8Array | null {\r\n        return this._data;\r\n    }\r\n\r\n    public getPropertyCurves (): readonly LegacyRuntimeCurve[] {\r\n        if (!this._runtimeCurves) {\r\n            this._createPropertyCurves();\r\n        }\r\n        return this._runtimeCurves!;\r\n    }\r\n\r\n    public toTracks (): Track[] {\r\n        const newTracks: Track[] = [];\r\n\r\n        const {\r\n            keys: legacyKeys,\r\n            curves: legacyCurves,\r\n            commonTargets: legacyCommonTargets,\r\n        } = this;\r\n\r\n        const convertTrackPath = (track: Track, modifiers: TargetPath[], valueAdapter: IValueProxyFactory | undefined): void => {\r\n            const trackPath = new TrackPath();\r\n            for (const modifier of modifiers) {\r\n                if (typeof modifier === 'string') {\r\n                    trackPath.toProperty(modifier);\r\n                } else if (typeof modifier === 'number') {\r\n                    trackPath.toElement(modifier);\r\n                } else if (modifier instanceof HierarchyPath) {\r\n                    trackPath.toHierarchy(modifier.path);\r\n                } else if (modifier instanceof ComponentPath) {\r\n                    trackPath.toComponent(modifier.component);\r\n                } else {\r\n                    trackPath.toCustomized(modifier);\r\n                }\r\n            }\r\n            track.path = trackPath;\r\n            track.proxy = valueAdapter;\r\n        };\r\n\r\n        const untypedTracks = legacyCommonTargets.map((legacyCommonTarget) => {\r\n            const track = new UntypedTrack();\r\n            convertTrackPath(track, legacyCommonTarget.modifiers, legacyCommonTarget.valueAdapter);\r\n            newTracks.push(track);\r\n            return track;\r\n        });\r\n\r\n        for (const legacyCurve of legacyCurves) {\r\n            const legacyCurveData = legacyCurve.data;\r\n            const legacyValues = legacyCurveData.values;\r\n            if (legacyValues.length === 0) {\r\n                // Legacy clip did not record type info.\r\n                continue;\r\n            }\r\n            const legacyKeysIndex = legacyCurveData.keys;\r\n            // Rule: negative index means single frame.\r\n            const times = legacyKeysIndex < 0 ? [0.0] : legacyKeys[legacyCurveData.keys];\r\n            const firstValue = legacyValues[0];\r\n            // Rule: default to true.\r\n            const interpolate = legacyCurveData.interpolate ?? true;\r\n            // Rule: _arrayLength only used for morph target, internally.\r\n            assertIsTrue(typeof legacyCurveData._arrayLength !== 'number' || typeof firstValue === 'number');\r\n            const legacyEasingMethodConverter = new LegacyEasingMethodConverter(legacyCurveData, times.length);\r\n\r\n            const installPathAndSetter = (track: Track): void => {\r\n                convertTrackPath(track, legacyCurve.modifiers, legacyCurve.valueAdapter);\r\n            };\r\n\r\n            let legacyCommonTargetCurve: RealCurve | undefined;\r\n            if (typeof legacyCurve.commonTarget === 'number') {\r\n                // Rule: common targets should only target Vectors/`Size`/`Color`.\r\n                if (!legacyValues.every((value) => typeof value === 'number')) {\r\n                    warnID(3932);\r\n                    continue;\r\n                }\r\n                // Rule: Each curve that has common target should be numeric curve and targets string property.\r\n                if (legacyCurve.valueAdapter || legacyCurve.modifiers.length !== 1 || typeof legacyCurve.modifiers[0] !== 'string') {\r\n                    warnID(3933);\r\n                    continue;\r\n                }\r\n                const propertyName = legacyCurve.modifiers[0];\r\n                const untypedTrack = untypedTracks[legacyCurve.commonTarget];\r\n                const { curve } = untypedTrack.addChannel(propertyName);\r\n                legacyCommonTargetCurve = curve;\r\n            }\r\n\r\n            const convertCurve = (): void => {\r\n                if (typeof firstValue === 'number') {\r\n                    if (!legacyValues.every((value) => typeof value === 'number')) {\r\n                        warnID(3934);\r\n                        return;\r\n                    }\r\n                    let realCurve: RealCurve;\r\n                    if (legacyCommonTargetCurve) {\r\n                        realCurve = legacyCommonTargetCurve;\r\n                    } else {\r\n                        const track = new RealTrack();\r\n                        installPathAndSetter(track);\r\n                        newTracks.push(track);\r\n                        realCurve = track.channel.curve;\r\n                    }\r\n                    const interpolationMethod = interpolate ? RealInterpolationMode.LINEAR : RealInterpolationMode.CONSTANT;\r\n                    realCurve.assignSorted(times, (legacyValues as number[]).map(\r\n                        (value) => ({ value, interpolationMode: interpolationMethod }),\r\n                    ));\r\n                    legacyEasingMethodConverter.convert(realCurve);\r\n                    return;\r\n                } else if (typeof firstValue === 'object') {\r\n                    switch (true) {\r\n                    default:\r\n                        break;\r\n                    case everyInstanceOf(legacyValues, Vec2):\r\n                    case everyInstanceOf(legacyValues, Vec3):\r\n                    case everyInstanceOf(legacyValues, Vec4): {\r\n                        type Vec4plus = Vec4[];\r\n                        type Vec3plus = (Vec3 | Vec4)[];\r\n                        type Vec2plus = (Vec2 | Vec3 | Vec4)[];\r\n                        const components = firstValue instanceof Vec2 ? 2 : firstValue instanceof Vec3 ? 3 : 4;\r\n                        const track = new VectorTrack();\r\n                        installPathAndSetter(track);\r\n                        track.componentsCount = components;\r\n                        const [{ curve: x }, { curve: y }, { curve: z }, { curve: w }] = track.channels();\r\n                        const interpolationMode = interpolate ? RealInterpolationMode.LINEAR : RealInterpolationMode.CONSTANT;\r\n                        const valueToFrame = (value: number): Partial<RealKeyframeValue> => ({ value, interpolationMode });\r\n                        switch (components) {\r\n                        case 4:\r\n                            w.assignSorted(times, (legacyValues as Vec4plus).map((value) => valueToFrame(value.w)));\r\n                            legacyEasingMethodConverter.convert(w);\r\n                            // falls through\r\n                        case 3:\r\n                            z.assignSorted(times, (legacyValues as Vec3plus).map((value) => valueToFrame(value.z)));\r\n                            legacyEasingMethodConverter.convert(z);\r\n                            // falls through\r\n                        default:\r\n                            x.assignSorted(times, (legacyValues as Vec2plus).map((value) => valueToFrame(value.x)));\r\n                            legacyEasingMethodConverter.convert(x);\r\n                            y.assignSorted(times, (legacyValues as Vec2plus).map((value) => valueToFrame(value.y)));\r\n                            legacyEasingMethodConverter.convert(y);\r\n                            break;\r\n                        }\r\n                        newTracks.push(track);\r\n                        return;\r\n                    }\r\n                    case everyInstanceOf(legacyValues, Quat): {\r\n                        const track = new QuatTrack();\r\n                        installPathAndSetter(track);\r\n                        const interpolationMode = interpolate ? QuatInterpolationMode.SLERP : QuatInterpolationMode.CONSTANT;\r\n                        track.channel.curve.assignSorted(times, (legacyValues as Quat[]).map((value) => ({\r\n                            value: Quat.clone(value),\r\n                            interpolationMode,\r\n                        })));\r\n                        legacyEasingMethodConverter.convertQuatCurve(track.channel.curve);\r\n                        newTracks.push(track);\r\n                        return;\r\n                    }\r\n                    case everyInstanceOf(legacyValues, Color): {\r\n                        const track = new ColorTrack();\r\n                        installPathAndSetter(track);\r\n                        const [{ curve: r }, { curve: g }, { curve: b }, { curve: a }] = track.channels();\r\n                        const interpolationMode = interpolate ? RealInterpolationMode.LINEAR : RealInterpolationMode.CONSTANT;\r\n                        const valueToFrame = (value: number): Partial<RealKeyframeValue> => ({ value, interpolationMode });\r\n                        r.assignSorted(times, (legacyValues as Color[]).map((value) => valueToFrame(value.r)));\r\n                        legacyEasingMethodConverter.convert(r);\r\n                        g.assignSorted(times, (legacyValues as Color[]).map((value) => valueToFrame(value.g)));\r\n                        legacyEasingMethodConverter.convert(g);\r\n                        b.assignSorted(times, (legacyValues as Color[]).map((value) => valueToFrame(value.b)));\r\n                        legacyEasingMethodConverter.convert(b);\r\n                        a.assignSorted(times, (legacyValues as Color[]).map((value) => valueToFrame(value.a)));\r\n                        legacyEasingMethodConverter.convert(a);\r\n                        newTracks.push(track);\r\n                        return;\r\n                    }\r\n                    case everyInstanceOf(legacyValues, Size): {\r\n                        const track = new SizeTrack();\r\n                        installPathAndSetter(track);\r\n                        const [{ curve: width }, { curve: height }] = track.channels();\r\n                        const interpolationMode = interpolate ? RealInterpolationMode.LINEAR : RealInterpolationMode.CONSTANT;\r\n                        const valueToFrame = (value: number): Partial<RealKeyframeValue> => ({ value, interpolationMode });\r\n                        width.assignSorted(times, (legacyValues as Size[]).map((value) => valueToFrame(value.width)));\r\n                        legacyEasingMethodConverter.convert(width);\r\n                        height.assignSorted(times, (legacyValues as Size[]).map((value) => valueToFrame(value.height)));\r\n                        legacyEasingMethodConverter.convert(height);\r\n                        newTracks.push(track);\r\n                        return;\r\n                    }\r\n                    case everyInstanceOf(legacyValues, CubicSplineNumberValue): {\r\n                        assertIsTrue(legacyEasingMethodConverter.nil);\r\n                        const track = new RealTrack();\r\n                        installPathAndSetter(track);\r\n                        const interpolationMode = interpolate ? RealInterpolationMode.CUBIC : RealInterpolationMode.CONSTANT;\r\n                        track.channel.curve.assignSorted(times, (legacyValues as CubicSplineNumberValue[]).map((value) => ({\r\n                            value: value.dataPoint,\r\n                            leftTangent: value.inTangent,\r\n                            rightTangent: value.outTangent,\r\n                            interpolationMode,\r\n                        })));\r\n                        newTracks.push(track);\r\n                        return;\r\n                    }\r\n                    case everyInstanceOf(legacyValues, CubicSplineVec2Value):\r\n                    case everyInstanceOf(legacyValues, CubicSplineVec3Value):\r\n                    case everyInstanceOf(legacyValues, CubicSplineVec4Value): {\r\n                        assertIsTrue(legacyEasingMethodConverter.nil);\r\n                        type Vec4plus = CubicSplineVec4Value[];\r\n                        type Vec3plus = (CubicSplineVec3Value | CubicSplineVec4Value)[];\r\n                        type Vec2plus = (CubicSplineVec2Value | CubicSplineVec3Value | CubicSplineVec4Value)[];\r\n                        const components = firstValue instanceof CubicSplineVec2Value ? 2 : firstValue instanceof CubicSplineVec3Value ? 3 : 4;\r\n                        const track = new VectorTrack();\r\n                        installPathAndSetter(track);\r\n                        track.componentsCount = components;\r\n                        const [x, y, z, w] = track.channels();\r\n                        const interpolationMode = interpolate ? RealInterpolationMode.LINEAR : RealInterpolationMode.CONSTANT;\r\n                        const valueToFrame = (value: number, inTangent: number, outTangent: number): Partial<RealKeyframeValue> => ({\r\n                            value,\r\n                            leftTangent: inTangent,\r\n                            rightTangent: outTangent,\r\n                            interpolationMode,\r\n                        });\r\n                        switch (components) {\r\n                        case 4:\r\n                            w.curve.assignSorted(times, (legacyValues as Vec4plus).map(\r\n                                (value) => valueToFrame(value.dataPoint.w, value.inTangent.w, value.outTangent.w),\r\n                            ));\r\n                            // falls through\r\n                        case 3:\r\n                            z.curve.assignSorted(times, (legacyValues as Vec3plus).map(\r\n                                (value) => valueToFrame(value.dataPoint.z, value.inTangent.z, value.outTangent.z),\r\n                            ));\r\n                            // falls through\r\n                        default:\r\n                            x.curve.assignSorted(times, (legacyValues as Vec2plus).map(\r\n                                (value) => valueToFrame(value.dataPoint.y, value.inTangent.y, value.outTangent.y),\r\n                            ));\r\n                            y.curve.assignSorted(times, (legacyValues as Vec2plus).map(\r\n                                (value) => valueToFrame(value.dataPoint.x, value.inTangent.x, value.outTangent.x),\r\n                            ));\r\n                            break;\r\n                        }\r\n                        newTracks.push(track);\r\n                        return;\r\n                    }\r\n                    case legacyValues.every((value) => value instanceof CubicSplineQuatValue): {\r\n                        warnID(3935);\r\n                        break;\r\n                    }\r\n                    } // End switch\r\n                }\r\n\r\n                const objectTrack = new ObjectTrack();\r\n                installPathAndSetter(objectTrack);\r\n                objectTrack.channel.curve.assignSorted(times, legacyValues);\r\n                newTracks.push(objectTrack);\r\n            };\r\n\r\n            convertCurve();\r\n        }\r\n\r\n        return newTracks;\r\n    }\r\n\r\n    private _keys: number[][] = [];\r\n\r\n    private _curves: LegacyClipCurve[] = [];\r\n\r\n    private _commonTargets: LegacyCommonTarget[] = [];\r\n\r\n    private _ratioSamplers: RatioSampler[] = [];\r\n\r\n    private _runtimeCurves?: LegacyRuntimeCurve[];\r\n\r\n    private _data: Uint8Array | null = null;\r\n\r\n    private _duration: number;\r\n\r\n    protected _createPropertyCurves (): void {\r\n        this._ratioSamplers = this._keys.map(\r\n            (keys) => new RatioSampler(\r\n                keys.map(\r\n                    (key) => key / this._duration,\r\n                ),\r\n            ),\r\n        );\r\n\r\n        this._runtimeCurves = this._curves.map((targetCurve): LegacyRuntimeCurve => ({\r\n            curve: new AnimCurve(targetCurve.data, this._duration),\r\n            modifiers: targetCurve.modifiers,\r\n            valueAdapter: targetCurve.valueAdapter,\r\n            sampler: this._ratioSamplers[targetCurve.data.keys],\r\n            commonTarget: targetCurve.commonTarget,\r\n        }));\r\n    }\r\n}\r\n\r\nfunction everyInstanceOf<T> (array: unknown[], constructor: Constructor<T>): array is T[] {\r\n    return array.every((element) => element instanceof constructor);\r\n}\r\n\r\n// #region Legacy data structures prior to 1.2\r\n\r\nexport interface LegacyObjectCurveData {\r\n    [propertyName: string]: LegacyClipCurveData;\r\n}\r\n\r\nexport interface LegacyComponentsCurveData {\r\n    [componentName: string]: LegacyObjectCurveData;\r\n}\r\n\r\nexport interface LegacyNodeCurveData {\r\n    props?: LegacyObjectCurveData;\r\n    comps?: LegacyComponentsCurveData;\r\n}\r\n\r\n// #endregion\r\n\r\nclass LegacyEasingMethodConverter {\r\n    constructor (legacyCurveData: LegacyClipCurveData, keyframesCount: number) {\r\n        const { easingMethods } = legacyCurveData;\r\n        if (Array.isArray(easingMethods)) {\r\n            // Different\r\n            if (easingMethods.length === 0 && keyframesCount !== 0) {\r\n                // This shall not happen as specified in doc on legacy easing methods\r\n                // but it does in history project(see cocos-creator/3d-tasks/issues/#8468).\r\n                // This may be a promise breaking BUG between engine & Editor.\r\n                // Let's capture this case.\r\n                this._easingMethods = new Array(keyframesCount).fill(null);\r\n            } else {\r\n                this._easingMethods = easingMethods;\r\n            }\r\n        } else if (easingMethods === undefined) {\r\n            // Same\r\n            this._easingMethods = new Array(keyframesCount).fill(legacyCurveData.easingMethod);\r\n        } else {\r\n            // Compressed as record\r\n            this._easingMethods = Array.from({ length: keyframesCount }, (_, index) => easingMethods[index] ?? null);\r\n        }\r\n    }\r\n\r\n    get nil (): boolean {\r\n        return !this._easingMethods || this._easingMethods.every((easingMethod) => easingMethod === null || easingMethod === undefined);\r\n    }\r\n\r\n    public convert (curve: RealCurve): void {\r\n        const { _easingMethods: easingMethods } = this;\r\n        if (!easingMethods) {\r\n            return;\r\n        }\r\n\r\n        const nKeyframes = curve.keyFramesCount;\r\n        if (curve.keyFramesCount < 2) {\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(easingMethods)) {\r\n            assertIsTrue(nKeyframes === easingMethods.length);\r\n        }\r\n\r\n        const iLastKeyframe = nKeyframes - 1;\r\n        for (let iKeyframe = 0; iKeyframe < iLastKeyframe; ++iKeyframe) {\r\n            const easingMethod = easingMethods[iKeyframe];\r\n            if (!easingMethod) {\r\n                continue;\r\n            }\r\n            if (Array.isArray(easingMethod)) {\r\n                // Time bezier points\r\n                timeBezierToTangents(\r\n                    easingMethod,\r\n                    curve.getKeyframeTime(iKeyframe),\r\n                    curve.getKeyframeValue(iKeyframe),\r\n                    curve.getKeyframeTime(iKeyframe + 1),\r\n                    curve.getKeyframeValue(iKeyframe + 1),\r\n                );\r\n            } else {\r\n                applyLegacyEasingMethodName(\r\n                    easingMethod,\r\n                    curve,\r\n                    iKeyframe,\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    public convertQuatCurve (curve: QuatCurve): void {\r\n        const { _easingMethods: easingMethods } = this;\r\n        if (!easingMethods) {\r\n            return;\r\n        }\r\n\r\n        const nKeyframes = curve.keyFramesCount;\r\n        if (curve.keyFramesCount < 2) {\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(easingMethods)) {\r\n            assertIsTrue(nKeyframes === easingMethods.length);\r\n        }\r\n\r\n        const iLastKeyframe = nKeyframes - 1;\r\n        for (let iKeyframe = 0; iKeyframe < iLastKeyframe; ++iKeyframe) {\r\n            const easingMethod = easingMethods[iKeyframe];\r\n            if (!easingMethod) {\r\n                continue;\r\n            }\r\n            if (Array.isArray(easingMethod)) {\r\n                curve.getKeyframeValue(iKeyframe).easingMethod = easingMethod.slice() as BezierControlPoints;\r\n            } else {\r\n                applyLegacyEasingMethodNameIntoQuatCurve(\r\n                    easingMethod,\r\n                    curve,\r\n                    iKeyframe,\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private _easingMethods: Array<LegacyEasingMethod | null>  | undefined;\r\n}\r\n\r\n/**\r\n * @returns Inserted keyframes count.\r\n */\r\nfunction applyLegacyEasingMethodName (\r\n    easingMethodName: LegacyEasingMethodName,\r\n    curve: RealCurve,\r\n    keyframeIndex: number,\r\n): void {\r\n    assertIsTrue(keyframeIndex !== curve.keyFramesCount - 1);\r\n    assertIsTrue(easingMethodName in easingMethodNameMap);\r\n    const keyframeValue = curve.getKeyframeValue(keyframeIndex);\r\n    const easingMethod = easingMethodNameMap[easingMethodName];\r\n    if (easingMethod === EasingMethod.CONSTANT) {\r\n        keyframeValue.interpolationMode = RealInterpolationMode.CONSTANT;\r\n    } else {\r\n        keyframeValue.interpolationMode = RealInterpolationMode.LINEAR;\r\n        keyframeValue.easingMethod = easingMethod;\r\n    }\r\n}\r\n\r\nfunction applyLegacyEasingMethodNameIntoQuatCurve (\r\n    easingMethodName: LegacyEasingMethodName,\r\n    curve: QuatCurve,\r\n    keyframeIndex: number,\r\n): void {\r\n    assertIsTrue(keyframeIndex !== curve.keyFramesCount - 1);\r\n    assertIsTrue(easingMethodName in easingMethodNameMap);\r\n    const keyframeValue = curve.getKeyframeValue(keyframeIndex);\r\n    const easingMethod = easingMethodNameMap[easingMethodName];\r\n    keyframeValue.easingMethod = easingMethod;\r\n}\r\n\r\nconst easingMethodNameMap: Record<LegacyEasingMethodName, EasingMethod> = {\r\n    constant: EasingMethod.CONSTANT,\r\n    linear: EasingMethod.LINEAR,\r\n    quadIn: EasingMethod.QUAD_IN,\r\n    quadOut: EasingMethod.QUAD_OUT,\r\n    quadInOut: EasingMethod.QUAD_IN_OUT,\r\n    quadOutIn: EasingMethod.QUAD_OUT_IN,\r\n    cubicIn: EasingMethod.CUBIC_IN,\r\n    cubicOut: EasingMethod.CUBIC_OUT,\r\n    cubicInOut: EasingMethod.CUBIC_IN_OUT,\r\n    cubicOutIn: EasingMethod.CUBIC_OUT_IN,\r\n    quartIn: EasingMethod.QUART_IN,\r\n    quartOut: EasingMethod.QUART_OUT,\r\n    quartInOut: EasingMethod.QUART_IN_OUT,\r\n    quartOutIn: EasingMethod.QUART_OUT_IN,\r\n    quintIn: EasingMethod.QUINT_IN,\r\n    quintOut: EasingMethod.QUINT_OUT,\r\n    quintInOut: EasingMethod.QUINT_IN_OUT,\r\n    quintOutIn: EasingMethod.QUINT_OUT_IN,\r\n    sineIn: EasingMethod.SINE_IN,\r\n    sineOut: EasingMethod.SINE_OUT,\r\n    sineInOut: EasingMethod.SINE_IN_OUT,\r\n    sineOutIn: EasingMethod.SINE_OUT_IN,\r\n    expoIn: EasingMethod.EXPO_IN,\r\n    expoOut: EasingMethod.EXPO_OUT,\r\n    expoInOut: EasingMethod.EXPO_IN_OUT,\r\n    expoOutIn: EasingMethod.EXPO_OUT_IN,\r\n    circIn: EasingMethod.CIRC_IN,\r\n    circOut: EasingMethod.CIRC_OUT,\r\n    circInOut: EasingMethod.CIRC_IN_OUT,\r\n    circOutIn: EasingMethod.CIRC_OUT_IN,\r\n    elasticIn: EasingMethod.ELASTIC_IN,\r\n    elasticOut: EasingMethod.ELASTIC_OUT,\r\n    elasticInOut: EasingMethod.ELASTIC_IN_OUT,\r\n    elasticOutIn: EasingMethod.ELASTIC_OUT_IN,\r\n    backIn: EasingMethod.BACK_IN,\r\n    backOut: EasingMethod.BACK_OUT,\r\n    backInOut: EasingMethod.BACK_IN_OUT,\r\n    backOutIn: EasingMethod.BACK_OUT_IN,\r\n    bounceIn: EasingMethod.BOUNCE_IN,\r\n    bounceOut: EasingMethod.BOUNCE_OUT,\r\n    bounceInOut: EasingMethod.BOUNCE_IN_OUT,\r\n    bounceOutIn: EasingMethod.BOUNCE_OUT_IN,\r\n    smooth: EasingMethod.SMOOTH,\r\n    fade: EasingMethod.FADE,\r\n};\r\n\r\n/**\r\n * Legacy curve uses time based bezier curve interpolation.\r\n * That's, interpolate time 'x'(time ratio between two frames, eg.[0, 1])\r\n * and then use the interpolated time to sample curve.\r\n * Now we need to compute the the end tangent of previous frame and the start tangent of the next frame.\r\n * @param timeBezierPoints Bezier points used for legacy time interpolation.\r\n * @param previousTime Time of the previous keyframe.\r\n * @param previousValue Value of the previous keyframe.\r\n * @param nextTime Time of the next keyframe.\r\n * @param nextValue Value of the next keyframe.\r\n */\r\nexport function timeBezierToTangents (\r\n    timeBezierPoints: BezierControlPoints,\r\n    previousTime: number,\r\n    previousKeyframe: RealKeyframeValue,\r\n    nextTime: number,\r\n    nextKeyframe: RealKeyframeValue,\r\n): void {\r\n    const [p1X, p1Y, p2X, p2Y] = timeBezierPoints;\r\n    const { value: previousValue } = previousKeyframe;\r\n    const { value: nextValue } = nextKeyframe;\r\n    const dValue = nextValue - previousValue;\r\n    const dTime = nextTime - previousTime;\r\n    const fx = 3 * dTime;\r\n    const fy = 3 * dValue;\r\n    const t1x = p1X * fx;\r\n    const t1y = p1Y * fy;\r\n    const t2x = (1.0 - p2X) * fx;\r\n    const t2y = (1.0 - p2Y) * fy;\r\n    const ONE_THIRD = 1.0 / 3.0;\r\n    const previousTangent = t1y / t1x;\r\n    const previousTangentWeight = Math.sqrt(t1x * t1x + t1y * t1y) * ONE_THIRD;\r\n    const nextTangent = t2y / t2x;\r\n    const nextTangentWeight = Math.sqrt(t2x * t2x + t2y * t2y) * ONE_THIRD;\r\n    previousKeyframe.interpolationMode = RealInterpolationMode.CUBIC;\r\n    previousKeyframe.tangentWeightMode = ensureRightTangentWeightMode(previousKeyframe.tangentWeightMode);\r\n    previousKeyframe.rightTangent = previousTangent;\r\n    previousKeyframe.rightTangentWeight = previousTangentWeight;\r\n    nextKeyframe.tangentWeightMode = ensureLeftTangentWeightMode(nextKeyframe.tangentWeightMode);\r\n    nextKeyframe.leftTangent = nextTangent;\r\n    nextKeyframe.leftTangentWeight = nextTangentWeight;\r\n}\r\n\r\nfunction ensureLeftTangentWeightMode (tangentWeightMode: TangentWeightMode): TangentWeightMode {\r\n    if (tangentWeightMode === TangentWeightMode.NONE) {\r\n        return TangentWeightMode.LEFT;\r\n    } else if (tangentWeightMode === TangentWeightMode.RIGHT) {\r\n        return TangentWeightMode.BOTH;\r\n    } else {\r\n        return tangentWeightMode;\r\n    }\r\n}\r\n\r\nfunction ensureRightTangentWeightMode (tangentWeightMode: TangentWeightMode): TangentWeightMode {\r\n    if (tangentWeightMode === TangentWeightMode.NONE) {\r\n        return TangentWeightMode.RIGHT;\r\n    } else if (tangentWeightMode === TangentWeightMode.LEFT) {\r\n        return TangentWeightMode.BOTH;\r\n    } else {\r\n        return tangentWeightMode;\r\n    }\r\n}\r\n\r\n// #region TODO: convert power easing method\r\n\r\n// type Powers = [number, number, number, number];\r\n\r\n// const POWERS_QUAD_IN: Powers = [0.0, 0.0, 1.0, 0.0]; // k * k\r\n// const POWERS_QUAD_OUT: Powers = [0.0, 2.0, -1.0, 0.0]; // k * (2 - k)\r\n// const POWERS_CUBIC_IN: Powers = [0.0, 0.0, 0.0, 1.0]; // k * k * k\r\n// const POWERS_CUBIC_OUT: Powers = [0.0, 0.0, 0.0, 1.0]; // --k * k * k + 1\r\n// const BACK_S = 1.70158;\r\n// const POWERS_BACK_IN: Powers = [1.0, 0.0, -BACK_S, BACK_S + 1.0]; // k * k * ((s + 1) * k - s)\r\n// const POWERS_BACK_OUT: Powers = [1.0, 0.0, BACK_S, BACK_S + 1.0]; // k * k * ((s + 1) * k - s)\r\n// const POWERS_SMOOTH: Powers = [0.0, 0.0, 3.0, -2.0]; // k * k * (3 - 2 * k)\r\n\r\n// function convertPowerMethod (curve: RealCurve, keyframeIndex: number, powers: Powers) {\r\n//     assertIsTrue(keyframeIndex !== curve.keyFramesCount - 1);\r\n//     const nextKeyframeIndex = keyframeIndex + 1;\r\n//     powerToTangents(\r\n//         powers,\r\n//         curve.getKeyframeTime(keyframeIndex),\r\n//         curve.getKeyframeValue(keyframeIndex),\r\n//         curve.getKeyframeTime(nextKeyframeIndex),\r\n//         curve.getKeyframeValue(nextKeyframeIndex),\r\n//     );\r\n//     return 0;\r\n// };\r\n\r\n// function convertInOutPowersMethod (curve: RealCurve, keyframeIndex: number, inPowers: Powers, outPowers: Powers) {\r\n//     assertIsTrue(keyframeIndex !== curve.keyFramesCount - 1);\r\n//     const nextKeyframeIndex = keyframeIndex + 1;\r\n//     const previousTime = curve.getKeyframeTime(keyframeIndex);\r\n//     const nextTime = curve.getKeyframeTime(nextKeyframeIndex);\r\n//     const previousKeyframeValue = curve.getKeyframeValue(keyframeIndex);\r\n//     const nextKeyframeValue = curve.getKeyframeValue(nextKeyframeIndex);\r\n//     const middleTime = previousTime + (nextTime - previousTime);\r\n//     const middleValue = previousKeyframeValue.value + (nextKeyframeValue.value - previousKeyframeValue.value);\r\n//     const middleKeyframeValue = curve.getKeyframeValue(curve.addKeyFrame(middleTime, middleValue));\r\n//     powerToTangents(\r\n//         inPowers,\r\n//         previousTime,\r\n//         previousKeyframeValue,\r\n//         middleTime,\r\n//         middleKeyframeValue,\r\n//     );\r\n//     powerToTangents(\r\n//         outPowers,\r\n//         middleTime,\r\n//         middleKeyframeValue,\r\n//         nextTime,\r\n//         nextKeyframeValue,\r\n//     );\r\n//     return 1;\r\n// };\r\n\r\n// function powerToTangents (\r\n//     [a, b, c, d]: [number, number, number, number],\r\n//     previousTime: number,\r\n//     previousKeyframe: RealKeyframeValue,\r\n//     nextTime: number,\r\n//     nextKeyframe: RealKeyframeValue,\r\n// ) {\r\n//     const bernstein = powerToBernstein([a, b, c, d]);\r\n//     const { value: previousValue } = previousKeyframe;\r\n//     const { value: nextValue } = nextKeyframe;\r\n//     timeBezierToTangents(\r\n//         [???????],\r\n//         previousTime,\r\n//         previousValue,\r\n//         nextTime,\r\n//         nextValue,\r\n//     );\r\n// }\r\n\r\n// function powerToBernstein ([p0, p1, p2, p3]: [number, number, number, number]) {\r\n//     // https://stackoverflow.com/questions/33859199/convert-polynomial-curve-to-bezier-curve-control-points\r\n//     // https://blog.demofox.org/2016/12/08/evaluating-polynomials-with-the-gpu-texture-sampler/\r\n//     const m00 = p0;\r\n//     const m01 = p1 / 3.0;\r\n//     const m02 = p2 / 3.0;\r\n//     const m03 = p3;\r\n//     const m10 = m00 + m01;\r\n//     const m11 = m01 + m02;\r\n//     const m12 = m02 + m03;\r\n//     const m20 = m10 + m11;\r\n//     const m21 = m11 + m12;\r\n//     const m30 = m20 + m21;\r\n//     const bernstein = new Float64Array(4);\r\n//     bernstein[0] = m00;\r\n//     bernstein[1] = m10;\r\n//     bernstein[2] = m20;\r\n//     bernstein[3] = m30;\r\n//     return bernstein;\r\n// }\r\n\r\n// #endregion\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { binarySearchEpsilon, clamp, lerp, Quat, Vec3, _decorator } from '../../core';\r\nimport { assertIsTrue } from '../../core/data/utils/asserts';\r\nimport { AnimationClipGraphBindingContext } from '../marionette/animation-graph-animation-clip-binding';\r\nimport { TransformHandle } from '../core/animation-handle';\r\nimport { Pose } from '../core/pose';\r\nimport { CLASS_NAME_PREFIX_ANIM } from '../define';\r\nimport { Binder, RuntimeBinding, TrackBinding, TrackPath } from '../tracks/track';\r\n\r\nconst SPLIT_METHOD_ENABLED = TEST || EDITOR;\r\n\r\nconst { ccclass, serializable } = _decorator;\r\n\r\nfunction throwIfSplitMethodIsNotValid (): never {\r\n    // TODO: better handling\r\n    throw new Error(`split() only valid in Editor.`);\r\n}\r\n\r\n/**\r\n * Animation that:\r\n * - does not exposed by users;\r\n * - does not compatible with regular animation;\r\n * - non-editable;\r\n * - currently only generated imported from model file.\r\n */\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ExoticAnimation`)\r\nexport class ExoticAnimation {\r\n    public createEvaluator (binder: Binder): ExoticTrsAnimationEvaluator {\r\n        return new ExoticTrsAnimationEvaluator(this._nodeAnimations, binder);\r\n    }\r\n\r\n    public createEvaluatorForAnimationGraph (context: AnimationClipGraphBindingContext): ExoticTrsAGEvaluation {\r\n        return new ExoticTrsAGEvaluation(this._nodeAnimations, context);\r\n    }\r\n\r\n    public addNodeAnimation (path: string): ExoticNodeAnimation {\r\n        const nodeAnimation = new ExoticNodeAnimation(path);\r\n        this._nodeAnimations.push(nodeAnimation);\r\n        return nodeAnimation;\r\n    }\r\n\r\n    public collectAnimatedJoints (): string[] {\r\n        return Array.from(new Set(this._nodeAnimations.map(({ path }) => path)));\r\n    }\r\n\r\n    public split (from: number, to: number): ExoticAnimation {\r\n        if (!SPLIT_METHOD_ENABLED) {\r\n            return throwIfSplitMethodIsNotValid();\r\n        }\r\n\r\n        const splitInfoCache = new SplitInfo();\r\n\r\n        const newAnimation = new ExoticAnimation();\r\n        newAnimation._nodeAnimations = this._nodeAnimations.map((nodeAnimation) => nodeAnimation.split(from, to, splitInfoCache));\r\n        return newAnimation;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public toHashString (): string {\r\n        return this._nodeAnimations.map((nodeAnimation) => nodeAnimation.toHashString()).join('\\n');\r\n    }\r\n\r\n    @serializable\r\n    private _nodeAnimations: ExoticNodeAnimation[] = [];\r\n}\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ExoticNodeAnimation`)\r\nclass ExoticNodeAnimation {\r\n    constructor (path: string) {\r\n        this._path = path;\r\n    }\r\n\r\n    public createPosition (times: FloatArray, values: FloatArray): void {\r\n        this._position = new ExoticTrack(times, new ExoticVec3TrackValues(values));\r\n    }\r\n\r\n    public createRotation (times: FloatArray, values: FloatArray): void {\r\n        this._rotation = new ExoticTrack(times, new ExoticQuatTrackValues(values));\r\n    }\r\n\r\n    public createScale (times: FloatArray, values: FloatArray): void {\r\n        this._scale = new ExoticTrack(times, new ExoticVec3TrackValues(values));\r\n    }\r\n\r\n    public createEvaluator (binder: Binder): ExoticNodeAnimationEvaluator {\r\n        return new ExoticNodeAnimationEvaluator(\r\n            this._path,\r\n            this._position,\r\n            this._rotation,\r\n            this._scale,\r\n            binder,\r\n        );\r\n    }\r\n\r\n    public createEvaluatorForAnimationGraph (context: AnimationClipGraphBindingContext): ExoticNodeAnimationAGEvaluation | null {\r\n        const transformHandle = context.bindTransform(this._path);\r\n        if (!transformHandle) {\r\n            return null;\r\n        }\r\n        return new ExoticNodeAnimationAGEvaluation(\r\n            transformHandle,\r\n            this._position,\r\n            this._rotation,\r\n            this._scale,\r\n        );\r\n    }\r\n\r\n    public split (from: number, to: number, splitInfoCache: SplitInfo): ExoticNodeAnimation {\r\n        if (!SPLIT_METHOD_ENABLED) {\r\n            return throwIfSplitMethodIsNotValid();\r\n        }\r\n\r\n        const newAnimation = new ExoticNodeAnimation(this._path);\r\n        const {\r\n            _position: position,\r\n            _rotation: rotation,\r\n            _scale: scale,\r\n        } = this;\r\n        if (position) {\r\n            newAnimation._position = splitVec3Track(position, from, to, splitInfoCache);\r\n        }\r\n        if (rotation) {\r\n            newAnimation._rotation = splitQuatTrack(rotation, from, to, splitInfoCache);\r\n        }\r\n        if (scale) {\r\n            newAnimation._scale = splitVec3Track(scale, from, to, splitInfoCache);\r\n        }\r\n        return newAnimation;\r\n    }\r\n\r\n    get path (): string {\r\n        return this._path;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public toHashString (): string {\r\n        return `${this._path}\\n${\r\n            this._position?.toHashString() ?? ''\r\n        }${this._scale?.toHashString() ?? ''\r\n        }${this._rotation?.toHashString() ?? ''}`;\r\n    }\r\n\r\n    @serializable\r\n    private _path = '';\r\n\r\n    @serializable\r\n    private _position: ExoticVec3Track | null = null;\r\n\r\n    @serializable\r\n    private _rotation: ExoticQuatTrack | null = null;\r\n\r\n    @serializable\r\n    private _scale: ExoticVec3Track | null = null;\r\n}\r\n\r\nfunction floatToHashString (value: number): string {\r\n    // Note: referenced to `Skeleton.prototype.hash`\r\n    return value.toPrecision(2);\r\n}\r\n\r\nfunction floatArrayToHashString (values: FloatArray): string {\r\n    return (values).map((v: number) => Number.parseFloat(floatToHashString(v))).join(' ');\r\n}\r\n\r\ninterface ExoticTrackValues<TValue> {\r\n    readonly precision: FloatPrecision;\r\n\r\n    get (index: number, resultValue: TValue): void;\r\n\r\n    lerp(prevIndex: number,\r\n        nextIndex: number,\r\n        ratio: number,\r\n        prevValue: TValue,\r\n        nextValue: TValue,\r\n        resultValue: TValue): void;\r\n}\r\n\r\ntype MayBeQuantized = FloatArray | QuantizedFloatArray;\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ExoticVectorLikeTrackValues`)\r\nclass ExoticVectorLikeTrackValues {\r\n    constructor (values: FloatArray) {\r\n        this._values = values;\r\n    }\r\n\r\n    get precision (): FloatPrecision {\r\n        return this._isQuantized\r\n            ? (this._values as QuantizedFloatArray).originalPrecision\r\n            : getFloatArrayPrecision(this._values as FloatArray);\r\n    }\r\n\r\n    public quantize (type: QuantizationType): void {\r\n        assertIsTrue(!this._isQuantized);\r\n        this._values = quantize(this._values as FloatArray, type);\r\n        this._isQuantized = true;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public toHashString (): string {\r\n        const { _isQuantized: isQuantized, _values: values } = this;\r\n        return `${isQuantized} ${\r\n            isQuantized\r\n                ? (values as QuantizedFloatArray).toHashString()\r\n                : floatArrayToHashString(values as FloatArray)\r\n        }`;\r\n    }\r\n\r\n    @serializable\r\n    protected _values: MayBeQuantized;\r\n\r\n    @serializable\r\n    protected _isQuantized = false;\r\n}\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ExoticVec3TrackValues`)\r\nclass ExoticVec3TrackValues extends ExoticVectorLikeTrackValues implements ExoticTrackValues<Vec3> {\r\n    public static imitate (values: FloatArray, model: ExoticVec3TrackValues): ExoticVec3TrackValues {\r\n        const trackValues = new ExoticVec3TrackValues(values);\r\n        if (model._isQuantized) {\r\n            trackValues.quantize((model._values as QuantizedFloatArray).quantizationType);\r\n        }\r\n        return trackValues;\r\n    }\r\n\r\n    public get (index: number, resultValue: Vec3): void {\r\n        const {\r\n            _values: values,\r\n            _isQuantized: isQuantized,\r\n        } = this;\r\n        if (isQuantized) {\r\n            loadVec3FromQuantized(values as QuantizedFloatArray, index, resultValue);\r\n        } else {\r\n            Vec3.fromArray(resultValue, values as FloatArray, index * 3);\r\n        }\r\n    }\r\n\r\n    public lerp (\r\n        prevIndex: number,\r\n        nextIndex: number,\r\n        ratio: number,\r\n        prevValue: Vec3,\r\n        nextValue: Vec3,\r\n        resultValue: Vec3,\r\n    ): void {\r\n        const {\r\n            _values: values,\r\n            _isQuantized: isQuantized,\r\n        } = this;\r\n        if (isQuantized) {\r\n            loadVec3FromQuantized(values as QuantizedFloatArray, prevIndex, prevValue);\r\n            loadVec3FromQuantized(values as QuantizedFloatArray, nextIndex, nextValue);\r\n        } else {\r\n            Vec3.fromArray(prevValue, values as FloatArray, prevIndex * 3);\r\n            Vec3.fromArray(nextValue, values as FloatArray, nextIndex * 3);\r\n        }\r\n        Vec3.lerp(resultValue, prevValue, nextValue, ratio);\r\n    }\r\n}\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ExoticQuatTrackValues`)\r\nclass ExoticQuatTrackValues extends ExoticVectorLikeTrackValues implements ExoticTrackValues<Quat> {\r\n    public static imitate (values: FloatArray, model: ExoticQuatTrackValues): ExoticQuatTrackValues {\r\n        const trackValues = new ExoticQuatTrackValues(values);\r\n        if (model._isQuantized) {\r\n            trackValues.quantize((model._values as QuantizedFloatArray).quantizationType);\r\n        }\r\n        return trackValues;\r\n    }\r\n\r\n    public get (index: number, resultValue: Quat): void {\r\n        const {\r\n            _values: values,\r\n            _isQuantized: isQuantized,\r\n        } = this;\r\n        if (isQuantized) {\r\n            loadQuatFromQuantized(values as QuantizedFloatArray, index, resultValue);\r\n        } else {\r\n            Quat.fromArray(resultValue, values as FloatArray, index * 4);\r\n        }\r\n    }\r\n\r\n    public lerp (\r\n        prevIndex: number,\r\n        nextIndex: number,\r\n        ratio: number,\r\n        prevValue: Quat,\r\n        nextValue: Quat,\r\n        resultValue: Quat,\r\n    ): void {\r\n        const {\r\n            _values: values,\r\n            _isQuantized: isQuantized,\r\n        } = this;\r\n        if (isQuantized) {\r\n            loadQuatFromQuantized(values as QuantizedFloatArray, prevIndex, prevValue);\r\n            loadQuatFromQuantized(values as QuantizedFloatArray, nextIndex, nextValue);\r\n        } else {\r\n            Quat.fromArray(prevValue, values as FloatArray, prevIndex * 4);\r\n            Quat.fromArray(nextValue, values as FloatArray, nextIndex * 4);\r\n        }\r\n        Quat.slerp(resultValue, prevValue, nextValue, ratio);\r\n    }\r\n}\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}ExoticTrack`)\r\nclass ExoticTrack<TTrackValues extends { toHashString(): string; }> {\r\n    constructor (times: FloatArray, values: TTrackValues) {\r\n        this.times = times;\r\n        this.values = values;\r\n    }\r\n\r\n    @serializable\r\n    public times!: FloatArray;\r\n\r\n    @serializable\r\n    public values!: TTrackValues;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public toHashString (): string {\r\n        const { times, values } = this;\r\n        return `times: ${floatArrayToHashString(times)}; values: ${values.toHashString()}`;\r\n    }\r\n}\r\n\r\ntype ExoticVec3Track = ExoticTrack<ExoticVec3TrackValues>;\r\n\r\ntype ExoticQuatTrack = ExoticTrack<ExoticQuatTrackValues>;\r\n\r\nfunction splitVec3Track (track: ExoticVec3Track, from: number, to: number, splitInfoCache: SplitInfo): ExoticTrack<ExoticVec3TrackValues> {\r\n    const { times, values } = split(\r\n        track.times,\r\n        track.values,\r\n        from,\r\n        to,\r\n        3,\r\n        Vec3,\r\n        splitInfoCache,\r\n    );\r\n\r\n    const vec3Values = ExoticVec3TrackValues.imitate(values, track.values);\r\n    return new ExoticTrack<ExoticVec3TrackValues>(\r\n        times,\r\n        vec3Values,\r\n    );\r\n}\r\n\r\nfunction splitQuatTrack (track: ExoticQuatTrack, from: number, to: number, splitInfoCache: SplitInfo): ExoticTrack<ExoticQuatTrackValues> {\r\n    const { times, values } = split(\r\n        track.times,\r\n        track.values,\r\n        from,\r\n        to,\r\n        4,\r\n        Quat,\r\n        splitInfoCache,\r\n    );\r\n\r\n    const quatValues = ExoticQuatTrackValues.imitate(\r\n        values,\r\n        track.values,\r\n    );\r\n    return new ExoticTrack<ExoticQuatTrackValues>(\r\n        times,\r\n        quatValues,\r\n    );\r\n}\r\n\r\nfunction split<TValue> (\r\n    times: FloatArray,\r\n    values: ExoticTrackValues<TValue>,\r\n    from: number,\r\n    to: number,\r\n    components: number,\r\n    ValueConstructor: {\r\n        new (): TValue;\r\n        toArray(array: ArrayLike<number>, value: TValue, offset: number): void;\r\n    },\r\n    splitInfoCache: SplitInfo,\r\n): {\r\n        times: FloatArray;\r\n        values: FloatArray;\r\n    } {\r\n    const TimeArrayConstructor = getFloatArrayConstructorWithPrecision(getFloatArrayPrecision(times));\r\n    const ValueArrayConstructor = getFloatArrayConstructorWithPrecision(values.precision);\r\n\r\n    const splitInfo = splitInfoCache;\r\n    splitInfo.calculate(times, from, to);\r\n\r\n    const {\r\n        preLerpIndex,\r\n        preLerpRatio,\r\n        directKeyframesBegin,\r\n        directKeyframesEnd,\r\n        postLerpIndex,\r\n        postLerpRatio,\r\n    } = splitInfo;\r\n\r\n    const nNewKeyframes = splitInfo.keyframesCount;\r\n\r\n    if (nNewKeyframes === 0) {\r\n        return {\r\n            times: new TimeArrayConstructor(0),\r\n            values: new ValueArrayConstructor(0),\r\n        };\r\n    }\r\n\r\n    const prevValue = new ValueConstructor();\r\n    const nextValue = new ValueConstructor();\r\n    const resultValue = new ValueConstructor();\r\n    const newTimes: FloatArray = new TimeArrayConstructor(nNewKeyframes);\r\n    const newValues: FloatArray = new ValueArrayConstructor(components * nNewKeyframes);\r\n    const doLerp = (index: number, ratio: number, outputIndex: number): void => {\r\n        assertIsTrue(index < times.length - 1);\r\n        const iPrevious = index;\r\n        const iNext = index + 1;\r\n        values.lerp(\r\n            iPrevious,\r\n            iNext,\r\n            ratio,\r\n            prevValue,\r\n            nextValue,\r\n            resultValue,\r\n        );\r\n        newTimes[outputIndex] = lerp(times[iPrevious], times[iNext], ratio) - from;\r\n        ValueConstructor.toArray(newValues, resultValue, components * outputIndex);\r\n    };\r\n\r\n    let iKeyframe = 0;\r\n    if (preLerpIndex >= 0) {\r\n        doLerp(preLerpIndex, preLerpRatio, iKeyframe);\r\n        ++iKeyframe;\r\n    }\r\n    for (let index = directKeyframesBegin; index < directKeyframesEnd; ++index, ++iKeyframe) {\r\n        values.get(index, resultValue);\r\n        newTimes[iKeyframe] = times[index] - from;\r\n        ValueConstructor.toArray(newValues, resultValue, components * iKeyframe);\r\n    }\r\n    if (postLerpIndex >= 0) {\r\n        doLerp(postLerpIndex, postLerpRatio, iKeyframe);\r\n        ++iKeyframe;\r\n    }\r\n    assertIsTrue(iKeyframe === nNewKeyframes);\r\n\r\n    return {\r\n        times: newTimes,\r\n        values: newValues,\r\n    };\r\n}\r\n\r\nclass SplitInfo {\r\n    public declare preLerpIndex: number;\r\n    public declare preLerpRatio: number;\r\n    public declare directKeyframesBegin: number;\r\n    public declare directKeyframesEnd: number;\r\n    public declare postLerpIndex: number;\r\n    public declare postLerpRatio: number;\r\n\r\n    constructor () {\r\n        this._reset();\r\n    }\r\n\r\n    public get keyframesCount (): number {\r\n        const {\r\n            preLerpIndex,\r\n            directKeyframesBegin,\r\n            directKeyframesEnd,\r\n            postLerpIndex,\r\n        } = this;\r\n        return 0\r\n            + (preLerpIndex < 0 ? 0 : 1)\r\n            + (directKeyframesEnd - directKeyframesBegin)\r\n            + (postLerpIndex < 0 ? 0 : 1);\r\n    }\r\n\r\n    public calculate (times: ArrayLike<number>, from: number, to: number): void {\r\n        this._reset();\r\n\r\n        if (from > to) {\r\n            return;\r\n        }\r\n\r\n        const nKeyframes = times.length;\r\n        if (!nKeyframes) {\r\n            return;\r\n        }\r\n\r\n        const firstTime = times[0];\r\n        const lastTime = times[nKeyframes - 1];\r\n\r\n        let fromIndex = 0;\r\n        let fromRatio = 0.0;\r\n        if (from < firstTime) {\r\n            // Leave as-is.\r\n        } else if (from >= lastTime) {\r\n            fromIndex = nKeyframes - 1;\r\n            fromRatio = 0.0;\r\n        } else {\r\n            ({ index: fromIndex, ratio: fromRatio } = binarySearchRatio(times, from));\r\n        }\r\n\r\n        let toIndex = 0;\r\n        let toRatio = 0.0;\r\n        if (to < firstTime) {\r\n            // Leave as-is.\r\n        } else if (to >= lastTime) {\r\n            toIndex = nKeyframes - 1;\r\n            toRatio = 0.0;\r\n        } else {\r\n            ({ index: toIndex, ratio: toRatio } = binarySearchRatio(times, to));\r\n        }\r\n\r\n        assertIsTrue(toIndex >= fromIndex);\r\n\r\n        const fromJust = !fromRatio;\r\n        const toJust = !toRatio;\r\n\r\n        // Handles that from and to are same\r\n        if (fromIndex === toIndex && fromRatio === toRatio) {\r\n            if (!fromJust) {\r\n                this.preLerpIndex = fromIndex;\r\n                this.preLerpRatio = fromRatio;\r\n            } else {\r\n                this.directKeyframesBegin = fromIndex;\r\n                this.directKeyframesEnd = fromIndex + 1;\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!fromJust) {\r\n            this.preLerpIndex = fromIndex;\r\n            this.preLerpRatio = fromRatio;\r\n        }\r\n\r\n        this.directKeyframesBegin = fromJust ? fromIndex : fromIndex + 1;\r\n        this.directKeyframesEnd = toIndex + 1;\r\n\r\n        if (!toJust) {\r\n            this.postLerpIndex = toIndex;\r\n            this.postLerpRatio = toRatio;\r\n        }\r\n    }\r\n\r\n    private _reset (): void {\r\n        this.preLerpIndex = -1;\r\n        this.preLerpRatio = 0.0;\r\n        this.directKeyframesBegin = 0;\r\n        this.directKeyframesEnd = 0;\r\n        this.postLerpIndex = -1;\r\n        this.postLerpRatio = 0.0;\r\n    }\r\n}\r\n\r\nfunction binarySearchRatio (values: ArrayLike<number>, value: number): { index: number; ratio: number; } {\r\n    const nValues = values.length;\r\n    assertIsTrue(values.length !== 0);\r\n    let resultIndex = 0;\r\n    let resultRatio = 0.0;\r\n    const index0 = binarySearchEpsilon(values, value);\r\n    if (index0 >= 0) {\r\n        resultIndex = index0;\r\n    } else {\r\n        const iNext = ~index0;\r\n        assertIsTrue(iNext !== 0 && iNext !== nValues && nValues > 1);\r\n        const iPrev = iNext - 1;\r\n        resultIndex = iPrev;\r\n        const next = values[iNext];\r\n        const prev = values[iPrev];\r\n        resultRatio = (value - prev) / (next - prev);\r\n    }\r\n    return { index: resultIndex, ratio: resultRatio };\r\n}\r\n\r\nclass ExoticTrsAnimationEvaluator {\r\n    constructor (nodeAnimations: ExoticNodeAnimation[], binder: Binder) {\r\n        this._nodeEvaluations = nodeAnimations.map((nodeAnimation) => nodeAnimation.createEvaluator(binder));\r\n    }\r\n\r\n    public evaluate (time: number): void {\r\n        this._nodeEvaluations.forEach((nodeEvaluator) => {\r\n            nodeEvaluator.evaluate(time);\r\n        });\r\n    }\r\n\r\n    private _nodeEvaluations: ExoticNodeAnimationEvaluator[];\r\n}\r\n\r\nclass ExoticNodeAnimationEvaluator {\r\n    constructor (\r\n        path: string,\r\n        position: ExoticVec3Track | null,\r\n        rotation: ExoticQuatTrack | null,\r\n        scale: ExoticVec3Track | null,\r\n        binder: Binder,\r\n    ) {\r\n        if (position) {\r\n            this._position = createExoticTrackEvaluationRecord(\r\n                position.times, position.values, Vec3, path, 'position', binder,\r\n            );\r\n        }\r\n        if (rotation) {\r\n            this._rotation = createExoticTrackEvaluationRecord(\r\n                rotation.times, rotation.values, Quat, path, 'rotation', binder,\r\n            );\r\n        }\r\n        if (scale) {\r\n            this._scale = createExoticTrackEvaluationRecord(\r\n                scale.times, scale.values, Vec3, path, 'scale', binder,\r\n            );\r\n        }\r\n    }\r\n\r\n    public evaluate (time: number): void {\r\n        if (this._position) {\r\n            const value = this._position.evaluator.evaluate(time);\r\n            this._position.runtimeBinding.setValue(value);\r\n        }\r\n        if (this._rotation) {\r\n            const value = this._rotation.evaluator.evaluate(time);\r\n            this._rotation.runtimeBinding.setValue(value);\r\n        }\r\n        if (this._scale) {\r\n            const value = this._scale.evaluator.evaluate(time);\r\n            this._scale.runtimeBinding.setValue(value);\r\n        }\r\n    }\r\n\r\n    private _position: ExoticTrackEvaluationRecord<Vec3> | null = null;\r\n    private _rotation: ExoticTrackEvaluationRecord<Quat> | null = null;\r\n    private _scale: ExoticTrackEvaluationRecord<Vec3> | null = null;\r\n}\r\n\r\nclass ExoticTrackEvaluator<TValue> {\r\n    constructor (times: FloatArray, values: ExoticTrackValues<TValue>, ValueConstructor: new () => TValue) {\r\n        this._times = times;\r\n        this._values = values;\r\n        this._prevValue = new ValueConstructor();\r\n        this._nextValue = new ValueConstructor();\r\n        this._resultValue = new ValueConstructor();\r\n    }\r\n\r\n    public evaluate (time: number): TValue {\r\n        const {\r\n            _times: times,\r\n            _values: values,\r\n            _resultValue: resultValue,\r\n        } = this;\r\n\r\n        const nFrames = times.length;\r\n\r\n        if (nFrames === 0) {\r\n            return resultValue;\r\n        }\r\n\r\n        const inputSampleResult = sampleInput(times, time, this._inputSampleResultCache);\r\n        if (inputSampleResult.just) {\r\n            values.get(inputSampleResult.index, resultValue);\r\n        } else {\r\n            values.lerp(\r\n                inputSampleResult.index,\r\n                inputSampleResult.nextIndex,\r\n                inputSampleResult.ratio,\r\n                this._prevValue,\r\n                this._nextValue,\r\n                resultValue,\r\n            );\r\n        }\r\n\r\n        return resultValue;\r\n    }\r\n\r\n    private _times: FloatArray;\r\n    private _inputSampleResultCache: InputSampleResult = {\r\n        just: false,\r\n        index: -1,\r\n        nextIndex: -1,\r\n        ratio: 0.0,\r\n    };\r\n    private _values: ExoticTrackValues<TValue>;\r\n    private _prevValue: TValue;\r\n    private _nextValue: TValue;\r\n    private _resultValue: TValue;\r\n}\r\n\r\ninterface ExoticTrackEvaluationRecord<TValue> {\r\n    runtimeBinding: RuntimeBinding;\r\n    evaluator: ExoticTrackEvaluator<TValue>;\r\n}\r\n\r\n/**\r\n * Exotic TRS animation graph evaluator.\r\n */\r\nexport class ExoticTrsAGEvaluation {\r\n    constructor (nodeAnimations: ExoticNodeAnimation[], context: AnimationClipGraphBindingContext) {\r\n        this._nodeEvaluations = nodeAnimations.map(\r\n            (nodeAnimation) => nodeAnimation.createEvaluatorForAnimationGraph(context),\r\n        ).filter((x) => !!x) as ExoticNodeAnimationAGEvaluation[];\r\n    }\r\n\r\n    public destroy (): void {\r\n        const { _nodeEvaluations: nodeEvaluations } = this;\r\n        const nNodeEvaluations = nodeEvaluations.length;\r\n        for (let iNodeEvaluation = 0; iNodeEvaluation < nNodeEvaluations; ++iNodeEvaluation) {\r\n            nodeEvaluations[iNodeEvaluation].destroy();\r\n        }\r\n    }\r\n\r\n    public evaluate (time: number, pose: Pose): void {\r\n        const { _nodeEvaluations: nodeEvaluations } = this;\r\n        const nNodeEvaluations = nodeEvaluations.length;\r\n        for (let iNodeEvaluation = 0; iNodeEvaluation < nNodeEvaluations; ++iNodeEvaluation) {\r\n            nodeEvaluations[iNodeEvaluation].evaluate(time, pose);\r\n        }\r\n    }\r\n\r\n    private _nodeEvaluations: ExoticNodeAnimationAGEvaluation[];\r\n}\r\n\r\nclass ExoticNodeAnimationAGEvaluation {\r\n    constructor (\r\n        transformHandle: TransformHandle,\r\n        position: ExoticVec3Track | null,\r\n        rotation: ExoticQuatTrack | null,\r\n        scale: ExoticVec3Track | null,\r\n    ) {\r\n        this._transformHandle = transformHandle;\r\n        if (position) {\r\n            this._position = new ExoticTrackEvaluator(position.times, position.values, Vec3);\r\n        }\r\n        if (rotation) {\r\n            this._rotation = new ExoticTrackEvaluator(rotation.times, rotation.values, Quat);\r\n        }\r\n        if (scale) {\r\n            this._scale = new ExoticTrackEvaluator(scale.times, scale.values, Vec3);\r\n        }\r\n    }\r\n\r\n    public destroy (): void {\r\n        this._transformHandle.destroy();\r\n    }\r\n\r\n    public evaluate (time: number, pose: Pose): void {\r\n        const {\r\n            _transformHandle: {\r\n                index: transformIndex,\r\n            },\r\n            _position: position,\r\n            _rotation: rotation,\r\n            _scale: scale,\r\n        } = this;\r\n        const {\r\n            transforms: poseTransforms,\r\n        } = pose;\r\n        if (position) {\r\n            const value = position.evaluate(time);\r\n            poseTransforms.setPosition(transformIndex, value);\r\n        }\r\n        if (rotation) {\r\n            const rotationAbs = rotation.evaluate(time);\r\n            poseTransforms.setRotation(transformIndex, rotationAbs);\r\n        }\r\n        if (scale) {\r\n            const value = scale.evaluate(time);\r\n            poseTransforms.setScale(transformIndex, value);\r\n        }\r\n    }\r\n\r\n    private _position: ExoticTrackEvaluator<Vec3> | null = null;\r\n    private _rotation: ExoticTrackEvaluator<Quat> | null = null;\r\n    private _scale: ExoticTrackEvaluator<Vec3> | null = null;\r\n    private _transformHandle: TransformHandle;\r\n}\r\n\r\ninterface InputSampleResult {\r\n    just: boolean;\r\n    index: number;\r\n    nextIndex: number;\r\n    ratio: number;\r\n}\r\n\r\nfunction sampleInput (values: FloatArray, time: number, result: InputSampleResult): InputSampleResult {\r\n    const nFrames = values.length;\r\n    assertIsTrue(nFrames !== 0);\r\n\r\n    const firstTime = values[0];\r\n    const lastTime = values[nFrames - 1];\r\n    if (time < firstTime) {\r\n        result.just = true;\r\n        result.index = 0;\r\n    } else if (time > lastTime) {\r\n        result.just = true;\r\n        result.index = nFrames - 1;\r\n    } else {\r\n        const index = binarySearchEpsilon(values, time);\r\n        if (index >= 0) {\r\n            result.just = true;\r\n            result.index = index;\r\n        } else {\r\n            const nextIndex = ~index;\r\n            assertIsTrue(nextIndex !== 0 && nextIndex !== nFrames && nFrames > 1);\r\n            const prevIndex = nextIndex - 1;\r\n            const prevTime = values[prevIndex];\r\n            const nextTime = values[nextIndex];\r\n            const ratio = (time - values[prevIndex]) / (nextTime - prevTime);\r\n            result.just = false;\r\n            result.index = prevIndex;\r\n            result.nextIndex = nextIndex;\r\n            result.ratio = ratio;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\ntype UintArray = Uint8Array | Uint16Array | Uint32Array;\r\n\r\ntype FloatArray = Float32Array | Float64Array;\r\n\r\ntype UintArrayConstructor = Uint8ArrayConstructor | Uint16ArrayConstructor | Uint32ArrayConstructor;\r\n\r\ntype IntArrayConstructor = Int8ArrayConstructor | Int16ArrayConstructor | Int32ArrayConstructor;\r\n\r\ntype QuantizationType = 'uint8' | 'uint16';\r\n\r\ntype QuantizationArrayConstructor = Uint8ArrayConstructor | Uint16ArrayConstructor;\r\n\r\nconst QUANTIZATION_TYPE_TO_ARRAY_VIEW_CONSTRUCTOR_MAP: Record<QuantizationType, QuantizationArrayConstructor> = {\r\n    uint8: Uint8Array,\r\n    uint16: Uint16Array,\r\n};\r\n\r\nenum FloatPrecision {\r\n    FLOAT_32,\r\n    FLOAT_64,\r\n}\r\n\r\nfunction getFloatArrayPrecision (array: FloatArray): FloatPrecision {\r\n    switch (array.BYTES_PER_ELEMENT) {\r\n    default:\r\n        assertIsTrue(false);\r\n        // fallthrough\r\n    case 4:\r\n        return FloatPrecision.FLOAT_32;\r\n    case 8:\r\n        return FloatPrecision.FLOAT_64;\r\n    }\r\n}\r\n\r\nfunction getFloatArrayConstructorWithPrecision (precision: FloatPrecision): Float32ArrayConstructor | Float64ArrayConstructor {\r\n    switch (precision) {\r\n    default:\r\n        assertIsTrue(false);\r\n        // fallthrough\r\n    case FloatPrecision.FLOAT_32:\r\n        return Float32Array;\r\n    case FloatPrecision.FLOAT_64:\r\n        return Float64Array;\r\n    }\r\n}\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}QuantizedFloatArray`)\r\nclass QuantizedFloatArray {\r\n    @serializable\r\n    public originalPrecision: FloatPrecision;\r\n\r\n    @serializable\r\n    public min!: number;\r\n\r\n    @serializable\r\n    public extent!: number;\r\n\r\n    @serializable\r\n    public values!: UintArray;\r\n\r\n    get quantizationType (): QuantizationType {\r\n        switch (this.values.BYTES_PER_ELEMENT) {\r\n        default:\r\n            // fallthrough\r\n        case 1:\r\n            return 'uint8';\r\n        case 2:\r\n            return 'uint16';\r\n        }\r\n    }\r\n\r\n    constructor (originalPrecision: FloatPrecision, values: UintArray, extent: number, min = 0.0) {\r\n        this.originalPrecision = originalPrecision;\r\n        this.values = values;\r\n        this.extent = extent;\r\n        this.min = min;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public toHashString (): string {\r\n        const { originalPrecision, min, extent, values } = this;\r\n        return `${originalPrecision} ${floatToHashString(min)} ${floatToHashString(extent)} ${values.join(' ')}`;\r\n    }\r\n}\r\n\r\nfunction quantize (values: FloatArray, type: QuantizationType): QuantizedFloatArray {\r\n    const TypedArrayViewConstructor = QUANTIZATION_TYPE_TO_ARRAY_VIEW_CONSTRUCTOR_MAP[type];\r\n    const MAX = 1 << TypedArrayViewConstructor.BYTES_PER_ELEMENT;\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    values.forEach((value) => {\r\n        min = Math.min(value, min);\r\n        max = Math.max(value, max);\r\n    });\r\n    const extent = max - min;\r\n    // Should consider `extent === 0.0`.\r\n    const normalized = TypedArrayViewConstructor.from(values, (value) => (value - min) / extent * MAX);\r\n    return new QuantizedFloatArray(getFloatArrayPrecision(values), normalized, extent, min);\r\n}\r\n\r\nfunction indexQuantized (quantized: QuantizedFloatArray, index: number): number {\r\n    const quantizedValue = quantized.values[index];\r\n    const MAX_VALUE = 1 << quantized.values.BYTES_PER_ELEMENT;\r\n    return quantizedValue / MAX_VALUE * quantized.extent + quantized.min;\r\n}\r\n\r\nfunction createExoticTrackEvaluationRecord<TValue> (\r\n    times: FloatArray,\r\n    values: ExoticTrackValues<TValue>,\r\n    ValueConstructor: new () => TValue,\r\n    path: string,\r\n    property: 'position' | 'scale' | 'rotation',\r\n    binder: Binder,\r\n): ExoticTrackEvaluationRecord<TValue> | null {\r\n    const trackBinding = new TrackBinding();\r\n    trackBinding.path = new TrackPath().toHierarchy(path).toProperty(property);\r\n    const runtimeBinding = binder(trackBinding);\r\n    if (!runtimeBinding) {\r\n        return null;\r\n    }\r\n    const evaluator =  new ExoticTrackEvaluator(times, values, ValueConstructor);\r\n    return {\r\n        runtimeBinding,\r\n        evaluator,\r\n    } as ExoticTrackEvaluationRecord<TValue>;\r\n}\r\n\r\nfunction loadVec3FromQuantized (values: QuantizedFloatArray, index: number, out: Vec3): void {\r\n    Vec3.set(\r\n        out,\r\n        indexQuantized(values, 3 * index + 0),\r\n        indexQuantized(values, 3 * index + 1),\r\n        indexQuantized(values, 3 * index + 2),\r\n    );\r\n}\r\n\r\nfunction loadQuatFromQuantized (values: QuantizedFloatArray, index: number, out: Quat): void {\r\n    Quat.set(\r\n        out,\r\n        indexQuantized(values, 4 * index + 0),\r\n        indexQuantized(values, 4 * index + 1),\r\n        indexQuantized(values, 4 * index + 2),\r\n        indexQuantized(values, 4 * index + 3),\r\n    );\r\n}\r\n","import { RealCurve } from '../core';\r\nimport { ccclass, serializable } from '../core/data/decorators';\r\nimport { CLASS_NAME_PREFIX_ANIM } from './define';\r\n\r\n@ccclass(`${CLASS_NAME_PREFIX_ANIM}AuxiliaryCurveEntry`)\r\nexport class AuxiliaryCurveEntry {\r\n    @serializable\r\n    public name = '';\r\n\r\n    @serializable\r\n    public curve = new RealCurve();\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { DEBUG } from 'internal:constants';\r\nimport { Asset } from '../asset/assets/asset';\r\nimport { SpriteFrame } from '../2d/assets/sprite-frame';\r\nimport { errorID, warnID, cclegacy, js, geometry, approx, clamp, Mat4, Quat,\r\n    Vec3, murmurhash2_32_gc, binarySearchEpsilon, assertIsTrue, RealCurve,\r\n} from '../core';\r\nimport { SkelAnimDataHub } from '../3d/skeletal-animation/skeletal-animation-data-hub';\r\nimport { WrapMode as AnimationWrapMode, WrapMode } from './types';\r\nimport { Node } from '../scene-graph/node';\r\nimport type { PoseOutput } from './pose-output';\r\nimport * as legacy from './legacy-clip-data';\r\nimport { BAKE_SKELETON_CURVE_SYMBOL } from './internal-symbols';\r\nimport { Binder, RuntimeBinding, Track, TrackBinding, trackBindingTag, TrackEval, TrackPath, TrsTrackPath } from './tracks/track';\r\nimport { createEvalSymbol } from './define';\r\nimport { UntypedTrack, UntypedTrackRefine } from './tracks/untyped-track';\r\nimport { Range } from './tracks/utils';\r\nimport { ObjectTrack } from './tracks/object-track';\r\nimport type { ExoticAnimation } from './exotic-animation/exotic-animation';\r\nimport './exotic-animation/exotic-animation';\r\nimport type { AnimationMask } from './marionette/animation-mask';\r\nimport { getGlobalAnimationManager } from './global-animation-manager';\r\nimport { EmbeddedPlayableState, EmbeddedPlayer } from './embedded-player/embedded-player';\r\nimport { AuxiliaryCurveEntry } from './auxiliary-curve-entry';\r\nimport { removeIf } from '../core/utils/array';\r\nimport { invokeComponentMethodsEngagedInAnimationEvent } from './event/event-emitter';\r\nimport type { DataPoolManager } from '../3d/skeletal-animation/data-pool-manager';\r\n\r\nexport declare namespace AnimationClip {\r\n    export interface IEvent {\r\n        frame: number;\r\n        func: string;\r\n        params: string[];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    export type { legacy as _legacy };\r\n}\r\n\r\n// #region Tracks\r\n\r\n// Export for test\r\nexport const searchForRootBonePathSymbol = Symbol('SearchForRootBonePath');\r\n\r\n// #endregion\r\n\r\ninterface SkeletonAnimationBakeInfo {\r\n    samples: number;\r\n\r\n    frames: number;\r\n\r\n    joints: Record<string, {\r\n        transforms?: Mat4[];\r\n    }>;\r\n}\r\n\r\nexport const exoticAnimationTag = Symbol('ExoticAnimation');\r\n\r\nexport const embeddedPlayerCountTag = Symbol('[[EmbeddedPlayerCount]]');\r\nexport const getEmbeddedPlayersTag = Symbol('[[GetEmbeddedPlayers]]');\r\nexport const addEmbeddedPlayerTag = Symbol('[[AddEmbeddedPlayer]]');\r\nexport const removeEmbeddedPlayerTag = Symbol('[[RemoveEmbeddedPlayer]]');\r\nexport const clearEmbeddedPlayersTag = Symbol('[[ClearEmbeddedPlayers]]');\r\n\r\n/**\r\n * Tag to access the additive settings associated on animation clip.\r\n */\r\nexport const additiveSettingsTag = Symbol('[[Additive Settings]]');\r\n\r\n/**\r\n * @zh 动画剪辑表示一段使用动画编辑器编辑的关键帧动画或是外部美术工具生产的骨骼动画。\r\n * 它的数据主要被分为几层：轨道、关键帧和曲线。\r\n * @en The animation clip represents a sequence of key frame animation created with the animation editor or skeletal animation other DCC tools.\r\n * The data is divided in different levels: tracks, key frames, curves.\r\n */\r\n@ccclass('cc.AnimationClip')\r\nexport class AnimationClip extends Asset {\r\n    public static WrapMode = AnimationWrapMode;\r\n\r\n    /**\r\n     * @en Crate clip with a set of sprite frames\r\n     * @zh 使用一组序列帧图片来创建动画剪辑\r\n     * @example\r\n     * ```\r\n     * import { AnimationClip } from 'cc';\r\n     * const clip = AnimationClip.createWithSpriteFrames(spriteFrames, 10);\r\n     * ```\r\n     */\r\n    public static createWithSpriteFrames (spriteFrames: SpriteFrame[], sample: number): AnimationClip {\r\n        const clip = new AnimationClip();\r\n        clip.sample = sample || clip.sample;\r\n        clip.duration = spriteFrames.length / clip.sample;\r\n        const step = 1 / clip.sample;\r\n        const track = new ObjectTrack<SpriteFrame>();\r\n        track.path =  new TrackPath().toComponent('cc.Sprite').toProperty('spriteFrame');\r\n        const curve = track.channels()[0].curve;\r\n        curve.assignSorted(spriteFrames.map((spriteFrame, index) => [step * index, spriteFrame]));\r\n        clip.addTrack(track);\r\n        return clip;\r\n    }\r\n\r\n    /**\r\n     * @zh 动画帧率，单位为帧/秒。注意此属性仅用于编辑器动画编辑。\r\n     * @en Animation frame rate: frames per second.\r\n     * Note this property is only used for animation editing in Editor.\r\n     */\r\n    @serializable\r\n    public sample = 60;\r\n\r\n    /**\r\n     * @zh 动画的播放速度。\r\n     * @en Animation playback speed.\r\n     */\r\n    @serializable\r\n    public speed = 1;\r\n\r\n    /**\r\n     * @zh 动画的循环模式。\r\n     * @en Animation loop mode.\r\n     */\r\n    @serializable\r\n    public wrapMode = AnimationWrapMode.Normal;\r\n\r\n    /**\r\n     * Sets if node TRS curves in this animation can be blended.\r\n     * Normally this flag is enabled for model animation and disabled for other case.\r\n     * @internal This is an internal slot. Never use it in your code.\r\n     */\r\n    @serializable\r\n    public enableTrsBlending = false;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * @zh 动画的周期。\r\n     * @en Animation duration.\r\n     */\r\n    get duration (): number {\r\n        return this._duration;\r\n    }\r\n\r\n    set duration (value) {\r\n        this._duration = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the count of tracks this animation owns.\r\n     * @zh\r\n     * 获取此动画中的轨道数量。\r\n     */\r\n    get tracksCount (): number {\r\n        return this._tracks.length;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets an iterable to tracks.\r\n     * @zh\r\n     * 获取可用于迭代轨道的对象。\r\n     */\r\n    get tracks (): Iterable<Track> {\r\n        return this._tracks;\r\n    }\r\n\r\n    get hash (): number {\r\n        // hashes should already be computed offline, but if not, make one\r\n        if (this._hash) { return this._hash; }\r\n        // Only hash exotic animations(including skeletal animations imported from model file).\r\n        // The behavior is consistent with how `.hash` implemented prior to 3.3.\r\n        const hashString = `Exotic:${this._exoticAnimation?.toHashString() ?? ''}`;\r\n        return this._hash = murmurhash2_32_gc(hashString, 666);\r\n    }\r\n\r\n    /**\r\n     * @zh 动画包含的事件数据。\r\n     * @en Associated event data.\r\n     */\r\n    get events (): AnimationClip.IEvent[] {\r\n        return this._events;\r\n    }\r\n\r\n    set events (value) {\r\n        this._events = value;\r\n\r\n        const ratios: number[] = [];\r\n        const eventGroups: IAnimationEventGroup[] = [];\r\n        const events = this.events.sort((a, b) => a.frame - b.frame);\r\n        const nEvents = events.length;\r\n        for (let iEvent = 0; iEvent < nEvents; ++iEvent) {\r\n            const eventData = events[iEvent];\r\n            const ratio = eventData.frame / this._duration;\r\n            let i = ratios.findIndex((r) => r === ratio);\r\n            if (i < 0) {\r\n                i = ratios.length;\r\n                ratios.push(ratio);\r\n                eventGroups.push({\r\n                    events: [],\r\n                });\r\n            }\r\n            eventGroups[i].events.push({\r\n                functionName: eventData.func,\r\n                parameters: eventData.params,\r\n            });\r\n        }\r\n\r\n        this._runtimeEvents = {\r\n            ratios,\r\n            eventGroups,\r\n        };\r\n    }\r\n\r\n    get [exoticAnimationTag] (): ExoticAnimation | null {\r\n        return this._exoticAnimation;\r\n    }\r\n\r\n    set [exoticAnimationTag] (value) {\r\n        this._exoticAnimation = value;\r\n    }\r\n\r\n    /**\r\n     * Gets if this animation clip contains additive animation.\r\n     * @experimental\r\n     */\r\n    get isAdditive_experimental (): boolean {\r\n        return this._additiveSettings.enabled;\r\n    }\r\n\r\n    /**\r\n     * Accesses the additive animation settings.\r\n     * @internal\r\n     */\r\n    get [additiveSettingsTag] (): AdditiveSettings {\r\n        return this._additiveSettings;\r\n    }\r\n\r\n    public onLoaded (): void {\r\n        this.frameRate = this.sample;\r\n        this.events = this._events;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Counts the time range that the tracks within this animation span.\r\n     * @zh\r\n     * 获取此动画所有轨道占据的时间范围。\r\n     * @returns The time range.\r\n     */\r\n    public range (): Range {\r\n        const range: Range = { min: Infinity, max: -Infinity };\r\n        const { _tracks: tracks } = this;\r\n        const nTracks = tracks.length;\r\n        for (let iTrack = 0; iTrack < nTracks; ++iTrack) {\r\n            const track = tracks[iTrack];\r\n            const trackRange = track.range();\r\n            range.min = Math.min(range.min, trackRange.min);\r\n            range.max = Math.max(range.max, trackRange.max);\r\n        }\r\n        return range;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the specified track.\r\n     * @zh\r\n     * 获取指定的轨道。\r\n     * @param index Index to the track.\r\n     * @returns The track.\r\n     */\r\n    public getTrack (index: number): Track {\r\n        return this._tracks[index];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Adds a track into this animation.\r\n     * @zh\r\n     * 添加一个轨道到此动画中。\r\n     * @param track The track.\r\n     * @returns Index to the track.\r\n     */\r\n    public addTrack (track: Track): number {\r\n        const index = this._tracks.length;\r\n        this._tracks.push(track);\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes a track from this animation.\r\n     * @zh\r\n     * 移除此动画中的指定轨道。\r\n     * @param index Index to the track.\r\n     */\r\n    public removeTrack (index: number): void {\r\n        this._tracks.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes all tracks from this animation.\r\n     * @zh\r\n     * 移除此动画的所有轨道。\r\n     */\r\n    public clearTracks (): void {\r\n        this._tracks.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if this clip has any event.\r\n     * @internal Do not use this in your code.\r\n     */\r\n    public containsAnyEvent (): boolean {\r\n        return this._events.length !== 0;\r\n    }\r\n\r\n    /**\r\n     * Creates an event evaluator for this animation.\r\n     * @param targetNode Target node used to fire events.\r\n     * @internal Do not use this in your code.\r\n     */\r\n    public createEventEvaluator (targetNode: Node): EventEvaluator {\r\n        return new EventEvaluator(\r\n            targetNode,\r\n            this._runtimeEvents.ratios,\r\n            this._runtimeEvents.eventGroups,\r\n            this.wrapMode,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns if this clip has any embedded player.\r\n     * @internal Do not use this in your code.\r\n     */\r\n    public containsAnyEmbeddedPlayer (): boolean {\r\n        return this._embeddedPlayers.length !== 0;\r\n    }\r\n\r\n    /**\r\n     * Creates an embedded player evaluator for this animation.\r\n     * @param targetNode Target node.\r\n     * @internal Do not use this in your code.\r\n     */\r\n    public createEmbeddedPlayerEvaluator (targetNode: Node): EmbeddedPlayerEvaluation {\r\n        return new EmbeddedPlayerEvaluation(\r\n            this._embeddedPlayers,\r\n            targetNode,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates an evaluator for this animation.\r\n     * @param context The context.\r\n     * @returns The evaluator.\r\n     * @internal Do not use this in your code.\r\n     */\r\n    public createEvaluator (context: AnimationClipEvalContext): AnimationClipEvaluation {\r\n        const {\r\n            target,\r\n        } = context;\r\n\r\n        const binder: Binder = (binding: TrackBinding) => {\r\n            if (context.mask && binding.isMaskedOff(context.mask)) {\r\n                return undefined;\r\n            }\r\n\r\n            const trackTarget = binding.createRuntimeBinding(\r\n                target,\r\n                this.enableTrsBlending ? context.pose : undefined,\r\n                false,\r\n            );\r\n            if (DEBUG && !trackTarget) {\r\n                // If we got a null track target here, we should already have warn logged,\r\n                // To elaborate on error details, we warn here as well.\r\n                // Note: if in the future this log appears alone,\r\n                // it must be a BUG which break promise by above statement.\r\n                warnID(\r\n                    3937,\r\n                    this.name,\r\n                    ((context.target instanceof Node) ? context.target.name : context.target) as string,\r\n                );\r\n            }\r\n            return trackTarget ?? undefined;\r\n        };\r\n\r\n        return this._createEvalWithBinder(target, binder, context.rootMotion);\r\n    }\r\n\r\n    public destroy (): boolean {\r\n        const dataPoolManager = cclegacy.director.root?.dataPoolManager as (DataPoolManager | null);\r\n        if (dataPoolManager) {\r\n            dataPoolManager.releaseAnimationClip(this);\r\n        }\r\n        SkelAnimDataHub.destroy(this);\r\n        return super.destroy();\r\n    }\r\n\r\n    public [BAKE_SKELETON_CURVE_SYMBOL] (start: number, samples: number, frames: number): SkeletonAnimationBakeInfo {\r\n        const step = 1.0 / samples;\r\n\r\n        const animatedJoints = this._collectAnimatedJoints();\r\n        const nAnimatedJoints = animatedJoints.length;\r\n\r\n        const jointsBakeInfo: Record<string, {\r\n            transforms: Mat4[];\r\n        }> = {};\r\n        for (let iAnimatedJoint = 0; iAnimatedJoint < nAnimatedJoints; ++iAnimatedJoint) {\r\n            const joint = animatedJoints[iAnimatedJoint];\r\n            jointsBakeInfo[joint] = {\r\n                transforms: Array.from({ length: frames }, () => new Mat4()),\r\n            };\r\n        }\r\n\r\n        const skeletonFrames = animatedJoints.reduce((result, joint) => {\r\n            result[joint] = new BoneGlobalTransform();\r\n            return result;\r\n        }, {} as Record<string, BoneGlobalTransform>);\r\n        for (const joint in skeletonFrames) {\r\n            const skeletonFrame = skeletonFrames[joint];\r\n            const parentJoint = joint.lastIndexOf('/');\r\n            if (parentJoint >= 0) {\r\n                const parentJointName = joint.substring(0, parentJoint);\r\n                const parentJointFrame = skeletonFrames[parentJointName];\r\n                // Parent joint can be nil since some of joints' parents\r\n                // are not in animation list. For example, joints under socket nodes.\r\n                if (parentJointFrame) {\r\n                    skeletonFrame.parent = parentJointFrame;\r\n                }\r\n            }\r\n        }\r\n\r\n        const binder: Binder = (binding: TrackBinding) => {\r\n            const trsPath = binding.parseTrsPath();\r\n            if (!trsPath) {\r\n                return undefined;\r\n            }\r\n\r\n            const jointFrame = skeletonFrames[trsPath.node];\r\n            if (!jointFrame) {\r\n                return undefined;\r\n            }\r\n\r\n            return createBoneTransformBinding(jointFrame, trsPath.property);\r\n        };\r\n\r\n        const evaluator = this._createEvalWithBinder(undefined, binder, undefined);\r\n\r\n        for (let iFrame = 0; iFrame < frames; ++iFrame) {\r\n            const time = start + step * iFrame;\r\n            evaluator.evaluate(time);\r\n            for (let iAnimatedJoint = 0; iAnimatedJoint < nAnimatedJoints; ++iAnimatedJoint) {\r\n                const joint = animatedJoints[iAnimatedJoint];\r\n                Mat4.copy(\r\n                    jointsBakeInfo[joint].transforms[iFrame],\r\n                    skeletonFrames[joint].globalTransform,\r\n                );\r\n            }\r\n            for (let iAnimatedJoint = 0; iAnimatedJoint < nAnimatedJoints; ++iAnimatedJoint) {\r\n                const joint = animatedJoints[iAnimatedJoint];\r\n                skeletonFrames[joint].invalidate();\r\n            }\r\n        }\r\n\r\n        return {\r\n            samples,\r\n\r\n            frames,\r\n\r\n            joints: jointsBakeInfo,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Convert all untyped tracks into typed ones and delete the original.\r\n     * @param refine How to decide the type on specified path.\r\n     * @internal DO NOT USE THIS IN YOUR CODE.\r\n     */\r\n    public upgradeUntypedTracks (refine: UntypedTrackRefine): void {\r\n        const newTracks: Track[] = [];\r\n        const removals: Track[] = [];\r\n        const { _tracks: tracks } = this;\r\n        const nTracks = tracks.length;\r\n        for (let iTrack = 0; iTrack < nTracks; ++iTrack) {\r\n            const track = tracks[iTrack];\r\n            if (!(track instanceof UntypedTrack)) {\r\n                continue;\r\n            }\r\n            const newTrack = track.upgrade(refine);\r\n            if (newTrack) {\r\n                newTracks.push(newTrack);\r\n                removals.push(track);\r\n            }\r\n        }\r\n        const nRemovalTracks = removals.length;\r\n        for (let iRemovalTrack = 0; iRemovalTrack < nRemovalTracks; ++iRemovalTrack) {\r\n            js.array.remove(tracks, removals[iRemovalTrack]);\r\n        }\r\n        tracks.push(...newTracks);\r\n    }\r\n\r\n    /**\r\n     * @internal Export for test.\r\n     */\r\n    public [searchForRootBonePathSymbol] (): string {\r\n        return this._searchForRootBonePath();\r\n    }\r\n\r\n    // #region Legacy area\r\n    // The following are significantly refactored and deprecated since 3.3.\r\n    // We deprecates the direct exposure of keys, values, events.\r\n    // Instead, we use track to organize them together.\r\n\r\n    /**\r\n     * @zh 曲线可引用的所有时间轴。\r\n     * @en Frame keys referenced by curves.\r\n     * @deprecated Since V3.3. Please reference to the track/channel/curve mechanism introduced in V3.3.\r\n     */\r\n    get keys (): number[][] {\r\n        return this._getLegacyData().keys;\r\n    }\r\n\r\n    set keys (value) {\r\n        this._legacyDataDirty = true;\r\n        this._getLegacyData().keys = value;\r\n    }\r\n\r\n    /**\r\n     * @zh 此动画包含的所有曲线。\r\n     * @en Curves this animation contains.\r\n     * @deprecated Since V3.3. Please reference to the track/channel/curve mechanism introduced in V3.3.\r\n     */\r\n    get curves (): legacy.LegacyClipCurve[] {\r\n        this._legacyDataDirty = true;\r\n        return this._getLegacyData().curves;\r\n    }\r\n\r\n    set curves (value) {\r\n        this._getLegacyData().curves = value;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since V3.3. Please reference to the track/channel/curve mechanism introduced in V3.3.\r\n     */\r\n    get commonTargets (): legacy.LegacyCommonTarget[] {\r\n        return this._getLegacyData().commonTargets;\r\n    }\r\n\r\n    set commonTargets (value) {\r\n        this._legacyDataDirty = true;\r\n        this._getLegacyData().commonTargets = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The animation's data.\r\n     * @zh\r\n     * 此动画的数据。\r\n     * @deprecated Since V3.3. Please reference to the track/channel/curve mechanism introduced in V3.3.\r\n     */\r\n    get data (): Uint8Array | null {\r\n        return this._getLegacyData().data;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since V3.3. Please reference to the track/channel/curve mechanism introduced in V3.3.\r\n     */\r\n    public getPropertyCurves (): readonly legacy.LegacyRuntimeCurve[] {\r\n        return this._getLegacyData().getPropertyCurves();\r\n    }\r\n\r\n    /**\r\n     * @deprecated Since V3.3. Please reference to the track/channel/curve mechanism introduced in V3.3.\r\n     */\r\n    get eventGroups (): readonly IAnimationEventGroup[] {\r\n        return this._runtimeEvents.eventGroups;\r\n    }\r\n\r\n    /**\r\n     * @zh 提交事件数据的修改。\r\n     * 当你修改了 `this.events` 时，必须调用 `this.updateEventDatas()` 使修改生效。\r\n     * @en\r\n     * Commit event data update.\r\n     * You should call this function after you changed the `events` data to take effect.\r\n     * @deprecated Since V3.3. Please Assign to `this.events`.\r\n     */\r\n    public updateEventDatas (): void {\r\n        this.events = this._events;\r\n    }\r\n\r\n    /**\r\n     * @zh 返回本动画是否包含事件数据。\r\n     * @en Returns if this animation contains event data.\r\n     * @protected\r\n     */\r\n    public hasEvents (): boolean {\r\n        return this.events.length !== 0;\r\n    }\r\n\r\n    /**\r\n     * Migrates legacy data into tracks.\r\n     * NOTE: This method tend to be used as internal purpose or patch.\r\n     * DO NOT use it in your code since it might be removed for the future at any time.\r\n     * @internal Since V3.3. Please reference to the track/channel/curve mechanism introduced in V3.3.\r\n     */\r\n    public syncLegacyData (): void {\r\n        if (this._legacyData) {\r\n            this._fromLegacy(this._legacyData);\r\n            this._legacyData = undefined;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    get [embeddedPlayerCountTag] (): number {\r\n        return this._embeddedPlayers.length;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [getEmbeddedPlayersTag] (): Iterable<EmbeddedPlayer> {\r\n        return this._embeddedPlayers;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [addEmbeddedPlayerTag] (embeddedPlayer: EmbeddedPlayer): void {\r\n        this._embeddedPlayers.push(embeddedPlayer);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [removeEmbeddedPlayerTag] (embeddedPlayer: EmbeddedPlayer): void {\r\n        const iEmbeddedPlayer = this._embeddedPlayers.indexOf(embeddedPlayer);\r\n        if (iEmbeddedPlayer >= 0) {\r\n            this._embeddedPlayers.splice(iEmbeddedPlayer, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [clearEmbeddedPlayersTag] (): void {\r\n        this._embeddedPlayers.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @zh 获取此动画剪辑中的辅助曲线数量。\r\n     * @en Gets the count of auxiliary curves within this animation clip.\r\n     */\r\n    public get auxiliaryCurveCount_experimental (): number {\r\n        return this._auxiliaryCurveEntries.length;\r\n    }\r\n\r\n    /**\r\n     * @zh 返回此动画剪辑中所有辅助曲线的名称。\r\n     * @en Returns names of all auxiliary curves within this animation clip.\r\n     */\r\n    public getAuxiliaryCurveNames_experimental (): readonly string[] {\r\n        return this._auxiliaryCurveEntries.map((entry) => entry.name);\r\n    }\r\n\r\n    /**\r\n     * @zh 返回此动画剪辑中是否存在指定的辅助曲线。\r\n     * @en Returns if the specified auxiliary curve exists in this animation clip.\r\n     */\r\n    public hasAuxiliaryCurve_experimental (name: string): boolean {\r\n        return !!this._findAuxiliaryCurveEntry(name);\r\n    }\r\n\r\n    /**\r\n     * @zh 添加一条辅助曲线。如果已存在同名的辅助曲线，则直接返回。\r\n     * @en Adds an auxiliary curve. Directly return if there is already such named auxiliary curve.\r\n     * @param name @zh 辅助曲线的名称。@en The auxiliary curve's name.\r\n     * @returns @zh 新增或已存在的辅助曲线。 @en The newly created or existing auxiliary curve.\r\n     * @experimental\r\n     */\r\n    public addAuxiliaryCurve_experimental (name: string): RealCurve {\r\n        let entry = this._findAuxiliaryCurveEntry(name);\r\n        if (!entry) {\r\n            entry = new AuxiliaryCurveEntry();\r\n            entry.name = name;\r\n            this._auxiliaryCurveEntries.push(entry);\r\n        }\r\n        return entry.curve;\r\n    }\r\n\r\n    /**\r\n     * @zh 获取指定的辅助曲线。\r\n     * @en Gets the specified auxiliary curve.\r\n     * @param name @zh 辅助曲线的名称。@en The auxiliary curve's name.\r\n     * @returns @zh 指定的辅助曲线。@en The specified auxiliary curve.\r\n     * @experimental\r\n     */\r\n    public getAuxiliaryCurve_experimental (name: string): RealCurve {\r\n        const entry = this._findAuxiliaryCurveEntry(name);\r\n        assertIsTrue(entry);\r\n        return entry.curve;\r\n    }\r\n\r\n    /**\r\n     * @zh 重命名指定的辅助曲线。\r\n     * @en Renames the specified auxiliary curve.\r\n     * @param name @zh 要重命名的辅助曲线的名称。@en Name of the auxiliary curve to rename.\r\n     * @param newName @zh 新名称。@en New name.\r\n     */\r\n    public renameAuxiliaryCurve_experimental (name: string, newName: string): void {\r\n        const entry = this._findAuxiliaryCurveEntry(name);\r\n        if (entry) {\r\n            entry.name = newName;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh 移除指定的辅助曲线。\r\n     * @en Removes the specified auxiliary curve.\r\n     * @param name @zh 辅助曲线的名称。@en The auxiliary curve's name.\r\n     * @experimental\r\n     */\r\n    public removeAuxiliaryCurve_experimental (name: string): void {\r\n        removeIf(this._auxiliaryCurveEntries, (entry) => entry.name === name);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _trySyncLegacyData (): void {\r\n        if (this._legacyDataDirty) {\r\n            this._legacyDataDirty = false;\r\n            this.syncLegacyData();\r\n        }\r\n    }\r\n\r\n    @serializable\r\n    private _duration = 0;\r\n\r\n    @serializable\r\n    private _hash = 0;\r\n\r\n    private frameRate = 0;\r\n\r\n    @serializable\r\n    private _tracks: Track[] = [];\r\n\r\n    @serializable\r\n    private _exoticAnimation: ExoticAnimation | null = null;\r\n\r\n    private _legacyData: legacy.AnimationClipLegacyData | undefined = undefined;\r\n\r\n    private _legacyDataDirty = false;\r\n\r\n    @serializable\r\n    private _events: AnimationClip.IEvent[] = [];\r\n\r\n    @serializable\r\n    private _embeddedPlayers: EmbeddedPlayer[] = [];\r\n\r\n    @serializable\r\n    private _additiveSettings = new AdditiveSettings();\r\n\r\n    @serializable\r\n    private _auxiliaryCurveEntries: AuxiliaryCurveEntry[] = [];\r\n\r\n    private _runtimeEvents: {\r\n        ratios: number[];\r\n        eventGroups: IAnimationEventGroup[];\r\n    } = {\r\n            ratios: [],\r\n            eventGroups: [],\r\n        };\r\n\r\n    private _createEvalWithBinder (target: unknown, binder: Binder, rootMotionOptions: RootMotionOptions | undefined): AnimationClipEvaluation {\r\n        if (this._legacyDataDirty) {\r\n            this._legacyDataDirty = false;\r\n            this.syncLegacyData();\r\n        }\r\n\r\n        const rootMotionTrackExcludes: Track[] = [];\r\n        let rootMotionEvaluation: RootMotionEvaluation | undefined;\r\n        if (rootMotionOptions) {\r\n            rootMotionEvaluation = this._createRootMotionEvaluation(\r\n                target,\r\n                rootMotionOptions,\r\n                rootMotionTrackExcludes,\r\n            );\r\n        }\r\n\r\n        const trackEvalStatues: TrackEvalStatus<unknown>[] = [];\r\n        let exoticAnimationEvaluator: ExoticAnimationEvaluator | undefined;\r\n\r\n        const { _tracks: tracks } = this;\r\n        const nTracks = tracks.length;\r\n        for (let iTrack = 0; iTrack < nTracks; ++iTrack) {\r\n            const track = tracks[iTrack];\r\n            if (rootMotionTrackExcludes.includes(track)) {\r\n                continue;\r\n            }\r\n            if (Array.from(track.channels()).every(({ curve }) => curve.keyFramesCount === 0)) {\r\n                continue;\r\n            }\r\n            const runtimeBinding = binder(track[trackBindingTag]);\r\n            if (!runtimeBinding) {\r\n                continue;\r\n            }\r\n\r\n            let trackEval: TrackEval<unknown>;\r\n            if (!(track instanceof UntypedTrack)) {\r\n                trackEval = track[createEvalSymbol]();\r\n            } else {\r\n                // Handle untyped track specially.\r\n                if (!runtimeBinding.getValue) {\r\n                    // If we can not get a value from binding,\r\n                    // we're not able to instantiate the untyped track.\r\n                    // This matches the behavior prior to V3.3.\r\n                    errorID(3930);\r\n                    continue;\r\n                }\r\n\r\n                const hintValue = runtimeBinding.getValue();\r\n                trackEval = track.createLegacyEval(hintValue);\r\n            }\r\n\r\n            trackEvalStatues.push(new TrackEvalStatus(runtimeBinding, trackEval));\r\n        }\r\n\r\n        if (this._exoticAnimation) {\r\n            exoticAnimationEvaluator = this._exoticAnimation.createEvaluator(binder);\r\n        }\r\n\r\n        const evaluation = new AnimationClipEvaluation(\r\n            trackEvalStatues,\r\n            exoticAnimationEvaluator,\r\n            rootMotionEvaluation,\r\n        );\r\n\r\n        return evaluation;\r\n    }\r\n\r\n    private _createRootMotionEvaluation (\r\n        target: unknown,\r\n        rootMotionOptions: RootMotionOptions,\r\n        rootMotionTrackExcludes: Track[],\r\n    ): RootMotionEvaluation | undefined {\r\n        if (!(target instanceof Node)) {\r\n            errorID(3920);\r\n            return undefined;\r\n        }\r\n\r\n        const rootBonePath = this._searchForRootBonePath();\r\n        if (!rootBonePath) {\r\n            warnID(3923);\r\n            return undefined;\r\n        }\r\n\r\n        const rootBone = target.getChildByPath(rootBonePath);\r\n        if (!rootBone) {\r\n            warnID(3924);\r\n            return undefined;\r\n        }\r\n\r\n        // const { } = rootMotionOptions;\r\n\r\n        const boneTransform = new BoneTransform();\r\n        const rootMotionsTrackEvaluations: TrackEvalStatus<unknown>[] = [];\r\n        const { _tracks: tracks } = this;\r\n        const nTracks = tracks.length;\r\n        for (let iTrack = 0; iTrack < nTracks; ++iTrack) {\r\n            const track = tracks[iTrack];\r\n            const { [trackBindingTag]: trackBinding } = track;\r\n            const trsPath = trackBinding.parseTrsPath();\r\n            if (!trsPath) {\r\n                continue;\r\n            }\r\n            const bonePath = trsPath.node;\r\n            if (bonePath !== rootBonePath) {\r\n                continue;\r\n            }\r\n            rootMotionTrackExcludes.push(track);\r\n            const property = trsPath.property;\r\n            const runtimeBinding = createBoneTransformBinding(boneTransform, property);\r\n            if (!runtimeBinding) {\r\n                continue;\r\n            }\r\n            const trackEval = track[createEvalSymbol]();\r\n            rootMotionsTrackEvaluations.push(new TrackEvalStatus(runtimeBinding, trackEval));\r\n        }\r\n        const rootMotionEvaluation = new RootMotionEvaluation(\r\n            rootBone,\r\n            this._duration,\r\n            boneTransform,\r\n            rootMotionsTrackEvaluations,\r\n        );\r\n\r\n        return rootMotionEvaluation;\r\n    }\r\n\r\n    private _searchForRootBonePath (): string {\r\n        const paths = this._tracks.map((track) => {\r\n            const trsPath = track[trackBindingTag].parseTrsPath();\r\n            if (trsPath) {\r\n                const nodePath = trsPath.node;\r\n                return {\r\n                    path: nodePath,\r\n                    rank: nodePath.split('/').length,\r\n                };\r\n            } else {\r\n                return {\r\n                    path: '',\r\n                    rank: 0,\r\n                };\r\n            }\r\n        });\r\n\r\n        paths.sort((a, b) => a.rank - b.rank);\r\n\r\n        const iNonEmptyPath = paths.findIndex((p) => p.rank !== 0);\r\n        if (iNonEmptyPath < 0) {\r\n            return '';\r\n        }\r\n\r\n        const nPaths = paths.length;\r\n        const firstPath = paths[iNonEmptyPath];\r\n        let highestPathsAreSame = true;\r\n        for (let iPath = iNonEmptyPath + 1; iPath < nPaths; ++iPath) {\r\n            const path = paths[iPath];\r\n            if (path.rank !== firstPath.rank) {\r\n                break;\r\n            }\r\n            if (path.path !== firstPath.path) {\r\n                highestPathsAreSame = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return highestPathsAreSame ? firstPath.path : '';\r\n    }\r\n\r\n    private _getLegacyData (): legacy.AnimationClipLegacyData {\r\n        if (!this._legacyData) {\r\n            this._legacyData = this._toLegacy();\r\n        }\r\n        return this._legacyData;\r\n    }\r\n\r\n    private _toLegacy (): legacy.AnimationClipLegacyData {\r\n        const keys: number[][] = [];\r\n        const legacyCurves: legacy.LegacyClipCurve[] = [];\r\n        const commonTargets: legacy.LegacyCommonTarget[] = [];\r\n\r\n        const legacyClipData = new legacy.AnimationClipLegacyData(this._duration);\r\n        legacyClipData.keys = keys;\r\n        legacyClipData.curves = legacyCurves;\r\n        legacyClipData.commonTargets = commonTargets;\r\n        return legacyClipData;\r\n    }\r\n\r\n    private _fromLegacy (legacyData: legacy.AnimationClipLegacyData): void {\r\n        const newTracks = legacyData.toTracks();\r\n        const nNewTracks = newTracks.length;\r\n        for (let iNewTrack = 0; iNewTrack < nNewTracks; ++iNewTrack) {\r\n            this.addTrack(newTracks[iNewTrack]);\r\n        }\r\n    }\r\n\r\n    private _collectAnimatedJoints (): string[] {\r\n        const joints = new Set<string>();\r\n\r\n        const { _tracks: tracks } = this;\r\n        const nTracks = tracks.length;\r\n        for (let iTrack = 0; iTrack < nTracks; ++iTrack) {\r\n            const track = tracks[iTrack];\r\n            const trsPath = track[trackBindingTag].parseTrsPath();\r\n            if (trsPath) {\r\n                joints.add(trsPath.node);\r\n            }\r\n        }\r\n\r\n        if (this._exoticAnimation) {\r\n            const animatedJoints = this._exoticAnimation.collectAnimatedJoints();\r\n            const nAnimatedJoints = animatedJoints.length;\r\n            for (let iAnimatedJoint = 0; iAnimatedJoint < nAnimatedJoints; ++iAnimatedJoint) {\r\n                joints.add(animatedJoints[iAnimatedJoint]);\r\n            }\r\n        }\r\n\r\n        return Array.from(joints);\r\n    }\r\n\r\n    private _findAuxiliaryCurveEntry (name: string): AuxiliaryCurveEntry | undefined {\r\n        return this._auxiliaryCurveEntries.find((entry) => entry.name === name);\r\n    }\r\n}\r\n\r\n@ccclass('cc.AnimationClipAdditiveSettings')\r\nclass AdditiveSettings {\r\n    @serializable\r\n    public enabled = false;\r\n\r\n    @serializable\r\n    public refClip: AnimationClip | null = null;\r\n}\r\n\r\nexport { AdditiveSettings as AnimationClipAdditiveSettings };\r\n\r\ntype WrapMode_ = WrapMode;\r\n\r\nexport declare namespace AnimationClip {\r\n    export type WrapMode = WrapMode_;\r\n}\r\n\r\ncclegacy.AnimationClip = AnimationClip;\r\n\r\nclass TrackEvalStatus<TValue> {\r\n    constructor (binding: RuntimeBinding<TValue>, trackEval: TrackEval<TValue>) {\r\n        this._binding = binding;\r\n        this._trackEval = trackEval;\r\n        this._shouldEvaluateDefault = !!binding.getValue && trackEval.requiresDefault;\r\n    }\r\n\r\n    public evaluate (time: number): void {\r\n        const { _binding: binding, _trackEval: trackEval } = this;\r\n        const defaultValue = this._shouldEvaluateDefault\r\n            // See `this._shouldEvaluateDefault` for the assertion.\r\n            ? (binding.getValue!)() as TValue extends unknown ? unknown : Readonly<TValue>\r\n            : undefined;\r\n        const value = trackEval.evaluate(time, defaultValue);\r\n        binding.setValue(value);\r\n    }\r\n\r\n    private _binding: RuntimeBinding<TValue>;\r\n    private _trackEval: TrackEval<TValue>;\r\n    private _shouldEvaluateDefault = true;\r\n}\r\n\r\ninterface AnimationClipEvalContext {\r\n    /**\r\n     * The output pose.\r\n     */\r\n    pose?: PoseOutput;\r\n\r\n    /**\r\n     * The root animating target(should be scene node now).\r\n     */\r\n    target: unknown;\r\n\r\n    /**\r\n     * The animation mask applied.\r\n     */\r\n    mask?: AnimationMask;\r\n\r\n    /**\r\n     * Path to the root bone.\r\n     */\r\n    rootMotion?: RootMotionOptions;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface RootMotionOptions {\r\n}\r\n\r\ntype ExoticAnimationEvaluator = ReturnType<ExoticAnimation['createEvaluator']>;\r\n\r\nclass EmbeddedPlayerEvaluation {\r\n    constructor (embeddedPlayers: ReadonlyArray<EmbeddedPlayer>, rootNode: Node) {\r\n        this._embeddedPlayers = embeddedPlayers;\r\n        this._embeddedPlayerEvaluationInfos = embeddedPlayers.map(\r\n            (embeddedPlayer): EmbeddedPlayerEvaluation['_embeddedPlayerEvaluationInfos'][0] => {\r\n                const { playable: player } = embeddedPlayer;\r\n                if (!player) {\r\n                    return null;\r\n                }\r\n                const instantiatedPlayer = player.instantiate(rootNode);\r\n                if (!instantiatedPlayer) {\r\n                    return null;\r\n                }\r\n                return {\r\n                    instantiatedPlayer,\r\n                    entered: false,\r\n                    hostPauseTime: 0.0,\r\n                    lastIterations: 0,\r\n                };\r\n            },\r\n        );\r\n    }\r\n\r\n    public destroy (): void {\r\n        const {\r\n            _embeddedPlayerEvaluationInfos: embeddedPlayerEvaluationInfos,\r\n        } = this;\r\n        const nEmbeddedPlayers = embeddedPlayerEvaluationInfos.length;\r\n        for (let iEmbeddedPlayer = 0; iEmbeddedPlayer < nEmbeddedPlayers; ++iEmbeddedPlayer) {\r\n            embeddedPlayerEvaluationInfos[iEmbeddedPlayer]?.instantiatedPlayer.destroy();\r\n        }\r\n        this._embeddedPlayerEvaluationInfos.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Evaluates the embedded players.\r\n     * @param time The time([0, clipDuration]).\r\n     * @param iterations The iterations the evaluation occurred. Should be integral.\r\n     */\r\n    public evaluate (time: number, iterations: number): void {\r\n        assertIsTrue(Number.isInteger(iterations));\r\n        const {\r\n            _embeddedPlayers: embeddedPlayers,\r\n            _embeddedPlayerEvaluationInfos: embeddedPlayerEvaluationInfos,\r\n        } = this;\r\n        const nEmbeddedPlayers = embeddedPlayers.length;\r\n        for (let iEmbeddedPlayer = 0; iEmbeddedPlayer < nEmbeddedPlayers; ++iEmbeddedPlayer) {\r\n            const embeddedPlayerEvaluationInfo = embeddedPlayerEvaluationInfos[iEmbeddedPlayer];\r\n            if (!embeddedPlayerEvaluationInfo) {\r\n                continue;\r\n            }\r\n            const { entered, instantiatedPlayer, lastIterations } = embeddedPlayerEvaluationInfo;\r\n            const { begin, end } = embeddedPlayers[iEmbeddedPlayer];\r\n            const withinEmbeddedPlayer = time >= begin && time <= end;\r\n            if (withinEmbeddedPlayer) {\r\n                if (!entered) {\r\n                    instantiatedPlayer.play();\r\n                    embeddedPlayerEvaluationInfo.entered = true;\r\n                } else if (iterations !== lastIterations) {\r\n                    instantiatedPlayer.stop();\r\n                    instantiatedPlayer.play();\r\n                    embeddedPlayerEvaluationInfo.entered = true;\r\n                }\r\n            } else if (entered) {\r\n                instantiatedPlayer.stop();\r\n                embeddedPlayerEvaluationInfo.entered = false;\r\n            }\r\n            embeddedPlayerEvaluationInfo.lastIterations = iterations;\r\n            if (embeddedPlayerEvaluationInfo.entered) {\r\n                const playerTime = time - begin;\r\n                embeddedPlayerEvaluationInfo.instantiatedPlayer.setTime(playerTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    public notifyHostSpeedChanged (speed: number): void {\r\n        // Transmit the speed to embedded players that want a reconciled speed.\r\n        const {\r\n            _embeddedPlayers: embeddedPlayers,\r\n            _embeddedPlayerEvaluationInfos: embeddedPlayerEvaluationInfos,\r\n        } = this;\r\n        const nEmbeddedPlayers = embeddedPlayers.length;\r\n        for (let iEmbeddedPlayer = 0; iEmbeddedPlayer < nEmbeddedPlayers; ++iEmbeddedPlayer) {\r\n            const embeddedPlayerEvaluationInfo = embeddedPlayerEvaluationInfos[iEmbeddedPlayer];\r\n            if (!embeddedPlayerEvaluationInfo) {\r\n                continue;\r\n            }\r\n            const { instantiatedPlayer } = embeddedPlayerEvaluationInfo;\r\n            const { reconciledSpeed } = embeddedPlayers[iEmbeddedPlayer];\r\n            if (reconciledSpeed) {\r\n                instantiatedPlayer.setSpeed(speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notifies that the host has ran into **playing** state.\r\n     * @param time The time where host ran into playing state.\r\n     */\r\n    public notifyHostPlay (time: number): void {\r\n        // Host has switched to \"playing\", this can be happened when:\r\n        // - Previous state is \"stopped\": we must have stopped all embedded players.\r\n        // - Is pausing: we need to resume all embedded players.\r\n        const {\r\n            _embeddedPlayers: embeddedPlayers,\r\n            _embeddedPlayerEvaluationInfos: embeddedPlayerEvaluationInfos,\r\n        } = this;\r\n        const nEmbeddedPlayers = embeddedPlayers.length;\r\n        for (let iEmbeddedPlayer = 0; iEmbeddedPlayer < nEmbeddedPlayers; ++iEmbeddedPlayer) {\r\n            const embeddedPlayerEvaluationInfo = embeddedPlayerEvaluationInfos[iEmbeddedPlayer];\r\n            if (!embeddedPlayerEvaluationInfo) {\r\n                continue;\r\n            }\r\n            const { begin, end } = embeddedPlayers[iEmbeddedPlayer];\r\n            const { instantiatedPlayer, entered } = embeddedPlayerEvaluationInfo;\r\n            if (entered) {\r\n                const { hostPauseTime } = embeddedPlayerEvaluationInfo;\r\n                // We can resume the embedded player\r\n                // only if the pause/play happened at the same time\r\n                // or the embedded player supports random access.\r\n                // Otherwise we have to say goodbye to that embedded player.\r\n                if (instantiatedPlayer.randomAccess || approx(hostPauseTime, time, 1e-5)) {\r\n                    const startTime = clamp(time, begin, end);\r\n                    instantiatedPlayer.play();\r\n                    instantiatedPlayer.setTime(startTime - begin);\r\n                } else {\r\n                    instantiatedPlayer.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notifies that the host has ran into **pause** state.\r\n     */\r\n    public notifyHostPause (time: number): void {\r\n        // Host is paused, simply transmit this to embedded players.\r\n        const {\r\n            _embeddedPlayers: embeddedPlayers,\r\n            _embeddedPlayerEvaluationInfos: embeddedPlayerEvaluationInfos,\r\n        } = this;\r\n        const nEmbeddedPlayers = embeddedPlayers.length;\r\n        for (let iEmbeddedPlayer = 0; iEmbeddedPlayer < nEmbeddedPlayers; ++iEmbeddedPlayer) {\r\n            const embeddedPlayerEvaluationInfo = embeddedPlayerEvaluationInfos[iEmbeddedPlayer];\r\n            if (!embeddedPlayerEvaluationInfo) {\r\n                continue;\r\n            }\r\n            const { instantiatedPlayer, entered } = embeddedPlayerEvaluationInfo;\r\n            if (entered) {\r\n                instantiatedPlayer.pause();\r\n                embeddedPlayerEvaluationInfo.hostPauseTime = time;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notifies that the host has ran into **stopped** state.\r\n     */\r\n    public notifyHostStop (): void {\r\n        // Now that host is stopped, we stop all embedded players' playing\r\n        // regardless of their progresses.\r\n        const {\r\n            _embeddedPlayers: embeddedPlayers,\r\n            _embeddedPlayerEvaluationInfos: embeddedPlayerEvaluationInfos,\r\n        } = this;\r\n        const nEmbeddedPlayers = embeddedPlayers.length;\r\n        for (let iEmbeddedPlayer = 0; iEmbeddedPlayer < nEmbeddedPlayers; ++iEmbeddedPlayer) {\r\n            const embeddedPlayerEvaluationInfo = embeddedPlayerEvaluationInfos[iEmbeddedPlayer];\r\n            if (!embeddedPlayerEvaluationInfo) {\r\n                continue;\r\n            }\r\n            const { instantiatedPlayer, entered } = embeddedPlayerEvaluationInfo;\r\n            if (entered) {\r\n                embeddedPlayerEvaluationInfo.entered = false;\r\n                instantiatedPlayer.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    private declare _embeddedPlayers: ReadonlyArray<EmbeddedPlayer>;\r\n\r\n    private declare _embeddedPlayerEvaluationInfos: Array<null | {\r\n        instantiatedPlayer: EmbeddedPlayableState;\r\n        entered: boolean;\r\n        hostPauseTime: number;\r\n        lastIterations: number;\r\n    }>;\r\n}\r\n\r\nclass AnimationClipEvaluation {\r\n    constructor (\r\n        trackEvalStatuses: TrackEvalStatus<unknown>[],\r\n        exoticAnimationEvaluator: ExoticAnimationEvaluator | undefined,\r\n        rootMotionEvaluation: RootMotionEvaluation | undefined,\r\n    ) {\r\n        this._trackEvalStatues = trackEvalStatuses;\r\n        this._exoticAnimationEvaluator = exoticAnimationEvaluator;\r\n        this._rootMotionEvaluation = rootMotionEvaluation;\r\n    }\r\n\r\n    /**\r\n     * Evaluates this animation.\r\n     * @param time The time.\r\n     */\r\n    public evaluate (time: number): void {\r\n        const {\r\n            _trackEvalStatues: trackEvalStatuses,\r\n            _exoticAnimationEvaluator: exoticAnimationEvaluator,\r\n        } = this;\r\n\r\n        const nTrackEvalStatuses = trackEvalStatuses.length;\r\n        for (let iTrackEvalStatus = 0; iTrackEvalStatus < nTrackEvalStatuses; ++iTrackEvalStatus) {\r\n            trackEvalStatuses[iTrackEvalStatus].evaluate(time);\r\n        }\r\n\r\n        if (exoticAnimationEvaluator) {\r\n            exoticAnimationEvaluator.evaluate(time);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the root bone motion.\r\n     * @param startTime Start time.\r\n     * @param endTime End time.\r\n     */\r\n    public evaluateRootMotion (time: number, motionLength: number): void {\r\n        const { _rootMotionEvaluation: rootMotionEvaluation } = this;\r\n        if (rootMotionEvaluation) {\r\n            rootMotionEvaluation.evaluate(time, motionLength);\r\n        }\r\n    }\r\n\r\n    private _exoticAnimationEvaluator: ExoticAnimationEvaluator | undefined;\r\n    private _trackEvalStatues: TrackEvalStatus<unknown>[] = [];\r\n    private _rootMotionEvaluation: RootMotionEvaluation | undefined = undefined;\r\n}\r\n\r\nclass BoneTransform {\r\n    public position = new Vec3();\r\n    public scale = new Vec3(1.0, 1.0, 1.0);\r\n    public rotation = new Quat();\r\n    public eulerAngles = new Vec3();\r\n\r\n    public getTransform (out: Mat4): void {\r\n        Mat4.fromRTS(out, this.rotation, this.position, this.scale);\r\n    }\r\n}\r\n\r\nclass BoneGlobalTransform extends BoneTransform {\r\n    public parent: BoneGlobalTransform | null = null;\r\n\r\n    public get globalTransform (): Readonly<Mat4> {\r\n        const transform = this._transform;\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            Mat4.fromRTS(transform, this.rotation, this.position, this.scale);\r\n            if (this.parent) {\r\n                Mat4.multiply(transform, this.parent.globalTransform, transform);\r\n            }\r\n        }\r\n        return this._transform;\r\n    }\r\n\r\n    public invalidate (): void {\r\n        this._dirty = true;\r\n    }\r\n\r\n    private _dirty = true;\r\n    private _transform = new Mat4();\r\n}\r\n\r\nconst motionTransformCache = new Mat4();\r\n\r\nclass RootMotionEvaluation {\r\n    constructor (\r\n        private _rootBone: Node,\r\n        private _duration: number,\r\n        private _boneTransform: BoneTransform,\r\n        private _trackEvalStatuses: TrackEvalStatus<unknown>[],\r\n    ) {\r\n\r\n    }\r\n\r\n    public evaluate (time: number, motionLength: number): void {\r\n        const motionTransform = this._calcMotionTransform(time, motionLength, this._motionTransformCache);\r\n\r\n        const {\r\n            _translationMotionCache: translationMotion,\r\n            _rotationMotionCache: rotationMotion,\r\n            _scaleMotionCache: scaleMotion,\r\n            _rootBone: rootBone,\r\n        } = this;\r\n\r\n        Mat4.toSRT(motionTransform, rotationMotion, translationMotion, scaleMotion);\r\n\r\n        Vec3.add(translationMotion, translationMotion, rootBone.position);\r\n        rootBone.setPosition(translationMotion);\r\n\r\n        Quat.multiply(rotationMotion, rotationMotion, rootBone.rotation);\r\n        rootBone.setRotation(rotationMotion);\r\n\r\n        Vec3.multiply(scaleMotion, scaleMotion, rootBone.scale);\r\n        rootBone.setScale(scaleMotion);\r\n    }\r\n\r\n    private _calcMotionTransform (time: number, motionLength: number, outTransform: Mat4): Mat4 {\r\n        const { _duration: duration } = this;\r\n        const remainLength = duration - time;\r\n        assertIsTrue(remainLength >= 0);\r\n        const startTransform = this._evaluateAt(time, this._startTransformCache);\r\n        if (motionLength < remainLength) {\r\n            const endTransform = this._evaluateAt(time + motionLength, this._endTransformCache);\r\n            relativeTransform(outTransform, startTransform, endTransform);\r\n        } else {\r\n            Mat4.identity(outTransform);\r\n\r\n            const accumulateMotionTransform = (from: Mat4, to: Mat4): void => {\r\n                relativeTransform(motionTransformCache, from, to);\r\n                Mat4.multiply(outTransform, outTransform, motionTransformCache);\r\n            };\r\n\r\n            const diff = motionLength - remainLength;\r\n            const repeatCount = Math.floor(diff / duration);\r\n            const lastRemainTime = diff - repeatCount * duration;\r\n            const clipStartTransform = this._evaluateAt(0, this._initialTransformCache);\r\n            const clipEndTransform = this._evaluateAt(duration, this._clipEndTransformCache);\r\n            const endTransform = this._evaluateAt(lastRemainTime, this._endTransformCache);\r\n\r\n            // Start -> Clip End\r\n            accumulateMotionTransform(startTransform, clipEndTransform);\r\n\r\n            // Whole clip x Repeat Count\r\n            relativeTransform(motionTransformCache, clipStartTransform, clipEndTransform);\r\n            for (let i = 0; i < repeatCount; ++i) {\r\n                Mat4.multiply(outTransform, outTransform, motionTransformCache);\r\n            }\r\n\r\n            // Clip Start -> End\r\n            accumulateMotionTransform(clipStartTransform, endTransform);\r\n        }\r\n        return outTransform;\r\n    }\r\n\r\n    private _evaluateAt (time: number, outTransform: Mat4): Mat4 {\r\n        const {\r\n            _trackEvalStatuses: trackEvalStatuses,\r\n        } = this;\r\n\r\n        const nTrackEvalStatuses = trackEvalStatuses.length;\r\n        for (let iTrackEvalStatus = 0; iTrackEvalStatus < nTrackEvalStatuses; ++iTrackEvalStatus) {\r\n            trackEvalStatuses[iTrackEvalStatus].evaluate(time);\r\n        }\r\n\r\n        this._boneTransform.getTransform(outTransform);\r\n        return outTransform;\r\n    }\r\n\r\n    private _initialTransformCache = new Mat4();\r\n    private _clipEndTransformCache = new Mat4();\r\n    private _startTransformCache = new Mat4();\r\n    private _endTransformCache = new Mat4();\r\n    private _motionTransformCache = new Mat4();\r\n    private _translationMotionCache = new Vec3();\r\n    private _rotationMotionCache = new Quat();\r\n    private _scaleMotionCache = new Vec3();\r\n}\r\n\r\nfunction relativeTransform (out: Mat4, from: Mat4, to: Mat4): void {\r\n    Mat4.invert(out, from);\r\n    Mat4.multiply(out, to, out);\r\n}\r\n\r\nfunction createBoneTransformBinding (boneTransform: BoneTransform, property: TrsTrackPath[1]):  {\r\n    setValue(value: Vec3): void;\r\n} | {\r\n    setValue(value: Quat): void;\r\n} | undefined {\r\n    switch (property) {\r\n    default:\r\n        return undefined;\r\n    case 'position':\r\n        return {\r\n            setValue (value: Vec3): void {\r\n                Vec3.copy(boneTransform.position, value);\r\n            },\r\n        };\r\n    case 'rotation':\r\n        return {\r\n            setValue (value: Quat): void {\r\n                Quat.copy(boneTransform.rotation, value);\r\n            },\r\n        };\r\n    case 'scale':\r\n        return {\r\n            setValue (value: Vec3): void {\r\n                Vec3.copy(boneTransform.scale, value);\r\n            },\r\n        };\r\n    case 'eulerAngles':\r\n        return {\r\n            setValue (value: Vec3): void {\r\n                Vec3.copy(boneTransform.eulerAngles, value);\r\n            },\r\n        };\r\n    }\r\n}\r\n\r\n// #region Events\r\n\r\ninterface IAnimationEvent {\r\n    functionName: string;\r\n    parameters: string[];\r\n}\r\n\r\ninterface IAnimationEventGroup {\r\n    events: IAnimationEvent[];\r\n}\r\n\r\nconst InvalidIndex = -1;\r\n\r\nclass EventEvaluator {\r\n    constructor (\r\n        private _targetNode: Node,\r\n        private _ratios: readonly number[],\r\n        private _eventGroups: readonly IAnimationEventGroup[],\r\n        private _wrapMode: WrapMode,\r\n    ) {\r\n\r\n    }\r\n\r\n    public setWrapMode (wrapMode: WrapMode): void {\r\n        this._wrapMode = wrapMode;\r\n    }\r\n\r\n    public ignore (ratio: number, direction: number): void {\r\n        this._ignoreIndex = InvalidIndex;\r\n        this._sampled = false;\r\n\r\n        let frameIndex = getEventGroupIndexAtRatio(ratio, this._ratios);\r\n\r\n        // only ignore when time not on a frame index\r\n        if (frameIndex < 0) {\r\n            frameIndex = ~frameIndex - 1;\r\n\r\n            // if direction is inverse, then increase index\r\n            if (direction < 0) { frameIndex += 1; }\r\n\r\n            this._ignoreIndex = frameIndex;\r\n        }\r\n    }\r\n\r\n    public reset (): void {\r\n        this._lastFrameIndex = -1;\r\n        this._lastIterations = 0.0;\r\n        this._lastDirection = 0;\r\n        this._ignoreIndex = InvalidIndex;\r\n        this._sampled = false;\r\n    }\r\n\r\n    public sample (ratio: number, direction: number, iterations: number): void {\r\n        if (this._eventGroups.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const length = this._eventGroups.length;\r\n        let eventIndex = getEventGroupIndexAtRatio(ratio, this._ratios);\r\n        if (eventIndex < 0) {\r\n            eventIndex = ~eventIndex - 1;\r\n            // If direction is inverse, increase index.\r\n            if (direction < 0) {\r\n                eventIndex += 1;\r\n            }\r\n        }\r\n\r\n        if (this._ignoreIndex !== eventIndex) {\r\n            this._ignoreIndex = InvalidIndex;\r\n        }\r\n\r\n        if (!this._sampled) {\r\n            this._sampled = true;\r\n            this._doFire(eventIndex, false);\r\n            this._lastFrameIndex = eventIndex;\r\n            this._lastIterations = iterations;\r\n            this._lastDirection = direction;\r\n            return;\r\n        }\r\n\r\n        const wrapMode = this._wrapMode;\r\n        const currentIterations = wrapIterations(iterations);\r\n\r\n        let lastIterations = wrapIterations(this._lastIterations);\r\n        let lastIndex = this._lastFrameIndex;\r\n        const lastDirection = this._lastDirection;\r\n\r\n        const iterationsChanged = lastIterations !== -1 && currentIterations !== lastIterations;\r\n\r\n        if (lastIndex === eventIndex && iterationsChanged && length === 1) {\r\n            this._doFire(0, false);\r\n        } else if (lastIndex !== eventIndex || iterationsChanged) {\r\n            direction = lastDirection;\r\n\r\n            do {\r\n                if (lastIndex !== eventIndex) {\r\n                    if (direction === -1 && lastIndex === 0 && eventIndex > 0) {\r\n                        if ((wrapMode & geometry.WrapModeMask.PingPong) === geometry.WrapModeMask.PingPong) {\r\n                            direction *= -1;\r\n                        } else {\r\n                            lastIndex = length;\r\n                        }\r\n                        lastIterations++;\r\n                    } else if (direction === 1 && lastIndex === length - 1 && eventIndex < length - 1) {\r\n                        if ((wrapMode & geometry.WrapModeMask.PingPong) === geometry.WrapModeMask.PingPong) {\r\n                            direction *= -1;\r\n                        } else {\r\n                            lastIndex = -1;\r\n                        }\r\n                        lastIterations++;\r\n                    }\r\n\r\n                    if (lastIndex === eventIndex) {\r\n                        break;\r\n                    }\r\n                    if (lastIterations > currentIterations) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                lastIndex += direction;\r\n                this._doFire(lastIndex, true);\r\n            } while (lastIndex !== eventIndex && lastIndex > -1 && lastIndex < length);\r\n        }\r\n\r\n        this._lastFrameIndex = eventIndex;\r\n        this._lastIterations = iterations;\r\n        this._lastDirection = direction;\r\n    }\r\n\r\n    private _lastFrameIndex = -1;\r\n    private _lastIterations = 0.0;\r\n    private _lastDirection = 0;\r\n    private _ignoreIndex = InvalidIndex;\r\n    private _sampled = false;\r\n\r\n    private _doFire (eventIndex: number, delay: boolean): void {\r\n        if (delay) {\r\n            getGlobalAnimationManager().pushDelayEvent(this._checkAndFire, this, [eventIndex]);\r\n        } else {\r\n            this._checkAndFire(eventIndex);\r\n        }\r\n    }\r\n\r\n    private _checkAndFire (eventIndex: number): void {\r\n        if (!this._targetNode || !this._targetNode.isValid) {\r\n            return;\r\n        }\r\n\r\n        const { _eventGroups: eventGroups } = this;\r\n        if (eventIndex < 0 || eventIndex >= eventGroups.length || this._ignoreIndex === eventIndex) {\r\n            return;\r\n        }\r\n\r\n        const eventGroup = eventGroups[eventIndex];\r\n        const nEvents = eventGroup.events.length;\r\n        for (let iEvent = 0; iEvent < nEvents; ++iEvent) {\r\n            const event = eventGroup.events[iEvent];\r\n            invokeComponentMethodsEngagedInAnimationEvent(this._targetNode, event.functionName, event.parameters);\r\n        }\r\n    }\r\n}\r\n\r\nfunction wrapIterations (iterations: number): number {\r\n    if (iterations - (iterations | 0) === 0) {\r\n        iterations -= 1;\r\n    }\r\n    return iterations | 0;\r\n}\r\n\r\nfunction getEventGroupIndexAtRatio (ratio: number, ratios: readonly number[]): number {\r\n    const result = binarySearchEpsilon(ratios, ratio);\r\n    return result;\r\n}\r\n\r\n// #endregion\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { clamp01, js } from '../core';\r\nimport { AnimationState } from './animation-state';\r\nimport { Playable } from './playable';\r\nimport { getGlobalAnimationManager } from './global-animation-manager';\r\n\r\ninterface IManagedState {\r\n    state: AnimationState | null;\r\n    reference: number;\r\n}\r\n\r\ninterface IFading {\r\n    target: IManagedState;\r\n    easeTime: number;\r\n    easeDuration: number;\r\n}\r\n\r\ninterface CrossFadeScheduler {\r\n    addCrossFade(crossFade: CrossFade): void;\r\n\r\n    removeCrossFade(crossFade: CrossFade): void;\r\n}\r\n\r\nexport class CrossFade extends Playable {\r\n    private readonly _managedStates: IManagedState[] = [];\r\n    private readonly _fadings: IFading[] = [];\r\n    private _scheduled = false;\r\n    private declare _scheduler: CrossFadeScheduler;\r\n\r\n    constructor (scheduler?: CrossFadeScheduler) {\r\n        super();\r\n        this._scheduler = scheduler ?? getGlobalAnimationManager();\r\n    }\r\n\r\n    public update (deltaTime: number): void {\r\n        if (this.isMotionless) {\r\n            return;\r\n        }\r\n\r\n        const managedStates = this._managedStates;\r\n        const fadings = this._fadings;\r\n\r\n        if (managedStates.length === 1 && fadings.length === 1) {\r\n            const state = managedStates[0].state;\r\n            if (state) {\r\n                state.weight = 1.0;\r\n            }\r\n        } else {\r\n            this._calculateWeights(deltaTime);\r\n        }\r\n\r\n        if (managedStates.length === 1 && fadings.length === 1) { // Definitely not code repetition\r\n            this._unscheduleThis();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 在指定时间内将从当前动画状态切换到指定的动画状态。\r\n     * @param state 指定的动画状态。\r\n     * @param duration 切换时间。\r\n     */\r\n    public crossFade (state: AnimationState | null, duration: number): void {\r\n        if (this._managedStates.length === 0) {\r\n            // If we are cross fade from a \"initial\" pose,\r\n            // we do not use the duration.\r\n            // It's meaning-less and may get a bad visual effect.\r\n            duration = 0;\r\n        }\r\n\r\n        if (duration === 0) {\r\n            this.clear();\r\n        }\r\n\r\n        let target = this._managedStates.find((weightedState) => weightedState.state === state);\r\n        if (!target) {\r\n            target = { state, reference: 0 };\r\n            if (state) {\r\n                state.play();\r\n            }\r\n            this._managedStates.push(target);\r\n        } else if (target.state?.isMotionless) {\r\n            target.state.play();\r\n        }\r\n        ++target.reference;\r\n        this._fadings.unshift({\r\n            easeDuration: duration,\r\n            easeTime: 0,\r\n            target,\r\n        });\r\n\r\n        if (!this.isMotionless) {\r\n            this._scheduleThis();\r\n        }\r\n    }\r\n\r\n    public clear (): void {\r\n        for (let iManagedState = 0; iManagedState < this._managedStates.length; ++iManagedState) {\r\n            const state = this._managedStates[iManagedState].state;\r\n            if (state) {\r\n                state.stop();\r\n            }\r\n        }\r\n        this._managedStates.length = 0;\r\n        this._fadings.length = 0;\r\n    }\r\n\r\n    protected onPlay (): void {\r\n        super.onPlay();\r\n        this._scheduleThis();\r\n    }\r\n\r\n    /**\r\n     * 停止我们淡入淡出的所有动画状态并停止淡入淡出。\r\n     */\r\n    protected onPause (): void {\r\n        super.onPause();\r\n        for (let iManagedState = 0; iManagedState < this._managedStates.length; ++iManagedState) {\r\n            const state = this._managedStates[iManagedState].state;\r\n            if (state) {\r\n                state.pause();\r\n            }\r\n        }\r\n        this._unscheduleThis();\r\n    }\r\n\r\n    /**\r\n     * 恢复我们淡入淡出的所有动画状态并继续淡入淡出。\r\n     */\r\n    protected onResume (): void {\r\n        super.onResume();\r\n        for (let iManagedState = 0; iManagedState < this._managedStates.length; ++iManagedState) {\r\n            const state = this._managedStates[iManagedState].state;\r\n            if (state) {\r\n                state.resume();\r\n            }\r\n        }\r\n        this._scheduleThis();\r\n    }\r\n\r\n    /**\r\n     * 停止所有淡入淡出的动画状态。\r\n     */\r\n    protected onStop (): void {\r\n        super.onStop();\r\n        this.clear();\r\n    }\r\n\r\n    private _calculateWeights (deltaTime: number): void {\r\n        const managedStates = this._managedStates;\r\n        const fadings = this._fadings;\r\n\r\n        // Set all state's weight to 0.\r\n        for (let iManagedState = 0; iManagedState < managedStates.length; ++iManagedState) {\r\n            const state = managedStates[iManagedState].state;\r\n            if (state) {\r\n                state.weight = 0;\r\n            }\r\n        }\r\n\r\n        // Allocate weights.\r\n        let absoluteWeight = 1.0;\r\n        let deadFadingBegin = fadings.length;\r\n        for (let iFading = 0; iFading < fadings.length; ++iFading) {\r\n            const fading = fadings[iFading];\r\n            fading.easeTime += deltaTime;\r\n            // We should properly handle the case of\r\n            // `fading.easeTime === 0 && fading.easeDuration === 0`, which yields `NaN`.\r\n            const relativeWeight = fading.easeDuration === 0 ? 1 : clamp01(fading.easeTime / fading.easeDuration);\r\n            const weight = relativeWeight * absoluteWeight;\r\n            absoluteWeight *= (1.0 - relativeWeight);\r\n            if (fading.target.state) {\r\n                fading.target.state.weight += weight;\r\n            }\r\n            if (fading.easeTime >= fading.easeDuration) {\r\n                deadFadingBegin = iFading + 1;\r\n                fading.easeTime = fading.easeDuration;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Kill fadings having no lifetime.\r\n        if (deadFadingBegin !== fadings.length) {\r\n            for (let iDeadFading = deadFadingBegin; iDeadFading < fadings.length; ++iDeadFading) {\r\n                const deadFading = fadings[iDeadFading];\r\n                --deadFading.target.reference;\r\n                if (deadFading.target.reference <= 0) {\r\n                    if (deadFading.target.state) {\r\n                        deadFading.target.state.stop();\r\n                    }\r\n                    js.array.remove(this._managedStates, deadFading.target);\r\n                }\r\n            }\r\n            fadings.splice(deadFadingBegin);\r\n        }\r\n    }\r\n\r\n    private _scheduleThis (): void {\r\n        if (!this._scheduled) {\r\n            this._scheduler.addCrossFade(this);\r\n            this._scheduled = true;\r\n        }\r\n    }\r\n\r\n    private _unscheduleThis (): void {\r\n        if (this._scheduled) {\r\n            this._scheduler.removeCrossFade(this);\r\n            this._scheduled = false;\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, executeInEditMode, executionOrder, help, menu, type, serializable, editable } from 'cc.decorator';\r\nimport { EDITOR_NOT_IN_PREVIEW, TEST } from 'internal:constants';\r\nimport { Component } from '../scene-graph/component';\r\nimport { Eventify, warnID, js, cclegacy } from '../core';\r\nimport { AnimationClip } from './animation-clip';\r\nimport { AnimationState, AnimationStateEventType } from './animation-state';\r\nimport { CrossFade } from './cross-fade';\r\n\r\n/**\r\n * @en\r\n * Animation component governs a group of animation states to control playback of the states.\r\n * For convenient, it stores a group of animation clips.\r\n * Each of those clips would have an associated animation state uniquely created.\r\n * Animation component is eventful, it dispatch a serials playback status events.\r\n * See [[EventType]].\r\n * @zh\r\n * 动画组件管理一组动画状态，控制它们的播放。\r\n * 为了方便，动画组件还存储了一组动画剪辑。\r\n * 每个剪辑都会独自创建一个关联的动画状态对象。\r\n * 动画组件具有事件特性，它会派发一系列播放状态相关的事件。\r\n * 参考 [[EventType]]\r\n */\r\n@ccclass('cc.Animation')\r\n@help('i18n:cc.Animation')\r\n@executionOrder(99)\r\n@executeInEditMode\r\n@menu('Animation/Animation')\r\nexport class Animation extends Eventify(Component) {\r\n    /**\r\n     * @en\r\n     * Gets or sets clips this component governs.\r\n     * When set, associated animation state of each existing clip will be stopped.\r\n     * If the existing default clip is not in the set of new clips, default clip will be reset to null.\r\n     * @zh\r\n     * 获取或设置此组件管理的剪辑。\r\n     * 设置时，已有剪辑关联的动画状态将被停止；若默认剪辑不在新的动画剪辑中，将被重置为空。\r\n     */\r\n    @type([AnimationClip])\r\n    get clips (): (AnimationClip | null)[] {\r\n        return this._clips;\r\n    }\r\n\r\n    set clips (value) {\r\n        if (this._crossFade) {\r\n            this._crossFade.clear();\r\n        }\r\n        // Remove state for old automatic clips.\r\n        this._clips.forEach((clip) => {\r\n            if (clip) {\r\n                this._removeStateOfAutomaticClip(clip);\r\n            }\r\n        });\r\n        // Create state for new clips.\r\n        value.forEach((clip) => {\r\n            if (clip) {\r\n                this.createState(clip);\r\n            }\r\n        });\r\n        // Default clip should be in the list of automatic clips.\r\n        const newDefaultClip = value.find((clip) => equalClips(clip, this._defaultClip));\r\n        if (newDefaultClip) {\r\n            this._defaultClip = newDefaultClip;\r\n        } else {\r\n            this._defaultClip = null;\r\n        }\r\n\r\n        this._clips = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets or sets the default clip.\r\n     * Two clips that both have same non-empty UUID are treat as equivalent.\r\n     * @zh\r\n     * 获取或设置默认剪辑。\r\n     * 设置时，若指定的剪辑不在 `this.clips` 中则会被自动添加至 `this.clips`。\r\n     * 具有相同的非空 UUID 的两个动画剪辑将被视为是相同的。\r\n     * @see [[playOnLoad]]\r\n     */\r\n    @type(AnimationClip)\r\n    get defaultClip (): AnimationClip | null {\r\n        return this._defaultClip;\r\n    }\r\n\r\n    set defaultClip (value) {\r\n        this._defaultClip = value;\r\n        if (!value) {\r\n            return;\r\n        }\r\n        const isBoundedDefaultClip = this._clips.findIndex((clip) => equalClips(clip, value)) >= 0;\r\n        if (!isBoundedDefaultClip) {\r\n            this._clips.push(value);\r\n            this.createState(value);\r\n        }\r\n    }\r\n\r\n    public static EventType = AnimationStateEventType;\r\n\r\n    /**\r\n     * @en\r\n     * Whether the default clip should get into playing when this components starts.\r\n     * Note, this field takes no effect if `crossFade()` or `play()` has been called before this component starts.\r\n     * @zh\r\n     * 是否在组件开始运行时自动播放默认剪辑。\r\n     * 注意，若在组件开始运行前调用了 `crossFade` 或 `play()`，此字段将不会生效。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public playOnLoad = false;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _crossFade = new CrossFade();\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _nameToState: Record<string, AnimationState> = js.createMap(true);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    @type([AnimationClip])\r\n    protected _clips: (AnimationClip | null)[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    @serializable\r\n    protected _defaultClip: AnimationClip | null = null;\r\n\r\n    /**\r\n     * Whether if `crossFade()` or `play()` has been called before this component starts.\r\n     */\r\n    private _hasBeenPlayed = false;\r\n\r\n    public onLoad (): void {\r\n        this.clips = this._clips;\r\n        for (const stateName in this._nameToState) {\r\n            const state = this._nameToState[stateName];\r\n            state.initialize(this.node);\r\n        }\r\n    }\r\n\r\n    public start (): void {\r\n        if (!EDITOR_NOT_IN_PREVIEW && (this.playOnLoad && !this._hasBeenPlayed) && this._defaultClip) {\r\n            this.crossFade(this._defaultClip.name, 0);\r\n        }\r\n    }\r\n\r\n    public onEnable (): void {\r\n        this._crossFade.resume();\r\n    }\r\n\r\n    public onDisable (): void {\r\n        this._crossFade.pause();\r\n    }\r\n\r\n    public onDestroy (): void {\r\n        this._crossFade.stop();\r\n        for (const name in this._nameToState) {\r\n            const state = this._nameToState[name];\r\n            state.destroy();\r\n        }\r\n        this._nameToState = js.createMap(true);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Switch to play specified animation state, without fading.\r\n     * @zh\r\n     * 立即切换到指定动画状态。\r\n     * @param name The name of the animation to be played, if absent, the default clip will be played\r\n     */\r\n    public play (name?: string): void {\r\n        this._hasBeenPlayed = true;\r\n        if (!name) {\r\n            if (!this._defaultClip) {\r\n                return;\r\n            }\r\n            name = this._defaultClip.name;\r\n        }\r\n        this.crossFade(name, 0);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Smoothly switch to play specified animation state.\r\n     * @zh\r\n     * 平滑地切换到指定动画状态。\r\n     * @param name The name of the animation to switch to\r\n     * @param duration The duration of the cross fade, default value is 0.3s\r\n     */\r\n    public crossFade (name: string, duration = 0.3): void {\r\n        this._hasBeenPlayed = true;\r\n        const state = this._nameToState[name];\r\n        if (state) {\r\n            this.doPlayOrCrossFade(state, duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pause all animation states and all switching.\r\n     * @zh\r\n     * 暂停所有动画状态，并暂停所有切换。\r\n     */\r\n    public pause (): void {\r\n        this._crossFade.pause();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Resume all animation states and all switching.\r\n     * @zh\r\n     * 恢复所有动画状态，并恢复所有切换。\r\n     */\r\n    public resume (): void {\r\n        this._crossFade.resume();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Stop all animation states and all switching.\r\n     * @zh\r\n     * 停止所有动画状态，并停止所有切换。\r\n     */\r\n    public stop (): void {\r\n        this._crossFade.stop();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get specified animation state.\r\n     * @zh\r\n     * 获取指定的动画状态。\r\n     * @param name The name of the animation\r\n     * @returns If no animation found, return null, otherwise the correspond animation state is returned\r\n     */\r\n    public getState (name: string): AnimationState {\r\n        const state = this._nameToState[name];\r\n        if (state && !state.curveLoaded) {\r\n            state.initialize(this.node);\r\n        }\r\n        return state || null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a state for specified clip.\r\n     * If there is already a clip with same name, the existing animation state will be stopped and overridden.\r\n     * @zh\r\n     * 使用指定的动画剪辑创建一个动画状态。\r\n     * 若指定名称的动画状态已存在，已存在的动画状态将先被设为停止并被覆盖。\r\n     * @param clip The animation clip\r\n     * @param name The animation state name, if absent, the default clip's name will be used\r\n     * @returns The animation state created\r\n     */\r\n    public createState (clip: AnimationClip, name?: string): AnimationState {\r\n        name = name || clip.name;\r\n        this.removeState(name);\r\n\r\n        return this._doCreateState(clip, name);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Stops and removes specified clip.\r\n     * @zh\r\n     * 停止并移除指定的动画状态。\r\n     * @param name The name of the animation state\r\n     */\r\n    public removeState (name: string): void {\r\n        const state = this._nameToState[name];\r\n        if (state) {\r\n            state.allowLastFrameEvent(false);\r\n            state.stop();\r\n            delete this._nameToState[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 添加一个动画剪辑到 `this.clips`中并以此剪辑创建动画状态。\r\n     * @en\r\n     * Adds an animation clip into this component and creates a animation state for this clip.\r\n     * @param clip The animation clip\r\n     * @param name The animation state name, if absent, the default clip's name will be used\r\n     * @returns The created animation state\r\n     */\r\n    public addClip (clip: AnimationClip, name?: string): AnimationState {\r\n        if (!js.array.contains(this._clips, clip)) {\r\n            this._clips.push(clip);\r\n        }\r\n        return this.createState(clip, name);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Remove clip from the animation list. This will remove the clip and any animation states based on it.<br>\r\n     * If there are animation states depend on the clip are playing or clip is defaultClip, it will not delete the clip.<br>\r\n     * But if force is true, then will always remove the clip and any animation states based on it. If clip is defaultClip,\r\n     * defaultClip will be reset to null\r\n     * @zh\r\n     * 从动画列表中移除指定的动画剪辑，<br/>\r\n     * 如果依赖于 clip 的 AnimationState 正在播放或者 clip 是 defaultClip 的话，默认是不会删除 clip 的。<br/>\r\n     * 但是如果 force 参数为 true，则会强制停止该动画，然后移除该动画剪辑和相关的动画。这时候如果 clip 是 defaultClip，defaultClip 将会被重置为 null。<br/>\r\n     * @param force - If force is true, then will always remove the clip and any animation states based on it.\r\n     */\r\n    public removeClip (clip: AnimationClip, force?: boolean): void {\r\n        let removalState: AnimationState | undefined;\r\n        for (const name in this._nameToState) {\r\n            const state = this._nameToState[name];\r\n            const stateClip = state.clip;\r\n            if (stateClip === clip) {\r\n                removalState = state;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (clip === this._defaultClip) {\r\n            if (force) { this._defaultClip = null; } else {\r\n                if (!TEST) { warnID(3902); }\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (removalState && removalState.isPlaying) {\r\n            if (force) { removalState.stop(); } else {\r\n                if (!TEST) { warnID(3903); }\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._clips = this._clips.filter((item) => item !== clip);\r\n\r\n        if (removalState) {\r\n            delete this._nameToState[removalState.name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register animation event callback.<bg>\r\n     * The event arguments will provide the AnimationState which emit the event.<bg>\r\n     * When play an animation, will auto register the event callback to the AnimationState,<bg>\r\n     * and unregister the event callback from the AnimationState when animation stopped.\r\n     * @zh\r\n     * 注册动画事件回调。<bg>\r\n     * 回调的事件里将会附上发送事件的 AnimationState。<bg>\r\n     * 当播放一个动画时，会自动将事件注册到对应的 AnimationState 上，停止播放时会将事件从这个 AnimationState 上取消注册。\r\n     * @param type The event type to listen to\r\n     * @param callback The callback when event triggered\r\n     * @param target The callee when invoke the callback, could be absent\r\n     * @return The registered callback\r\n     * @example\r\n     * ```ts\r\n     * onPlay: function (type, state) {\r\n     *     // callback\r\n     * }\r\n     *\r\n     * // register event to all animation\r\n     * animation.on('play', this.onPlay, this);\r\n     * ```\r\n     */\r\n    public on<TFunction extends (...any) => void> (type: AnimationStateEventType, callback: TFunction, thisArg?: any, once?: boolean): TFunction {\r\n        const ret = super.on(type, callback, thisArg, once);\r\n        if (type === AnimationStateEventType.LASTFRAME) {\r\n            this._syncAllowLastFrameEvent();\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public once<TFunction extends (...any) => void> (type: AnimationStateEventType, callback: TFunction, thisArg?: any): TFunction {\r\n        const ret = super.once(type, callback, thisArg);\r\n        if (type === AnimationStateEventType.LASTFRAME) {\r\n            this._syncAllowLastFrameEvent();\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Unregister animation event callback.\r\n     * @zh\r\n     * 取消注册动画事件回调。\r\n     * @param {String} type The event type to unregister\r\n     * @param {Function} callback The callback to unregister\r\n     * @param {Object} target The callee of the callback, could be absent\r\n     * @example\r\n     * ```ts\r\n     * // unregister event to all animation\r\n     * animation.off('play', this.onPlay, this);\r\n     * ```\r\n     */\r\n    public off (type: AnimationStateEventType, callback?: (...any) => void, thisArg?: any): void {\r\n        super.off(type, callback, thisArg);\r\n        if (type === AnimationStateEventType.LASTFRAME) {\r\n            this._syncDisallowLastFrameEvent();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _createState (clip: AnimationClip, name?: string): AnimationState {\r\n        return new AnimationState(clip, name);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _doCreateState (clip: AnimationClip, name: string): AnimationState {\r\n        const state = this._createState(clip, name);\r\n        state._setEventTarget(this);\r\n        state.allowLastFrameEvent(this.hasEventListener(AnimationStateEventType.LASTFRAME));\r\n        if (this.node) {\r\n            state.initialize(this.node);\r\n        }\r\n        this._nameToState[state.name] = state;\r\n        return state;\r\n    }\r\n\r\n    /**\r\n     * @internal This method only friends to skeletal animation component.\r\n     */\r\n    protected doPlayOrCrossFade (state: AnimationState, duration: number): void {\r\n        this._crossFade.play();\r\n        this._crossFade.crossFade(state, duration);\r\n    }\r\n\r\n    private _removeStateOfAutomaticClip (clip: AnimationClip): void {\r\n        for (const name in this._nameToState) {\r\n            const state = this._nameToState[name];\r\n            if (equalClips(clip, state.clip)) {\r\n                state.stop();\r\n                delete this._nameToState[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    private _syncAllowLastFrameEvent (): void {\r\n        if (this.hasEventListener(AnimationStateEventType.LASTFRAME)) {\r\n            for (const stateName in this._nameToState) {\r\n                this._nameToState[stateName].allowLastFrameEvent(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _syncDisallowLastFrameEvent (): void {\r\n        if (!this.hasEventListener(AnimationStateEventType.LASTFRAME)) {\r\n            for (const stateName in this._nameToState) {\r\n                this._nameToState[stateName].allowLastFrameEvent(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ntype EventType_ = AnimationStateEventType;\r\n\r\nexport declare namespace Animation {\r\n    export type EventType = EventType_;\r\n}\r\n\r\nfunction equalClips (clip1: AnimationClip | null, clip2: AnimationClip | null): string | boolean {\r\n    if (clip1 === clip2) {\r\n        return true;\r\n    }\r\n    return !!clip1 && !!clip2 && (clip1._uuid === clip2._uuid) && clip1._uuid;\r\n}\r\n\r\ncclegacy.Animation = Animation;\r\n\r\n/**\r\n * Alias of [[Animation]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Animation as AnimationComponent };\r\ncclegacy.AnimationComponent = Animation;\r\njs.setClassAlias(Animation, 'cc.AnimationComponent');\r\n"],"names":["path","constructor","WrapMode","CLASS_NAME_PREFIX_ANIM","exports","createEvalSymbol","Symbol","Playable","this","_isPlaying","_isPaused","_stepOnce","_proto","prototype","play","onResume","onError","getError","onPlay","stop","onStop","pause","onPause","resume","step","update","_createClass","key","get","isPlaying","isPaused","geometry","Default","Normal","Reverse","Loop","PingPong","ccenum","WrappedInfo","AnimationStateEventType","info","ratio","time","direction","stopped","iterations","frameIndex","undefined","set","PoseOutput","pose","weight","_pose","_blendStateWriters","destroy","iBlendStateWriter","length","destroyWriter","createPoseWriter","node","property","constants","writer","createWriter","push","getGlobalAnimationManager","cclegacy","director","getAnimationManager","AnimationState","_Playable","clip","name","_this","call","duration","frameRate","_targetNode","_curveLoaded","_clip","_speed","_useSimpleProcess","_target","_wrapMode","_repeatCount","_delay","_delayTime","_currentFramePlayed","_name","_lastIterations","NaN","_lastWrapInfo","_wrappedInfo","_allowLastFrame","_blendStateWriterHost","_playbackDuration","_invDuration","_poseOutput","_weight","_clipEval","_clipEventEval","_clipEmbeddedPlayerEval","_doNotCreateEval","_playbackRange","min","max","debug","_inheritsLoose","initialize","root","blendStateBuffer","mask","speed","wrapMode","sample","repeatCount","Infinity","_ref","_getGlobalAnimationMa","_this$_poseOutput","blendState","createEvaluator","target","containsAnyEvent","createEventEvaluator","containsAnyEmbeddedPlayer","createEmbeddedPlayerEvaluator","notifyHostSpeedChanged","isMotionless","removeAnimation","emit","_len","arguments","args","Array","_key","pushDelayEvent","_emit","on","type","callback","isValid","once","off","allowLastFrameEvent","allowed","_setEventTarget","setTime","_this$_clipEventEval","getWrappedInfo","ignore","delta","_process","_sampleCurves","_sampleEvents","_sampleEmbeddedPlayers","_this$_clipEmbeddedPl","_getPlaybackStart","_onReplayOrResume","PLAY","notifyHostPlay","current","_this$_clipEmbeddedPl2","_onPauseOrStop","STOP","notifyHostStop","_this$_clipEmbeddedPl3","RESUME","_this$_clipEmbeddedPl4","PAUSE","notifyHostPause","poseOutput","clipEval","evaluate","simpleProcess","process","lastInfo","LASTFRAME","FINISHED","playbackStart","playbackDuration","wrapInfo","Number","isNaN","_needReverse","currentIterations","needReverse","isFinite","tempRatio","tempTime","shouldWrap","ShouldWrap","_this$_clipEventEval2","_this$_clipEmbeddedPl5","Math","trunc","state","addAnimation","value","_this$_clipEventEval3","setWrapMode","reverse","assertIsTrue","_this$_clipEmbeddedPl6","isPropertyPath","HierarchyPath","ccclass","_dec","_class2","_initializer","Node","getChildByPath","warnID","_applyDecoratedInitializer","serializable","_class","ComponentPath","_dec2","_class5","component","_initializer2","getComponent","_class4","normalizedFollowTag","parseTrsPathTag","trackBindingTag","TrackPath","_paths","toProperty","toElement","index","toHierarchy","nodePath","toComponent","js","toCustomized","resolver","append","_this$_paths","trackPaths","paths","concat","apply","map","trackPath","isPropertyAt","parsePropertyAt","isElementAt","parseElementAt","isHierarchyAt","parseHierarchyAt","isComponentAt","parseComponentAt","slice","beginIndex","endIndex","trace","object","_beginIndex","_endIndex","prs","nPaths","iPath","result","TrackBinding","uniquelyReferenced","_class6","proxy","_initializer3","_proto2","parseTrsPath","createRuntimeBinding","isConstant","iLastPath","resultTarget","runtimeProxy","forTarget","binding","setValue","proxyGet","getValue","errorID","lastPropertyKey","isTrsPropertyName","animationFunction","_animationFunctions","Map","accessor","Function","isMaskedOff","trsPath","joints","iterator","jointMaskInfoIter","next","done","jointMaskInfo","enabled","WeakMap","Track","_dec3","_class8","_binding","_initializer4","_proto3","channels","range","_step","_iterator","_createForOfIteratorHelperLoose","channel","curve","rangeMin","rangeMax","_class7","Channel","_dec4","_class11","_curve","_initializer5","_class10","SingleChannelTrack","_dec5","_class14","_Track","_channel","_initializer6","createCurve","_proto4","Error","SingleChannelTrackEval","_class13","makeCubicSplineValueConstructor","ConstructorX","scaleFx","scaleAndAdd","tempValue","m0","m1","CubicSplineValueClass","dataPoint","inTangent","outTangent","lerp","to","t","dt","p0","p1","t_3","t_2","f_1","f_2","f_3","getNoLerp","Quat","normalize","CubicSplineVec2Value","Vec2","multiplyScalar","CubicSplineVec3Value","Vec3","CubicSplineVec4Value","Vec4","CubicSplineQuatValue","CubicSplineNumberValue","RealTrack","_SingleChannelTrack","RealCurve","maskIfEmpty","keyFramesCount","CHANNEL_NAMES","VectorTrack","_channels","_nComponents","i","Vec2TrackEval","Vec3TrackEval","Vec4TrackEval","_x","_y","_result","defaultValue","copy","x","y","_z","z","_w","w","QuatTrack","QuatCurve","QuatTrackEval","ColorTrack","ColorTrackEval","Color","r","g","b","a","SizeTrack","SizeTrackEval","_width","_height","Size","width","height","ObjectTrack","ObjectCurve","invokeComponentMethodsEngagedInAnimationEvent","methodName","components","nComponents","iComponent","fx","RatioSampler","ratios","currRatioDif","lastRatioDif","_findRatio","canOptimize","l","abs","quickFindIndex","binarySearchEpsilon","AnimCurve","propertyCurveData","types","_values","_lerp","_duration","_array","values","getCurveType","easingMethod","isArray","Linear","Bezier","easingMethods","fill","Object","keys","_i","_Object$keys","firstValue","interpolate","selectLerpFx","_arrayLength","controlPoints","hasLerp","valueAt","valueBetween","from","fromRatio","toRatio","dRatio","ratioBetweenFrames","computeRatioByType","fromVal","toVal","empty","constant","sampleAnimationCurve","sampler","func","easing","bezierByTime","start","end","floorIndex","EPSILON","EventInfo","events","add","params","makeValueTypeLerpFx","callLerpable","slerp","ValueType","UntypedTrackChannel","_Channel","UntypedTrack","_this2","createLegacyEval","hintValue","_this3","trySearchCurve","_this3$_channels$find","find","addChannel","upgrade","refine","_this4","trySearchChannel","outChannel","untypedChannel","assignSorted","times","kind","track","componentsCount","_track$channels2","_track$channels4","AnimationClipLegacyData","_keys","_curves","_commonTargets","_ratioSamplers","_runtimeCurves","_data","getPropertyCurves","_createPropertyCurves","toTracks","_step2","newTracks","legacyKeys","legacyCurves","curves","legacyCommonTargets","commonTargets","convertTrackPath","modifiers","valueAdapter","modifier","untypedTracks","legacyCommonTarget","_loop","_legacyCurveData$inte","legacyCurve","legacyCurveData","data","legacyValues","legacyCommonTargetCurve","legacyEasingMethodConverter","LegacyEasingMethodConverter","installPathAndSetter","commonTarget","every","propertyName","realCurve","interpolationMethod","RealInterpolationMode","LINEAR","CONSTANT","interpolationMode","convert","everyInstanceOf","valueToFrame","QuatInterpolationMode","SLERP","clone","convertQuatCurve","nil","CUBIC","leftTangent","rightTangent","_track6$channels2","objectTrack","convertCurve","_iterator2","targetCurve","array","element","keyframesCount","_easingMethods","_","_easingMethods$index","tangentWeightMode","timeBezierPoints","previousTime","previousKeyframe","nextTime","nextKeyframe","p1X","p1Y","p2X","p2Y","previousValue","fy","t1x","t1y","t2x","t2y","ONE_THIRD","previousTangent","previousTangentWeight","nextTangent","nextTangentWeight","nKeyframes","iLastKeyframe","iKeyframe","getKeyframeTime","getKeyframeValue","sqrt","TangentWeightMode","NONE","RIGHT","LEFT","BOTH","rightTangentWeight","ensureLeftTangentWeightMode","leftTangentWeight","applyLegacyEasingMethodName","applyLegacyEasingMethodNameIntoQuatCurve","easingMethodName","keyframeIndex","easingMethodNameMap","keyframeValue","EasingMethod","linear","quadIn","QUAD_IN","quadOut","QUAD_OUT","quadInOut","QUAD_IN_OUT","quadOutIn","QUAD_OUT_IN","cubicIn","CUBIC_IN","cubicOut","CUBIC_OUT","cubicInOut","CUBIC_IN_OUT","cubicOutIn","CUBIC_OUT_IN","quartIn","QUART_IN","quartOut","QUART_OUT","quartInOut","QUART_IN_OUT","quartOutIn","QUART_OUT_IN","quintIn","QUINT_IN","quintOut","QUINT_OUT","quintInOut","QUINT_IN_OUT","quintOutIn","QUINT_OUT_IN","sineIn","SINE_IN","sineOut","SINE_OUT","sineInOut","SINE_IN_OUT","sineOutIn","SINE_OUT_IN","expoIn","EXPO_IN","expoOut","EXPO_OUT","expoInOut","EXPO_IN_OUT","expoOutIn","EXPO_OUT_IN","circIn","CIRC_IN","circOut","CIRC_OUT","circInOut","CIRC_IN_OUT","circOutIn","CIRC_OUT_IN","elasticIn","ELASTIC_IN","elasticOut","ELASTIC_OUT","elasticInOut","ELASTIC_IN_OUT","elasticOutIn","ELASTIC_OUT_IN","backIn","BACK_IN","backOut","BACK_OUT","backInOut","BACK_IN_OUT","backOutIn","BACK_OUT_IN","bounceIn","BOUNCE_IN","bounceOut","BOUNCE_OUT","bounceInOut","BOUNCE_IN_OUT","bounceOutIn","BOUNCE_OUT_IN","smooth","SMOOTH","fade","FADE","_decorator","throwIfSplitMethodIsNotValid","ExoticAnimation","_nodeAnimations","binder","ExoticTrsAnimationEvaluator","createEvaluatorForAnimationGraph","context","ExoticTrsAGEvaluation","addNodeAnimation","nodeAnimation","ExoticNodeAnimation","collectAnimatedJoints","Set","split","toHashString","join","_path","_position","_rotation","_scale","createPosition","ExoticTrack","ExoticVec3TrackValues","createRotation","ExoticQuatTrackValues","createScale","ExoticNodeAnimationEvaluator","transformHandle","bindTransform","ExoticNodeAnimationAGEvaluation","_this$_position$toHas","_this$_position","_this$_scale$toHashSt","_this$_scale","_this$_rotation$toHas","_this$_rotation","floatToHashString","toPrecision","floatArrayToHashString","v","parseFloat","ExoticVectorLikeTrackValues","_isQuantized","_initializer7","quantize","isQuantized","originalPrecision","getFloatArrayPrecision","_ExoticVectorLikeTrac","imitate","model","trackValues","quantizationType","resultValue","loadVec3FromQuantized","fromArray","prevIndex","nextIndex","prevValue","nextValue","_ExoticVectorLikeTrac2","_proto5","loadQuatFromQuantized","_dec6","_initializer8","_initializer9","_class12","binarySearchRatio","nValues","resultIndex","resultRatio","index0","iNext","iPrev","prev","SplitInfo","_reset","_proto7","calculate","firstTime","lastTime","fromIndex","_binarySearchRatio","toIndex","_binarySearchRatio2","fromJust","toJust","preLerpIndex","preLerpRatio","directKeyframesBegin","directKeyframesEnd","postLerpIndex","postLerpRatio","nodeAnimations","_nodeEvaluations","forEach","nodeEvaluator","position","rotation","scale","createExoticTrackEvaluationRecord","evaluator","runtimeBinding","ExoticTrackEvaluator","ValueConstructor","_times","_inputSampleResultCache","just","_prevValue","_nextValue","_resultValue","inputSampleResult","sampleInput","filter","_proto11","nodeEvaluations","nNodeEvaluations","iNodeEvaluation","_transformHandle","_proto12","transformIndex","poseTransforms","transforms","setPosition","rotationAbs","setRotation","setScale","nFrames","prevTime","FloatPrecision","QUANTIZATION_TYPE_TO_ARRAY_VIEW_CONSTRUCTOR_MAP","uint8","Uint8Array","uint16","Uint16Array","BYTES_PER_ELEMENT","FLOAT_32","FLOAT_64","QuantizedFloatArray","_dec7","_class21","extent","_initializer10","_initializer11","_initializer12","_initializer13","_class20","TypedArrayViewConstructor","MAX","POSITIVE_INFINITY","NEGATIVE_INFINITY","normalized","indexQuantized","quantized","trackBinding","out","AuxiliaryCurveEntry","searchForRootBonePathSymbol","exoticAnimationTag","embeddedPlayerCountTag","getEmbeddedPlayersTag","addEmbeddedPlayerTag","removeEmbeddedPlayerTag","clearEmbeddedPlayersTag","additiveSettingsTag","AnimationClip","_class3","_Asset","enableTrsBlending","_hash","_tracks","_exoticAnimation","_legacyData","_legacyDataDirty","_events","_embeddedPlayers","_additiveSettings","_auxiliaryCurveEntries","_runtimeEvents","eventGroups","createWithSpriteFrames","spriteFrames","spriteFrame","addTrack","onLoaded","tracks","nTracks","iTrack","trackRange","getTrack","removeTrack","splice","clearTracks","targetNode","EventEvaluator","EmbeddedPlayerEvaluation","_createEvalWithBinder","trackTarget","rootMotion","_cclegacy$director$ro","dataPoolManager","releaseAnimationClip","SkelAnimDataHub","BAKE_SKELETON_CURVE_SYMBOL","samples","frames","animatedJoints","_collectAnimatedJoints","nAnimatedJoints","jointsBakeInfo","iAnimatedJoint","Mat4","skeletonFrames","reduce","joint","BoneGlobalTransform","skeletonFrame","parentJoint","lastIndexOf","parentJointName","substring","parentJointFrame","parent","jointFrame","createBoneTransformBinding","iFrame","globalTransform","invalidate","upgradeUntypedTracks","removals","newTrack","nRemovalTracks","iRemovalTrack","_searchForRootBonePath","_getLegacyData","updateEventDatas","hasEvents","syncLegacyData","_fromLegacy","embeddedPlayer","iEmbeddedPlayer","indexOf","getAuxiliaryCurveNames_experimental","entry","hasAuxiliaryCurve_experimental","_findAuxiliaryCurveEntry","addAuxiliaryCurve_experimental","getAuxiliaryCurve_experimental","renameAuxiliaryCurve_experimental","newName","removeAuxiliaryCurve_experimental","removeIf","_trySyncLegacyData","rootMotionOptions","rootMotionEvaluation","rootMotionTrackExcludes","_createRootMotionEvaluation","exoticAnimationEvaluator","trackEvalStatues","includes","trackEval","TrackEvalStatus","AnimationClipEvaluation","rootBonePath","rootBone","boneTransform","BoneTransform","rootMotionsTrackEvaluations","RootMotionEvaluation","rank","sort","iNonEmptyPath","findIndex","p","firstPath","highestPathsAreSame","_toLegacy","legacyClipData","legacy","legacyData","nNewTracks","iNewTrack","_this$_exoticAnimatio","_this$_exoticAnimatio2","hashString","murmurhash2_32_gc","frame","nEvents","eventData","iEvent","functionName","parameters","Asset","AnimationWrapMode","AdditiveSettings","refClip","_initializer14","_trackEval","_shouldEvaluateDefault","requiresDefault","embeddedPlayers","rootNode","_embeddedPlayerEvaluationInfos","player","playable","instantiatedPlayer","instantiate","entered","hostPauseTime","lastIterations","embeddedPlayerEvaluationInfos","nEmbeddedPlayers","_embeddedPlayerEvalua","isInteger","embeddedPlayerEvaluationInfo","begin","playerTime","reconciledSpeed","setSpeed","randomAccess","approx","startTime","clamp","trackEvalStatuses","_exoticAnimationEvaluator","_trackEvalStatues","_rootMotionEvaluation","nTrackEvalStatuses","iTrackEvalStatus","evaluateRootMotion","motionLength","eulerAngles","getTransform","fromRTS","_BoneTransform","_dirty","_transform","transform","multiply","motionTransformCache","_rootBone","_boneTransform","_trackEvalStatuses","_initialTransformCache","_clipEndTransformCache","_startTransformCache","_endTransformCache","_motionTransformCache","_translationMotionCache","_rotationMotionCache","_scaleMotionCache","motionTransform","_calcMotionTransform","translationMotion","rotationMotion","scaleMotion","toSRT","outTransform","remainLength","startTransform","_evaluateAt","endTransform","relativeTransform","identity","accumulateMotionTransform","diff","floor","lastRemainTime","clipStartTransform","clipEndTransform","invert","_ratios","_eventGroups","_lastFrameIndex","_lastDirection","_ignoreIndex","_sampled","_proto8","getEventGroupIndexAtRatio","reset","eventIndex","_doFire","wrapIterations","lastIndex","lastDirection","iterationsChanged","delay","_checkAndFire","eventGroup","event","CrossFade","scheduler","_managedStates","_fadings","_scheduled","_scheduler","deltaTime","managedStates","fadings","_calculateWeights","_unscheduleThis","crossFade","_target$state","clear","weightedState","reference","unshift","easeDuration","easeTime","_scheduleThis","iManagedState","absoluteWeight","deadFadingBegin","iFading","fading","relativeWeight","clamp01","iDeadFading","deadFading","addCrossFade","removeCrossFade","Animation","executionOrder","_Eventify","playOnLoad","_crossFade","_nameToState","_clips","_defaultClip","_hasBeenPlayed","onLoad","stateName","clips","onEnable","onDisable","onDestroy","doPlayOrCrossFade","getState","curveLoaded","createState","removeState","_doCreateState","addClip","removeClip","force","removalState","item","thisArg","ret","_syncAllowLastFrameEvent","_syncDisallowLastFrameEvent","_createState","hasEventListener","_removeStateOfAutomaticClip","equalClips","newDefaultClip","Eventify","Component","EventType","_applyDecoratedDescriptor","getOwnPropertyDescriptor","clip1","clip2","_uuid","AnimationComponent"],"mappings":"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"}