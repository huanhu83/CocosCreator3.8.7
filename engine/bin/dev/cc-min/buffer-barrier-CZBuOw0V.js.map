{"version":3,"file":"buffer-barrier-CZBuOw0V.js","sources":["../../../cocos/gfx/base/define.ts","../../../cocos/gfx/base/buffer.ts","../../../cocos/gfx/base/command-buffer.ts","../../../cocos/gfx/base/device.ts","../../../cocos/gfx/base/swapchain.ts","../../../cocos/gfx/base/framebuffer.ts","../../../cocos/core/algorithm/murmurhash2_gc.ts","../../../cocos/gfx/base/input-assembler.ts","../../../cocos/gfx/base/descriptor-set.ts","../../../cocos/gfx/base/descriptor-set-layout.ts","../../../cocos/gfx/base/pipeline-layout.ts","../../../cocos/gfx/base/pipeline-sub-state.ts","../../../cocos/gfx/base/pipeline-state.ts","../../../cocos/gfx/base/queue.ts","../../../cocos/gfx/base/render-pass.ts","../../../cocos/gfx/base/states/sampler.ts","../../../cocos/gfx/base/shader.ts","../../../cocos/gfx/base/texture.ts","../../../cocos/gfx/base/states/general-barrier.ts","../../../cocos/gfx/base/states/texture-barrier.ts","../../../cocos/gfx/base/states/buffer-barrier.ts"],"sourcesContent":["/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n/* eslint-disable no-empty-function */\r\n\r\nimport { Queue } from './queue';\r\nimport { Buffer } from './buffer';\r\nimport { Texture } from './texture';\r\nimport { Swapchain } from './swapchain';\r\nimport { RenderPass } from './render-pass';\r\nimport { DescriptorSetLayout } from './descriptor-set-layout';\r\n\r\nimport { Sampler } from './states/sampler';\r\nimport { GeneralBarrier } from './states/general-barrier';\r\nimport { GCObject } from '../../core/data/gc-object';\r\n\r\ninterface ICopyable { copy (info: ICopyable): ICopyable; }\r\n\r\nconst deepCopy = <T extends ICopyable> (target: T[], source: T[], Ctor: Constructor<T>): void => {\r\n    for (let i = 0; i < source.length; ++i) {\r\n        if (target.length <= i) target.push(new Ctor());\r\n        target[i].copy(source[i]);\r\n    }\r\n    target.length = source.length;\r\n};\r\n\r\n/**\r\n  * ========================= !DO NOT CHANGE THE FOLLOWING SECTION MANUALLY! =========================\r\n  * The following section is auto-generated from native/cocos/renderer/core/gfx/GFXDef-common.h\r\n  * by the script native/tools/gfx-define-generator/generate.js.\r\n  * Changes to these public interfaces should be made there first and synced back.\r\n  * ========================= !DO NOT CHANGE THE FOLLOWING SECTION MANUALLY! =========================\r\n  */\r\n\r\n/**\r\n * @en Graphics object type\r\n * @zh 图形API对象的类型\r\n */\r\nexport enum ObjectType {\r\n    UNKNOWN,\r\n    SWAPCHAIN,\r\n    BUFFER,\r\n    TEXTURE,\r\n    RENDER_PASS,\r\n    FRAMEBUFFER,\r\n    SAMPLER,\r\n    SHADER,\r\n    DESCRIPTOR_SET_LAYOUT,\r\n    PIPELINE_LAYOUT,\r\n    PIPELINE_STATE,\r\n    DESCRIPTOR_SET,\r\n    INPUT_ASSEMBLER,\r\n    COMMAND_BUFFER,\r\n    QUEUE,\r\n    QUERY_POOL,\r\n    GLOBAL_BARRIER,\r\n    TEXTURE_BARRIER,\r\n    BUFFER_BARRIER,\r\n    COUNT,\r\n}\r\n\r\nexport enum Status {\r\n    UNREADY,\r\n    FAILED,\r\n    SUCCESS,\r\n}\r\n\r\nexport enum API {\r\n    UNKNOWN,\r\n    GLES2,\r\n    GLES3,\r\n    METAL,\r\n    VULKAN,\r\n    NVN,\r\n    WEBGL,\r\n    WEBGL2,\r\n    WEBGPU,\r\n}\r\n\r\nexport enum SurfaceTransform {\r\n    IDENTITY,\r\n    ROTATE_90,\r\n    ROTATE_180,\r\n    ROTATE_270,\r\n}\r\n\r\nexport enum Feature {\r\n    ELEMENT_INDEX_UINT,\r\n    INSTANCED_ARRAYS,\r\n    MULTIPLE_RENDER_TARGETS,\r\n    BLEND_MINMAX,\r\n    COMPUTE_SHADER,\r\n\r\n    INPUT_ATTACHMENT_BENEFIT, // @deprecated\r\n    SUBPASS_COLOR_INPUT,\r\n    SUBPASS_DEPTH_STENCIL_INPUT,\r\n    RASTERIZATION_ORDER_NOCOHERENT,\r\n\r\n    MULTI_SAMPLE_RESOLVE_DEPTH_STENCIL,   // resolve depth stencil\r\n    COUNT,\r\n}\r\n\r\nexport enum Format {\r\n\r\n    UNKNOWN,\r\n\r\n    A8,\r\n    L8,\r\n    LA8,\r\n\r\n    R8,\r\n    R8SN,\r\n    R8UI,\r\n    R8I,\r\n    R16F,\r\n    R16UI,\r\n    R16I,\r\n    R32F,\r\n    R32UI,\r\n    R32I,\r\n\r\n    RG8,\r\n    RG8SN,\r\n    RG8UI,\r\n    RG8I,\r\n    RG16F,\r\n    RG16UI,\r\n    RG16I,\r\n    RG32F,\r\n    RG32UI,\r\n    RG32I,\r\n\r\n    RGB8,\r\n    SRGB8,\r\n    RGB8SN,\r\n    RGB8UI,\r\n    RGB8I,\r\n    RGB16F,\r\n    RGB16UI,\r\n    RGB16I,\r\n    RGB32F,\r\n    RGB32UI,\r\n    RGB32I,\r\n\r\n    RGBA8,\r\n    BGRA8,\r\n    SRGB8_A8,\r\n    RGBA8SN,\r\n    RGBA8UI,\r\n    RGBA8I,\r\n    RGBA16F,\r\n    RGBA16UI,\r\n    RGBA16I,\r\n    RGBA32F,\r\n    RGBA32UI,\r\n    RGBA32I,\r\n\r\n    // Special Format\r\n    R5G6B5,\r\n    R11G11B10F,\r\n    RGB5A1,\r\n    RGBA4,\r\n    RGB10A2,\r\n    RGB10A2UI,\r\n    RGB9E5,\r\n\r\n    // Depth-Stencil Format\r\n    DEPTH,\r\n    DEPTH_STENCIL,\r\n\r\n    // Compressed Format\r\n\r\n    // Block Compression Format, DDS (DirectDraw Surface)\r\n    // DXT1: 3 channels (5:6:5), 1/8 original size, with 0 or 1 bit of alpha\r\n    BC1,\r\n    BC1_ALPHA,\r\n    BC1_SRGB,\r\n    BC1_SRGB_ALPHA,\r\n    // DXT3: 4 channels (5:6:5), 1/4 original size, with 4 bits of alpha\r\n    BC2,\r\n    BC2_SRGB,\r\n    // DXT5: 4 channels (5:6:5), 1/4 original size, with 8 bits of alpha\r\n    BC3,\r\n    BC3_SRGB,\r\n    // 1 channel (8), 1/4 original size\r\n    BC4,\r\n    BC4_SNORM,\r\n    // 2 channels (8:8), 1/2 original size\r\n    BC5,\r\n    BC5_SNORM,\r\n    // 3 channels (16:16:16), half-floating point, 1/6 original size\r\n    // UF16: unsigned float, 5 exponent bits + 11 mantissa bits\r\n    // SF16: signed float, 1 signed bit + 5 exponent bits + 10 mantissa bits\r\n    BC6H_UF16,\r\n    BC6H_SF16,\r\n    // 4 channels (4~7 bits per channel) with 0 to 8 bits of alpha, 1/3 original size\r\n    BC7,\r\n    BC7_SRGB,\r\n\r\n    // Ericsson Texture Compression Format\r\n    ETC_RGB8,\r\n    ETC2_RGB8,\r\n    ETC2_SRGB8,\r\n    ETC2_RGB8_A1,\r\n    ETC2_SRGB8_A1,\r\n    ETC2_RGBA8,\r\n    ETC2_SRGB8_A8,\r\n    EAC_R11,\r\n    EAC_R11SN,\r\n    EAC_RG11,\r\n    EAC_RG11SN,\r\n\r\n    // PVRTC (PowerVR)\r\n    PVRTC_RGB2,\r\n    PVRTC_RGBA2,\r\n    PVRTC_RGB4,\r\n    PVRTC_RGBA4,\r\n    PVRTC2_2BPP,\r\n    PVRTC2_4BPP,\r\n\r\n    // ASTC (Adaptive Scalable Texture Compression)\r\n    ASTC_RGBA_4X4,\r\n    ASTC_RGBA_5X4,\r\n    ASTC_RGBA_5X5,\r\n    ASTC_RGBA_6X5,\r\n    ASTC_RGBA_6X6,\r\n    ASTC_RGBA_8X5,\r\n    ASTC_RGBA_8X6,\r\n    ASTC_RGBA_8X8,\r\n    ASTC_RGBA_10X5,\r\n    ASTC_RGBA_10X6,\r\n    ASTC_RGBA_10X8,\r\n    ASTC_RGBA_10X10,\r\n    ASTC_RGBA_12X10,\r\n    ASTC_RGBA_12X12,\r\n\r\n    // ASTC (Adaptive Scalable Texture Compression) SRGB\r\n    ASTC_SRGBA_4X4,\r\n    ASTC_SRGBA_5X4,\r\n    ASTC_SRGBA_5X5,\r\n    ASTC_SRGBA_6X5,\r\n    ASTC_SRGBA_6X6,\r\n    ASTC_SRGBA_8X5,\r\n    ASTC_SRGBA_8X6,\r\n    ASTC_SRGBA_8X8,\r\n    ASTC_SRGBA_10X5,\r\n    ASTC_SRGBA_10X6,\r\n    ASTC_SRGBA_10X8,\r\n    ASTC_SRGBA_10X10,\r\n    ASTC_SRGBA_12X10,\r\n    ASTC_SRGBA_12X12,\r\n\r\n    // Total count\r\n    COUNT,\r\n}\r\n\r\nexport enum FormatType {\r\n    NONE,\r\n    UNORM,\r\n    SNORM,\r\n    UINT,\r\n    INT,\r\n    UFLOAT,\r\n    FLOAT,\r\n}\r\n\r\nexport enum SampleType {\r\n    FLOAT,\r\n    UNFILTERABLE_FLOAT,\r\n    SINT,\r\n    UINT,\r\n}\r\n\r\nexport enum Type {\r\n    UNKNOWN,\r\n    BOOL,\r\n    BOOL2,\r\n    BOOL3,\r\n    BOOL4,\r\n    INT,\r\n    INT2,\r\n    INT3,\r\n    INT4,\r\n    UINT,\r\n    UINT2,\r\n    UINT3,\r\n    UINT4,\r\n    FLOAT,\r\n    FLOAT2,\r\n    FLOAT3,\r\n    FLOAT4,\r\n    MAT2,\r\n    MAT2X3,\r\n    MAT2X4,\r\n    MAT3X2,\r\n    MAT3,\r\n    MAT3X4,\r\n    MAT4X2,\r\n    MAT4X3,\r\n    MAT4,\r\n    // combined image samplers\r\n    SAMPLER1D,\r\n    SAMPLER1D_ARRAY,\r\n    SAMPLER2D,\r\n    SAMPLER2D_ARRAY,\r\n    SAMPLER3D,\r\n    SAMPLER_CUBE,\r\n    // sampler\r\n    SAMPLER,\r\n    // sampled textures\r\n    TEXTURE1D,\r\n    TEXTURE1D_ARRAY,\r\n    TEXTURE2D,\r\n    TEXTURE2D_ARRAY,\r\n    TEXTURE3D,\r\n    TEXTURE_CUBE,\r\n    // storage images\r\n    IMAGE1D,\r\n    IMAGE1D_ARRAY,\r\n    IMAGE2D,\r\n    IMAGE2D_ARRAY,\r\n    IMAGE3D,\r\n    IMAGE_CUBE,\r\n    // input attachment\r\n    SUBPASS_INPUT,\r\n    COUNT,\r\n}\r\n\r\nexport enum BufferUsageBit {\r\n    NONE = 0,\r\n    TRANSFER_SRC = 0x1,\r\n    TRANSFER_DST = 0x2,\r\n    INDEX = 0x4,\r\n    VERTEX = 0x8,\r\n    UNIFORM = 0x10,\r\n    STORAGE = 0x20,\r\n    INDIRECT = 0x40,\r\n}\r\n\r\nexport enum BufferFlagBit {\r\n    NONE = 0,\r\n    ENABLE_STAGING_WRITE = 0x01,\r\n}\r\n\r\nexport enum MemoryAccessBit {\r\n    NONE = 0,\r\n    READ_ONLY = 0x1,\r\n    WRITE_ONLY = 0x2,\r\n    READ_WRITE = READ_ONLY | WRITE_ONLY,\r\n}\r\n\r\nexport enum MemoryUsageBit {\r\n    NONE = 0,\r\n    DEVICE = 0x1, // for rarely-updated resources, use MemoryUsageBit::DEVICE\r\n    HOST = 0x2,   // for frequently-updated resources, use MemoryUsageBit::DEVICE | MemoryUsageBit::HOST\r\n}\r\n\r\nexport enum TextureType {\r\n    TEX1D,\r\n    TEX2D,\r\n    TEX3D,\r\n    CUBE,\r\n    TEX1D_ARRAY,\r\n    TEX2D_ARRAY,\r\n}\r\n\r\nexport enum ViewDimension {\r\n    UNKNOWN,\r\n    BUFFER,\r\n    TEX1D,\r\n    TEX1D_ARRAY,\r\n    TEX2D,\r\n    TEX2D_ARRAY,\r\n    TEX2DMS,\r\n    TEX2DMS_ARRAY,\r\n    TEX3D,\r\n    TEXCUBE,\r\n    TEXCUBE_ARRAY,\r\n    RAYTRACING_ACCELERATION_STRUCTURE,\r\n}\r\n\r\nexport enum TextureUsageBit {\r\n    NONE = 0,\r\n    TRANSFER_SRC = 0x1,\r\n    TRANSFER_DST = 0x2,\r\n    SAMPLED = 0x4,\r\n    STORAGE = 0x8,\r\n    COLOR_ATTACHMENT = 0x10,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x20,\r\n    INPUT_ATTACHMENT = 0x40,\r\n    SHADING_RATE = 0x80,\r\n}\r\n\r\nexport enum TextureFlagBit {\r\n    NONE = 0,\r\n    GEN_MIPMAP = 0x1,           // Generate mipmaps using bilinear filter\r\n    GENERAL_LAYOUT = 0x2,       // @deprecated, For inout framebuffer attachments\r\n    EXTERNAL_OES = 0x4,         // External oes texture\r\n    EXTERNAL_NORMAL = 0x8,      // External normal texture\r\n    LAZILY_ALLOCATED = 0x10,    // Try lazily allocated mode.\r\n    MUTABLE_VIEW_FORMAT = 0x40, // texture view as different format\r\n    MUTABLE_STORAGE = 0x80,     // mutable storage for gl image\r\n}\r\n\r\nexport enum FormatFeatureBit {\r\n    NONE = 0,\r\n    RENDER_TARGET = 0x1,     // Allow usages as render pass attachments\r\n    SAMPLED_TEXTURE = 0x2,   // Allow sampled reads in shaders\r\n    LINEAR_FILTER = 0x4,     // Allow linear filtering when sampling in shaders or blitting\r\n    STORAGE_TEXTURE = 0x8,   // Allow storage reads & writes in shaders\r\n    VERTEX_ATTRIBUTE = 0x10, // Allow usages as vertex input attributes\r\n    SHADING_RATE = 0x20,     // Allow usages as shading rate\r\n}\r\n\r\nexport enum SampleCount {\r\n    X1  = 0x01,\r\n    X2  = 0x02,\r\n    X4  = 0x04,\r\n    X8  = 0x08,\r\n    X16 = 0x10,\r\n    X32 = 0x20,\r\n    X64 = 0x40\r\n}\r\n\r\nexport enum VsyncMode {\r\n    // The application does not synchronizes with the vertical sync.\r\n    // If application renders faster than the display refreshes, frames are wasted and tearing may be observed.\r\n    // FPS is uncapped. Maximum power consumption. If unsupported, \"ON\" value will be used instead. Minimum latency.\r\n    OFF,\r\n    // The application is always synchronized with the vertical sync. Tearing does not happen.\r\n    // FPS is capped to the display's refresh rate. For fast applications, battery life is improved. Always supported.\r\n    ON,\r\n    // The application synchronizes with the vertical sync, but only if the application rendering speed is greater than refresh rate.\r\n    // Compared to OFF, there is no tearing. Compared to ON, the FPS will be improved for \"slower\" applications.\r\n    // If unsupported, \"ON\" value will be used instead. Recommended for most applications. Default if supported.\r\n    RELAXED,\r\n    // The presentation engine will always use the latest fully rendered image.\r\n    // Compared to OFF, no tearing will be observed.\r\n    // Compared to ON, battery power will be worse, especially for faster applications.\r\n    // If unsupported,  \"OFF\" will be attempted next.\r\n    MAILBOX,\r\n    // The application is capped to using half the vertical sync time.\r\n    // FPS artificially capped to Half the display speed (usually 30fps) to maintain battery.\r\n    // Best possible battery savings. Worst possible performance.\r\n    // Recommended for specific applications where battery saving is critical.\r\n    HALF,\r\n}\r\n\r\nexport enum Filter {\r\n    NONE,\r\n    POINT,\r\n    LINEAR,\r\n    ANISOTROPIC,\r\n}\r\n\r\nexport enum Address {\r\n    WRAP,\r\n    MIRROR,\r\n    CLAMP,\r\n    BORDER,\r\n}\r\n\r\nexport enum ComparisonFunc {\r\n    NEVER,\r\n    LESS,\r\n    EQUAL,\r\n    LESS_EQUAL,\r\n    GREATER,\r\n    NOT_EQUAL,\r\n    GREATER_EQUAL,\r\n    ALWAYS,\r\n}\r\n\r\nexport enum StencilOp {\r\n    ZERO,\r\n    KEEP,\r\n    REPLACE,\r\n    INCR,\r\n    DECR,\r\n    INVERT,\r\n    INCR_WRAP,\r\n    DECR_WRAP,\r\n}\r\n\r\nexport enum BlendFactor {\r\n    ZERO,\r\n    ONE,\r\n    SRC_ALPHA,\r\n    DST_ALPHA,\r\n    ONE_MINUS_SRC_ALPHA,\r\n    ONE_MINUS_DST_ALPHA,\r\n    SRC_COLOR,\r\n    DST_COLOR,\r\n    ONE_MINUS_SRC_COLOR,\r\n    ONE_MINUS_DST_COLOR,\r\n    SRC_ALPHA_SATURATE,\r\n    CONSTANT_COLOR,\r\n    ONE_MINUS_CONSTANT_COLOR,\r\n    CONSTANT_ALPHA,\r\n    ONE_MINUS_CONSTANT_ALPHA,\r\n}\r\n\r\nexport enum BlendOp {\r\n    ADD,\r\n    SUB,\r\n    REV_SUB,\r\n    MIN,\r\n    MAX,\r\n}\r\n\r\nexport enum ColorMask {\r\n    NONE = 0x0,\r\n    R = 0x1,\r\n    G = 0x2,\r\n    B = 0x4,\r\n    A = 0x8,\r\n    ALL = R | G | B | A,\r\n}\r\n\r\nexport enum ShaderStageFlagBit {\r\n    NONE = 0x0,\r\n    VERTEX = 0x1,\r\n    CONTROL = 0x2,\r\n    EVALUATION = 0x4,\r\n    GEOMETRY = 0x8,\r\n    FRAGMENT = 0x10,\r\n    COMPUTE = 0x20,\r\n    ALL = 0x3f,\r\n}\r\n\r\nexport enum LoadOp {\r\n    LOAD,    // Load the previous content from memory\r\n    CLEAR,   // Clear the content to a fixed value\r\n    DISCARD, // Discard the previous content\r\n}\r\n\r\nexport enum StoreOp {\r\n    STORE,   // Store the pending content to memory\r\n    DISCARD, // Discard the pending content\r\n}\r\n\r\nexport enum AccessFlagBit {\r\n    NONE = 0,\r\n\r\n    // Read accesses\r\n    INDIRECT_BUFFER = 1 << 0,                                     // Read as an indirect buffer for drawing or dispatch\r\n    INDEX_BUFFER = 1 << 1,                                        // Read as an index buffer for drawing\r\n    VERTEX_BUFFER = 1 << 2,                                       // Read as a vertex buffer for drawing\r\n    VERTEX_SHADER_READ_UNIFORM_BUFFER = 1 << 3,                   // Read as a uniform buffer in a vertex shader\r\n    VERTEX_SHADER_READ_TEXTURE = 1 << 4,                          // Read as a sampled image/uniform texel buffer in a vertex shader\r\n    VERTEX_SHADER_READ_OTHER = 1 << 5,                            // Read as any other resource in a vertex shader\r\n    FRAGMENT_SHADER_READ_UNIFORM_BUFFER = 1 << 6,                 // Read as a uniform buffer in a fragment shader\r\n    FRAGMENT_SHADER_READ_TEXTURE = 1 << 7,                        // Read as a sampled image/uniform texel buffer in a fragment shader\r\n    FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT = 1 << 8,         // Read as an input attachment with a color format in a fragment shader\r\n    FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT = 1 << 9, // Read as an input attachment with a depth/stencil format in a fragment shader\r\n    FRAGMENT_SHADER_READ_OTHER = 1 << 10,                         // Read as any other resource in a fragment shader\r\n    COLOR_ATTACHMENT_READ = 1 << 11,                              // Read by standard blending/logic operations or subpass load operations\r\n    DEPTH_STENCIL_ATTACHMENT_READ = 1 << 12,                      // Read by depth/stencil tests or subpass load operations\r\n    COMPUTE_SHADER_READ_UNIFORM_BUFFER = 1 << 13,                 // Read as a uniform buffer in a compute shader\r\n    COMPUTE_SHADER_READ_TEXTURE = 1 << 14,                        // Read as a sampled image/uniform texel buffer in a compute shader\r\n    COMPUTE_SHADER_READ_OTHER = 1 << 15,                          // Read as any other resource in a compute shader\r\n    TRANSFER_READ = 1 << 16,                                      // Read as the source of a transfer operation\r\n    HOST_READ = 1 << 17,                                          // Read on the host\r\n    PRESENT = 1 << 18,                                            // Read by the presentation engine\r\n\r\n    // Write accesses\r\n    VERTEX_SHADER_WRITE = 1 << 19,            // Written as any resource in a vertex shader\r\n    FRAGMENT_SHADER_WRITE = 1 << 20,          // Written as any resource in a fragment shader\r\n    COLOR_ATTACHMENT_WRITE = 1 << 21,         // Written as a color attachment during rendering, or via a subpass store op\r\n    DEPTH_STENCIL_ATTACHMENT_WRITE = 1 << 22, // Written as a depth/stencil attachment during rendering, or via a subpass store op\r\n    COMPUTE_SHADER_WRITE = 1 << 23,           // Written as any resource in a compute shader\r\n    TRANSFER_WRITE = 1 << 24,                 // Written as the destination of a transfer operation\r\n    HOST_PREINITIALIZED = 1 << 25,            // Data pre-filled by host before device access starts\r\n    HOST_WRITE = 1 << 26,                     // Written on the host\r\n\r\n    SHADING_RATE = 1 << 27, // Read as a shading rate image\r\n}\r\n\r\nexport enum ResolveMode {\r\n    NONE,\r\n    SAMPLE_ZERO,\r\n    AVERAGE,\r\n    MIN,\r\n    MAX,\r\n}\r\n\r\nexport enum PipelineBindPoint {\r\n    GRAPHICS,\r\n    COMPUTE,\r\n    RAY_TRACING,\r\n}\r\n\r\nexport enum PrimitiveMode {\r\n    POINT_LIST,\r\n    LINE_LIST,\r\n    LINE_STRIP,\r\n    LINE_LOOP,\r\n    LINE_LIST_ADJACENCY,\r\n    LINE_STRIP_ADJACENCY,\r\n    ISO_LINE_LIST,\r\n    // raycast detectable:\r\n    TRIANGLE_LIST,\r\n    TRIANGLE_STRIP,\r\n    TRIANGLE_FAN,\r\n    TRIANGLE_LIST_ADJACENCY,\r\n    TRIANGLE_STRIP_ADJACENCY,\r\n    TRIANGLE_PATCH_ADJACENCY,\r\n    QUAD_PATCH_LIST,\r\n}\r\n\r\nexport enum PolygonMode {\r\n    FILL,\r\n    POINT,\r\n    LINE,\r\n}\r\n\r\nexport enum ShadeModel {\r\n    GOURAND,\r\n    FLAT,\r\n}\r\n\r\nexport enum CullMode {\r\n    NONE,\r\n    FRONT,\r\n    BACK,\r\n}\r\n\r\nexport enum DynamicStateFlagBit {\r\n    NONE = 0x0,\r\n    LINE_WIDTH = 0x1,\r\n    DEPTH_BIAS = 0x2,\r\n    BLEND_CONSTANTS = 0x4,\r\n    DEPTH_BOUNDS = 0x8,\r\n    STENCIL_WRITE_MASK = 0x10,\r\n    STENCIL_COMPARE_MASK = 0x20,\r\n}\r\n\r\nexport enum StencilFace {\r\n    FRONT = 0x1,\r\n    BACK = 0x2,\r\n    ALL = 0x3,\r\n}\r\n\r\nexport enum DescriptorType {\r\n    UNKNOWN = 0,\r\n    UNIFORM_BUFFER = 0x1,\r\n    DYNAMIC_UNIFORM_BUFFER = 0x2,\r\n    STORAGE_BUFFER = 0x4,\r\n    DYNAMIC_STORAGE_BUFFER = 0x8,\r\n    SAMPLER_TEXTURE = 0x10,\r\n    SAMPLER = 0x20,\r\n    TEXTURE = 0x40,\r\n    STORAGE_IMAGE = 0x80,\r\n    INPUT_ATTACHMENT = 0x100,\r\n}\r\n\r\nexport enum QueueType {\r\n    GRAPHICS,\r\n    COMPUTE,\r\n    TRANSFER,\r\n}\r\n\r\nexport enum QueryType {\r\n    OCCLUSION,\r\n    PIPELINE_STATISTICS,\r\n    TIMESTAMP,\r\n}\r\n\r\nexport enum CommandBufferType {\r\n    PRIMARY,\r\n    SECONDARY,\r\n}\r\n\r\nexport enum ClearFlagBit {\r\n    NONE = 0,\r\n    COLOR = 0x1,\r\n    DEPTH = 0x2,\r\n    STENCIL = 0x4,\r\n    DEPTH_STENCIL = DEPTH | STENCIL,\r\n    ALL = COLOR | DEPTH | STENCIL,\r\n}\r\n\r\nexport enum BarrierType {\r\n    FULL,\r\n    SPLIT_BEGIN,\r\n    SPLIT_END,\r\n}\r\n\r\nexport enum PassType {\r\n    RASTER,\r\n    COMPUTE,\r\n    COPY,\r\n    MOVE,\r\n    RAYTRACE,\r\n    PRESENT,\r\n}\r\n\r\nexport type BufferUsage = BufferUsageBit;\r\nexport type BufferFlags = BufferFlagBit;\r\nexport type MemoryAccess = MemoryAccessBit;\r\nexport type MemoryUsage = MemoryUsageBit;\r\nexport type TextureUsage = TextureUsageBit;\r\nexport type TextureFlags = TextureFlagBit;\r\nexport type FormatFeature = FormatFeatureBit;\r\nexport type ShaderStageFlags = ShaderStageFlagBit;\r\nexport type AccessFlags = AccessFlagBit;\r\nexport type DynamicStateFlags = DynamicStateFlagBit;\r\nexport type ClearFlags = ClearFlagBit;\r\n\r\nexport class Size {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public x: number = 0,\r\n        public y: number = 0,\r\n        public z: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Size>): Size {\r\n        this.x = info.x;\r\n        this.y = info.y;\r\n        this.z = info.z;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DeviceCaps {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public maxVertexAttributes: number = 0,\r\n        public maxVertexUniformVectors: number = 0,\r\n        public maxFragmentUniformVectors: number = 0,\r\n        public maxTextureUnits: number = 0,\r\n        public maxImageUnits: number = 0,\r\n        public maxVertexTextureUnits: number = 0,\r\n        public maxColorRenderTargets: number = 0,\r\n        public maxShaderStorageBufferBindings: number = 0,\r\n        public maxShaderStorageBlockSize: number = 0,\r\n        public maxUniformBufferBindings: number = 0,\r\n        public maxUniformBlockSize: number = 0,\r\n        public maxTextureSize: number = 0,\r\n        public maxCubeMapTextureSize: number = 0,\r\n        public maxArrayTextureLayers: number = 0,\r\n        public max3DTextureSize: number = 0,\r\n        public uboOffsetAlignment: number = 1,\r\n        public maxComputeSharedMemorySize: number = 0,\r\n        public maxComputeWorkGroupInvocations: number = 0,\r\n        public maxComputeWorkGroupSize: Size = new Size(),\r\n        public maxComputeWorkGroupCount: Size = new Size(),\r\n        public supportQuery: boolean = false,\r\n        public supportVariableRateShading: boolean = false,\r\n        public supportSubPassShading: boolean = false,\r\n        public clipSpaceMinZ: number = -1,\r\n        public screenSpaceSignY: number = 1,\r\n        public clipSpaceSignY: number = 1,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DeviceCaps>): DeviceCaps {\r\n        this.maxVertexAttributes = info.maxVertexAttributes;\r\n        this.maxVertexUniformVectors = info.maxVertexUniformVectors;\r\n        this.maxFragmentUniformVectors = info.maxFragmentUniformVectors;\r\n        this.maxTextureUnits = info.maxTextureUnits;\r\n        this.maxImageUnits = info.maxImageUnits;\r\n        this.maxVertexTextureUnits = info.maxVertexTextureUnits;\r\n        this.maxColorRenderTargets = info.maxColorRenderTargets;\r\n        this.maxShaderStorageBufferBindings = info.maxShaderStorageBufferBindings;\r\n        this.maxShaderStorageBlockSize = info.maxShaderStorageBlockSize;\r\n        this.maxUniformBufferBindings = info.maxUniformBufferBindings;\r\n        this.maxUniformBlockSize = info.maxUniformBlockSize;\r\n        this.maxTextureSize = info.maxTextureSize;\r\n        this.maxCubeMapTextureSize = info.maxCubeMapTextureSize;\r\n        this.maxArrayTextureLayers = info.maxArrayTextureLayers;\r\n        this.max3DTextureSize = info.max3DTextureSize;\r\n        this.uboOffsetAlignment = info.uboOffsetAlignment;\r\n        this.maxComputeSharedMemorySize = info.maxComputeSharedMemorySize;\r\n        this.maxComputeWorkGroupInvocations = info.maxComputeWorkGroupInvocations;\r\n        this.maxComputeWorkGroupSize.copy(info.maxComputeWorkGroupSize);\r\n        this.maxComputeWorkGroupCount.copy(info.maxComputeWorkGroupCount);\r\n        this.supportQuery = info.supportQuery;\r\n        this.supportVariableRateShading = info.supportVariableRateShading;\r\n        this.supportSubPassShading = info.supportSubPassShading;\r\n        this.clipSpaceMinZ = info.clipSpaceMinZ;\r\n        this.screenSpaceSignY = info.screenSpaceSignY;\r\n        this.clipSpaceSignY = info.clipSpaceSignY;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DeviceOptions {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public enableBarrierDeduce: boolean = true,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DeviceOptions>): DeviceOptions {\r\n        this.enableBarrierDeduce = info.enableBarrierDeduce;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Offset {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public x: number = 0,\r\n        public y: number = 0,\r\n        public z: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Offset>): Offset {\r\n        this.x = info.x;\r\n        this.y = info.y;\r\n        this.z = info.z;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Rect {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public x: number = 0,\r\n        public y: number = 0,\r\n        public width: number = 0,\r\n        public height: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Rect>): Rect {\r\n        this.x = info.x;\r\n        this.y = info.y;\r\n        this.width = info.width;\r\n        this.height = info.height;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Extent {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public width: number = 0,\r\n        public height: number = 0,\r\n        public depth: number = 1,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Extent>): Extent {\r\n        this.width = info.width;\r\n        this.height = info.height;\r\n        this.depth = info.depth;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TextureSubresLayers {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public mipLevel: number = 0,\r\n        public baseArrayLayer: number = 0,\r\n        public layerCount: number = 1,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<TextureSubresLayers>): TextureSubresLayers {\r\n        this.mipLevel = info.mipLevel;\r\n        this.baseArrayLayer = info.baseArrayLayer;\r\n        this.layerCount = info.layerCount;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TextureSubresRange {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public baseMipLevel: number = 0,\r\n        public levelCount: number = 1,\r\n        public baseArrayLayer: number = 0,\r\n        public layerCount: number = 1,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<TextureSubresRange>): TextureSubresRange {\r\n        this.baseMipLevel = info.baseMipLevel;\r\n        this.levelCount = info.levelCount;\r\n        this.baseArrayLayer = info.baseArrayLayer;\r\n        this.layerCount = info.layerCount;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TextureCopy {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public srcSubres: TextureSubresLayers = new TextureSubresLayers(),\r\n        public srcOffset: Offset = new Offset(),\r\n        public dstSubres: TextureSubresLayers = new TextureSubresLayers(),\r\n        public dstOffset: Offset = new Offset(),\r\n        public extent: Extent = new Extent(),\r\n    ) {}\r\n\r\n    public copy (info: Readonly<TextureCopy>): TextureCopy {\r\n        this.srcSubres.copy(info.srcSubres);\r\n        this.srcOffset.copy(info.srcOffset);\r\n        this.dstSubres.copy(info.dstSubres);\r\n        this.dstOffset.copy(info.dstOffset);\r\n        this.extent.copy(info.extent);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TextureBlit {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public srcSubres: TextureSubresLayers = new TextureSubresLayers(),\r\n        public srcOffset: Offset = new Offset(),\r\n        public srcExtent: Extent = new Extent(),\r\n        public dstSubres: TextureSubresLayers = new TextureSubresLayers(),\r\n        public dstOffset: Offset = new Offset(),\r\n        public dstExtent: Extent = new Extent(),\r\n    ) {}\r\n\r\n    public copy (info: Readonly<TextureBlit>): TextureBlit {\r\n        this.srcSubres.copy(info.srcSubres);\r\n        this.srcOffset.copy(info.srcOffset);\r\n        this.srcExtent.copy(info.srcExtent);\r\n        this.dstSubres.copy(info.dstSubres);\r\n        this.dstOffset.copy(info.dstOffset);\r\n        this.dstExtent.copy(info.dstExtent);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class BufferTextureCopy {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public buffOffset: number = 0,\r\n        public buffStride: number = 0,\r\n        public buffTexHeight: number = 0,\r\n        public texOffset: Offset = new Offset(),\r\n        public texExtent: Extent = new Extent(),\r\n        public texSubres: TextureSubresLayers = new TextureSubresLayers(),\r\n    ) {}\r\n\r\n    public copy (info: Readonly<BufferTextureCopy>): BufferTextureCopy {\r\n        this.buffOffset = info.buffOffset;\r\n        this.buffStride = info.buffStride;\r\n        this.buffTexHeight = info.buffTexHeight;\r\n        this.texOffset.copy(info.texOffset);\r\n        this.texExtent.copy(info.texExtent);\r\n        this.texSubres.copy(info.texSubres);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Viewport {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public left: number = 0,\r\n        public top: number = 0,\r\n        public width: number = 0,\r\n        public height: number = 0,\r\n        public minDepth: number = 0,\r\n        public maxDepth: number = 1,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Viewport>): Viewport {\r\n        this.left = info.left;\r\n        this.top = info.top;\r\n        this.width = info.width;\r\n        this.height = info.height;\r\n        this.minDepth = info.minDepth;\r\n        this.maxDepth = info.maxDepth;\r\n        return this;\r\n    }\r\n\r\n    public reset (): void {\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.minDepth = 0;\r\n        this.maxDepth = 1;\r\n    }\r\n}\r\n\r\nexport class Color {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public x: number = 0,\r\n        public y: number = 0,\r\n        public z: number = 0,\r\n        public w: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Color>): Color {\r\n        this.x = info.x;\r\n        this.y = info.y;\r\n        this.z = info.z;\r\n        this.w = info.w;\r\n        return this;\r\n    }\r\n\r\n    public set (x: number, y: number, z: number, w: number): Color {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    }\r\n\r\n    public reset (): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    }\r\n}\r\n\r\nexport class MarkerInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public name: string = '',\r\n        public color: Color = new Color(),\r\n    ) {}\r\n\r\n    public copy (info: Readonly<MarkerInfo>): MarkerInfo {\r\n        this.name = info.name;\r\n        this.color.copy(info.color);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class BindingMappingInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public maxBlockCounts: number[] = [0],\r\n        public maxSamplerTextureCounts: number[] = [0],\r\n        public maxSamplerCounts: number[] = [0],\r\n        public maxTextureCounts: number[] = [0],\r\n        public maxBufferCounts: number[] = [0],\r\n        public maxImageCounts: number[] = [0],\r\n        public maxSubpassInputCounts: number[] = [0],\r\n        public setIndices: number[] = [0],\r\n    ) {}\r\n\r\n    public copy (info: Readonly<BindingMappingInfo>): BindingMappingInfo {\r\n        this.maxBlockCounts = info.maxBlockCounts.slice();\r\n        this.maxSamplerTextureCounts = info.maxSamplerTextureCounts.slice();\r\n        this.maxSamplerCounts = info.maxSamplerCounts.slice();\r\n        this.maxTextureCounts = info.maxTextureCounts.slice();\r\n        this.maxBufferCounts = info.maxBufferCounts.slice();\r\n        this.maxImageCounts = info.maxImageCounts.slice();\r\n        this.maxSubpassInputCounts = info.maxSubpassInputCounts.slice();\r\n        this.setIndices = info.setIndices.slice();\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class SwapchainInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public windowId: number = 0,\r\n        public windowHandle: HTMLCanvasElement = null!,\r\n        public vsyncMode: VsyncMode = VsyncMode.ON,\r\n        public width: number = 0,\r\n        public height: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<SwapchainInfo>): SwapchainInfo {\r\n        this.windowId = info.windowId;\r\n        this.windowHandle = info.windowHandle;\r\n        this.vsyncMode = info.vsyncMode;\r\n        this.width = info.width;\r\n        this.height = info.height;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DeviceInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public bindingMappingInfo: BindingMappingInfo = new BindingMappingInfo(),\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DeviceInfo>): DeviceInfo {\r\n        this.bindingMappingInfo.copy(info.bindingMappingInfo);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class BufferInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public usage: BufferUsage = BufferUsageBit.NONE,\r\n        public memUsage: MemoryUsage = MemoryUsageBit.NONE,\r\n        public size: number = 0,\r\n        public stride: number = 1,\r\n        public flags: BufferFlags = BufferFlagBit.NONE,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<BufferInfo>): BufferInfo {\r\n        this.usage = info.usage;\r\n        this.memUsage = info.memUsage;\r\n        this.size = info.size;\r\n        this.stride = info.stride;\r\n        this.flags = info.flags;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class BufferViewInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public buffer: Buffer = null!,\r\n        public offset: number = 0,\r\n        public range: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<BufferViewInfo>): BufferViewInfo {\r\n        this.buffer = info.buffer;\r\n        this.offset = info.offset;\r\n        this.range = info.range;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DrawInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public vertexCount: number = 0,\r\n        public firstVertex: number = 0,\r\n        public indexCount: number = 0,\r\n        public firstIndex: number = 0,\r\n        public vertexOffset: number = 0,\r\n        public instanceCount: number = 0,\r\n        public firstInstance: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DrawInfo>): DrawInfo {\r\n        this.vertexCount = info.vertexCount;\r\n        this.firstVertex = info.firstVertex;\r\n        this.indexCount = info.indexCount;\r\n        this.firstIndex = info.firstIndex;\r\n        this.vertexOffset = info.vertexOffset;\r\n        this.instanceCount = info.instanceCount;\r\n        this.firstInstance = info.firstInstance;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DispatchInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public groupCountX: number = 0,\r\n        public groupCountY: number = 0,\r\n        public groupCountZ: number = 0,\r\n        public indirectBuffer: Buffer | null = null,\r\n        public indirectOffset: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DispatchInfo>): DispatchInfo {\r\n        this.groupCountX = info.groupCountX;\r\n        this.groupCountY = info.groupCountY;\r\n        this.groupCountZ = info.groupCountZ;\r\n        this.indirectBuffer = info.indirectBuffer;\r\n        this.indirectOffset = info.indirectOffset;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class IndirectBuffer {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public drawInfos: DrawInfo[] = [],\r\n    ) {}\r\n\r\n    public copy (info: Readonly<IndirectBuffer>): IndirectBuffer {\r\n        deepCopy(this.drawInfos, info.drawInfos, DrawInfo);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TextureInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public type: TextureType = TextureType.TEX2D,\r\n        public usage: TextureUsage = TextureUsageBit.NONE,\r\n        public format: Format = Format.UNKNOWN,\r\n        public width: number = 0,\r\n        public height: number = 0,\r\n        public flags: TextureFlags = TextureFlagBit.NONE,\r\n        public layerCount: number = 1,\r\n        public levelCount: number = 1,\r\n        public samples: SampleCount = SampleCount.X1,\r\n        public depth: number = 1,\r\n        public externalRes: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<TextureInfo>): TextureInfo {\r\n        this.type = info.type;\r\n        this.usage = info.usage;\r\n        this.format = info.format;\r\n        this.width = info.width;\r\n        this.height = info.height;\r\n        this.flags = info.flags;\r\n        this.layerCount = info.layerCount;\r\n        this.levelCount = info.levelCount;\r\n        this.samples = info.samples;\r\n        this.depth = info.depth;\r\n        this.externalRes = info.externalRes;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TextureViewInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public texture: Texture = null!,\r\n        public type: TextureType = TextureType.TEX2D,\r\n        public format: Format = Format.UNKNOWN,\r\n        public baseLevel: number = 0,\r\n        public levelCount: number = 1,\r\n        public baseLayer: number = 0,\r\n        public layerCount: number = 1,\r\n        public basePlane: number = 0,\r\n        public planeCount: number = 1,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<TextureViewInfo>): TextureViewInfo {\r\n        this.texture = info.texture;\r\n        this.type = info.type;\r\n        this.format = info.format;\r\n        this.baseLevel = info.baseLevel;\r\n        this.levelCount = info.levelCount;\r\n        this.baseLayer = info.baseLayer;\r\n        this.layerCount = info.layerCount;\r\n        this.basePlane = info.basePlane;\r\n        this.planeCount = info.planeCount;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class SamplerInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public minFilter: Filter = Filter.LINEAR,\r\n        public magFilter: Filter = Filter.LINEAR,\r\n        public mipFilter: Filter = Filter.NONE,\r\n        public addressU: Address = Address.WRAP,\r\n        public addressV: Address = Address.WRAP,\r\n        public addressW: Address = Address.WRAP,\r\n        public maxAnisotropy: number = 0,\r\n        public cmpFunc: ComparisonFunc = ComparisonFunc.ALWAYS,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<SamplerInfo>): SamplerInfo {\r\n        this.minFilter = info.minFilter;\r\n        this.magFilter = info.magFilter;\r\n        this.mipFilter = info.mipFilter;\r\n        this.addressU = info.addressU;\r\n        this.addressV = info.addressV;\r\n        this.addressW = info.addressW;\r\n        this.maxAnisotropy = info.maxAnisotropy;\r\n        this.cmpFunc = info.cmpFunc;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Uniform {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public name: string = '',\r\n        public type: Type = Type.UNKNOWN,\r\n        public count: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Uniform>): Uniform {\r\n        this.name = info.name;\r\n        this.type = info.type;\r\n        this.count = info.count;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class UniformBlock {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public set: number = 0,\r\n        public binding: number = 0,\r\n        public name: string = '',\r\n        public members: Uniform[] = [],\r\n        public count: number = 0,\r\n        public flattened: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<UniformBlock>): UniformBlock {\r\n        this.set = info.set;\r\n        this.binding = info.binding;\r\n        this.name = info.name;\r\n        deepCopy(this.members, info.members, Uniform);\r\n        this.count = info.count;\r\n        this.flattened = info.flattened;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class UniformSamplerTexture {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public set: number = 0,\r\n        public binding: number = 0,\r\n        public name: string = '',\r\n        public type: Type = Type.UNKNOWN,\r\n        public count: number = 0,\r\n        public flattened: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<UniformSamplerTexture>): UniformSamplerTexture {\r\n        this.set = info.set;\r\n        this.binding = info.binding;\r\n        this.name = info.name;\r\n        this.type = info.type;\r\n        this.count = info.count;\r\n        this.flattened = info.flattened;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class UniformSampler {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public set: number = 0,\r\n        public binding: number = 0,\r\n        public name: string = '',\r\n        public count: number = 0,\r\n        public flattened: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<UniformSampler>): UniformSampler {\r\n        this.set = info.set;\r\n        this.binding = info.binding;\r\n        this.name = info.name;\r\n        this.count = info.count;\r\n        this.flattened = info.flattened;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class UniformTexture {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public set: number = 0,\r\n        public binding: number = 0,\r\n        public name: string = '',\r\n        public type: Type = Type.UNKNOWN,\r\n        public count: number = 0,\r\n        public flattened: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<UniformTexture>): UniformTexture {\r\n        this.set = info.set;\r\n        this.binding = info.binding;\r\n        this.name = info.name;\r\n        this.type = info.type;\r\n        this.count = info.count;\r\n        this.flattened = info.flattened;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class UniformStorageImage {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public set: number = 0,\r\n        public binding: number = 0,\r\n        public name: string = '',\r\n        public type: Type = Type.UNKNOWN,\r\n        public count: number = 0,\r\n        public memoryAccess: MemoryAccess = MemoryAccessBit.READ_WRITE,\r\n        public flattened: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<UniformStorageImage>): UniformStorageImage {\r\n        this.set = info.set;\r\n        this.binding = info.binding;\r\n        this.name = info.name;\r\n        this.type = info.type;\r\n        this.count = info.count;\r\n        this.memoryAccess = info.memoryAccess;\r\n        this.flattened = info.flattened;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class UniformStorageBuffer {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public set: number = 0,\r\n        public binding: number = 0,\r\n        public name: string = '',\r\n        public count: number = 0,\r\n        public memoryAccess: MemoryAccess = MemoryAccessBit.READ_WRITE,\r\n        public flattened: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<UniformStorageBuffer>): UniformStorageBuffer {\r\n        this.set = info.set;\r\n        this.binding = info.binding;\r\n        this.name = info.name;\r\n        this.count = info.count;\r\n        this.memoryAccess = info.memoryAccess;\r\n        this.flattened = info.flattened;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class UniformInputAttachment {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public set: number = 0,\r\n        public binding: number = 0,\r\n        public name: string = '',\r\n        public count: number = 0,\r\n        public flattened: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<UniformInputAttachment>): UniformInputAttachment {\r\n        this.set = info.set;\r\n        this.binding = info.binding;\r\n        this.name = info.name;\r\n        this.count = info.count;\r\n        this.flattened = info.flattened;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class ShaderStage {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public stage: ShaderStageFlagBit = ShaderStageFlagBit.NONE,\r\n        public source: string = '',\r\n    ) {}\r\n\r\n    public copy (info: Readonly<ShaderStage>): ShaderStage {\r\n        this.stage = info.stage;\r\n        this.source = info.source;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Attribute {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public name: string = '',\r\n        public format: Format = Format.UNKNOWN,\r\n        public isNormalized: boolean = false,\r\n        public stream: number = 0,\r\n        public isInstanced: boolean = false,\r\n        public location: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<Attribute>): Attribute {\r\n        this.name = info.name;\r\n        this.format = info.format;\r\n        this.isNormalized = info.isNormalized;\r\n        this.stream = info.stream;\r\n        this.isInstanced = info.isInstanced;\r\n        this.location = info.location;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class ShaderInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public name: string = '',\r\n        public stages: ShaderStage[] = [],\r\n        public attributes: Attribute[] = [],\r\n        public blocks: UniformBlock[] = [],\r\n        public buffers: UniformStorageBuffer[] = [],\r\n        public samplerTextures: UniformSamplerTexture[] = [],\r\n        public samplers: UniformSampler[] = [],\r\n        public textures: UniformTexture[] = [],\r\n        public images: UniformStorageImage[] = [],\r\n        public subpassInputs: UniformInputAttachment[] = [],\r\n        public hash: number = 0xFFFFFFFF,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<ShaderInfo>): ShaderInfo {\r\n        this.name = info.name;\r\n        deepCopy(this.stages, info.stages, ShaderStage);\r\n        deepCopy(this.attributes, info.attributes, Attribute);\r\n        deepCopy(this.blocks, info.blocks, UniformBlock);\r\n        deepCopy(this.buffers, info.buffers, UniformStorageBuffer);\r\n        deepCopy(this.samplerTextures, info.samplerTextures, UniformSamplerTexture);\r\n        deepCopy(this.samplers, info.samplers, UniformSampler);\r\n        deepCopy(this.textures, info.textures, UniformTexture);\r\n        deepCopy(this.images, info.images, UniformStorageImage);\r\n        deepCopy(this.subpassInputs, info.subpassInputs, UniformInputAttachment);\r\n        this.hash = info.hash;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class InputAssemblerInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public attributes: Attribute[] = [],\r\n        public vertexBuffers: Buffer[] = [],\r\n        public indexBuffer: Buffer | null = null,\r\n        public indirectBuffer: Buffer | null = null,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<InputAssemblerInfo>): InputAssemblerInfo {\r\n        deepCopy(this.attributes, info.attributes, Attribute);\r\n        this.vertexBuffers = info.vertexBuffers.slice();\r\n        this.indexBuffer = info.indexBuffer;\r\n        this.indirectBuffer = info.indirectBuffer;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class ColorAttachment {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public format: Format = Format.UNKNOWN,\r\n        public sampleCount: SampleCount = SampleCount.X1,\r\n        public loadOp: LoadOp = LoadOp.CLEAR,\r\n        public storeOp: StoreOp = StoreOp.STORE,\r\n        public barrier: GeneralBarrier = null!,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<ColorAttachment>): ColorAttachment {\r\n        this.format = info.format;\r\n        this.sampleCount = info.sampleCount;\r\n        this.loadOp = info.loadOp;\r\n        this.storeOp = info.storeOp;\r\n        this.barrier = info.barrier;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DepthStencilAttachment {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public format: Format = Format.UNKNOWN,\r\n        public sampleCount: SampleCount = SampleCount.X1,\r\n        public depthLoadOp: LoadOp = LoadOp.CLEAR,\r\n        public depthStoreOp: StoreOp = StoreOp.STORE,\r\n        public stencilLoadOp: LoadOp = LoadOp.CLEAR,\r\n        public stencilStoreOp: StoreOp = StoreOp.STORE,\r\n        public barrier: GeneralBarrier = null!,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DepthStencilAttachment>): DepthStencilAttachment {\r\n        this.format = info.format;\r\n        this.sampleCount = info.sampleCount;\r\n        this.depthLoadOp = info.depthLoadOp;\r\n        this.depthStoreOp = info.depthStoreOp;\r\n        this.stencilLoadOp = info.stencilLoadOp;\r\n        this.stencilStoreOp = info.stencilStoreOp;\r\n        this.barrier = info.barrier;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class SubpassInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public inputs: number[] = [],\r\n        public colors: number[] = [],\r\n        public resolves: number[] = [],\r\n        public preserves: number[] = [],\r\n        public depthStencil: number = -1,\r\n        public depthStencilResolve: number = -1,\r\n        public shadingRate: number = -1,\r\n        public depthResolveMode: ResolveMode = ResolveMode.NONE,\r\n        public stencilResolveMode: ResolveMode = ResolveMode.NONE,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<SubpassInfo>): SubpassInfo {\r\n        this.inputs = info.inputs.slice();\r\n        this.colors = info.colors.slice();\r\n        this.resolves = info.resolves.slice();\r\n        this.preserves = info.preserves.slice();\r\n        this.depthStencil = info.depthStencil;\r\n        this.depthStencilResolve = info.depthStencilResolve;\r\n        this.shadingRate = info.shadingRate;\r\n        this.depthResolveMode = info.depthResolveMode;\r\n        this.stencilResolveMode = info.stencilResolveMode;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class SubpassDependency {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public srcSubpass: number = 0,\r\n        public dstSubpass: number = 0,\r\n        public generalBarrier: GeneralBarrier = null!,\r\n        public prevAccesses: AccessFlags = AccessFlagBit.NONE,\r\n        public nextAccesses: AccessFlags = AccessFlagBit.NONE,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<SubpassDependency>): SubpassDependency {\r\n        this.srcSubpass = info.srcSubpass;\r\n        this.dstSubpass = info.dstSubpass;\r\n        this.generalBarrier = info.generalBarrier;\r\n        this.prevAccesses = info.prevAccesses;\r\n        this.nextAccesses = info.nextAccesses;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class RenderPassInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public colorAttachments: ColorAttachment[] = [],\r\n        public depthStencilAttachment: DepthStencilAttachment = new DepthStencilAttachment(),\r\n        public depthStencilResolveAttachment: DepthStencilAttachment = new DepthStencilAttachment(),\r\n        public subpasses: SubpassInfo[] = [],\r\n        public dependencies: SubpassDependency[] = [],\r\n    ) {}\r\n\r\n    public copy (info: Readonly<RenderPassInfo>): RenderPassInfo {\r\n        deepCopy(this.colorAttachments, info.colorAttachments, ColorAttachment);\r\n        this.depthStencilAttachment.copy(info.depthStencilAttachment);\r\n        this.depthStencilResolveAttachment.copy(info.depthStencilResolveAttachment);\r\n        deepCopy(this.subpasses, info.subpasses, SubpassInfo);\r\n        deepCopy(this.dependencies, info.dependencies, SubpassDependency);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class ResourceRange {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public width: number = 0,\r\n        public height: number = 0,\r\n        public depthOrArraySize: number = 0,\r\n        public firstSlice: number = 0,\r\n        public numSlices: number = 0,\r\n        public mipLevel: number = 0,\r\n        public levelCount: number = 0,\r\n        public basePlane: number = 0,\r\n        public planeCount: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<ResourceRange>): ResourceRange {\r\n        this.width = info.width;\r\n        this.height = info.height;\r\n        this.depthOrArraySize = info.depthOrArraySize;\r\n        this.firstSlice = info.firstSlice;\r\n        this.numSlices = info.numSlices;\r\n        this.mipLevel = info.mipLevel;\r\n        this.levelCount = info.levelCount;\r\n        this.basePlane = info.basePlane;\r\n        this.planeCount = info.planeCount;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class GeneralBarrierInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public prevAccesses: AccessFlags = AccessFlagBit.NONE,\r\n        public nextAccesses: AccessFlags = AccessFlagBit.NONE,\r\n        public type: BarrierType = BarrierType.FULL,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<GeneralBarrierInfo>): GeneralBarrierInfo {\r\n        this.prevAccesses = info.prevAccesses;\r\n        this.nextAccesses = info.nextAccesses;\r\n        this.type = info.type;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TextureBarrierInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public prevAccesses: AccessFlags = AccessFlagBit.NONE,\r\n        public nextAccesses: AccessFlags = AccessFlagBit.NONE,\r\n        public type: BarrierType = BarrierType.FULL,\r\n        public range: ResourceRange = new ResourceRange(),\r\n        public discardContents: boolean = false,\r\n        public srcQueue: Queue | null = null,\r\n        public dstQueue: Queue | null = null,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<TextureBarrierInfo>): TextureBarrierInfo {\r\n        this.prevAccesses = info.prevAccesses;\r\n        this.nextAccesses = info.nextAccesses;\r\n        this.type = info.type;\r\n        this.range.copy(info.range);\r\n        this.discardContents = info.discardContents;\r\n        this.srcQueue = info.srcQueue;\r\n        this.dstQueue = info.dstQueue;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class BufferBarrierInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public prevAccesses: AccessFlags = AccessFlagBit.NONE,\r\n        public nextAccesses: AccessFlags = AccessFlagBit.NONE,\r\n        public type: BarrierType = BarrierType.FULL,\r\n        public offset: number = 0,\r\n        public size: number = 0,\r\n        public discardContents: boolean = false,\r\n        public srcQueue: Queue | null = null,\r\n        public dstQueue: Queue | null = null,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<BufferBarrierInfo>): BufferBarrierInfo {\r\n        this.prevAccesses = info.prevAccesses;\r\n        this.nextAccesses = info.nextAccesses;\r\n        this.type = info.type;\r\n        this.offset = info.offset;\r\n        this.size = info.size;\r\n        this.discardContents = info.discardContents;\r\n        this.srcQueue = info.srcQueue;\r\n        this.dstQueue = info.dstQueue;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FramebufferInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public renderPass: RenderPass = null!,\r\n        public colorTextures: Texture[] = [],\r\n        public depthStencilTexture: Texture | null = null,\r\n        public depthStencilResolveTexture: Texture | null = null,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<FramebufferInfo>): FramebufferInfo {\r\n        this.renderPass = info.renderPass;\r\n        this.colorTextures = info.colorTextures.slice();\r\n        this.depthStencilTexture = info.depthStencilTexture;\r\n        this.depthStencilResolveTexture = info.depthStencilResolveTexture;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DescriptorSetLayoutBinding {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public binding: number = -1,\r\n        public descriptorType: DescriptorType = DescriptorType.UNKNOWN,\r\n        public count: number = 0,\r\n        public stageFlags: ShaderStageFlags = ShaderStageFlagBit.NONE,\r\n        public access: MemoryAccess = MemoryAccessBit.READ_ONLY,\r\n        public viewDimension: ViewDimension = ViewDimension.UNKNOWN,\r\n        public sampleType: SampleType = SampleType.FLOAT,\r\n        public format: Format = Format.UNKNOWN,\r\n        public immutableSamplers: Sampler[] = [],\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DescriptorSetLayoutBinding>): DescriptorSetLayoutBinding {\r\n        this.binding = info.binding;\r\n        this.descriptorType = info.descriptorType;\r\n        this.count = info.count;\r\n        this.stageFlags = info.stageFlags;\r\n        this.access = info.access;\r\n        this.viewDimension = info.viewDimension;\r\n        this.sampleType = info.sampleType;\r\n        this.format = info.format;\r\n        this.immutableSamplers = info.immutableSamplers.slice();\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DescriptorSetLayoutInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public bindings: DescriptorSetLayoutBinding[] = [],\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DescriptorSetLayoutInfo>): DescriptorSetLayoutInfo {\r\n        deepCopy(this.bindings, info.bindings, DescriptorSetLayoutBinding);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DescriptorSetInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public layout: DescriptorSetLayout = null!,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DescriptorSetInfo>): DescriptorSetInfo {\r\n        this.layout = info.layout;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class PipelineLayoutInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public setLayouts: DescriptorSetLayout[] = [],\r\n    ) {}\r\n\r\n    public copy (info: Readonly<PipelineLayoutInfo>): PipelineLayoutInfo {\r\n        this.setLayouts = info.setLayouts.slice();\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class InputState {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public attributes: Attribute[] = [],\r\n    ) {}\r\n\r\n    public copy (info: Readonly<InputState>): InputState {\r\n        deepCopy(this.attributes, info.attributes, Attribute);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class CommandBufferInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public queue: Queue = null!,\r\n        public type: CommandBufferType = CommandBufferType.PRIMARY,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<CommandBufferInfo>): CommandBufferInfo {\r\n        this.queue = info.queue;\r\n        this.type = info.type;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class QueueInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public type: QueueType = QueueType.GRAPHICS,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<QueueInfo>): QueueInfo {\r\n        this.type = info.type;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class QueryPoolInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public type: QueryType = QueryType.OCCLUSION,\r\n        public maxQueryObjects: number = 32767,\r\n        public forceWait: boolean = true,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<QueryPoolInfo>): QueryPoolInfo {\r\n        this.type = info.type;\r\n        this.maxQueryObjects = info.maxQueryObjects;\r\n        this.forceWait = info.forceWait;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class FormatInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public name: string = '',\r\n        public size: number = 0,\r\n        public count: number = 0,\r\n        public type: FormatType = FormatType.NONE,\r\n        public hasAlpha: boolean = false,\r\n        public hasDepth: boolean = false,\r\n        public hasStencil: boolean = false,\r\n        public isCompressed: boolean = false,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<FormatInfo>): FormatInfo {\r\n        this.name = info.name;\r\n        this.size = info.size;\r\n        this.count = info.count;\r\n        this.type = info.type;\r\n        this.hasAlpha = info.hasAlpha;\r\n        this.hasDepth = info.hasDepth;\r\n        this.hasStencil = info.hasStencil;\r\n        this.isCompressed = info.isCompressed;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class MemoryStatus {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public bufferSize: number = 0,\r\n        public textureSize: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<MemoryStatus>): MemoryStatus {\r\n        this.bufferSize = info.bufferSize;\r\n        this.textureSize = info.textureSize;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DynamicStencilStates {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public writeMask: number = 0,\r\n        public compareMask: number = 0,\r\n        public reference: number = 0,\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DynamicStencilStates>): DynamicStencilStates {\r\n        this.writeMask = info.writeMask;\r\n        this.compareMask = info.compareMask;\r\n        this.reference = info.reference;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class DynamicStates {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public viewport: Viewport = new Viewport(),\r\n        public scissor: Rect = new Rect(),\r\n        public blendConstant: Color = new Color(),\r\n        public lineWidth: number = 1,\r\n        public depthBiasConstant: number = 0,\r\n        public depthBiasClamp: number = 0,\r\n        public depthBiasSlope: number = 0,\r\n        public depthMinBounds: number = 0,\r\n        public depthMaxBounds: number = 0,\r\n        public stencilStatesFront: DynamicStencilStates = new DynamicStencilStates(),\r\n        public stencilStatesBack: DynamicStencilStates = new DynamicStencilStates(),\r\n    ) {}\r\n\r\n    public copy (info: Readonly<DynamicStates>): DynamicStates {\r\n        this.viewport.copy(info.viewport);\r\n        this.scissor.copy(info.scissor);\r\n        this.blendConstant.copy(info.blendConstant);\r\n        this.lineWidth = info.lineWidth;\r\n        this.depthBiasConstant = info.depthBiasConstant;\r\n        this.depthBiasClamp = info.depthBiasClamp;\r\n        this.depthBiasSlope = info.depthBiasSlope;\r\n        this.depthMinBounds = info.depthMinBounds;\r\n        this.depthMaxBounds = info.depthMaxBounds;\r\n        this.stencilStatesFront.copy(info.stencilStatesFront);\r\n        this.stencilStatesBack.copy(info.stencilStatesBack);\r\n        return this;\r\n    }\r\n}\r\n\r\n/**\r\n  * ========================= !DO NOT CHANGE THE ABOVE SECTION MANUALLY! =========================\r\n  * The above section is auto-generated from native/cocos/renderer/core/gfx/GFXDef-common.h\r\n  * by the script native/tools/gfx-define-generator/generate.js.\r\n  * Changes to these public interfaces should be made there first and synced back.\r\n  * ========================= !DO NOT CHANGE THE ABOVE SECTION MANUALLY! =========================\r\n  */\r\n\r\n/**\r\n  * @en GFX base object.\r\n  * @zh GFX 基类对象。\r\n  */\r\nexport class GFXObject extends GCObject {\r\n    public get objectType (): ObjectType {\r\n        return this._objectType;\r\n    }\r\n\r\n    public get objectID (): number {\r\n        return this._objectID;\r\n    }\r\n\r\n    public get typedID (): number {\r\n        return this._typedID;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _objectType = ObjectType.UNKNOWN;\r\n    /** @mangle */\r\n    protected _objectID = 0;\r\n    /** @mangle */\r\n    protected _typedID = 0;\r\n\r\n    private static _idTable = Array(ObjectType.COUNT).fill(1 << 16);\r\n\r\n    constructor (objectType: ObjectType) {\r\n        super();\r\n        this._objectType = objectType;\r\n        this._objectID = GFXObject._idTable[ObjectType.UNKNOWN]++;\r\n        this._typedID = GFXObject._idTable[objectType]++;\r\n    }\r\n}\r\n\r\nexport interface ISwapchainTextureInfo {\r\n    swapchain: Swapchain;\r\n    format: Format;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport enum AttributeName {\r\n    ATTR_POSITION = 'a_position',\r\n    ATTR_NORMAL = 'a_normal',\r\n    ATTR_TANGENT = 'a_tangent',\r\n    ATTR_BITANGENT = 'a_bitangent',\r\n    ATTR_WEIGHTS = 'a_weights',\r\n    ATTR_JOINTS = 'a_joints',\r\n    ATTR_COLOR = 'a_color',\r\n    ATTR_COLOR1 = 'a_color1',\r\n    ATTR_COLOR2 = 'a_color2',\r\n    ATTR_TEX_COORD = 'a_texCoord',\r\n    ATTR_TEX_COORD1 = 'a_texCoord1',\r\n    ATTR_TEX_COORD2 = 'a_texCoord2',\r\n    ATTR_TEX_COORD3 = 'a_texCoord3',\r\n    ATTR_TEX_COORD4 = 'a_texCoord4',\r\n    ATTR_TEX_COORD5 = 'a_texCoord5',\r\n    ATTR_TEX_COORD6 = 'a_texCoord6',\r\n    ATTR_TEX_COORD7 = 'a_texCoord7',\r\n    ATTR_TEX_COORD8 = 'a_texCoord8',\r\n    ATTR_BATCH_ID = 'a_batch_id',\r\n    ATTR_BATCH_UV = 'a_batch_uv',\r\n}\r\n\r\nfunction createFormatInfo (\r\n    name: string,\r\n    size?: number,\r\n    count?: number,\r\n    type?: FormatType,\r\n    hasAlpha?: boolean,\r\n    hasDepth?: boolean,\r\n    hasStencil?: boolean,\r\n    isCompressed?: boolean,\r\n): FormatInfo {\r\n    return new FormatInfo(name, size, count, type, hasAlpha, hasDepth, hasStencil, isCompressed);\r\n}\r\n\r\nfunction createFormatInfo_ASTC_SRGBA (nameSuffix: string): FormatInfo {\r\n    return new FormatInfo(`ASTC_SRGBA_${nameSuffix}`, 1, 4, FormatType.UNORM, true, false, false, true);\r\n}\r\n\r\nfunction createFormatInfo_ASTC_RGBA (nameSuffix: string): FormatInfo {\r\n    return new FormatInfo(`ASTC_RGBA_${nameSuffix}`, 1, 4, FormatType.UNORM, true, false, false, true);\r\n}\r\n\r\nexport const FormatInfos = Object.freeze([\r\n    createFormatInfo('UNKNOWN'),\r\n\r\n    createFormatInfo('A8', 1, 1, FormatType.UNORM, true),\r\n    createFormatInfo('L8', 1, 1, FormatType.UNORM),\r\n    createFormatInfo('LA8', 1, 2, FormatType.UNORM, true),\r\n\r\n    createFormatInfo('R8', 1, 1, FormatType.UNORM),\r\n    createFormatInfo('R8SN', 1, 1, FormatType.SNORM),\r\n    createFormatInfo('R8UI', 1, 1, FormatType.UINT),\r\n    createFormatInfo('R8I', 1, 1, FormatType.INT),\r\n    createFormatInfo('R16F', 2, 1, FormatType.FLOAT),\r\n    createFormatInfo('R16UI', 2, 1, FormatType.UINT),\r\n    createFormatInfo('R16I', 2, 1, FormatType.INT),\r\n    createFormatInfo('R32F', 4, 1, FormatType.FLOAT),\r\n    createFormatInfo('R32UI', 4, 1, FormatType.UINT),\r\n    createFormatInfo('R32I', 4, 1, FormatType.INT),\r\n\r\n    createFormatInfo('RG8', 2, 2, FormatType.UNORM),\r\n    createFormatInfo('RG8SN', 2, 2, FormatType.SNORM),\r\n    createFormatInfo('RG8UI', 2, 2, FormatType.UINT),\r\n    createFormatInfo('RG8I', 2, 2, FormatType.INT),\r\n    createFormatInfo('RG16F', 4, 2, FormatType.FLOAT),\r\n    createFormatInfo('RG16UI', 4, 2, FormatType.UINT),\r\n    createFormatInfo('RG16I', 4, 2, FormatType.INT),\r\n    createFormatInfo('RG32F', 8, 2, FormatType.FLOAT),\r\n    createFormatInfo('RG32UI', 8, 2, FormatType.UINT),\r\n    createFormatInfo('RG32I', 8, 2, FormatType.INT),\r\n\r\n    createFormatInfo('RGB8', 3, 3, FormatType.UNORM),\r\n    createFormatInfo('SRGB8', 3, 3, FormatType.UNORM),\r\n    createFormatInfo('RGB8SN', 3, 3, FormatType.SNORM),\r\n    createFormatInfo('RGB8UI', 3, 3, FormatType.UINT),\r\n    createFormatInfo('RGB8I', 3, 3, FormatType.INT),\r\n    createFormatInfo('RGB16F', 6, 3, FormatType.FLOAT),\r\n    createFormatInfo('RGB16UI', 6, 3, FormatType.UINT),\r\n    createFormatInfo('RGB16I', 6, 3, FormatType.INT),\r\n    createFormatInfo('RGB32F', 12, 3, FormatType.FLOAT),\r\n    createFormatInfo('RGB32UI', 12, 3, FormatType.UINT),\r\n    createFormatInfo('RGB32I', 12, 3, FormatType.INT),\r\n\r\n    createFormatInfo('RGBA8', 4, 4, FormatType.UNORM, true),\r\n    createFormatInfo('BGRA8', 4, 4, FormatType.UNORM, true),\r\n    createFormatInfo('SRGB8_A8', 4, 4, FormatType.UNORM, true),\r\n    createFormatInfo('RGBA8SN', 4, 4, FormatType.SNORM, true),\r\n    createFormatInfo('RGBA8UI', 4, 4, FormatType.UINT, true),\r\n    createFormatInfo('RGBA8I', 4, 4, FormatType.INT, true),\r\n    createFormatInfo('RGBA16F', 8, 4, FormatType.FLOAT, true),\r\n    createFormatInfo('RGBA16UI', 8, 4, FormatType.UINT, true),\r\n    createFormatInfo('RGBA16I', 8, 4, FormatType.INT, true),\r\n    createFormatInfo('RGBA32F', 16, 4, FormatType.FLOAT, true),\r\n    createFormatInfo('RGBA32UI', 16, 4, FormatType.UINT, true),\r\n    createFormatInfo('RGBA32I', 16, 4, FormatType.INT, true),\r\n\r\n    createFormatInfo('R5G6B5', 2, 3, FormatType.UNORM),\r\n    createFormatInfo('R11G11B10F', 4, 3, FormatType.FLOAT),\r\n    createFormatInfo('RGB5A1', 2, 4, FormatType.UNORM, true),\r\n    createFormatInfo('RGBA4', 2, 4, FormatType.UNORM, true),\r\n    createFormatInfo('RGB10A2', 2, 4, FormatType.UNORM, true),\r\n    createFormatInfo('RGB10A2UI', 2, 4, FormatType.UINT, true),\r\n    createFormatInfo('RGB9E5', 2, 4, FormatType.FLOAT, true),\r\n\r\n    createFormatInfo('DEPTH', 4, 1, FormatType.FLOAT, false, true),\r\n    createFormatInfo('DEPTH_STENCIL', 5, 2, FormatType.FLOAT, false, true, true),\r\n\r\n    createFormatInfo('BC1', 1, 3, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('BC1_ALPHA', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('BC1_SRGB', 1, 3, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('BC1_SRGB_ALPHA', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('BC2', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('BC2_SRGB', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('BC3', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('BC3_SRGB', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('BC4', 1, 1, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('BC4_SNORM', 1, 1, FormatType.SNORM, false, false, false, true),\r\n    createFormatInfo('BC5', 1, 2, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('BC5_SNORM', 1, 2, FormatType.SNORM, false, false, false, true),\r\n    createFormatInfo('BC6H_UF16', 1, 3, FormatType.UFLOAT, false, false, false, true),\r\n    createFormatInfo('BC6H_SF16', 1, 3, FormatType.FLOAT, false, false, false, true),\r\n    createFormatInfo('BC7', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('BC7_SRGB', 1, 4, FormatType.UNORM, true, false, false, true),\r\n\r\n    createFormatInfo('ETC_RGB8', 1, 3, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('ETC2_RGB8', 1, 3, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('ETC2_SRGB8', 1, 3, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('ETC2_RGB8_A1', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('ETC2_SRGB8_A1', 1, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('ETC2_RGBA8', 2, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('ETC2_SRGB8_A8', 2, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('EAC_R11', 1, 1, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('EAC_R11SN', 1, 1, FormatType.SNORM, false, false, false, true),\r\n    createFormatInfo('EAC_RG11', 2, 2, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('EAC_RG11SN', 2, 2, FormatType.SNORM, false, false, false, true),\r\n\r\n    createFormatInfo('PVRTC_RGB2', 2, 3, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('PVRTC_RGBA2', 2, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('PVRTC_RGB4', 2, 3, FormatType.UNORM, false, false, false, true),\r\n    createFormatInfo('PVRTC_RGBA4', 2, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('PVRTC2_2BPP', 2, 4, FormatType.UNORM, true, false, false, true),\r\n    createFormatInfo('PVRTC2_4BPP', 2, 4, FormatType.UNORM, true, false, false, true),\r\n\r\n    createFormatInfo_ASTC_RGBA('4x4'),\r\n    createFormatInfo_ASTC_RGBA('5x4'),\r\n    createFormatInfo_ASTC_RGBA('5x5'),\r\n    createFormatInfo_ASTC_RGBA('6x5'),\r\n    createFormatInfo_ASTC_RGBA('6x6'),\r\n    createFormatInfo_ASTC_RGBA('8x5'),\r\n    createFormatInfo_ASTC_RGBA('8x6'),\r\n    createFormatInfo_ASTC_RGBA('8x8'),\r\n    createFormatInfo_ASTC_RGBA('10x5'),\r\n    createFormatInfo_ASTC_RGBA('10x6'),\r\n    createFormatInfo_ASTC_RGBA('10x8'),\r\n    createFormatInfo_ASTC_RGBA('10x10'),\r\n    createFormatInfo_ASTC_RGBA('12x10'),\r\n    createFormatInfo_ASTC_RGBA('12x12'),\r\n\r\n    createFormatInfo_ASTC_SRGBA('4x4'),\r\n    createFormatInfo_ASTC_SRGBA('5x4'),\r\n    createFormatInfo_ASTC_SRGBA('5x5'),\r\n    createFormatInfo_ASTC_SRGBA('6x5'),\r\n    createFormatInfo_ASTC_SRGBA('6x6'),\r\n    createFormatInfo_ASTC_SRGBA('8x5'),\r\n    createFormatInfo_ASTC_SRGBA('8x6'),\r\n    createFormatInfo_ASTC_SRGBA('8x8'),\r\n    createFormatInfo_ASTC_SRGBA('10x5'),\r\n    createFormatInfo_ASTC_SRGBA('10x6'),\r\n    createFormatInfo_ASTC_SRGBA('10x8'),\r\n    createFormatInfo_ASTC_SRGBA('10x10'),\r\n    createFormatInfo_ASTC_SRGBA('12x10'),\r\n    createFormatInfo_ASTC_SRGBA('12x12'),\r\n]);\r\n\r\nexport const DESCRIPTOR_BUFFER_TYPE = DescriptorType.UNIFORM_BUFFER | DescriptorType.DYNAMIC_UNIFORM_BUFFER\r\n    | DescriptorType.STORAGE_BUFFER | DescriptorType.DYNAMIC_STORAGE_BUFFER;\r\n\r\nexport const DESCRIPTOR_SAMPLER_TYPE = DescriptorType.SAMPLER_TEXTURE | DescriptorType.SAMPLER | DescriptorType.TEXTURE\r\n    | DescriptorType.STORAGE_IMAGE | DescriptorType.INPUT_ATTACHMENT;\r\n\r\nexport const DESCRIPTOR_DYNAMIC_TYPE = DescriptorType.DYNAMIC_STORAGE_BUFFER | DescriptorType.DYNAMIC_UNIFORM_BUFFER;\r\n\r\nexport const DESCRIPTOR_STORAGE_BUFFER_TYPE = DescriptorType.STORAGE_BUFFER | DescriptorType.DYNAMIC_STORAGE_BUFFER;\r\n\r\nexport const DRAW_INFO_SIZE = 28;\r\n\r\nexport type BufferSource = ArrayBuffer | IndirectBuffer;\r\n\r\nexport function IsPowerOf2 (x: number): boolean {\r\n    return x > 0 && (x & (x - 1)) === 0;\r\n}\r\n\r\nconst ceil = Math.ceil;\r\n\r\n/**\r\n  * @en Get memory size of the specified fomat.\r\n  * @zh 获取指定格式对应的内存大小。\r\n  * @param format The target format.\r\n  * @param width The target width.\r\n  * @param height The target height.\r\n  * @param depth The target depth.\r\n  */\r\nexport function FormatSize (format: Format, width: number, height: number, depth: number): number {\r\n    if (!FormatInfos[format].isCompressed) {\r\n        return (width * height * depth * FormatInfos[format].size);\r\n    } else {\r\n        switch (format) {\r\n        case Format.BC1:\r\n        case Format.BC1_ALPHA:\r\n        case Format.BC1_SRGB:\r\n        case Format.BC1_SRGB_ALPHA:\r\n            return ceil(width / 4) * ceil(height / 4) * 8 * depth;\r\n        case Format.BC2:\r\n        case Format.BC2_SRGB:\r\n        case Format.BC3:\r\n        case Format.BC3_SRGB:\r\n        case Format.BC4:\r\n        case Format.BC4_SNORM:\r\n        case Format.BC6H_SF16:\r\n        case Format.BC6H_UF16:\r\n        case Format.BC7:\r\n        case Format.BC7_SRGB:\r\n            return ceil(width / 4) * ceil(height / 4) * 16 * depth;\r\n        case Format.BC5:\r\n        case Format.BC5_SNORM:\r\n            return ceil(width / 4) * ceil(height / 4) * 32 * depth;\r\n\r\n        case Format.ETC_RGB8:\r\n        case Format.ETC2_RGB8:\r\n        case Format.ETC2_SRGB8:\r\n        case Format.ETC2_RGB8_A1:\r\n        case Format.EAC_R11:\r\n        case Format.EAC_R11SN:\r\n            return ceil(width / 4) * ceil(height / 4) * 8 * depth;\r\n        case Format.ETC2_RGBA8:\r\n        case Format.ETC2_SRGB8_A1:\r\n        case Format.EAC_RG11:\r\n        case Format.EAC_RG11SN:\r\n            return ceil(width / 4) * ceil(height / 4) * 16 * depth;\r\n\r\n        case Format.PVRTC_RGB2:\r\n        case Format.PVRTC_RGBA2:\r\n        case Format.PVRTC2_2BPP:\r\n            return ceil(width / 8) * ceil(height / 4) * 8 * depth;\r\n\r\n        case Format.PVRTC_RGB4:\r\n        case Format.PVRTC_RGBA4:\r\n        case Format.PVRTC2_4BPP:\r\n            return ceil(width / 4) * ceil(height / 4) * 8 * depth;\r\n\r\n        case Format.ASTC_RGBA_4X4:\r\n        case Format.ASTC_SRGBA_4X4:\r\n            return ceil(width / 4) * ceil(height / 4) * 16 * depth;\r\n        case Format.ASTC_RGBA_5X4:\r\n        case Format.ASTC_SRGBA_5X4:\r\n            return ceil(width / 5) * ceil(height / 4) * 16 * depth;\r\n        case Format.ASTC_RGBA_5X5:\r\n        case Format.ASTC_SRGBA_5X5:\r\n            return ceil(width / 5) * ceil(height / 5) * 16 * depth;\r\n        case Format.ASTC_RGBA_6X5:\r\n        case Format.ASTC_SRGBA_6X5:\r\n            return ceil(width / 6) * ceil(height / 5) * 16 * depth;\r\n        case Format.ASTC_RGBA_6X6:\r\n        case Format.ASTC_SRGBA_6X6:\r\n            return ceil(width / 6) * ceil(height / 6) * 16 * depth;\r\n        case Format.ASTC_RGBA_8X5:\r\n        case Format.ASTC_SRGBA_8X5:\r\n            return ceil(width / 8) * ceil(height / 5) * 16 * depth;\r\n        case Format.ASTC_RGBA_8X6:\r\n        case Format.ASTC_SRGBA_8X6:\r\n            return ceil(width / 8) * ceil(height / 6) * 16 * depth;\r\n        case Format.ASTC_RGBA_8X8:\r\n        case Format.ASTC_SRGBA_8X8:\r\n            return ceil(width / 8) * ceil(height / 8) * 16 * depth;\r\n        case Format.ASTC_RGBA_10X5:\r\n        case Format.ASTC_SRGBA_10X5:\r\n            return ceil(width / 10) * ceil(height / 5) * 16 * depth;\r\n        case Format.ASTC_RGBA_10X6:\r\n        case Format.ASTC_SRGBA_10X6:\r\n            return ceil(width / 10) * ceil(height / 6) * 16 * depth;\r\n        case Format.ASTC_RGBA_10X8:\r\n        case Format.ASTC_SRGBA_10X8:\r\n            return ceil(width / 10) * ceil(height / 8) * 16 * depth;\r\n        case Format.ASTC_RGBA_10X10:\r\n        case Format.ASTC_SRGBA_10X10:\r\n            return ceil(width / 10) * ceil(height / 10) * 16 * depth;\r\n        case Format.ASTC_RGBA_12X10:\r\n        case Format.ASTC_SRGBA_12X10:\r\n            return ceil(width / 12) * ceil(height / 10) * 16 * depth;\r\n        case Format.ASTC_RGBA_12X12:\r\n        case Format.ASTC_SRGBA_12X12:\r\n            return ceil(width / 12) * ceil(height / 12) * 16 * depth;\r\n\r\n        default: {\r\n            return 0;\r\n        }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n  * @en Get memory size of the specified surface.\r\n  * @zh GFX 格式表面内存大小。\r\n  * @param format The target format.\r\n  * @param width The target width.\r\n  * @param height The target height.\r\n  * @param depth The target depth.\r\n  * @param mips The target mip levels.\r\n  */\r\nexport function FormatSurfaceSize (\r\n    format: Format,\r\n    width: number,\r\n    height: number,\r\n    depth: number,\r\n    mips: number,\r\n): number {\r\n    let size = 0;\r\n\r\n    for (let i = 0; i < mips; ++i) {\r\n        size += FormatSize(format, width, height, depth);\r\n        width = Math.max(width >> 1, 1);\r\n        height = Math.max(height >> 1, 1);\r\n    }\r\n\r\n    return size;\r\n}\r\n\r\nconst _type2size = [\r\n    0,  // UNKNOWN\r\n    4,  // BOOL\r\n    8,  // BOOL2\r\n    12, // BOOL3\r\n    16, // BOOL4\r\n    4,  // INT\r\n    8,  // INT2\r\n    12, // INT3\r\n    16, // INT4\r\n    4,  // UINT\r\n    8,  // UINT2\r\n    12, // UINT3\r\n    16, // UINT4\r\n    4,  // FLOAT\r\n    8,  // FLOAT2\r\n    12, // FLOAT3\r\n    16, // FLOAT4\r\n    16, // MAT2\r\n    24, // MAT2X3\r\n    32, // MAT2X4\r\n    24, // MAT3X2\r\n    36, // MAT3\r\n    48, // MAT3X4\r\n    32, // MAT4X2\r\n    48, // MAT4X3\r\n    64, // MAT4\r\n    4,  // SAMPLER1D\r\n    4,  // SAMPLER1D_ARRAY\r\n    4,  // SAMPLER2D\r\n    4,  // SAMPLER2D_ARRAY\r\n    4,  // SAMPLER3D\r\n    4,  // SAMPLER_CUBE\r\n];\r\n\r\n/**\r\n  * @en Get the memory size of the specified type.\r\n  * @zh 得到 GFX 数据类型的大小。\r\n  * @param type The target type.\r\n  */\r\nexport function GetTypeSize (type: Type): number {\r\n    return _type2size[type] || 0;\r\n}\r\n\r\nexport function getTypedArrayConstructor (info: FormatInfo): TypedArrayConstructor {\r\n    if (info.isCompressed) {\r\n        return Uint8Array;\r\n    }\r\n    const stride = info.size / info.count;\r\n    switch (info.type) {\r\n    case FormatType.UNORM:\r\n    case FormatType.UINT: {\r\n        switch (stride) {\r\n        case 1: return Uint8Array;\r\n        case 2: return Uint16Array;\r\n        case 4: return Uint32Array;\r\n        default:\r\n            return Uint8Array;\r\n        }\r\n    }\r\n    case FormatType.SNORM:\r\n    case FormatType.INT: {\r\n        switch (stride) {\r\n        case 1: return Int8Array;\r\n        case 2: return Int16Array;\r\n        case 4: return Int32Array;\r\n        default:\r\n            return Int8Array;\r\n        }\r\n    }\r\n    case FormatType.FLOAT: {\r\n        switch (stride) {\r\n        case 2: return Uint16Array;\r\n        case 4: return Float32Array;\r\n        default: return Float32Array;\r\n        }\r\n    }\r\n    default:\r\n    }\r\n    return Float32Array;\r\n}\r\n\r\nexport interface FormatAlignment {\r\n    width: number,  // default 1\r\n    height: number, // default 1\r\n}\r\n\r\nexport function formatAlignment (format: Format): FormatAlignment {\r\n    switch (format) {\r\n    case Format.BC1:\r\n    case Format.BC1_ALPHA:\r\n    case Format.BC1_SRGB:\r\n    case Format.BC1_SRGB_ALPHA:\r\n    case Format.BC2:\r\n    case Format.BC2_SRGB:\r\n    case Format.BC3:\r\n    case Format.BC3_SRGB:\r\n    case Format.BC4:\r\n    case Format.BC4_SNORM:\r\n    case Format.BC6H_SF16:\r\n    case Format.BC6H_UF16:\r\n    case Format.BC7:\r\n    case Format.BC7_SRGB:\r\n    case Format.BC5:\r\n    case Format.BC5_SNORM:\r\n    case Format.ETC_RGB8:\r\n    case Format.ETC2_RGB8:\r\n    case Format.ETC2_SRGB8:\r\n    case Format.ETC2_RGB8_A1:\r\n    case Format.EAC_R11:\r\n    case Format.EAC_R11SN:\r\n    case Format.ETC2_RGBA8:\r\n    case Format.ETC2_SRGB8_A1:\r\n    case Format.EAC_RG11:\r\n    case Format.EAC_RG11SN:\r\n        return { width: 4, height: 4 };\r\n\r\n    case Format.PVRTC_RGB2:\r\n    case Format.PVRTC_RGBA2:\r\n    case Format.PVRTC2_2BPP:\r\n        return { width: 8, height: 4 };\r\n\r\n    case Format.PVRTC_RGB4:\r\n    case Format.PVRTC_RGBA4:\r\n    case Format.PVRTC2_4BPP:\r\n        return { width: 4, height: 4 };\r\n\r\n    case Format.ASTC_RGBA_4X4:\r\n    case Format.ASTC_SRGBA_4X4:\r\n        return { width: 4, height: 4 };\r\n    case Format.ASTC_RGBA_5X4:\r\n    case Format.ASTC_SRGBA_5X4:\r\n        return { width: 5, height: 4 };\r\n    case Format.ASTC_RGBA_5X5:\r\n    case Format.ASTC_SRGBA_5X5:\r\n        return { width: 5, height: 5 };\r\n    case Format.ASTC_RGBA_6X5:\r\n    case Format.ASTC_SRGBA_6X5:\r\n        return { width: 6, height: 5 };\r\n    case Format.ASTC_RGBA_6X6:\r\n    case Format.ASTC_SRGBA_6X6:\r\n        return { width: 6, height: 6 };\r\n    case Format.ASTC_RGBA_8X5:\r\n    case Format.ASTC_SRGBA_8X5:\r\n        return { width: 8, height: 5 };\r\n    case Format.ASTC_RGBA_8X6:\r\n    case Format.ASTC_SRGBA_8X6:\r\n        return { width: 8, height: 6 };\r\n    case Format.ASTC_RGBA_8X8:\r\n    case Format.ASTC_SRGBA_8X8:\r\n        return { width: 8, height: 8 };\r\n    case Format.ASTC_RGBA_10X5:\r\n    case Format.ASTC_SRGBA_10X5:\r\n        return { width: 10, height: 5 };\r\n    case Format.ASTC_RGBA_10X6:\r\n    case Format.ASTC_SRGBA_10X6:\r\n        return { width: 10, height: 6 };\r\n    case Format.ASTC_RGBA_10X8:\r\n    case Format.ASTC_SRGBA_10X8:\r\n        return { width: 10, height: 8 };\r\n    case Format.ASTC_RGBA_10X10:\r\n    case Format.ASTC_SRGBA_10X10:\r\n        return { width: 10, height: 10 };\r\n    case Format.ASTC_RGBA_12X10:\r\n    case Format.ASTC_SRGBA_12X10:\r\n        return { width: 12, height: 10 };\r\n    case Format.ASTC_RGBA_12X12:\r\n    case Format.ASTC_SRGBA_12X12:\r\n        return { width: 12, height: 12 };\r\n    default:\r\n        return { width: 1, height: 1 };\r\n    }\r\n}\r\n\r\nexport function alignTo (size: number, alignment: number): number {\r\n    return ceil(size / alignment) * alignment;\r\n}\r\n\r\ndeclare interface GPUTexture {}\r\n\r\nexport type TextureHandle = GPUTexture | number;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport {\r\n    BufferFlagBit,\r\n    BufferFlags,\r\n    BufferUsage,\r\n    BufferUsageBit,\r\n    MemoryUsage,\r\n    MemoryUsageBit,\r\n    GFXObject,\r\n    ObjectType,\r\n    BufferInfo,\r\n    BufferViewInfo,\r\n    BufferSource,\r\n} from './define';\r\n\r\n/**\r\n * @en GFX buffer.\r\n * @zh GFX 缓冲。\r\n */\r\nexport abstract class Buffer extends GFXObject {\r\n    /**\r\n     * @en Usage type of the buffer.\r\n     * @zh 缓冲使用方式。\r\n     */\r\n    get usage (): BufferUsage {\r\n        return this._usage;\r\n    }\r\n\r\n    /**\r\n     * @en Memory usage of the buffer.\r\n     * @zh 缓冲的内存使用方式。\r\n     */\r\n    get memUsage (): MemoryUsage {\r\n        return this._memUsage;\r\n    }\r\n\r\n    /**\r\n     * @en Size of the buffer.\r\n     * @zh 缓冲大小。\r\n     */\r\n    get size (): number {\r\n        return this._size;\r\n    }\r\n\r\n    /**\r\n     * @en Stride of the buffer.\r\n     * @zh 缓冲步长。\r\n     */\r\n    get stride (): number {\r\n        return this._stride;\r\n    }\r\n\r\n    /**\r\n     * @en Count of the buffer wrt. stride.\r\n     * @zh 缓冲条目数量。\r\n     */\r\n    get count (): number {\r\n        return this._count;\r\n    }\r\n\r\n    get flags (): BufferFlags {\r\n        return this._flags;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _usage: BufferUsage = BufferUsageBit.NONE;\r\n    /** @mangle */\r\n    protected _memUsage: MemoryUsage = MemoryUsageBit.NONE;\r\n    /** @mangle */\r\n    protected _size = 0;\r\n    /** @mangle */\r\n    protected _stride = 1;\r\n    /** @mangle */\r\n    protected _count = 0;\r\n    /** @mangle */\r\n    protected _flags: BufferFlags = BufferFlagBit.NONE;\r\n    /** @mangle */\r\n    protected _isBufferView = false;\r\n\r\n    constructor () {\r\n        super(ObjectType.BUFFER);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<BufferInfo> | Readonly<BufferViewInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n\r\n    /**\r\n     * @en Resize the buffer.\r\n     * @zh 重置缓冲大小。\r\n     * @param size The new buffer size.\r\n     */\r\n    public abstract resize (size: number): void;\r\n\r\n    /**\r\n     * @en Update the buffer data.\r\n     * @zh 更新缓冲内容。\r\n     * @param buffer The new buffer data.\r\n     * @param size Size in bytes to be updated.\r\n     */\r\n    public abstract update (buffer: Readonly<BufferSource>, size?: number): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Buffer } from './buffer';\r\nimport { DescriptorSet } from './descriptor-set';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { InputAssembler } from './input-assembler';\r\nimport { PipelineState } from './pipeline-state';\r\nimport { Queue } from './queue';\r\nimport { RenderPass } from './render-pass';\r\nimport { Texture } from './texture';\r\nimport {\r\n    GFXObject,\r\n    ObjectType,\r\n    StencilFace,\r\n    CommandBufferType,\r\n    CommandBufferInfo,\r\n    BufferTextureCopy, Color, Rect, Viewport, DrawInfo, Filter, TextureBlit,\r\n} from './define';\r\nimport { GeneralBarrier } from './states/general-barrier';\r\nimport { TextureBarrier } from './states/texture-barrier';\r\nimport { BufferBarrier } from './states/buffer-barrier';\r\n\r\n/**\r\n * @en GFX command buffer.\r\n * @zh GFX 命令缓冲。\r\n */\r\n\r\nexport abstract class CommandBuffer extends GFXObject {\r\n    /**\r\n     * @en Type of the command buffer.\r\n     * @zh 命令缓冲类型。\r\n     */\r\n    get type (): CommandBufferType {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * @en Type of the command buffer.\r\n     * @zh 命令缓冲类型。\r\n     */\r\n    get queue (): Queue {\r\n        return this._queue!;\r\n    }\r\n\r\n    /**\r\n     * @en Number of draw calls currently recorded.\r\n     * @zh 绘制调用次数。\r\n     */\r\n    get numDrawCalls (): number {\r\n        return this._numDrawCalls;\r\n    }\r\n\r\n    /**\r\n     * @en Number of instances currently recorded.\r\n     * @zh 绘制 Instance 数量。\r\n     */\r\n    get numInstances (): number {\r\n        return this._numInstances;\r\n    }\r\n\r\n    /**\r\n     * @en Number of triangles currently recorded.\r\n     * @zh 绘制三角形数量。\r\n     */\r\n    get numTris (): number {\r\n        return this._numTris;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _queue: Queue | null = null;\r\n    /** @mangle */\r\n    protected _type: CommandBufferType = CommandBufferType.PRIMARY;\r\n    /** @mangle */\r\n    protected _numDrawCalls = 0;\r\n    /** @mangle */\r\n    protected _numInstances = 0;\r\n    /** @mangle */\r\n    protected _numTris = 0;\r\n\r\n    constructor () {\r\n        super(ObjectType.COMMAND_BUFFER);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<CommandBufferInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n\r\n    /**\r\n     * @en Begin recording commands.\r\n     * @zh 开始记录命令。\r\n     * @param renderPass [Secondary Command Buffer Only] The render pass the subsequent commands will be executed in\r\n     * @param subpass [Secondary Command Buffer Only] The subpass the subsequent commands will be executed in\r\n     * @param frameBuffer [Secondary Command Buffer Only, Optional] The framebuffer to be used in the subpass\r\n     */\r\n    public abstract begin (renderPass?: RenderPass, subpass?: number, frameBuffer?: Framebuffer): void;\r\n\r\n    /**\r\n     * @en End recording commands.\r\n     * @zh 结束记录命令。\r\n     */\r\n    public abstract end (): void;\r\n\r\n    /**\r\n     * @en Begin render pass.\r\n     * @zh 开始 RenderPass。\r\n     * @param framebuffer The frame buffer used.\r\n     * @param renderArea The target render area.\r\n     * @param clearFlag The clear flags.\r\n     * @param clearColors The clearing colors.\r\n     * @param clearDepth The clearing depth.\r\n     * @param clearStencil The clearing stencil.\r\n     */\r\n    public abstract beginRenderPass (renderPass: RenderPass, framebuffer: Framebuffer,\r\n        renderArea: Readonly<Rect>, clearColors: Readonly<Color[]>, clearDepth: number, clearStencil: number): void;\r\n\r\n    /**\r\n     * @en End render pass.\r\n     * @zh 结束 RenderPass。\r\n     */\r\n    public abstract endRenderPass (): void;\r\n\r\n    /**\r\n     * @en Bind pipeline state.\r\n     * @zh 绑定 GFX 管线状态。\r\n     * @param pipelineState The pipeline state to be bound.\r\n     */\r\n    public abstract bindPipelineState (pipelineState: PipelineState): void;\r\n\r\n    /**\r\n     * @en Bind a descriptor set. Note that the corresponding PiplieneState has to be bound first\r\n     * before calling this function, or the dynamic offset specified may be invalidated.\r\n     * @zh 绑定 GFX 描述符集。注意在调用此函数前，必须先绑定对应的 PipelineState，否则 dynamic offset 可能无效。\r\n     * @param set The target descriptor set index.\r\n     * @param descriptorSet The descriptor set to be bound.\r\n     * @param dynamicOffsets The offset numbers for dynamic bindings.\r\n     */\r\n    public abstract bindDescriptorSet (set: number, descriptorSet: DescriptorSet, dynamicOffsets?: Readonly<number[]>): void;\r\n\r\n    /**\r\n     * @en Bind input assembler.\r\n     * @zh 绑定 GFX 输入汇集器。\r\n     * @param inputAssembler The input assembler to be bound.\r\n     */\r\n    public abstract bindInputAssembler (inputAssembler: InputAssembler): void;\r\n\r\n    /**\r\n     * @en Set viewport.\r\n     * @zh 设置视口。\r\n     * @param viewport The new viewport.\r\n     */\r\n    public abstract setViewport (viewport: Readonly<Viewport>): void;\r\n\r\n    /**\r\n     * @en Set scissor range.\r\n     * @zh 设置剪裁区域。\r\n     * @param scissor The new scissor range.\r\n     */\r\n    public abstract setScissor (scissor: Readonly<Rect>): void;\r\n\r\n    /**\r\n     * @en Set line width.\r\n     * @zh 设置线宽。\r\n     * @param lineWidth The new line width.\r\n     */\r\n    public abstract setLineWidth (lineWidth: number): void;\r\n\r\n    /**\r\n     * @en Set depth bias.\r\n     * @zh 设置深度偏移。\r\n     * @param depthBiasConstantFactor The new depth bias factor.\r\n     * @param depthBiasClamp The new depth bias clamp threshold.\r\n     * @param depthBiasSlopeFactor  The new depth bias slope factor.\r\n     */\r\n    public abstract setDepthBias (depthBiasConstantFactor: number, depthBiasClamp: number, depthBiasSlopeFactor: number): void;\r\n\r\n    /**\r\n     * @en Set blend constants.\r\n     * @zh 设置混合因子。\r\n     * @param blendConstants The new blend constants.\r\n     */\r\n    public abstract setBlendConstants (blendConstants: Readonly<Color>): void;\r\n\r\n    /**\r\n     * @en Set depth bound.\r\n     * @zh 设置深度边界。\r\n     * @param minDepthBounds The new minimum depth bound.\r\n     * @param maxDepthBounds The new maximum depth bound.\r\n     */\r\n    public abstract setDepthBound (minDepthBounds: number, maxDepthBounds: number): void;\r\n\r\n    /**\r\n     * @en Set stencil write mask.\r\n     * @zh 设置模板写掩码。\r\n     * @param face The effective triangle face.\r\n     * @param writeMask The new stencil write mask.\r\n     */\r\n    public abstract setStencilWriteMask (face: StencilFace, writeMask: number): void;\r\n\r\n    /**\r\n     * @en Set stencil compare mask.\r\n     * @zh 设置模板比较掩码。\r\n     * @param face The effective triangle face.\r\n     * @param reference The new stencil reference constant.\r\n     * @param compareMask The new stencil read mask.\r\n     */\r\n    public abstract setStencilCompareMask (face: StencilFace, reference: number, compareMask: number): void;\r\n\r\n    /**\r\n     * @en Draw the specified primitives.\r\n     * @zh 绘制。\r\n     * @param infoOrAssembler The draw call information.\r\n     */\r\n    public abstract draw (infoOrAssembler: Readonly<DrawInfo> | Readonly<InputAssembler>): void;\r\n\r\n    /**\r\n     * @en Update buffer.\r\n     * @zh 更新缓冲。\r\n     * @param buffer The buffer to be updated.\r\n     * @param data The source data.\r\n     * @param size Size in bytes to be updated.\r\n     */\r\n    public abstract updateBuffer (buffer: Buffer, data: Readonly<ArrayBuffer>, size?: number): void;\r\n\r\n    /**\r\n     * @en Copy buffer to texture.\r\n     * @zh 拷贝缓冲到纹理。\r\n     * @param srcBuff The buffer to be copied.\r\n     * @param dstTex The texture to copy to.\r\n     * @param dstLayout The target texture layout.\r\n     * @param regions The region descriptions.\r\n     */\r\n    public abstract copyBuffersToTexture (buffers: Readonly<ArrayBufferView[]>, texture: Texture, regions: Readonly<BufferTextureCopy[]>): void;\r\n\r\n    /**\r\n     * @en Execute specified command buffers.\r\n     * @zh 执行一组命令缓冲。\r\n     * @param cmdBuffs The command buffers to be executed.\r\n     * @param count The number of command buffers to be executed.\r\n     */\r\n    public abstract execute (cmdBuffs: Readonly<CommandBuffer[]>, count: number): void;\r\n\r\n    /**\r\n     * @en Insert pipeline memory barriers.\r\n     * @zh 插入管线内存屏障。\r\n     * @param barrier The global memory barrier to apply.\r\n     * @param textureBarriers The texture memory barriers to apply.\r\n     */\r\n    public abstract pipelineBarrier (barrier: Readonly<GeneralBarrier> | null,\r\n        bufferBarriers?: Readonly<BufferBarrier[]>,\r\n        buffers?: Readonly<Buffer[]>,\r\n        textureBarriers?: Readonly<TextureBarrier[]>,\r\n        textures?: Readonly<Texture[]>): void;\r\n\r\n    /**\r\n     * @en blit data from regions of source texture to regions of destination texture.\r\n     * @zh 将数据从源纹理的区域拷贝到目标纹理的区域。\r\n     *\r\n     * @param srcTexture The source texture.\r\n     * @param dstTexture The destination texture.\r\n     * @param regions The region descriptions.\r\n     * @param filter The filter to use.\r\n     */\r\n    public abstract blitTexture(srcTexture: Readonly<Texture>, dstTexture: Texture, regions: Readonly<TextureBlit []>, filter: Filter): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport {\r\n    API, Feature, MemoryStatus,\r\n    CommandBufferInfo, BufferInfo, BufferViewInfo, TextureInfo, TextureViewInfo, SamplerInfo, DescriptorSetInfo,\r\n    ShaderInfo, InputAssemblerInfo, RenderPassInfo, FramebufferInfo, DescriptorSetLayoutInfo, PipelineLayoutInfo,\r\n    QueueInfo, BufferTextureCopy, DeviceInfo, DeviceCaps, GeneralBarrierInfo, TextureBarrierInfo, BufferBarrierInfo,\r\n    SwapchainInfo, BindingMappingInfo, Format, FormatFeature, TextureType, TextureUsageBit,\r\n    TextureFlagBit, Offset, Extent, SampleCount, TextureSubresLayers, TextureUsage, TextureFlags,\r\n} from './define';\r\nimport { Buffer } from './buffer';\r\nimport { CommandBuffer } from './command-buffer';\r\nimport { DescriptorSet } from './descriptor-set';\r\nimport { DescriptorSetLayout } from './descriptor-set-layout';\r\nimport { PipelineLayout } from './pipeline-layout';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { InputAssembler } from './input-assembler';\r\nimport { PipelineState, PipelineStateInfo } from './pipeline-state';\r\nimport { Queue } from './queue';\r\nimport { RenderPass } from './render-pass';\r\nimport { Sampler } from './states/sampler';\r\nimport { Shader } from './shader';\r\nimport { Texture } from './texture';\r\nimport { GeneralBarrier } from './states/general-barrier';\r\nimport { TextureBarrier } from './states/texture-barrier';\r\nimport { BufferBarrier } from './states/buffer-barrier';\r\nimport { Swapchain } from './swapchain';\r\n\r\n/**\r\n * @en GFX Device.\r\n * @zh GFX 设备。\r\n */\r\nexport abstract class Device {\r\n\r\n    constructor () {}\r\n\r\n    /**\r\n     * @en Current rendering API.\r\n     * @zh 当前 GFX 使用的渲染 API。\r\n     */\r\n    get gfxAPI (): API {\r\n        return this._gfxAPI;\r\n    }\r\n\r\n    /**\r\n     * @en GFX default queue.\r\n     * @zh GFX 默认队列。\r\n     */\r\n    get queue (): Queue {\r\n        return this._queue as Queue;\r\n    }\r\n\r\n    /**\r\n     * @en GFX default command buffer.\r\n     * @zh GFX 默认命令缓冲。\r\n     */\r\n    get commandBuffer (): CommandBuffer {\r\n        return this._cmdBuff as CommandBuffer;\r\n    }\r\n\r\n    /**\r\n     * @en The current format of the swapchain being used.\r\n     * @zh 当前使用的swapchain的格式。\r\n     */\r\n    get swapchainFormat (): Format {\r\n        return this._swapchainFormat;\r\n    }\r\n\r\n    /**\r\n     * @en Renderer description.\r\n     * @zh 渲染器描述。\r\n     */\r\n    get renderer (): string {\r\n        return this._renderer;\r\n    }\r\n\r\n    /**\r\n     * @en Vendor description.\r\n     * @zh 厂商描述。\r\n     */\r\n    get vendor (): string {\r\n        return this._vendor;\r\n    }\r\n\r\n    /**\r\n     * @en Number of draw calls currently recorded.\r\n     * @zh 绘制调用次数。\r\n     */\r\n    get numDrawCalls (): number {\r\n        return this._numDrawCalls;\r\n    }\r\n\r\n    /**\r\n     * @en Number of instances currently recorded.\r\n     * @zh 绘制 Instance 数量。\r\n     */\r\n    get numInstances (): number {\r\n        return this._numInstances;\r\n    }\r\n\r\n    /**\r\n     * @en Number of triangles currently recorded.\r\n     * @zh 渲染三角形数量。\r\n     */\r\n    get numTris (): number {\r\n        return this._numTris;\r\n    }\r\n\r\n    /**\r\n     * @en Total memory size currently allocated.\r\n     * @zh 内存状态。\r\n     */\r\n    get memoryStatus (): MemoryStatus {\r\n        return this._memoryStatus;\r\n    }\r\n\r\n    /**\r\n     * @en Current device capabilities.\r\n     * @zh 当前设备能力数据。\r\n     */\r\n    get capabilities (): DeviceCaps {\r\n        return this._caps;\r\n    }\r\n\r\n    /**\r\n     * @en Current device binding mappings.\r\n     * @zh 当前设备的绑定槽位映射关系。\r\n     */\r\n    get bindingMappingInfo (): BindingMappingInfo {\r\n        return this._bindingMappingInfo;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _gfxAPI = API.UNKNOWN;\r\n    /** @mangle */\r\n    protected _renderer = '';\r\n    /** @mangle */\r\n    protected _vendor = '';\r\n    /** @mangle */\r\n    protected _features = new Array<boolean>(Feature.COUNT);\r\n    /** @mangle */\r\n    protected _formatFeatures = new Array<FormatFeature>(Format.COUNT);\r\n    /** @mangle */\r\n    protected _queue: Queue | null = null;\r\n    /** @mangle */\r\n    protected _cmdBuff: CommandBuffer | null = null;\r\n    /** @mangle */\r\n    protected _numDrawCalls = 0;\r\n    /** @mangle */\r\n    protected _numInstances = 0;\r\n    /** @mangle */\r\n    protected _numTris = 0;\r\n    /** @mangle */\r\n    protected _memoryStatus = new MemoryStatus();\r\n    /** @mangle */\r\n    protected _caps = new DeviceCaps();\r\n    /** @mangle */\r\n    protected _bindingMappingInfo: BindingMappingInfo = new BindingMappingInfo();\r\n    /** @mangle */\r\n    protected _samplers = new Map<number, Sampler>();\r\n    /** @mangle */\r\n    protected _generalBarrierss = new Map<number, GeneralBarrier>();\r\n    /** @mangle */\r\n    protected _textureBarriers = new Map<number, TextureBarrier>();\r\n    /** @mangle */\r\n    protected _bufferBarriers = new Map<number, BufferBarrier>();\r\n    /** @mangle */\r\n    protected _swapchainFormat = Format.RGBA8;\r\n\r\n    /** @mangle */\r\n    public static canvas: HTMLCanvasElement; // Hack for WebGL device initialization process\r\n\r\n    public abstract initialize (info: Readonly<DeviceInfo>): boolean | Promise<boolean>;\r\n\r\n    public abstract destroy (): void;\r\n\r\n    /**\r\n     * @en Acquire next swapchain image.\r\n     * @zh 获取下一个交换链缓冲。\r\n     */\r\n    public abstract acquire (swapchains: Readonly<Swapchain[]>): void;\r\n\r\n    /**\r\n     * @en Present current swapchain image.\r\n     * @zh 上屏当前交换链缓冲。\r\n     */\r\n    public abstract present (): void;\r\n\r\n    /**\r\n     * @en Flush the specified command buffers.\r\n     * @zh 实际录制指定的命令缓冲。\r\n     */\r\n    public abstract flushCommands (cmdBuffs: Readonly<CommandBuffer[]>): void;\r\n\r\n    /**\r\n     * @en Create command buffer.\r\n     * @zh 创建命令缓冲。\r\n     * @param info GFX command buffer description info.\r\n     */\r\n    public abstract createCommandBuffer (info: Readonly<CommandBufferInfo>): CommandBuffer;\r\n\r\n    /**\r\n     * @en Create swapchain.\r\n     * @zh 创建交换链。\r\n     * @param info GFX swapchain description info.\r\n     */\r\n    public abstract createSwapchain (info: Readonly<SwapchainInfo>): Swapchain;\r\n\r\n    /**\r\n     * @en Create buffer.\r\n     * @zh 创建缓冲。\r\n     * @param info GFX buffer description info.\r\n     */\r\n    public abstract createBuffer (info: Readonly<BufferInfo> | BufferViewInfo): Buffer;\r\n\r\n    /**\r\n     * @en Create texture.\r\n     * @zh 创建纹理。\r\n     * @param info GFX texture description info.\r\n     */\r\n    public abstract createTexture (info: Readonly<TextureInfo> | TextureViewInfo): Texture;\r\n\r\n    /**\r\n     * @en Create descriptor sets.\r\n     * @zh 创建描述符集组。\r\n     * @param info GFX descriptor sets description info.\r\n     */\r\n    public abstract createDescriptorSet (info: Readonly<DescriptorSetInfo>): DescriptorSet;\r\n\r\n    /**\r\n     * @en Create shader.\r\n     * @zh 创建着色器。\r\n     * @param info GFX shader description info.\r\n     */\r\n    public abstract createShader (info: Readonly<ShaderInfo>): Shader;\r\n\r\n    /**\r\n     * @en Create input assembler.\r\n     * @zh 创建纹理。\r\n     * @param info GFX input assembler description info.\r\n     */\r\n    public abstract createInputAssembler (info: Readonly<InputAssemblerInfo>): InputAssembler;\r\n\r\n    /**\r\n     * @en Create render pass.\r\n     * @zh 创建渲染过程。\r\n     * @param info GFX render pass description info.\r\n     */\r\n    public abstract createRenderPass (info: Readonly<RenderPassInfo>): RenderPass;\r\n\r\n    /**\r\n     * @en Create frame buffer.\r\n     * @zh 创建帧缓冲。\r\n     * @param info GFX frame buffer description info.\r\n     */\r\n    public abstract createFramebuffer (info: Readonly<FramebufferInfo>): Framebuffer;\r\n\r\n    /**\r\n     * @en Create descriptor set layout.\r\n     * @zh 创建描述符集布局。\r\n     * @param info GFX descriptor set layout description info.\r\n     */\r\n    public abstract createDescriptorSetLayout (info: Readonly<DescriptorSetLayoutInfo>): DescriptorSetLayout;\r\n\r\n    /**\r\n     * @en Create pipeline layout.\r\n     * @zh 创建管线布局。\r\n     * @param info GFX pipeline layout description info.\r\n     */\r\n    public abstract createPipelineLayout (info: Readonly<PipelineLayoutInfo>): PipelineLayout;\r\n\r\n    /**\r\n     * @en Create pipeline state.\r\n     * @zh 创建管线状态。\r\n     * @param info GFX pipeline state description info.\r\n     */\r\n    public abstract createPipelineState (info: Readonly<PipelineStateInfo>): PipelineState;\r\n\r\n    /**\r\n     * @en Create queue.\r\n     * @zh 创建队列。\r\n     * @param info GFX queue description info.\r\n     */\r\n    public abstract createQueue (info: Readonly<QueueInfo>): Queue;\r\n\r\n    /**\r\n     * @en Create sampler.\r\n     * @zh 创建采样器。\r\n     * @param info GFX sampler description info.\r\n     */\r\n    public abstract getSampler (info: Readonly<SamplerInfo>): Sampler;\r\n\r\n    /**\r\n     * @en Get swapchains.\r\n     * @zh 获取交换链列表。\r\n     */\r\n    public abstract getSwapchains (): Readonly<Swapchain[]>;\r\n\r\n    /**\r\n     * @en Create global barrier.\r\n     * @zh 创建全局内存屏障。\r\n     * @param info GFX global barrier description info.\r\n     */\r\n    public abstract getGeneralBarrier (info: Readonly<GeneralBarrierInfo>): GeneralBarrier;\r\n\r\n    /**\r\n     * @en Create texture barrier.\r\n     * @zh 创建贴图内存屏障。\r\n     * @param info GFX texture barrier description info.\r\n     */\r\n    public abstract getTextureBarrier (info: Readonly<TextureBarrierInfo>): TextureBarrier;\r\n\r\n    /**\r\n     * @en Create buffer barrier.\r\n     * @zh 创建buffer内存屏障。\r\n     * @param info GFX buffer barrier description info.\r\n     */\r\n    public abstract getBufferBarrier (info: Readonly<BufferBarrierInfo>): BufferBarrier;\r\n\r\n    /**\r\n     * @en Copy buffers to texture.\r\n     * @zh 拷贝缓冲到纹理。\r\n     * @param buffers The buffers to be copied.\r\n     * @param texture The texture to copy to.\r\n     * @param regions The region descriptions.\r\n     */\r\n    public abstract copyBuffersToTexture (buffers: Readonly<ArrayBufferView[]>, texture: Texture, regions: Readonly<BufferTextureCopy[]>): void;\r\n\r\n    /**\r\n     * @en Copy texture to buffers\r\n     * @zh 拷贝纹理到缓冲\r\n     * @param texture The texture to be copied.\r\n     * @param buffers The buffer to copy to.\r\n     * @param regions The region descriptions\r\n     */\r\n    public abstract copyTextureToBuffers (texture: Readonly<Texture>, buffers: ArrayBufferView[], regions: Readonly<BufferTextureCopy[]>): void;\r\n\r\n    /**\r\n     * @en Copy texture images to texture.\r\n     * @zh 拷贝图像到纹理。\r\n     * @param texImages The texture to be copied.\r\n     * @param texture The texture to copy to.\r\n     * @param regions The region descriptions.\r\n     */\r\n    public abstract copyTexImagesToTexture (texImages: Readonly<TexImageSource[]>, texture: Texture, regions: Readonly<BufferTextureCopy[]>): void;\r\n\r\n    /**\r\n     * @en Whether the device has specific feature.\r\n     * @zh 是否具备特性。\r\n     * @param feature The GFX feature to be queried.\r\n     */\r\n    public hasFeature (feature: Feature): boolean {\r\n        return this._features[feature];\r\n    }\r\n\r\n    /**\r\n     * @en The extent a specific format is supported by the backend.\r\n     * @zh 后端对特定格式的支持程度。\r\n     * @param format The GFX format to be queried.\r\n     */\r\n    public getFormatFeatures (format: Format): FormatFeature {\r\n        return this._formatFeatures[format];\r\n    }\r\n\r\n    /**\r\n     * @en Enable automatically barrier deduction GFX inside, no effect on web.\r\n     * @zh 是否开启自动GFX内部barrier推导，web无影响。\r\n     * @param format The GFX format to be queried.\r\n     */\r\n    public enableAutoBarrier (en: boolean): void {\r\n        // noop\r\n    }\r\n\r\n    /**\r\n     * @en Get maximum supported sample count.\r\n     * @zh 获取最大可支持的 Samples 参数\r\n     * @param format The GFX texture format.\r\n     * @param usage The GFX texture usage.\r\n     * @param flags The GFX texture create flags.\r\n     */\r\n    public getMaxSampleCount (format: Format, usage: TextureUsage, flags: TextureFlags): SampleCount {\r\n        return SampleCount.X1;\r\n    }\r\n}\r\n\r\n/** @mangle */\r\nexport class DefaultResource {\r\n    private _texture2D: Texture | null = null;\r\n    private _texture3D: Texture | null = null;\r\n    private _textureCube: Texture | null = null;\r\n    private _texture2DArray: Texture | null = null;\r\n\r\n    constructor (device: Device) {\r\n        const capabilities = device.capabilities;\r\n        const bufferSize = 64;\r\n        // create a new buffer and fill it with a white pixel\r\n        const buffer = new Uint8Array(bufferSize);\r\n        buffer.fill(255);\r\n        if (capabilities.maxTextureSize >= 2) {\r\n            this._texture2D = device.createTexture(new TextureInfo(\r\n                TextureType.TEX2D,\r\n                TextureUsageBit.STORAGE | TextureUsageBit.SAMPLED,\r\n                Format.RGBA8,\r\n                2,\r\n                2,\r\n                TextureFlagBit.NONE,\r\n            ));\r\n            const copyRegion = new BufferTextureCopy(0, 0, 0, new Offset(0, 0, 0), new Extent(2, 2, 1));\r\n            device.copyBuffersToTexture([buffer], this._texture2D, [copyRegion]);\r\n        }\r\n        if (capabilities.maxTextureSize >= 2) {\r\n            this._textureCube = device.createTexture(new TextureInfo(\r\n                TextureType.CUBE,\r\n                TextureUsageBit.STORAGE | TextureUsageBit.SAMPLED,\r\n                Format.RGBA8,\r\n                2,\r\n                2,\r\n                TextureFlagBit.NONE,\r\n                6,\r\n            ));\r\n            const copyRegion = new BufferTextureCopy(0, 0, 0, new Offset(0, 0, 0), new Extent(2, 2, 1));\r\n            device.copyBuffersToTexture([buffer], this._textureCube, [copyRegion]);\r\n            copyRegion.texSubres.baseArrayLayer = 1;\r\n            device.copyBuffersToTexture([buffer], this._textureCube, [copyRegion]);\r\n            copyRegion.texSubres.baseArrayLayer = 2;\r\n            device.copyBuffersToTexture([buffer], this._textureCube, [copyRegion]);\r\n            copyRegion.texSubres.baseArrayLayer = 3;\r\n            device.copyBuffersToTexture([buffer], this._textureCube, [copyRegion]);\r\n            copyRegion.texSubres.baseArrayLayer = 4;\r\n            device.copyBuffersToTexture([buffer], this._textureCube, [copyRegion]);\r\n            copyRegion.texSubres.baseArrayLayer = 5;\r\n            device.copyBuffersToTexture([buffer], this._textureCube, [copyRegion]);\r\n        }\r\n        if (capabilities.max3DTextureSize >= 2) {\r\n            this._texture3D = device.createTexture(new TextureInfo(\r\n                TextureType.TEX3D,\r\n                TextureUsageBit.STORAGE | TextureUsageBit.SAMPLED,\r\n                Format.RGBA8,\r\n                2,\r\n                2,\r\n                TextureFlagBit.NONE,\r\n                1,\r\n                1,\r\n                SampleCount.X1,\r\n                2,\r\n            ));\r\n            const copyRegion = new BufferTextureCopy(0, 0, 0, new Offset(0, 0, 0), new Extent(2, 2, 2), new TextureSubresLayers(0, 0, 1));\r\n            device.copyBuffersToTexture([buffer], this._texture3D, [copyRegion]);\r\n        }\r\n        if (capabilities.maxArrayTextureLayers >= 2) {\r\n            this._texture2DArray = device.createTexture(new TextureInfo(\r\n                TextureType.TEX2D_ARRAY,\r\n                TextureUsageBit.STORAGE | TextureUsageBit.SAMPLED,\r\n                Format.RGBA8,\r\n                2,\r\n                2,\r\n                TextureFlagBit.NONE,\r\n                2,\r\n            ));\r\n            const copyRegion = new BufferTextureCopy(0, 0, 0, new Offset(0, 0, 0), new Extent(2, 2, 1), new TextureSubresLayers(0, 0, 1));\r\n            device.copyBuffersToTexture([buffer], this._texture2DArray, [copyRegion]);\r\n            copyRegion.texSubres.baseArrayLayer = 1;\r\n            device.copyBuffersToTexture([buffer], this._texture2DArray, [copyRegion]);\r\n        }\r\n    }\r\n\r\n    public getTexture (type: TextureType): Texture | null {\r\n        switch (type) {\r\n        case TextureType.TEX2D: return this._texture2D;\r\n        case TextureType.TEX3D: return this._texture3D;\r\n        case TextureType.CUBE: return this._textureCube;\r\n        case TextureType.TEX2D_ARRAY: return this._texture2DArray;\r\n        default: return null;\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { GFXObject, ObjectType, SurfaceTransform, SwapchainInfo } from './define';\r\nimport { Texture } from './texture';\r\n\r\n/**\r\n * @en GFX Swapchain.\r\n * @zh GFX 交换链。\r\n */\r\nexport abstract class Swapchain extends GFXObject {\r\n    /**\r\n     * @en The color texture of this swapchain.\r\n     * @zh 当前交换链的颜色缓冲。\r\n     */\r\n    get colorTexture (): Texture {\r\n        return this._colorTexture;\r\n    }\r\n\r\n    /**\r\n     * @en The depth stencil texture of this swapchain.\r\n     * @zh 当前交换链的深度模板缓冲。\r\n     */\r\n    get depthStencilTexture (): Texture {\r\n        return this._depthStencilTexture;\r\n    }\r\n\r\n    /**\r\n     * @en The surface transform to be applied in projection matrices.\r\n     * @zh 需要在投影矩阵中应用的表面变换。\r\n     */\r\n    get surfaceTransform (): SurfaceTransform {\r\n        return this._transform;\r\n    }\r\n\r\n    get width (): number {\r\n        return this._colorTexture.width;\r\n    }\r\n\r\n    get height (): number {\r\n        return this._colorTexture.height;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _transform = SurfaceTransform.IDENTITY;\r\n    /** @mangle */\r\n    protected _colorTexture: Texture = null!;\r\n    /** @mangle */\r\n    protected _depthStencilTexture: Texture = null!;\r\n\r\n    constructor () {\r\n        super(ObjectType.SWAPCHAIN);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<SwapchainInfo>): void;\r\n    public abstract resize (width: number, height: number, surfaceTransform: SurfaceTransform): void;\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { RenderPass } from './render-pass';\r\nimport { Texture } from './texture';\r\nimport { GFXObject, ObjectType, FramebufferInfo } from './define';\r\n\r\n/**\r\n * @en GFX frame buffer.\r\n * @zh GFX 帧缓冲。\r\n */\r\nexport abstract class Framebuffer extends GFXObject {\r\n    /**\r\n     * @en Get current render pass.\r\n     * @zh GFX 渲染过程。\r\n     */\r\n    public get renderPass (): RenderPass {\r\n        return this._renderPass!;\r\n    }\r\n\r\n    /**\r\n     * @en Get current color views.\r\n     * @zh 颜色纹理视图数组。\r\n     */\r\n    public get colorTextures (): (Texture | null)[] {\r\n        return this._colorTextures;\r\n    }\r\n\r\n    /**\r\n     * @en Get current depth stencil views.\r\n     * @zh 深度模板纹理视图。\r\n     */\r\n    public get depthStencilTexture (): Texture | null {\r\n        return this._depthStencilTexture;\r\n    }\r\n\r\n    public get width (): number {\r\n        if (this.colorTextures.length > 0) {\r\n            return this.colorTextures[0]?.width ?? this._width;\r\n        } else if (this.depthStencilTexture) {\r\n            return this.depthStencilTexture.width;\r\n        }\r\n        return this._width;\r\n    }\r\n\r\n    public get height (): number {\r\n        if (this.colorTextures.length > 0) {\r\n            return this.colorTextures[0]?.height ?? this._height;\r\n        } else if (this.depthStencilTexture) {\r\n            return this.depthStencilTexture.height;\r\n        }\r\n        return this._height;\r\n    }\r\n\r\n    public get needRebuild (): boolean {\r\n        return false;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _renderPass: RenderPass | null = null;\r\n    /** @mangle */\r\n    protected _colorTextures: (Texture | null)[] = [];\r\n    /** @mangle */\r\n    protected _depthStencilTexture: Texture | null = null;\r\n    /** @mangle */\r\n    protected _width: number = 0;\r\n    /** @mangle */\r\n    protected _height: number = 0;\r\n\r\n    constructor () {\r\n        super(ObjectType.FRAMEBUFFER);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<FramebufferInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/*\r\n * JS Implementation of MurmurHash2\r\n *\r\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\r\n * @see http://github.com/garycourt/murmurhash-js\r\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\r\n * @see http://sites.google.com/site/murmurhash/\r\n *\r\n * @param {string} str ASCII only\r\n * @param {number} seed Positive integer only\r\n * @return {number} 32-bit positive integer hash\r\n */\r\n\r\nconst getUint8ForString = String.prototype.charCodeAt;\r\nfunction getUint8ForArray (this: Uint8Array, idx: number): number { return this[idx]; }\r\n\r\n/**\r\n * @en JS Implementation of MurmurHash2. Original implementation is http://github.com/garycourt/murmurhash-js.\r\n * @zh MurmurHash2 的 JS 实现。原始实现是 http://github.com/garycourt/murmurhash-js 。\r\n * @param input @en ASCII string or a Uint8Array to be hashed. @zh 希望被哈希的 ASCII 字符串或者 Uint8Array.\r\n * @param seed @en Hash seed. Should be a positive integer. @zh 哈希种子。必须是个正整数。\r\n * @returns @en 32-bit positive integer hash. @zh 32位正整数哈希值。\r\n */\r\nexport function murmurhash2_32_gc (input: string | Uint8Array, seed: number): number {\r\n    let l = input.length;\r\n    let h = seed ^ l;\r\n    let i = 0;\r\n    const getUint8 = typeof input === 'string' ? getUint8ForString : getUint8ForArray;\r\n\r\n    while (l >= 4) {\r\n        let k =            ((getUint8.call(input, i) & 0xff))\r\n            | ((getUint8.call(input, ++i) & 0xff) << 8)\r\n            | ((getUint8.call(input, ++i) & 0xff) << 16)\r\n            | ((getUint8.call(input, ++i) & 0xff) << 24);\r\n\r\n        k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\r\n        k ^= k >>> 24;\r\n        k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\r\n\r\n        h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\r\n\r\n        l -= 4;\r\n        ++i;\r\n    }\r\n\r\n    switch (l) {\r\n    // Don't break in case 3 and case 2.\r\n    case 3: h ^= (getUint8.call(input, i + 2) & 0xff) << 16;\r\n    // eslint-disable-next-line no-fallthrough\r\n    case 2: h ^= (getUint8.call(input, i + 1) & 0xff) << 8;\r\n    // eslint-disable-next-line no-fallthrough\r\n    case 1:\r\n        h ^= (getUint8.call(input, i) & 0xff);\r\n        h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\r\n        break;\r\n    default:\r\n        // do nothing, just make VSCode happy.\r\n        break;\r\n    }\r\n\r\n    h ^= h >>> 13;\r\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\r\n    h ^= h >>> 15;\r\n\r\n    return h >>> 0;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { murmurhash2_32_gc } from '../../core/algorithm/murmurhash2_gc';\r\nimport { Buffer } from './buffer';\r\nimport { Attribute, GFXObject, ObjectType, InputAssemblerInfo, DrawInfo } from './define';\r\n\r\n/**\r\n * @en GFX input assembler.\r\n * @zh GFX 输入汇集器。\r\n */\r\nexport abstract class InputAssembler extends GFXObject {\r\n    /**\r\n     * @en Get current attributes.\r\n     * @zh 顶点属性数组。\r\n     */\r\n    get attributes (): Attribute[] {\r\n        return this._attributes;\r\n    }\r\n\r\n    /**\r\n     * @en Get current vertex buffers.\r\n     * @zh 顶点缓冲数组。\r\n     */\r\n    get vertexBuffers (): Buffer[] {\r\n        return this._vertexBuffers;\r\n    }\r\n\r\n    /**\r\n     * @en Get current index buffer.\r\n     * @zh 索引缓冲。\r\n     */\r\n    get indexBuffer (): Buffer | null {\r\n        return this._indexBuffer;\r\n    }\r\n\r\n    /**\r\n     * @en Get the indirect buffer, if present.\r\n     * @zh 间接绘制缓冲。\r\n     */\r\n    get indirectBuffer (): Buffer | null {\r\n        return this._indirectBuffer;\r\n    }\r\n\r\n    /**\r\n     * @en Get hash of current attributes.\r\n     * @zh 获取顶点属性数组的哈希值。\r\n     */\r\n    get attributesHash (): number {\r\n        return this._attributesHash;\r\n    }\r\n\r\n    /**\r\n     * @en Get current vertex count.\r\n     * @zh 顶点数量。\r\n     */\r\n    set vertexCount (count: number) {\r\n        this._drawInfo.vertexCount = count;\r\n    }\r\n    get vertexCount (): number {\r\n        return this._drawInfo.vertexCount;\r\n    }\r\n\r\n    /**\r\n     * @en Get starting vertex.\r\n     * @zh 起始顶点。\r\n     */\r\n    set firstVertex (first: number) {\r\n        this._drawInfo.firstVertex = first;\r\n    }\r\n    get firstVertex (): number {\r\n        return this._drawInfo.firstVertex;\r\n    }\r\n\r\n    /**\r\n     * @en Get current index count.\r\n     * @zh 索引数量。\r\n     */\r\n    set indexCount (count: number) {\r\n        this._drawInfo.indexCount = count;\r\n    }\r\n    get indexCount (): number {\r\n        return this._drawInfo.indexCount;\r\n    }\r\n\r\n    /**\r\n     * @en Get starting index.\r\n     * @zh 起始索引。\r\n     */\r\n    set firstIndex (first: number) {\r\n        this._drawInfo.firstIndex = first;\r\n    }\r\n    get firstIndex (): number {\r\n        return this._drawInfo.firstIndex;\r\n    }\r\n\r\n    /**\r\n     * @en Get current vertex offset.\r\n     * @zh 顶点偏移量。\r\n     */\r\n    set vertexOffset (offset: number) {\r\n        this._drawInfo.vertexOffset = offset;\r\n    }\r\n    get vertexOffset (): number {\r\n        return this._drawInfo.vertexOffset;\r\n    }\r\n\r\n    /**\r\n     * @en Get current instance count.\r\n     * @zh 实例数量。\r\n     */\r\n    set instanceCount (count: number) {\r\n        this._drawInfo.instanceCount = count;\r\n    }\r\n    get instanceCount (): number {\r\n        return this._drawInfo.instanceCount;\r\n    }\r\n\r\n    /**\r\n     * @en Get starting instance.\r\n     * @zh 起始实例。\r\n     */\r\n    set firstInstance (first: number) {\r\n        this._drawInfo.firstInstance = first;\r\n    }\r\n    get firstInstance (): number {\r\n        return this._drawInfo.firstInstance;\r\n    }\r\n\r\n    /**\r\n     * @en set the draw range\r\n     * @zh 设置渲染范围\r\n     */\r\n    set drawInfo (info: DrawInfo) {\r\n        this._drawInfo = info;\r\n    }\r\n\r\n    /**\r\n     * @en get the draw range\r\n     * @zh 获取渲染范围\r\n     */\r\n    get drawInfo (): DrawInfo {\r\n        return this._drawInfo;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _attributes: Attribute[] = [];\r\n    /** @mangle */\r\n    protected _attributesHash = 0;\r\n    /** @mangle */\r\n    protected _vertexBuffers: Buffer[] = [];\r\n    /** @mangle */\r\n    protected _indexBuffer: Buffer | null = null;\r\n    /** @mangle */\r\n    protected _indirectBuffer: Buffer | null = null;\r\n    /** @mangle */\r\n    protected _drawInfo = new DrawInfo();\r\n\r\n    constructor () {\r\n        super(ObjectType.INPUT_ASSEMBLER);\r\n    }\r\n\r\n    /**\r\n     * @en Get the specified vertex buffer.\r\n     * @zh 获取顶点缓冲。\r\n     * @param stream The stream index of the vertex buffer.\r\n     */\r\n    public getVertexBuffer (stream = 0): Buffer | null {\r\n        if (stream < this._vertexBuffers.length) {\r\n            return this._vertexBuffers[stream];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected computeAttributesHash (): number {\r\n        let res = 'attrs';\r\n        for (let i = 0; i < this.attributes.length; ++i) {\r\n            const at = this.attributes[i];\r\n            res += `,${at.name},${at.format},${at.isNormalized},${at.stream},${at.isInstanced},${at.location}`;\r\n        }\r\n        return murmurhash2_32_gc(res, 666);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<InputAssemblerInfo>): void;\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Buffer } from './buffer';\r\nimport { DescriptorSetLayout } from './descriptor-set-layout';\r\nimport { Sampler } from './states/sampler';\r\nimport { Texture } from './texture';\r\nimport { GFXObject, ObjectType, DescriptorSetInfo, DESCRIPTOR_BUFFER_TYPE, DESCRIPTOR_SAMPLER_TYPE, AccessFlags, AccessFlagBit } from './define';\r\n\r\n/**\r\n * @en GFX descriptor sets.\r\n * @zh GFX 描述符集组。\r\n */\r\nexport abstract class DescriptorSet extends GFXObject {\r\n    get layout (): DescriptorSetLayout {\r\n        return this._layout!;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _layout: DescriptorSetLayout | null = null;\r\n    /** @mangle */\r\n    protected _buffers: Buffer[] = [];\r\n    /** @mangle */\r\n    protected _textures: Texture[] = [];\r\n    /** @mangle */\r\n    protected _samplers: Sampler[] = [];\r\n    /** @mangle */\r\n    protected _isDirty = false;\r\n\r\n    constructor () {\r\n        super(ObjectType.DESCRIPTOR_SET);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<DescriptorSetInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n\r\n    public abstract update (): void;\r\n\r\n    /**\r\n     * @en Bind buffer to the specified descriptor.\r\n     * @zh 在指定的描述符位置上绑定缓冲。\r\n     * @param binding The target binding.\r\n     * @param buffer The buffer to be bound.\r\n     */\r\n    public bindBuffer (binding: number, buffer: Buffer, index = 0): void {\r\n        const bindingIndex = this._layout!.bindingIndices[binding];\r\n        const info = this._layout!.bindings[bindingIndex]; if (!info) { return; }\r\n        if (info.descriptorType & DESCRIPTOR_BUFFER_TYPE) {\r\n            const descriptorIndex = this._layout!.descriptorIndices[binding];\r\n            if (this._buffers[descriptorIndex + index] !== buffer) {\r\n                this._buffers[descriptorIndex + index] = buffer;\r\n                this._isDirty = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Bind sampler to the specified descriptor.\r\n     * @zh 在指定的描述符位置上绑定采样器。\r\n     * @param binding The target binding.\r\n     * @param sampler The sampler to be bound.\r\n     */\r\n    public bindSampler (binding: number, sampler: Sampler, index = 0): void {\r\n        const bindingIndex = this._layout!.bindingIndices[binding];\r\n        const info = this._layout!.bindings[bindingIndex]; if (!info) { return; }\r\n        if (info.descriptorType & DESCRIPTOR_SAMPLER_TYPE) {\r\n            const descriptorIndex = this._layout!.descriptorIndices[binding];\r\n            if (this._samplers[descriptorIndex + index] !== sampler) {\r\n                this._samplers[descriptorIndex + index] = sampler;\r\n                this._isDirty = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Bind texture to the specified descriptor.\r\n     * @zh 在指定的描述符位置上绑定纹理。\r\n     * @param binding The target binding.\r\n     * @param texture The texture to be bound.\r\n     */\r\n    public bindTexture (binding: number, texture: Texture, index = 0, flags = AccessFlagBit.NONE): void {\r\n        const bindingIndex = this._layout!.bindingIndices[binding];\r\n        const info = this._layout!.bindings[bindingIndex]; if (!info) { return; }\r\n        if (info.descriptorType & DESCRIPTOR_SAMPLER_TYPE) {\r\n            const descriptorIndex = this._layout!.descriptorIndices[binding];\r\n            if (this._textures[descriptorIndex + index] !== texture) {\r\n                this._textures[descriptorIndex + index] = texture;\r\n                this._isDirty = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get buffer from the specified binding location.\r\n     * @zh 获取当前指定绑定位置上的缓冲。\r\n     * @param binding The target binding.\r\n     */\r\n    public getBuffer (binding: number, index = 0): Buffer {\r\n        const descriptorIndex = this._layout!.descriptorIndices[binding];\r\n        return this._buffers[descriptorIndex + index];\r\n    }\r\n\r\n    /**\r\n     * @en Get sampler from the specified binding location.\r\n     * @zh 获取当前指定绑定位置上的采样器。\r\n     * @param binding The target binding.\r\n     */\r\n    public getSampler (binding: number, index = 0): Sampler {\r\n        const descriptorIndex = this._layout!.descriptorIndices[binding];\r\n        return this._samplers[descriptorIndex + index];\r\n    }\r\n\r\n    /**\r\n     * @en Get texture from the specified binding location.\r\n     * @zh 获取当前指定绑定位置上的贴图。\r\n     * @param binding The target binding.\r\n     */\r\n    public getTexture (binding: number, index = 0): Texture {\r\n        const descriptorIndex = this._layout!.descriptorIndices[binding];\r\n        return this._textures[descriptorIndex + index];\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { GFXObject, ObjectType, DescriptorSetLayoutBinding, DescriptorSetLayoutInfo } from './define';\r\n\r\n/**\r\n * @en GFX descriptor sets layout.\r\n * @zh GFX 描述符集布局。\r\n */\r\nexport abstract class DescriptorSetLayout extends GFXObject {\r\n    get bindings (): DescriptorSetLayoutBinding[] {\r\n        return this._bindings;\r\n    }\r\n\r\n    get bindingIndices (): number[] {\r\n        return this._bindingIndices;\r\n    }\r\n\r\n    get descriptorIndices (): number[] {\r\n        return this._descriptorIndices;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _bindings: DescriptorSetLayoutBinding[] = [];\r\n    /** @mangle */\r\n    protected _bindingIndices: number[] = [];\r\n    /** @mangle */\r\n    protected _descriptorIndices: number[] = [];\r\n\r\n    constructor () {\r\n        super(ObjectType.DESCRIPTOR_SET_LAYOUT);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<DescriptorSetLayoutInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DescriptorSetLayout } from './descriptor-set-layout';\r\nimport { GFXObject, ObjectType, PipelineLayoutInfo } from './define';\r\n\r\n/**\r\n * @en GFX pipeline layout.\r\n * @zh GFX 管线布局。\r\n */\r\nexport abstract class PipelineLayout extends GFXObject {\r\n    get setLayouts (): DescriptorSetLayout[] {\r\n        return this._setLayouts;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _setLayouts: DescriptorSetLayout[] = [];\r\n\r\n    constructor () {\r\n        super(ObjectType.PIPELINE_LAYOUT);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<PipelineLayoutInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated engine source code (the \"Software\"), a limited,\r\n worldwide, royalty-free, non-assignable, revocable and non-exclusive license\r\n to use Cocos Creator solely to develop games on your target platforms. You shall\r\n not use Cocos Creator software for developing other software or tools that's\r\n used for developing games. You are not granted to publish, distribute,\r\n sublicense, and/or sell copies of Cocos Creator.\r\n\r\n The software or tools in this License Agreement are licensed, not sold.\r\n Xiamen Yaji Software Co., Ltd. reserves all rights not expressly granted to you.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n    BlendFactor,\r\n    BlendOp,\r\n    ColorMask,\r\n    ComparisonFunc,\r\n    CullMode,\r\n    PolygonMode,\r\n    ShadeModel,\r\n    StencilOp,\r\n    Color,\r\n} from './define';\r\n\r\n/**\r\n * @en GFX rasterizer state.\r\n * @zh GFX 光栅化状态。\r\n */\r\nexport class RasterizerState {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    get native (): RasterizerState {\r\n        return this;\r\n    }\r\n\r\n    constructor (\r\n        public isDiscard: boolean = false,\r\n        public polygonMode: PolygonMode = PolygonMode.FILL,\r\n        public shadeModel: ShadeModel = ShadeModel.GOURAND,\r\n        public cullMode: CullMode = CullMode.BACK,\r\n        public isFrontFaceCCW: boolean = true,\r\n        public depthBiasEnabled: boolean = false,\r\n        public depthBias: number = 0,\r\n        public depthBiasClamp: number = 0.0,\r\n        public depthBiasSlop: number = 0.0,\r\n        public isDepthClip: boolean = true,\r\n        public isMultisample: boolean = false,\r\n        public lineWidth: number = 1.0,\r\n    ) {}\r\n\r\n    public reset (): void {\r\n        this.isDiscard = false;\r\n        this.polygonMode = PolygonMode.FILL;\r\n        this.shadeModel = ShadeModel.GOURAND;\r\n        this.cullMode = CullMode.BACK;\r\n        this.isFrontFaceCCW = true;\r\n        this.depthBiasEnabled = false;\r\n        this.depthBias = 0;\r\n        this.depthBiasClamp = 0.0;\r\n        this.depthBiasSlop = 0.0;\r\n        this.isDepthClip = true;\r\n        this.isMultisample = false;\r\n        this.lineWidth = 1.0;\r\n    }\r\n\r\n    public assign (rs: RasterizerState): void {\r\n        Object.assign(this, rs);\r\n    }\r\n\r\n    public destroy (): void {}\r\n}\r\n\r\n/**\r\n * @en GFX depth stencil state.\r\n * @zh GFX 深度模板状态。\r\n */\r\nexport class DepthStencilState {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    get native (): DepthStencilState {\r\n        return this;\r\n    }\r\n    constructor (\r\n        public depthTest: boolean = true,\r\n        public depthWrite: boolean = true,\r\n        public depthFunc: ComparisonFunc = ComparisonFunc.LESS,\r\n        public stencilTestFront: boolean = false,\r\n        public stencilFuncFront: ComparisonFunc = ComparisonFunc.ALWAYS,\r\n        public stencilReadMaskFront: number = 0xffff,\r\n        public stencilWriteMaskFront: number = 0xffff,\r\n        public stencilFailOpFront: StencilOp = StencilOp.KEEP,\r\n        public stencilZFailOpFront: StencilOp = StencilOp.KEEP,\r\n        public stencilPassOpFront: StencilOp = StencilOp.KEEP,\r\n        public stencilRefFront: number = 1,\r\n        public stencilTestBack: boolean = false,\r\n        public stencilFuncBack: ComparisonFunc = ComparisonFunc.ALWAYS,\r\n        public stencilReadMaskBack: number = 0xffff,\r\n        public stencilWriteMaskBack: number = 0xffff,\r\n        public stencilFailOpBack: StencilOp = StencilOp.KEEP,\r\n        public stencilZFailOpBack: StencilOp = StencilOp.KEEP,\r\n        public stencilPassOpBack: StencilOp = StencilOp.KEEP,\r\n        public stencilRefBack: number = 1,\r\n    ) {}\r\n\r\n    public reset (): void {\r\n        this.depthTest = true;\r\n        this.depthWrite = true;\r\n        this.depthFunc = ComparisonFunc.LESS;\r\n        this.stencilTestFront = false;\r\n        this.stencilFuncFront = ComparisonFunc.ALWAYS;\r\n        this.stencilReadMaskFront = 0xffff;\r\n        this.stencilWriteMaskFront = 0xffff;\r\n        this.stencilFailOpFront = StencilOp.KEEP;\r\n        this.stencilZFailOpFront = StencilOp.KEEP;\r\n        this.stencilPassOpFront = StencilOp.KEEP;\r\n        this.stencilRefFront = 1;\r\n        this.stencilTestBack = false;\r\n        this.stencilFuncBack = ComparisonFunc.ALWAYS;\r\n        this.stencilReadMaskBack = 0xffff;\r\n        this.stencilWriteMaskBack = 0xffff;\r\n        this.stencilFailOpBack = StencilOp.KEEP;\r\n        this.stencilZFailOpBack = StencilOp.KEEP;\r\n        this.stencilPassOpBack = StencilOp.KEEP;\r\n        this.stencilRefBack = 1;\r\n    }\r\n\r\n    public assign (dss: DepthStencilState): void {\r\n        Object.assign(this, dss);\r\n    }\r\n\r\n    public destroy (): void {}\r\n}\r\n\r\n/**\r\n * @en GFX blend target.\r\n * @zh GFX 混合目标。\r\n */\r\nexport class BlendTarget {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public blend: boolean = false,\r\n        public blendSrc: BlendFactor = BlendFactor.ONE,\r\n        public blendDst: BlendFactor = BlendFactor.ZERO,\r\n        public blendEq: BlendOp = BlendOp.ADD,\r\n        public blendSrcAlpha: BlendFactor = BlendFactor.ONE,\r\n        public blendDstAlpha: BlendFactor = BlendFactor.ZERO,\r\n        public blendAlphaEq: BlendOp = BlendOp.ADD,\r\n        public blendColorMask: ColorMask = ColorMask.ALL,\r\n    ) {}\r\n\r\n    public reset (): void {\r\n        this.blend = false;\r\n        this.blendSrc = BlendFactor.ONE;\r\n        this.blendDst = BlendFactor.ZERO;\r\n        this.blendEq = BlendOp.ADD;\r\n        this.blendSrcAlpha = BlendFactor.ONE;\r\n        this.blendDstAlpha = BlendFactor.ZERO;\r\n        this.blendAlphaEq = BlendOp.ADD;\r\n        this.blendColorMask = ColorMask.ALL;\r\n    }\r\n\r\n    public assign (target: BlendTarget): void {\r\n        Object.assign(this, target);\r\n    }\r\n\r\n    public destroy (): void {}\r\n}\r\n\r\n/**\r\n * @en GFX blend state.\r\n * @zh GFX 混合状态。\r\n */\r\nexport class BlendState {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    get native (): BlendState {\r\n        return this;\r\n    }\r\n\r\n    constructor (\r\n        public isA2C: boolean = false,\r\n        public isIndepend: boolean = false,\r\n        public blendColor: Color = new Color(),\r\n        public targets: BlendTarget[] = [new BlendTarget()],\r\n    ) {}\r\n\r\n    /**\r\n     * @en Should use this function to set target, or it will not work\r\n     * on native platforms, as native can not support this feature,\r\n     * such as `blendState[i] = target;`.\r\n     *\r\n     * @param index The index to set target.\r\n     * @param target The target to be set.\r\n     */\r\n    public setTarget (index: number, target: BlendTarget): void {\r\n        let tg = this.targets[index];\r\n        if (!tg) {\r\n            tg = this.targets[index] = new BlendTarget();\r\n        }\r\n        Object.assign(tg, target);\r\n    }\r\n\r\n    public reset (): void {\r\n        this.isA2C = false;\r\n        this.isIndepend = false;\r\n        this.blendColor.x = 0;\r\n        this.blendColor.y = 0;\r\n        this.blendColor.z = 0;\r\n        this.blendColor.w = 0;\r\n        this.targets.length = 1;\r\n        this.targets[0].reset();\r\n    }\r\n\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { PipelineLayout } from './pipeline-layout';\r\nimport { RenderPass } from './render-pass';\r\nimport { Shader } from './shader';\r\nimport {\r\n    DynamicStateFlagBit,\r\n    DynamicStateFlags,\r\n    GFXObject,\r\n    ObjectType,\r\n    PrimitiveMode,\r\n    InputState,\r\n    PipelineBindPoint,\r\n} from './define';\r\nimport { BlendState, BlendTarget, RasterizerState, DepthStencilState } from './pipeline-sub-state';\r\n\r\nexport { BlendState, BlendTarget, RasterizerState, DepthStencilState };\r\n\r\nexport class PipelineStateInfo {\r\n    declare private _token: never; // to make sure all usages must be an instance of this exact class, not assembled from plain object\r\n\r\n    constructor (\r\n        public shader: Shader = null!,\r\n        public pipelineLayout: PipelineLayout = null!,\r\n        public renderPass: RenderPass = null!,\r\n        public inputState: InputState = new InputState(),\r\n        public rasterizerState: RasterizerState = new RasterizerState(),\r\n        public depthStencilState: DepthStencilState = new DepthStencilState(),\r\n        public blendState: BlendState = new BlendState(),\r\n        public primitive: PrimitiveMode = PrimitiveMode.TRIANGLE_LIST,\r\n        public dynamicStates: DynamicStateFlags = DynamicStateFlagBit.NONE,\r\n        public bindPoint: PipelineBindPoint = PipelineBindPoint.GRAPHICS,\r\n    ) {}\r\n}\r\n\r\n/**\r\n * @en GFX pipeline state.\r\n * @zh GFX 管线状态。\r\n */\r\nexport abstract class PipelineState extends GFXObject {\r\n    /**\r\n     * @en Get current shader.\r\n     * @zh GFX 着色器。\r\n     */\r\n    get shader (): Shader {\r\n        return this._shader!;\r\n    }\r\n\r\n    /**\r\n     * @en Get current pipeline layout.\r\n     * @zh GFX 管线布局。\r\n     */\r\n    get pipelineLayout (): PipelineLayout {\r\n        return this._pipelineLayout!;\r\n    }\r\n\r\n    /**\r\n     * @en Get current primitve mode.\r\n     * @zh GFX 图元模式。\r\n     */\r\n    get primitive (): PrimitiveMode {\r\n        return this._primitive;\r\n    }\r\n\r\n    /**\r\n     * @en Get current rasterizer state.\r\n     * @zh GFX 光栅化状态。\r\n     */\r\n    get rasterizerState (): RasterizerState {\r\n        return this._rs;\r\n    }\r\n\r\n    /**\r\n     * @en Get current depth stencil state.\r\n     * @zh GFX 深度模板状态。\r\n     */\r\n    get depthStencilState (): DepthStencilState {\r\n        return this._dss;\r\n    }\r\n\r\n    /**\r\n     * @en Get current blend state.\r\n     * @zh GFX 混合状态。\r\n     */\r\n    get blendState (): BlendState {\r\n        return this._bs;\r\n    }\r\n\r\n    /**\r\n     * @en Get current input state.\r\n     * @zh GFX 输入状态。\r\n     */\r\n    get inputState (): InputState {\r\n        return this._is as InputState;\r\n    }\r\n\r\n    /**\r\n     * @en Get current dynamic states.\r\n     * @zh GFX 动态状态数组。\r\n     */\r\n    get dynamicStates (): DynamicStateFlags {\r\n        return this._dynamicStates;\r\n    }\r\n\r\n    /**\r\n     * @en Get current render pass.\r\n     * @zh GFX 渲染过程。\r\n     */\r\n    get renderPass (): RenderPass {\r\n        return this._renderPass as RenderPass;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _shader: Shader | null = null;\r\n    /** @mangle */\r\n    protected _pipelineLayout: PipelineLayout | null = null;\r\n    /** @mangle */\r\n    protected _primitive: PrimitiveMode = PrimitiveMode.TRIANGLE_LIST;\r\n    /** @mangle */\r\n    protected _is: InputState | null = null;\r\n    /** @mangle */\r\n    protected _rs: RasterizerState = new RasterizerState();\r\n    /** @mangle */\r\n    protected _dss: DepthStencilState = new DepthStencilState();\r\n    /** @mangle */\r\n    protected _bs: BlendState = new BlendState();\r\n    /** @mangle */\r\n    protected _dynamicStates: DynamicStateFlags = DynamicStateFlagBit.NONE;\r\n    /** @mangle */\r\n    protected _renderPass: RenderPass | null = null;\r\n\r\n    constructor () {\r\n        super(ObjectType.PIPELINE_STATE);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<PipelineStateInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CommandBuffer } from './command-buffer';\r\nimport { GFXObject, ObjectType, QueueType, QueueInfo } from './define';\r\n\r\n/**\r\n * @en GFX Queue.\r\n * @zh GFX 队列。\r\n */\r\nexport abstract class Queue extends GFXObject {\r\n    /**\r\n     * @en Get current type.\r\n     * @zh 队列类型。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _type: QueueType = QueueType.GRAPHICS;\r\n\r\n    constructor () {\r\n        super(ObjectType.QUEUE);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<QueueInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n\r\n    /**\r\n     * @en Submit command buffers.\r\n     * @zh 提交命令缓冲数组。\r\n     * @param cmdBuffs The command buffers to be submitted.\r\n     * @param fence The syncing fence.\r\n     */\r\n    public abstract submit (cmdBuffs: Readonly<CommandBuffer[]>): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { murmurhash2_32_gc } from '../../core/algorithm/murmurhash2_gc';\r\nimport {\r\n    GFXObject,\r\n    ObjectType,\r\n    ColorAttachment,\r\n    DepthStencilAttachment,\r\n    SubpassInfo,\r\n    RenderPassInfo,\r\n} from './define';\r\n\r\n/**\r\n * @en GFX render pass.\r\n * @zh GFX 渲染过程。\r\n */\r\nexport abstract class RenderPass extends GFXObject {\r\n    /** @mangle */\r\n    protected _colorInfos: ColorAttachment[] = [];\r\n    /** @mangle */\r\n    protected _depthStencilInfo: DepthStencilAttachment | null = null;\r\n    /** @mangle */\r\n    protected _subpasses: SubpassInfo[] = [];\r\n    /** @mangle */\r\n    protected _hash = 0;\r\n\r\n    get colorAttachments (): Readonly<ColorAttachment[]> { return this._colorInfos; }\r\n    get depthStencilAttachment (): Readonly<DepthStencilAttachment> | null { return this._depthStencilInfo; }\r\n    get subPasses (): Readonly<SubpassInfo[]> { return this._subpasses; }\r\n    get hash (): number { return this._hash; }\r\n\r\n    constructor () {\r\n        super(ObjectType.RENDER_PASS);\r\n    }\r\n\r\n    // Based on render pass compatibility\r\n    protected computeHash (): number {\r\n        let res = '';\r\n        if (this._subpasses.length) {\r\n            for (let i = 0; i < this._subpasses.length; ++i) {\r\n                const subpass = this._subpasses[i];\r\n                if (subpass.inputs.length) {\r\n                    res += 'ia';\r\n                    for (let j = 0; j < subpass.inputs.length; ++j) {\r\n                        const ia = this._colorInfos[subpass.inputs[j]];\r\n                        res += `,${ia.format},${ia.sampleCount}`;\r\n                    }\r\n                }\r\n                if (subpass.colors.length) {\r\n                    res += 'ca';\r\n                    for (let j = 0; j < subpass.colors.length; ++j) {\r\n                        const ca = this._colorInfos[subpass.colors[j]];\r\n                        res += `,${ca.format},${ca.sampleCount}`;\r\n                    }\r\n                }\r\n                if (subpass.depthStencil >= 0) {\r\n                    const ds = this._colorInfos[subpass.depthStencil];\r\n                    res += `ds,${ds.format},${ds.sampleCount}`;\r\n                }\r\n            }\r\n        } else {\r\n            res += 'ca';\r\n            for (let i = 0; i < this._colorInfos.length; ++i) {\r\n                const ca = this._colorInfos[i];\r\n                res += `,${ca.format},${ca.sampleCount}`;\r\n            }\r\n            const ds = this._depthStencilInfo;\r\n            if (ds) {\r\n                res += `ds,${ds.format},${ds.sampleCount}`;\r\n            }\r\n        }\r\n\r\n        return murmurhash2_32_gc(res, 666);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<RenderPassInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Filter, GFXObject, ObjectType, SamplerInfo } from '../define';\r\n\r\n/**\r\n * @en GFX sampler.\r\n * @zh GFX 采样器。\r\n */\r\nexport class Sampler extends GFXObject {\r\n    get info (): Readonly<SamplerInfo> { return this._info; }\r\n    get hash (): number { return this._hash; }\r\n\r\n    /** @mangle */\r\n    protected _info: SamplerInfo = new SamplerInfo();\r\n    /** @mangle */\r\n    protected _hash = 0;\r\n\r\n    constructor (info: Readonly<SamplerInfo>, hash: number) {\r\n        super(ObjectType.SAMPLER);\r\n        this._info.copy(info);\r\n        this._hash = hash;\r\n    }\r\n\r\n    static computeHash (info: Readonly<SamplerInfo>): number {\r\n        let hash = (info.minFilter as number);\r\n        hash |= ((info.magFilter as number) << 2);\r\n        hash |= ((info.mipFilter as number) << 4);\r\n        hash |= ((info.addressU as number) << 6);\r\n        hash |= ((info.addressV as number) << 8);\r\n        hash |= ((info.addressW as number) << 10);\r\n        hash |= (Math.min(info.maxAnisotropy, 16) << 12);\r\n        hash |= ((info.cmpFunc as number) << 17);\r\n        return hash;\r\n    }\r\n\r\n    static unpackFromHash (hash: number): SamplerInfo {\r\n        const info = new SamplerInfo();\r\n        info.minFilter = hash & 3;\r\n        info.magFilter = (hash >> 2) & 3;\r\n        info.mipFilter = (hash >> 4) & 3;\r\n        info.addressU = (hash >> 6) & 3;\r\n        info.addressV = (hash >> 8) & 3;\r\n        info.addressW = (hash >> 10) & 3;\r\n        info.maxAnisotropy = (hash >> 12) & 31;\r\n        info.cmpFunc = (hash >> 17) & 7;\r\n        return info;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { GFXObject, ObjectType, ShaderInfo, ShaderStage, UniformBlock, UniformSampler, Attribute } from './define';\r\n\r\n/**\r\n * @en GFX shader.\r\n * @zh GFX 着色器。\r\n */\r\nexport abstract class Shader extends GFXObject {\r\n    get name (): string {\r\n        return this._name;\r\n    }\r\n\r\n    get attributes (): Attribute[] {\r\n        return this._attributes;\r\n    }\r\n\r\n    get blocks (): UniformBlock[] {\r\n        return this._blocks;\r\n    }\r\n\r\n    get samplers (): UniformSampler[] {\r\n        return this._samplers;\r\n    }\r\n\r\n    get stages (): ShaderStage[] {\r\n        return this._stages;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _name = '';\r\n    /** @mangle */\r\n    protected _stages: ShaderStage[] = [];\r\n    /** @mangle */\r\n    protected _attributes: Attribute[] = [];\r\n    /** @mangle */\r\n    protected _blocks: UniformBlock[] = [];\r\n    /** @mangle */\r\n    protected _samplers: UniformSampler[] = [];\r\n\r\n    constructor () {\r\n        super(ObjectType.SHADER);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<ShaderInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport {\r\n    Format,\r\n    GFXObject,\r\n    ObjectType,\r\n    SampleCount,\r\n    TextureFlags,\r\n    TextureType,\r\n    TextureUsage,\r\n    TextureInfo,\r\n    TextureViewInfo,\r\n    ISwapchainTextureInfo,\r\n    TextureHandle,\r\n} from './define';\r\n\r\n/**\r\n * @en GFX texture.\r\n * @zh GFX 纹理。\r\n */\r\nexport abstract class Texture extends GFXObject {\r\n    /**\r\n     * @en Get texture type.\r\n     * @zh 纹理类型。\r\n     */\r\n    get type (): TextureType {\r\n        return this._info.type;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture usage.\r\n     * @zh 纹理使用方式。\r\n     */\r\n    get usage (): TextureUsage {\r\n        return this._info.usage;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture format.\r\n     * @zh 纹理格式。\r\n     */\r\n    get format (): Format {\r\n        return this._info.format;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture width.\r\n     * @zh 纹理宽度。\r\n     */\r\n    get width (): number {\r\n        return this._info.width;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture height.\r\n     * @zh 纹理高度。\r\n     */\r\n    get height (): number {\r\n        return this._info.height;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture depth.\r\n     * @zh 纹理深度。\r\n     */\r\n    get depth (): number {\r\n        return this._info.depth;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture array layer.\r\n     * @zh 纹理数组层数。\r\n     */\r\n    get layerCount (): number {\r\n        return this._info.layerCount;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture mip level.\r\n     * @zh 纹理 mip 层级数。\r\n     */\r\n    get levelCount (): number {\r\n        return this._info.levelCount;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture samples.\r\n     * @zh 纹理采样数。\r\n     */\r\n    get samples (): SampleCount {\r\n        return this._info.samples;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture flags.\r\n     * @zh 纹理标识位。\r\n     */\r\n    get flags (): TextureFlags {\r\n        return this._info.flags;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture size.\r\n     * @zh 纹理大小。\r\n     */\r\n    get size (): number {\r\n        return this._size;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture info.\r\n     * @zh 纹理信息。\r\n     */\r\n    get info (): Readonly<TextureInfo> {\r\n        return this._info;\r\n    }\r\n\r\n    /**\r\n     * @en Get view info.\r\n     * @zh 纹理视图信息。\r\n     */\r\n    get viewInfo (): Readonly<TextureViewInfo> {\r\n        return this._viewInfo;\r\n    }\r\n\r\n    /**\r\n     * @en Get texture type.\r\n     * @zh 是否为纹理视图。\r\n     */\r\n    get isTextureView (): boolean {\r\n        return this._isTextureView;\r\n    }\r\n\r\n    /** @mangle */\r\n    protected _info: TextureInfo = new TextureInfo();\r\n    /** @mangle */\r\n    protected _viewInfo: TextureViewInfo = new TextureViewInfo();\r\n    /** @mangle */\r\n    protected _isPowerOf2 = false;\r\n    /** @mangle */\r\n    protected _isTextureView = false;\r\n    /** @mangle */\r\n    protected _size = 0;\r\n\r\n    constructor () {\r\n        super(ObjectType.TEXTURE);\r\n    }\r\n\r\n    public abstract initialize (info: Readonly<TextureInfo> | Readonly<TextureViewInfo>): void;\r\n\r\n    public abstract destroy (): void;\r\n\r\n    public abstract getTextureHandle (): TextureHandle;\r\n\r\n    /**\r\n     * @en Resize texture.\r\n     * @zh 重置纹理大小。\r\n     * @param width The new width.\r\n     * @param height The new height.\r\n     */\r\n    public abstract resize (width: number, height: number): void;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public abstract initAsSwapchainTexture (info: Readonly<ISwapchainTextureInfo>): void;\r\n\r\n    public static getLevelCount (width: number, height: number): number {\r\n        return Math.floor(Math.log2(Math.max(width, height)));\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { murmurhash2_32_gc } from '../../../core/algorithm/murmurhash2_gc';\r\nimport { GFXObject, ObjectType, GeneralBarrierInfo } from '../define';\r\n\r\n/**\r\n * @en GFX global barrier.\r\n * @zh GFX 全局内存屏障。\r\n */\r\nexport class GeneralBarrier extends GFXObject {\r\n    get info (): Readonly<GeneralBarrierInfo> { return this._info; }\r\n    get hash (): number { return this._hash; }\r\n\r\n    /** @mangle */\r\n    protected _info: GeneralBarrierInfo = new GeneralBarrierInfo();\r\n    /** @mangle */\r\n    protected _hash = 0;\r\n\r\n    constructor (info: Readonly<GeneralBarrierInfo>, hash: number) {\r\n        super(ObjectType.GLOBAL_BARRIER);\r\n        this._info.copy(info);\r\n        this._hash = hash;\r\n    }\r\n\r\n    static computeHash (info: Readonly<GeneralBarrierInfo>): number {\r\n        return murmurhash2_32_gc(`${info.prevAccesses} ${info.nextAccesses} ${info.type}`, 666);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { murmurhash2_32_gc } from '../../../core/algorithm/murmurhash2_gc';\r\nimport { GFXObject, ObjectType, TextureBarrierInfo } from '../define';\r\n\r\n/**\r\n * @en GFX texture barrier.\r\n * @zh GFX 贴图内存屏障。\r\n */\r\nexport class TextureBarrier extends GFXObject {\r\n    get info (): Readonly<TextureBarrierInfo> { return this._info; }\r\n    get hash (): number { return this._hash; }\r\n\r\n    /** @mangle */\r\n    protected _info: TextureBarrierInfo = new TextureBarrierInfo();\r\n    /** @mangle */\r\n    protected _hash = 0;\r\n\r\n    constructor (info: Readonly<TextureBarrierInfo>, hash: number) {\r\n        super(ObjectType.TEXTURE_BARRIER);\r\n        this._info.copy(info);\r\n        this._hash = hash;\r\n    }\r\n\r\n    static computeHash (info: Readonly<TextureBarrierInfo>): number {\r\n        let res = `${info.prevAccesses} ${info.nextAccesses}`;\r\n        res += info.type;\r\n        res += info.range.mipLevel;\r\n        res += info.range.levelCount;\r\n        res += info.range.firstSlice;\r\n        res += info.range.numSlices;\r\n        res += info.range.basePlane;\r\n        res += info.range.planeCount;\r\n        res += info.discardContents;\r\n        res += info.srcQueue ? info.srcQueue.type : 0;\r\n        res += info.dstQueue ? info.dstQueue.type : 0;\r\n\r\n        return murmurhash2_32_gc(res, 666);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { murmurhash2_32_gc } from '../../../core/algorithm/murmurhash2_gc';\r\nimport { GFXObject, ObjectType, BufferBarrierInfo } from '../define';\r\n\r\n/**\r\n * @en GFX buffer barrier.\r\n * @zh GFX buffer内存屏障。\r\n */\r\nexport class BufferBarrier extends GFXObject {\r\n    get info (): Readonly<BufferBarrierInfo> { return this._info; }\r\n    get hash (): number { return this._hash; }\r\n\r\n    /** @mangle */\r\n    protected _info: BufferBarrierInfo = new BufferBarrierInfo();\r\n    /** @mangle */\r\n    protected _hash = 0;\r\n\r\n    constructor (info: Readonly<BufferBarrierInfo>, hash: number) {\r\n        super(ObjectType.BUFFER_BARRIER);\r\n        this._info.copy(info);\r\n        this._hash = hash;\r\n    }\r\n\r\n    static computeHash (info: Readonly<BufferBarrierInfo>): number {\r\n        let res = `${info.prevAccesses} ${info.nextAccesses}`;\r\n        res += info.type;\r\n        res += info.offset;\r\n        res += info.size;\r\n        res += info.discardContents;\r\n        res += info.srcQueue ? info.srcQueue.type : 0;\r\n        res += info.dstQueue ? info.dstQueue.type : 0;\r\n\r\n        return murmurhash2_32_gc(res, 666);\r\n    }\r\n}\r\n"],"names":["ObjectType","Status","API","SurfaceTransform","Feature","Format","FormatType","SampleType","Type","BufferUsageBit","BufferFlagBit","MemoryAccessBit","MemoryUsageBit","TextureType","ViewDimension","TextureUsageBit","TextureFlagBit","FormatFeatureBit","SampleCount","VsyncMode","Filter","Address","ComparisonFunc","StencilOp","BlendFactor","BlendOp","ColorMask","ShaderStageFlagBit","LoadOp","StoreOp","AccessFlagBit","ResolveMode","PipelineBindPoint","PrimitiveMode","PolygonMode","ShadeModel","CullMode","DynamicStateFlagBit","StencilFace","DescriptorType","QueueType","QueryType","CommandBufferType","ClearFlagBit","BarrierType","PassType","deepCopy","target","source","Ctor","i","length","push","copy","exports","Size","AttributeName","x","y","z","this","prototype","info","DeviceCaps","maxVertexAttributes","maxVertexUniformVectors","maxFragmentUniformVectors","maxTextureUnits","maxImageUnits","maxVertexTextureUnits","maxColorRenderTargets","maxShaderStorageBufferBindings","maxShaderStorageBlockSize","maxUniformBufferBindings","maxUniformBlockSize","maxTextureSize","maxCubeMapTextureSize","maxArrayTextureLayers","max3DTextureSize","uboOffsetAlignment","maxComputeSharedMemorySize","maxComputeWorkGroupInvocations","maxComputeWorkGroupSize","maxComputeWorkGroupCount","supportQuery","supportVariableRateShading","supportSubPassShading","clipSpaceMinZ","screenSpaceSignY","clipSpaceSignY","DeviceOptions","enableBarrierDeduce","Offset","Rect","width","height","Extent","depth","TextureSubresLayers","mipLevel","baseArrayLayer","layerCount","TextureSubresRange","baseMipLevel","levelCount","TextureCopy","srcSubres","srcOffset","dstSubres","dstOffset","extent","TextureBlit","srcExtent","dstExtent","BufferTextureCopy","buffOffset","buffStride","buffTexHeight","texOffset","texExtent","texSubres","Viewport","left","top","minDepth","maxDepth","_proto12","reset","Color","w","_proto13","set","MarkerInfo","name","color","BindingMappingInfo","maxBlockCounts","maxSamplerTextureCounts","maxSamplerCounts","maxTextureCounts","maxBufferCounts","maxImageCounts","maxSubpassInputCounts","setIndices","slice","SwapchainInfo","windowId","windowHandle","vsyncMode","ON","DeviceInfo","bindingMappingInfo","BufferInfo","usage","memUsage","size","stride","flags","NONE","BufferViewInfo","buffer","offset","range","DrawInfo","vertexCount","firstVertex","indexCount","firstIndex","vertexOffset","instanceCount","firstInstance","DispatchInfo","groupCountX","groupCountY","groupCountZ","indirectBuffer","indirectOffset","IndirectBuffer","drawInfos","TextureInfo","type","format","samples","externalRes","TEX2D","UNKNOWN","X1","TextureViewInfo","texture","baseLevel","baseLayer","basePlane","planeCount","SamplerInfo","minFilter","magFilter","mipFilter","addressU","addressV","addressW","maxAnisotropy","cmpFunc","LINEAR","WRAP","ALWAYS","Uniform","count","UniformBlock","binding","members","flattened","UniformSamplerTexture","UniformSampler","UniformTexture","UniformStorageImage","memoryAccess","READ_WRITE","UniformStorageBuffer","UniformInputAttachment","ShaderStage","stage","Attribute","isNormalized","stream","isInstanced","location","ShaderInfo","stages","attributes","blocks","buffers","samplerTextures","samplers","textures","images","subpassInputs","hash","InputAssemblerInfo","vertexBuffers","indexBuffer","ColorAttachment","sampleCount","loadOp","storeOp","barrier","CLEAR","STORE","DepthStencilAttachment","depthLoadOp","depthStoreOp","stencilLoadOp","stencilStoreOp","SubpassInfo","inputs","colors","resolves","preserves","depthStencil","depthStencilResolve","shadingRate","depthResolveMode","stencilResolveMode","SubpassDependency","srcSubpass","dstSubpass","generalBarrier","prevAccesses","nextAccesses","RenderPassInfo","colorAttachments","depthStencilAttachment","depthStencilResolveAttachment","subpasses","dependencies","ResourceRange","depthOrArraySize","firstSlice","numSlices","GeneralBarrierInfo","FULL","TextureBarrierInfo","discardContents","srcQueue","dstQueue","BufferBarrierInfo","FramebufferInfo","renderPass","colorTextures","depthStencilTexture","depthStencilResolveTexture","DescriptorSetLayoutBinding","descriptorType","stageFlags","access","viewDimension","sampleType","immutableSamplers","READ_ONLY","FLOAT","DescriptorSetLayoutInfo","bindings","DescriptorSetInfo","layout","PipelineLayoutInfo","setLayouts","InputState","CommandBufferInfo","queue","PRIMARY","QueueInfo","GRAPHICS","QueryPoolInfo","maxQueryObjects","forceWait","OCCLUSION","FormatInfo","hasAlpha","hasDepth","hasStencil","isCompressed","MemoryStatus","bufferSize","textureSize","DynamicStencilStates","writeMask","compareMask","reference","DynamicStates","viewport","scissor","blendConstant","lineWidth","depthBiasConstant","depthBiasClamp","depthBiasSlope","depthMinBounds","depthMaxBounds","stencilStatesFront","stencilStatesBack","GFXObject","_GCObject","objectType","_this","call","_objectType","_objectID","_typedID","_idTable","_inheritsLoose","_createClass","key","get","GCObject","createFormatInfo","createFormatInfo_ASTC_SRGBA","nameSuffix","UNORM","createFormatInfo_ASTC_RGBA","Array","COUNT","fill","FormatInfos","Object","freeze","SNORM","UINT","INT","UFLOAT","DESCRIPTOR_BUFFER_TYPE","UNIFORM_BUFFER","DYNAMIC_UNIFORM_BUFFER","STORAGE_BUFFER","DYNAMIC_STORAGE_BUFFER","DESCRIPTOR_SAMPLER_TYPE","SAMPLER_TEXTURE","SAMPLER","TEXTURE","STORAGE_IMAGE","INPUT_ATTACHMENT","DESCRIPTOR_DYNAMIC_TYPE","DESCRIPTOR_STORAGE_BUFFER_TYPE","DRAW_INFO_SIZE","IsPowerOf2","ceil","Math","FormatSize","BC1","BC1_ALPHA","BC1_SRGB","BC1_SRGB_ALPHA","BC2","BC2_SRGB","BC3","BC3_SRGB","BC4","BC4_SNORM","BC6H_SF16","BC6H_UF16","BC7","BC7_SRGB","BC5","BC5_SNORM","ETC_RGB8","ETC2_RGB8","ETC2_SRGB8","ETC2_RGB8_A1","EAC_R11","EAC_R11SN","ETC2_RGBA8","ETC2_SRGB8_A1","EAC_RG11","EAC_RG11SN","PVRTC_RGB2","PVRTC_RGBA2","PVRTC2_2BPP","PVRTC_RGB4","PVRTC_RGBA4","PVRTC2_4BPP","ASTC_RGBA_4X4","ASTC_SRGBA_4X4","ASTC_RGBA_5X4","ASTC_SRGBA_5X4","ASTC_RGBA_5X5","ASTC_SRGBA_5X5","ASTC_RGBA_6X5","ASTC_SRGBA_6X5","ASTC_RGBA_6X6","ASTC_SRGBA_6X6","ASTC_RGBA_8X5","ASTC_SRGBA_8X5","ASTC_RGBA_8X6","ASTC_SRGBA_8X6","ASTC_RGBA_8X8","ASTC_SRGBA_8X8","ASTC_RGBA_10X5","ASTC_SRGBA_10X5","ASTC_RGBA_10X6","ASTC_SRGBA_10X6","ASTC_RGBA_10X8","ASTC_SRGBA_10X8","ASTC_RGBA_10X10","ASTC_SRGBA_10X10","ASTC_RGBA_12X10","ASTC_SRGBA_12X10","ASTC_RGBA_12X12","ASTC_SRGBA_12X12","FormatSurfaceSize","mips","max","_type2size","GetTypeSize","getTypedArrayConstructor","Uint8Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","formatAlignment","alignTo","alignment","_GFXObject","Buffer","BUFFER","_usage","_memUsage","_size","_stride","_count","_flags","_isBufferView","CommandBuffer","COMMAND_BUFFER","_queue","_type","_numDrawCalls","_numInstances","_numTris","Device","_gfxAPI","_renderer","_vendor","_features","_formatFeatures","_cmdBuff","_memoryStatus","_caps","_bindingMappingInfo","_samplers","Map","_generalBarrierss","_textureBarriers","_bufferBarriers","_swapchainFormat","RGBA8","_proto","hasFeature","feature","getFormatFeatures","enableAutoBarrier","getMaxSampleCount","canvas","DefaultResource","device","_texture2D","_texture3D","_textureCube","_texture2DArray","capabilities","createTexture","STORAGE","SAMPLED","copyRegion","copyBuffersToTexture","CUBE","TEX3D","TEX2D_ARRAY","getTexture","Swapchain","SWAPCHAIN","_transform","IDENTITY","_colorTexture","_depthStencilTexture","Framebuffer","FRAMEBUFFER","_renderPass","_colorTextures","_width","_height","_this$colorTextures$","_this$colorTextures$2","_this$colorTextures$3","_this$colorTextures$4","getUint8ForString","String","charCodeAt","getUint8ForArray","idx","murmurhash2_32_gc","input","seed","l","h","getUint8","k","InputAssembler","INPUT_ASSEMBLER","_attributes","_attributesHash","_vertexBuffers","_indexBuffer","_indirectBuffer","_drawInfo","getVertexBuffer","computeAttributesHash","res","at","first","DescriptorSet","DESCRIPTOR_SET","_layout","_buffers","_textures","_isDirty","bindBuffer","index","bindingIndex","bindingIndices","descriptorIndex","descriptorIndices","bindSampler","sampler","bindTexture","getBuffer","getSampler","DescriptorSetLayout","DESCRIPTOR_SET_LAYOUT","_bindings","_bindingIndices","_descriptorIndices","PipelineLayout","PIPELINE_LAYOUT","_setLayouts","RasterizerState","isDiscard","polygonMode","shadeModel","cullMode","isFrontFaceCCW","depthBiasEnabled","depthBias","depthBiasSlop","isDepthClip","isMultisample","FILL","GOURAND","BACK","assign","rs","destroy","DepthStencilState","depthTest","depthWrite","depthFunc","stencilTestFront","stencilFuncFront","stencilReadMaskFront","stencilWriteMaskFront","stencilFailOpFront","stencilZFailOpFront","stencilPassOpFront","stencilRefFront","stencilTestBack","stencilFuncBack","stencilReadMaskBack","stencilWriteMaskBack","stencilFailOpBack","stencilZFailOpBack","stencilPassOpBack","stencilRefBack","LESS","KEEP","_proto2","dss","BlendTarget","blend","blendSrc","blendDst","blendEq","blendSrcAlpha","blendDstAlpha","blendAlphaEq","blendColorMask","ONE","ZERO","ADD","ALL","_proto3","BlendState","isA2C","isIndepend","blendColor","targets","_proto4","setTarget","tg","shader","pipelineLayout","inputState","rasterizerState","depthStencilState","blendState","primitive","dynamicStates","bindPoint","TRIANGLE_LIST","PipelineState","PIPELINE_STATE","_shader","_pipelineLayout","_primitive","_is","_rs","_dss","_bs","_dynamicStates","Queue","QUEUE","RenderPass","RENDER_PASS","_colorInfos","_depthStencilInfo","_subpasses","_hash","computeHash","subpass","j","ia","ca","ds","_info","Sampler","min","unpackFromHash","Shader","SHADER","_name","_stages","_blocks","Texture","_viewInfo","_isPowerOf2","_isTextureView","getLevelCount","floor","log2","GLOBAL_BARRIER","GeneralBarrier","TEXTURE_BARRIER","TextureBarrier","BUFFER_BARRIER","BufferBarrier"],"mappings":"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"}