{"version":3,"file":"deprecated-gv6rCJsk.js","sources":["../../../pal/pacer/pacer-web.ts","../../../cocos/ui/view.ts","../../../cocos/game/splash-screen.ts","../../../cocos/core/effect-settings.ts","../../../cocos/game/game.ts","../../../pal/env/web/env.ts","../../../cocos/game/deprecated.ts"],"sourcesContent":["/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, USE_XR } from 'internal:constants';\r\nimport { assertIsTrue } from '../../cocos/core/data/utils/asserts';\r\nimport { checkPalIntegrity, withImpl } from '../integrity-check';\r\n\r\nconst FRAME_RESET_TIME = 2000;\r\n\r\nexport class Pacer {\r\n    private _stHandle = 0;\r\n    private _onTick: (() => void) | null = null;\r\n    private _targetFrameRate = 60;\r\n    private _frameTime = 0;\r\n    private _startTime = 0;\r\n    private _isPlaying = false;\r\n    private _frameCount = 0;\r\n    private _callback: (() => void) | null = null;\r\n    private _rAF: typeof requestAnimationFrame;\r\n    private _cAF: typeof cancelAnimationFrame;\r\n\r\n    constructor () {\r\n        this._frameTime = 1000 / this._targetFrameRate;\r\n        this._rAF = window.requestAnimationFrame\r\n        || window.webkitRequestAnimationFrame\r\n        || window.mozRequestAnimationFrame\r\n        || window.oRequestAnimationFrame\r\n        || window.msRequestAnimationFrame;\r\n        this._cAF = window.cancelAnimationFrame\r\n        || window.cancelRequestAnimationFrame\r\n        || window.msCancelRequestAnimationFrame\r\n        || window.mozCancelRequestAnimationFrame\r\n        || window.oCancelRequestAnimationFrame\r\n        || window.webkitCancelRequestAnimationFrame\r\n        || window.msCancelAnimationFrame\r\n        || window.mozCancelAnimationFrame\r\n        || window.webkitCancelAnimationFrame\r\n        || window.ocancelAnimationFrame;\r\n    }\r\n\r\n    get targetFrameRate (): number {\r\n        return this._targetFrameRate;\r\n    }\r\n\r\n    set targetFrameRate (val: number) {\r\n        if (this._targetFrameRate !== val) {\r\n            assertIsTrue(val > 0);\r\n            this._targetFrameRate = val;\r\n            this._frameTime = 1000 / this._targetFrameRate;\r\n            if (this._isPlaying) {\r\n                this.stop();\r\n                this.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    set onTick (val: (() => void) | null) {\r\n        this._onTick = val;\r\n    }\r\n\r\n    get onTick (): (() => void) | null {\r\n        return this._onTick;\r\n    }\r\n\r\n    start (): void {\r\n        if (this._isPlaying) return;\r\n        const recordStartTime = EDITOR || this._rAF === undefined || (USE_XR && globalThis.__globalXR?.isWebXR);\r\n        const updateCallback = (): void => {\r\n            if (recordStartTime) this._startTime = performance.now();\r\n            if (this._isPlaying) {\r\n                this._stHandle = this._stTime(updateCallback);\r\n            }\r\n            if (this._onTick) {\r\n                this._onTick();\r\n            }\r\n        };\r\n        this._startTime = performance.now();\r\n        this._stHandle = this._stTime(updateCallback);\r\n\r\n        this._isPlaying = true;\r\n        this._frameCount = 0;\r\n    }\r\n\r\n    stop (): void {\r\n        if (!this._isPlaying) return;\r\n        this._ctTime(this._stHandle);\r\n        this._stHandle = 0;\r\n        this._isPlaying = false;\r\n        this._frameCount = 0;\r\n    }\r\n\r\n    _handleRAF = (stamp: number): void => {\r\n        const currTime = performance.now();\r\n        const elapseTime = currTime - this._startTime;\r\n        const elapseFrame = Math.floor(elapseTime / this._frameTime);\r\n        if (elapseFrame < 0) {\r\n            this._startTime = currTime;\r\n            this._frameCount = 0;\r\n        }\r\n        if (elapseFrame < this._frameCount) {\r\n            this._stHandle = this._rAF.call(window, this._handleRAF);\r\n        } else {\r\n            this._frameCount = elapseFrame + 1;\r\n            if (this._callback) {\r\n                this._callback();\r\n            }\r\n        }\r\n    };\r\n\r\n    private _stTime (callback: () => void): number {\r\n        if (EDITOR || this._rAF === undefined || (USE_XR && globalThis.__globalXR?.isWebXR)) {\r\n            const currTime = performance.now();\r\n            const elapseTime = Math.max(0, currTime - this._startTime);\r\n            const timeToCall = Math.max(0, this._frameTime - elapseTime);\r\n            return setTimeout(callback, timeToCall);\r\n        }\r\n        this._callback = callback;\r\n        return this._rAF.call(window, this._handleRAF);\r\n    }\r\n\r\n    private _ctTime (id: number | undefined): void {\r\n        if (EDITOR || this._cAF === undefined || (USE_XR && globalThis.__globalXR?.isWebXR)) {\r\n            clearTimeout(id);\r\n        } else if (id) {\r\n            this._cAF.call(window, id);\r\n        }\r\n    }\r\n}\r\n\r\ncheckPalIntegrity<typeof import('pal/pacer')>(withImpl<typeof import('./pacer-web')>());\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport '../core/data/class';\r\nimport { MINIGAME, JSB, RUNTIME_BASED, EDITOR } from 'internal:constants';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { Eventify } from '../core/event';\r\nimport { rect, Rect, size, Size, Vec2 } from '../core/math';\r\nimport { visibleRect, cclegacy, errorID, screen, macro, System, assert } from '../core';\r\nimport { Orientation } from '../../pal/screen-adapter/enum-type';\r\nimport { director } from '../game/director';\r\nimport { settings, SettingsCategory } from '../core/settings';\r\nimport type { Root } from '../root';\r\nimport type { Game } from '../game';\r\n\r\n/**\r\n * @en View represents the game window.<br/>\r\n * It's main task include: <br/>\r\n *  - Apply the design resolution policy to the UI Canvas<br/>\r\n *  - Provide interaction with the window, like resize event on web, retina display support, etc...<br/>\r\n *  - Manage the scale and translation of canvas related to the frame on Web<br/>\r\n * <br/>\r\n * With [[view]] as its singleton initialized by the engine, you don't need to call any constructor or create functions,<br/>\r\n * the standard way to use it is by calling:<br/>\r\n *  - view.methodName(); <br/>\r\n * @zh View 代表游戏窗口视图，它的核心功能包括：\r\n *  - 对所有 UI Canvas 进行设计分辨率适配。\r\n *  - 提供窗口视图的交互，比如监听 resize 事件，控制 retina 屏幕适配，等等。\r\n *  - 控制 Canvas 节点相对于外层 DOM 节点的缩放和偏移。\r\n * 引擎会自动初始化它的单例对象 [[view]]，所以你不需要实例化任何 View，只需要直接使用 `view.methodName();`\r\n */\r\n\r\nconst localWinSize = size();\r\n\r\nconst orientationMap = {\r\n    [macro.ORIENTATION_AUTO]: Orientation.AUTO,\r\n    [macro.ORIENTATION_LANDSCAPE]: Orientation.LANDSCAPE,\r\n    [macro.ORIENTATION_PORTRAIT]: Orientation.PORTRAIT,\r\n};\r\n\r\nexport class View extends Eventify(System) {\r\n    public static instance: View;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _designResolutionSize: Size = size(0, 0); // resolution size, it is the size appropriate for the app resources.\r\n\r\n    private _scaleX: number = 1;\r\n    private _scaleY: number = 1;\r\n    private _viewportRect: Rect = rect(); // Viewport is the container's rect related to content's coordinates in pixel\r\n    private _visibleRect: Rect = rect(); // The visible rect in content's coordinate in point\r\n    private _autoFullScreen: boolean = false; // Auto full screen disabled by default\r\n    private _retinaEnabled: boolean = false; // Retina disabled by default\r\n    private _resizeCallback: (() => void) | null = null; // Custom callback for resize event\r\n    private declare _resolutionPolicy: ResolutionPolicy;\r\n\r\n    private declare _rpExactFit: ResolutionPolicy;\r\n    private declare _rpShowAll: ResolutionPolicy;\r\n    private declare _rpNoBorder: ResolutionPolicy;\r\n    private declare _rpFixedHeight: ResolutionPolicy;\r\n    private declare _rpFixedWidth: ResolutionPolicy;\r\n\r\n    constructor () {\r\n        super();\r\n\r\n        const _strategyer = ContainerStrategy;\r\n        const _strategy = ContentStrategy;\r\n\r\n        // Setup system default resolution policies\r\n        this._rpExactFit = new ResolutionPolicy(_strategyer.EQUAL_TO_FRAME, _strategy.EXACT_FIT);\r\n        this._rpShowAll = new ResolutionPolicy(_strategyer.EQUAL_TO_FRAME, _strategy.SHOW_ALL);\r\n        this._rpNoBorder = new ResolutionPolicy(_strategyer.EQUAL_TO_FRAME, _strategy.NO_BORDER);\r\n        this._rpFixedHeight = new ResolutionPolicy(_strategyer.EQUAL_TO_FRAME, _strategy.FIXED_HEIGHT);\r\n        this._rpFixedWidth = new ResolutionPolicy(_strategyer.EQUAL_TO_FRAME, _strategy.FIXED_WIDTH);\r\n        this._resolutionPolicy = this._rpShowAll;\r\n    }\r\n\r\n    // Call init at the time Game.EVENT_ENGINE_INITED\r\n    public init (): void {\r\n        const windowSize = screen.windowSize;\r\n        const w = windowSize.width;\r\n        const h = windowSize.height;\r\n        this._designResolutionSize.width = w;\r\n        this._designResolutionSize.height = h;\r\n        this._viewportRect.width = w;\r\n        this._viewportRect.height = h;\r\n        this._visibleRect.width = w;\r\n        this._visibleRect.height = h;\r\n\r\n        localWinSize.width = this._visibleRect.width;\r\n        localWinSize.height = this._visibleRect.height;\r\n        if (visibleRect) {\r\n            visibleRect.init(this._visibleRect);\r\n        }\r\n\r\n        if (!EDITOR) {\r\n            this.resizeWithBrowserSize(true);\r\n            const designResolution = settings.querySettings(SettingsCategory.SCREEN, 'designResolution');\r\n            if (designResolution) {\r\n                this.setDesignResolutionSize(\r\n                    Number(designResolution.width),\r\n                    Number(designResolution.height),\r\n                    designResolution.policy as ResolutionPolicy || ResolutionPolicy.FIXED_HEIGHT,\r\n                );\r\n            }\r\n        }\r\n\r\n        // For now, the engine UI is adapted to resolution size, instead of window size.\r\n        screen.on('window-resize', this._updateAdaptResult, this);\r\n        screen.on('fullscreen-change', this._updateAdaptResult, this);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets whether resize canvas automatically when browser's size changed.<br/>\r\n     * Useful only on web.\r\n     * @zh 设置当发现浏览器的尺寸改变时，是否自动调整 canvas 尺寸大小。\r\n     * 仅在 Web 模式下有效。\r\n     * @param enabled - Whether enable automatic resize with browser's resize event\r\n     */\r\n    public resizeWithBrowserSize (enabled: boolean): void {\r\n        screenAdapter.handleResizeEvent = enabled;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the callback function for `view`'s resize action,<br/>\r\n     * this callback will be invoked before applying resolution policy, <br/>\r\n     * so you can do any additional modifications within the callback.<br/>\r\n     * Useful only on web.\r\n     * @zh 设置 `view` 调整视窗尺寸行为的回调函数，\r\n     * 这个回调函数会在应用适配模式之前被调用，\r\n     * 因此你可以在这个回调函数内添加任意附加改变，\r\n     * 仅在 Web 平台下有效。\r\n     * @param callback - The callback function\r\n     *\r\n     * @deprecated since v3.8.0, please use [[screen.on]] to listen for events.\r\n     */\r\n    public setResizeCallback (callback: (() => void) | null): void {\r\n        if (typeof callback === 'function' || callback == null) {\r\n            this._resizeCallback = callback;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the orientation of the game, it can be landscape, portrait or auto.\r\n     * When set it to landscape or portrait, and screen w/h ratio doesn't fit,\r\n     * `view` will automatically rotate the game canvas using CSS.\r\n     * Note that this function doesn't have any effect in native,\r\n     * in native, you need to set the application orientation in native project settings\r\n     * @zh 设置游戏屏幕朝向，它能够是横版，竖版或自动。\r\n     * 当设置为横版或竖版，并且屏幕的宽高比例不匹配时，\r\n     * `view` 会自动用 CSS 旋转游戏场景的 canvas，\r\n     * 这个方法不会对 native 部分产生任何影响，对于 native 而言，你需要在应用设置中的设置排版。\r\n     * @param orientation - Possible values: macro.ORIENTATION_LANDSCAPE | macro.ORIENTATION_PORTRAIT | macro.ORIENTATION_AUTO\r\n     */\r\n    public setOrientation (orientation: number): void {\r\n        screenAdapter.orientation = orientationMap[orientation];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets whether the engine modify the \"viewport\" meta in your web page.<br/>\r\n     * It's enabled by default, we strongly suggest you not to disable it.<br/>\r\n     * And even when it's enabled, you can still set your own \"viewport\" meta, it won't be overridden<br/>\r\n     * Only useful on web\r\n     * @zh 设置引擎是否调整 viewport meta 来配合屏幕适配。\r\n     * 默认设置为启动，我们强烈建议你不要将它设置为关闭。\r\n     * 即使当它启动时，你仍然能够设置你的 viewport meta，它不会被覆盖。\r\n     * 仅在 Web 模式下有效\r\n     * @param enabled - Enable automatic modification to \"viewport\" meta\r\n     * @deprecated since v3.3\r\n     */\r\n    public adjustViewportMeta (enabled: boolean): void {\r\n        // DO NOTHING\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Retina support is enabled by default for Apple device but disabled for other devices,<br/>\r\n     * it takes effect only when you called setDesignResolutionPolicy<br/>\r\n     * Only useful on web\r\n     * @zh 对于 Apple 这种支持 Retina 显示的设备上默认进行优化而其他类型设备默认不进行优化，\r\n     * 它仅会在你调用 setDesignResolutionPolicy 方法时有影响。\r\n     * 仅在 Web 模式下有效。\r\n     * @param enabled - Enable or disable retina display\r\n     *\r\n     * @deprecated since v3.4.0\r\n     */\r\n    public enableRetina (enabled: boolean): void {\r\n        this._retinaEnabled = !!enabled;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Check whether retina display is enabled.<br/>\r\n     * Only useful on web\r\n     * @zh 检查是否对 Retina 显示设备进行优化。\r\n     * 仅在 Web 模式下有效。\r\n     *\r\n     * @deprecated since v3.4.0\r\n     */\r\n    public isRetinaEnabled (): boolean {\r\n        return this._retinaEnabled;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If enabled, the application will try automatically to enter full screen mode on mobile devices<br/>\r\n     * You can pass true as parameter to enable it and disable it by passing false.<br/>\r\n     * Only useful on web\r\n     * @zh 启动时，移动端游戏会在移动端自动尝试进入全屏模式。\r\n     * 你能够传入 true 为参数去启动它，用 false 参数来关闭它。\r\n     * @param enabled - Enable or disable auto full screen on mobile devices\r\n     *\r\n     * @deprecated since v3.3, please use screen.requestFullScreen() instead.\r\n     */\r\n    public enableAutoFullScreen (enabled: boolean): void {\r\n        if (enabled === this._autoFullScreen) {\r\n            return;\r\n        }\r\n        this._autoFullScreen = enabled;\r\n        if (enabled) {\r\n            screen.requestFullScreen().catch((e) => {\r\n                // do nothing\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Check whether auto full screen is enabled.<br/>\r\n     * Only useful on web\r\n     * @zh 检查自动进入全屏模式是否启动。\r\n     * 仅在 Web 模式下有效。\r\n     * @return Auto full screen enabled or not\r\n     *\r\n     * @deprecated since v3.3\r\n     */\r\n    public isAutoFullScreenEnabled (): boolean {\r\n        return this._autoFullScreen;\r\n    }\r\n\r\n    /**\r\n     * @en Set the canvas size in CSS pixels on Web platform.\r\n     * This method is not supported on other platforms.\r\n     * @zh  Web 平台下，可以以 CSS 像素尺寸来设置 canvas 尺寸。\r\n     * 这个方法并不支持其他平台。\r\n     * @private\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     *\r\n     * @deprecated since v3.4.0, setting size in CSS pixels is not recommended, please use screen.windowSize instead.\r\n     */\r\n    public setCanvasSize (width: number, height: number): void {\r\n        // set resolution scale to 1;\r\n        screenAdapter.resolutionScale = 1;\r\n\r\n        // set window size\r\n        const dpr = screenAdapter.devicePixelRatio;\r\n        const windowSize = new Size(width * dpr, height * dpr);\r\n        screen.windowSize = windowSize;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns the canvas size of the view.<br/>\r\n     * On native platforms, it returns the screen size since the view is a fullscreen view.<br/>\r\n     * On web, it returns the size of the canvas element.\r\n     * @zh 返回视图中 canvas 的尺寸。\r\n     * 在 native 平台下，它返回全屏视图下屏幕的尺寸。\r\n     * 在 Web 平台下，它返回 canvas 元素尺寸。\r\n     *\r\n     * @deprecated since v3.4.0, please use screen.windowSize instead.\r\n     */\r\n    public getCanvasSize (): Size {\r\n        return screen.windowSize;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns the frame size of the view in CSS pixels.<br/>\r\n     * On native platforms, it returns the screen size since the view is a fullscreen view.<br/>\r\n     * On web, it returns the size of the canvas's outer DOM element.\r\n     * @zh 以 CSS 像素尺寸返回视图中边框尺寸。\r\n     * 在 native 平台下，它返回全屏视图下屏幕的尺寸。\r\n     * 在 web 平台下，它返回 canvas 元素的外层 DOM 元素尺寸。\r\n     *\r\n     * @deprecated since v3.4.0, getting size in CSS pixels is not recommended, please use screen.windowSize instead.\r\n     */\r\n    public getFrameSize (): Size {\r\n        const dpr = screenAdapter.devicePixelRatio;\r\n        const sizeInCssPixels = screen.windowSize;\r\n        sizeInCssPixels.width /= dpr;\r\n        sizeInCssPixels.height /= dpr;\r\n        return sizeInCssPixels;\r\n    }\r\n\r\n    /**\r\n     * @en Setting the frame size of the view in CSS pixels.\r\n     * On native, it sets the frame size of view.<br/>\r\n     * On web, it sets the size of the canvas's outer DOM element.\r\n     * @zh 以 CSS 像素尺寸设置视图中边框尺寸。\r\n     * 在 native 平台下，设置视图框架尺寸。\r\n     * 在 web 平台下，设置 canvas 外层 DOM 元素尺寸。\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     *\r\n     * @deprecated since v3.4.0, setting size in CSS pixels is not recommended, please use screen.windowSize instead.\r\n     */\r\n    public setFrameSize (width: number, height: number): void {\r\n        const dpr = screenAdapter.devicePixelRatio;\r\n        screen.windowSize = new Size(width * dpr, height * dpr);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the visible area size of the view port.\r\n     * @zh 返回视图窗口可见区域尺寸。\r\n     */\r\n    public getVisibleSize (): Size {\r\n        return new Size(this._visibleRect.width, this._visibleRect.height);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the visible area size of the view port.\r\n     * @zh 返回视图窗口可见区域像素尺寸。\r\n     */\r\n    public getVisibleSizeInPixel (): Size {\r\n        return new Size(\r\n            this._visibleRect.width * this._scaleX,\r\n            this._visibleRect.height * this._scaleY,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Returns the visible origin of the view port.\r\n     * @zh 返回视图窗口可见区域原点。\r\n     */\r\n    public getVisibleOrigin (): Vec2 {\r\n        return new Vec2(this._visibleRect.x, this._visibleRect.y);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the visible origin of the view port.\r\n     * @zh 返回视图窗口可见区域像素原点。\r\n     */\r\n    public getVisibleOriginInPixel (): Vec2 {\r\n        return new Vec2(\r\n            this._visibleRect.x * this._scaleX,\r\n            this._visibleRect.y * this._scaleY,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current resolution policy\r\n     * @zh 返回当前分辨率方案\r\n     * @see [[ResolutionPolicy]]\r\n     */\r\n    public getResolutionPolicy (): ResolutionPolicy {\r\n        return this._resolutionPolicy;\r\n    }\r\n\r\n    private _updateResolutionPolicy (resolutionPolicy: ResolutionPolicy|number): void {\r\n        if (resolutionPolicy instanceof ResolutionPolicy) {\r\n            this._resolutionPolicy = resolutionPolicy;\r\n        } else {\r\n            // Ensure compatibility with JSB\r\n            const _locPolicy = ResolutionPolicy;\r\n            if (resolutionPolicy === _locPolicy.EXACT_FIT) {\r\n                this._resolutionPolicy = this._rpExactFit;\r\n            }\r\n            if (resolutionPolicy === _locPolicy.SHOW_ALL) {\r\n                this._resolutionPolicy = this._rpShowAll;\r\n            }\r\n            if (resolutionPolicy === _locPolicy.NO_BORDER) {\r\n                this._resolutionPolicy = this._rpNoBorder;\r\n            }\r\n            if (resolutionPolicy === _locPolicy.FIXED_HEIGHT) {\r\n                this._resolutionPolicy = this._rpFixedHeight;\r\n            }\r\n            if (resolutionPolicy === _locPolicy.FIXED_WIDTH) {\r\n                this._resolutionPolicy = this._rpFixedWidth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @en Sets the current resolution policy\r\n     * @zh 设置当前分辨率模式\r\n     * @see [[ResolutionPolicy]]\r\n     */\r\n    public setResolutionPolicy (resolutionPolicy: ResolutionPolicy|number): void {\r\n        this._updateResolutionPolicy(resolutionPolicy);\r\n        const designedResolution = view.getDesignResolutionSize();\r\n        view.setDesignResolutionSize(designedResolution.width, designedResolution.height, resolutionPolicy);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the resolution policy with designed view size in points.<br/>\r\n     * The resolution policy include: <br/>\r\n     * [1] ResolutionExactFit       Fill screen by stretch-to-fit: if the design resolution ratio of width to height is different from the screen resolution ratio, your game view will be stretched.<br/>\r\n     * [2] ResolutionNoBorder       Full screen without black border: if the design resolution ratio of width to height is different from the screen resolution ratio, two areas of your game view will be cut.<br/>\r\n     * [3] ResolutionShowAll        Full screen with black border: if the design resolution ratio of width to height is different from the screen resolution ratio, two black borders will be shown.<br/>\r\n     * [4] ResolutionFixedHeight    Scale the content's height to screen's height and proportionally scale its width<br/>\r\n     * [5] ResolutionFixedWidth     Scale the content's width to screen's width and proportionally scale its height<br/>\r\n     * [ResolutionPolicy]        [Web only feature] Custom resolution policy, constructed by ResolutionPolicy<br/>\r\n     * @zh 通过设置设计分辨率和匹配模式来进行游戏画面的屏幕适配。\r\n     * @param width Design resolution width.\r\n     * @param height Design resolution height.\r\n     * @param resolutionPolicy The resolution policy desired\r\n     */\r\n    public setDesignResolutionSize (width: number, height: number, resolutionPolicy: ResolutionPolicy|number): void {\r\n        // Defensive code\r\n        if (!(width > 0 && height > 0)) {\r\n            errorID(2200);\r\n            return;\r\n        }\r\n\r\n        this._updateResolutionPolicy(resolutionPolicy);\r\n        const policy = this._resolutionPolicy;\r\n        if (policy) {\r\n            policy.preApply(this);\r\n        }\r\n\r\n        this._designResolutionSize.width = width;\r\n        this._designResolutionSize.height = height;\r\n\r\n        const result = policy.apply(this, this._designResolutionSize);\r\n\r\n        if (result.scale && result.scale.length === 2) {\r\n            this._scaleX = result.scale[0];\r\n            this._scaleY = result.scale[1];\r\n        }\r\n\r\n        if (result.viewport) {\r\n            const vp = this._viewportRect;\r\n            const vb = this._visibleRect;\r\n            const rv = result.viewport;\r\n\r\n            vp.x = rv.x;\r\n            vp.y = rv.y;\r\n            vp.width = rv.width;\r\n            vp.height = rv.height;\r\n\r\n            vb.x = 0;\r\n            vb.y = 0;\r\n            vb.width = rv.width / this._scaleX;\r\n            vb.height = rv.height / this._scaleY;\r\n        }\r\n\r\n        policy.postApply(this);\r\n        localWinSize.width = this._visibleRect.width;\r\n        localWinSize.height = this._visibleRect.height;\r\n\r\n        if (visibleRect) {\r\n            visibleRect.init(this._visibleRect);\r\n        }\r\n\r\n        this.emit('design-resolution-changed');\r\n    }\r\n\r\n    /**\r\n     * @en Returns the designed size for the view.\r\n     * @zh 返回视图的设计分辨率。\r\n     */\r\n    public getDesignResolutionSize (): Size {\r\n        return new Size(this._designResolutionSize.width, this._designResolutionSize.height);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the container to desired pixel resolution and fit the game content to it.\r\n     * This function is very useful for adaptation in mobile browsers.\r\n     * In some HD android devices, the resolution is very high, but its browser performance may not be very good.\r\n     * In this case, enabling retina display is very costy and not suggested, and if retina is disabled, the image may be blurry.\r\n     * But this API can be helpful to set a desired pixel resolution which is in between.\r\n     * This API will do the following:\r\n     *     1. Set viewport's width to the desired width in pixel\r\n     *     2. Set body width to the exact pixel resolution\r\n     *     3. The resolution policy will be reset with designed view size in points.\r\n     * @zh 设置容器（container）需要的像素分辨率并且适配相应分辨率的游戏内容。\r\n     * @param width Design resolution width.\r\n     * @param height Design resolution height.\r\n     * @param resolutionPolicy The resolution policy desired\r\n     *\r\n     * @deprecated since v3.6.0\r\n     */\r\n    public setRealPixelResolution (width: number, height: number, resolutionPolicy: ResolutionPolicy|number): void {\r\n        if (!JSB && !RUNTIME_BASED && !MINIGAME) {\r\n            // Set body width to the exact pixel resolution\r\n            document.documentElement.style.width = `${width}px`;\r\n            document.body.style.width = `${width}px`;\r\n            document.body.style.left = '0px';\r\n            document.body.style.top = '0px';\r\n        }\r\n\r\n        // Reset the resolution size and policy\r\n        this.setDesignResolutionSize(width, height, resolutionPolicy);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the view port rectangle.\r\n     * @zh 返回视窗剪裁区域。\r\n     */\r\n    public getViewportRect (): Rect {\r\n        return this._viewportRect;\r\n    }\r\n\r\n    /**\r\n     * @en Returns scale factor of the horizontal direction (X axis).\r\n     * @zh 返回横轴的缩放比，这个缩放比是将画布像素分辨率放到设计分辨率的比例。\r\n     */\r\n    public getScaleX (): number {\r\n        return this._scaleX;\r\n    }\r\n\r\n    /**\r\n     * @en Returns scale factor of the vertical direction (Y axis).\r\n     * @zh 返回纵轴的缩放比，这个缩放比是将画布像素分辨率缩放到设计分辨率的比例。\r\n     */\r\n    public getScaleY (): number {\r\n        return this._scaleY;\r\n    }\r\n\r\n    /**\r\n     * @en Returns device pixel ratio for retina display.\r\n     * @zh 返回设备或浏览器像素比例。\r\n     *\r\n     * @deprecated since v3.4.0, please use screen.devicePixelRatio instead.\r\n     */\r\n    public getDevicePixelRatio (): number {\r\n        return screenAdapter.devicePixelRatio;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the real location in view for a translation based on a related position\r\n     * @zh 将屏幕坐标转换为游戏视图下的坐标。\r\n     * @param tx - The X axis translation\r\n     * @param ty - The Y axis translation\r\n     * @param relatedPos - The related position object including \"left\", \"top\", \"width\", \"height\" informations\r\n     * @param out - The out object to save the conversion result\r\n     *\r\n     * @deprecated since v3.4.0\r\n     */\r\n    public convertToLocationInView (tx: number, ty: number, relatedPos: any, out: Vec2 = new Vec2()): Vec2 {\r\n        const x = screenAdapter.devicePixelRatio * (tx - relatedPos.left);\r\n        const y = screenAdapter.devicePixelRatio * ((relatedPos.top as number) + (relatedPos.height as number) - ty);\r\n        if (screenAdapter.isFrameRotated) {\r\n            out.x = screen.windowSize.width - y;\r\n            out.y = x;\r\n        } else {\r\n            out.x = x;\r\n            out.y = y;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Convert location in Cocos screen coordinate to location in UI space\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _convertToUISpace (point: Vec2): void {\r\n        const viewport = this._viewportRect;\r\n        point.x = (point.x - viewport.x) / this._scaleX;\r\n        point.y = (point.y - viewport.y) / this._scaleY;\r\n    }\r\n\r\n    private _updateAdaptResult (width: number, height: number, windowId?: number): void {\r\n        // The default invalid windowId is 0\r\n        (cclegacy.director.root as Root).resize(width, height, (windowId === undefined || windowId === 0) ? 1 : windowId);\r\n        const designResolutionSize = this._designResolutionSize;\r\n        // Frame size changed, do resize works\r\n        const w = designResolutionSize.width;\r\n        const h = designResolutionSize.height;\r\n\r\n        if (width > 0 && height > 0) {\r\n            this.setDesignResolutionSize(w, h, this._resolutionPolicy);\r\n        } else {\r\n            assert(false, '_updateAdaptResult Invalid size.');\r\n        }\r\n\r\n        this.emit('canvas-resize');\r\n        if (this._resizeCallback) this._resizeCallback();\r\n    }\r\n}\r\n\r\n/**\r\n * !en\r\n * Emit when design resolution changed.\r\n * !zh\r\n * 当设计分辨率改变时发送。\r\n * @event design-resolution-changed\r\n */\r\n\r\ninterface AdaptResult {\r\n    scale: number[];\r\n    viewport?: null | Rect;\r\n}\r\n\r\n/**\r\n * ContainerStrategy class is the root strategy class of container's scale strategy,\r\n * it controls the behavior of how to scale the cc.game.container and cc.game.canvas object\r\n */\r\nclass ContainerStrategy {\r\n    public static EQUAL_TO_FRAME: EqualToFrame;\r\n    public static PROPORTION_TO_FRAME: ProportionalToFrame;\r\n\r\n    public name = 'ContainerStrategy';\r\n\r\n    /**\r\n     * @en Manipulation before applying the strategy\r\n     * @zh 在应用策略之前的操作\r\n     * @param view - The target view\r\n     */\r\n    public preApply (_view: View): void {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @en Function to apply this strategy\r\n     * @zh 策略应用方法\r\n     * @param view\r\n     * @param designedResolution\r\n     */\r\n    public apply (_view: View, designedResolution: Size): void {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Manipulation after applying the strategy\r\n     * @zh 策略调用之后的操作\r\n     * @param view  The target view\r\n     */\r\n    public postApply (_view: View): void {\r\n        // do nothing\r\n    }\r\n\r\n    protected _setupCanvas (): void {\r\n        // TODO: need to figure out why set width and height of canvas\r\n        const locCanvas = (cclegacy.game as Game).canvas;\r\n        if (locCanvas) {\r\n            const windowSize = screen.windowSize;\r\n            if (locCanvas.width !== windowSize.width) {\r\n                locCanvas.width = windowSize.width;\r\n            }\r\n            if (locCanvas.height !== windowSize.height) {\r\n                locCanvas.height = windowSize.height;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Emit when canvas resize.\r\n * @zh\r\n * 当画布大小改变时发送。\r\n * @event canvas-resize\r\n */\r\n\r\n/**\r\n * ContentStrategy class is the root strategy class of content's scale strategy,\r\n * it controls the behavior of how to scale the scene and setup the viewport for the game\r\n *\r\n * @class ContentStrategy\r\n */\r\nclass ContentStrategy {\r\n    public declare static EXACT_FIT: ExactFit;\r\n    public declare static SHOW_ALL: ShowAll;\r\n    public declare static NO_BORDER: NoBorder;\r\n    public declare static FIXED_HEIGHT: FixedHeight;\r\n    public declare static FIXED_WIDTH: FixedWidth;\r\n\r\n    public name = 'ContentStrategy';\r\n\r\n    private _result: AdaptResult = {\r\n        scale: [1, 1],\r\n        viewport: null,\r\n    };\r\n    protected _strategy = ResolutionPolicy.UNKNOWN;\r\n\r\n    get strategy (): number {\r\n        return this._strategy;\r\n    }\r\n\r\n    constructor () {\r\n    }\r\n\r\n    /**\r\n     * @en Manipulation before applying the strategy\r\n     * @zh 策略应用前的操作\r\n     * @param view - The target view\r\n     */\r\n    public preApply (_view: View): void {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @en Function to apply this strategy\r\n     * The return value is {scale: [scaleX, scaleY], viewport: {new Rect}},\r\n     * The target view can then apply these value to itself, it's preferred not to modify directly its private variables\r\n     * @zh 调用策略方法\r\n     * @return The result scale and viewport rect\r\n     */\r\n    public apply (_view: View, designedResolution: Size): AdaptResult {\r\n        return { scale: [1, 1] };\r\n    }\r\n\r\n    /**\r\n     * @en Manipulation after applying the strategy\r\n     * @zh 策略调用之后的操作\r\n     * @param view - The target view\r\n     */\r\n    public postApply (_view: View): void {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _buildResult (containerW: number, containerH: number, contentW: number, contentH: number, scaleX: number, scaleY: number): AdaptResult {\r\n        // Makes content fit better the canvas\r\n        if (Math.abs(containerW - contentW) < 2) {\r\n            contentW = containerW;\r\n        }\r\n        if (Math.abs(containerH - contentH) < 2) {\r\n            contentH = containerH;\r\n        }\r\n\r\n        const viewport = new Rect(\r\n            Math.round((containerW - contentW) / 2),\r\n            Math.round((containerH - contentH) / 2),\r\n            contentW,\r\n            contentH,\r\n        );\r\n\r\n        const result = this._result;\r\n        result.scale = [scaleX, scaleY];\r\n        result.viewport = viewport;\r\n        return result;\r\n    }\r\n}\r\n\r\n// Container scale strategies\r\n\r\n/**\r\n * @class EqualToFrame\r\n * @extends ContainerStrategy\r\n */\r\nclass EqualToFrame extends ContainerStrategy {\r\n    public name = 'EqualToFrame';\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public apply (_view, designedResolution): void {\r\n        screenAdapter.isProportionalToFrame = false;\r\n        this._setupCanvas();\r\n    }\r\n}\r\n\r\n/**\r\n     * @class ProportionalToFrame\r\n     * @extends ContainerStrategy\r\n     */\r\nclass ProportionalToFrame extends ContainerStrategy {\r\n    public name = 'ProportionalToFrame';\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public apply (_view: View, designedResolution: Size): void {\r\n        screenAdapter.isProportionalToFrame = true;\r\n        this._setupCanvas();\r\n    }\r\n}\r\n\r\n// Alias: Strategy that makes the container's size equals to the frame's size\r\nContainerStrategy.EQUAL_TO_FRAME = new EqualToFrame();\r\n// Alias: Strategy that scale proportionally the container's size to frame's size\r\nContainerStrategy.PROPORTION_TO_FRAME = new ProportionalToFrame();\r\n\r\n// Content scale strategies\r\nclass ExactFit extends ContentStrategy {\r\n    public name = 'ExactFit';\r\n\r\n    constructor () {\r\n        super();\r\n        this._strategy = ResolutionPolicy.EXACT_FIT;\r\n    }\r\n\r\n    public apply (_view: View, designedResolution: Size): AdaptResult {\r\n        const windowSize = screen.windowSize;\r\n        const containerW = windowSize.width;\r\n        const containerH = windowSize.height;\r\n        const scaleX = containerW / designedResolution.width;\r\n        const scaleY = containerH / designedResolution.height;\r\n\r\n        return this._buildResult(containerW, containerH, containerW, containerH, scaleX, scaleY);\r\n    }\r\n}\r\n\r\nclass ShowAll extends ContentStrategy {\r\n    public name = 'ShowAll';\r\n\r\n    constructor () {\r\n        super();\r\n        this._strategy = ResolutionPolicy.SHOW_ALL;\r\n    }\r\n\r\n    public apply (_view: View, designedResolution: Size): AdaptResult {\r\n        const windowSize = screen.windowSize;\r\n        const containerW = windowSize.width;\r\n        const containerH = windowSize.height;\r\n        const designW = designedResolution.width;\r\n        const designH = designedResolution.height;\r\n        const scaleX = containerW / designW;\r\n        const scaleY = containerH / designH;\r\n        let scale = 0;\r\n        let contentW: number;\r\n        let contentH: number;\r\n\r\n        if (scaleX < scaleY) {\r\n            scale = scaleX;\r\n            contentW = containerW;\r\n            contentH = designH * scale;\r\n        } else {\r\n            scale = scaleY;\r\n            contentW = designW * scale;\r\n            contentH = containerH;\r\n        }\r\n\r\n        return this._buildResult(containerW, containerH, contentW, contentH, scale, scale);\r\n    }\r\n}\r\n\r\nclass NoBorder extends ContentStrategy {\r\n    public name = 'NoBorder';\r\n\r\n    constructor () {\r\n        super();\r\n        this._strategy = ResolutionPolicy.NO_BORDER;\r\n    }\r\n\r\n    public apply (_view, designedResolution): AdaptResult {\r\n        const windowSize = screen.windowSize;\r\n        const containerW = windowSize.width;\r\n        const containerH = windowSize.height;\r\n        const designW = designedResolution.width;\r\n        const designH = designedResolution.height;\r\n        const scaleX = containerW / designW;\r\n        const scaleY = containerH / designH;\r\n        let scale: number;\r\n        let contentW: number;\r\n        let contentH: number;\r\n\r\n        if (scaleX < scaleY) {\r\n            scale = scaleY;\r\n            contentW = designW * scale;\r\n            contentH = containerH;\r\n        } else {\r\n            scale = scaleX;\r\n            contentW = containerW;\r\n            contentH = designH * scale;\r\n        }\r\n\r\n        return this._buildResult(containerW, containerH, contentW, contentH, scale, scale);\r\n    }\r\n}\r\n\r\nclass FixedHeight extends ContentStrategy {\r\n    public name = 'FixedHeight';\r\n\r\n    constructor () {\r\n        super();\r\n        this._strategy = ResolutionPolicy.FIXED_HEIGHT;\r\n    }\r\n\r\n    public apply (_view: View, designedResolution: Size): AdaptResult {\r\n        const windowSize = screen.windowSize;\r\n        const containerW = windowSize.width;\r\n        const containerH = windowSize.height;\r\n        const designH = designedResolution.height;\r\n        const scale = containerH / designH;\r\n        const contentW = containerW;\r\n        const contentH = containerH;\r\n\r\n        return this._buildResult(containerW, containerH, contentW, contentH, scale, scale);\r\n    }\r\n}\r\n\r\nclass FixedWidth extends ContentStrategy {\r\n    public name = 'FixedWidth';\r\n\r\n    constructor () {\r\n        super();\r\n        this._strategy = ResolutionPolicy.FIXED_WIDTH;\r\n    }\r\n\r\n    public apply (_view: View, designedResolution: Size): AdaptResult {\r\n        const windowSize = screen.windowSize;\r\n        const containerW = windowSize.width;\r\n        const containerH = windowSize.height;\r\n        const designW = designedResolution.width;\r\n        const scale = containerW / designW;\r\n        const contentW = containerW;\r\n        const contentH = containerH;\r\n\r\n        return this._buildResult(containerW, containerH, contentW, contentH, scale, scale);\r\n    }\r\n}\r\n\r\n/**\r\n * @en ResolutionPolicy class is the root strategy class of scale strategy,\r\n * its main task is to maintain the compatibility with Cocos2d-x.\r\n *\r\n * @zh ResolutionPolicy 类是适配策略的根策略类，它的主要任务是保持与 Cocos2d-x 的兼容性。\r\n */\r\nexport class ResolutionPolicy {\r\n    /**\r\n     * @en The entire application is visible in the specified area without trying to preserve the original aspect ratio.\r\n     * Distortion can occur, and the application may appear stretched or compressed.\r\n     *\r\n     * @zh 整个应用程序在指定区域可见，无需尝试保留原始纵横比，\r\n     * 可能会发生变形，出现画面拉伸或压缩。\r\n     */\r\n    public static EXACT_FIT = 0;\r\n    /**\r\n     * @en The entire application fills the specified area, without distortion but possibly with some cropping,\r\n     * while maintaining the original aspect ratio of the application.\r\n     *\r\n     * @zh 整个应用程序填充指定区域，没有变形，但可能有一些裁剪，\r\n     * 同时保持画面的原始纵横比。\r\n     */\r\n    public static NO_BORDER = 1;\r\n    /**\r\n     * @en The entire application is visible in the specified area without distortion while maintaining the original\r\n     * aspect ratio of the application. Borders can appear on two sides of the application.\r\n     *\r\n     * @zh 整个应用程序在指定区域可见，没有变形，同时保持原始纵横比，\r\n     * 边框可能出现在画面的旁侧。\r\n     */\r\n    public static SHOW_ALL = 2;\r\n    /**\r\n     * @en The application takes the height of the design resolution size and modifies the width of the internal\r\n     * canvas so that it fits the aspect ratio of the device\r\n     * no distortion will occur however you must make sure your application works on different\r\n     * aspect ratios\r\n     *\r\n     * @zh 该应用程序采用设计分辨率大小的高度并修改内部画布的宽度，使其适合设备的纵横比，不会发生变形，\r\n     * 但是您必须确保您的应用程序在不同的纵横比的设备下工作。\r\n     */\r\n    public static FIXED_HEIGHT = 3;\r\n    /**\r\n     * @en The application takes the width of the design resolution size and modifies the height of the internal\r\n     * canvas so that it fits the aspect ratio of the device\r\n     * no distortion will occur however you must make sure your application works on different\r\n     * aspect ratios\r\n     *\r\n     * @zh 该应用程序采用设计分辨率大小的宽度并修改内部画布的高度，使其适合设备的纵横比，不会发生变形\r\n     * 但是您必须确保您的应用程序在不同的纵横比的设备下工作。\r\n     */\r\n    public static FIXED_WIDTH = 4;\r\n    /**\r\n     * @en Unknown policy\r\n     *\r\n     * @zh 未知的策略\r\n     */\r\n    public static UNKNOWN = 5;\r\n    public static ContainerStrategy: typeof ContainerStrategy = ContainerStrategy;\r\n    public static ContentStrategy: typeof ContentStrategy = ContentStrategy;\r\n\r\n    public name = 'ResolutionPolicy';\r\n\r\n    private declare _containerStrategy: ContainerStrategy;\r\n    private declare _contentStrategy: ContentStrategy;\r\n\r\n    /**\r\n     * Constructor of ResolutionPolicy\r\n     * @param containerStg\r\n     * @param contentStg\r\n     */\r\n    constructor (containerStg: ContainerStrategy, contentStg: ContentStrategy) {\r\n        this._containerStrategy = containerStg;\r\n        this._contentStrategy = contentStg;\r\n    }\r\n\r\n    get canvasSize (): Size {\r\n        return screen.windowSize;\r\n    }\r\n\r\n    /**\r\n     * @en Manipulation before applying the resolution policy\r\n     * @zh 策略应用前的操作\r\n     * @param _view The target view\r\n     */\r\n    public preApply (_view: View): void {\r\n        this._contentStrategy.preApply(_view);\r\n    }\r\n\r\n    /**\r\n     * @en Function to apply this resolution policy\r\n     * The return value is {scale: [scaleX, scaleY], viewport: {new Rect}},\r\n     * The target view can then apply these value to itself, it's preferred not to modify directly its private variables\r\n     * @zh 调用策略方法\r\n     * @param _view - The target view\r\n     * @param designedResolution - The user defined design resolution\r\n     * @return An object contains the scale X/Y values and the viewport rect\r\n     */\r\n    public apply (_view: View, designedResolution: Size): AdaptResult {\r\n        this._containerStrategy.apply(_view, designedResolution);\r\n        return this._contentStrategy.apply(_view, designedResolution);\r\n    }\r\n\r\n    /**\r\n     * @en Manipulation after applying the strategy\r\n     * @zh 策略应用之后的操作\r\n     * @param _view - The target view\r\n     */\r\n    public postApply (_view: View): void {\r\n        this._contentStrategy.postApply(_view);\r\n    }\r\n\r\n    /**\r\n     * @en Setup the container's scale strategy\r\n     * @zh 设置容器的适配策略\r\n     * @param containerStg The container strategy\r\n     */\r\n    public setContainerStrategy (containerStg: ContainerStrategy): void {\r\n        this._containerStrategy = containerStg;\r\n    }\r\n\r\n    /**\r\n     * @en Setup the content's scale strategy\r\n     * @zh 设置内容的适配策略\r\n     * @param contentStg The content strategy\r\n     */\r\n    public setContentStrategy (contentStg: ContentStrategy): void {\r\n        this._contentStrategy = contentStg;\r\n    }\r\n\r\n    /**\r\n     * @en Get the content's scale strategy.\r\n     * @zh 获取内容的适配策略\r\n     * @returns ContentStrategy instance.\r\n     */\r\n    public getContentStrategy (): ContentStrategy {\r\n        return this._contentStrategy;\r\n    }\r\n}\r\ncclegacy.ResolutionPolicy = ResolutionPolicy;\r\n\r\n// Construct these object here to fix the dependence issue:\r\n// - ResolutionPolity depends on ContentStrategy\r\n// - ContentStrategy depends on ResolutionPolicy.\r\n\r\n// Alias: Strategy to scale the content's size to container's size, non proportional\r\nContentStrategy.EXACT_FIT = new ExactFit();\r\n// Alias: Strategy to scale the content's size proportionally to maximum size and keeps the whole content area to be visible\r\nContentStrategy.SHOW_ALL = new ShowAll();\r\n// Alias: Strategy to scale the content's size proportionally to fill the whole container area\r\nContentStrategy.NO_BORDER = new NoBorder();\r\n// Alias: Strategy to scale the content's height to container's height and proportionally scale its width\r\nContentStrategy.FIXED_HEIGHT = new FixedHeight();\r\n// Alias: Strategy to scale the content's width to container's width and proportionally scale its height\r\nContentStrategy.FIXED_WIDTH = new FixedWidth();\r\n\r\n/**\r\n * @en view is the singleton view object.\r\n * @zh view 是全局的视图单例对象。\r\n */\r\nexport const view = View.instance = cclegacy.view = new View();\r\ndirector.registerSystem('view', view, 0);\r\n\r\n/**\r\n * @en winSize is the alias object for the size of the current game window.\r\n * @zh winSize 为当前的游戏窗口的大小。\r\n *\r\n * @deprecated since v3.3, please use view.getVisibleSize() instead.\r\n */\r\ncclegacy.winSize = localWinSize;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, USE_XR } from 'internal:constants';\r\nimport { Material, MaterialPropertyFull } from '../asset/assets/material';\r\nimport { clamp01, Mat4, Vec2, settings, sys, cclegacy, easing, preTransforms, SettingsCategory } from '../core';\r\nimport {\r\n    Sampler, SamplerInfo, Shader, Texture, TextureInfo, Device, InputAssembler, InputAssemblerInfo, Attribute, Buffer,\r\n    BufferInfo, Rect, Color, BufferTextureCopy, CommandBuffer, BufferUsageBit, Format,\r\n    MemoryUsageBit, TextureType, TextureUsageBit, Address, Swapchain, Framebuffer,\r\n} from '../gfx';\r\nimport { PipelineStateManager } from '../rendering';\r\nimport { SetIndex } from '../rendering/define';\r\nimport { ccwindow, legacyCC } from '../core/global-exports';\r\nimport { XREye } from '../xr/xr-enums';\r\nimport { PipelineRuntime } from '../rendering/custom';\r\nimport { ResolutionPolicy } from '../ui/view';\r\n\r\nconst v2_0 = new Vec2();\r\ntype SplashLogoType = 'default' | 'none' | 'custom';\r\ntype SplashBackgroundType = 'default' | 'color' | 'custom';\r\ntype WatermarkLocationType = 'default' | 'topLeft' | 'topRight' | 'topCenter' | 'bottomLeft' | 'bottomCenter' | 'bottomRight';\r\n\r\n/** @mangle */\r\ninterface ISplashSetting {\r\n    policy?: number;\r\n    displayRatio: number;\r\n    totalTime: number;\r\n    watermarkLocation: WatermarkLocationType;\r\n    autoFit: boolean;\r\n    logo?: SplashLogo;\r\n    background?: SplashBackground;\r\n}\r\n\r\ninterface SplashBackground {\r\n    type: SplashBackgroundType;\r\n    color?: Color;\r\n    image?: string;\r\n    base64?: string;\r\n}\r\n\r\ninterface SplashLogo {\r\n    type: SplashLogoType;\r\n    image?: string;\r\n    base64?: string;\r\n}\r\n\r\nfunction setMaterialProperty (mat: Material, key: string, value: MaterialPropertyFull | MaterialPropertyFull[], passIdx?: number): void {\r\n    mat.setProperty(key, value, passIdx);\r\n}\r\n\r\nexport class SplashScreen {\r\n    private settings!: ISplashSetting;\r\n    private _curTime = 0;\r\n\r\n    private device!: Device;\r\n    private swapchain!: Swapchain;\r\n    private shader!: Shader;\r\n    private sampler!: Sampler;\r\n    private cmdBuff!: CommandBuffer;\r\n    private quadAssmebler!: InputAssembler;\r\n    private vertexBuffers!: Buffer;\r\n    private indicesBuffers!: Buffer;\r\n    private renderArea!: Rect;\r\n    private clearColors!: Color[];\r\n    private projection!: Mat4;\r\n    private isMobile = false;\r\n\r\n    private bgMat!: Material;\r\n    private bgImage!: HTMLImageElement;\r\n    private bgTexture!: Texture;\r\n\r\n    private logoMat!: Material;\r\n    private logoImage!: HTMLImageElement;\r\n    private logoTexture!: Texture;\r\n\r\n    private watermarkMat!: Material;\r\n    private watermarkTexture!: Texture;\r\n\r\n    // layout\r\n    private bgWidth = 1920;\r\n    private bgHeight = 1080;\r\n    private logoWidthTemp = 140;\r\n    private logoHeightTemp = 200;\r\n    private logoWidth = 0;\r\n    private logoHeight = 0;\r\n    private logoXTrans = 1 / 2;// Percent\r\n    private logoYTrans = 1 / 6 + 2.5 / 6;// Percent\r\n\r\n    private textSize = 24; // font size\r\n    private textHeight = 24; // line height\r\n    private textXTrans = 1 / 2;// Percent\r\n    private textYExtraTrans = 32;// px\r\n    private textExpandSize = 4;// px\r\n\r\n    private scaleSize = 1;\r\n\r\n    public get isFinished (): boolean {\r\n        return this._curTime >= this.settings.totalTime;\r\n    }\r\n\r\n    set curTime (val) {\r\n        this._curTime = val;\r\n    }\r\n\r\n    get curTime (): number {\r\n        return this._curTime;\r\n    }\r\n\r\n    public init (): Promise<void[]> {\r\n        let policy: number = ResolutionPolicy.SHOW_ALL;\r\n        if (!EDITOR) {\r\n            const designResolution = settings.querySettings(SettingsCategory.SCREEN, 'designResolution');\r\n            if (designResolution !== null) {\r\n                policy = designResolution.policy as number;\r\n            }\r\n        }\r\n        this.settings = {\r\n            policy: (policy) ?? ResolutionPolicy.SHOW_ALL,\r\n            displayRatio: settings.querySettings<number>(SettingsCategory.SPLASH_SCREEN, 'displayRatio') ?? 0.4,\r\n            totalTime: settings.querySettings<number>(SettingsCategory.SPLASH_SCREEN, 'totalTime') ?? 3000,\r\n            watermarkLocation: settings.querySettings<WatermarkLocationType>(SettingsCategory.SPLASH_SCREEN, 'watermarkLocation') ?? 'default',\r\n            autoFit: settings.querySettings<boolean>(SettingsCategory.SPLASH_SCREEN, 'autoFit') ?? true,\r\n            logo: settings.querySettings<SplashLogo>(SettingsCategory.SPLASH_SCREEN, 'logo') ?? undefined,\r\n            background: settings.querySettings<SplashBackground>(SettingsCategory.SPLASH_SCREEN, 'background') ?? undefined,\r\n        };\r\n        this._curTime = 0;\r\n\r\n        if (EDITOR || this.settings.totalTime <= 0 || this.settings.logo === undefined || this.settings.background === undefined) {\r\n            this.settings.totalTime = 0;\r\n        } else {\r\n            this.device = cclegacy.director.root!.device;\r\n            this.swapchain = cclegacy.director.root!.mainWindow!.swapchain;\r\n\r\n            this.preInit();\r\n            this.initLayout();\r\n\r\n            if (this.settings.logo.type === 'default') {\r\n                this.initWaterMark();\r\n            }\r\n            let bgPromise = Promise.resolve();\r\n            let logoPromise = Promise.resolve();\r\n            if (this.settings.background.type === 'custom') {\r\n                bgPromise = new Promise<void>((resolve, reject): void => {\r\n                    this.bgImage = new ccwindow.Image();\r\n                    this.bgImage.onload = (): void => {\r\n                        this.initBG();\r\n                        resolve();\r\n                    };\r\n                    this.bgImage.onerror = (): void => {\r\n                        reject();\r\n                    };\r\n                    this.bgImage.src = this.settings.background!.base64!;\r\n                });\r\n            }\r\n            if (this.settings.logo.type !== 'none') {\r\n                logoPromise = new Promise<void>((resolve, reject): void => {\r\n                    this.logoImage = new ccwindow.Image();\r\n                    this.logoImage.onload = (): void => {\r\n                        this.initLogo();\r\n                        resolve();\r\n                    };\r\n                    this.logoImage.onerror = (): void => {\r\n                        reject();\r\n                    };\r\n                    this.logoImage.src = this.settings.logo!.base64!;\r\n                });\r\n            }\r\n            return Promise.all([bgPromise, logoPromise]);\r\n        }\r\n        return Promise.resolve([]);\r\n    }\r\n\r\n    private preInit (): void {\r\n        const clearColor = this.settings.background?.color;\r\n        this.clearColors = clearColor ? [new Color(clearColor.x, clearColor.y, clearColor.z, clearColor.w)] : [new Color(0, 0, 0, 1)];\r\n        const { device, swapchain } = this;\r\n        const { capabilities } = device;\r\n        this.renderArea = new Rect(0, 0, swapchain.width, swapchain.height);\r\n        this.cmdBuff = device.commandBuffer;\r\n\r\n        // create input assembler\r\n        // create vertex buffer\r\n        const verts = new Float32Array([0.5, 0.5, 1, 0, -0.5, 0.5, 0, 0, 0.5, -0.5, 1, 1, -0.5, -0.5, 0, 1]);\r\n        const vbStride = Float32Array.BYTES_PER_ELEMENT * 4;\r\n        const vbSize = vbStride * 4;\r\n        this.vertexBuffers = device.createBuffer(new BufferInfo(\r\n            BufferUsageBit.VERTEX | BufferUsageBit.TRANSFER_DST,\r\n            MemoryUsageBit.DEVICE,\r\n            vbSize,\r\n            vbStride,\r\n        ));\r\n        this.vertexBuffers.update(verts);\r\n\r\n        // create index buffer\r\n        const indices = new Uint16Array([0, 1, 2, 1, 3, 2]);\r\n        const ibStride = Uint16Array.BYTES_PER_ELEMENT;\r\n        const ibSize = ibStride * 6;\r\n        this.indicesBuffers = device.createBuffer(new BufferInfo(\r\n            BufferUsageBit.INDEX | BufferUsageBit.TRANSFER_DST,\r\n            MemoryUsageBit.DEVICE,\r\n            ibSize,\r\n            ibStride,\r\n        ));\r\n        this.indicesBuffers.update(indices);\r\n\r\n        const attributes: Attribute[] = [\r\n            new Attribute('a_position', Format.RG32F),\r\n            new Attribute('a_texCoord', Format.RG32F),\r\n        ];\r\n        const IAInfo = new InputAssemblerInfo(attributes, [this.vertexBuffers], this.indicesBuffers);\r\n        this.quadAssmebler = device.createInputAssembler(IAInfo);\r\n\r\n        this.projection = new Mat4();\r\n        Mat4.ortho(\r\n            this.projection,\r\n            -1,\r\n            1,\r\n            -1,\r\n            1,\r\n            -1,\r\n            1,\r\n            capabilities.clipSpaceMinZ,\r\n            capabilities.clipSpaceSignY,\r\n            swapchain.surfaceTransform,\r\n        );\r\n\r\n        this.isMobile = sys.isMobile;\r\n    }\r\n\r\n    private initLayout (): void {\r\n        if (this.isMobile) {\r\n            this.bgWidth = 812;\r\n            this.bgHeight = 375;\r\n\r\n            this.logoWidthTemp = 70;\r\n            this.logoHeightTemp = 100;\r\n\r\n            this.textSize = 12; // font size\r\n            this.textHeight = this.textSize + this.textExpandSize; // line height\r\n            this.textXTrans = 1 / 2;// Percent\r\n            this.textYExtraTrans = 16;// px\r\n        } else {\r\n            this.bgWidth = 1920;\r\n            this.bgHeight = 1080;\r\n\r\n            this.logoWidthTemp = 140;\r\n            this.logoHeightTemp = 200;\r\n\r\n            this.textSize = 24; // font size\r\n            this.textHeight = this.textSize + this.textExpandSize; // line height\r\n            this.textXTrans = 1 / 2;// Percent\r\n            this.textYExtraTrans = 32;// px\r\n        }\r\n        this.logoXTrans = 1 / 2;// Percent\r\n        this.logoYTrans = 1 / 6 + 2.5 / 6;// Percent\r\n        this.initScale();\r\n    }\r\n\r\n    private initScale (): void {\r\n        const dw = this.swapchain.width;\r\n        const dh = this.swapchain.height;\r\n        let desiredWidth = this.isMobile ? 375 : 1080;\r\n        let desiredHeight = this.isMobile ? 812 : 1920;\r\n        if (dw > dh) {\r\n            const temp = desiredHeight;\r\n            desiredHeight = desiredWidth;\r\n            desiredWidth = temp;\r\n        }\r\n        if (dw / dh > 16 / 9) {\r\n            this.scaleSize = dh / desiredHeight;\r\n        } else {\r\n            this.scaleSize = dw / desiredWidth;\r\n        }\r\n    }\r\n\r\n    public update (deltaTime: number): void {\r\n        const settings = this.settings;\r\n        const { device, swapchain } = this;\r\n        const { capabilities } = device;\r\n        Mat4.ortho(\r\n            this.projection,\r\n            -1,\r\n            1,\r\n            -1,\r\n            1,\r\n            -1,\r\n            1,\r\n            capabilities.clipSpaceMinZ,\r\n            capabilities.clipSpaceSignY,\r\n            swapchain.surfaceTransform,\r\n        );\r\n        const dw = swapchain.width; const dh = swapchain.height;\r\n        this.initScale();\r\n\r\n        this._curTime += deltaTime * 1000;\r\n        const percent = clamp01(this._curTime / settings.totalTime);\r\n        const u_p = easing.cubicOut(percent);\r\n\r\n        let scaleX = 1;\r\n        let scaleY = 1;\r\n        const bgImage = this.bgImage;\r\n        // update bg uniform\r\n        if (settings.background!.type === 'custom') {\r\n            if (settings.policy === ResolutionPolicy.FIXED_WIDTH) {\r\n                scaleX = dw;\r\n                scaleY = (dw / bgImage.width) * bgImage.height;\r\n            } else if (settings.policy === ResolutionPolicy.FIXED_HEIGHT) {\r\n                scaleX = (dh / bgImage.height) * bgImage.width;\r\n                scaleY = dh;\r\n            } else if (settings.policy === ResolutionPolicy.SHOW_ALL) {\r\n                if ((bgImage.width / this.bgHeight) > (dw / dh)) {\r\n                    scaleX = dw;\r\n                    scaleY = (dw / bgImage.width) * bgImage.height;\r\n                } else {\r\n                    scaleX = (dh / bgImage.height) * bgImage.width;\r\n                    scaleY = dh;\r\n                }\r\n            } else if (settings.policy === ResolutionPolicy.NO_BORDER) {\r\n                if ((bgImage.width / bgImage.height) > (dw / dh)) {\r\n                    scaleX = (dh / bgImage.height) * bgImage.width;\r\n                    scaleY = dh;\r\n                } else {\r\n                    scaleX = dw;\r\n                    scaleY = (dw / bgImage.width) * bgImage.height;\r\n                }\r\n            } else {\r\n                scaleX = dw;\r\n                scaleY = dh;\r\n            }\r\n\r\n            const bgMat = this.bgMat;\r\n            setMaterialProperty(bgMat, 'resolution', v2_0.set(dw, dh), 0);\r\n            setMaterialProperty(bgMat, 'scale', v2_0.set(scaleX, scaleY), 0);\r\n            setMaterialProperty(bgMat, 'translate', v2_0.set(dw * 0.5, dh * 0.5), 0);\r\n            setMaterialProperty(bgMat, 'percent', 1.0);\r\n            setMaterialProperty(bgMat, 'u_projection', this.projection);\r\n            bgMat.passes[0].update();\r\n        }\r\n        // update logo uniform\r\n        const logoYTrans = dh * this.logoYTrans;\r\n        if (this.settings.logo!.type !== 'none') {\r\n            // Product design is 0.185 of the height of the screen resolution as the display height of the logo.\r\n            scaleY = dh * 0.185 * settings.displayRatio;\r\n            scaleX = this.logoWidth * (dh * 0.185 / this.logoHeight) * settings.displayRatio;\r\n            const logoMat = this.logoMat;\r\n            setMaterialProperty(logoMat, 'resolution', v2_0.set(dw, dh), 0);\r\n            setMaterialProperty(logoMat, 'scale', v2_0.set(scaleX, scaleY), 0);\r\n            setMaterialProperty(logoMat, 'translate', v2_0.set(dw * this.logoXTrans, logoYTrans), 0);\r\n            setMaterialProperty(logoMat, 'percent', u_p);\r\n            setMaterialProperty(logoMat, 'u_projection', this.projection);\r\n            logoMat.passes[0].update();\r\n        }\r\n\r\n        // update watermark uniform\r\n        if (this.settings.logo!.type === 'default' && this.watermarkMat) {\r\n            const watermarkTW = this.watermarkTexture.width; const watermarkTH = this.watermarkTexture.height;\r\n            scaleX = watermarkTW;\r\n            scaleY = watermarkTH;\r\n            const textYTrans = logoYTrans - (this.logoHeight * 0.5 * settings.displayRatio + this.textYExtraTrans)\r\n                * this.scaleSize - watermarkTH * 0.5;\r\n            const watermarkMat = this.watermarkMat;\r\n            setMaterialProperty(watermarkMat, 'resolution', v2_0.set(dw, dh), 0);\r\n            setMaterialProperty(watermarkMat, 'scale', v2_0.set(scaleX, scaleY), 0);\r\n            setMaterialProperty(watermarkMat, 'translate', v2_0.set(dw * this.textXTrans, textYTrans), 0);\r\n            setMaterialProperty(watermarkMat, 'percent', u_p);\r\n            setMaterialProperty(watermarkMat, 'u_projection', this.projection);\r\n            watermarkMat.passes[0].update();\r\n        }\r\n        this.frame();\r\n    }\r\n\r\n    private initBG (): void {\r\n        const device = this.device;\r\n\r\n        this.bgMat = new Material();\r\n        this.bgMat.initialize({ effectName: 'util/splash-screen' });\r\n\r\n        const samplerInfo = new SamplerInfo();\r\n        samplerInfo.addressU = Address.CLAMP;\r\n        samplerInfo.addressV = Address.CLAMP;\r\n        samplerInfo.addressW = Address.CLAMP;\r\n        this.sampler = device.getSampler(samplerInfo);\r\n\r\n        this.bgTexture = device.createTexture(new TextureInfo(\r\n            TextureType.TEX2D,\r\n            TextureUsageBit.SAMPLED | TextureUsageBit.TRANSFER_DST,\r\n            Format.RGBA8,\r\n            this.bgImage.width,\r\n            this.bgImage.height,\r\n        ));\r\n\r\n        const pass = this.bgMat.passes[0];\r\n        const binding = pass.getBinding('mainTexture');\r\n        pass.bindTexture(binding, this.bgTexture);\r\n        this.shader = pass.getShaderVariant()!;\r\n        const descriptorSet = pass.descriptorSet;\r\n        descriptorSet.bindSampler(binding, this.sampler);\r\n        descriptorSet.update();\r\n        const region = new BufferTextureCopy();\r\n        const regionTexExtent = region.texExtent;\r\n        regionTexExtent.width = this.bgImage.width;\r\n        regionTexExtent.height = this.bgImage.height;\r\n        regionTexExtent.depth = 1;\r\n        device.copyTexImagesToTexture([this.bgImage], this.bgTexture, [region]);\r\n    }\r\n\r\n    private initLogo (): void {\r\n        const device = this.device;\r\n\r\n        this.logoMat = new Material();\r\n        this.logoMat.initialize({ effectName: 'util/splash-screen' });\r\n\r\n        const samplerInfo = new SamplerInfo();\r\n        samplerInfo.addressU = Address.CLAMP;\r\n        samplerInfo.addressV = Address.CLAMP;\r\n        samplerInfo.addressW = Address.CLAMP;\r\n        this.sampler = device.getSampler(samplerInfo);\r\n\r\n        this.logoTexture = device.createTexture(new TextureInfo(\r\n            TextureType.TEX2D,\r\n            TextureUsageBit.SAMPLED | TextureUsageBit.TRANSFER_DST,\r\n            Format.RGBA8,\r\n            this.logoImage.width,\r\n            this.logoImage.height,\r\n        ));\r\n\r\n        const pass = this.logoMat.passes[0];\r\n        const binding = pass.getBinding('mainTexture');\r\n        pass.bindTexture(binding, this.logoTexture);\r\n        this.shader = pass.getShaderVariant()!;\r\n        const descriptorSet = pass.descriptorSet;\r\n        descriptorSet.bindSampler(binding, this.sampler);\r\n        descriptorSet.update();\r\n        const region = new BufferTextureCopy();\r\n        const regionTexExtent = region.texExtent;\r\n        regionTexExtent.width = this.logoImage.width;\r\n        regionTexExtent.height = this.logoImage.height;\r\n        regionTexExtent.depth = 1;\r\n        device.copyTexImagesToTexture([this.logoImage], this.logoTexture, [region]);\r\n\r\n        const logoRatio = this.logoImage.width / this.logoImage.height;\r\n        if (logoRatio < 1) {\r\n            this.logoWidth = this.logoWidthTemp;\r\n            this.logoHeight = this.logoWidthTemp / logoRatio;\r\n        } else {\r\n            this.logoWidth = this.logoHeightTemp * logoRatio;\r\n            this.logoHeight = this.logoHeightTemp;\r\n        }\r\n    }\r\n\r\n    private initWaterMark (): void {\r\n        // create texture from image\r\n        const watermarkImg = ccwindow.document.createElement('canvas');\r\n        watermarkImg.height = this.textHeight * this.scaleSize;\r\n        watermarkImg.style.width = `${watermarkImg.width}`;\r\n        watermarkImg.style.height = `${watermarkImg.height}`;\r\n\r\n        const text = 'Created with Cocos';\r\n        const ctx = watermarkImg.getContext('2d')!;\r\n        ctx.font = `${this.textSize * this.scaleSize}px Arial`; ctx.textBaseline = 'top'; ctx.textAlign = 'center'; ctx.fillStyle = '#707070';\r\n        const textLength = ctx.measureText(text).width + 10;\r\n        watermarkImg.width = textLength; // Tips: Set canvas width will clean context style\r\n        ctx.font = `${this.textSize * this.scaleSize}px Arial`; ctx.textBaseline = 'top'; ctx.textAlign = 'center'; ctx.fillStyle = '#707070';\r\n        ctx.fillText(text, watermarkImg.width / 2, 0);\r\n        const region = new BufferTextureCopy();\r\n        const regionTexExtent = region.texExtent;\r\n        regionTexExtent.width = watermarkImg.width;\r\n        regionTexExtent.height = watermarkImg.height;\r\n        regionTexExtent.depth = 1;\r\n        this.watermarkTexture = this.device.createTexture(new TextureInfo(\r\n            TextureType.TEX2D,\r\n            TextureUsageBit.SAMPLED | TextureUsageBit.TRANSFER_DST,\r\n            Format.RGBA8,\r\n            watermarkImg.width,\r\n            watermarkImg.height,\r\n        ));\r\n        this.device.copyTexImagesToTexture([watermarkImg], this.watermarkTexture, [region]);\r\n        // create material\r\n        this.watermarkMat = new Material();\r\n        this.watermarkMat.initialize({ effectName: 'util/splash-screen' });\r\n        const pass = this.watermarkMat.passes[0];\r\n        const binding = pass.getBinding('mainTexture');\r\n        pass.bindTexture(binding, this.watermarkTexture);\r\n        pass.descriptorSet.update();\r\n    }\r\n\r\n    private frame (): void {\r\n        const { device, swapchain, projection, bgMat, logoMat, watermarkMat, settings, quadAssmebler } = this;\r\n        const { capabilities } = device;\r\n\r\n        if (!sys.isXR || xr.entry.isRenderAllowable()) {\r\n            const renderSize = sys.isXR ? 2 : 1;\r\n            for (let xrEye = 0; xrEye < renderSize; xrEye++) {\r\n                if (USE_XR && sys.isXR) {\r\n                    xr.entry.renderLoopStart(xrEye);\r\n                    const xrFov = xr.entry.getEyeFov(xrEye);\r\n                    // device's fov may be asymmetry\r\n                    let radioLeft = 1.0;\r\n                    let radioRight = 1.0;\r\n                    if (xrEye === XREye.LEFT as number) {\r\n                        radioLeft = Math.abs(Math.tan(xrFov[0] as number)) / Math.abs(Math.tan(xrFov[1] as number));\r\n                    } else if (xrEye === XREye.RIGHT as number) {\r\n                        radioRight = Math.abs(Math.tan(xrFov[1] as number)) / Math.abs(Math.tan(xrFov[0] as number));\r\n                    }\r\n\r\n                    Mat4.ortho(\r\n                        projection,\r\n                        -radioLeft,\r\n                        radioRight,\r\n                        -1,\r\n                        1,\r\n                        -1,\r\n                        1,\r\n                        capabilities.clipSpaceMinZ,\r\n                        capabilities.clipSpaceSignY,\r\n                        swapchain.surfaceTransform,\r\n                    );\r\n                    // keep scale to [-1, 1] only use offset\r\n                    projection.m00 = preTransforms[swapchain.surfaceTransform][0];\r\n                    projection.m05 = preTransforms[swapchain.surfaceTransform][3] * capabilities.clipSpaceSignY;\r\n                    if (settings.background!.type === 'custom') {\r\n                        setMaterialProperty(bgMat, 'u_projection', projection);\r\n                        bgMat.passes[0].update();\r\n                    }\r\n                    if (settings.logo!.type !== 'none') {\r\n                        setMaterialProperty(logoMat, 'u_projection', projection);\r\n                        logoMat.passes[0].update();\r\n                    }\r\n                    if (settings.logo!.type === 'default' && watermarkMat) {\r\n                        setMaterialProperty(watermarkMat, 'u_projection', projection);\r\n                        watermarkMat.passes[0].update();\r\n                    }\r\n                }\r\n\r\n                // for legacy pipeline\r\n                device.enableAutoBarrier(true);\r\n\r\n                device.acquire([swapchain]);\r\n                // record command\r\n                const cmdBuff = this.cmdBuff;\r\n                const framebuffer = cclegacy.director.root!.mainWindow!.framebuffer as Framebuffer;\r\n                const renderArea = this.renderArea;\r\n\r\n                renderArea.width = swapchain.width;\r\n                renderArea.height = swapchain.height;\r\n\r\n                cmdBuff.begin();\r\n                cmdBuff.beginRenderPass(framebuffer.renderPass, framebuffer, renderArea, this.clearColors, 1.0, 0);\r\n                const pipeline = cclegacy.director.root.pipeline as PipelineRuntime;\r\n                if (settings.background!.type === 'custom') {\r\n                    const bgPass = bgMat.passes[0];\r\n                    const bgPso = PipelineStateManager.getOrCreatePipelineState(\r\n                        device,\r\n                        bgPass,\r\n                        this.shader,\r\n                        framebuffer.renderPass,\r\n                        quadAssmebler,\r\n                    );\r\n\r\n                    cmdBuff.bindPipelineState(bgPso);\r\n                    cmdBuff.bindDescriptorSet(SetIndex.MATERIAL, bgPass.descriptorSet);\r\n                    cmdBuff.bindInputAssembler(quadAssmebler);\r\n                    cmdBuff.draw(quadAssmebler);\r\n                }\r\n\r\n                if (settings.logo!.type !== 'none') {\r\n                    const logoPass = logoMat.passes[0];\r\n                    const logoPso = PipelineStateManager.getOrCreatePipelineState(\r\n                        device,\r\n                        logoPass,\r\n                        this.shader,\r\n                        framebuffer.renderPass,\r\n                        quadAssmebler,\r\n                    );\r\n\r\n                    cmdBuff.bindPipelineState(logoPso);\r\n                    cmdBuff.bindDescriptorSet(SetIndex.MATERIAL, logoPass.descriptorSet);\r\n                    cmdBuff.bindInputAssembler(quadAssmebler);\r\n                    cmdBuff.draw(quadAssmebler);\r\n                }\r\n\r\n                if (settings.logo!.type === 'default' && watermarkMat) {\r\n                    const wartermarkPass = this.watermarkMat.passes[0];\r\n                    const watermarkPso = PipelineStateManager.getOrCreatePipelineState(\r\n                        device,\r\n                        wartermarkPass,\r\n                        this.shader,\r\n                        framebuffer.renderPass,\r\n                        quadAssmebler,\r\n                    );\r\n\r\n                    cmdBuff.bindPipelineState(watermarkPso);\r\n                    cmdBuff.bindDescriptorSet(SetIndex.MATERIAL, wartermarkPass.descriptorSet);\r\n                    cmdBuff.bindInputAssembler(quadAssmebler);\r\n                    cmdBuff.draw(quadAssmebler);\r\n                }\r\n\r\n                cmdBuff.endRenderPass();\r\n                cmdBuff.end();\r\n                device.flushCommands([cmdBuff]);\r\n                device.queue.submit([cmdBuff]);\r\n                device.present();\r\n                device.enableAutoBarrier(!legacyCC.rendering);\r\n\r\n                if (USE_XR && sys.isXR) {\r\n                    xr.entry.renderLoopEnd(xrEye);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private destroy (): void {\r\n        this.device = null!;\r\n        this.swapchain = null!;\r\n        this.clearColors = null!;\r\n\r\n        if (this.bgImage) {\r\n            if ((this.bgImage as any).destroy) (this.bgImage as any).destroy();\r\n            this.bgImage = null!;\r\n        }\r\n\r\n        if (this.bgMat) {\r\n            this.bgMat.destroy();\r\n            this.bgMat = null!;\r\n        }\r\n\r\n        if (this.bgTexture) {\r\n            this.bgTexture.destroy();\r\n            this.bgTexture = null!;\r\n        }\r\n\r\n        if (this.logoImage) {\r\n            if ((this.logoImage as any).destroy) (this.logoImage as any).destroy();\r\n            this.logoImage = null!;\r\n        }\r\n\r\n        if (this.logoMat) {\r\n            this.logoMat.destroy();\r\n            this.logoMat = null!;\r\n        }\r\n\r\n        if (this.logoTexture) {\r\n            this.logoTexture.destroy();\r\n            this.logoTexture = null!;\r\n        }\r\n\r\n        this.renderArea = null!;\r\n        this.cmdBuff = null!;\r\n        this.shader = null!;\r\n\r\n        if (this.quadAssmebler) {\r\n            this.quadAssmebler.destroy();\r\n            this.quadAssmebler = null!;\r\n        }\r\n\r\n        if (this.vertexBuffers) {\r\n            this.vertexBuffers.destroy();\r\n            this.vertexBuffers = null!;\r\n        }\r\n\r\n        if (this.indicesBuffers) {\r\n            this.indicesBuffers.destroy();\r\n            this.indicesBuffers = null!;\r\n        }\r\n        this.sampler = null!;\r\n\r\n        /** text */\r\n        if (this.watermarkMat) {\r\n            this.watermarkMat.destroy();\r\n            this.watermarkMat = null!;\r\n        }\r\n\r\n        if (this.watermarkTexture) {\r\n            this.watermarkTexture.destroy();\r\n            this.watermarkTexture = null!;\r\n        }\r\n\r\n        this.settings = null!;\r\n    }\r\n\r\n    private static _ins: SplashScreen | null = null;\r\n\r\n    public static get instance (): SplashScreen | null {\r\n        return SplashScreen._ins;\r\n    }\r\n\r\n    public static createInstance (): SplashScreen {\r\n        SplashScreen._ins = new SplashScreen();\r\n        return SplashScreen._ins;\r\n    }\r\n\r\n    public static releaseInstance (): void {\r\n        if (SplashScreen._ins) {\r\n            SplashScreen._ins.destroy();\r\n            SplashScreen._ins = null;\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-empty-function\r\n    private constructor () {}\r\n}\r\n\r\ncclegacy.internal.SplashScreen = SplashScreen;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { HTML5 } from 'internal:constants';\r\nimport { legacyCC } from './global-exports';\r\n\r\ndeclare const fsUtils: any;\r\n\r\nexport class EffectSettings {\r\n    init (path = ''): Promise<void> {\r\n        if (!legacyCC.rendering || !legacyCC.rendering.enableEffectImport || !path) {\r\n            return Promise.resolve();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            if (!HTML5 && !path.startsWith('http')) {\r\n                globalThis.fsUtils.readArrayBuffer(path, (err: Error, arrayBuffer: ArrayBuffer) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    this._data = arrayBuffer;\r\n                    resolve();\r\n                });\r\n            } else {\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.open('GET', path);\r\n                xhr.responseType = 'arraybuffer';\r\n                xhr.onload = (): void => {\r\n                    this._data = xhr.response;\r\n                    resolve();\r\n                };\r\n                xhr.onerror = (): void => {\r\n                    reject(new Error('request effect settings failed!'));\r\n                };\r\n                xhr.send(null);\r\n            }\r\n        });\r\n    }\r\n    get data (): ArrayBuffer | null {\r\n        return this._data;\r\n    }\r\n    private _data: ArrayBuffer | null = null;\r\n}\r\n\r\nexport const effectSettings = new EffectSettings();\r\nlegacyCC.effectSettings = effectSettings;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG, EDITOR, NATIVE, PREVIEW, TEST, EDITOR_NOT_IN_PREVIEW, WECHAT, USE_XR } from 'internal:constants';\r\nimport { systemInfo } from 'pal/system-info';\r\nimport { findCanvas, loadJsFile } from 'pal/env';\r\nimport { Pacer } from 'pal/pacer';\r\nimport { ConfigOrientation } from 'pal/screen-adapter';\r\nimport assetManager, { IAssetManagerOptions } from '../asset/asset-manager/asset-manager';\r\nimport { EventTarget, AsyncDelegate, sys, macro, VERSION, cclegacy, screen, settings,\r\n    assert, garbageCollectionManager, DebugMode, warn, log, _resetDebugSetting, errorID, logID,\r\n    SettingsCategory,\r\n    Settings } from '../core';\r\nimport { input } from '../input';\r\nimport { deviceManager, LegacyRenderMode } from '../gfx';\r\nimport { SplashScreen } from './splash-screen';\r\nimport { Layers, Node } from '../scene-graph';\r\nimport { builtinResMgr } from '../asset/asset-manager/builtin-res-mgr';\r\nimport { director, DirectorEvent } from './director';\r\nimport { bindingMappingInfo } from '../rendering/define';\r\nimport { ICustomJointTextureLayout } from '../3d/skeletal-animation/skeletal-animation-utils';\r\nimport { IPhysicsConfig } from '../physics/framework/physics-config';\r\nimport { effectSettings } from '../core/effect-settings';\r\n\r\nconst querySettings = settings.querySettings.bind(settings);\r\n\r\n/**\r\n * @zh\r\n * 游戏配置。\r\n * @en\r\n * Game configuration.\r\n */\r\nexport interface IGameConfig {\r\n    /**\r\n     * @zh\r\n     * 引擎配置文件路径\r\n     * @en\r\n     * The path of settings.json\r\n     */\r\n    settingsPath?: string;\r\n\r\n    /**\r\n     * @zh\r\n     * 引擎内 Effect 配置文件路径\r\n     * @en\r\n     * The path of effectSettings.json\r\n     */\r\n    effectSettingsPath?: string;\r\n\r\n    /**\r\n     * @zh\r\n     * 设置 debug 模式，在浏览器中这个选项会被忽略。\r\n     * @en\r\n     * Set debug mode, only valid in non-browser environment.\r\n     */\r\n    debugMode?: DebugMode;\r\n\r\n    /**\r\n     * @zh\r\n     * 覆盖 settings 模块中的配置项, 用于控制引擎的启动和初始化，你可以在 game.init 中传入参数，也可以在 [game.onPostBaseInitDelegate] 事件回调中覆盖。\r\n     * 需要注意的是你需要在 application.js 模板中指定此选项和监听此事件。\r\n     * @en\r\n     * Overrides the settings module's some configuration, which is used to control the startup and initialization of the engine.\r\n     * You can pass in parameters in game.init or override them in the [game.onPostBaseInitDelegate] event callback.\r\n     * Note: you need to specify this option in the application.js template or add a delegate callback.\r\n     */\r\n    overrideSettings: Partial<{ [k in Settings.Category[keyof Settings.Category]]: Record<string, any> }>\r\n\r\n    /**\r\n     * @zh\r\n     * 当 showFPS 为 true 的时候界面的左下角将显示 fps 的信息，否则被隐藏。\r\n     * @en\r\n     * Left bottom corner fps information will show when \"showFPS\" equals true, otherwise it will be hide.\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.PROFILING: { \"showFPS\": true }}``` to set this.\r\n     */\r\n    showFPS?: boolean;\r\n\r\n    /**\r\n     * @zh\r\n     * 设置想要的帧率你的游戏，但真正的FPS取决于你的游戏实现和运行环境。\r\n     * @en\r\n     * Set the wanted frame rate for your game, but the real fps depends on your game implementation and the running environment.\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.SCREEN: { \"frameRate\": 60 }}``` to set this.\r\n     */\r\n    frameRate?: number;\r\n\r\n    /**\r\n     * @zh\r\n     * 渲染模式。\r\n     * 设置渲染器类型，仅适用于 web 端：\r\n     * - 0 - 通过引擎自动选择。\r\n     * - 1 - 强制使用 canvas 渲染。\r\n     * - 2 - 强制使用 WebGL 渲染，但是在部分 Android 浏览器中这个选项会被忽略。\r\n     * - 3 - 使用空渲染器，可以用于测试和服务器端环境，目前暂时用于 Cocos 内部测试使用\r\n     * - 4 - 强制使用 WebGPU 渲染，但是在部分浏览器中这个选项会被忽略\r\n     * @en\r\n     * Sets the renderer type, only useful on web:\r\n     * - 0 - Automatically chosen by engine.\r\n     * - 1 - Forced to use canvas renderer.\r\n     * - 2 - Forced to use WebGL renderer, but this will be ignored on mobile browsers.\r\n     * - 3 - Use Headless Renderer, which is useful in test or server env, only for internal use by cocos team for now\r\n     * - 4 - Force WebGPU rendering, but this option will be ignored in some browsers.\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.RENDERING: { \"renderMode\": 0 }}``` to set this.\r\n     */\r\n    renderMode?: 0 | 1 | 2 | 3 | 4;\r\n\r\n    /**\r\n     * @en\r\n     * Render pipeline resources\r\n     * @zh\r\n     * Render pipeline 资源\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.RENDERING: { \"renderPipeline\": '' }}``` to set this.\r\n     */\r\n    renderPipeline?: string;\r\n\r\n    /**\r\n     * @en\r\n     * Asset Manager initialization options\r\n     * @zh\r\n     * 资源管理器初始化设置\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.ASSETS: {}}``` to set this.\r\n     */\r\n    assetOptions?: IAssetManagerOptions;\r\n\r\n    /**\r\n     * @en\r\n     * GPU instancing options\r\n     * @zh\r\n     * GPU instancing 选项\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.ANIMATION: { customJointTextureLayouts: [] }}``` to set this.\r\n     */\r\n    customJointTextureLayouts?: ICustomJointTextureLayout[];\r\n\r\n    /**\r\n     * @en\r\n     * Physics system config\r\n     * @zh\r\n     * 物理系统设置\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.PHYSICS: {}}``` to set this.\r\n     */\r\n    physics?: IPhysicsConfig;\r\n\r\n    /**\r\n     * @en\r\n     * The orientation from the builder configuration.\r\n     * Available value can be 'auto', 'landscape', 'portrait'.\r\n     * @zh\r\n     * 屏幕旋转方向，可选 “自动”，“横屏”，“竖屏”\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.SCREEN: { 'orientation': 'auto' }}``` to set this.\r\n     */\r\n    orientation?: ConfigOrientation;\r\n\r\n    /**\r\n     * @en\r\n     * Determine whether the game frame exact fits the screen.\r\n     * Now it only works on Web platform.\r\n     * @zh\r\n     * 是否让游戏外框对齐到屏幕上，目前只在 web 平台生效\r\n     * @deprecated Since v3.6, Please use ```overrideSettings: { SettingsCategory.SCREEN: { 'exactFitScreen': true }}``` to set this.\r\n     */\r\n    exactFitScreen?: boolean,\r\n}\r\n\r\n/**\r\n * @en An object to boot the game.\r\n * @zh 包含游戏主体信息并负责驱动游戏的游戏对象。\r\n */\r\nexport class Game extends EventTarget {\r\n    /**\r\n     * @en Event triggered when game hide to background.<br>\r\n     * Please note that this event is not 100% guaranteed to be fired on Web platform,<br>\r\n     * on native platforms, it corresponds to enter background event, os status bar or notification center may not trigger this event.\r\n     * @zh 游戏进入后台时触发的事件。<br>\r\n     * 请注意，在 WEB 平台，这个事件不一定会 100% 触发，这完全取决于浏览器的回调行为。<br>\r\n     * 在原生平台，它对应的是应用被切换到后台事件，下拉菜单和上拉状态栏等不一定会触发这个事件，这取决于系统行为。\r\n     * @example\r\n     * ```ts\r\n     * import { game } from 'cc';\r\n     * game.on(Game.EVENT_HIDE, function () {\r\n     *\r\n     * });\r\n     * ```\r\n     */\r\n    public static readonly EVENT_HIDE = 'game_on_hide';\r\n\r\n    /**\r\n     * @en Event triggered when game back to foreground<br>\r\n     * Please note that this event is not 100% guaranteed to be fired on Web platform,<br>\r\n     * on native platforms, it corresponds to enter foreground event.\r\n     * @zh 游戏进入前台运行时触发的事件。<br>\r\n     * 请注意，在 WEB 平台，这个事件不一定会 100% 触发，这完全取决于浏览器的回调行为。<br>\r\n     * 在原生平台，它对应的是应用被切换到前台事件。\r\n     */\r\n    public static readonly EVENT_SHOW: string = 'game_on_show';\r\n\r\n    /**\r\n     * @en Event triggered when system in low memory status.<br>\r\n     * This event is only triggered on native iOS/Android platform.\r\n     * @zh 程序在内存不足时触发的事件。<br>\r\n     * 该事件只会在 iOS/Android 平台触发。\r\n     */\r\n    public static readonly EVENT_LOW_MEMORY: string = 'game_on_low_memory';\r\n\r\n    /**\r\n     * @en Event triggered after game inited, at this point all engine objects and game scripts are loaded\r\n     * @zh 游戏启动后的触发事件，此时加载所有的引擎对象和游戏脚本。\r\n     */\r\n    public static readonly EVENT_GAME_INITED = 'game_inited';\r\n\r\n    /**\r\n     * @en Event triggered after engine inited, at this point you will be able to use all engine classes.<br>\r\n     * It was defined as EVENT_RENDERER_INITED in cocos creator v1.x and renamed in v2.0.\r\n     * Since Cocos Creator v3.0, EVENT_RENDERER_INITED is a new event, look up define for details.\r\n     * @zh 在引擎初始化之后触发的事件，此时您能够使用引擎所有的类。<br>\r\n     * 它在 Cocos Creator v1.x 版本中名字为 EVENT_RENDERER_INITED，在 v2.0 更名为 EVENT_ENGINE_INITED\r\n     * 并在 Cocos Creator v3.0 中将 EVENT_RENDERER_INITED 用作为渲染器初始化的事件。\r\n     */\r\n    public static readonly EVENT_ENGINE_INITED = 'engine_inited';\r\n\r\n    /**\r\n     * @en Event triggered after renderer inited, at this point you will be able to use all gfx renderer feature.<br>\r\n     * @zh 在渲染器初始化之后触发的事件，此事件在 EVENT_ENGINE_INITED 之前触发，此时开始可使用 gfx 渲染框架。\r\n     */\r\n    public static readonly EVENT_RENDERER_INITED: string = 'renderer_inited';\r\n\r\n    /**\r\n     * @en Event triggered pre base module initialization, at this point you can not use pal/logging/sys/settings API.\r\n     * @zh 基础模块初始化之前的事件，在这个事件点你无法使用 pal/logging/sys/settings 的相关接口。\r\n     */\r\n    public static readonly EVENT_PRE_BASE_INIT = 'pre_base_init';\r\n    /**\r\n     * @en Event triggered post base module initialization, at this point you can use pal/logging/sys/settings API safely.\r\n     * @zh 基础模块初始化之后的事件，在这个事件点你可以安全使用 pal/logging/sys/settings 的相关接口。\r\n     */\r\n    public static readonly EVENT_POST_BASE_INIT = 'post_base_init';\r\n    /**\r\n     * @en Event triggered pre infrastructure initialization, at this point you can not use assetManager/gfx/screen/builtinResMgr/macro/Layer API.\r\n     * @zh 基础设施初始化之前的事件，在这个事件点你无法使用 assetManager/gfx/screen/builtinResMgr/macro/Layer 的相关接口。\r\n     */\r\n    public static readonly EVENT_PRE_INFRASTRUCTURE_INIT = 'pre_infrastructure_init';\r\n    /**\r\n     * @en Event triggered post infrastructure initialization, at this point you can use assetManager/gfx/screen/builtinResMgr/macro/Layer API safely.\r\n     * @zh 基础设施初始化之后的事件，在这个事件点你可以安全使用 assetManager/gfx/screen/builtinResMgr/macro/Layer 的相关接口。\r\n     */\r\n    public static readonly EVENT_POST_INFRASTRUCTURE_INIT = 'post_infrastructure_init';\r\n    /**\r\n     * @en Event triggered pre subsystem initialization, at this point you can not use physics/animation/rendering/tween/etc API.\r\n     * @zh 子系统初始化之前的事件，在这个事件点你无法使用 physics/animation/rendering/tween/etc 的相关接口。\r\n     */\r\n    public static readonly EVENT_PRE_SUBSYSTEM_INIT = 'pre_subsystem_init';\r\n    /**\r\n     * @en Event triggered post subsystem initialization, at this point you can use physics/animation/rendering/tween/etc API safely.\r\n     * @zh 子系统初始化之后的事件，在这个事件点你可以安全使用 physics/animation/rendering/tween/etc 的相关接口。\r\n     */\r\n    public static readonly EVENT_POST_SUBSYSTEM_INIT = 'post_subsystem_init';\r\n    /**\r\n     * @en Event triggered pre project data initialization,\r\n     * at this point you can not access project data using [resources.load]/[director.loadScene] API.\r\n     * @zh 项目数据初始化之前的事件，在这个事件点你无法使用访问项目数据的相关接口，例如 [resources.load]/[director.loadScene] 等 API。\r\n     */\r\n    public static readonly EVENT_PRE_PROJECT_INIT = 'pre_project_init';\r\n    /**\r\n     * @en Event triggered post project data initialization,\r\n     * at this point you can access project data using [resources.load]/[director.loadScene] API safely.\r\n     * @zh 项目数据初始化之后的事件，在这个事件点你可以安全使用访问项目数据的相关接口，例如 [resources.load]/[director.loadScene] 等 API。\r\n     */\r\n    public static readonly EVENT_POST_PROJECT_INIT = 'post_project_init';\r\n\r\n    /**\r\n     * @en Event triggered when game restart\r\n     * @zh 调用restart后，触发事件\r\n     */\r\n    public static readonly EVENT_RESTART = 'game_on_restart';\r\n\r\n    /**\r\n     * @en Triggered when the game is paused.<br>\r\n     * @zh 游戏暂停时触发该事件。<br>\r\n     * @example\r\n     * ```ts\r\n     * import { game } from 'cc';\r\n     * game.on(Game.EVENT_PAUSE, function () {\r\n     *     //pause audio or video\r\n     * });\r\n     * ```\r\n     */\r\n    public static readonly EVENT_PAUSE = 'game_on_pause';\r\n\r\n    /**\r\n     * @en Triggered when the game is resumed.<br>\r\n     * @zh 游戏恢复时触发该事件。<br>\r\n     */\r\n    public static readonly EVENT_RESUME = 'game_on_resume';\r\n\r\n    /**\r\n     * @en Triggered when the game will be closed. <br>\r\n     * @zh 游戏将要关闭时触发的事件。<br>\r\n     */\r\n    public static readonly EVENT_CLOSE = 'game_on_close';\r\n\r\n    /**\r\n     * @en Web Canvas 2d API as renderer backend.\r\n     * @zh 使用 Web Canvas 2d API 作为渲染器后端。\r\n     */\r\n    public static readonly RENDER_TYPE_CANVAS = 0;\r\n    /**\r\n     * @en WebGL API as renderer backend.\r\n     * @zh 使用 WebGL API 作为渲染器后端。\r\n     */\r\n    public static readonly RENDER_TYPE_WEBGL = 1;\r\n    /**\r\n     * @en OpenGL API as renderer backend.\r\n     * @zh 使用 OpenGL API 作为渲染器后端。\r\n     */\r\n    public static readonly RENDER_TYPE_OPENGL = 2;\r\n\r\n    /**\r\n     * @en Headless Renderer, usually used in test or server env\r\n     * @zh 空渲染器，通常用于测试环境或服务器端模式\r\n     */\r\n    public static readonly RENDER_TYPE_HEADLESS = 3;\r\n\r\n    /**\r\n     * @en If delta time since last frame is more than this threshold in seconds,\r\n     * the game timer will consider user is debugging and adjust the delta time to [[frameTime]].\r\n     * @zh 如果距离上一帧的帧间隔超过了这个阈值（单位是 s），那么就会被认为正在调试，帧间隔会被自动调节为 [[frameTime]].\r\n     */\r\n    public static DEBUG_DT_THRESHOLD = 1;\r\n\r\n    /**\r\n     * @en The outer frame of the game canvas; parent of game container.\r\n     * @zh 游戏画布的外框，container 的父容器。\r\n     *\r\n     * @deprecated since 3.4.0, frame is a concept on web standard, please manager screens via the `screen` module.\r\n     */\r\n    public frame: HTMLDivElement | null = null;\r\n    /**\r\n     * @en The container of game canvas.\r\n     * @zh 游戏画布的容器。\r\n     *\r\n     * @deprecated since 3.4.0, container is a concept on web standard, please manager screens via the `screen` module.\r\n     */\r\n    public container: HTMLDivElement | null = null;\r\n    /**\r\n     * @en The canvas of the game.\r\n     * @zh 游戏的画布。\r\n     */\r\n    public canvas: HTMLCanvasElement | null = null;\r\n\r\n    /**\r\n     * @en The renderer backend of the game.\r\n     * @zh 游戏的渲染器类型。\r\n     */\r\n    public renderType = -1;\r\n\r\n    public eventTargetOn = super.on;\r\n    public eventTargetOnce = super.once;\r\n\r\n    /**\r\n     * @en\r\n     * The current game configuration,\r\n     * please be noticed any modification directly on this object after the game initialization won't take effect.\r\n     * @zh\r\n     * 当前的游戏配置\r\n     * 注意：请不要直接修改这个对象，它不会有任何效果。\r\n     */\r\n    public config: IGameConfig = {} as IGameConfig;\r\n\r\n    /**\r\n     * @en Callback when the scripts of engine have been load.\r\n     * @zh 当引擎完成启动后的回调函数。\r\n     * @method onStart\r\n     */\r\n    public onStart: Game.OnStart | null = null;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the engine and the renderer has been initialized\r\n     * @zh 引擎和渲染器是否以完成初始化\r\n     */\r\n    public get inited (): boolean {\r\n        return this._inited;\r\n    }\r\n\r\n    /**\r\n     * @en Expected frame rate of the game.\r\n     * @zh 游戏的设定帧率。\r\n     */\r\n    public get frameRate (): string | number {\r\n        return this._frameRate;\r\n    }\r\n    public set frameRate (frameRate: number | string) {\r\n        if (typeof frameRate !== 'number') {\r\n            frameRate = parseInt(frameRate, 10);\r\n            if (Number.isNaN(frameRate)) {\r\n                frameRate = 60;\r\n            }\r\n        }\r\n        this._frameRate = frameRate;\r\n        this.frameTime = 1000 / frameRate;\r\n        if (this._pacer) this._pacer.targetFrameRate = this._frameRate;\r\n    }\r\n\r\n    /**\r\n     * @en The delta time since last frame, unit: s.\r\n     * @zh 获取上一帧的增量时间，以秒为单位。\r\n     */\r\n    public get deltaTime (): number {\r\n        return this._useFixedDeltaTime ? this.frameTime / 1000 : this._deltaTime;\r\n    }\r\n\r\n    /**\r\n     * @en The total passed time since game start, unit: ms\r\n     * @zh 获取从游戏开始到现在总共经过的时间，以毫秒为单位\r\n     */\r\n    public get totalTime (): number {\r\n        return performance.now() - this._initTime;\r\n    }\r\n\r\n    /**\r\n     * @en The start time of the current frame in milliseconds.\r\n     * @zh 获取当前帧开始的时间（以 ms 为单位）。\r\n     */\r\n    public get frameStartTime (): number {\r\n        return this._startTime;\r\n    }\r\n\r\n    /**\r\n     * @en The expected delta time of each frame in milliseconds\r\n     * @zh 期望帧率对应的每帧时间（以 ms 为单位）\r\n     */\r\n    public frameTime = 1000 / 60;\r\n\r\n    // states\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _isCloning = false;    // deserializing or instantiating\r\n    private _inited = false;\r\n    private _engineInited = false; // whether the engine has inited\r\n    private _rendererInitialized = false;\r\n    private _paused = true;\r\n    private _pausedByEngine = false;\r\n    // frame control\r\n    private _frameRate = 60;\r\n    private _pacer: Pacer | null = null;\r\n    private _initTime = 0;\r\n    private _startTime = 0;\r\n    private _deltaTime = 0.0;\r\n    private _useFixedDeltaTime = false;\r\n    private _shouldLoadLaunchScene = true;\r\n\r\n    /**\r\n     * @en The event delegate pre base module initialization. At this point you can not use pal/logging/sys/settings API.\r\n     * @zh 基础模块初始化之前的事件代理。在这个事件点你无法使用 pal/logging/sys/settings 的相关接口。\r\n     */\r\n    public readonly onPreBaseInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n    /**\r\n     * @en The event delegate post base module initialization. At this point you can use pal/logging/sys/settings API safely.\r\n     * @zh 基础模块初始化之后的事件代理。在这个事件点你可以安全使用 pal/logging/sys/settings 的相关接口。\r\n     */\r\n    public readonly onPostBaseInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n    /**\r\n     * @en The event delegate pre infrastructure module initialization.\r\n     * At this point you can not use assetManager/gfx/screen/builtinResMgr/macro/Layer API.\r\n     * @zh 基础设施模块初始化之前的事件代理。在这个事件点你无法使用 assetManager/gfx/screen/builtinResMgr/macro/Layer 的相关接口。\r\n     */\r\n    public readonly onPreInfrastructureInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n    /**\r\n     * @en The event delegate post infrastructure module initialization.\r\n     * At this point you can use assetManager/gfx/screen/builtinResMgr/macro/Layer API safely.\r\n     *\r\n     * @zh 基础设施模块初始化之后的事件代理。在这个事件点你可以安全使用 assetManager/gfx/screen/builtinResMgr/macro/Layer 的相关接口。\r\n     */\r\n    public readonly onPostInfrastructureInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n    /**\r\n     * @en The event delegate pre sub system module initialization. At this point you can not use physics/animation/rendering/tween/etc API.\r\n     * @zh 子系统模块初始化之前的事件代理。在这个事件点你无法使用 physics/animation/rendering/tween/etc 的相关接口。\r\n     */\r\n    public readonly onPreSubsystemInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n    /**\r\n     * @en The event delegate post sub system module initialization. At this point you can use physics/animation/rendering/tween/etc API safely.\r\n     * @zh 子系统模块初始化之后的事件代理。在这个事件点你可以安全使用 physics/animation/rendering/tween/etc 的相关接口。\r\n     */\r\n    public readonly onPostSubsystemInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n    /**\r\n     * @en The event delegate pre project data initialization.\r\n     * At this point you can not access project data using [resources.load]/[director.loadScene] API.\r\n     * @zh 项目数据初始化之前的事件代理。在这个事件点你无法使用访问项目数据的相关接口，例如 [resources.load]/[director.loadScene] 等 API。\r\n     */\r\n    public readonly onPreProjectInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n    /**\r\n     * @en The event delegate post project data initialization.\r\n     * at this point you can access project data using [resources.load]/[director.loadScene] API safely.\r\n     * @zh 项目数据初始化之后的事件代理。\r\n     * 在这个事件点你可以安全使用访问项目数据的相关接口，例如 [resources.load]/[director.loadScene] 等 API。\r\n     */\r\n    public readonly onPostProjectInitDelegate: AsyncDelegate<() => (Promise<void> | void)> = new AsyncDelegate();\r\n\r\n    // @Methods\r\n\r\n    //  @Game play control\r\n\r\n    /**\r\n     * @en Set frame rate of game.\r\n     * @zh 设置游戏帧率。\r\n     * @deprecated since v3.3.0 please use [[game.frameRate]]\r\n     */\r\n    public setFrameRate (frameRate: number | string): void {\r\n        this.frameRate = frameRate;\r\n    }\r\n\r\n    /**\r\n     * @en Get frame rate set for the game, it doesn't represent the real frame rate.\r\n     * @zh 获取设置的游戏帧率（不等同于实际帧率）。\r\n     * @return frame rate\r\n     * @deprecated since v3.3.0 please use [[game.frameRate]]\r\n     */\r\n    public getFrameRate (): number {\r\n        return this.frameRate as number;\r\n    }\r\n\r\n    /**\r\n     * @en Run the game frame by frame with a fixed delta time correspond to frame rate.\r\n     * @zh 以固定帧间隔执行一帧游戏循环，帧间隔与设定的帧率匹配。\r\n     */\r\n    public step (): void {\r\n        director.tick(this._calculateDT(true));\r\n    }\r\n\r\n    /**\r\n     * @en Called by the engine to pause the game.\r\n     * @zh 提供给引擎调用暂停游戏接口。\r\n     */\r\n    private pauseByEngine (): void {\r\n        if (this._paused) { return; }\r\n        this._pausedByEngine = true;\r\n        this.pause();\r\n    }\r\n\r\n    /**\r\n     * @en Resume paused game by engine call.\r\n     * @zh 提供给引擎调用恢复暂停游戏接口。\r\n     */\r\n    private resumeByEngine (): void {\r\n        if (this._pausedByEngine) {\r\n            this.resume();\r\n            this._pausedByEngine = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Pause the game main loop. This will pause:\r\n     * - game logic execution\r\n     * - rendering process\r\n     * - input event dispatching (excluding Web and Minigame platforms)\r\n     *\r\n     * This is different with `director.pause()` which only pause the game logic execution.\r\n     *\r\n     * @zh 暂停游戏主循环。包含：\r\n     * - 游戏逻辑\r\n     * - 渲染\r\n     * - 输入事件派发（Web 和小游戏平台除外）\r\n     *\r\n     * 这点和只暂停游戏逻辑的 `director.pause()` 不同。\r\n     */\r\n    public pause (): void {\r\n        if (this._paused) { return; }\r\n        this._paused = true;\r\n        this._pacer?.stop();\r\n        this.emit(Game.EVENT_PAUSE);\r\n    }\r\n\r\n    /**\r\n     * @en Resume the game from pause. This will resume:<br>\r\n     * game logic execution, rendering process, event manager, background music and all audio effects.<br>\r\n     * @zh 恢复游戏主循环。包含：游戏逻辑，渲染，事件处理，背景音乐和所有音效。\r\n     */\r\n    public resume (): void {\r\n        if (!this._paused) { return; }\r\n        input._clearEvents();\r\n        this._paused = false;\r\n        this._pacer?.start();\r\n        this.emit(Game.EVENT_RESUME);\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the game is paused.\r\n     * @zh 判断游戏是否暂停。\r\n     */\r\n    public isPaused (): boolean {\r\n        return this._paused;\r\n    }\r\n\r\n    /**\r\n     * @en Restart game.\r\n     * @zh 重新开始游戏\r\n     */\r\n    public restart (): Promise<void> {\r\n        const endFramePromise = new Promise<void>((resolve): void => {\r\n            director.once(DirectorEvent.END_FRAME, (): void => resolve());\r\n        });\r\n        return endFramePromise.then((): void => {\r\n            director.reset();\r\n            cclegacy.Object._deferredDestroy();\r\n            this.pause();\r\n            this.resume();\r\n            this._shouldLoadLaunchScene = true;\r\n        }).then((): Promise<void[]> => {\r\n            if (WECHAT) {\r\n                return Promise.resolve([]);\r\n            } else {\r\n                return SplashScreen.createInstance().init();\r\n            }\r\n        }).then((): void => {\r\n            this._safeEmit(Game.EVENT_RESTART);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en End game, it will close the game window\r\n     * @zh 退出游戏\r\n     */\r\n    public end (): void {\r\n        systemInfo.close();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register an callback of a specific event type on the game object.<br>\r\n     * This type of event should be triggered via `emit`.<br>\r\n     * @zh\r\n     * 注册 game 的特定事件类型回调。这种类型的事件应该被 `emit` 触发。<br>\r\n     *\r\n     * @param type - A string representing the event type to listen for.\r\n     * @param callback - The callback that will be invoked when the event is dispatched.<br>\r\n     *                              The callback is ignored if it is a duplicate (the callbacks are unique).\r\n     * @param target - The target (this object) to invoke the callback, can be null\r\n     * @param once - After the first invocation, whether the callback should be unregistered.\r\n     * @return - Just returns the incoming callback so you can save the anonymous function easier.\r\n     */\r\n    public on (type: string, callback: () => void, target?: any, once?: boolean): any {\r\n        // Make sure EVENT_ENGINE_INITED callbacks to be invoked\r\n        if (this.canRegisterEvent(type)) {\r\n            callback.call(target);\r\n        }\r\n        return this.eventTargetOn(type, callback, target, once);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register an callback of a specific event type on the game object,<br>\r\n     * the callback will remove itself after the first time it is triggered.<br>\r\n     * @zh\r\n     * 注册 game 的特定事件类型回调，回调会在第一时间被触发后删除自身。\r\n     *\r\n     * @param type - A string representing the event type to listen for.\r\n     * @param callback - The callback that will be invoked when the event is dispatched.<br>\r\n     *                              The callback is ignored if it is a duplicate (the callbacks are unique).\r\n     * @param target - The target (this object) to invoke the callback, can be null\r\n     */\r\n    public once (type: string, callback: () => void, target?: any): any {\r\n        // Make sure EVENT_ENGINE_INITED callbacks to be invoked\r\n        if (this.canRegisterEvent(type)) {\r\n            return callback.call(target);\r\n        }\r\n        return this.eventTargetOnce(type, callback, target);\r\n    }\r\n\r\n    private canRegisterEvent (type: string): boolean {\r\n        return this._engineInited && type === Game.EVENT_ENGINE_INITED\r\n            || this._inited && type === Game.EVENT_GAME_INITED\r\n            || this._rendererInitialized && type === Game.EVENT_RENDERER_INITED;\r\n    }\r\n\r\n    /**\r\n     * @en Init game with configuration object. Initialization process like below:\r\n     * -PreBaseInitEvent\r\n     * -BaseModuleInitialization(logging, sys, settings)\r\n     * -PostBaseInitEvent\r\n     * -PreInfrastructureInitEvent\r\n     * -InfrastructureModuleInitialization(assetManager, builtinResMgr, gfxDevice, screen, Layer, macro)\r\n     * -PostInfrastructureInitEvent\r\n     * -PreSubsystemInitEvent\r\n     * -SubsystemModuleInitialization(animation, physics, tween, ui, middleware, etc)\r\n     * -PostSubsystemInitEvent\r\n     * -EngineInitedEvent\r\n     * -PreProjectDataInitEvent\r\n     * -ProjectDataInitialization(GamePlayScripts, resources, etc)\r\n     * -PostProjectDataInitEvent\r\n     * -GameInitedEvent\r\n     *\r\n     * @zh 使用指定的配置初始化引擎。初始化流程如下：\r\n     * -PreBaseInitEvent\r\n     * -BaseModuleInitialization(logging, sys, settings)\r\n     * -PostBaseInitEvent\r\n     * -PreInfrastructureInitEvent\r\n     * -InfrastructureModuleInitialization(assetManager, builtinResMgr, gfxDevice, screen, Layer, macro)\r\n     * -PostInfrastructureInitEvent\r\n     * -PreSubsystemInitEvent\r\n     * -SubsystemModuleInitialization(animation, physics, tween, ui, middleware, etc)\r\n     * -PostSubsystemInitEvent\r\n     * -EngineInitedEvent\r\n     * -PreProjectDataInitEvent\r\n     * -ProjectDataInitialization(GamePlayScripts, resources, etc)\r\n     * -PostProjectDataInitEvent\r\n     * -GameInitedEvent\r\n     * @param config - Pass configuration object\r\n     */\r\n    public init (config: IGameConfig): Promise<void> {\r\n        this._compatibleWithOldParams(config);\r\n        // DONT change the order unless you know what's you doing\r\n        return Promise.resolve()\r\n            // #region Base\r\n            .then((): Promise<void[]> => {\r\n                this.emit(Game.EVENT_PRE_BASE_INIT);\r\n                return this.onPreBaseInitDelegate.dispatch();\r\n            })\r\n            .then((): void => {\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.time('Init Base');\r\n                }\r\n                const debugMode = config.debugMode || DebugMode.NONE;\r\n                _resetDebugSetting(debugMode);\r\n            })\r\n            .then((): Promise<void> => sys.init())\r\n            .then((): void => {\r\n                this._initEvents();\r\n            })\r\n            .then((): Promise<void> => settings.init(config.settingsPath, config.overrideSettings))\r\n            .then((): Promise<void[]> => {\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.timeEnd('Init Base');\r\n                }\r\n                this.emit(Game.EVENT_POST_BASE_INIT);\r\n                return this.onPostBaseInitDelegate.dispatch();\r\n            })\r\n            // #endregion Base\r\n            // #region Infrastructure\r\n            .then((): Promise<void[]> => {\r\n                this.emit(Game.EVENT_PRE_INFRASTRUCTURE_INIT);\r\n                return this.onPreInfrastructureInitDelegate.dispatch();\r\n            })\r\n            // gfx init\r\n            .then((): boolean | Promise<boolean> => {\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.time('Init Infrastructure');\r\n                }\r\n                macro.init();\r\n                this._initXR();\r\n                const adapter = findCanvas();\r\n                if (adapter) {\r\n                    this.canvas = adapter.canvas;\r\n                    this.frame = adapter.frame;\r\n                    this.container = adapter.container;\r\n                }\r\n                screen.init();\r\n                garbageCollectionManager.init();\r\n                return deviceManager.init(this.canvas, bindingMappingInfo);\r\n            })\r\n            .then(() => {\r\n                const usesCustomPipeline = querySettings(\r\n                    SettingsCategory.RENDERING,\r\n                    'customPipeline',\r\n                );\r\n                if (usesCustomPipeline) {\r\n                    if (!cclegacy.rendering) {\r\n                        errorID(12109);\r\n                        return;\r\n                    }\r\n                    if (!macro.CUSTOM_PIPELINE_NAME) {\r\n                        // If custom pipeline is used, but the name is not set, use the default name\r\n                        macro.CUSTOM_PIPELINE_NAME = 'Builtin';\r\n                    }\r\n                } else {\r\n                    // If custom pipeline is not used, disable custom-pipeline module\r\n                    cclegacy.rendering = undefined;\r\n                }\r\n                assetManager.init();\r\n                builtinResMgr.init();\r\n                Layers.init();\r\n                this.initPacer();\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.timeEnd('Init Infrastructure');\r\n                }\r\n            })\r\n            .then((): Promise<void[]> => {\r\n                this.emit(Game.EVENT_POST_INFRASTRUCTURE_INIT);\r\n                return this.onPostInfrastructureInitDelegate.dispatch();\r\n            })\r\n            // #endregion Infrastructure\r\n            // #region Subsystem\r\n            .then((): Promise<void[]> => {\r\n                this.emit(Game.EVENT_PRE_SUBSYSTEM_INIT);\r\n                return this.onPreSubsystemInitDelegate.dispatch();\r\n            })\r\n            .then((): Promise<void> => effectSettings.init(querySettings(SettingsCategory.RENDERING, 'effectSettingsPath') as string))\r\n            .then((): void => {\r\n                // initialize custom render pipeline\r\n                if (!cclegacy.rendering || !cclegacy.rendering.enableEffectImport) {\r\n                    return;\r\n                }\r\n                const renderMode = querySettings(SettingsCategory.RENDERING, 'renderMode');\r\n                if (renderMode === LegacyRenderMode.HEADLESS) {\r\n                    cclegacy.rendering.init(deviceManager.gfxDevice, null);\r\n                    return;\r\n                }\r\n                const data = effectSettings.data;\r\n                if (data === null) {\r\n                    errorID(1102);\r\n                    return;\r\n                }\r\n                cclegacy.rendering.init(deviceManager.gfxDevice, data);\r\n            })\r\n            .then((): Promise<any[]> => {\r\n                const scriptPackages = querySettings<string[]>(SettingsCategory.SCRIPTING, 'scriptPackages');\r\n                if (scriptPackages) {\r\n                    return Promise.all(scriptPackages.map((pack): Promise<any> => import(pack)));\r\n                }\r\n                return Promise.resolve([]);\r\n            })\r\n            .then((): Promise<void> => {\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.time('Init SubSystem');\r\n                }\r\n                director.init();\r\n                return builtinResMgr.loadBuiltinAssets();\r\n            })\r\n            .then((): Promise<void[]> => {\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.timeEnd('Init SubSystem');\r\n                }\r\n                this.emit(Game.EVENT_POST_SUBSYSTEM_INIT);\r\n                return this.onPostSubsystemInitDelegate.dispatch();\r\n            })\r\n            .then((): void => {\r\n                log(`Cocos Creator v${VERSION}`);\r\n                this.emit(Game.EVENT_ENGINE_INITED);\r\n                this._engineInited = true;\r\n            })\r\n            // #endregion Subsystem\r\n            // #region Project\r\n            .then((): Promise<void[]> => {\r\n                this.emit(Game.EVENT_PRE_PROJECT_INIT);\r\n                return this.onPreProjectInitDelegate.dispatch();\r\n            })\r\n            .then((): Promise<void> => {\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.time('Init Project');\r\n                }\r\n                const jsList = querySettings<string[]>(SettingsCategory.PLUGINS, 'jsList');\r\n                let promise = Promise.resolve();\r\n                if (jsList) {\r\n                    jsList.forEach((jsListFile): void => {\r\n                        promise = promise.then((): any => loadJsFile(`${PREVIEW ? 'plugins' : 'src'}/${jsListFile}`));\r\n                    });\r\n                }\r\n                return promise;\r\n            })\r\n            .then((): Promise<any[]> => this._loadProjectBundles())\r\n            .then((): Promise<void> => this._loadCCEScripts())\r\n            .then((): void | Promise<void> => this._setupRenderPipeline())\r\n            .then((): Promise<any[]> => this._loadPreloadAssets())\r\n            .then((): Promise<void[]> => {\r\n                builtinResMgr.compileBuiltinMaterial();\r\n                if (WECHAT) {\r\n                    return Promise.resolve([]);\r\n                }\r\n                return SplashScreen.createInstance().init();\r\n            })\r\n            .then((): Promise<void[]> => {\r\n                if (DEBUG) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.timeEnd('Init Project');\r\n                }\r\n                this.emit(Game.EVENT_POST_PROJECT_INIT);\r\n                return this.onPostProjectInitDelegate.dispatch();\r\n            })\r\n            // #endregion Project\r\n            .then((): void => {\r\n                this._inited = true;\r\n                this._safeEmit(Game.EVENT_GAME_INITED);\r\n            });\r\n    }\r\n\r\n    private _initXR (): void {\r\n        if (!USE_XR) return;\r\n        if (typeof globalThis.__globalXR === 'undefined') {\r\n            globalThis.__globalXR = {};\r\n        }\r\n        const globalXR = globalThis.__globalXR;\r\n        globalXR.webxrCompatible = querySettings(SettingsCategory.XR, 'webxrCompatible') ?? false;\r\n\r\n        if (sys.isXR) {\r\n            // XrEntry must not be destroyed\r\n            xr.entry = xr.XrEntry.getInstance();\r\n\r\n            const xrMSAA = querySettings(SettingsCategory.RENDERING, 'msaa') ?? 1;\r\n            const xrRenderingScale = querySettings(SettingsCategory.RENDERING, 'renderingScale') ?? 1.0;\r\n            xr.entry.setMultisamplesRTT(xrMSAA);\r\n            xr.entry.setRenderingScale(xrRenderingScale);\r\n        }\r\n    }\r\n\r\n    private _compatibleWithOldParams (config: IGameConfig): void {\r\n        const overrideSettings = config.overrideSettings = config.overrideSettings || {};\r\n        if ('showFPS' in config) {\r\n            overrideSettings.profiling = overrideSettings.profiling || {};\r\n            overrideSettings.profiling.showFPS = config.showFPS;\r\n        }\r\n        if ('frameRate' in config) {\r\n            overrideSettings.screen = overrideSettings.screen || {};\r\n            overrideSettings.screen.frameRate = config.frameRate;\r\n        }\r\n        if ('renderMode' in config) {\r\n            overrideSettings.rendering = overrideSettings.rendering || {};\r\n            overrideSettings.rendering.renderMode = config.renderMode;\r\n        }\r\n        if ('renderPipeline' in config) {\r\n            overrideSettings.rendering = overrideSettings.rendering || {};\r\n            overrideSettings.rendering.renderPipeline = config.renderPipeline;\r\n        }\r\n        if ('assetOptions' in config) {\r\n            overrideSettings.assets = overrideSettings.assets || {};\r\n            Object.assign(overrideSettings.assets, config.assetOptions);\r\n        }\r\n        if ('customJointTextureLayouts' in config) {\r\n            overrideSettings.animation = overrideSettings.animation || {};\r\n            overrideSettings.animation.customJointTextureLayouts = config.customJointTextureLayouts;\r\n        }\r\n        if ('physics' in config) {\r\n            overrideSettings.physics = overrideSettings.physics || {};\r\n            Object.assign(overrideSettings.physics, config.physics);\r\n        }\r\n        if ('orientation' in config) {\r\n            overrideSettings.screen = overrideSettings.screen || {};\r\n            overrideSettings.screen.orientation = config.orientation;\r\n        }\r\n        if ('exactFitScreen' in config) {\r\n            overrideSettings.screen = overrideSettings.screen || {};\r\n            overrideSettings.screen.exactFitScreen = config.exactFitScreen;\r\n        }\r\n    }\r\n\r\n    private _loadPreloadAssets (): Promise<any[]> {\r\n        const preloadAssets = querySettings<string[]>(SettingsCategory.ASSETS, 'preloadAssets');\r\n        if (!preloadAssets) return Promise.resolve([]);\r\n        return Promise.all(preloadAssets.map((uuid): Promise<void> => new Promise<void>((resolve, reject): void => {\r\n            assetManager.loadAny(uuid, (err): void => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                resolve();\r\n            });\r\n        })));\r\n    }\r\n\r\n    /**\r\n     * @internal only for browser preview\r\n     */\r\n    private _loadCCEScripts (): Promise<void> {\r\n        return new Promise<void>((resolve, reject): void => {\r\n            // Since there is no script in the bundle during preview, we need to load the user's script in the following way\r\n            if (PREVIEW && !TEST && !EDITOR && !NATIVE) {\r\n                const bundleName = 'cce:/internal/x/prerequisite-imports';\r\n                import(bundleName).then((): void => resolve(), (reason): void => reject(reason));\r\n            } else if (EDITOR && globalThis.cce && globalThis.cce.Script) {\r\n                globalThis.cce.Script.init().then(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @internal only for game-view\r\n     */\r\n    public _loadProjectBundles (): Promise<void[]> {\r\n        const preloadBundles = querySettings<{ bundle: string, version: string }[]>(SettingsCategory.ASSETS, 'preloadBundles');\r\n        if (!preloadBundles) return Promise.resolve([]);\r\n        return Promise.all(preloadBundles.map(({ bundle, version }): Promise<void> => new Promise<void>((resolve, reject): void => {\r\n            const opts: Record<string, any> = {};\r\n            if (version) opts.version = version;\r\n            assetManager.loadBundle(bundle, opts, (err): void => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                resolve();\r\n            });\r\n        })));\r\n    }\r\n\r\n    /**\r\n     * @en Run game with configuration object and onStart function.\r\n     * @zh 运行游戏，并且指定引擎配置和 onStart 的回调。\r\n     * @param onStart - function to be executed after game initialized\r\n     */\r\n    public run (onStart?: Game.OnStart): void {\r\n        if (onStart) {\r\n            this.onStart = onStart;\r\n        }\r\n        if (!this._inited || EDITOR_NOT_IN_PREVIEW) {\r\n            return;\r\n        }\r\n        this.resume();\r\n    }\r\n\r\n    // @Methods\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _calculateDT (useFixedDeltaTime: boolean): number {\r\n        this._useFixedDeltaTime = useFixedDeltaTime;\r\n\r\n        if (useFixedDeltaTime) {\r\n            this._startTime = performance.now();\r\n            return this.frameTime / 1000;\r\n        }\r\n\r\n        const now = performance.now();\r\n        this._deltaTime = now > this._startTime ? (now - this._startTime) / 1000 : 0;\r\n        if (this._deltaTime > Game.DEBUG_DT_THRESHOLD) {\r\n            this._deltaTime = this.frameTime / 1000;\r\n        }\r\n        this._startTime = now;\r\n        return this._deltaTime;\r\n    }\r\n\r\n    private _updateCallback (): void {\r\n        if (!this._inited) return;\r\n        if (!WECHAT && SplashScreen.instance && !SplashScreen.instance.isFinished) {\r\n            SplashScreen.instance.update(this._calculateDT(false));\r\n        } else if (this._shouldLoadLaunchScene) {\r\n            if (!WECHAT) {\r\n                SplashScreen.releaseInstance();\r\n            }\r\n            this._shouldLoadLaunchScene = false;\r\n            const launchScene = querySettings(SettingsCategory.LAUNCH, 'launchScene') as string;\r\n            if (launchScene) {\r\n                // load scene\r\n                director.loadScene(launchScene, (): void => {\r\n                    logID(1103, launchScene);\r\n                    this._initTime = performance.now();\r\n                    director.startAnimation();\r\n                    this.onStart?.();\r\n                });\r\n            } else {\r\n                this._initTime = performance.now();\r\n                director.startAnimation();\r\n                this.onStart?.();\r\n            }\r\n        } else {\r\n            director.tick(this._calculateDT(false));\r\n        }\r\n    }\r\n\r\n    private initPacer (): void {\r\n        const frameRate = querySettings(SettingsCategory.SCREEN, 'frameRate') ?? 60;\r\n        assert(typeof frameRate === 'number');\r\n        this._pacer = new Pacer();\r\n        this._pacer.onTick = this._updateCallback.bind(this);\r\n        this.frameRate = frameRate;\r\n    }\r\n\r\n    private _initEvents (): void {\r\n        systemInfo.on('show', this._onShow, this);\r\n        systemInfo.on('hide', this._onHide, this);\r\n        systemInfo.on('close', this._onClose, this);\r\n    }\r\n\r\n    private _onHide (): void {\r\n        this.emit(Game.EVENT_HIDE);\r\n        this.pauseByEngine();\r\n    }\r\n\r\n    private _onShow (): void {\r\n        this.emit(Game.EVENT_SHOW);\r\n        this.resumeByEngine();\r\n    }\r\n\r\n    private _onClose (): void {\r\n        this.emit(Game.EVENT_CLOSE);\r\n        // TODO : Release Resources.\r\n        systemInfo.exit();\r\n    }\r\n\r\n    //  @ Persist root node section\r\n    /**\r\n     * @en\r\n     * Add a persistent root node to the game, the persistent node won't be destroyed during scene transition.<br>\r\n     * The target node must be placed in the root level of hierarchy, otherwise this API won't have any effect.\r\n     * @zh\r\n     * 声明常驻根节点，该节点不会在场景切换中被销毁。<br>\r\n     * 目标节点必须位于为层级的根节点，否则无效。\r\n     * @param node - The node to be made persistent\r\n     * @deprecated Since v3.6.0, please use director.addPersistRootNode instead.\r\n     */\r\n    public addPersistRootNode (node: Node): void {\r\n        director.addPersistRootNode(node);\r\n    }\r\n\r\n    /**\r\n     * @en Remove a persistent root node.\r\n     * @zh 取消常驻根节点。\r\n     * @param node - The node to be removed from persistent node list\r\n     * @deprecated Since v3.6.0, please use director.removePersistRootNode instead.\r\n     */\r\n    public removePersistRootNode (node: Node): void {\r\n        director.removePersistRootNode(node);\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the node is a persistent root node.\r\n     * @zh 检查节点是否是常驻根节点。\r\n     * @param node - The node to be checked.\r\n     * @deprecated Since v3.6.0, please use director.isPersistRootNode instead.\r\n     */\r\n    public isPersistRootNode (node: Node): boolean {\r\n        return director.isPersistRootNode(node);\r\n    }\r\n\r\n    private _setupRenderPipeline (): void | Promise<void> {\r\n        const usesCustomPipeline = querySettings(\r\n            SettingsCategory.RENDERING,\r\n            'customPipeline',\r\n        );\r\n\r\n        return this._setRenderPipeline(!!usesCustomPipeline);\r\n    }\r\n\r\n    private _setRenderPipeline (customPipeline: boolean): void {\r\n        if (!director.root!.setRenderPipeline(customPipeline)) {\r\n            errorID(1222);\r\n            return;\r\n        }\r\n\r\n        this._rendererInitialized = true;\r\n        this._safeEmit(Game.EVENT_RENDERER_INITED);\r\n    }\r\n\r\n    private _safeEmit (event: string | number): void {\r\n        if (EDITOR) {\r\n            try {\r\n                this.emit(event);\r\n            } catch (e) {\r\n                warn(e);\r\n            }\r\n        } else {\r\n            this.emit(event);\r\n        }\r\n    }\r\n}\r\n\r\nexport declare namespace Game {\r\n    export type OnStart = () => void;\r\n}\r\n\r\ncclegacy.Game = Game;\r\n\r\n/**\r\n * @en\r\n * This is a Game instance.\r\n * @zh\r\n * 这是一个 Game 类的实例，包含游戏主体信息并负责驱动游戏的游戏对象。\r\n */\r\nexport const game = cclegacy.game = new Game();\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { checkPalIntegrity, withImpl } from '../../integrity-check';\r\n\r\nexport function findCanvas (): { frame: HTMLDivElement, container: HTMLDivElement, canvas: HTMLCanvasElement } {\r\n    const frame = document.querySelector('#GameDiv') as HTMLDivElement;\r\n    const container = document.querySelector('#Cocos3dGameContainer') as HTMLDivElement;\r\n    const canvas = document.querySelector('#GameCanvas') as HTMLCanvasElement;\r\n\r\n    return { frame, container, canvas };\r\n}\r\n\r\nexport function loadJsFile (path: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n        let err;\r\n        function windowErrorListener (evt): void {\r\n            if (evt.filename === path) {\r\n                err = evt.error;\r\n            }\r\n        }\r\n        window.addEventListener('error', windowErrorListener);\r\n        const script = document.createElement('script');\r\n        script.charset = 'utf-8';\r\n        script.async = true;\r\n        script.crossOrigin = 'anonymous';\r\n        script.addEventListener('error', () => {\r\n            window.removeEventListener('error', windowErrorListener);\r\n            reject(Error(`Error loading ${path}`));\r\n        });\r\n        script.addEventListener('load', () => {\r\n            window.removeEventListener('error', windowErrorListener);\r\n            document.head.removeChild(script);\r\n            // Note that if an error occurs that isn't caught by this if statement,\r\n            // that getRegister will return null and a \"did not instantiate\" error will be thrown.\r\n            if (err) {\r\n                reject(err);\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n        script.src = path.replace('#', '%23');\r\n        document.head.appendChild(script);\r\n    });\r\n}\r\n\r\ncheckPalIntegrity<typeof import('pal/env')>(withImpl<typeof import('./env')>());\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { removeProperty, markAsWarning, replaceProperty } from '../core/utils/x-deprecated';\r\nimport { Director, director } from './director';\r\nimport { game } from './game';\r\nimport { assetManager } from '../asset/asset-manager';\r\nimport type { ISceneInfo } from '../asset/asset-manager/config';\r\n\r\n// Director\r\n\r\nmarkAsWarning(Director.prototype, 'director', [\r\n    {\r\n        name: 'calculateDeltaTime',\r\n    },\r\n    {\r\n        name: 'getDeltaTime',\r\n        suggest: 'Use game.deltaTime instead',\r\n    },\r\n    {\r\n        name: 'getTotalTime',\r\n        suggest: 'Use game.totalTime instead',\r\n    },\r\n    {\r\n        name: 'getCurrentTime',\r\n        suggest: 'Use game.frameStartTime instead',\r\n    },\r\n]);\r\n\r\nremoveProperty(Director.prototype, 'director', [\r\n    {\r\n        name: 'setAnimationInterval',\r\n        suggest: 'please use game.frameRate instead',\r\n    },\r\n    {\r\n        name: 'getAnimationInterval',\r\n        suggest: 'please use game.frameRate instead',\r\n    },\r\n    {\r\n        name: 'getRunningScene',\r\n        suggest: 'please use getScene instead',\r\n    },\r\n    {\r\n        name: 'setDepthTest',\r\n        suggest: 'please use camera API instead',\r\n    },\r\n    {\r\n        name: 'setClearColor',\r\n        suggest: 'please use camera API instead',\r\n    },\r\n    {\r\n        name: 'getWinSize',\r\n        suggest: 'please use view.getVisibleSize instead',\r\n    },\r\n    {\r\n        name: 'getWinSizeInPixels',\r\n    },\r\n    {\r\n        name: 'purgeCachedData',\r\n        suggest: 'please use assetManager.releaseAll instead',\r\n    },\r\n    {\r\n        name: 'convertToGL',\r\n    },\r\n    {\r\n        name: 'convertToUI',\r\n    },\r\n]);\r\n\r\nreplaceProperty(director, 'director', [\r\n    {\r\n        name: '_getSceneUuid',\r\n        targetName: 'assetManager.main',\r\n        newName: 'getSceneInfo',\r\n        customFunction: (sceneName): string | undefined => {\r\n            if (assetManager.main) {\r\n                return assetManager.main.getSceneInfo(sceneName)?.uuid;\r\n            }\r\n            return '';\r\n        },\r\n    },\r\n]);\r\n\r\n// game\r\n\r\nmarkAsWarning(game, 'game', [\r\n    {\r\n        name: 'collisionMatrix',\r\n    },\r\n    {\r\n        name: 'groupList',\r\n    },\r\n]);\r\n\r\nreplaceProperty(game, 'game', [\r\n    {\r\n        name: '_sceneInfos',\r\n        targetName: 'assetManager.main',\r\n        newName: 'getSceneInfo',\r\n        customGetter: (): ISceneInfo[] => {\r\n            const scenes: ISceneInfo[] = [];\r\n            if (assetManager.main) {\r\n                assetManager.main.config.scenes.forEach((val): void => {\r\n                    scenes.push(val);\r\n                });\r\n            }\r\n            return scenes;\r\n        },\r\n    },\r\n]);\r\n"],"names":["Pacer","_this","this","_stHandle","_onTick","_targetFrameRate","_frameTime","_startTime","_isPlaying","_frameCount","_callback","_rAF","_cAF","_handleRAF","currTime","performance","now","elapseTime","elapseFrame","Math","floor","call","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","cancelRequestAnimationFrame","msCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","webkitCancelRequestAnimationFrame","msCancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","ocancelAnimationFrame","_proto","prototype","start","_globalThis$__globalX","_this2","recordStartTime","undefined","globalThis","__globalXR","isWebXR","_stTime","updateCallback","stop","_ctTime","callback","_globalThis$__globalX2","max","timeToCall","setTimeout","id","_globalThis$__globalX3","clearTimeout","_createClass","key","get","set","val","assertIsTrue","localWinSize","size","orientationMap","macro","ORIENTATION_AUTO","Orientation","AUTO","_orientationMap","ORIENTATION_LANDSCAPE","LANDSCAPE","ORIENTATION_PORTRAIT","PORTRAIT","View","exports","_Eventify","_designResolutionSize","_scaleX","_scaleY","_viewportRect","rect","_visibleRect","_autoFullScreen","_retinaEnabled","_resizeCallback","_strategyer","ContainerStrategy","_strategy","ContentStrategy","_rpExactFit","ResolutionPolicy","EQUAL_TO_FRAME","EXACT_FIT","_rpShowAll","SHOW_ALL","_rpNoBorder","NO_BORDER","_rpFixedHeight","FIXED_HEIGHT","_rpFixedWidth","FIXED_WIDTH","_resolutionPolicy","_inheritsLoose","init","windowSize","screen","w","width","h","height","visibleRect","resizeWithBrowserSize","designResolution","settings","querySettings","SettingsCategory","SCREEN","setDesignResolutionSize","Number","policy","on","_updateAdaptResult","enabled","screenAdapter","handleResizeEvent","setResizeCallback","setOrientation","orientation","adjustViewportMeta","enableRetina","isRetinaEnabled","enableAutoFullScreen","requestFullScreen","isAutoFullScreenEnabled","setCanvasSize","resolutionScale","dpr","devicePixelRatio","Size","getCanvasSize","getFrameSize","sizeInCssPixels","setFrameSize","getVisibleSize","getVisibleSizeInPixel","getVisibleOrigin","Vec2","x","y","getVisibleOriginInPixel","getResolutionPolicy","_updateResolutionPolicy","resolutionPolicy","_locPolicy","setResolutionPolicy","designedResolution","view","getDesignResolutionSize","preApply","result","apply","scale","length","viewport","vp","vb","rv","postApply","emit","errorID","setRealPixelResolution","document","documentElement","style","body","left","top","getViewportRect","getScaleX","getScaleY","getDevicePixelRatio","convertToLocationInView","tx","ty","relatedPos","out","isFrameRotated","_convertToUISpace","point","windowId","cclegacy","director","root","resize","designResolutionSize","assert","Eventify","System","instance","name","_proto2","_setupCanvas","locCanvas","game","canvas","PROPORTION_TO_FRAME","_result","UNKNOWN","_proto3","_buildResult","containerW","containerH","contentW","contentH","scaleX","scaleY","abs","Rect","round","EqualToFrame","_ContainerStrategy","isProportionalToFrame","ProportionalToFrame","_ContainerStrategy2","_this3","ExactFit","_ContentStrategy","_this4","_view","ShowAll","_ContentStrategy2","_this5","designW","designH","NoBorder","_ContentStrategy3","_this6","FixedHeight","_ContentStrategy4","_this7","FixedWidth","_ContentStrategy5","_this8","containerStg","contentStg","_containerStrategy","_contentStrategy","_proto11","setContainerStrategy","setContentStrategy","getContentStrategy","registerSystem","winSize","v2_0","setMaterialProperty","mat","value","passIdx","setProperty","SplashScreen","_curTime","device","swapchain","shader","sampler","cmdBuff","quadAssmebler","vertexBuffers","indicesBuffers","renderArea","clearColors","projection","isMobile","bgMat","bgImage","bgTexture","logoMat","logoImage","logoTexture","watermarkMat","watermarkTexture","bgWidth","bgHeight","logoWidthTemp","logoHeightTemp","logoWidth","logoHeight","logoXTrans","logoYTrans","textSize","textHeight","textXTrans","textYExtraTrans","textExpandSize","scaleSize","_policy","_settings$querySettin","_settings$querySettin2","_settings$querySettin3","_settings$querySettin4","_settings$querySettin5","_settings$querySettin6","displayRatio","SPLASH_SCREEN","totalTime","watermarkLocation","autoFit","logo","background","mainWindow","preInit","initLayout","type","initWaterMark","bgPromise","Promise","resolve","logoPromise","reject","ccwindow","Image","onload","initBG","onerror","src","base64","initLogo","all","_this$settings$backgr","clearColor","color","Color","z","capabilities","commandBuffer","verts","Float32Array","vbStride","BYTES_PER_ELEMENT","vbSize","createBuffer","BufferInfo","BufferUsageBit","VERTEX","TRANSFER_DST","MemoryUsageBit","DEVICE","update","indices","Uint16Array","ibStride","ibSize","INDEX","attributes","Attribute","Format","RG32F","IAInfo","InputAssemblerInfo","createInputAssembler","Mat4","ortho","clipSpaceMinZ","clipSpaceSignY","surfaceTransform","sys","initScale","dw","dh","desiredWidth","desiredHeight","temp","deltaTime","percent","clamp01","u_p","easing","passes","watermarkTW","watermarkTH","textYTrans","frame","Material","initialize","effectName","samplerInfo","SamplerInfo","addressU","Address","CLAMP","addressV","addressW","getSampler","createTexture","TextureInfo","TextureType","TEX2D","TextureUsageBit","SAMPLED","RGBA8","pass","binding","getBinding","bindTexture","getShaderVariant","descriptorSet","bindSampler","region","BufferTextureCopy","regionTexExtent","texExtent","depth","copyTexImagesToTexture","logoRatio","watermarkImg","createElement","text","ctx","getContext","font","textBaseline","textAlign","fillStyle","textLength","measureText","fillText","isXR","xr","entry","isRenderAllowable","renderSize","xrEye","renderLoopStart","xrFov","getEyeFov","radioLeft","radioRight","XREye","LEFT","tan","RIGHT","m00","preTransforms","m05","enableAutoBarrier","acquire","framebuffer","begin","beginRenderPass","renderPass","pipeline","bgPass","bgPso","PipelineStateManager","getOrCreatePipelineState","bindPipelineState","bindDescriptorSet","SetIndex","MATERIAL","bindInputAssembler","draw","logoPass","logoPso","wartermarkPass","watermarkPso","endRenderPass","end","flushCommands","queue","submit","present","legacyCC","rendering","renderLoopEnd","destroy","createInstance","_ins","releaseInstance","internal","effectSettings","EffectSettings","_data","path","enableEffectImport","xhr","XMLHttpRequest","open","responseType","response","Error","send","bind","Game","_EventTarget","container","renderType","eventTargetOn","eventTargetOnce","once","config","onStart","frameTime","_isCloning","_inited","_engineInited","_rendererInitialized","_paused","_pausedByEngine","_frameRate","_pacer","_initTime","_deltaTime","_useFixedDeltaTime","_shouldLoadLaunchScene","onPreBaseInitDelegate","AsyncDelegate","onPostBaseInitDelegate","onPreInfrastructureInitDelegate","onPostInfrastructureInitDelegate","onPreSubsystemInitDelegate","onPostSubsystemInitDelegate","onPreProjectInitDelegate","onPostProjectInitDelegate","setFrameRate","frameRate","getFrameRate","step","tick","_calculateDT","pauseByEngine","pause","resumeByEngine","resume","_this$_pacer","EVENT_PAUSE","_this$_pacer2","input","_clearEvents","EVENT_RESUME","isPaused","restart","DirectorEvent","END_FRAME","then","reset","Object","_deferredDestroy","_safeEmit","EVENT_RESTART","systemInfo","close","target","canRegisterEvent","EVENT_ENGINE_INITED","EVENT_GAME_INITED","EVENT_RENDERER_INITED","_compatibleWithOldParams","EVENT_PRE_BASE_INIT","dispatch","console","time","debugMode","DebugMode","NONE","_resetDebugSetting","_initEvents","settingsPath","overrideSettings","timeEnd","EVENT_POST_BASE_INIT","EVENT_PRE_INFRASTRUCTURE_INIT","_initXR","adapter","querySelector","garbageCollectionManager","deviceManager","bindingMappingInfo","RENDERING","CUSTOM_PIPELINE_NAME","assetManager","builtinResMgr","Layers","initPacer","EVENT_POST_INFRASTRUCTURE_INIT","EVENT_PRE_SUBSYSTEM_INIT","LegacyRenderMode","HEADLESS","data","gfxDevice","scriptPackages","SCRIPTING","map","pack","module","loadBuiltinAssets","EVENT_POST_SUBSYSTEM_INIT","log","VERSION","EVENT_PRE_PROJECT_INIT","jsList","PLUGINS","promise","forEach","jsListFile","err","windowErrorListener","evt","filename","error","addEventListener","script","charset","async","crossOrigin","removeEventListener","head","removeChild","replace","appendChild","_loadProjectBundles","_loadCCEScripts","_setupRenderPipeline","_loadPreloadAssets","compileBuiltinMaterial","EVENT_POST_PROJECT_INIT","_querySettings","webxrCompatible","XR","_querySettings2","_querySettings3","XrEntry","getInstance","xrMSAA","xrRenderingScale","setMultisamplesRTT","setRenderingScale","profiling","showFPS","renderMode","renderPipeline","assets","assign","assetOptions","animation","customJointTextureLayouts","physics","exactFitScreen","preloadAssets","ASSETS","uuid","loadAny","preloadBundles","_ref","bundle","version","opts","loadBundle","run","EDITOR_NOT_IN_PREVIEW","useFixedDeltaTime","DEBUG_DT_THRESHOLD","_updateCallback","isFinished","_this$onStart","launchScene","LAUNCH","loadScene","logID","startAnimation","_querySettings4","onTick","_onShow","_onHide","_onClose","EVENT_HIDE","EVENT_SHOW","EVENT_CLOSE","exit","addPersistRootNode","node","removePersistRootNode","isPersistRootNode","usesCustomPipeline","_setRenderPipeline","customPipeline","setRenderPipeline","event","parseInt","isNaN","targetFrameRate","EventTarget","EVENT_LOW_MEMORY","RENDER_TYPE_CANVAS","RENDER_TYPE_WEBGL","RENDER_TYPE_OPENGL","RENDER_TYPE_HEADLESS","markAsWarning","Director","suggest","removeProperty","replaceProperty","targetName","newName","customFunction","sceneName","_assetManager$main$ge","main","getSceneInfo","customGetter","scenes","push"],"mappings":"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"}