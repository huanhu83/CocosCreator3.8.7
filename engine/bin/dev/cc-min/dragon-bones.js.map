{"version":3,"file":"dragon-bones.js","sources":["../../../node_modules/@cocos/dragonbones-js/out/dragonBones.js","../../../cocos/dragon-bones/ArmatureCache.ts","../../../cocos/dragon-bones/CCTextureData.ts","../../../cocos/dragon-bones/CCSlot.ts","../../../cocos/dragon-bones/CCArmatureDisplay.ts","../../../cocos/dragon-bones/CCFactory.ts","../../../cocos/dragon-bones/DragonBonesAsset.ts","../../../cocos/dragon-bones/DragonBonesAtlasAsset.ts","../../../cocos/dragon-bones/AttachUtil.ts","../../../cocos/dragon-bones/ArmatureDisplay.ts","../../../cocos/dragon-bones/ArmatureSystem.ts","../../../cocos/dragon-bones/assembler/simple.ts","../../../cocos/dragon-bones/assembler/index.ts","../../../cocos/dragon-bones/index.ts"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nlet dragonBones = {};\n(function (dragonBones) {\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @private\n     */\n    var DragonBones = /** @class */ (function () {\n        function DragonBones(eventManager) {\n            this._clock = new dragonBones.WorldClock();\n            this._events = [];\n            this._objects = [];\n            this._eventManager = null;\n            this._eventManager = eventManager;\n            console.info(\"DragonBones: \" + DragonBones.VERSION + \"\\nWebsite: http://dragonbones.com/\\nSource and Demo: https://github.com/DragonBones/\");\n        }\n        DragonBones.prototype.advanceTime = function (passedTime) {\n            if (this._objects.length > 0) {\n                for (var _i = 0, _a = this._objects; _i < _a.length; _i++) {\n                    var object = _a[_i];\n                    object.returnToPool();\n                }\n                this._objects.length = 0;\n            }\n            this._clock.advanceTime(passedTime);\n            if (this._events.length > 0) {\n                for (var i = 0; i < this._events.length; ++i) {\n                    var eventObject = this._events[i];\n                    var armature = eventObject.armature;\n                    if (armature._armatureData !== null) { // May be armature disposed before advanceTime.\n                        armature.eventDispatcher.dispatchDBEvent(eventObject.type, eventObject);\n                        if (eventObject.type === dragonBones.EventObject.SOUND_EVENT) {\n                            this._eventManager.dispatchDBEvent(eventObject.type, eventObject);\n                        }\n                    }\n                    this.bufferObject(eventObject);\n                }\n                this._events.length = 0;\n            }\n        };\n        DragonBones.prototype.bufferEvent = function (value) {\n            if (this._events.indexOf(value) < 0) {\n                this._events.push(value);\n            }\n        };\n        DragonBones.prototype.bufferObject = function (object) {\n            if (this._objects.indexOf(object) < 0) {\n                this._objects.push(object);\n            }\n        };\n        Object.defineProperty(DragonBones.prototype, \"clock\", {\n            get: function () {\n                return this._clock;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DragonBones.prototype, \"eventManager\", {\n            get: function () {\n                return this._eventManager;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DragonBones.VERSION = \"5.6.300\";\n        DragonBones.yDown = false;\n        DragonBones.debug = false;\n        DragonBones.debugDraw = false;\n        DragonBones.webAssembly = false;\n        return DragonBones;\n    }());\n    dragonBones.DragonBones = DragonBones;\n})(dragonBones || (dragonBones = {}));\n//\nif (!console.warn) {\n    console.warn = function () { };\n}\nif (!console.assert) {\n    console.assert = function () { };\n}\n//\nif (!Date.now) {\n    Date.now = function now() {\n        return new Date().getTime();\n    };\n}\n// Weixin can not support typescript extends.\nvar __extends = function (t, e) {\n    function r() {\n        this.constructor = t;\n    }\n    for (var i in e) {\n        if (e.hasOwnProperty(i)) {\n            t[i] = e[i];\n        }\n    }\n    r.prototype = e.prototype, t.prototype = new r();\n};\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The BaseObject is the base class for all objects in the DragonBones framework.\n     * All BaseObject instances are cached to the object pool to reduce the performance consumption of frequent requests for memory or memory recovery.\n     * @version DragonBones 4.5\n     * @language en_US\n     */\n    /**\n     * - 基础对象，通常 DragonBones 的对象都继承自该类。\n     * 所有基础对象的实例都会缓存到对象池，以减少频繁申请内存或内存回收的性能消耗。\n     * @version DragonBones 4.5\n     * @language zh_CN\n     */\n    var BaseObject = /** @class */ (function () {\n        function BaseObject() {\n            /**\n             * - A unique identification number assigned to the object.\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 分配给此实例的唯一标识号。\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            this.hashCode = BaseObject._hashCode++;\n            this._isInPool = false;\n        }\n        BaseObject._returnObject = function (object) {\n            var classType = String(object.constructor);\n            var maxCount = classType in BaseObject._maxCountMap ? BaseObject._maxCountMap[classType] : BaseObject._defaultMaxCount;\n            var pool = BaseObject._poolsMap[classType] = BaseObject._poolsMap[classType] || [];\n            if (pool.length < maxCount) {\n                if (!object._isInPool) {\n                    object._isInPool = true;\n                    pool.push(object);\n                }\n                else {\n                    console.warn(\"The object is already in the pool.\");\n                }\n            }\n            else {\n            }\n        };\n        BaseObject.toString = function () {\n            throw new Error();\n        };\n        /**\n         * - Set the maximum cache count of the specify object pool.\n         * @param objectConstructor - The specify class. (Set all object pools max cache count if not set)\n         * @param maxCount - Max count.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 设置特定对象池的最大缓存数量。\n         * @param objectConstructor - 特定的类。 (不设置则设置所有对象池的最大缓存数量)\n         * @param maxCount - 最大缓存数量。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseObject.setMaxCount = function (objectConstructor, maxCount) {\n            if (maxCount < 0 || maxCount !== maxCount) { // isNaN\n                maxCount = 0;\n            }\n            if (objectConstructor !== null) {\n                var classType = String(objectConstructor);\n                var pool = classType in BaseObject._poolsMap ? BaseObject._poolsMap[classType] : null;\n                if (pool !== null && pool.length > maxCount) {\n                    pool.length = maxCount;\n                }\n                BaseObject._maxCountMap[classType] = maxCount;\n            }\n            else {\n                BaseObject._defaultMaxCount = maxCount;\n                for (var classType in BaseObject._poolsMap) {\n                    var pool = BaseObject._poolsMap[classType];\n                    if (pool.length > maxCount) {\n                        pool.length = maxCount;\n                    }\n                    if (classType in BaseObject._maxCountMap) {\n                        BaseObject._maxCountMap[classType] = maxCount;\n                    }\n                }\n            }\n        };\n        /**\n         * - Clear the cached instances of a specify object pool.\n         * @param objectConstructor - Specify class. (Clear all cached instances if not set)\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 清除特定对象池的缓存实例。\n         * @param objectConstructor - 特定的类。 (不设置则清除所有缓存的实例)\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseObject.clearPool = function (objectConstructor) {\n            if (objectConstructor === void 0) { objectConstructor = null; }\n            if (objectConstructor !== null) {\n                var classType = String(objectConstructor);\n                var pool = classType in BaseObject._poolsMap ? BaseObject._poolsMap[classType] : null;\n                if (pool !== null && pool.length > 0) {\n                    pool.length = 0;\n                }\n            }\n            else {\n                for (var k in BaseObject._poolsMap) {\n                    var pool = BaseObject._poolsMap[k];\n                    pool.length = 0;\n                }\n            }\n        };\n        /**\n         * - Get an instance of the specify class from object pool.\n         * @param objectConstructor - The specify class.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 从对象池中获取特定类的实例。\n         * @param objectConstructor - 特定的类。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseObject.borrowObject = function (objectConstructor) {\n            var classType = String(objectConstructor);\n            var pool = classType in BaseObject._poolsMap ? BaseObject._poolsMap[classType] : null;\n            if (pool !== null && pool.length > 0) {\n                var object_1 = pool.pop();\n                object_1._isInPool = false;\n                return object_1;\n            }\n            var object = new objectConstructor();\n            object._onClear();\n            return object;\n        };\n        /**\n         * - Clear the object and return it back to object pool。\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 清除该实例的所有数据并将其返还对象池。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseObject.prototype.returnToPool = function () {\n            this._onClear();\n            BaseObject._returnObject(this);\n        };\n        BaseObject._hashCode = 0;\n        BaseObject._defaultMaxCount = 3000;\n        BaseObject._maxCountMap = {};\n        BaseObject._poolsMap = {};\n        return BaseObject;\n    }());\n    dragonBones.BaseObject = BaseObject;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - 2D Transform matrix.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 2D 转换矩阵。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Matrix = /** @class */ (function () {\n        /**\n         * @private\n         */\n        function Matrix(a, b, c, d, tx, ty) {\n            if (a === void 0) { a = 1.0; }\n            if (b === void 0) { b = 0.0; }\n            if (c === void 0) { c = 0.0; }\n            if (d === void 0) { d = 1.0; }\n            if (tx === void 0) { tx = 0.0; }\n            if (ty === void 0) { ty = 0.0; }\n            this.a = a;\n            this.b = b;\n            this.c = c;\n            this.d = d;\n            this.tx = tx;\n            this.ty = ty;\n        }\n        Matrix.prototype.toString = function () {\n            return \"[object dragonBones.Matrix] a:\" + this.a + \" b:\" + this.b + \" c:\" + this.c + \" d:\" + this.d + \" tx:\" + this.tx + \" ty:\" + this.ty;\n        };\n        /**\n         * @private\n         */\n        Matrix.prototype.copyFrom = function (value) {\n            this.a = value.a;\n            this.b = value.b;\n            this.c = value.c;\n            this.d = value.d;\n            this.tx = value.tx;\n            this.ty = value.ty;\n            return this;\n        };\n        /**\n         * @private\n         */\n        Matrix.prototype.copyFromArray = function (value, offset) {\n            if (offset === void 0) { offset = 0; }\n            this.a = value[offset];\n            this.b = value[offset + 1];\n            this.c = value[offset + 2];\n            this.d = value[offset + 3];\n            this.tx = value[offset + 4];\n            this.ty = value[offset + 5];\n            return this;\n        };\n        /**\n         * - Convert to unit matrix.\n         * The resulting matrix has the following properties: a=1, b=0, c=0, d=1, tx=0, ty=0.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 转换为单位矩阵。\n         * 该矩阵具有以下属性：a=1、b=0、c=0、d=1、tx=0、ty=0。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Matrix.prototype.identity = function () {\n            this.a = this.d = 1.0;\n            this.b = this.c = 0.0;\n            this.tx = this.ty = 0.0;\n            return this;\n        };\n        /**\n         * - Multiplies the current matrix with another matrix.\n         * @param value - The matrix that needs to be multiplied.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 将当前矩阵与另一个矩阵相乘。\n         * @param value - 需要相乘的矩阵。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Matrix.prototype.concat = function (value) {\n            var aA = this.a * value.a;\n            var bA = 0.0;\n            var cA = 0.0;\n            var dA = this.d * value.d;\n            var txA = this.tx * value.a + value.tx;\n            var tyA = this.ty * value.d + value.ty;\n            if (this.b !== 0.0 || this.c !== 0.0) {\n                aA += this.b * value.c;\n                bA += this.b * value.d;\n                cA += this.c * value.a;\n                dA += this.c * value.b;\n            }\n            if (value.b !== 0.0 || value.c !== 0.0) {\n                bA += this.a * value.b;\n                cA += this.d * value.c;\n                txA += this.ty * value.c;\n                tyA += this.tx * value.b;\n            }\n            this.a = aA;\n            this.b = bA;\n            this.c = cA;\n            this.d = dA;\n            this.tx = txA;\n            this.ty = tyA;\n            return this;\n        };\n        /**\n         * - Convert to inverse matrix.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 转换为逆矩阵。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Matrix.prototype.invert = function () {\n            var aA = this.a;\n            var bA = this.b;\n            var cA = this.c;\n            var dA = this.d;\n            var txA = this.tx;\n            var tyA = this.ty;\n            if (bA === 0.0 && cA === 0.0) {\n                this.b = this.c = 0.0;\n                if (aA === 0.0 || dA === 0.0) {\n                    this.a = this.b = this.tx = this.ty = 0.0;\n                }\n                else {\n                    aA = this.a = 1.0 / aA;\n                    dA = this.d = 1.0 / dA;\n                    this.tx = -aA * txA;\n                    this.ty = -dA * tyA;\n                }\n                return this;\n            }\n            var determinant = aA * dA - bA * cA;\n            if (determinant === 0.0) {\n                this.a = this.d = 1.0;\n                this.b = this.c = 0.0;\n                this.tx = this.ty = 0.0;\n                return this;\n            }\n            determinant = 1.0 / determinant;\n            var k = this.a = dA * determinant;\n            bA = this.b = -bA * determinant;\n            cA = this.c = -cA * determinant;\n            dA = this.d = aA * determinant;\n            this.tx = -(k * txA + cA * tyA);\n            this.ty = -(bA * txA + dA * tyA);\n            return this;\n        };\n        /**\n         * - Apply a matrix transformation to a specific point.\n         * @param x - X coordinate.\n         * @param y - Y coordinate.\n         * @param result - The point after the transformation is applied.\n         * @param delta - Whether to ignore tx, ty's conversion to point.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 将矩阵转换应用于特定点。\n         * @param x - 横坐标。\n         * @param y - 纵坐标。\n         * @param result - 应用转换之后的点。\n         * @param delta - 是否忽略 tx，ty 对点的转换。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Matrix.prototype.transformPoint = function (x, y, result, delta) {\n            if (delta === void 0) { delta = false; }\n            result.x = this.a * x + this.c * y;\n            result.y = this.b * x + this.d * y;\n            if (!delta) {\n                result.x += this.tx;\n                result.y += this.ty;\n            }\n        };\n        /**\n         * @private\n         */\n        Matrix.prototype.transformRectangle = function (rectangle, delta) {\n            if (delta === void 0) { delta = false; }\n            var a = this.a;\n            var b = this.b;\n            var c = this.c;\n            var d = this.d;\n            var tx = delta ? 0.0 : this.tx;\n            var ty = delta ? 0.0 : this.ty;\n            var x = rectangle.x;\n            var y = rectangle.y;\n            var xMax = x + rectangle.width;\n            var yMax = y + rectangle.height;\n            var x0 = a * x + c * y + tx;\n            var y0 = b * x + d * y + ty;\n            var x1 = a * xMax + c * y + tx;\n            var y1 = b * xMax + d * y + ty;\n            var x2 = a * xMax + c * yMax + tx;\n            var y2 = b * xMax + d * yMax + ty;\n            var x3 = a * x + c * yMax + tx;\n            var y3 = b * x + d * yMax + ty;\n            var tmp = 0.0;\n            if (x0 > x1) {\n                tmp = x0;\n                x0 = x1;\n                x1 = tmp;\n            }\n            if (x2 > x3) {\n                tmp = x2;\n                x2 = x3;\n                x3 = tmp;\n            }\n            rectangle.x = Math.floor(x0 < x2 ? x0 : x2);\n            rectangle.width = Math.ceil((x1 > x3 ? x1 : x3) - rectangle.x);\n            if (y0 > y1) {\n                tmp = y0;\n                y0 = y1;\n                y1 = tmp;\n            }\n            if (y2 > y3) {\n                tmp = y2;\n                y2 = y3;\n                y3 = tmp;\n            }\n            rectangle.y = Math.floor(y0 < y2 ? y0 : y2);\n            rectangle.height = Math.ceil((y1 > y3 ? y1 : y3) - rectangle.y);\n        };\n        return Matrix;\n    }());\n    dragonBones.Matrix = Matrix;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - 2D Transform.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 2D 变换。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Transform = /** @class */ (function () {\n        /**\n         * @private\n         */\n        function Transform(x, y, skew, rotation, scaleX, scaleY) {\n            if (x === void 0) { x = 0.0; }\n            if (y === void 0) { y = 0.0; }\n            if (skew === void 0) { skew = 0.0; }\n            if (rotation === void 0) { rotation = 0.0; }\n            if (scaleX === void 0) { scaleX = 1.0; }\n            if (scaleY === void 0) { scaleY = 1.0; }\n            this.x = x;\n            this.y = y;\n            this.skew = skew;\n            this.rotation = rotation;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n        /**\n         * @private\n         */\n        Transform.normalizeRadian = function (value) {\n            value = (value + Math.PI) % (Math.PI * 2.0);\n            value += value > 0.0 ? -Math.PI : Math.PI;\n            return value;\n        };\n        Transform.prototype.toString = function () {\n            return \"[object dragonBones.Transform] x:\" + this.x + \" y:\" + this.y + \" skewX:\" + this.skew * 180.0 / Math.PI + \" skewY:\" + this.rotation * 180.0 / Math.PI + \" scaleX:\" + this.scaleX + \" scaleY:\" + this.scaleY;\n        };\n        /**\n         * @private\n         */\n        Transform.prototype.copyFrom = function (value) {\n            this.x = value.x;\n            this.y = value.y;\n            this.skew = value.skew;\n            this.rotation = value.rotation;\n            this.scaleX = value.scaleX;\n            this.scaleY = value.scaleY;\n            return this;\n        };\n        /**\n         * @private\n         */\n        Transform.prototype.identity = function () {\n            this.x = this.y = 0.0;\n            this.skew = this.rotation = 0.0;\n            this.scaleX = this.scaleY = 1.0;\n            return this;\n        };\n        /**\n         * @private\n         */\n        Transform.prototype.add = function (value) {\n            this.x += value.x;\n            this.y += value.y;\n            this.skew += value.skew;\n            this.rotation += value.rotation;\n            this.scaleX *= value.scaleX;\n            this.scaleY *= value.scaleY;\n            return this;\n        };\n        /**\n         * @private\n         */\n        Transform.prototype.minus = function (value) {\n            this.x -= value.x;\n            this.y -= value.y;\n            this.skew -= value.skew;\n            this.rotation -= value.rotation;\n            this.scaleX /= value.scaleX;\n            this.scaleY /= value.scaleY;\n            return this;\n        };\n        /**\n         * @private\n         */\n        Transform.prototype.fromMatrix = function (matrix) {\n            var backupScaleX = this.scaleX, backupScaleY = this.scaleY;\n            var PI_Q = Transform.PI_Q;\n            this.x = matrix.tx;\n            this.y = matrix.ty;\n            this.rotation = Math.atan(matrix.b / matrix.a);\n            var skewX = Math.atan(-matrix.c / matrix.d);\n            this.scaleX = (this.rotation > -PI_Q && this.rotation < PI_Q) ? matrix.a / Math.cos(this.rotation) : matrix.b / Math.sin(this.rotation);\n            this.scaleY = (skewX > -PI_Q && skewX < PI_Q) ? matrix.d / Math.cos(skewX) : -matrix.c / Math.sin(skewX);\n            if (backupScaleX >= 0.0 && this.scaleX < 0.0) {\n                this.scaleX = -this.scaleX;\n                this.rotation = this.rotation - Math.PI;\n            }\n            if (backupScaleY >= 0.0 && this.scaleY < 0.0) {\n                this.scaleY = -this.scaleY;\n                skewX = skewX - Math.PI;\n            }\n            this.skew = skewX - this.rotation;\n            return this;\n        };\n        /**\n         * @private\n         */\n        Transform.prototype.toMatrix = function (matrix) {\n            if (this.rotation === 0.0) {\n                matrix.a = 1.0;\n                matrix.b = 0.0;\n            }\n            else {\n                matrix.a = Math.cos(this.rotation);\n                matrix.b = Math.sin(this.rotation);\n            }\n            if (this.skew === 0.0) {\n                matrix.c = -matrix.b;\n                matrix.d = matrix.a;\n            }\n            else {\n                matrix.c = -Math.sin(this.skew + this.rotation);\n                matrix.d = Math.cos(this.skew + this.rotation);\n            }\n            if (this.scaleX !== 1.0) {\n                matrix.a *= this.scaleX;\n                matrix.b *= this.scaleX;\n            }\n            if (this.scaleY !== 1.0) {\n                matrix.c *= this.scaleY;\n                matrix.d *= this.scaleY;\n            }\n            matrix.tx = this.x;\n            matrix.ty = this.y;\n            return this;\n        };\n        /**\n         * @private\n         */\n        Transform.PI = Math.PI;\n        /**\n         * @private\n         */\n        Transform.PI_D = Math.PI * 2.0;\n        /**\n         * @private\n         */\n        Transform.PI_H = Math.PI / 2.0;\n        /**\n         * @private\n         */\n        Transform.PI_Q = Math.PI / 4.0;\n        /**\n         * @private\n         */\n        Transform.RAD_DEG = 180.0 / Math.PI;\n        /**\n         * @private\n         */\n        Transform.DEG_RAD = Math.PI / 180.0;\n        return Transform;\n    }());\n    dragonBones.Transform = Transform;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var ColorTransform = /** @class */ (function () {\n        function ColorTransform(alphaMultiplier, redMultiplier, greenMultiplier, blueMultiplier, alphaOffset, redOffset, greenOffset, blueOffset) {\n            if (alphaMultiplier === void 0) { alphaMultiplier = 1.0; }\n            if (redMultiplier === void 0) { redMultiplier = 1.0; }\n            if (greenMultiplier === void 0) { greenMultiplier = 1.0; }\n            if (blueMultiplier === void 0) { blueMultiplier = 1.0; }\n            if (alphaOffset === void 0) { alphaOffset = 0; }\n            if (redOffset === void 0) { redOffset = 0; }\n            if (greenOffset === void 0) { greenOffset = 0; }\n            if (blueOffset === void 0) { blueOffset = 0; }\n            this.alphaMultiplier = alphaMultiplier;\n            this.redMultiplier = redMultiplier;\n            this.greenMultiplier = greenMultiplier;\n            this.blueMultiplier = blueMultiplier;\n            this.alphaOffset = alphaOffset;\n            this.redOffset = redOffset;\n            this.greenOffset = greenOffset;\n            this.blueOffset = blueOffset;\n        }\n        ColorTransform.prototype.copyFrom = function (value) {\n            this.alphaMultiplier = value.alphaMultiplier;\n            this.redMultiplier = value.redMultiplier;\n            this.greenMultiplier = value.greenMultiplier;\n            this.blueMultiplier = value.blueMultiplier;\n            this.alphaOffset = value.alphaOffset;\n            this.redOffset = value.redOffset;\n            this.greenOffset = value.greenOffset;\n            this.blueOffset = value.blueOffset;\n        };\n        ColorTransform.prototype.identity = function () {\n            this.alphaMultiplier = this.redMultiplier = this.greenMultiplier = this.blueMultiplier = 1.0;\n            this.alphaOffset = this.redOffset = this.greenOffset = this.blueOffset = 0;\n        };\n        return ColorTransform;\n    }());\n    dragonBones.ColorTransform = ColorTransform;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The Point object represents a location in a two-dimensional coordinate system.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - Point 对象表示二维坐标系统中的某个位置。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Point = /** @class */ (function () {\n        /**\n         * - Creates a new point. If you pass no parameters to this method, a point is created at (0,0).\n         * @param x - The horizontal coordinate.\n         * @param y - The vertical coordinate.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 创建一个 egret.Point 对象.若不传入任何参数，将会创建一个位于（0，0）位置的点。\n         * @param x - 该对象的x属性值，默认为 0.0。\n         * @param y - 该对象的y属性值，默认为 0.0。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        function Point(x, y) {\n            if (x === void 0) { x = 0.0; }\n            if (y === void 0) { y = 0.0; }\n            this.x = x;\n            this.y = y;\n        }\n        /**\n         * @private\n         */\n        Point.prototype.copyFrom = function (value) {\n            this.x = value.x;\n            this.y = value.y;\n        };\n        /**\n         * @private\n         */\n        Point.prototype.clear = function () {\n            this.x = this.y = 0.0;\n        };\n        return Point;\n    }());\n    dragonBones.Point = Point;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - A Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its\n     * width and its height.<br/>\n     * The x, y, width, and height properties of the Rectangle class are independent of each other; changing the value of\n     * one property has no effect on the others. However, the right and bottom properties are integrally related to those\n     * four properties. For example, if you change the value of the right property, the value of the width property changes;\n     * if you change the bottom property, the value of the height property changes.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - Rectangle 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。<br/>\n     * Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。\n     * 但是，right 和 bottom 属性与这四个属性是整体相关的。例如，如果更改 right 属性的值，则 width\n     * 属性的值将发生变化；如果更改 bottom 属性，则 height 属性的值将发生变化。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Rectangle = /** @class */ (function () {\n        /**\n         * @private\n         */\n        function Rectangle(x, y, width, height) {\n            if (x === void 0) { x = 0.0; }\n            if (y === void 0) { y = 0.0; }\n            if (width === void 0) { width = 0.0; }\n            if (height === void 0) { height = 0.0; }\n            this.x = x;\n            this.y = y;\n            this.width = width;\n            this.height = height;\n        }\n        /**\n         * @private\n         */\n        Rectangle.prototype.copyFrom = function (value) {\n            this.x = value.x;\n            this.y = value.y;\n            this.width = value.width;\n            this.height = value.height;\n        };\n        /**\n         * @private\n         */\n        Rectangle.prototype.clear = function () {\n            this.x = this.y = 0.0;\n            this.width = this.height = 0.0;\n        };\n        return Rectangle;\n    }());\n    dragonBones.Rectangle = Rectangle;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The user custom data.\n     * @version DragonBones 5.0\n     * @language en_US\n     */\n    /**\n     * - 用户自定义数据。\n     * @version DragonBones 5.0\n     * @language zh_CN\n     */\n    var UserData = /** @class */ (function (_super) {\n        __extends(UserData, _super);\n        function UserData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * - The custom int numbers.\n             * @version DragonBones 5.0\n             * @language en_US\n             */\n            /**\n             * - 自定义整数。\n             * @version DragonBones 5.0\n             * @language zh_CN\n             */\n            _this.ints = [];\n            /**\n             * - The custom float numbers.\n             * @version DragonBones 5.0\n             * @language en_US\n             */\n            /**\n             * - 自定义浮点数。\n             * @version DragonBones 5.0\n             * @language zh_CN\n             */\n            _this.floats = [];\n            /**\n             * - The custom strings.\n             * @version DragonBones 5.0\n             * @language en_US\n             */\n            /**\n             * - 自定义字符串。\n             * @version DragonBones 5.0\n             * @language zh_CN\n             */\n            _this.strings = [];\n            return _this;\n        }\n        UserData.toString = function () {\n            return \"[class dragonBones.UserData]\";\n        };\n        UserData.prototype._onClear = function () {\n            this.ints.length = 0;\n            this.floats.length = 0;\n            this.strings.length = 0;\n        };\n        /**\n         * @internal\n         */\n        UserData.prototype.addInt = function (value) {\n            this.ints.push(value);\n        };\n        /**\n         * @internal\n         */\n        UserData.prototype.addFloat = function (value) {\n            this.floats.push(value);\n        };\n        /**\n         * @internal\n         */\n        UserData.prototype.addString = function (value) {\n            this.strings.push(value);\n        };\n        /**\n         * - Get the custom int number.\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 获取自定义整数。\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        UserData.prototype.getInt = function (index) {\n            if (index === void 0) { index = 0; }\n            return index >= 0 && index < this.ints.length ? this.ints[index] : 0;\n        };\n        /**\n         * - Get the custom float number.\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 获取自定义浮点数。\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        UserData.prototype.getFloat = function (index) {\n            if (index === void 0) { index = 0; }\n            return index >= 0 && index < this.floats.length ? this.floats[index] : 0.0;\n        };\n        /**\n         * - Get the custom string.\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 获取自定义字符串。\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        UserData.prototype.getString = function (index) {\n            if (index === void 0) { index = 0; }\n            return index >= 0 && index < this.strings.length ? this.strings[index] : \"\";\n        };\n        return UserData;\n    }(dragonBones.BaseObject));\n    dragonBones.UserData = UserData;\n    /**\n     * @internal\n     */\n    var ActionData = /** @class */ (function (_super) {\n        __extends(ActionData, _super);\n        function ActionData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.data = null; //\n            return _this;\n        }\n        ActionData.toString = function () {\n            return \"[class dragonBones.ActionData]\";\n        };\n        ActionData.prototype._onClear = function () {\n            if (this.data !== null) {\n                this.data.returnToPool();\n            }\n            this.type = 0 /* Play */;\n            this.name = \"\";\n            this.bone = null;\n            this.slot = null;\n            this.data = null;\n        };\n        return ActionData;\n    }(dragonBones.BaseObject));\n    dragonBones.ActionData = ActionData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The DragonBones data.\n     * A DragonBones data contains multiple armature data.\n     * @see dragonBones.ArmatureData\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 龙骨数据。\n     * 一个龙骨数据包含多个骨架数据。\n     * @see dragonBones.ArmatureData\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var DragonBonesData = /** @class */ (function (_super) {\n        __extends(DragonBonesData, _super);\n        function DragonBonesData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @internal\n             */\n            _this.frameIndices = [];\n            /**\n             * @internal\n             */\n            _this.cachedFrames = [];\n            /**\n             * - All armature data names.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 所有的骨架数据名称。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            _this.armatureNames = [];\n            /**\n             * @private\n             */\n            _this.armatures = {};\n            /**\n             * @private\n             */\n            _this.userData = null; // Initial value.\n            return _this;\n        }\n        DragonBonesData.toString = function () {\n            return \"[class dragonBones.DragonBonesData]\";\n        };\n        DragonBonesData.prototype._onClear = function () {\n            for (var k in this.armatures) {\n                this.armatures[k].returnToPool();\n                delete this.armatures[k];\n            }\n            if (this.userData !== null) {\n                this.userData.returnToPool();\n            }\n            this.autoSearch = false;\n            this.frameRate = 0;\n            this.version = \"\";\n            this.name = \"\";\n            this.stage = null;\n            this.frameIndices.length = 0;\n            this.cachedFrames.length = 0;\n            this.armatureNames.length = 0;\n            //this.armatures.clear();\n            this.binary = null; //\n            this.intArray = null; //\n            this.floatArray = null; //\n            this.frameIntArray = null; //\n            this.frameFloatArray = null; //\n            this.frameArray = null; //\n            this.timelineArray = null; //\n            this.userData = null;\n        };\n        /**\n         * @internal\n         */\n        DragonBonesData.prototype.addArmature = function (value) {\n            if (value.name in this.armatures) {\n                console.warn(\"Same armature: \" + value.name);\n                return;\n            }\n            value.parent = this;\n            this.armatures[value.name] = value;\n            this.armatureNames.push(value.name);\n        };\n        /**\n         * - Get a specific armature data.\n         * @param armatureName - The armature data name.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的骨架数据。\n         * @param armatureName - 骨架数据名称。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        DragonBonesData.prototype.getArmature = function (armatureName) {\n            return armatureName in this.armatures ? this.armatures[armatureName] : null;\n        };\n        /**\n         * - Deprecated, please refer to {@link #dragonBones.BaseFactory#removeDragonBonesData()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #dragonBones.BaseFactory#removeDragonBonesData()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        DragonBonesData.prototype.dispose = function () {\n            console.warn(\"已废弃\");\n            this.returnToPool();\n        };\n        return DragonBonesData;\n    }(dragonBones.BaseObject));\n    dragonBones.DragonBonesData = DragonBonesData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The armature data.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 骨架数据。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var ArmatureData = /** @class */ (function (_super) {\n        __extends(ArmatureData, _super);\n        function ArmatureData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @private\n             */\n            _this.aabb = new dragonBones.Rectangle();\n            /**\n             * - The names of all the animation data.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 所有的动画数据名称。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            _this.animationNames = [];\n            /**\n             * @private\n             */\n            _this.sortedBones = [];\n            /**\n             * @private\n             */\n            _this.sortedSlots = [];\n            /**\n             * @private\n             */\n            _this.defaultActions = [];\n            /**\n             * @private\n             */\n            _this.actions = [];\n            /**\n             * @private\n             */\n            _this.bones = {};\n            /**\n             * @private\n             */\n            _this.slots = {};\n            /**\n             * @private\n             */\n            _this.constraints = {};\n            /**\n             * @private\n             */\n            _this.skins = {};\n            /**\n             * @private\n             */\n            _this.animations = {};\n            /**\n             * @private\n             */\n            _this.canvas = null; // Initial value.\n            /**\n             * @private\n             */\n            _this.userData = null; // Initial value.\n            return _this;\n        }\n        ArmatureData.toString = function () {\n            return \"[class dragonBones.ArmatureData]\";\n        };\n        ArmatureData.prototype._onClear = function () {\n            for (var _i = 0, _a = this.defaultActions; _i < _a.length; _i++) {\n                var action = _a[_i];\n                action.returnToPool();\n            }\n            for (var _b = 0, _c = this.actions; _b < _c.length; _b++) {\n                var action = _c[_b];\n                action.returnToPool();\n            }\n            for (var k in this.bones) {\n                this.bones[k].returnToPool();\n                delete this.bones[k];\n            }\n            for (var k in this.slots) {\n                this.slots[k].returnToPool();\n                delete this.slots[k];\n            }\n            for (var k in this.constraints) {\n                this.constraints[k].returnToPool();\n                delete this.constraints[k];\n            }\n            for (var k in this.skins) {\n                this.skins[k].returnToPool();\n                delete this.skins[k];\n            }\n            for (var k in this.animations) {\n                this.animations[k].returnToPool();\n                delete this.animations[k];\n            }\n            if (this.canvas !== null) {\n                this.canvas.returnToPool();\n            }\n            if (this.userData !== null) {\n                this.userData.returnToPool();\n            }\n            this.type = 0 /* Armature */;\n            this.frameRate = 0;\n            this.cacheFrameRate = 0;\n            this.scale = 1.0;\n            this.name = \"\";\n            this.aabb.clear();\n            this.animationNames.length = 0;\n            this.sortedBones.length = 0;\n            this.sortedSlots.length = 0;\n            this.defaultActions.length = 0;\n            this.actions.length = 0;\n            // this.bones.clear();\n            // this.slots.clear();\n            // this.constraints.clear();\n            // this.skins.clear();\n            // this.animations.clear();\n            this.defaultSkin = null;\n            this.defaultAnimation = null;\n            this.canvas = null;\n            this.userData = null;\n            this.parent = null; //\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.sortBones = function () {\n            var total = this.sortedBones.length;\n            if (total <= 0) {\n                return;\n            }\n            var sortHelper = this.sortedBones.concat();\n            var index = 0;\n            var count = 0;\n            this.sortedBones.length = 0;\n            while (count < total) {\n                var bone = sortHelper[index++];\n                if (index >= total) {\n                    index = 0;\n                }\n                if (this.sortedBones.indexOf(bone) >= 0) {\n                    continue;\n                }\n                var flag = false;\n                for (var k in this.constraints) { // Wait constraint.\n                    var constraint = this.constraints[k];\n                    if (constraint.root === bone && this.sortedBones.indexOf(constraint.target) < 0) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (flag) {\n                    continue;\n                }\n                if (bone.parent !== null && this.sortedBones.indexOf(bone.parent) < 0) { // Wait parent.\n                    continue;\n                }\n                this.sortedBones.push(bone);\n                count++;\n            }\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.cacheFrames = function (frameRate) {\n            if (this.cacheFrameRate > 0) { // TODO clear cache.\n                return;\n            }\n            this.cacheFrameRate = frameRate;\n            for (var k in this.animations) {\n                this.animations[k].cacheFrames(this.cacheFrameRate);\n            }\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.setCacheFrame = function (globalTransformMatrix, transform) {\n            var dataArray = this.parent.cachedFrames;\n            var arrayOffset = dataArray.length;\n            dataArray.length += 10;\n            dataArray[arrayOffset] = globalTransformMatrix.a;\n            dataArray[arrayOffset + 1] = globalTransformMatrix.b;\n            dataArray[arrayOffset + 2] = globalTransformMatrix.c;\n            dataArray[arrayOffset + 3] = globalTransformMatrix.d;\n            dataArray[arrayOffset + 4] = globalTransformMatrix.tx;\n            dataArray[arrayOffset + 5] = globalTransformMatrix.ty;\n            dataArray[arrayOffset + 6] = transform.rotation;\n            dataArray[arrayOffset + 7] = transform.skew;\n            dataArray[arrayOffset + 8] = transform.scaleX;\n            dataArray[arrayOffset + 9] = transform.scaleY;\n            return arrayOffset;\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.getCacheFrame = function (globalTransformMatrix, transform, arrayOffset) {\n            var dataArray = this.parent.cachedFrames;\n            globalTransformMatrix.a = dataArray[arrayOffset];\n            globalTransformMatrix.b = dataArray[arrayOffset + 1];\n            globalTransformMatrix.c = dataArray[arrayOffset + 2];\n            globalTransformMatrix.d = dataArray[arrayOffset + 3];\n            globalTransformMatrix.tx = dataArray[arrayOffset + 4];\n            globalTransformMatrix.ty = dataArray[arrayOffset + 5];\n            transform.rotation = dataArray[arrayOffset + 6];\n            transform.skew = dataArray[arrayOffset + 7];\n            transform.scaleX = dataArray[arrayOffset + 8];\n            transform.scaleY = dataArray[arrayOffset + 9];\n            transform.x = globalTransformMatrix.tx;\n            transform.y = globalTransformMatrix.ty;\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.addBone = function (value) {\n            if (value.name in this.bones) {\n                console.warn(\"Same bone: \" + value.name);\n                return;\n            }\n            this.bones[value.name] = value;\n            this.sortedBones.push(value);\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.addSlot = function (value) {\n            if (value.name in this.slots) {\n                console.warn(\"Same slot: \" + value.name);\n                return;\n            }\n            this.slots[value.name] = value;\n            this.sortedSlots.push(value);\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.addConstraint = function (value) {\n            if (value.name in this.constraints) {\n                console.warn(\"Same constraint: \" + value.name);\n                return;\n            }\n            this.constraints[value.name] = value;\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.addSkin = function (value) {\n            if (value.name in this.skins) {\n                console.warn(\"Same skin: \" + value.name);\n                return;\n            }\n            value.parent = this;\n            this.skins[value.name] = value;\n            if (this.defaultSkin === null) {\n                this.defaultSkin = value;\n            }\n            if (value.name === \"default\") {\n                this.defaultSkin = value;\n            }\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.addAnimation = function (value) {\n            if (value.name in this.animations) {\n                console.warn(\"Same animation: \" + value.name);\n                return;\n            }\n            value.parent = this;\n            this.animations[value.name] = value;\n            this.animationNames.push(value.name);\n            if (this.defaultAnimation === null) {\n                this.defaultAnimation = value;\n            }\n        };\n        /**\n         * @internal\n         */\n        ArmatureData.prototype.addAction = function (value, isDefault) {\n            if (isDefault) {\n                this.defaultActions.push(value);\n            }\n            else {\n                this.actions.push(value);\n            }\n        };\n        /**\n         * - Get a specific done data.\n         * @param boneName - The bone name.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的骨骼数据。\n         * @param boneName - 骨骼名称。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        ArmatureData.prototype.getBone = function (boneName) {\n            return boneName in this.bones ? this.bones[boneName] : null;\n        };\n        /**\n         * - Get a specific slot data.\n         * @param slotName - The slot name.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的插槽数据。\n         * @param slotName - 插槽名称。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        ArmatureData.prototype.getSlot = function (slotName) {\n            return slotName in this.slots ? this.slots[slotName] : null;\n        };\n        /**\n         * @private\n         */\n        ArmatureData.prototype.getConstraint = function (constraintName) {\n            return constraintName in this.constraints ? this.constraints[constraintName] : null;\n        };\n        /**\n         * - Get a specific skin data.\n         * @param skinName - The skin name.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定皮肤数据。\n         * @param skinName - 皮肤名称。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        ArmatureData.prototype.getSkin = function (skinName) {\n            return skinName in this.skins ? this.skins[skinName] : null;\n        };\n        /**\n         * @private\n         */\n        ArmatureData.prototype.getMesh = function (skinName, slotName, meshName) {\n            var skin = this.getSkin(skinName);\n            if (skin === null) {\n                return null;\n            }\n            return skin.getDisplay(slotName, meshName);\n        };\n        /**\n         * - Get a specific animation data.\n         * @param animationName - The animation animationName.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的动画数据。\n         * @param animationName - 动画名称。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        ArmatureData.prototype.getAnimation = function (animationName) {\n            return animationName in this.animations ? this.animations[animationName] : null;\n        };\n        return ArmatureData;\n    }(dragonBones.BaseObject));\n    dragonBones.ArmatureData = ArmatureData;\n    /**\n     * - The bone data.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 骨骼数据。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var BoneData = /** @class */ (function (_super) {\n        __extends(BoneData, _super);\n        function BoneData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @private\n             */\n            _this.transform = new dragonBones.Transform();\n            /**\n             * @private\n             */\n            _this.userData = null; // Initial value.\n            return _this;\n        }\n        BoneData.toString = function () {\n            return \"[class dragonBones.BoneData]\";\n        };\n        BoneData.prototype._onClear = function () {\n            if (this.userData !== null) {\n                this.userData.returnToPool();\n            }\n            this.inheritTranslation = false;\n            this.inheritRotation = false;\n            this.inheritScale = false;\n            this.inheritReflection = false;\n            this.type = 0 /* Bone */;\n            this.length = 0.0;\n            this.name = \"\";\n            this.transform.identity();\n            this.userData = null;\n            this.parent = null;\n        };\n        return BoneData;\n    }(dragonBones.BaseObject));\n    dragonBones.BoneData = BoneData;\n    /**\n     * @internal\n     */\n    var SurfaceData = /** @class */ (function (_super) {\n        __extends(SurfaceData, _super);\n        function SurfaceData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.vertices = [];\n            return _this;\n        }\n        SurfaceData.toString = function () {\n            return \"[class dragonBones.SurfaceData]\";\n        };\n        SurfaceData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.type = 1 /* Surface */;\n            this.segmentX = 0;\n            this.segmentY = 0;\n            this.vertices.length = 0;\n        };\n        return SurfaceData;\n    }(BoneData));\n    dragonBones.SurfaceData = SurfaceData;\n    /**\n     * - The slot data.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 插槽数据。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var SlotData = /** @class */ (function (_super) {\n        __extends(SlotData, _super);\n        function SlotData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @private\n             */\n            _this.color = null; // Initial value.\n            /**\n             * @private\n             */\n            _this.userData = null; // Initial value.\n            return _this;\n        }\n        /**\n         * @internal\n         */\n        SlotData.createColor = function () {\n            return new dragonBones.ColorTransform();\n        };\n        SlotData.toString = function () {\n            return \"[class dragonBones.SlotData]\";\n        };\n        SlotData.prototype._onClear = function () {\n            if (this.userData !== null) {\n                this.userData.returnToPool();\n            }\n            this.blendMode = 0 /* Normal */;\n            this.displayIndex = 0;\n            this.zOrder = 0;\n            this.name = \"\";\n            this.color = null; //\n            this.userData = null;\n            this.parent = null; //\n        };\n        /**\n         * @internal\n         */\n        SlotData.DEFAULT_COLOR = new dragonBones.ColorTransform();\n        return SlotData;\n    }(dragonBones.BaseObject));\n    dragonBones.SlotData = SlotData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var ConstraintData = /** @class */ (function (_super) {\n        __extends(ConstraintData, _super);\n        function ConstraintData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ConstraintData.prototype._onClear = function () {\n            this.order = 0;\n            this.name = \"\";\n            this.type = 0 /* IK */;\n            this.target = null; //\n            this.root = null; //\n            this.bone = null;\n        };\n        return ConstraintData;\n    }(dragonBones.BaseObject));\n    dragonBones.ConstraintData = ConstraintData;\n    /**\n     * @internal\n     */\n    var IKConstraintData = /** @class */ (function (_super) {\n        __extends(IKConstraintData, _super);\n        function IKConstraintData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        IKConstraintData.toString = function () {\n            return \"[class dragonBones.IKConstraintData]\";\n        };\n        IKConstraintData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.scaleEnabled = false;\n            this.bendPositive = false;\n            this.weight = 1.0;\n        };\n        return IKConstraintData;\n    }(ConstraintData));\n    dragonBones.IKConstraintData = IKConstraintData;\n    /**\n     * @internal\n     */\n    var PathConstraintData = /** @class */ (function (_super) {\n        __extends(PathConstraintData, _super);\n        function PathConstraintData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.bones = [];\n            return _this;\n        }\n        PathConstraintData.toString = function () {\n            return \"[class dragonBones.PathConstraintData]\";\n        };\n        PathConstraintData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.pathSlot = null;\n            this.pathDisplayData = null;\n            this.bones.length = 0;\n            this.positionMode = 0 /* Fixed */;\n            this.spacingMode = 1 /* Fixed */;\n            this.rotateMode = 1 /* Chain */;\n            this.position = 0.0;\n            this.spacing = 0.0;\n            this.rotateOffset = 0.0;\n            this.rotateMix = 0.0;\n            this.translateMix = 0.0;\n        };\n        PathConstraintData.prototype.AddBone = function (value) {\n            this.bones.push(value);\n        };\n        return PathConstraintData;\n    }(ConstraintData));\n    dragonBones.PathConstraintData = PathConstraintData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var CanvasData = /** @class */ (function (_super) {\n        __extends(CanvasData, _super);\n        function CanvasData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CanvasData.toString = function () {\n            return \"[class dragonBones.CanvasData]\";\n        };\n        CanvasData.prototype._onClear = function () {\n            this.hasBackground = false;\n            this.color = 0x000000;\n            this.x = 0;\n            this.y = 0;\n            this.width = 0;\n            this.height = 0;\n        };\n        return CanvasData;\n    }(dragonBones.BaseObject));\n    dragonBones.CanvasData = CanvasData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The skin data, typically a armature data instance contains at least one skinData.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 皮肤数据，通常一个骨架数据至少包含一个皮肤数据。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var SkinData = /** @class */ (function (_super) {\n        __extends(SkinData, _super);\n        function SkinData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @private\n             */\n            _this.displays = {};\n            return _this;\n        }\n        SkinData.toString = function () {\n            return \"[class dragonBones.SkinData]\";\n        };\n        SkinData.prototype._onClear = function () {\n            for (var k in this.displays) {\n                var slotDisplays = this.displays[k];\n                for (var _i = 0, slotDisplays_1 = slotDisplays; _i < slotDisplays_1.length; _i++) {\n                    var display = slotDisplays_1[_i];\n                    if (display !== null) {\n                        display.returnToPool();\n                    }\n                }\n                delete this.displays[k];\n            }\n            this.name = \"\";\n            // this.displays.clear();\n            this.parent = null; //\n        };\n        /**\n         * @internal\n         */\n        SkinData.prototype.addDisplay = function (slotName, value) {\n            if (!(slotName in this.displays)) {\n                this.displays[slotName] = [];\n            }\n            if (value !== null) {\n                value.parent = this;\n            }\n            var slotDisplays = this.displays[slotName]; // TODO clear prev\n            slotDisplays.push(value);\n        };\n        /**\n         * @private\n         */\n        SkinData.prototype.getDisplay = function (slotName, displayName) {\n            var slotDisplays = this.getDisplays(slotName);\n            if (slotDisplays !== null) {\n                for (var _i = 0, slotDisplays_2 = slotDisplays; _i < slotDisplays_2.length; _i++) {\n                    var display = slotDisplays_2[_i];\n                    if (display !== null && display.name === displayName) {\n                        return display;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * @private\n         */\n        SkinData.prototype.getDisplays = function (slotName) {\n            if (!(slotName in this.displays)) {\n                return null;\n            }\n            return this.displays[slotName];\n        };\n        return SkinData;\n    }(dragonBones.BaseObject));\n    dragonBones.SkinData = SkinData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var VerticesData = /** @class */ (function () {\n        function VerticesData() {\n            this.weight = null; // Initial value.\n        }\n        VerticesData.prototype.clear = function () {\n            if (!this.isShared && this.weight !== null) {\n                this.weight.returnToPool();\n            }\n            this.isShared = false;\n            this.inheritDeform = false;\n            this.offset = 0;\n            this.data = null;\n            this.weight = null;\n        };\n        VerticesData.prototype.shareFrom = function (value) {\n            this.isShared = true;\n            this.offset = value.offset;\n            this.weight = value.weight;\n        };\n        return VerticesData;\n    }());\n    dragonBones.VerticesData = VerticesData;\n    /**\n     * @internal\n     */\n    var DisplayData = /** @class */ (function (_super) {\n        __extends(DisplayData, _super);\n        function DisplayData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.transform = new dragonBones.Transform();\n            return _this;\n        }\n        DisplayData.prototype._onClear = function () {\n            this.name = \"\";\n            this.path = \"\";\n            this.transform.identity();\n            this.parent = null; //\n        };\n        return DisplayData;\n    }(dragonBones.BaseObject));\n    dragonBones.DisplayData = DisplayData;\n    /**\n     * @internal\n     */\n    var ImageDisplayData = /** @class */ (function (_super) {\n        __extends(ImageDisplayData, _super);\n        function ImageDisplayData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.pivot = new dragonBones.Point();\n            return _this;\n        }\n        ImageDisplayData.toString = function () {\n            return \"[class dragonBones.ImageDisplayData]\";\n        };\n        ImageDisplayData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.type = 0 /* Image */;\n            this.pivot.clear();\n            this.texture = null;\n        };\n        return ImageDisplayData;\n    }(DisplayData));\n    dragonBones.ImageDisplayData = ImageDisplayData;\n    /**\n     * @internal\n     */\n    var ArmatureDisplayData = /** @class */ (function (_super) {\n        __extends(ArmatureDisplayData, _super);\n        function ArmatureDisplayData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.actions = [];\n            return _this;\n        }\n        ArmatureDisplayData.toString = function () {\n            return \"[class dragonBones.ArmatureDisplayData]\";\n        };\n        ArmatureDisplayData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            for (var _i = 0, _a = this.actions; _i < _a.length; _i++) {\n                var action = _a[_i];\n                action.returnToPool();\n            }\n            this.type = 1 /* Armature */;\n            this.inheritAnimation = false;\n            this.actions.length = 0;\n            this.armature = null;\n        };\n        /**\n         * @private\n         */\n        ArmatureDisplayData.prototype.addAction = function (value) {\n            this.actions.push(value);\n        };\n        return ArmatureDisplayData;\n    }(DisplayData));\n    dragonBones.ArmatureDisplayData = ArmatureDisplayData;\n    /**\n     * @internal\n     */\n    var MeshDisplayData = /** @class */ (function (_super) {\n        __extends(MeshDisplayData, _super);\n        function MeshDisplayData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.vertices = new VerticesData();\n            return _this;\n        }\n        MeshDisplayData.toString = function () {\n            return \"[class dragonBones.MeshDisplayData]\";\n        };\n        MeshDisplayData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.type = 2 /* Mesh */;\n            this.vertices.clear();\n            this.texture = null;\n        };\n        return MeshDisplayData;\n    }(DisplayData));\n    dragonBones.MeshDisplayData = MeshDisplayData;\n    /**\n     * @internal\n     */\n    var BoundingBoxDisplayData = /** @class */ (function (_super) {\n        __extends(BoundingBoxDisplayData, _super);\n        function BoundingBoxDisplayData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.boundingBox = null; // Initial value.\n            return _this;\n        }\n        BoundingBoxDisplayData.toString = function () {\n            return \"[class dragonBones.BoundingBoxDisplayData]\";\n        };\n        BoundingBoxDisplayData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            if (this.boundingBox !== null) {\n                this.boundingBox.returnToPool();\n            }\n            this.type = 3 /* BoundingBox */;\n            this.boundingBox = null;\n        };\n        return BoundingBoxDisplayData;\n    }(DisplayData));\n    dragonBones.BoundingBoxDisplayData = BoundingBoxDisplayData;\n    /**\n     * @internal\n     */\n    var PathDisplayData = /** @class */ (function (_super) {\n        __extends(PathDisplayData, _super);\n        function PathDisplayData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.vertices = new VerticesData();\n            _this.curveLengths = [];\n            return _this;\n        }\n        PathDisplayData.toString = function () {\n            return \"[class dragonBones.PathDisplayData]\";\n        };\n        PathDisplayData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.type = 4 /* Path */;\n            this.closed = false;\n            this.constantSpeed = false;\n            this.vertices.clear();\n            this.curveLengths.length = 0;\n        };\n        return PathDisplayData;\n    }(DisplayData));\n    dragonBones.PathDisplayData = PathDisplayData;\n    /**\n     * @internal\n     */\n    var WeightData = /** @class */ (function (_super) {\n        __extends(WeightData, _super);\n        function WeightData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.bones = [];\n            return _this;\n        }\n        WeightData.toString = function () {\n            return \"[class dragonBones.WeightData]\";\n        };\n        WeightData.prototype._onClear = function () {\n            this.count = 0;\n            this.offset = 0;\n            this.bones.length = 0;\n        };\n        WeightData.prototype.addBone = function (value) {\n            this.bones.push(value);\n        };\n        return WeightData;\n    }(dragonBones.BaseObject));\n    dragonBones.WeightData = WeightData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The base class of bounding box data.\n     * @see dragonBones.RectangleData\n     * @see dragonBones.EllipseData\n     * @see dragonBones.PolygonData\n     * @version DragonBones 5.0\n     * @language en_US\n     */\n    /**\n     * - 边界框数据基类。\n     * @see dragonBones.RectangleData\n     * @see dragonBones.EllipseData\n     * @see dragonBones.PolygonData\n     * @version DragonBones 5.0\n     * @language zh_CN\n     */\n    var BoundingBoxData = /** @class */ (function (_super) {\n        __extends(BoundingBoxData, _super);\n        function BoundingBoxData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoundingBoxData.prototype._onClear = function () {\n            this.color = 0x000000;\n            this.width = 0.0;\n            this.height = 0.0;\n        };\n        return BoundingBoxData;\n    }(dragonBones.BaseObject));\n    dragonBones.BoundingBoxData = BoundingBoxData;\n    /**\n     * - The rectangle bounding box data.\n     * @version DragonBones 5.1\n     * @language en_US\n     */\n    /**\n     * - 矩形边界框数据。\n     * @version DragonBones 5.1\n     * @language zh_CN\n     */\n    var RectangleBoundingBoxData = /** @class */ (function (_super) {\n        __extends(RectangleBoundingBoxData, _super);\n        function RectangleBoundingBoxData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        RectangleBoundingBoxData.toString = function () {\n            return \"[class dragonBones.RectangleBoundingBoxData]\";\n        };\n        /**\n         * - Compute the bit code for a point (x, y) using the clip rectangle\n         */\n        RectangleBoundingBoxData._computeOutCode = function (x, y, xMin, yMin, xMax, yMax) {\n            var code = 0 /* InSide */; // initialised as being inside of [[clip window]]\n            if (x < xMin) { // to the left of clip window\n                code |= 1 /* Left */;\n            }\n            else if (x > xMax) { // to the right of clip window\n                code |= 2 /* Right */;\n            }\n            if (y < yMin) { // below the clip window\n                code |= 4 /* Top */;\n            }\n            else if (y > yMax) { // above the clip window\n                code |= 8 /* Bottom */;\n            }\n            return code;\n        };\n        /**\n         * @private\n         */\n        RectangleBoundingBoxData.rectangleIntersectsSegment = function (xA, yA, xB, yB, xMin, yMin, xMax, yMax, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            var inSideA = xA > xMin && xA < xMax && yA > yMin && yA < yMax;\n            var inSideB = xB > xMin && xB < xMax && yB > yMin && yB < yMax;\n            if (inSideA && inSideB) {\n                return -1;\n            }\n            var intersectionCount = 0;\n            var outcode0 = RectangleBoundingBoxData._computeOutCode(xA, yA, xMin, yMin, xMax, yMax);\n            var outcode1 = RectangleBoundingBoxData._computeOutCode(xB, yB, xMin, yMin, xMax, yMax);\n            while (true) {\n                if ((outcode0 | outcode1) === 0) { // Bitwise OR is 0. Trivially accept and get out of loop\n                    intersectionCount = 2;\n                    break;\n                }\n                else if ((outcode0 & outcode1) !== 0) { // Bitwise AND is not 0. Trivially reject and get out of loop\n                    break;\n                }\n                // failed both tests, so calculate the line segment to clip\n                // from an outside point to an intersection with clip edge\n                var x = 0.0;\n                var y = 0.0;\n                var normalRadian = 0.0;\n                // At least one endpoint is outside the clip rectangle; pick it.\n                var outcodeOut = outcode0 !== 0 ? outcode0 : outcode1;\n                // Now find the intersection point;\n                if ((outcodeOut & 4 /* Top */) !== 0) { // point is above the clip rectangle\n                    x = xA + (xB - xA) * (yMin - yA) / (yB - yA);\n                    y = yMin;\n                    if (normalRadians !== null) {\n                        normalRadian = -Math.PI * 0.5;\n                    }\n                }\n                else if ((outcodeOut & 8 /* Bottom */) !== 0) { // point is below the clip rectangle\n                    x = xA + (xB - xA) * (yMax - yA) / (yB - yA);\n                    y = yMax;\n                    if (normalRadians !== null) {\n                        normalRadian = Math.PI * 0.5;\n                    }\n                }\n                else if ((outcodeOut & 2 /* Right */) !== 0) { // point is to the right of clip rectangle\n                    y = yA + (yB - yA) * (xMax - xA) / (xB - xA);\n                    x = xMax;\n                    if (normalRadians !== null) {\n                        normalRadian = 0;\n                    }\n                }\n                else if ((outcodeOut & 1 /* Left */) !== 0) { // point is to the left of clip rectangle\n                    y = yA + (yB - yA) * (xMin - xA) / (xB - xA);\n                    x = xMin;\n                    if (normalRadians !== null) {\n                        normalRadian = Math.PI;\n                    }\n                }\n                // Now we move outside point to intersection point to clip\n                // and get ready for next pass.\n                if (outcodeOut === outcode0) {\n                    xA = x;\n                    yA = y;\n                    outcode0 = RectangleBoundingBoxData._computeOutCode(xA, yA, xMin, yMin, xMax, yMax);\n                    if (normalRadians !== null) {\n                        normalRadians.x = normalRadian;\n                    }\n                }\n                else {\n                    xB = x;\n                    yB = y;\n                    outcode1 = RectangleBoundingBoxData._computeOutCode(xB, yB, xMin, yMin, xMax, yMax);\n                    if (normalRadians !== null) {\n                        normalRadians.y = normalRadian;\n                    }\n                }\n            }\n            if (intersectionCount) {\n                if (inSideA) {\n                    intersectionCount = 2; // 10\n                    if (intersectionPointA !== null) {\n                        intersectionPointA.x = xB;\n                        intersectionPointA.y = yB;\n                    }\n                    if (intersectionPointB !== null) {\n                        intersectionPointB.x = xB;\n                        intersectionPointB.y = xB;\n                    }\n                    if (normalRadians !== null) {\n                        normalRadians.x = normalRadians.y + Math.PI;\n                    }\n                }\n                else if (inSideB) {\n                    intersectionCount = 1; // 01\n                    if (intersectionPointA !== null) {\n                        intersectionPointA.x = xA;\n                        intersectionPointA.y = yA;\n                    }\n                    if (intersectionPointB !== null) {\n                        intersectionPointB.x = xA;\n                        intersectionPointB.y = yA;\n                    }\n                    if (normalRadians !== null) {\n                        normalRadians.y = normalRadians.x + Math.PI;\n                    }\n                }\n                else {\n                    intersectionCount = 3; // 11\n                    if (intersectionPointA !== null) {\n                        intersectionPointA.x = xA;\n                        intersectionPointA.y = yA;\n                    }\n                    if (intersectionPointB !== null) {\n                        intersectionPointB.x = xB;\n                        intersectionPointB.y = yB;\n                    }\n                }\n            }\n            return intersectionCount;\n        };\n        RectangleBoundingBoxData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.type = 0 /* Rectangle */;\n        };\n        /**\n         * @inheritDoc\n         */\n        RectangleBoundingBoxData.prototype.containsPoint = function (pX, pY) {\n            var widthH = this.width * 0.5;\n            if (pX >= -widthH && pX <= widthH) {\n                var heightH = this.height * 0.5;\n                if (pY >= -heightH && pY <= heightH) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        /**\n         * @inheritDoc\n         */\n        RectangleBoundingBoxData.prototype.intersectsSegment = function (xA, yA, xB, yB, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            var widthH = this.width * 0.5;\n            var heightH = this.height * 0.5;\n            var intersectionCount = RectangleBoundingBoxData.rectangleIntersectsSegment(xA, yA, xB, yB, -widthH, -heightH, widthH, heightH, intersectionPointA, intersectionPointB, normalRadians);\n            return intersectionCount;\n        };\n        return RectangleBoundingBoxData;\n    }(BoundingBoxData));\n    dragonBones.RectangleBoundingBoxData = RectangleBoundingBoxData;\n    /**\n     * - The ellipse bounding box data.\n     * @version DragonBones 5.1\n     * @language en_US\n     */\n    /**\n     * - 椭圆边界框数据。\n     * @version DragonBones 5.1\n     * @language zh_CN\n     */\n    var EllipseBoundingBoxData = /** @class */ (function (_super) {\n        __extends(EllipseBoundingBoxData, _super);\n        function EllipseBoundingBoxData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        EllipseBoundingBoxData.toString = function () {\n            return \"[class dragonBones.EllipseData]\";\n        };\n        /**\n         * @private\n         */\n        EllipseBoundingBoxData.ellipseIntersectsSegment = function (xA, yA, xB, yB, xC, yC, widthH, heightH, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            var d = widthH / heightH;\n            var dd = d * d;\n            yA *= d;\n            yB *= d;\n            var dX = xB - xA;\n            var dY = yB - yA;\n            var lAB = Math.sqrt(dX * dX + dY * dY);\n            var xD = dX / lAB;\n            var yD = dY / lAB;\n            var a = (xC - xA) * xD + (yC - yA) * yD;\n            var aa = a * a;\n            var ee = xA * xA + yA * yA;\n            var rr = widthH * widthH;\n            var dR = rr - ee + aa;\n            var intersectionCount = 0;\n            if (dR >= 0.0) {\n                var dT = Math.sqrt(dR);\n                var sA = a - dT;\n                var sB = a + dT;\n                var inSideA = sA < 0.0 ? -1 : (sA <= lAB ? 0 : 1);\n                var inSideB = sB < 0.0 ? -1 : (sB <= lAB ? 0 : 1);\n                var sideAB = inSideA * inSideB;\n                if (sideAB < 0) {\n                    return -1;\n                }\n                else if (sideAB === 0) {\n                    if (inSideA === -1) {\n                        intersectionCount = 2; // 10\n                        xB = xA + sB * xD;\n                        yB = (yA + sB * yD) / d;\n                        if (intersectionPointA !== null) {\n                            intersectionPointA.x = xB;\n                            intersectionPointA.y = yB;\n                        }\n                        if (intersectionPointB !== null) {\n                            intersectionPointB.x = xB;\n                            intersectionPointB.y = yB;\n                        }\n                        if (normalRadians !== null) {\n                            normalRadians.x = Math.atan2(yB / rr * dd, xB / rr);\n                            normalRadians.y = normalRadians.x + Math.PI;\n                        }\n                    }\n                    else if (inSideB === 1) {\n                        intersectionCount = 1; // 01\n                        xA = xA + sA * xD;\n                        yA = (yA + sA * yD) / d;\n                        if (intersectionPointA !== null) {\n                            intersectionPointA.x = xA;\n                            intersectionPointA.y = yA;\n                        }\n                        if (intersectionPointB !== null) {\n                            intersectionPointB.x = xA;\n                            intersectionPointB.y = yA;\n                        }\n                        if (normalRadians !== null) {\n                            normalRadians.x = Math.atan2(yA / rr * dd, xA / rr);\n                            normalRadians.y = normalRadians.x + Math.PI;\n                        }\n                    }\n                    else {\n                        intersectionCount = 3; // 11\n                        if (intersectionPointA !== null) {\n                            intersectionPointA.x = xA + sA * xD;\n                            intersectionPointA.y = (yA + sA * yD) / d;\n                            if (normalRadians !== null) {\n                                normalRadians.x = Math.atan2(intersectionPointA.y / rr * dd, intersectionPointA.x / rr);\n                            }\n                        }\n                        if (intersectionPointB !== null) {\n                            intersectionPointB.x = xA + sB * xD;\n                            intersectionPointB.y = (yA + sB * yD) / d;\n                            if (normalRadians !== null) {\n                                normalRadians.y = Math.atan2(intersectionPointB.y / rr * dd, intersectionPointB.x / rr);\n                            }\n                        }\n                    }\n                }\n            }\n            return intersectionCount;\n        };\n        EllipseBoundingBoxData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.type = 1 /* Ellipse */;\n        };\n        /**\n         * @inheritDoc\n         */\n        EllipseBoundingBoxData.prototype.containsPoint = function (pX, pY) {\n            var widthH = this.width * 0.5;\n            if (pX >= -widthH && pX <= widthH) {\n                var heightH = this.height * 0.5;\n                if (pY >= -heightH && pY <= heightH) {\n                    pY *= widthH / heightH;\n                    return Math.sqrt(pX * pX + pY * pY) <= widthH;\n                }\n            }\n            return false;\n        };\n        /**\n         * @inheritDoc\n         */\n        EllipseBoundingBoxData.prototype.intersectsSegment = function (xA, yA, xB, yB, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            var intersectionCount = EllipseBoundingBoxData.ellipseIntersectsSegment(xA, yA, xB, yB, 0.0, 0.0, this.width * 0.5, this.height * 0.5, intersectionPointA, intersectionPointB, normalRadians);\n            return intersectionCount;\n        };\n        return EllipseBoundingBoxData;\n    }(BoundingBoxData));\n    dragonBones.EllipseBoundingBoxData = EllipseBoundingBoxData;\n    /**\n     * - The polygon bounding box data.\n     * @version DragonBones 5.1\n     * @language en_US\n     */\n    /**\n     * - 多边形边界框数据。\n     * @version DragonBones 5.1\n     * @language zh_CN\n     */\n    var PolygonBoundingBoxData = /** @class */ (function (_super) {\n        __extends(PolygonBoundingBoxData, _super);\n        function PolygonBoundingBoxData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * - The polygon vertices.\n             * @version DragonBones 5.1\n             * @language en_US\n             */\n            /**\n             * - 多边形顶点。\n             * @version DragonBones 5.1\n             * @language zh_CN\n             */\n            _this.vertices = [];\n            return _this;\n        }\n        PolygonBoundingBoxData.toString = function () {\n            return \"[class dragonBones.PolygonBoundingBoxData]\";\n        };\n        /**\n         * @private\n         */\n        PolygonBoundingBoxData.polygonIntersectsSegment = function (xA, yA, xB, yB, vertices, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            if (xA === xB) {\n                xA = xB + 0.000001;\n            }\n            if (yA === yB) {\n                yA = yB + 0.000001;\n            }\n            var count = vertices.length;\n            var dXAB = xA - xB;\n            var dYAB = yA - yB;\n            var llAB = xA * yB - yA * xB;\n            var intersectionCount = 0;\n            var xC = vertices[count - 2];\n            var yC = vertices[count - 1];\n            var dMin = 0.0;\n            var dMax = 0.0;\n            var xMin = 0.0;\n            var yMin = 0.0;\n            var xMax = 0.0;\n            var yMax = 0.0;\n            for (var i = 0; i < count; i += 2) {\n                var xD = vertices[i];\n                var yD = vertices[i + 1];\n                if (xC === xD) {\n                    xC = xD + 0.0001;\n                }\n                if (yC === yD) {\n                    yC = yD + 0.0001;\n                }\n                var dXCD = xC - xD;\n                var dYCD = yC - yD;\n                var llCD = xC * yD - yC * xD;\n                var ll = dXAB * dYCD - dYAB * dXCD;\n                var x = (llAB * dXCD - dXAB * llCD) / ll;\n                if (((x >= xC && x <= xD) || (x >= xD && x <= xC)) && (dXAB === 0.0 || (x >= xA && x <= xB) || (x >= xB && x <= xA))) {\n                    var y = (llAB * dYCD - dYAB * llCD) / ll;\n                    if (((y >= yC && y <= yD) || (y >= yD && y <= yC)) && (dYAB === 0.0 || (y >= yA && y <= yB) || (y >= yB && y <= yA))) {\n                        if (intersectionPointB !== null) {\n                            var d = x - xA;\n                            if (d < 0.0) {\n                                d = -d;\n                            }\n                            if (intersectionCount === 0) {\n                                dMin = d;\n                                dMax = d;\n                                xMin = x;\n                                yMin = y;\n                                xMax = x;\n                                yMax = y;\n                                if (normalRadians !== null) {\n                                    normalRadians.x = Math.atan2(yD - yC, xD - xC) - Math.PI * 0.5;\n                                    normalRadians.y = normalRadians.x;\n                                }\n                            }\n                            else {\n                                if (d < dMin) {\n                                    dMin = d;\n                                    xMin = x;\n                                    yMin = y;\n                                    if (normalRadians !== null) {\n                                        normalRadians.x = Math.atan2(yD - yC, xD - xC) - Math.PI * 0.5;\n                                    }\n                                }\n                                if (d > dMax) {\n                                    dMax = d;\n                                    xMax = x;\n                                    yMax = y;\n                                    if (normalRadians !== null) {\n                                        normalRadians.y = Math.atan2(yD - yC, xD - xC) - Math.PI * 0.5;\n                                    }\n                                }\n                            }\n                            intersectionCount++;\n                        }\n                        else {\n                            xMin = x;\n                            yMin = y;\n                            xMax = x;\n                            yMax = y;\n                            intersectionCount++;\n                            if (normalRadians !== null) {\n                                normalRadians.x = Math.atan2(yD - yC, xD - xC) - Math.PI * 0.5;\n                                normalRadians.y = normalRadians.x;\n                            }\n                            break;\n                        }\n                    }\n                }\n                xC = xD;\n                yC = yD;\n            }\n            if (intersectionCount === 1) {\n                if (intersectionPointA !== null) {\n                    intersectionPointA.x = xMin;\n                    intersectionPointA.y = yMin;\n                }\n                if (intersectionPointB !== null) {\n                    intersectionPointB.x = xMin;\n                    intersectionPointB.y = yMin;\n                }\n                if (normalRadians !== null) {\n                    normalRadians.y = normalRadians.x + Math.PI;\n                }\n            }\n            else if (intersectionCount > 1) {\n                intersectionCount++;\n                if (intersectionPointA !== null) {\n                    intersectionPointA.x = xMin;\n                    intersectionPointA.y = yMin;\n                }\n                if (intersectionPointB !== null) {\n                    intersectionPointB.x = xMax;\n                    intersectionPointB.y = yMax;\n                }\n            }\n            return intersectionCount;\n        };\n        PolygonBoundingBoxData.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.type = 2 /* Polygon */;\n            this.x = 0.0;\n            this.y = 0.0;\n            this.vertices.length = 0;\n        };\n        /**\n         * @inheritDoc\n         */\n        PolygonBoundingBoxData.prototype.containsPoint = function (pX, pY) {\n            var isInSide = false;\n            if (pX >= this.x && pX <= this.width && pY >= this.y && pY <= this.height) {\n                for (var i = 0, l = this.vertices.length, iP = l - 2; i < l; i += 2) {\n                    var yA = this.vertices[iP + 1];\n                    var yB = this.vertices[i + 1];\n                    if ((yB < pY && yA >= pY) || (yA < pY && yB >= pY)) {\n                        var xA = this.vertices[iP];\n                        var xB = this.vertices[i];\n                        if ((pY - yB) * (xA - xB) / (yA - yB) + xB < pX) {\n                            isInSide = !isInSide;\n                        }\n                    }\n                    iP = i;\n                }\n            }\n            return isInSide;\n        };\n        /**\n         * @inheritDoc\n         */\n        PolygonBoundingBoxData.prototype.intersectsSegment = function (xA, yA, xB, yB, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            var intersectionCount = 0;\n            if (RectangleBoundingBoxData.rectangleIntersectsSegment(xA, yA, xB, yB, this.x, this.y, this.x + this.width, this.y + this.height, null, null, null) !== 0) {\n                intersectionCount = PolygonBoundingBoxData.polygonIntersectsSegment(xA, yA, xB, yB, this.vertices, intersectionPointA, intersectionPointB, normalRadians);\n            }\n            return intersectionCount;\n        };\n        return PolygonBoundingBoxData;\n    }(BoundingBoxData));\n    dragonBones.PolygonBoundingBoxData = PolygonBoundingBoxData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The animation data.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 动画数据。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var AnimationData = /** @class */ (function (_super) {\n        __extends(AnimationData, _super);\n        function AnimationData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @private\n             */\n            _this.cachedFrames = [];\n            /**\n             * @private\n             */\n            _this.boneTimelines = {};\n            /**\n             * @private\n             */\n            _this.surfaceTimelines = {};\n            /**\n             * @private\n             */\n            _this.slotTimelines = {};\n            /**\n             * @private\n             */\n            _this.constraintTimelines = {};\n            /**\n             * @private\n             */\n            _this.animationTimelines = {};\n            /**\n             * @private\n             */\n            _this.boneCachedFrameIndices = {};\n            /**\n             * @private\n             */\n            _this.slotCachedFrameIndices = {};\n            /**\n             * @private\n             */\n            _this.actionTimeline = null; // Initial value.\n            /**\n             * @private\n             */\n            _this.zOrderTimeline = null; // Initial value.\n            return _this;\n        }\n        AnimationData.toString = function () {\n            return \"[class dragonBones.AnimationData]\";\n        };\n        AnimationData.prototype._onClear = function () {\n            for (var k in this.boneTimelines) {\n                for (var _i = 0, _a = this.boneTimelines[k]; _i < _a.length; _i++) {\n                    var timeline = _a[_i];\n                    timeline.returnToPool();\n                }\n                delete this.boneTimelines[k];\n            }\n            for (var k in this.surfaceTimelines) {\n                for (var _b = 0, _c = this.surfaceTimelines[k]; _b < _c.length; _b++) {\n                    var timeline = _c[_b];\n                    timeline.returnToPool();\n                }\n                delete this.surfaceTimelines[k];\n            }\n            for (var k in this.slotTimelines) {\n                for (var _d = 0, _e = this.slotTimelines[k]; _d < _e.length; _d++) {\n                    var timeline = _e[_d];\n                    timeline.returnToPool();\n                }\n                delete this.slotTimelines[k];\n            }\n            for (var k in this.constraintTimelines) {\n                for (var _f = 0, _g = this.constraintTimelines[k]; _f < _g.length; _f++) {\n                    var timeline = _g[_f];\n                    timeline.returnToPool();\n                }\n                delete this.constraintTimelines[k];\n            }\n            for (var k in this.animationTimelines) {\n                for (var _h = 0, _j = this.animationTimelines[k]; _h < _j.length; _h++) {\n                    var timeline = _j[_h];\n                    timeline.returnToPool();\n                }\n                delete this.animationTimelines[k];\n            }\n            for (var k in this.boneCachedFrameIndices) {\n                delete this.boneCachedFrameIndices[k];\n            }\n            for (var k in this.slotCachedFrameIndices) {\n                delete this.slotCachedFrameIndices[k];\n            }\n            if (this.actionTimeline !== null) {\n                this.actionTimeline.returnToPool();\n            }\n            if (this.zOrderTimeline !== null) {\n                this.zOrderTimeline.returnToPool();\n            }\n            this.frameIntOffset = 0;\n            this.frameFloatOffset = 0;\n            this.frameOffset = 0;\n            this.frameCount = 0;\n            this.playTimes = 0;\n            this.duration = 0.0;\n            this.scale = 1.0;\n            this.fadeInTime = 0.0;\n            this.cacheFrameRate = 0.0;\n            this.name = \"\";\n            this.cachedFrames.length = 0;\n            // this.boneTimelines.clear();\n            // this.surfaceTimelines.clear();\n            // this.slotTimelines.clear();\n            // this.constraintTimelines.clear();\n            // this.animationTimelines.clear();\n            // this.boneCachedFrameIndices.clear();\n            // this.slotCachedFrameIndices.clear();\n            this.actionTimeline = null;\n            this.zOrderTimeline = null;\n            this.parent = null; //\n        };\n        /**\n         * @internal\n         */\n        AnimationData.prototype.cacheFrames = function (frameRate) {\n            if (this.cacheFrameRate > 0.0) { // TODO clear cache.\n                return;\n            }\n            this.cacheFrameRate = Math.max(Math.ceil(frameRate * this.scale), 1.0);\n            var cacheFrameCount = Math.ceil(this.cacheFrameRate * this.duration) + 1; // Cache one more frame.\n            this.cachedFrames.length = cacheFrameCount;\n            for (var i = 0, l = this.cacheFrames.length; i < l; ++i) {\n                this.cachedFrames[i] = false;\n            }\n            for (var _i = 0, _a = this.parent.sortedBones; _i < _a.length; _i++) {\n                var bone = _a[_i];\n                var indices = new Array(cacheFrameCount);\n                for (var i = 0, l = indices.length; i < l; ++i) {\n                    indices[i] = -1;\n                }\n                this.boneCachedFrameIndices[bone.name] = indices;\n            }\n            for (var _b = 0, _c = this.parent.sortedSlots; _b < _c.length; _b++) {\n                var slot = _c[_b];\n                var indices = new Array(cacheFrameCount);\n                for (var i = 0, l = indices.length; i < l; ++i) {\n                    indices[i] = -1;\n                }\n                this.slotCachedFrameIndices[slot.name] = indices;\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.addBoneTimeline = function (bone, timeline) {\n            var timelines = bone.name in this.boneTimelines ? this.boneTimelines[bone.name] : (this.boneTimelines[bone.name] = []);\n            if (timelines.indexOf(timeline) < 0) {\n                timelines.push(timeline);\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.addSurfaceTimeline = function (surface, timeline) {\n            var timelines = surface.name in this.surfaceTimelines ? this.surfaceTimelines[surface.name] : (this.surfaceTimelines[surface.name] = []);\n            if (timelines.indexOf(timeline) < 0) {\n                timelines.push(timeline);\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.addSlotTimeline = function (slot, timeline) {\n            var timelines = slot.name in this.slotTimelines ? this.slotTimelines[slot.name] : (this.slotTimelines[slot.name] = []);\n            if (timelines.indexOf(timeline) < 0) {\n                timelines.push(timeline);\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.addConstraintTimeline = function (constraint, timeline) {\n            var timelines = constraint.name in this.constraintTimelines ? this.constraintTimelines[constraint.name] : (this.constraintTimelines[constraint.name] = []);\n            if (timelines.indexOf(timeline) < 0) {\n                timelines.push(timeline);\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.addAnimationTimeline = function (timelineName, timeline) {\n            var timelines = timelineName in this.animationTimelines ? this.animationTimelines[timelineName] : (this.animationTimelines[timelineName] = []);\n            if (timelines.indexOf(timeline) < 0) {\n                timelines.push(timeline);\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.getBoneTimelines = function (timelineName) {\n            return timelineName in this.boneTimelines ? this.boneTimelines[timelineName] : null;\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.getSurfaceTimelines = function (timelineName) {\n            return timelineName in this.surfaceTimelines ? this.surfaceTimelines[timelineName] : null;\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.getSlotTimelines = function (timelineName) {\n            return timelineName in this.slotTimelines ? this.slotTimelines[timelineName] : null;\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.getConstraintTimelines = function (timelineName) {\n            return timelineName in this.constraintTimelines ? this.constraintTimelines[timelineName] : null;\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.getAnimationTimelines = function (timelineName) {\n            return timelineName in this.animationTimelines ? this.animationTimelines[timelineName] : null;\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.getBoneCachedFrameIndices = function (boneName) {\n            return boneName in this.boneCachedFrameIndices ? this.boneCachedFrameIndices[boneName] : null;\n        };\n        /**\n         * @private\n         */\n        AnimationData.prototype.getSlotCachedFrameIndices = function (slotName) {\n            return slotName in this.slotCachedFrameIndices ? this.slotCachedFrameIndices[slotName] : null;\n        };\n        return AnimationData;\n    }(dragonBones.BaseObject));\n    dragonBones.AnimationData = AnimationData;\n    /**\n     * @internal\n     */\n    var TimelineData = /** @class */ (function (_super) {\n        __extends(TimelineData, _super);\n        function TimelineData() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TimelineData.toString = function () {\n            return \"[class dragonBones.TimelineData]\";\n        };\n        TimelineData.prototype._onClear = function () {\n            this.type = 10 /* BoneAll */;\n            this.offset = 0;\n            this.frameIndicesOffset = -1;\n        };\n        return TimelineData;\n    }(dragonBones.BaseObject));\n    dragonBones.TimelineData = TimelineData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The animation config is used to describe all the information needed to play an animation state.\n     * The API is still in the experimental phase and may encounter bugs or stability or compatibility issues when used.\n     * @see dragonBones.AnimationState\n     * @beta\n     * @version DragonBones 5.0\n     * @language en_US\n     */\n    /**\n     * - 动画配置用来描述播放一个动画状态所需要的全部信息。\n     * 该 API 仍在实验阶段，使用时可能遭遇 bug 或稳定性或兼容性问题。\n     * @see dragonBones.AnimationState\n     * @beta\n     * @version DragonBones 5.0\n     * @language zh_CN\n     */\n    var AnimationConfig = /** @class */ (function (_super) {\n        __extends(AnimationConfig, _super);\n        function AnimationConfig() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @private\n             */\n            _this.boneMask = [];\n            return _this;\n        }\n        AnimationConfig.toString = function () {\n            return \"[class dragonBones.AnimationConfig]\";\n        };\n        AnimationConfig.prototype._onClear = function () {\n            this.pauseFadeOut = true;\n            this.fadeOutMode = 4 /* All */;\n            this.fadeOutTweenType = 1 /* Line */;\n            this.fadeOutTime = -1.0;\n            this.actionEnabled = true;\n            this.additiveBlending = false;\n            this.displayControl = true;\n            this.pauseFadeIn = true;\n            this.resetToPose = true;\n            this.fadeInTweenType = 1 /* Line */;\n            this.playTimes = -1;\n            this.layer = 0;\n            this.position = 0.0;\n            this.duration = -1.0;\n            this.timeScale = -100.0;\n            this.weight = 1.0;\n            this.fadeInTime = -1.0;\n            this.autoFadeOutTime = -1.0;\n            this.name = \"\";\n            this.animation = \"\";\n            this.group = \"\";\n            this.boneMask.length = 0;\n        };\n        /**\n         * @private\n         */\n        AnimationConfig.prototype.clear = function () {\n            this._onClear();\n        };\n        /**\n         * @private\n         */\n        AnimationConfig.prototype.copyFrom = function (value) {\n            this.pauseFadeOut = value.pauseFadeOut;\n            this.fadeOutMode = value.fadeOutMode;\n            this.autoFadeOutTime = value.autoFadeOutTime;\n            this.fadeOutTweenType = value.fadeOutTweenType;\n            this.actionEnabled = value.actionEnabled;\n            this.additiveBlending = value.additiveBlending;\n            this.displayControl = value.displayControl;\n            this.pauseFadeIn = value.pauseFadeIn;\n            this.resetToPose = value.resetToPose;\n            this.playTimes = value.playTimes;\n            this.layer = value.layer;\n            this.position = value.position;\n            this.duration = value.duration;\n            this.timeScale = value.timeScale;\n            this.fadeInTime = value.fadeInTime;\n            this.fadeOutTime = value.fadeOutTime;\n            this.fadeInTweenType = value.fadeInTweenType;\n            this.weight = value.weight;\n            this.name = value.name;\n            this.animation = value.animation;\n            this.group = value.group;\n            this.boneMask.length = value.boneMask.length;\n            for (var i = 0, l = this.boneMask.length; i < l; ++i) {\n                this.boneMask[i] = value.boneMask[i];\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationConfig.prototype.containsBoneMask = function (boneName) {\n            return this.boneMask.length === 0 || this.boneMask.indexOf(boneName) >= 0;\n        };\n        /**\n         * @private\n         */\n        AnimationConfig.prototype.addBoneMask = function (armature, boneName, recursive) {\n            if (recursive === void 0) { recursive = true; }\n            var currentBone = armature.getBone(boneName);\n            if (currentBone === null) {\n                return;\n            }\n            if (this.boneMask.indexOf(boneName) < 0) { // Add mixing\n                this.boneMask.push(boneName);\n            }\n            if (recursive) { // Add recursive mixing.\n                for (var _i = 0, _a = armature.getBones(); _i < _a.length; _i++) {\n                    var bone = _a[_i];\n                    if (this.boneMask.indexOf(bone.name) < 0 && currentBone.contains(bone)) {\n                        this.boneMask.push(bone.name);\n                    }\n                }\n            }\n        };\n        /**\n         * @private\n         */\n        AnimationConfig.prototype.removeBoneMask = function (armature, boneName, recursive) {\n            if (recursive === void 0) { recursive = true; }\n            var index = this.boneMask.indexOf(boneName);\n            if (index >= 0) { // Remove mixing.\n                this.boneMask.splice(index, 1);\n            }\n            if (recursive) {\n                var currentBone = armature.getBone(boneName);\n                if (currentBone !== null) {\n                    if (this.boneMask.length > 0) { // Remove recursive mixing.\n                        for (var _i = 0, _a = armature.getBones(); _i < _a.length; _i++) {\n                            var bone = _a[_i];\n                            var index_1 = this.boneMask.indexOf(bone.name);\n                            if (index_1 >= 0 && currentBone.contains(bone)) {\n                                this.boneMask.splice(index_1, 1);\n                            }\n                        }\n                    }\n                    else { // Add unrecursive mixing.\n                        for (var _b = 0, _c = armature.getBones(); _b < _c.length; _b++) {\n                            var bone = _c[_b];\n                            if (bone === currentBone) {\n                                continue;\n                            }\n                            if (!currentBone.contains(bone)) {\n                                this.boneMask.push(bone.name);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        return AnimationConfig;\n    }(dragonBones.BaseObject));\n    dragonBones.AnimationConfig = AnimationConfig;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The texture atlas data.\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 贴图集数据。\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var TextureAtlasData = /** @class */ (function (_super) {\n        __extends(TextureAtlasData, _super);\n        function TextureAtlasData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @private\n             */\n            _this.textures = {};\n            return _this;\n        }\n        TextureAtlasData.prototype._onClear = function () {\n            for (var k in this.textures) {\n                this.textures[k].returnToPool();\n                delete this.textures[k];\n            }\n            this.autoSearch = false;\n            this.width = 0;\n            this.height = 0;\n            this.scale = 1.0;\n            // this.textures.clear();\n            this.name = \"\";\n            this.imagePath = \"\";\n        };\n        /**\n         * @private\n         */\n        TextureAtlasData.prototype.copyFrom = function (value) {\n            this.autoSearch = value.autoSearch;\n            this.scale = value.scale;\n            this.width = value.width;\n            this.height = value.height;\n            this.name = value.name;\n            this.imagePath = value.imagePath;\n            for (var k in this.textures) {\n                this.textures[k].returnToPool();\n                delete this.textures[k];\n            }\n            // this.textures.clear();\n            for (var k in value.textures) {\n                var texture = this.createTexture();\n                texture.copyFrom(value.textures[k]);\n                this.textures[k] = texture;\n            }\n        };\n        /**\n         * @internal\n         */\n        TextureAtlasData.prototype.addTexture = function (value) {\n            if (value.name in this.textures) {\n                console.warn(\"Same texture: \" + value.name);\n                return;\n            }\n            value.parent = this;\n            this.textures[value.name] = value;\n        };\n        /**\n         * @private\n         */\n        TextureAtlasData.prototype.getTexture = function (textureName) {\n            return textureName in this.textures ? this.textures[textureName] : null;\n        };\n        return TextureAtlasData;\n    }(dragonBones.BaseObject));\n    dragonBones.TextureAtlasData = TextureAtlasData;\n    /**\n     * @internal\n     */\n    var TextureData = /** @class */ (function (_super) {\n        __extends(TextureData, _super);\n        function TextureData() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.region = new dragonBones.Rectangle();\n            _this.frame = null; // Initial value.\n            return _this;\n        }\n        TextureData.createRectangle = function () {\n            return new dragonBones.Rectangle();\n        };\n        TextureData.prototype._onClear = function () {\n            this.rotated = false;\n            this.name = \"\";\n            this.region.clear();\n            this.parent = null; //\n            this.frame = null;\n        };\n        TextureData.prototype.copyFrom = function (value) {\n            this.rotated = value.rotated;\n            this.name = value.name;\n            this.region.copyFrom(value.region);\n            this.parent = value.parent;\n            if (this.frame === null && value.frame !== null) {\n                this.frame = TextureData.createRectangle();\n            }\n            else if (this.frame !== null && value.frame === null) {\n                this.frame = null;\n            }\n            if (this.frame !== null && value.frame !== null) {\n                this.frame.copyFrom(value.frame);\n            }\n        };\n        return TextureData;\n    }(dragonBones.BaseObject));\n    dragonBones.TextureData = TextureData;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var DeformVertices = /** @class */ (function (_super) {\n        __extends(DeformVertices, _super);\n        function DeformVertices() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.vertices = [];\n            _this.bones = [];\n            return _this;\n        }\n        DeformVertices.toString = function () {\n            return \"[class dragonBones.DeformVertices]\";\n        };\n        DeformVertices.prototype._onClear = function () {\n            this.verticesDirty = false;\n            this.vertices.length = 0;\n            this.bones.length = 0;\n            this.verticesData = null;\n        };\n        DeformVertices.prototype.init = function (verticesDataValue, armature) {\n            this.verticesData = verticesDataValue;\n            if (this.verticesData !== null) {\n                var vertexCount = 0;\n                if (this.verticesData.weight !== null) {\n                    vertexCount = this.verticesData.weight.count * 2;\n                }\n                else {\n                    vertexCount = this.verticesData.data.intArray[this.verticesData.offset + 0 /* MeshVertexCount */] * 2;\n                }\n                this.verticesDirty = true;\n                this.vertices.length = vertexCount;\n                this.bones.length = 0;\n                //\n                for (var i = 0, l = this.vertices.length; i < l; ++i) {\n                    this.vertices[i] = 0.0;\n                }\n                if (this.verticesData.weight !== null) {\n                    for (var i = 0, l = this.verticesData.weight.bones.length; i < l; ++i) {\n                        var bone = armature.getBone(this.verticesData.weight.bones[i].name);\n                        this.bones.push(bone);\n                    }\n                }\n            }\n            else {\n                this.verticesDirty = false;\n                this.vertices.length = 0;\n                this.bones.length = 0;\n                this.verticesData = null;\n            }\n        };\n        DeformVertices.prototype.isBonesUpdate = function () {\n            for (var _i = 0, _a = this.bones; _i < _a.length; _i++) {\n                var bone = _a[_i];\n                if (bone !== null && bone._childrenTransformDirty) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        return DeformVertices;\n    }(dragonBones.BaseObject));\n    dragonBones.DeformVertices = DeformVertices;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones_1) {\n    /**\n     * - Armature is the core of the skeleton animation system.\n     * @see dragonBones.ArmatureData\n     * @see dragonBones.Bone\n     * @see dragonBones.Slot\n     * @see dragonBones.Animation\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 骨架是骨骼动画系统的核心。\n     * @see dragonBones.ArmatureData\n     * @see dragonBones.Bone\n     * @see dragonBones.Slot\n     * @see dragonBones.Animation\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Armature = /** @class */ (function (_super) {\n        __extends(Armature, _super);\n        function Armature() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._bones = [];\n            _this._slots = [];\n            /**\n             * @internal\n             */\n            _this._constraints = [];\n            _this._actions = [];\n            _this._animation = null; // Initial value.\n            _this._proxy = null; // Initial value.\n            /**\n             * @internal\n             */\n            _this._replaceTextureAtlasData = null; // Initial value.\n            _this._clock = null; // Initial value.\n            return _this;\n        }\n        Armature.toString = function () {\n            return \"[class dragonBones.Armature]\";\n        };\n        Armature._onSortSlots = function (a, b) {\n            return a._zOrder > b._zOrder ? 1 : -1;\n        };\n        Armature.prototype._onClear = function () {\n            if (this._clock !== null) { // Remove clock first.\n                this._clock.remove(this);\n            }\n            for (var _i = 0, _a = this._bones; _i < _a.length; _i++) {\n                var bone = _a[_i];\n                bone.returnToPool();\n            }\n            for (var _b = 0, _c = this._slots; _b < _c.length; _b++) {\n                var slot = _c[_b];\n                slot.returnToPool();\n            }\n            for (var _d = 0, _e = this._constraints; _d < _e.length; _d++) {\n                var constraint = _e[_d];\n                constraint.returnToPool();\n            }\n            for (var _f = 0, _g = this._actions; _f < _g.length; _f++) {\n                var action = _g[_f];\n                action.returnToPool();\n            }\n            if (this._animation !== null) {\n                this._animation.returnToPool();\n            }\n            if (this._proxy !== null) {\n                this._proxy.dbClear();\n            }\n            if (this._replaceTextureAtlasData !== null) {\n                this._replaceTextureAtlasData.returnToPool();\n            }\n            this.inheritAnimation = true;\n            this.userData = null;\n            this._lockUpdate = false;\n            this._slotsDirty = true;\n            this._zOrderDirty = false;\n            this._flipX = false;\n            this._flipY = false;\n            this._cacheFrameIndex = -1;\n            this._bones.length = 0;\n            this._slots.length = 0;\n            this._constraints.length = 0;\n            this._actions.length = 0;\n            this._armatureData = null; //\n            this._animation = null; //\n            this._proxy = null; //\n            this._display = null;\n            this._replaceTextureAtlasData = null;\n            this._replacedTexture = null;\n            this._dragonBones = null; //\n            this._clock = null;\n            this._parent = null;\n        };\n        /**\n         * @internal\n         */\n        Armature.prototype._sortZOrder = function (slotIndices, offset) {\n            var slotDatas = this._armatureData.sortedSlots;\n            var isOriginal = slotIndices === null;\n            if (this._zOrderDirty || !isOriginal) {\n                for (var i = 0, l = slotDatas.length; i < l; ++i) {\n                    var slotIndex = isOriginal ? i : slotIndices[offset + i];\n                    if (slotIndex < 0 || slotIndex >= l) {\n                        continue;\n                    }\n                    var slotData = slotDatas[slotIndex];\n                    var slot = this.getSlot(slotData.name);\n                    if (slot !== null) {\n                        slot._setZorder(i);\n                    }\n                }\n                this._slotsDirty = true;\n                this._zOrderDirty = !isOriginal;\n            }\n        };\n        /**\n         * @internal\n         */\n        Armature.prototype._addBone = function (value) {\n            if (this._bones.indexOf(value) < 0) {\n                this._bones.push(value);\n            }\n        };\n        /**\n         * @internal\n         */\n        Armature.prototype._addSlot = function (value) {\n            if (this._slots.indexOf(value) < 0) {\n                this._slots.push(value);\n            }\n        };\n        /**\n         * @internal\n         */\n        Armature.prototype._addConstraint = function (value) {\n            if (this._constraints.indexOf(value) < 0) {\n                this._constraints.push(value);\n            }\n        };\n        /**\n         * @internal\n         */\n        Armature.prototype._bufferAction = function (action, append) {\n            if (this._actions.indexOf(action) < 0) {\n                if (append) {\n                    this._actions.push(action);\n                }\n                else {\n                    this._actions.unshift(action);\n                }\n            }\n        };\n        /**\n         * - Dispose the armature. (Return to the object pool)\n         * @example\n         * <pre>\n         *     removeChild(armature.display);\n         *     armature.dispose();\n         * </pre>\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 释放骨架。 （回收到对象池）\n         * @example\n         * <pre>\n         *     removeChild(armature.display);\n         *     armature.dispose();\n         * </pre>\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.dispose = function () {\n            if (this._armatureData !== null) {\n                this._lockUpdate = true;\n                this._dragonBones.bufferObject(this);\n            }\n        };\n        /**\n         * @internal\n         */\n        Armature.prototype.init = function (armatureData, proxy, display, dragonBones) {\n            if (this._armatureData !== null) {\n                return;\n            }\n            this._armatureData = armatureData;\n            this._animation = dragonBones_1.BaseObject.borrowObject(dragonBones_1.Animation);\n            this._proxy = proxy;\n            this._display = display;\n            this._dragonBones = dragonBones;\n            this._proxy.dbInit(this);\n            this._animation.init(this);\n            this._animation.animations = this._armatureData.animations;\n        };\n        /**\n         * @inheritDoc\n         */\n        Armature.prototype.advanceTime = function (passedTime) {\n            if (this._lockUpdate) {\n                return;\n            }\n            if (this._armatureData === null) {\n                console.warn(\"The armature has been disposed.\");\n                return;\n            }\n            else if (this._armatureData.parent === null) {\n                console.warn(\"The armature data has been disposed.\\nPlease make sure dispose armature before call factory.clear().\");\n                return;\n            }\n            var prevCacheFrameIndex = this._cacheFrameIndex;\n            // Update animation.\n            this._animation.advanceTime(passedTime);\n            // Sort slots.\n            if (this._slotsDirty) {\n                this._slotsDirty = false;\n                this._slots.sort(Armature._onSortSlots);\n            }\n            // Update bones and slots.\n            if (this._cacheFrameIndex < 0 || this._cacheFrameIndex !== prevCacheFrameIndex) {\n                var i = 0, l = 0;\n                for (i = 0, l = this._bones.length; i < l; ++i) {\n                    this._bones[i].update(this._cacheFrameIndex);\n                }\n                for (i = 0, l = this._slots.length; i < l; ++i) {\n                    this._slots[i].update(this._cacheFrameIndex);\n                }\n            }\n            // Do actions.\n            if (this._actions.length > 0) {\n                this._lockUpdate = true;\n                for (var _i = 0, _a = this._actions; _i < _a.length; _i++) {\n                    var action = _a[_i];\n                    var actionData = action.actionData;\n                    if (actionData !== null) {\n                        if (actionData.type === 0 /* Play */) {\n                            if (action.slot !== null) {\n                                var childArmature = action.slot.childArmature;\n                                if (childArmature !== null) {\n                                    childArmature.animation.fadeIn(actionData.name);\n                                }\n                            }\n                            else if (action.bone !== null) {\n                                for (var _b = 0, _c = this.getSlots(); _b < _c.length; _b++) {\n                                    var slot = _c[_b];\n                                    if (slot.parent === action.bone) {\n                                        var childArmature = slot.childArmature;\n                                        if (childArmature !== null) {\n                                            childArmature.animation.fadeIn(actionData.name);\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                this._animation.fadeIn(actionData.name);\n                            }\n                        }\n                    }\n                    action.returnToPool();\n                }\n                this._actions.length = 0;\n                this._lockUpdate = false;\n            }\n            this._proxy.dbUpdate();\n        };\n        /**\n         * - Forces a specific bone or its owning slot to update the transform or display property in the next frame.\n         * @param boneName - The bone name. (If not set, all bones will be update)\n         * @param updateSlot - Whether to update the bone's slots. (Default: false)\n         * @see dragonBones.Bone#invalidUpdate()\n         * @see dragonBones.Slot#invalidUpdate()\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 强制特定骨骼或其拥有的插槽在下一帧更新变换或显示属性。\n         * @param boneName - 骨骼名称。 （如果未设置，将更新所有骨骼）\n         * @param updateSlot - 是否更新骨骼的插槽。 （默认: false）\n         * @see dragonBones.Bone#invalidUpdate()\n         * @see dragonBones.Slot#invalidUpdate()\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.invalidUpdate = function (boneName, updateSlot) {\n            if (boneName === void 0) { boneName = null; }\n            if (updateSlot === void 0) { updateSlot = false; }\n            if (boneName !== null && boneName.length > 0) {\n                var bone = this.getBone(boneName);\n                if (bone !== null) {\n                    bone.invalidUpdate();\n                    if (updateSlot) {\n                        for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                            var slot = _a[_i];\n                            if (slot.parent === bone) {\n                                slot.invalidUpdate();\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                for (var _b = 0, _c = this._bones; _b < _c.length; _b++) {\n                    var bone = _c[_b];\n                    bone.invalidUpdate();\n                }\n                if (updateSlot) {\n                    for (var _d = 0, _e = this._slots; _d < _e.length; _d++) {\n                        var slot = _e[_d];\n                        slot.invalidUpdate();\n                    }\n                }\n            }\n        };\n        /**\n         * - Check whether a specific point is inside a custom bounding box in a slot.\n         * The coordinate system of the point is the inner coordinate system of the armature.\n         * Custom bounding boxes need to be customized in Dragonbones Pro.\n         * @param x - The horizontal coordinate of the point.\n         * @param y - The vertical coordinate of the point.\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 检查特定点是否在某个插槽的自定义边界框内。\n         * 点的坐标系为骨架内坐标系。\n         * 自定义边界框需要在 DragonBones Pro 中自定义。\n         * @param x - 点的水平坐标。\n         * @param y - 点的垂直坐标。\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        Armature.prototype.containsPoint = function (x, y) {\n            for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                var slot = _a[_i];\n                if (slot.containsPoint(x, y)) {\n                    return slot;\n                }\n            }\n            return null;\n        };\n        /**\n         * - Check whether a specific segment intersects a custom bounding box for a slot in the armature.\n         * The coordinate system of the segment and intersection is the inner coordinate system of the armature.\n         * Custom bounding boxes need to be customized in Dragonbones Pro.\n         * @param xA - The horizontal coordinate of the beginning of the segment.\n         * @param yA - The vertical coordinate of the beginning of the segment.\n         * @param xB - The horizontal coordinate of the end point of the segment.\n         * @param yB - The vertical coordinate of the end point of the segment.\n         * @param intersectionPointA - The first intersection at which a line segment intersects the bounding box from the beginning to the end. (If not set, the intersection point will not calculated)\n         * @param intersectionPointB - The first intersection at which a line segment intersects the bounding box from the end to the beginning. (If not set, the intersection point will not calculated)\n         * @param normalRadians - The normal radians of the tangent of the intersection boundary box. [x: Normal radian of the first intersection tangent, y: Normal radian of the second intersection tangent] (If not set, the normal will not calculated)\n         * @returns The slot of the first custom bounding box where the segment intersects from the start point to the end point.\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 检查特定线段是否与骨架的某个插槽的自定义边界框相交。\n         * 线段和交点的坐标系均为骨架内坐标系。\n         * 自定义边界框需要在 DragonBones Pro 中自定义。\n         * @param xA - 线段起点的水平坐标。\n         * @param yA - 线段起点的垂直坐标。\n         * @param xB - 线段终点的水平坐标。\n         * @param yB - 线段终点的垂直坐标。\n         * @param intersectionPointA - 线段从起点到终点与边界框相交的第一个交点。 （如果未设置，则不计算交点）\n         * @param intersectionPointB - 线段从终点到起点与边界框相交的第一个交点。 （如果未设置，则不计算交点）\n         * @param normalRadians - 交点边界框切线的法线弧度。 [x: 第一个交点切线的法线弧度, y: 第二个交点切线的法线弧度] （如果未设置，则不计算法线）\n         * @returns 线段从起点到终点相交的第一个自定义边界框的插槽。\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        Armature.prototype.intersectsSegment = function (xA, yA, xB, yB, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            var isV = xA === xB;\n            var dMin = 0.0;\n            var dMax = 0.0;\n            var intXA = 0.0;\n            var intYA = 0.0;\n            var intXB = 0.0;\n            var intYB = 0.0;\n            var intAN = 0.0;\n            var intBN = 0.0;\n            var intSlotA = null;\n            var intSlotB = null;\n            for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                var slot = _a[_i];\n                var intersectionCount = slot.intersectsSegment(xA, yA, xB, yB, intersectionPointA, intersectionPointB, normalRadians);\n                if (intersectionCount > 0) {\n                    if (intersectionPointA !== null || intersectionPointB !== null) {\n                        if (intersectionPointA !== null) {\n                            var d = isV ? intersectionPointA.y - yA : intersectionPointA.x - xA;\n                            if (d < 0.0) {\n                                d = -d;\n                            }\n                            if (intSlotA === null || d < dMin) {\n                                dMin = d;\n                                intXA = intersectionPointA.x;\n                                intYA = intersectionPointA.y;\n                                intSlotA = slot;\n                                if (normalRadians) {\n                                    intAN = normalRadians.x;\n                                }\n                            }\n                        }\n                        if (intersectionPointB !== null) {\n                            var d = intersectionPointB.x - xA;\n                            if (d < 0.0) {\n                                d = -d;\n                            }\n                            if (intSlotB === null || d > dMax) {\n                                dMax = d;\n                                intXB = intersectionPointB.x;\n                                intYB = intersectionPointB.y;\n                                intSlotB = slot;\n                                if (normalRadians !== null) {\n                                    intBN = normalRadians.y;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        intSlotA = slot;\n                        break;\n                    }\n                }\n            }\n            if (intSlotA !== null && intersectionPointA !== null) {\n                intersectionPointA.x = intXA;\n                intersectionPointA.y = intYA;\n                if (normalRadians !== null) {\n                    normalRadians.x = intAN;\n                }\n            }\n            if (intSlotB !== null && intersectionPointB !== null) {\n                intersectionPointB.x = intXB;\n                intersectionPointB.y = intYB;\n                if (normalRadians !== null) {\n                    normalRadians.y = intBN;\n                }\n            }\n            return intSlotA;\n        };\n        /**\n         * - Get a specific bone.\n         * @param name - The bone name.\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的骨骼。\n         * @param name - 骨骼名称。\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.getBone = function (name) {\n            for (var _i = 0, _a = this._bones; _i < _a.length; _i++) {\n                var bone = _a[_i];\n                if (bone.name === name) {\n                    return bone;\n                }\n            }\n            return null;\n        };\n        /**\n         * - Get a specific bone by the display.\n         * @param display - The display object.\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 通过显示对象获取特定的骨骼。\n         * @param display - 显示对象。\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.getBoneByDisplay = function (display) {\n            var slot = this.getSlotByDisplay(display);\n            return slot !== null ? slot.parent : null;\n        };\n        /**\n         * - Get a specific slot.\n         * @param name - The slot name.\n         * @see dragonBones.Slot\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的插槽。\n         * @param name - 插槽名称。\n         * @see dragonBones.Slot\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.getSlot = function (name) {\n            for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                var slot = _a[_i];\n                if (slot.name === name) {\n                    return slot;\n                }\n            }\n            return null;\n        };\n        /**\n         * - Get a specific slot by the display.\n         * @param display - The display object.\n         * @see dragonBones.Slot\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 通过显示对象获取特定的插槽。\n         * @param display - 显示对象。\n         * @see dragonBones.Slot\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.getSlotByDisplay = function (display) {\n            if (display !== null) {\n                for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                    var slot = _a[_i];\n                    if (slot.display === display) {\n                        return slot;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * - Get all bones.\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取所有的骨骼。\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.getBones = function () {\n            return this._bones;\n        };\n        /**\n         * - Get all slots.\n         * @see dragonBones.Slot\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取所有的插槽。\n         * @see dragonBones.Slot\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Armature.prototype.getSlots = function () {\n            return this._slots;\n        };\n        Object.defineProperty(Armature.prototype, \"flipX\", {\n            /**\n             * - Whether to flip the armature horizontally.\n             * @version DragonBones 5.5\n             * @language en_US\n             */\n            /**\n             * - 是否将骨架水平翻转。\n             * @version DragonBones 5.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._flipX;\n            },\n            set: function (value) {\n                if (this._flipX === value) {\n                    return;\n                }\n                this._flipX = value;\n                this.invalidUpdate();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"flipY\", {\n            /**\n             * - Whether to flip the armature vertically.\n             * @version DragonBones 5.5\n             * @language en_US\n             */\n            /**\n             * - 是否将骨架垂直翻转。\n             * @version DragonBones 5.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._flipY;\n            },\n            set: function (value) {\n                if (this._flipY === value) {\n                    return;\n                }\n                this._flipY = value;\n                this.invalidUpdate();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"cacheFrameRate\", {\n            /**\n             * - The animation cache frame rate, which turns on the animation cache when the set value is greater than 0.\n             * There is a certain amount of memory overhead to improve performance by caching animation data in memory.\n             * The frame rate should not be set too high, usually with the frame rate of the animation is similar and lower than the program running frame rate.\n             * When the animation cache is turned on, some features will fail, such as the offset property of bone.\n             * @example\n             * <pre>\n             *     armature.cacheFrameRate = 24;\n             * </pre>\n             * @see dragonBones.DragonBonesData#frameRate\n             * @see dragonBones.ArmatureData#frameRate\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 动画缓存帧率，当设置的值大于 0 的时，将会开启动画缓存。\n             * 通过将动画数据缓存在内存中来提高运行性能，会有一定的内存开销。\n             * 帧率不宜设置的过高，通常跟动画的帧率相当且低于程序运行的帧率。\n             * 开启动画缓存后，某些功能将会失效，比如骨骼的 offset 属性等。\n             * @example\n             * <pre>\n             *     armature.cacheFrameRate = 24;\n             * </pre>\n             * @see dragonBones.DragonBonesData#frameRate\n             * @see dragonBones.ArmatureData#frameRate\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._armatureData.cacheFrameRate;\n            },\n            set: function (value) {\n                if (this._armatureData.cacheFrameRate !== value) {\n                    this._armatureData.cacheFrames(value);\n                    // Set child armature frameRate.\n                    for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                        var slot = _a[_i];\n                        var childArmature = slot.childArmature;\n                        if (childArmature !== null) {\n                            childArmature.cacheFrameRate = value;\n                        }\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"name\", {\n            /**\n             * - The armature name.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 骨架名称。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._armatureData.name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"armatureData\", {\n            /**\n             * - The armature data.\n             * @see dragonBones.ArmatureData\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 骨架数据。\n             * @see dragonBones.ArmatureData\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._armatureData;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"animation\", {\n            /**\n             * - The animation player.\n             * @see dragonBones.Animation\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 动画播放器。\n             * @see dragonBones.Animation\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._animation;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"proxy\", {\n            /**\n             * @pivate\n             */\n            get: function () {\n                return this._proxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"eventDispatcher\", {\n            /**\n             * - The EventDispatcher instance of the armature.\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 该骨架的 EventDispatcher 实例。\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._proxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"display\", {\n            /**\n             * - The display container.\n             * The display of the slot is displayed as the parent.\n             * Depending on the rendering engine, the type will be different, usually the DisplayObjectContainer type.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 显示容器实例。\n             * 插槽的显示对象都会以此显示容器为父级。\n             * 根据渲染引擎的不同，类型会不同，通常是 DisplayObjectContainer 类型。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._display;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"replacedTexture\", {\n            /**\n             * @private\n             */\n            get: function () {\n                return this._replacedTexture;\n            },\n            set: function (value) {\n                if (this._replacedTexture === value) {\n                    return;\n                }\n                if (this._replaceTextureAtlasData !== null) {\n                    this._replaceTextureAtlasData.returnToPool();\n                    this._replaceTextureAtlasData = null;\n                }\n                this._replacedTexture = value;\n                for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                    var slot = _a[_i];\n                    slot.invalidUpdate();\n                    slot.update(-1);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"clock\", {\n            /**\n             * @inheritDoc\n             */\n            get: function () {\n                return this._clock;\n            },\n            set: function (value) {\n                if (this._clock === value) {\n                    return;\n                }\n                if (this._clock !== null) {\n                    this._clock.remove(this);\n                }\n                this._clock = value;\n                if (this._clock) {\n                    this._clock.add(this);\n                }\n                // Update childArmature clock.\n                for (var _i = 0, _a = this._slots; _i < _a.length; _i++) {\n                    var slot = _a[_i];\n                    var childArmature = slot.childArmature;\n                    if (childArmature !== null) {\n                        childArmature.clock = this._clock;\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Armature.prototype, \"parent\", {\n            /**\n             * - Get the parent slot which the armature belongs to.\n             * @see dragonBones.Slot\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 该骨架所属的父插槽。\n             * @see dragonBones.Slot\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @deprecated\n         * @private\n         */\n        Armature.prototype.replaceTexture = function (texture) {\n            this.replacedTexture = texture;\n        };\n        /**\n         * - Deprecated, please refer to {@link #eventDispatcher}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #eventDispatcher}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Armature.prototype.hasEventListener = function (type) {\n            return this._proxy.hasDBEventListener(type);\n        };\n        /**\n         * - Deprecated, please refer to {@link #eventDispatcher}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #eventDispatcher}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Armature.prototype.addEventListener = function (type, listener, target) {\n            this._proxy.addDBEventListener(type, listener, target);\n        };\n        /**\n         * - Deprecated, please refer to {@link #eventDispatcher}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #eventDispatcher}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Armature.prototype.removeEventListener = function (type, listener, target) {\n            this._proxy.removeDBEventListener(type, listener, target);\n        };\n        /**\n         * - Deprecated, please refer to {@link #cacheFrameRate}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #cacheFrameRate}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Armature.prototype.enableAnimationCache = function (frameRate) {\n            console.warn(\"Deprecated.\");\n            this.cacheFrameRate = frameRate;\n        };\n        /**\n         * - Deprecated, please refer to {@link #display}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #display}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Armature.prototype.getDisplay = function () {\n            return this._display;\n        };\n        return Armature;\n    }(dragonBones_1.BaseObject));\n    dragonBones_1.Armature = Armature;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The base class of the transform object.\n     * @see dragonBones.Transform\n     * @version DragonBones 4.5\n     * @language en_US\n     */\n    /**\n     * - 变换对象的基类。\n     * @see dragonBones.Transform\n     * @version DragonBones 4.5\n     * @language zh_CN\n     */\n    var TransformObject = /** @class */ (function (_super) {\n        __extends(TransformObject, _super);\n        function TransformObject() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * - A matrix relative to the armature coordinate system.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 相对于骨架坐标系的矩阵。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            _this.globalTransformMatrix = new dragonBones.Matrix();\n            /**\n             * - A transform relative to the armature coordinate system.\n             * @see #updateGlobalTransform()\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 相对于骨架坐标系的变换。\n             * @see #updateGlobalTransform()\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            _this.global = new dragonBones.Transform();\n            /**\n             * - The offset transform relative to the armature or the parent bone coordinate system.\n             * @see #dragonBones.Bone#invalidUpdate()\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 相对于骨架或父骨骼坐标系的偏移变换。\n             * @see #dragonBones.Bone#invalidUpdate()\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            _this.offset = new dragonBones.Transform();\n            return _this;\n        }\n        /**\n         */\n        TransformObject.prototype._onClear = function () {\n            this.globalTransformMatrix.identity();\n            this.global.identity();\n            this.offset.identity();\n            this.origin = null;\n            this.userData = null;\n            this._globalDirty = false;\n            this._armature = null; //\n        };\n        /**\n         * - For performance considerations, rotation or scale in the {@link #global} attribute of the bone or slot is not always properly accessible,\n         * some engines do not rely on these attributes to update rendering, such as Egret.\n         * The use of this method ensures that the access to the {@link #global} property is correctly rotation or scale.\n         * @example\n         * <pre>\n         *     bone.updateGlobalTransform();\n         *     let rotation = bone.global.rotation;\n         * </pre>\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 出于性能的考虑，骨骼或插槽的 {@link #global} 属性中的旋转或缩放并不总是正确可访问的，有些引擎并不依赖这些属性更新渲染，比如 Egret。\n         * 使用此方法可以保证访问到 {@link #global} 属性中正确的旋转或缩放。\n         * @example\n         * <pre>\n         *     bone.updateGlobalTransform();\n         *     let rotation = bone.global.rotation;\n         * </pre>\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        TransformObject.prototype.updateGlobalTransform = function () {\n            if (this._globalDirty) {\n                this._globalDirty = false;\n                this.global.fromMatrix(this.globalTransformMatrix);\n            }\n        };\n        Object.defineProperty(TransformObject.prototype, \"armature\", {\n            /**\n             * - The armature to which it belongs.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 所属的骨架。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._armature;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        TransformObject._helpMatrix = new dragonBones.Matrix();\n        TransformObject._helpTransform = new dragonBones.Transform();\n        TransformObject._helpPoint = new dragonBones.Point();\n        return TransformObject;\n    }(dragonBones.BaseObject));\n    dragonBones.TransformObject = TransformObject;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - Bone is one of the most important logical units in the armature animation system,\n     * and is responsible for the realization of translate, rotation, scaling in the animations.\n     * A armature can contain multiple bones.\n     * @see dragonBones.BoneData\n     * @see dragonBones.Armature\n     * @see dragonBones.Slot\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 骨骼在骨骼动画体系中是最重要的逻辑单元之一，负责动画中的平移、旋转、缩放的实现。\n     * 一个骨架中可以包含多个骨骼。\n     * @see dragonBones.BoneData\n     * @see dragonBones.Armature\n     * @see dragonBones.Slot\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Bone = /** @class */ (function (_super) {\n        __extends(Bone, _super);\n        function Bone() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @internal\n             */\n            _this.animationPose = new dragonBones.Transform();\n            /**\n             * @internal\n             */\n            _this._blendState = new dragonBones.BlendState();\n            return _this;\n        }\n        Bone.toString = function () {\n            return \"[class dragonBones.Bone]\";\n        };\n        Bone.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.offsetMode = 1 /* Additive */;\n            this.animationPose.identity();\n            this._transformDirty = false;\n            this._childrenTransformDirty = false;\n            this._localDirty = true;\n            this._hasConstraint = false;\n            this._visible = true;\n            this._cachedFrameIndex = -1;\n            this._blendState.clear();\n            this._boneData = null; //\n            this._parent = null; //\n            this._cachedFrameIndices = null;\n        };\n        Bone.prototype._updateGlobalTransformMatrix = function (isCache) {\n            // For typescript.\n            var boneData = this._boneData;\n            var global = this.global;\n            var globalTransformMatrix = this.globalTransformMatrix;\n            var origin = this.origin;\n            var offset = this.offset;\n            var animationPose = this.animationPose;\n            var parent = this._parent; //\n            var flipX = this._armature.flipX;\n            var flipY = this._armature.flipY === dragonBones.DragonBones.yDown;\n            var inherit = parent !== null;\n            var rotation = 0.0;\n            if (this.offsetMode === 1 /* Additive */) {\n                if (origin !== null) {\n                    // global.copyFrom(this.origin).add(this.offset).add(this.animationPose);\n                    global.x = origin.x + offset.x + animationPose.x;\n                    global.scaleX = origin.scaleX * offset.scaleX * animationPose.scaleX;\n                    global.scaleY = origin.scaleY * offset.scaleY * animationPose.scaleY;\n                    if (dragonBones.DragonBones.yDown) {\n                        global.y = origin.y + offset.y + animationPose.y;\n                        global.skew = origin.skew + offset.skew + animationPose.skew;\n                        global.rotation = origin.rotation + offset.rotation + animationPose.rotation;\n                    }\n                    else {\n                        global.y = origin.y - offset.y + animationPose.y;\n                        global.skew = origin.skew - offset.skew + animationPose.skew;\n                        global.rotation = origin.rotation - offset.rotation + animationPose.rotation;\n                    }\n                }\n                else {\n                    global.copyFrom(offset);\n                    if (!dragonBones.DragonBones.yDown) {\n                        global.y = -global.y;\n                        global.skew = -global.skew;\n                        global.rotation = -global.rotation;\n                    }\n                    global.add(animationPose);\n                }\n            }\n            else if (this.offsetMode === 0 /* None */) {\n                if (origin !== null) {\n                    global.copyFrom(origin).add(animationPose);\n                }\n                else {\n                    global.copyFrom(animationPose);\n                }\n            }\n            else {\n                inherit = false;\n                global.copyFrom(offset);\n                if (!dragonBones.DragonBones.yDown) {\n                    global.y = -global.y;\n                    global.skew = -global.skew;\n                    global.rotation = -global.rotation;\n                }\n            }\n            if (inherit) {\n                var parentMatrix = parent._boneData.type === 0 /* Bone */ ? parent.globalTransformMatrix : parent._getGlobalTransformMatrix(global.x, global.y);\n                if (boneData.inheritScale) {\n                    if (!boneData.inheritRotation) {\n                        parent.updateGlobalTransform();\n                        if (flipX && flipY) {\n                            rotation = global.rotation - (parent.global.rotation + Math.PI);\n                        }\n                        else if (flipX) {\n                            rotation = global.rotation + parent.global.rotation + Math.PI;\n                        }\n                        else if (flipY) {\n                            rotation = global.rotation + parent.global.rotation;\n                        }\n                        else {\n                            rotation = global.rotation - parent.global.rotation;\n                        }\n                        global.rotation = rotation;\n                    }\n                    global.toMatrix(globalTransformMatrix);\n                    globalTransformMatrix.concat(parentMatrix);\n                    if (boneData.inheritTranslation) {\n                        global.x = globalTransformMatrix.tx;\n                        global.y = globalTransformMatrix.ty;\n                    }\n                    else {\n                        globalTransformMatrix.tx = global.x;\n                        globalTransformMatrix.ty = global.y;\n                    }\n                    if (isCache) {\n                        global.fromMatrix(globalTransformMatrix);\n                    }\n                    else {\n                        this._globalDirty = true;\n                    }\n                }\n                else {\n                    if (boneData.inheritTranslation) {\n                        var x = global.x;\n                        var y = global.y;\n                        global.x = parentMatrix.a * x + parentMatrix.c * y + parentMatrix.tx;\n                        global.y = parentMatrix.b * x + parentMatrix.d * y + parentMatrix.ty;\n                    }\n                    else {\n                        if (flipX) {\n                            global.x = -global.x;\n                        }\n                        if (flipY) {\n                            global.y = -global.y;\n                        }\n                    }\n                    if (boneData.inheritRotation) {\n                        parent.updateGlobalTransform();\n                        if (parent.global.scaleX < 0.0) {\n                            rotation = global.rotation + parent.global.rotation + Math.PI;\n                        }\n                        else {\n                            rotation = global.rotation + parent.global.rotation;\n                        }\n                        if (parentMatrix.a * parentMatrix.d - parentMatrix.b * parentMatrix.c < 0.0) {\n                            rotation -= global.rotation * 2.0;\n                            if (flipX !== flipY || boneData.inheritReflection) {\n                                global.skew += Math.PI;\n                            }\n                            if (!dragonBones.DragonBones.yDown) {\n                                global.skew = -global.skew;\n                            }\n                        }\n                        global.rotation = rotation;\n                    }\n                    else if (flipX || flipY) {\n                        if (flipX && flipY) {\n                            rotation = global.rotation + Math.PI;\n                        }\n                        else {\n                            if (flipX) {\n                                rotation = Math.PI - global.rotation;\n                            }\n                            else {\n                                rotation = -global.rotation;\n                            }\n                            global.skew += Math.PI;\n                        }\n                        global.rotation = rotation;\n                    }\n                    global.toMatrix(globalTransformMatrix);\n                }\n            }\n            else {\n                if (flipX || flipY) {\n                    if (flipX) {\n                        global.x = -global.x;\n                    }\n                    if (flipY) {\n                        global.y = -global.y;\n                    }\n                    if (flipX && flipY) {\n                        rotation = global.rotation + Math.PI;\n                    }\n                    else {\n                        if (flipX) {\n                            rotation = Math.PI - global.rotation;\n                        }\n                        else {\n                            rotation = -global.rotation;\n                        }\n                        global.skew += Math.PI;\n                    }\n                    global.rotation = rotation;\n                }\n                global.toMatrix(globalTransformMatrix);\n            }\n        };\n        /**\n         * @internal\n         */\n        Bone.prototype.init = function (boneData, armatureValue) {\n            if (this._boneData !== null) {\n                return;\n            }\n            this._boneData = boneData;\n            this._armature = armatureValue;\n            if (this._boneData.parent !== null) {\n                this._parent = this._armature.getBone(this._boneData.parent.name);\n            }\n            this._armature._addBone(this);\n            //\n            this.origin = this._boneData.transform;\n        };\n        /**\n         * @internal\n         */\n        Bone.prototype.update = function (cacheFrameIndex) {\n            this._blendState.dirty = false;\n            if (cacheFrameIndex >= 0 && this._cachedFrameIndices !== null) {\n                var cachedFrameIndex = this._cachedFrameIndices[cacheFrameIndex];\n                if (cachedFrameIndex >= 0 && this._cachedFrameIndex === cachedFrameIndex) { // Same cache.\n                    this._transformDirty = false;\n                }\n                else if (cachedFrameIndex >= 0) { // Has been Cached.\n                    this._transformDirty = true;\n                    this._cachedFrameIndex = cachedFrameIndex;\n                }\n                else {\n                    if (this._hasConstraint) { // Update constraints.\n                        for (var _i = 0, _a = this._armature._constraints; _i < _a.length; _i++) {\n                            var constraint = _a[_i];\n                            if (constraint._root === this) {\n                                constraint.update();\n                            }\n                        }\n                    }\n                    if (this._transformDirty ||\n                        (this._parent !== null && this._parent._childrenTransformDirty)) { // Dirty.\n                        this._transformDirty = true;\n                        this._cachedFrameIndex = -1;\n                    }\n                    else if (this._cachedFrameIndex >= 0) { // Same cache, but not set index yet.\n                        this._transformDirty = false;\n                        this._cachedFrameIndices[cacheFrameIndex] = this._cachedFrameIndex;\n                    }\n                    else { // Dirty.\n                        this._transformDirty = true;\n                        this._cachedFrameIndex = -1;\n                    }\n                }\n            }\n            else {\n                if (this._hasConstraint) { // Update constraints.\n                    for (var _b = 0, _c = this._armature._constraints; _b < _c.length; _b++) {\n                        var constraint = _c[_b];\n                        if (constraint._root === this) {\n                            constraint.update();\n                        }\n                    }\n                }\n                if (this._transformDirty || (this._parent !== null && this._parent._childrenTransformDirty)) { // Dirty.\n                    cacheFrameIndex = -1;\n                    this._transformDirty = true;\n                    this._cachedFrameIndex = -1;\n                }\n            }\n            if (this._transformDirty) {\n                this._transformDirty = false;\n                this._childrenTransformDirty = true;\n                //\n                if (this._cachedFrameIndex < 0) {\n                    var isCache = cacheFrameIndex >= 0;\n                    if (this._localDirty) {\n                        this._updateGlobalTransformMatrix(isCache);\n                    }\n                    if (isCache && this._cachedFrameIndices !== null) {\n                        this._cachedFrameIndex = this._cachedFrameIndices[cacheFrameIndex] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global);\n                    }\n                }\n                else {\n                    this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);\n                }\n                //\n            }\n            else if (this._childrenTransformDirty) {\n                this._childrenTransformDirty = false;\n            }\n            this._localDirty = true;\n        };\n        /**\n         * @internal\n         */\n        Bone.prototype.updateByConstraint = function () {\n            if (this._localDirty) {\n                this._localDirty = false;\n                if (this._transformDirty || (this._parent !== null && this._parent._childrenTransformDirty)) {\n                    this._updateGlobalTransformMatrix(true);\n                }\n                this._transformDirty = true;\n            }\n        };\n        /**\n         * - Forces the bone to update the transform in the next frame.\n         * When the bone is not animated or its animation state is finished, the bone will not continue to update,\n         * and when the skeleton must be updated for some reason, the method needs to be called explicitly.\n         * @example\n         * <pre>\n         *     let bone = armature.getBone(\"arm\");\n         *     bone.offset.scaleX = 2.0;\n         *     bone.invalidUpdate();\n         * </pre>\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 强制骨骼在下一帧更新变换。\n         * 当该骨骼没有动画状态或其动画状态播放完成时，骨骼将不在继续更新，而此时由于某些原因必须更新骨骼时，则需要显式调用该方法。\n         * @example\n         * <pre>\n         *     let bone = armature.getBone(\"arm\");\n         *     bone.offset.scaleX = 2.0;\n         *     bone.invalidUpdate();\n         * </pre>\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Bone.prototype.invalidUpdate = function () {\n            this._transformDirty = true;\n        };\n        /**\n         * - Check whether the bone contains a specific bone.\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 检查该骨骼是否包含特定的骨骼。\n         * @see dragonBones.Bone\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Bone.prototype.contains = function (value) {\n            if (value === this) {\n                return false;\n            }\n            var ancestor = value;\n            while (ancestor !== this && ancestor !== null) {\n                ancestor = ancestor.parent;\n            }\n            return ancestor === this;\n        };\n        Object.defineProperty(Bone.prototype, \"boneData\", {\n            /**\n             * - The bone data.\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 骨骼数据。\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._boneData;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Bone.prototype, \"visible\", {\n            /**\n             * - The visible of all slots in the bone.\n             * @default true\n             * @see dragonBones.Slot#visible\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 此骨骼所有插槽的可见。\n             * @default true\n             * @see dragonBones.Slot#visible\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._visible;\n            },\n            set: function (value) {\n                if (this._visible === value) {\n                    return;\n                }\n                this._visible = value;\n                for (var _i = 0, _a = this._armature.getSlots(); _i < _a.length; _i++) {\n                    var slot = _a[_i];\n                    if (slot.parent === this) {\n                        slot._updateVisible();\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Bone.prototype, \"name\", {\n            /**\n             * - The bone name.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 骨骼名称。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._boneData.name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Bone.prototype, \"parent\", {\n            /**\n             * - The parent bone to which it belongs.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 所属的父骨骼。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * - Deprecated, please refer to {@link dragonBones.Armature#getBones()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link dragonBones.Armature#getBones()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Bone.prototype.getBones = function () {\n            console.warn(\"Deprecated.\");\n            var bones = new Array();\n            for (var _i = 0, _a = this._armature.getBones(); _i < _a.length; _i++) {\n                var bone = _a[_i];\n                if (bone.parent === this) {\n                    bones.push(bone);\n                }\n            }\n            return bones;\n        };\n        /**\n         * - Deprecated, please refer to {@link dragonBones.Armature#getSlots()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link dragonBones.Armature#getSlots()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Bone.prototype.getSlots = function () {\n            console.warn(\"Deprecated.\");\n            var slots = new Array();\n            for (var _i = 0, _a = this._armature.getSlots(); _i < _a.length; _i++) {\n                var slot = _a[_i];\n                if (slot.parent === this) {\n                    slots.push(slot);\n                }\n            }\n            return slots;\n        };\n        Object.defineProperty(Bone.prototype, \"slot\", {\n            /**\n             * - Deprecated, please refer to {@link dragonBones.Armature#getSlot()}.\n             * @deprecated\n             * @language en_US\n             */\n            /**\n             * - 已废弃，请参考 {@link dragonBones.Armature#getSlot()}。\n             * @deprecated\n             * @language zh_CN\n             */\n            get: function () {\n                console.warn(\"Deprecated.\");\n                for (var _i = 0, _a = this._armature.getSlots(); _i < _a.length; _i++) {\n                    var slot = _a[_i];\n                    if (slot.parent === this) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Bone;\n    }(dragonBones.TransformObject));\n    dragonBones.Bone = Bone;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var Surface = /** @class */ (function (_super) {\n        __extends(Surface, _super);\n        function Surface() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._vertices = [];\n            _this._deformVertices = [];\n            /**\n             * - x1, y1, x2, y2, x3, y3, x4, y4, d1X, d1Y, d2X, d2Y\n             */\n            _this._hullCache = [];\n            /**\n             * - Inside [flag, a, b, c, d, tx, ty], Outside [flag, a, b, c, d, tx, ty]\n             */\n            _this._matrixCahce = [];\n            return _this;\n        }\n        Surface.toString = function () {\n            return \"[class dragonBones.Surface]\";\n        };\n        Surface.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this._dX = 0.0;\n            this._dY = 0.0;\n            this._k = 0.0;\n            this._kX = 0.0;\n            this._kY = 0.0;\n            this._vertices.length = 0;\n            this._deformVertices.length = 0;\n            this._matrixCahce.length = 0;\n            this._hullCache.length = 0;\n        };\n        Surface.prototype._getAffineTransform = function (x, y, lX, lY, aX, aY, bX, bY, cX, cY, transform, matrix, isDown) {\n            var dabX = bX - aX;\n            var dabY = bY - aY;\n            var dacX = cX - aX;\n            var dacY = cY - aY;\n            transform.rotation = Math.atan2(dabY, dabX);\n            transform.skew = Math.atan2(dacY, dacX) - Math.PI * 0.5 - transform.rotation;\n            if (isDown) {\n                transform.rotation += Math.PI;\n            }\n            transform.scaleX = Math.sqrt(dabX * dabX + dabY * dabY) / lX;\n            transform.scaleY = Math.sqrt(dacX * dacX + dacY * dacY) / lY;\n            transform.toMatrix(matrix);\n            transform.x = matrix.tx = aX - (matrix.a * x + matrix.c * y);\n            transform.y = matrix.ty = aY - (matrix.b * x + matrix.d * y);\n        };\n        Surface.prototype._updateVertices = function () {\n            var originalVertices = this._boneData.vertices;\n            var vertices = this._vertices;\n            var animationVertices = this._deformVertices;\n            if (this._parent !== null) {\n                if (this._parent._boneData.type === 1 /* Surface */) {\n                    for (var i = 0, l = originalVertices.length; i < l; i += 2) {\n                        var x = originalVertices[i] + animationVertices[i];\n                        var y = originalVertices[i + 1] + animationVertices[i];\n                        var matrix = this._parent._getGlobalTransformMatrix(x, y);\n                        //\n                        vertices[i] = matrix.a * x + matrix.c * y + matrix.tx;\n                        vertices[i + 1] = matrix.b * x + matrix.d * y + matrix.ty;\n                    }\n                }\n                else {\n                    var parentMatrix = this._parent.globalTransformMatrix;\n                    for (var i = 0, l = originalVertices.length; i < l; i += 2) {\n                        var x = originalVertices[i] + animationVertices[i];\n                        var y = originalVertices[i + 1] + animationVertices[i + 1];\n                        //\n                        vertices[i] = parentMatrix.a * x + parentMatrix.c * y + parentMatrix.tx;\n                        vertices[i + 1] = parentMatrix.b * x + parentMatrix.d * y + parentMatrix.ty;\n                    }\n                }\n            }\n            else {\n                for (var i = 0, l = originalVertices.length; i < l; i += 2) {\n                    vertices[i] = originalVertices[i] + animationVertices[i];\n                    vertices[i + 1] = originalVertices[i + 1] + animationVertices[i + 1];\n                }\n            }\n        };\n        Surface.prototype._updateGlobalTransformMatrix = function (isCache) {\n            // tslint:disable-next-line:no-unused-expression\n            isCache;\n            var segmentXD = this._boneData.segmentX * 2;\n            var lastIndex = this._vertices.length - 2;\n            var lA = 200.0;\n            //\n            var raX = this._vertices[0];\n            var raY = this._vertices[1];\n            var rbX = this._vertices[segmentXD];\n            var rbY = this._vertices[segmentXD + 1];\n            var rcX = this._vertices[lastIndex];\n            var rcY = this._vertices[lastIndex + 1];\n            var rdX = this._vertices[lastIndex - segmentXD];\n            var rdY = this._vertices[lastIndex - segmentXD + 1];\n            //\n            var dacX = raX + (rcX - raX) * 0.5;\n            var dacY = raY + (rcY - raY) * 0.5;\n            var dbdX = rbX + (rdX - rbX) * 0.5;\n            var dbdY = rbY + (rdY - rbY) * 0.5;\n            var aX = dacX + (dbdX - dacX) * 0.5;\n            var aY = dacY + (dbdY - dacY) * 0.5;\n            var bX = rbX + (rcX - rbX) * 0.5;\n            var bY = rbY + (rcY - rbY) * 0.5;\n            var cX = rdX + (rcX - rdX) * 0.5;\n            var cY = rdY + (rcY - rdY) * 0.5;\n            //\n            this._globalDirty = false;\n            this._getAffineTransform(0.0, 0.0, lA, lA, aX, aY, bX, bY, cX, cY, this.global, this.globalTransformMatrix, false);\n        };\n        Surface.prototype._getGlobalTransformMatrix = function (x, y) {\n            var lB = 1000.0;\n            if (x < -lB || lB < x || y < -lB || lB < y) {\n                return this.globalTransformMatrix;\n            }\n            var isDown = false;\n            var lA = 200.0;\n            var surfaceData = this._boneData;\n            var segmentX = surfaceData.segmentX;\n            var segmentY = surfaceData.segmentY;\n            var segmentXD = surfaceData.segmentX * 2;\n            var dX = this._dX;\n            var dY = this._dY;\n            var indexX = Math.floor((x + lA) / dX); // -1 ~ segmentX - 1\n            var indexY = Math.floor((y + lA) / dY); // -1 ~ segmentY - 1\n            var matrixIndex = 0;\n            var pX = indexX * dX - lA;\n            var pY = indexY * dY - lA;\n            var matrices = this._matrixCahce;\n            var helpMatrix = Surface._helpMatrix;\n            if (x < -lA) {\n                if (y < -lA || y >= lA) { // Out.\n                    return this.globalTransformMatrix;\n                }\n                // Left.\n                isDown = y > this._kX * (x + lA) + pY;\n                matrixIndex = ((segmentX * (segmentY + 1) + segmentX * 2 + segmentY + indexY) * 2 + (isDown ? 1 : 0)) * 7;\n                if (this._matrixCahce[matrixIndex] > 0.0) {\n                    helpMatrix.copyFromArray(matrices, matrixIndex + 1);\n                }\n                else {\n                    var vertexIndex = indexY * (segmentXD + 2);\n                    var ddX = this._hullCache[4];\n                    var ddY = this._hullCache[5];\n                    var sX = this._hullCache[2] - (segmentY - indexY) * ddX;\n                    var sY = this._hullCache[3] - (segmentY - indexY) * ddY;\n                    var vertices = this._vertices;\n                    if (isDown) {\n                        this._getAffineTransform(-lA, pY + dY, lB - lA, dY, vertices[vertexIndex + segmentXD + 2], vertices[vertexIndex + segmentXD + 3], sX + ddX, sY + ddY, vertices[vertexIndex], vertices[vertexIndex + 1], Surface._helpTransform, helpMatrix, true);\n                    }\n                    else {\n                        this._getAffineTransform(-lB, pY, lB - lA, dY, sX, sY, vertices[vertexIndex], vertices[vertexIndex + 1], sX + ddX, sY + ddY, Surface._helpTransform, helpMatrix, false);\n                    }\n                    matrices[matrixIndex] = 1.0;\n                    matrices[matrixIndex + 1] = helpMatrix.a;\n                    matrices[matrixIndex + 2] = helpMatrix.b;\n                    matrices[matrixIndex + 3] = helpMatrix.c;\n                    matrices[matrixIndex + 4] = helpMatrix.d;\n                    matrices[matrixIndex + 5] = helpMatrix.tx;\n                    matrices[matrixIndex + 6] = helpMatrix.ty;\n                }\n            }\n            else if (x >= lA) {\n                if (y < -lA || y >= lA) { // Out.\n                    return this.globalTransformMatrix;\n                }\n                // Right.\n                isDown = y > this._kX * (x - lB) + pY;\n                matrixIndex = ((segmentX * (segmentY + 1) + segmentX + indexY) * 2 + (isDown ? 1 : 0)) * 7;\n                if (this._matrixCahce[matrixIndex] > 0.0) {\n                    helpMatrix.copyFromArray(matrices, matrixIndex + 1);\n                }\n                else {\n                    var vertexIndex = (indexY + 1) * (segmentXD + 2) - 2;\n                    var ddX = this._hullCache[4];\n                    var ddY = this._hullCache[5];\n                    var sX = this._hullCache[0] + indexY * ddX;\n                    var sY = this._hullCache[1] + indexY * ddY;\n                    var vertices = this._vertices;\n                    if (isDown) {\n                        this._getAffineTransform(lB, pY + dY, lB - lA, dY, sX + ddX, sY + ddY, vertices[vertexIndex + segmentXD + 2], vertices[vertexIndex + segmentXD + 3], sX, sY, Surface._helpTransform, helpMatrix, true);\n                    }\n                    else {\n                        this._getAffineTransform(lA, pY, lB - lA, dY, vertices[vertexIndex], vertices[vertexIndex + 1], sX, sY, vertices[vertexIndex + segmentXD + 2], vertices[vertexIndex + segmentXD + 3], Surface._helpTransform, helpMatrix, false);\n                    }\n                    matrices[matrixIndex] = 1.0;\n                    matrices[matrixIndex + 1] = helpMatrix.a;\n                    matrices[matrixIndex + 2] = helpMatrix.b;\n                    matrices[matrixIndex + 3] = helpMatrix.c;\n                    matrices[matrixIndex + 4] = helpMatrix.d;\n                    matrices[matrixIndex + 5] = helpMatrix.tx;\n                    matrices[matrixIndex + 6] = helpMatrix.ty;\n                }\n            }\n            else if (y < -lA) {\n                if (x < -lA || x >= lA) { // Out.\n                    return this.globalTransformMatrix;\n                }\n                // Up.\n                isDown = y > this._kY * (x - pX - dX) - lB;\n                matrixIndex = (segmentX * (segmentY + 1) + indexX * 2 + (isDown ? 1 : 0)) * 7;\n                if (this._matrixCahce[matrixIndex] > 0.0) {\n                    helpMatrix.copyFromArray(matrices, matrixIndex + 1);\n                }\n                else {\n                    var vertexIndex = indexX * 2;\n                    var ddX = this._hullCache[10];\n                    var ddY = this._hullCache[11];\n                    var sX = this._hullCache[8] + indexX * ddX;\n                    var sY = this._hullCache[9] + indexX * ddY;\n                    var vertices = this._vertices;\n                    if (isDown) {\n                        this._getAffineTransform(pX + dX, -lA, dX, lB - lA, vertices[vertexIndex + 2], vertices[vertexIndex + 3], vertices[vertexIndex], vertices[vertexIndex + 1], sX + ddX, sY + ddY, Surface._helpTransform, helpMatrix, true);\n                    }\n                    else {\n                        this._getAffineTransform(pX, -lB, dX, lB - lA, sX, sY, sX + ddX, sY + ddY, vertices[vertexIndex], vertices[vertexIndex + 1], Surface._helpTransform, helpMatrix, false);\n                    }\n                    matrices[matrixIndex] = 1.0;\n                    matrices[matrixIndex + 1] = helpMatrix.a;\n                    matrices[matrixIndex + 2] = helpMatrix.b;\n                    matrices[matrixIndex + 3] = helpMatrix.c;\n                    matrices[matrixIndex + 4] = helpMatrix.d;\n                    matrices[matrixIndex + 5] = helpMatrix.tx;\n                    matrices[matrixIndex + 6] = helpMatrix.ty;\n                }\n            }\n            else if (y >= lA) {\n                if (x < -lA || x >= lA) { //  Out.\n                    return this.globalTransformMatrix;\n                }\n                // Down\n                isDown = y > this._kY * (x - pX - dX) + lA;\n                matrixIndex = ((segmentX * (segmentY + 1) + segmentX + segmentY + indexY) * 2 + (isDown ? 1 : 0)) * 7;\n                if (this._matrixCahce[matrixIndex] > 0.0) {\n                    helpMatrix.copyFromArray(matrices, matrixIndex + 1);\n                }\n                else {\n                    var vertexIndex = segmentY * (segmentXD + 2) + indexX * 2;\n                    var ddX = this._hullCache[10];\n                    var ddY = this._hullCache[11];\n                    var sX = this._hullCache[6] - (segmentX - indexX) * ddX;\n                    var sY = this._hullCache[7] - (segmentX - indexX) * ddY;\n                    var vertices = this._vertices;\n                    if (isDown) {\n                        this._getAffineTransform(pX + dX, lB, dX, lB - lA, sX + ddX, sY + ddY, sX, sY, vertices[vertexIndex + 2], vertices[vertexIndex + 3], Surface._helpTransform, helpMatrix, true);\n                    }\n                    else {\n                        this._getAffineTransform(pX, lA, dX, lB - lA, vertices[vertexIndex], vertices[vertexIndex + 1], vertices[vertexIndex + 2], vertices[vertexIndex + 3], sX, sY, Surface._helpTransform, helpMatrix, false);\n                    }\n                    matrices[matrixIndex] = 1.0;\n                    matrices[matrixIndex + 1] = helpMatrix.a;\n                    matrices[matrixIndex + 2] = helpMatrix.b;\n                    matrices[matrixIndex + 3] = helpMatrix.c;\n                    matrices[matrixIndex + 4] = helpMatrix.d;\n                    matrices[matrixIndex + 5] = helpMatrix.tx;\n                    matrices[matrixIndex + 6] = helpMatrix.ty;\n                }\n            }\n            else { // Center.\n                isDown = y > this._k * (x - pX - dX) + pY;\n                matrixIndex = ((segmentX * indexY + indexX) * 2 + (isDown ? 1 : 0)) * 7;\n                if (this._matrixCahce[matrixIndex] > 0.0) {\n                    helpMatrix.copyFromArray(matrices, matrixIndex + 1);\n                }\n                else {\n                    var vertexIndex = indexX * 2 + indexY * (segmentXD + 2);\n                    var vertices = this._vertices;\n                    if (isDown) {\n                        this._getAffineTransform(pX + dX, pY + dY, dX, dY, vertices[vertexIndex + segmentXD + 4], vertices[vertexIndex + segmentXD + 5], vertices[vertexIndex + segmentXD + 2], vertices[vertexIndex + segmentXD + 3], vertices[vertexIndex + 2], vertices[vertexIndex + 3], Surface._helpTransform, helpMatrix, true);\n                    }\n                    else {\n                        this._getAffineTransform(pX, pY, dX, dY, vertices[vertexIndex], vertices[vertexIndex + 1], vertices[vertexIndex + 2], vertices[vertexIndex + 3], vertices[vertexIndex + segmentXD + 2], vertices[vertexIndex + segmentXD + 3], Surface._helpTransform, helpMatrix, false);\n                    }\n                    matrices[matrixIndex] = 1.0;\n                    matrices[matrixIndex + 1] = helpMatrix.a;\n                    matrices[matrixIndex + 2] = helpMatrix.b;\n                    matrices[matrixIndex + 3] = helpMatrix.c;\n                    matrices[matrixIndex + 4] = helpMatrix.d;\n                    matrices[matrixIndex + 5] = helpMatrix.tx;\n                    matrices[matrixIndex + 6] = helpMatrix.ty;\n                }\n            }\n            return helpMatrix;\n        };\n        /**\n         * @internal\n         * @private\n         */\n        Surface.prototype.init = function (surfaceData, armatureValue) {\n            if (this._boneData !== null) {\n                return;\n            }\n            _super.prototype.init.call(this, surfaceData, armatureValue);\n            var segmentX = surfaceData.segmentX;\n            var segmentY = surfaceData.segmentY;\n            var vertexCount = surfaceData.vertices.length;\n            var lB = 1000.0;\n            var lA = 200.0;\n            //\n            this._dX = lA * 2.0 / segmentX;\n            this._dY = lA * 2.0 / segmentY;\n            this._k = -this._dY / this._dX;\n            this._kX = -this._dY / (lB - lA);\n            this._kY = -(lB - lA) / this._dX;\n            this._vertices.length = vertexCount;\n            this._deformVertices.length = vertexCount;\n            this._matrixCahce.length = (segmentX * segmentY + segmentX * 2 + segmentY * 2) * 2 * 7;\n            this._hullCache.length = 10;\n            for (var i = 0; i < vertexCount; ++i) {\n                this._deformVertices[i] = 0.0;\n            }\n        };\n        /**\n         * @internal\n         */\n        Surface.prototype.update = function (cacheFrameIndex) {\n            this._blendState.dirty = false;\n            if (cacheFrameIndex >= 0 && this._cachedFrameIndices !== null) {\n                var cachedFrameIndex = this._cachedFrameIndices[cacheFrameIndex];\n                if (cachedFrameIndex >= 0 && this._cachedFrameIndex === cachedFrameIndex) { // Same cache.\n                    this._transformDirty = false;\n                }\n                else if (cachedFrameIndex >= 0) { // Has been Cached.\n                    this._transformDirty = true;\n                    this._cachedFrameIndex = cachedFrameIndex;\n                }\n                else {\n                    if (this._hasConstraint) { // Update constraints.\n                        for (var _i = 0, _a = this._armature._constraints; _i < _a.length; _i++) {\n                            var constraint = _a[_i];\n                            if (constraint._root === this) {\n                                constraint.update();\n                            }\n                        }\n                    }\n                    if (this._transformDirty ||\n                        (this._parent !== null && this._parent._childrenTransformDirty)) { // Dirty.\n                        this._transformDirty = true;\n                        this._cachedFrameIndex = -1;\n                    }\n                    else if (this._cachedFrameIndex >= 0) { // Same cache, but not set index yet.\n                        this._transformDirty = false;\n                        this._cachedFrameIndices[cacheFrameIndex] = this._cachedFrameIndex;\n                    }\n                    else { // Dirty.\n                        this._transformDirty = true;\n                        this._cachedFrameIndex = -1;\n                    }\n                }\n            }\n            else {\n                if (this._hasConstraint) { // Update constraints.\n                    for (var _b = 0, _c = this._armature._constraints; _b < _c.length; _b++) {\n                        var constraint = _c[_b];\n                        if (constraint._root === this) {\n                            constraint.update();\n                        }\n                    }\n                }\n                if (this._transformDirty || (this._parent !== null && this._parent._childrenTransformDirty)) { // Dirty.\n                    cacheFrameIndex = -1;\n                    this._transformDirty = true;\n                    this._cachedFrameIndex = -1;\n                }\n            }\n            if (this._transformDirty) {\n                this._transformDirty = false;\n                this._childrenTransformDirty = true;\n                //\n                for (var i = 0, l = this._matrixCahce.length; i < l; i += 7) {\n                    this._matrixCahce[i] = -1.0;\n                }\n                //\n                this._updateVertices();\n                //\n                if (this._cachedFrameIndex < 0) {\n                    var isCache = cacheFrameIndex >= 0;\n                    if (this._localDirty) {\n                        this._updateGlobalTransformMatrix(isCache);\n                    }\n                    if (isCache && this._cachedFrameIndices !== null) {\n                        this._cachedFrameIndex = this._cachedFrameIndices[cacheFrameIndex] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global);\n                    }\n                }\n                else {\n                    this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);\n                }\n                // Update hull vertices.\n                var lB = 1000.0;\n                var lA = 200.0;\n                var ddX = 2 * this.global.x;\n                var ddY = 2 * this.global.y;\n                //\n                var helpPoint = Surface._helpPoint;\n                this.globalTransformMatrix.transformPoint(lB, -lA, helpPoint);\n                this._hullCache[0] = helpPoint.x;\n                this._hullCache[1] = helpPoint.y;\n                this._hullCache[2] = ddX - helpPoint.x;\n                this._hullCache[3] = ddY - helpPoint.y;\n                this.globalTransformMatrix.transformPoint(0.0, this._dY, helpPoint, true);\n                this._hullCache[4] = helpPoint.x;\n                this._hullCache[5] = helpPoint.y;\n                //\n                this.globalTransformMatrix.transformPoint(lA, lB, helpPoint);\n                this._hullCache[6] = helpPoint.x;\n                this._hullCache[7] = helpPoint.y;\n                this._hullCache[8] = ddX - helpPoint.x;\n                this._hullCache[9] = ddY - helpPoint.y;\n                this.globalTransformMatrix.transformPoint(this._dX, 0.0, helpPoint, true);\n                this._hullCache[10] = helpPoint.x;\n                this._hullCache[11] = helpPoint.y;\n            }\n            else if (this._childrenTransformDirty) {\n                this._childrenTransformDirty = false;\n            }\n            this._localDirty = true;\n        };\n        return Surface;\n    }(dragonBones.Bone));\n    dragonBones.Surface = Surface;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The slot attached to the armature, controls the display status and properties of the display object.\n     * A bone can contain multiple slots.\n     * A slot can contain multiple display objects, displaying only one of the display objects at a time,\n     * but you can toggle the display object into frame animation while the animation is playing.\n     * The display object can be a normal texture, or it can be a display of a child armature, a grid display object,\n     * and a custom other display object.\n     * @see dragonBones.Armature\n     * @see dragonBones.Bone\n     * @see dragonBones.SlotData\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 插槽附着在骨骼上，控制显示对象的显示状态和属性。\n     * 一个骨骼上可以包含多个插槽。\n     * 一个插槽中可以包含多个显示对象，同一时间只能显示其中的一个显示对象，但可以在动画播放的过程中切换显示对象实现帧动画。\n     * 显示对象可以是普通的图片纹理，也可以是子骨架的显示容器，网格显示对象，还可以是自定义的其他显示对象。\n     * @see dragonBones.Armature\n     * @see dragonBones.Bone\n     * @see dragonBones.SlotData\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Slot = /** @class */ (function (_super) {\n        __extends(Slot, _super);\n        function Slot() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._localMatrix = new dragonBones.Matrix();\n            /**\n             * @internal\n             */\n            _this._colorTransform = new dragonBones.ColorTransform();\n            _this._displayDatas = [];\n            _this._displayList = [];\n            /**\n             * @internal\n             */\n            _this._deformVertices = null;\n            _this._rawDisplay = null; // Initial value.\n            _this._meshDisplay = null; // Initial value.\n            return _this;\n        }\n        Slot.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            var disposeDisplayList = [];\n            for (var _i = 0, _a = this._displayList; _i < _a.length; _i++) {\n                var eachDisplay = _a[_i];\n                if (eachDisplay !== null && eachDisplay !== this._rawDisplay && eachDisplay !== this._meshDisplay &&\n                    disposeDisplayList.indexOf(eachDisplay) < 0) {\n                    disposeDisplayList.push(eachDisplay);\n                }\n            }\n            for (var _b = 0, disposeDisplayList_1 = disposeDisplayList; _b < disposeDisplayList_1.length; _b++) {\n                var eachDisplay = disposeDisplayList_1[_b];\n                if (eachDisplay instanceof dragonBones.Armature) {\n                    eachDisplay.dispose();\n                }\n                else {\n                    this._disposeDisplay(eachDisplay, true);\n                }\n            }\n            if (this._deformVertices !== null) {\n                this._deformVertices.returnToPool();\n            }\n            if (this._meshDisplay !== null && this._meshDisplay !== this._rawDisplay) { // May be _meshDisplay and _rawDisplay is the same one.\n                this._disposeDisplay(this._meshDisplay, false);\n            }\n            if (this._rawDisplay !== null) {\n                this._disposeDisplay(this._rawDisplay, false);\n            }\n            this.displayController = null;\n            this._displayDirty = false;\n            this._zOrderDirty = false;\n            this._blendModeDirty = false;\n            this._colorDirty = false;\n            this._transformDirty = false;\n            this._visible = true;\n            this._blendMode = 0 /* Normal */;\n            this._displayIndex = -1;\n            this._animationDisplayIndex = -1;\n            this._zOrder = 0;\n            this._cachedFrameIndex = -1;\n            this._pivotX = 0.0;\n            this._pivotY = 0.0;\n            this._localMatrix.identity();\n            this._colorTransform.identity();\n            this._displayList.length = 0;\n            this._displayDatas.length = 0;\n            this._slotData = null; //\n            this._rawDisplayDatas = null;\n            this._displayData = null;\n            this._boundingBoxData = null;\n            this._textureData = null;\n            this._deformVertices = null;\n            this._rawDisplay = null;\n            this._meshDisplay = null;\n            this._display = null;\n            this._childArmature = null;\n            this._parent = null; //\n            this._cachedFrameIndices = null;\n        };\n        /**\n         * - Support default skin data.\n         */\n        Slot.prototype._getDefaultRawDisplayData = function (displayIndex) {\n            var defaultSkin = this._armature._armatureData.defaultSkin;\n            if (defaultSkin !== null) {\n                var defaultRawDisplayDatas = defaultSkin.getDisplays(this._slotData.name);\n                if (defaultRawDisplayDatas !== null) {\n                    return displayIndex < defaultRawDisplayDatas.length ? defaultRawDisplayDatas[displayIndex] : null;\n                }\n            }\n            return null;\n        };\n        Slot.prototype._updateDisplayData = function () {\n            var prevDisplayData = this._displayData;\n            var prevVerticesData = this._deformVertices !== null ? this._deformVertices.verticesData : null;\n            var prevTextureData = this._textureData;\n            var rawDisplayData = null;\n            var currentVerticesData = null;\n            this._displayData = null;\n            this._boundingBoxData = null;\n            this._textureData = null;\n            if (this._displayIndex >= 0) {\n                if (this._rawDisplayDatas !== null) {\n                    rawDisplayData = this._displayIndex < this._rawDisplayDatas.length ? this._rawDisplayDatas[this._displayIndex] : null;\n                }\n                if (rawDisplayData === null) {\n                    rawDisplayData = this._getDefaultRawDisplayData(this._displayIndex);\n                }\n                if (this._displayIndex < this._displayDatas.length) {\n                    this._displayData = this._displayDatas[this._displayIndex];\n                }\n            }\n            if (this._displayData !== null) {\n                if (this._displayData.type === 2 /* Mesh */) {\n                    currentVerticesData = this._displayData.vertices;\n                }\n                else if (this._displayData.type === 4 /* Path */) {\n                    currentVerticesData = this._displayData.vertices;\n                }\n                else if (rawDisplayData !== null) {\n                    if (rawDisplayData.type === 2 /* Mesh */) {\n                        currentVerticesData = rawDisplayData.vertices;\n                    }\n                    else if (rawDisplayData.type === 4 /* Path */) {\n                        currentVerticesData = rawDisplayData.vertices;\n                    }\n                }\n                if (this._displayData.type === 3 /* BoundingBox */) {\n                    this._boundingBoxData = this._displayData.boundingBox;\n                }\n                else if (rawDisplayData !== null) {\n                    if (rawDisplayData.type === 3 /* BoundingBox */) {\n                        this._boundingBoxData = rawDisplayData.boundingBox;\n                    }\n                }\n                if (this._displayData.type === 0 /* Image */) {\n                    this._textureData = this._displayData.texture;\n                }\n                else if (this._displayData.type === 2 /* Mesh */) {\n                    this._textureData = this._displayData.texture;\n                }\n            }\n            if (this._displayData !== prevDisplayData || currentVerticesData !== prevVerticesData || this._textureData !== prevTextureData) {\n                // Update pivot offset.\n                if (currentVerticesData === null && this._textureData !== null) { // TODO\n                    var imageDisplayData = this._displayData;\n                    var scale = this._textureData.parent.scale * this._armature._armatureData.scale;\n                    var frame = this._textureData.frame;\n                    this._pivotX = imageDisplayData.pivot.x;\n                    this._pivotY = imageDisplayData.pivot.y;\n                    var rect = frame !== null ? frame : this._textureData.region;\n                    var width = rect.width;\n                    var height = rect.height;\n                    if (this._textureData.rotated && frame === null) {\n                        width = rect.height;\n                        height = rect.width;\n                    }\n                    this._pivotX *= width * scale;\n                    this._pivotY *= height * scale;\n                    if (frame !== null) {\n                        this._pivotX += frame.x * scale;\n                        this._pivotY += frame.y * scale;\n                    }\n                    // Update replace pivot. TODO\n                    if (this._displayData !== null && rawDisplayData !== null && this._displayData !== rawDisplayData) {\n                        rawDisplayData.transform.toMatrix(Slot._helpMatrix);\n                        Slot._helpMatrix.invert();\n                        Slot._helpMatrix.transformPoint(0.0, 0.0, Slot._helpPoint);\n                        this._pivotX -= Slot._helpPoint.x;\n                        this._pivotY -= Slot._helpPoint.y;\n                        this._displayData.transform.toMatrix(Slot._helpMatrix);\n                        Slot._helpMatrix.invert();\n                        Slot._helpMatrix.transformPoint(0.0, 0.0, Slot._helpPoint);\n                        this._pivotX += Slot._helpPoint.x;\n                        this._pivotY += Slot._helpPoint.y;\n                    }\n                    if (!dragonBones.DragonBones.yDown) {\n                        this._pivotY = (this._textureData.rotated ? this._textureData.region.width : this._textureData.region.height) * scale - this._pivotY;\n                    }\n                }\n                else {\n                    this._pivotX = 0.0;\n                    this._pivotY = 0.0;\n                }\n                // Update original transform.\n                if (rawDisplayData !== null) { // Compatible.\n                    this.origin = rawDisplayData.transform;\n                }\n                else if (this._displayData !== null) { // Compatible.\n                    this.origin = this._displayData.transform;\n                }\n                else {\n                    this.origin = null;\n                }\n                // Update vertices.\n                if (currentVerticesData !== prevVerticesData) {\n                    if (this._deformVertices === null) {\n                        this._deformVertices = dragonBones.BaseObject.borrowObject(dragonBones.DeformVertices);\n                    }\n                    this._deformVertices.init(currentVerticesData, this._armature);\n                }\n                else if (this._deformVertices !== null && this._textureData !== prevTextureData) { // Update mesh after update frame.\n                    this._deformVertices.verticesDirty = true;\n                }\n                this._displayDirty = true;\n                this._transformDirty = true;\n            }\n        };\n        Slot.prototype._updateDisplay = function () {\n            var prevDisplay = this._display !== null ? this._display : this._rawDisplay;\n            var prevChildArmature = this._childArmature;\n            // Update display and child armature.\n            if (this._displayIndex >= 0 && this._displayIndex < this._displayList.length) {\n                this._display = this._displayList[this._displayIndex];\n                if (this._display !== null && this._display instanceof dragonBones.Armature) {\n                    this._childArmature = this._display;\n                    this._display = this._childArmature.display;\n                }\n                else {\n                    this._childArmature = null;\n                }\n            }\n            else {\n                this._display = null;\n                this._childArmature = null;\n            }\n            // Update display.\n            var currentDisplay = this._display !== null ? this._display : this._rawDisplay;\n            if (currentDisplay !== prevDisplay) {\n                this._onUpdateDisplay();\n                this._replaceDisplay(prevDisplay);\n                this._transformDirty = true;\n                this._visibleDirty = true;\n                this._blendModeDirty = true;\n                this._colorDirty = true;\n            }\n            // Update frame.\n            if (currentDisplay === this._rawDisplay || currentDisplay === this._meshDisplay) {\n                this._updateFrame();\n            }\n            // Update child armature.\n            if (this._childArmature !== prevChildArmature) {\n                if (prevChildArmature !== null) {\n                    prevChildArmature._parent = null; // Update child armature parent.\n                    prevChildArmature.clock = null;\n                    if (prevChildArmature.inheritAnimation) {\n                        prevChildArmature.animation.reset();\n                    }\n                }\n                if (this._childArmature !== null) {\n                    this._childArmature._parent = this; // Update child armature parent.\n                    this._childArmature.clock = this._armature.clock;\n                    if (this._childArmature.inheritAnimation) { // Set child armature cache frameRate.\n                        if (this._childArmature.cacheFrameRate === 0) {\n                            var cacheFrameRate = this._armature.cacheFrameRate;\n                            if (cacheFrameRate !== 0) {\n                                this._childArmature.cacheFrameRate = cacheFrameRate;\n                            }\n                        }\n                        // Child armature action.\n                        var actions = null;\n                        if (this._displayData !== null && this._displayData.type === 1 /* Armature */) {\n                            actions = this._displayData.actions;\n                        }\n                        else if (this._displayIndex >= 0 && this._rawDisplayDatas !== null) {\n                            var rawDisplayData = this._displayIndex < this._rawDisplayDatas.length ? this._rawDisplayDatas[this._displayIndex] : null;\n                            if (rawDisplayData === null) {\n                                rawDisplayData = this._getDefaultRawDisplayData(this._displayIndex);\n                            }\n                            if (rawDisplayData !== null && rawDisplayData.type === 1 /* Armature */) {\n                                actions = rawDisplayData.actions;\n                            }\n                        }\n                        if (actions !== null && actions.length > 0) {\n                            for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {\n                                var action = actions_1[_i];\n                                var eventObject = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                                dragonBones.EventObject.actionDataToInstance(action, eventObject, this._armature);\n                                eventObject.slot = this;\n                                this._armature._bufferAction(eventObject, false);\n                            }\n                        }\n                        else {\n                            this._childArmature.animation.play();\n                        }\n                    }\n                }\n            }\n        };\n        Slot.prototype._updateGlobalTransformMatrix = function (isCache) {\n            var parentMatrix = this._parent._boneData.type === 0 /* Bone */ ? this._parent.globalTransformMatrix : this._parent._getGlobalTransformMatrix(this.global.x, this.global.y);\n            this.globalTransformMatrix.copyFrom(this._localMatrix);\n            this.globalTransformMatrix.concat(parentMatrix);\n            if (isCache) {\n                this.global.fromMatrix(this.globalTransformMatrix);\n            }\n            else {\n                this._globalDirty = true;\n            }\n        };\n        /**\n         * @internal\n         */\n        Slot.prototype._setDisplayIndex = function (value, isAnimation) {\n            if (isAnimation === void 0) { isAnimation = false; }\n            if (isAnimation) {\n                if (this._animationDisplayIndex === value) {\n                    return false;\n                }\n                this._animationDisplayIndex = value;\n            }\n            if (this._displayIndex === value) {\n                return false;\n            }\n            this._displayIndex = value;\n            this._displayDirty = true;\n            this._updateDisplayData();\n            return this._displayDirty;\n        };\n        /**\n         * @internal\n         */\n        Slot.prototype._setZorder = function (value) {\n            if (this._zOrder === value) {\n                //return false;\n            }\n            this._zOrder = value;\n            this._zOrderDirty = true;\n            return this._zOrderDirty;\n        };\n        /**\n         * @internal\n         */\n        Slot.prototype._setColor = function (value) {\n            this._colorTransform.copyFrom(value);\n            this._colorDirty = true;\n            return this._colorDirty;\n        };\n        /**\n         * @internal\n         */\n        Slot.prototype._setDisplayList = function (value) {\n            if (value !== null && value.length > 0) {\n                if (this._displayList.length !== value.length) {\n                    this._displayList.length = value.length;\n                }\n                for (var i = 0, l = value.length; i < l; ++i) { // Retain input render displays.\n                    var eachDisplay = value[i];\n                    if (eachDisplay !== null && eachDisplay !== this._rawDisplay && eachDisplay !== this._meshDisplay &&\n                        !(eachDisplay instanceof dragonBones.Armature) && this._displayList.indexOf(eachDisplay) < 0) {\n                        this._initDisplay(eachDisplay, true);\n                    }\n                    this._displayList[i] = eachDisplay;\n                }\n            }\n            else if (this._displayList.length > 0) {\n                this._displayList.length = 0;\n            }\n            if (this._displayIndex >= 0 && this._displayIndex < this._displayList.length) {\n                this._displayDirty = this._display !== this._displayList[this._displayIndex];\n            }\n            else {\n                this._displayDirty = this._display !== null;\n            }\n            this._updateDisplayData();\n            return this._displayDirty;\n        };\n        /**\n         * @internal\n         */\n        Slot.prototype.init = function (slotData, armatureValue, rawDisplay, meshDisplay) {\n            if (this._slotData !== null) {\n                return;\n            }\n            this._slotData = slotData;\n            //\n            this._isFromCache = false;\n            this._visibleDirty = true;\n            this._blendModeDirty = true;\n            this._colorDirty = true;\n            this._blendMode = this._slotData.blendMode;\n            this._zOrder = this._slotData.zOrder;\n            this._colorTransform.copyFrom(this._slotData.color);\n            this._rawDisplay = rawDisplay;\n            this._meshDisplay = meshDisplay;\n            //\n            this._armature = armatureValue;\n            //\n            var slotParent = this._armature.getBone(this._slotData.parent.name);\n            if (slotParent !== null) {\n                this._parent = slotParent;\n            }\n            else {\n                // Never;\n            }\n            this._armature._addSlot(this);\n            //\n            this._initDisplay(this._rawDisplay, false);\n            if (this._rawDisplay !== this._meshDisplay) {\n                this._initDisplay(this._meshDisplay, false);\n            }\n            this._onUpdateDisplay();\n            this._addDisplay();\n        };\n        /**\n         * @internal\n         */\n        Slot.prototype.update = function (cacheFrameIndex) {\n            this._isFromCache = false;\n            if (this._displayDirty) {\n                this._displayDirty = false;\n                this._updateDisplay();\n                // TODO remove slot offset.\n                if (this._transformDirty) { // Update local matrix. (Only updated when both display and transform are dirty.)\n                    if (this.origin !== null) {\n                        this.global.copyFrom(this.origin).add(this.offset).toMatrix(this._localMatrix);\n                    }\n                    else {\n                        this.global.copyFrom(this.offset).toMatrix(this._localMatrix);\n                    }\n                }\n            }\n            if (this._zOrderDirty) {\n                this._zOrderDirty = false;\n                this._updateZOrder();\n            }\n            if (cacheFrameIndex >= 0 && this._cachedFrameIndices !== null) {\n                var cachedFrameIndex = this._cachedFrameIndices[cacheFrameIndex];\n                if (cachedFrameIndex >= 0 && this._cachedFrameIndex === cachedFrameIndex) { // Same cache.\n                    this._transformDirty = false;\n                }\n                else if (cachedFrameIndex >= 0) { // Has been Cached.\n                    this._transformDirty = true;\n                    this._cachedFrameIndex = cachedFrameIndex;\n                }\n                else if (this._transformDirty || this._parent._childrenTransformDirty) { // Dirty.\n                    this._transformDirty = true;\n                    this._cachedFrameIndex = -1;\n                }\n                else if (this._cachedFrameIndex >= 0) { // Same cache, but not set index yet.\n                    this._transformDirty = false;\n                    this._cachedFrameIndices[cacheFrameIndex] = this._cachedFrameIndex;\n                }\n                else { // Dirty.\n                    this._transformDirty = true;\n                    this._cachedFrameIndex = -1;\n                }\n            }\n            else if (this._transformDirty || this._parent._childrenTransformDirty) { // Dirty.\n                cacheFrameIndex = -1;\n                this._transformDirty = true;\n                this._cachedFrameIndex = -1;\n            }\n            if (this._display === null) {\n                return;\n            }\n            if (this._visibleDirty) {\n                this._visibleDirty = false;\n                this._updateVisible();\n            }\n            if (this._blendModeDirty) {\n                this._blendModeDirty = false;\n                this._updateBlendMode();\n            }\n            if (this._colorDirty) {\n                this._colorDirty = false;\n                this._updateColor();\n            }\n            if (this._deformVertices !== null && this._deformVertices.verticesData !== null && this._display === this._meshDisplay) {\n                var isSkinned = this._deformVertices.verticesData.weight !== null;\n                var isSurface = this._parent._boneData.type !== 0 /* Bone */;\n                if (this._deformVertices.verticesDirty ||\n                    (isSkinned && this._deformVertices.isBonesUpdate()) ||\n                    (isSurface && this._parent._childrenTransformDirty)) {\n                    this._deformVertices.verticesDirty = false;\n                    this._updateMesh();\n                }\n                if (isSkinned || isSurface) { // Compatible.\n                    return;\n                }\n            }\n            if (this._transformDirty) {\n                this._transformDirty = false;\n                if (this._cachedFrameIndex < 0) {\n                    var isCache = cacheFrameIndex >= 0;\n                    this._updateGlobalTransformMatrix(isCache);\n                    if (isCache && this._cachedFrameIndices !== null) {\n                        this._cachedFrameIndex = this._cachedFrameIndices[cacheFrameIndex] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global);\n                    }\n                }\n                else {\n                    this._isFromCache = true;\n                    this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);\n                }\n                this._updateTransform();\n            }\n        };\n        /**\n         * @private\n         */\n        Slot.prototype.updateTransformAndMatrix = function () {\n            if (this._transformDirty) {\n                this._transformDirty = false;\n                this._updateGlobalTransformMatrix(false);\n            }\n        };\n        /**\n         * @private\n         */\n        Slot.prototype.replaceDisplayData = function (value, displayIndex) {\n            if (displayIndex === void 0) { displayIndex = -1; }\n            if (displayIndex < 0) {\n                if (this._displayIndex < 0) {\n                    displayIndex = 0;\n                }\n                else {\n                    displayIndex = this._displayIndex;\n                }\n            }\n            if (this._displayDatas.length <= displayIndex) {\n                this._displayDatas.length = displayIndex + 1;\n                for (var i = 0, l = this._displayDatas.length; i < l; ++i) { // Clean undefined.\n                    if (!this._displayDatas[i]) {\n                        this._displayDatas[i] = null;\n                    }\n                }\n            }\n            this._displayDatas[displayIndex] = value;\n        };\n        /**\n         * - Check whether a specific point is inside a custom bounding box in the slot.\n         * The coordinate system of the point is the inner coordinate system of the armature.\n         * Custom bounding boxes need to be customized in Dragonbones Pro.\n         * @param x - The horizontal coordinate of the point.\n         * @param y - The vertical coordinate of the point.\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 检查特定点是否在插槽的自定义边界框内。\n         * 点的坐标系为骨架内坐标系。\n         * 自定义边界框需要在 DragonBones Pro 中自定义。\n         * @param x - 点的水平坐标。\n         * @param y - 点的垂直坐标。\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        Slot.prototype.containsPoint = function (x, y) {\n            if (this._boundingBoxData === null) {\n                return false;\n            }\n            this.updateTransformAndMatrix();\n            Slot._helpMatrix.copyFrom(this.globalTransformMatrix);\n            Slot._helpMatrix.invert();\n            Slot._helpMatrix.transformPoint(x, y, Slot._helpPoint);\n            return this._boundingBoxData.containsPoint(Slot._helpPoint.x, Slot._helpPoint.y);\n        };\n        /**\n         * - Check whether a specific segment intersects a custom bounding box for the slot.\n         * The coordinate system of the segment and intersection is the inner coordinate system of the armature.\n         * Custom bounding boxes need to be customized in Dragonbones Pro.\n         * @param xA - The horizontal coordinate of the beginning of the segment.\n         * @param yA - The vertical coordinate of the beginning of the segment.\n         * @param xB - The horizontal coordinate of the end point of the segment.\n         * @param yB - The vertical coordinate of the end point of the segment.\n         * @param intersectionPointA - The first intersection at which a line segment intersects the bounding box from the beginning to the end. (If not set, the intersection point will not calculated)\n         * @param intersectionPointB - The first intersection at which a line segment intersects the bounding box from the end to the beginning. (If not set, the intersection point will not calculated)\n         * @param normalRadians - The normal radians of the tangent of the intersection boundary box. [x: Normal radian of the first intersection tangent, y: Normal radian of the second intersection tangent] (If not set, the normal will not calculated)\n         * @returns Intersection situation. [1: Disjoint and segments within the bounding box, 0: Disjoint, 1: Intersecting and having a nodal point and ending in the bounding box, 2: Intersecting and having a nodal point and starting at the bounding box, 3: Intersecting and having two intersections, N: Intersecting and having N intersections]\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 检查特定线段是否与插槽的自定义边界框相交。\n         * 线段和交点的坐标系均为骨架内坐标系。\n         * 自定义边界框需要在 DragonBones Pro 中自定义。\n         * @param xA - 线段起点的水平坐标。\n         * @param yA - 线段起点的垂直坐标。\n         * @param xB - 线段终点的水平坐标。\n         * @param yB - 线段终点的垂直坐标。\n         * @param intersectionPointA - 线段从起点到终点与边界框相交的第一个交点。 （如果未设置，则不计算交点）\n         * @param intersectionPointB - 线段从终点到起点与边界框相交的第一个交点。 （如果未设置，则不计算交点）\n         * @param normalRadians - 交点边界框切线的法线弧度。 [x: 第一个交点切线的法线弧度, y: 第二个交点切线的法线弧度] （如果未设置，则不计算法线）\n         * @returns 相交的情况。 [-1: 不相交且线段在包围盒内, 0: 不相交, 1: 相交且有一个交点且终点在包围盒内, 2: 相交且有一个交点且起点在包围盒内, 3: 相交且有两个交点, N: 相交且有 N 个交点]\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        Slot.prototype.intersectsSegment = function (xA, yA, xB, yB, intersectionPointA, intersectionPointB, normalRadians) {\n            if (intersectionPointA === void 0) { intersectionPointA = null; }\n            if (intersectionPointB === void 0) { intersectionPointB = null; }\n            if (normalRadians === void 0) { normalRadians = null; }\n            if (this._boundingBoxData === null) {\n                return 0;\n            }\n            this.updateTransformAndMatrix();\n            Slot._helpMatrix.copyFrom(this.globalTransformMatrix);\n            Slot._helpMatrix.invert();\n            Slot._helpMatrix.transformPoint(xA, yA, Slot._helpPoint);\n            xA = Slot._helpPoint.x;\n            yA = Slot._helpPoint.y;\n            Slot._helpMatrix.transformPoint(xB, yB, Slot._helpPoint);\n            xB = Slot._helpPoint.x;\n            yB = Slot._helpPoint.y;\n            var intersectionCount = this._boundingBoxData.intersectsSegment(xA, yA, xB, yB, intersectionPointA, intersectionPointB, normalRadians);\n            if (intersectionCount > 0) {\n                if (intersectionCount === 1 || intersectionCount === 2) {\n                    if (intersectionPointA !== null) {\n                        this.globalTransformMatrix.transformPoint(intersectionPointA.x, intersectionPointA.y, intersectionPointA);\n                        if (intersectionPointB !== null) {\n                            intersectionPointB.x = intersectionPointA.x;\n                            intersectionPointB.y = intersectionPointA.y;\n                        }\n                    }\n                    else if (intersectionPointB !== null) {\n                        this.globalTransformMatrix.transformPoint(intersectionPointB.x, intersectionPointB.y, intersectionPointB);\n                    }\n                }\n                else {\n                    if (intersectionPointA !== null) {\n                        this.globalTransformMatrix.transformPoint(intersectionPointA.x, intersectionPointA.y, intersectionPointA);\n                    }\n                    if (intersectionPointB !== null) {\n                        this.globalTransformMatrix.transformPoint(intersectionPointB.x, intersectionPointB.y, intersectionPointB);\n                    }\n                }\n                if (normalRadians !== null) {\n                    this.globalTransformMatrix.transformPoint(Math.cos(normalRadians.x), Math.sin(normalRadians.x), Slot._helpPoint, true);\n                    normalRadians.x = Math.atan2(Slot._helpPoint.y, Slot._helpPoint.x);\n                    this.globalTransformMatrix.transformPoint(Math.cos(normalRadians.y), Math.sin(normalRadians.y), Slot._helpPoint, true);\n                    normalRadians.y = Math.atan2(Slot._helpPoint.y, Slot._helpPoint.x);\n                }\n            }\n            return intersectionCount;\n        };\n        /**\n         * - Forces the slot to update the state of the display object in the next frame.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 强制插槽在下一帧更新显示对象的状态。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Slot.prototype.invalidUpdate = function () {\n            this._displayDirty = true;\n            this._transformDirty = true;\n        };\n        Object.defineProperty(Slot.prototype, \"visible\", {\n            /**\n             * - The visible of slot's display object.\n             * @default true\n             * @version DragonBones 5.6\n             * @language en_US\n             */\n            /**\n             * - 插槽的显示对象的可见。\n             * @default true\n             * @version DragonBones 5.6\n             * @language zh_CN\n             */\n            get: function () {\n                return this._visible;\n            },\n            set: function (value) {\n                if (this._visible === value) {\n                    return;\n                }\n                this._visible = value;\n                this._updateVisible();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"displayIndex\", {\n            /**\n             * - The index of the display object displayed in the display list.\n             * @example\n             * <pre>\n             *     let slot = armature.getSlot(\"weapon\");\n             *     slot.displayIndex = 3;\n             *     slot.displayController = \"none\";\n             * </pre>\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 此时显示的显示对象在显示列表中的索引。\n             * @example\n             * <pre>\n             *     let slot = armature.getSlot(\"weapon\");\n             *     slot.displayIndex = 3;\n             *     slot.displayController = \"none\";\n             * </pre>\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._displayIndex;\n            },\n            set: function (value) {\n                if (this._setDisplayIndex(value)) {\n                    this.update(-1);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"name\", {\n            /**\n             * - The slot name.\n             * @see dragonBones.SlotData#name\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 插槽名称。\n             * @see dragonBones.SlotData#name\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._slotData.name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"displayList\", {\n            /**\n             * - Contains a display list of display objects or child armatures.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 包含显示对象或子骨架的显示列表。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._displayList.concat();\n            },\n            set: function (value) {\n                var backupDisplayList = this._displayList.concat(); // Copy.\n                var disposeDisplayList = new Array();\n                if (this._setDisplayList(value)) {\n                    this.update(-1);\n                }\n                // Release replaced displays.\n                for (var _i = 0, backupDisplayList_1 = backupDisplayList; _i < backupDisplayList_1.length; _i++) {\n                    var eachDisplay = backupDisplayList_1[_i];\n                    if (eachDisplay !== null && eachDisplay !== this._rawDisplay && eachDisplay !== this._meshDisplay &&\n                        this._displayList.indexOf(eachDisplay) < 0 &&\n                        disposeDisplayList.indexOf(eachDisplay) < 0) {\n                        disposeDisplayList.push(eachDisplay);\n                    }\n                }\n                for (var _a = 0, disposeDisplayList_2 = disposeDisplayList; _a < disposeDisplayList_2.length; _a++) {\n                    var eachDisplay = disposeDisplayList_2[_a];\n                    if (eachDisplay instanceof dragonBones.Armature) {\n                        // (eachDisplay as Armature).dispose();\n                    }\n                    else {\n                        this._disposeDisplay(eachDisplay, true);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"slotData\", {\n            /**\n             * - The slot data.\n             * @see dragonBones.SlotData\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 插槽数据。\n             * @see dragonBones.SlotData\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._slotData;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"rawDisplayDatas\", {\n            /**\n             * @private\n             */\n            get: function () {\n                return this._rawDisplayDatas;\n            },\n            set: function (value) {\n                if (this._rawDisplayDatas === value) {\n                    return;\n                }\n                this._displayDirty = true;\n                this._rawDisplayDatas = value;\n                if (this._rawDisplayDatas !== null) {\n                    this._displayDatas.length = this._rawDisplayDatas.length;\n                    for (var i = 0, l = this._displayDatas.length; i < l; ++i) {\n                        var rawDisplayData = this._rawDisplayDatas[i];\n                        if (rawDisplayData === null) {\n                            rawDisplayData = this._getDefaultRawDisplayData(i);\n                        }\n                        this._displayDatas[i] = rawDisplayData;\n                    }\n                }\n                else {\n                    this._displayDatas.length = 0;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"displayData\", {\n            /**\n             * @private\n             */\n            get: function () {\n                return this._displayData;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"boundingBoxData\", {\n            /**\n             * - The custom bounding box data for the slot at current time.\n             * @version DragonBones 5.0\n             * @language en_US\n             */\n            /**\n             * - 插槽此时的自定义包围盒数据。\n             * @version DragonBones 5.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._boundingBoxData;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"rawDisplay\", {\n            /**\n             * @private\n             */\n            get: function () {\n                return this._rawDisplay;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"meshDisplay\", {\n            /**\n             * @private\n             */\n            get: function () {\n                return this._meshDisplay;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"display\", {\n            /**\n             * - The display object that the slot displays at this time.\n             * @example\n             * <pre>\n             *     let slot = armature.getSlot(\"text\");\n             *     slot.display = new yourEngine.TextField();\n             * </pre>\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 插槽此时显示的显示对象。\n             * @example\n             * <pre>\n             *     let slot = armature.getSlot(\"text\");\n             *     slot.display = new yourEngine.TextField();\n             * </pre>\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._display;\n            },\n            set: function (value) {\n                if (this._display === value) {\n                    return;\n                }\n                var displayListLength = this._displayList.length;\n                if (this._displayIndex < 0 && displayListLength === 0) { // Emprty.\n                    this._displayIndex = 0;\n                }\n                if (this._displayIndex < 0) {\n                    return;\n                }\n                else {\n                    var replaceDisplayList = this.displayList; // Copy.\n                    if (displayListLength <= this._displayIndex) {\n                        replaceDisplayList.length = this._displayIndex + 1;\n                    }\n                    replaceDisplayList[this._displayIndex] = value;\n                    this.displayList = replaceDisplayList;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"childArmature\", {\n            /**\n             * - The child armature that the slot displayed at current time.\n             * @example\n             * <pre>\n             *     let slot = armature.getSlot(\"weapon\");\n             * let prevChildArmature = slot.childArmature;\n             * if (prevChildArmature) {\n             * prevChildArmature.dispose();\n             *     }\n             *     slot.childArmature = factory.buildArmature(\"weapon_blabla\", \"weapon_blabla_project\");\n             * </pre>\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 插槽此时显示的子骨架。\n             * 注意，被替换的对象或子骨架并不会被回收，根据语言和引擎的不同，需要额外处理。\n             * @example\n             * <pre>\n             *     let slot = armature.getSlot(\"weapon\");\n             * let prevChildArmature = slot.childArmature;\n             * if (prevChildArmature) {\n             * prevChildArmature.dispose();\n             *     }\n             *     slot.childArmature = factory.buildArmature(\"weapon_blabla\", \"weapon_blabla_project\");\n             * </pre>\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._childArmature;\n            },\n            set: function (value) {\n                if (this._childArmature === value) {\n                    return;\n                }\n                this.display = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Slot.prototype, \"parent\", {\n            /**\n             * - The parent bone to which it belongs.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 所属的父骨骼。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * - Deprecated, please refer to {@link #display}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #display}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Slot.prototype.getDisplay = function () {\n            return this._display;\n        };\n        /**\n         * - Deprecated, please refer to {@link #display}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #display}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Slot.prototype.setDisplay = function (value) {\n            this.display = value;\n        };\n        return Slot;\n    }(dragonBones.TransformObject));\n    dragonBones.Slot = Slot;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var Constraint = /** @class */ (function (_super) {\n        __extends(Constraint, _super);\n        function Constraint() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Constraint.prototype._onClear = function () {\n            this._armature = null; //\n            this._target = null; //\n            this._root = null; //\n            this._bone = null;\n        };\n        Object.defineProperty(Constraint.prototype, \"name\", {\n            get: function () {\n                return this._constraintData.name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Constraint._helpMatrix = new dragonBones.Matrix();\n        Constraint._helpTransform = new dragonBones.Transform();\n        Constraint._helpPoint = new dragonBones.Point();\n        return Constraint;\n    }(dragonBones.BaseObject));\n    dragonBones.Constraint = Constraint;\n    /**\n     * @internal\n     */\n    var IKConstraint = /** @class */ (function (_super) {\n        __extends(IKConstraint, _super);\n        function IKConstraint() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        IKConstraint.toString = function () {\n            return \"[class dragonBones.IKConstraint]\";\n        };\n        IKConstraint.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this._scaleEnabled = false;\n            this._bendPositive = false;\n            this._weight = 1.0;\n            this._constraintData = null;\n        };\n        IKConstraint.prototype._computeA = function () {\n            var ikGlobal = this._target.global;\n            var global = this._root.global;\n            var globalTransformMatrix = this._root.globalTransformMatrix;\n            var radian = Math.atan2(ikGlobal.y - global.y, ikGlobal.x - global.x);\n            if (global.scaleX < 0.0) {\n                radian += Math.PI;\n            }\n            global.rotation += dragonBones.Transform.normalizeRadian(radian - global.rotation) * this._weight;\n            global.toMatrix(globalTransformMatrix);\n        };\n        IKConstraint.prototype._computeB = function () {\n            var boneLength = this._bone._boneData.length;\n            var parent = this._root;\n            var ikGlobal = this._target.global;\n            var parentGlobal = parent.global;\n            var global = this._bone.global;\n            var globalTransformMatrix = this._bone.globalTransformMatrix;\n            var x = globalTransformMatrix.a * boneLength;\n            var y = globalTransformMatrix.b * boneLength;\n            var lLL = x * x + y * y;\n            var lL = Math.sqrt(lLL);\n            var dX = global.x - parentGlobal.x;\n            var dY = global.y - parentGlobal.y;\n            var lPP = dX * dX + dY * dY;\n            var lP = Math.sqrt(lPP);\n            var rawRadian = global.rotation;\n            var rawParentRadian = parentGlobal.rotation;\n            var rawRadianA = Math.atan2(dY, dX);\n            dX = ikGlobal.x - parentGlobal.x;\n            dY = ikGlobal.y - parentGlobal.y;\n            var lTT = dX * dX + dY * dY;\n            var lT = Math.sqrt(lTT);\n            var radianA = 0.0;\n            if (lL + lP <= lT || lT + lL <= lP || lT + lP <= lL) {\n                radianA = Math.atan2(ikGlobal.y - parentGlobal.y, ikGlobal.x - parentGlobal.x);\n                if (lL + lP <= lT) {\n                }\n                else if (lP < lL) {\n                    radianA += Math.PI;\n                }\n            }\n            else {\n                var h = (lPP - lLL + lTT) / (2.0 * lTT);\n                var r = Math.sqrt(lPP - h * h * lTT) / lT;\n                var hX = parentGlobal.x + (dX * h);\n                var hY = parentGlobal.y + (dY * h);\n                var rX = -dY * r;\n                var rY = dX * r;\n                var isPPR = false;\n                var parentParent = parent.parent;\n                if (parentParent !== null) {\n                    var parentParentMatrix = parentParent.globalTransformMatrix;\n                    isPPR = parentParentMatrix.a * parentParentMatrix.d - parentParentMatrix.b * parentParentMatrix.c < 0.0;\n                }\n                if (isPPR !== this._bendPositive) {\n                    global.x = hX - rX;\n                    global.y = hY - rY;\n                }\n                else {\n                    global.x = hX + rX;\n                    global.y = hY + rY;\n                }\n                radianA = Math.atan2(global.y - parentGlobal.y, global.x - parentGlobal.x);\n            }\n            var dR = dragonBones.Transform.normalizeRadian(radianA - rawRadianA);\n            parentGlobal.rotation = rawParentRadian + dR * this._weight;\n            parentGlobal.toMatrix(parent.globalTransformMatrix);\n            //\n            var currentRadianA = rawRadianA + dR * this._weight;\n            global.x = parentGlobal.x + Math.cos(currentRadianA) * lP;\n            global.y = parentGlobal.y + Math.sin(currentRadianA) * lP;\n            //\n            var radianB = Math.atan2(ikGlobal.y - global.y, ikGlobal.x - global.x);\n            if (global.scaleX < 0.0) {\n                radianB += Math.PI;\n            }\n            global.rotation = parentGlobal.rotation + rawRadian - rawParentRadian + dragonBones.Transform.normalizeRadian(radianB - dR - rawRadian) * this._weight;\n            global.toMatrix(globalTransformMatrix);\n        };\n        IKConstraint.prototype.init = function (constraintData, armature) {\n            if (this._constraintData !== null) {\n                return;\n            }\n            this._constraintData = constraintData;\n            this._armature = armature;\n            this._target = this._armature.getBone(this._constraintData.target.name);\n            this._root = this._armature.getBone(this._constraintData.root.name);\n            this._bone = this._constraintData.bone !== null ? this._armature.getBone(this._constraintData.bone.name) : null;\n            {\n                var ikConstraintData = this._constraintData;\n                this._scaleEnabled = ikConstraintData.scaleEnabled;\n                this._bendPositive = ikConstraintData.bendPositive;\n                this._weight = ikConstraintData.weight;\n            }\n            this._root._hasConstraint = true;\n        };\n        IKConstraint.prototype.update = function () {\n            this._root.updateByConstraint();\n            if (this._bone !== null) {\n                this._bone.updateByConstraint();\n                this._computeB();\n            }\n            else {\n                this._computeA();\n            }\n        };\n        IKConstraint.prototype.invalidUpdate = function () {\n            this._root.invalidUpdate();\n            if (this._bone !== null) {\n                this._bone.invalidUpdate();\n            }\n        };\n        return IKConstraint;\n    }(Constraint));\n    dragonBones.IKConstraint = IKConstraint;\n    /**\n     * @internal\n     */\n    var PathConstraint = /** @class */ (function (_super) {\n        __extends(PathConstraint, _super);\n        function PathConstraint() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._bones = [];\n            _this._spaces = [];\n            _this._positions = [];\n            _this._curves = [];\n            _this._boneLengths = [];\n            _this._pathGlobalVertices = [];\n            _this._segments = [10];\n            return _this;\n        }\n        PathConstraint.toString = function () {\n            return \"[class dragonBones.PathConstraint]\";\n        };\n        PathConstraint.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.dirty = false;\n            this.pathOffset = 0;\n            this.position = 0.0;\n            this.spacing = 0.0;\n            this.rotateOffset = 0.0;\n            this.rotateMix = 1.0;\n            this.translateMix = 1.0;\n            this._pathSlot = null;\n            this._bones.length = 0;\n            this._spaces.length = 0;\n            this._positions.length = 0;\n            this._curves.length = 0;\n            this._boneLengths.length = 0;\n            this._pathGlobalVertices.length = 0;\n        };\n        PathConstraint.prototype._updatePathVertices = function (verticesData) {\n            //计算曲线的节点数据\n            var armature = this._armature;\n            var dragonBonesData = armature.armatureData.parent;\n            var scale = armature.armatureData.scale;\n            var intArray = dragonBonesData.intArray;\n            var floatArray = dragonBonesData.floatArray;\n            var pathOffset = verticesData.offset;\n            var pathVertexCount = intArray[pathOffset + 0 /* PathVertexCount */];\n            var pathVertexOffset = intArray[pathOffset + 2 /* PathFloatOffset */];\n            this._pathGlobalVertices.length = pathVertexCount * 2;\n            var weightData = verticesData.weight;\n            //没有骨骼约束我,那节点只受自己的Bone控制\n            if (weightData === null) {\n                var parentBone = this._pathSlot.parent;\n                parentBone.updateByConstraint();\n                var matrix = parentBone.globalTransformMatrix;\n                for (var i = 0, iV_1 = pathVertexOffset; i < pathVertexCount; i += 2) {\n                    var vx = floatArray[iV_1++] * scale;\n                    var vy = floatArray[iV_1++] * scale;\n                    var x = matrix.a * vx + matrix.c * vy + matrix.tx;\n                    var y = matrix.b * vx + matrix.d * vy + matrix.ty;\n                    //\n                    this._pathGlobalVertices[i] = x;\n                    this._pathGlobalVertices[i + 1] = y;\n                }\n                return;\n            }\n            //有骨骼约束我,那我的节点受骨骼权重控制\n            var bones = this._pathSlot._deformVertices.bones;\n            var weightBoneCount = weightData.bones.length;\n            var weightOffset = weightData.offset;\n            var floatOffset = intArray[weightOffset + 1 /* WeigthFloatOffset */];\n            var iV = floatOffset;\n            var iB = weightOffset + 2 /* WeigthBoneIndices */ + weightBoneCount;\n            for (var i = 0, iW = 0; i < pathVertexCount; i++) {\n                var vertexBoneCount = intArray[iB++]; //\n                var xG = 0.0, yG = 0.0;\n                for (var ii = 0, ll = vertexBoneCount; ii < ll; ii++) {\n                    var boneIndex = intArray[iB++];\n                    var bone = bones[boneIndex];\n                    if (bone === null) {\n                        continue;\n                    }\n                    bone.updateByConstraint();\n                    var matrix = bone.globalTransformMatrix;\n                    var weight = floatArray[iV++];\n                    var vx = floatArray[iV++] * scale;\n                    var vy = floatArray[iV++] * scale;\n                    xG += (matrix.a * vx + matrix.c * vy + matrix.tx) * weight;\n                    yG += (matrix.b * vx + matrix.d * vy + matrix.ty) * weight;\n                }\n                this._pathGlobalVertices[iW++] = xG;\n                this._pathGlobalVertices[iW++] = yG;\n            }\n        };\n        PathConstraint.prototype._computeVertices = function (start, count, offset, out) {\n            //TODO优化\n            for (var i = offset, iW = start; i < count; i += 2) {\n                out[i] = this._pathGlobalVertices[iW++];\n                out[i + 1] = this._pathGlobalVertices[iW++];\n            }\n        };\n        PathConstraint.prototype._computeBezierCurve = function (pathDisplayDta, spaceCount, tangents, percentPosition, percentSpacing) {\n            //计算当前的骨骼在曲线上的位置\n            var armature = this._armature;\n            var intArray = armature.armatureData.parent.intArray;\n            var vertexCount = intArray[pathDisplayDta.vertices.offset + 0 /* PathVertexCount */];\n            var positions = this._positions;\n            var spaces = this._spaces;\n            var isClosed = pathDisplayDta.closed;\n            var curveVertices = Array();\n            var verticesLength = vertexCount * 2;\n            var curveCount = verticesLength / 6;\n            var preCurve = -1;\n            var position = this.position;\n            positions.length = spaceCount * 3 + 2;\n            var pathLength = 0.0;\n            //不需要匀速运动，效率高些\n            if (!pathDisplayDta.constantSpeed) {\n                var lenghts = pathDisplayDta.curveLengths;\n                curveCount -= isClosed ? 1 : 2;\n                pathLength = lenghts[curveCount];\n                if (percentPosition) {\n                    position *= pathLength;\n                }\n                if (percentSpacing) {\n                    for (var i = 0; i < spaceCount; i++) {\n                        spaces[i] *= pathLength;\n                    }\n                }\n                curveVertices.length = 8;\n                for (var i = 0, o = 0, curve = 0; i < spaceCount; i++, o += 3) {\n                    var space = spaces[i];\n                    position += space;\n                    if (isClosed) {\n                        position %= pathLength;\n                        if (position < 0) {\n                            position += pathLength;\n                        }\n                        curve = 0;\n                    }\n                    else if (position < 0) {\n                        //TODO\n                        continue;\n                    }\n                    else if (position > pathLength) {\n                        //TODO\n                        continue;\n                    }\n                    var percent = 0.0;\n                    for (;; curve++) {\n                        var len = lenghts[curve];\n                        if (position > len) {\n                            continue;\n                        }\n                        if (curve === 0) {\n                            percent = position / len;\n                        }\n                        else {\n                            var preLen = lenghts[curve - 1];\n                            percent = (position - preLen) / (len - preLen);\n                        }\n                        break;\n                    }\n                    if (curve !== preCurve) {\n                        preCurve = curve;\n                        if (isClosed && curve === curveCount) {\n                            //计算曲线\n                            this._computeVertices(verticesLength - 4, 4, 0, curveVertices);\n                            this._computeVertices(0, 4, 4, curveVertices);\n                        }\n                        else {\n                            this._computeVertices(curve * 6 + 2, 8, 0, curveVertices);\n                        }\n                    }\n                    //\n                    this.addCurvePosition(percent, curveVertices[0], curveVertices[1], curveVertices[2], curveVertices[3], curveVertices[4], curveVertices[5], curveVertices[6], curveVertices[7], positions, o, tangents);\n                }\n                return;\n            }\n            //匀速的\n            if (isClosed) {\n                verticesLength += 2;\n                curveVertices.length = vertexCount;\n                this._computeVertices(2, verticesLength - 4, 0, curveVertices);\n                this._computeVertices(0, 2, verticesLength - 4, curveVertices);\n                curveVertices[verticesLength - 2] = curveVertices[0];\n                curveVertices[verticesLength - 1] = curveVertices[1];\n            }\n            else {\n                curveCount--;\n                verticesLength -= 4;\n                curveVertices.length = verticesLength;\n                this._computeVertices(2, verticesLength, 0, curveVertices);\n            }\n            //\n            var curves = new Array(curveCount);\n            pathLength = 0;\n            var x1 = curveVertices[0], y1 = curveVertices[1], cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0, x2 = 0, y2 = 0;\n            var tmpx, tmpy, dddfx, dddfy, ddfx, ddfy, dfx, dfy;\n            for (var i = 0, w = 2; i < curveCount; i++, w += 6) {\n                cx1 = curveVertices[w];\n                cy1 = curveVertices[w + 1];\n                cx2 = curveVertices[w + 2];\n                cy2 = curveVertices[w + 3];\n                x2 = curveVertices[w + 4];\n                y2 = curveVertices[w + 5];\n                tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\n                tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\n                dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\n                dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\n                ddfx = tmpx * 2 + dddfx;\n                ddfy = tmpy * 2 + dddfy;\n                dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\n                dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\n                pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                dfx += ddfx;\n                dfy += ddfy;\n                ddfx += dddfx;\n                ddfy += dddfy;\n                pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                dfx += ddfx;\n                dfy += ddfy;\n                pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                dfx += ddfx + dddfx;\n                dfy += ddfy + dddfy;\n                pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                curves[i] = pathLength;\n                x1 = x2;\n                y1 = y2;\n            }\n            if (percentPosition) {\n                position *= pathLength;\n            }\n            if (percentSpacing) {\n                for (var i = 0; i < spaceCount; i++) {\n                    spaces[i] *= pathLength;\n                }\n            }\n            var segments = this._segments;\n            var curveLength = 0;\n            for (var i = 0, o = 0, curve = 0, segment = 0; i < spaceCount; i++, o += 3) {\n                var space = spaces[i];\n                position += space;\n                var p = position;\n                if (isClosed) {\n                    p %= pathLength;\n                    if (p < 0)\n                        p += pathLength;\n                    curve = 0;\n                }\n                else if (p < 0) {\n                    continue;\n                }\n                else if (p > pathLength) {\n                    continue;\n                }\n                // Determine curve containing position.\n                for (;; curve++) {\n                    var length_1 = curves[curve];\n                    if (p > length_1)\n                        continue;\n                    if (curve === 0)\n                        p /= length_1;\n                    else {\n                        var prev = curves[curve - 1];\n                        p = (p - prev) / (length_1 - prev);\n                    }\n                    break;\n                }\n                if (curve !== preCurve) {\n                    preCurve = curve;\n                    var ii = curve * 6;\n                    x1 = curveVertices[ii];\n                    y1 = curveVertices[ii + 1];\n                    cx1 = curveVertices[ii + 2];\n                    cy1 = curveVertices[ii + 3];\n                    cx2 = curveVertices[ii + 4];\n                    cy2 = curveVertices[ii + 5];\n                    x2 = curveVertices[ii + 6];\n                    y2 = curveVertices[ii + 7];\n                    tmpx = (x1 - cx1 * 2 + cx2) * 0.03;\n                    tmpy = (y1 - cy1 * 2 + cy2) * 0.03;\n                    dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\n                    dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\n                    ddfx = tmpx * 2 + dddfx;\n                    ddfy = tmpy * 2 + dddfy;\n                    dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\n                    dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\n                    curveLength = Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[0] = curveLength;\n                    for (ii = 1; ii < 8; ii++) {\n                        dfx += ddfx;\n                        dfy += ddfy;\n                        ddfx += dddfx;\n                        ddfy += dddfy;\n                        curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                        segments[ii] = curveLength;\n                    }\n                    dfx += ddfx;\n                    dfy += ddfy;\n                    curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[8] = curveLength;\n                    dfx += ddfx + dddfx;\n                    dfy += ddfy + dddfy;\n                    curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[9] = curveLength;\n                    segment = 0;\n                }\n                // Weight by segment length.\n                p *= curveLength;\n                for (;; segment++) {\n                    var length_2 = segments[segment];\n                    if (p > length_2)\n                        continue;\n                    if (segment === 0)\n                        p /= length_2;\n                    else {\n                        var prev = segments[segment - 1];\n                        p = segment + (p - prev) / (length_2 - prev);\n                    }\n                    break;\n                }\n                this.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, positions, o, tangents);\n            }\n        };\n        //Calculates a point on the curve, for a given t value between 0 and 1.\n        PathConstraint.prototype.addCurvePosition = function (t, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, offset, tangents) {\n            if (t === 0) {\n                out[offset] = x1;\n                out[offset + 1] = y1;\n                out[offset + 2] = 0;\n                return;\n            }\n            if (t === 1) {\n                out[offset] = x2;\n                out[offset + 1] = y2;\n                out[offset + 2] = 0;\n                return;\n            }\n            var mt = 1 - t;\n            var mt2 = mt * mt;\n            var t2 = t * t;\n            var a = mt2 * mt;\n            var b = mt2 * t * 3;\n            var c = mt * t2 * 3;\n            var d = t * t2;\n            var x = a * x1 + b * cx1 + c * cx2 + d * x2;\n            var y = a * y1 + b * cy1 + c * cy2 + d * y2;\n            out[offset] = x;\n            out[offset + 1] = y;\n            if (tangents) {\n                //Calculates the curve tangent at the specified t value\n                out[offset + 2] = Math.atan2(y - (a * y1 + b * cy1 + c * cy2), x - (a * x1 + b * cx1 + c * cx2));\n            }\n            else {\n                out[offset + 2] = 0;\n            }\n        };\n        PathConstraint.prototype.init = function (constraintData, armature) {\n            this._constraintData = constraintData;\n            this._armature = armature;\n            var data = constraintData;\n            this.pathOffset = data.pathDisplayData.vertices.offset;\n            //\n            this.position = data.position;\n            this.spacing = data.spacing;\n            this.rotateOffset = data.rotateOffset;\n            this.rotateMix = data.rotateMix;\n            this.translateMix = data.translateMix;\n            //\n            this._root = this._armature.getBone(data.root.name);\n            this._target = this._armature.getBone(data.target.name);\n            this._pathSlot = this._armature.getSlot(data.pathSlot.name);\n            for (var i = 0, l = data.bones.length; i < l; i++) {\n                var bone = this._armature.getBone(data.bones[i].name);\n                if (bone !== null) {\n                    this._bones.push(bone);\n                }\n            }\n            if (data.rotateMode === 2 /* ChainScale */) {\n                this._boneLengths.length = this._bones.length;\n            }\n            this._root._hasConstraint = true;\n        };\n        PathConstraint.prototype.update = function () {\n            var pathSlot = this._pathSlot;\n            if (pathSlot._deformVertices === null ||\n                pathSlot._deformVertices.verticesData === null ||\n                pathSlot._deformVertices.verticesData.offset !== this.pathOffset) {\n                return;\n            }\n            var constraintData = this._constraintData;\n            var pathDisplayData = pathSlot._displayData; // TODO\n            //\n            //曲线节点数据改变:父亲bone改变，权重bones改变，变形顶点改变\n            var isPathVerticeDirty = false;\n            var deformVertices = pathSlot._deformVertices;\n            if (this._root._childrenTransformDirty) {\n                this._updatePathVertices(pathDisplayData.vertices);\n                isPathVerticeDirty = true;\n            }\n            else if (deformVertices !== null && (deformVertices.verticesDirty || deformVertices.isBonesUpdate())) {\n                this._updatePathVertices(pathDisplayData.vertices);\n                deformVertices.verticesDirty = false;\n                isPathVerticeDirty = true;\n            }\n            if (!isPathVerticeDirty && !this.dirty) {\n                return;\n            }\n            //\n            var positionMode = constraintData.positionMode;\n            var spacingMode = constraintData.spacingMode;\n            var rotateMode = constraintData.rotateMode;\n            var bones = this._bones;\n            var isLengthMode = spacingMode === 0 /* Length */;\n            var isChainScaleMode = rotateMode === 2 /* ChainScale */;\n            var isTangentMode = rotateMode === 0 /* Tangent */;\n            var boneCount = bones.length;\n            var spacesCount = isTangentMode ? boneCount : boneCount + 1;\n            var spacing = this.spacing;\n            var spaces = this._spaces;\n            spaces.length = spacesCount;\n            //计曲线间隔和长度\n            if (isChainScaleMode || isLengthMode) {\n                //Bone改变和spacing改变触发\n                spaces[0] = 0;\n                for (var i = 0, l = spacesCount - 1; i < l; i++) {\n                    var bone = bones[i];\n                    bone.updateByConstraint();\n                    var boneLength = bone._boneData.length;\n                    var matrix = bone.globalTransformMatrix;\n                    var x = boneLength * matrix.a;\n                    var y = boneLength * matrix.b;\n                    var len = Math.sqrt(x * x + y * y);\n                    if (isChainScaleMode) {\n                        this._boneLengths[i] = len;\n                    }\n                    spaces[i + 1] = (boneLength + spacing) * len / boneLength;\n                }\n            }\n            else {\n                for (var i = 0; i < spacesCount; i++) {\n                    spaces[i] = spacing;\n                }\n            }\n            //\n            this._computeBezierCurve(pathDisplayData, spacesCount, isTangentMode, positionMode === 1 /* Percent */, spacingMode === 2 /* Percent */);\n            //根据新的节点数据重新采样\n            var positions = this._positions;\n            var rotateOffset = this.rotateOffset;\n            var boneX = positions[0], boneY = positions[1];\n            var tip;\n            if (rotateOffset === 0) {\n                tip = rotateMode === 1 /* Chain */;\n            }\n            else {\n                tip = false;\n                var bone = pathSlot.parent;\n                if (bone !== null) {\n                    var matrix = bone.globalTransformMatrix;\n                    rotateOffset *= matrix.a * matrix.d - matrix.b * matrix.c > 0 ? dragonBones.Transform.DEG_RAD : -dragonBones.Transform.DEG_RAD;\n                }\n            }\n            //\n            var rotateMix = this.rotateMix;\n            var translateMix = this.translateMix;\n            for (var i = 0, p = 3; i < boneCount; i++, p += 3) {\n                var bone = bones[i];\n                bone.updateByConstraint();\n                var matrix = bone.globalTransformMatrix;\n                matrix.tx += (boneX - matrix.tx) * translateMix;\n                matrix.ty += (boneY - matrix.ty) * translateMix;\n                var x = positions[p], y = positions[p + 1];\n                var dx = x - boneX, dy = y - boneY;\n                if (isChainScaleMode) {\n                    var lenght = this._boneLengths[i];\n                    var s = (Math.sqrt(dx * dx + dy * dy) / lenght - 1) * rotateMix + 1;\n                    matrix.a *= s;\n                    matrix.b *= s;\n                }\n                boneX = x;\n                boneY = y;\n                if (rotateMix > 0) {\n                    var a = matrix.a, b = matrix.b, c = matrix.c, d = matrix.d, r = void 0, cos = void 0, sin = void 0;\n                    if (isTangentMode) {\n                        r = positions[p - 1];\n                    }\n                    else {\n                        r = Math.atan2(dy, dx);\n                    }\n                    r -= Math.atan2(b, a);\n                    if (tip) {\n                        cos = Math.cos(r);\n                        sin = Math.sin(r);\n                        var length_3 = bone._boneData.length;\n                        boneX += (length_3 * (cos * a - sin * b) - dx) * rotateMix;\n                        boneY += (length_3 * (sin * a + cos * b) - dy) * rotateMix;\n                    }\n                    else {\n                        r += rotateOffset;\n                    }\n                    if (r > dragonBones.Transform.PI) {\n                        r -= dragonBones.Transform.PI_D;\n                    }\n                    else if (r < -dragonBones.Transform.PI) {\n                        r += dragonBones.Transform.PI_D;\n                    }\n                    r *= rotateMix;\n                    cos = Math.cos(r);\n                    sin = Math.sin(r);\n                    matrix.a = cos * a - sin * b;\n                    matrix.b = sin * a + cos * b;\n                    matrix.c = cos * c - sin * d;\n                    matrix.d = sin * c + cos * d;\n                }\n                bone.global.fromMatrix(matrix);\n            }\n            this.dirty = false;\n        };\n        PathConstraint.prototype.invalidUpdate = function () {\n        };\n        return PathConstraint;\n    }(Constraint));\n    dragonBones.PathConstraint = PathConstraint;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - Worldclock provides clock support for animations, advance time for each IAnimatable object added to the instance.\n     * @see dragonBones.IAnimateble\n     * @see dragonBones.Armature\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - WorldClock 对动画提供时钟支持，为每个加入到该实例的 IAnimatable 对象更新时间。\n     * @see dragonBones.IAnimateble\n     * @see dragonBones.Armature\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var WorldClock = /** @class */ (function () {\n        /**\n         * - Creating a Worldclock instance. Typically, you do not need to create Worldclock instance.\n         * When multiple Worldclock instances are running at different speeds, can achieving some specific animation effects, such as bullet time.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 创建一个 WorldClock 实例。通常并不需要创建 WorldClock 实例。\n         * 当多个 WorldClock 实例使用不同的速度运行时，可以实现一些特殊的动画效果，比如子弹时间等。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        function WorldClock(time) {\n            if (time === void 0) { time = 0.0; }\n            /**\n             * - Current time. (In seconds)\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 当前的时间。 (以秒为单位)\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            this.time = 0.0;\n            /**\n             * - The play speed, used to control animation speed-shift play.\n             * [0: Stop play, (0~1): Slow play, 1: Normal play, (1~N): Fast play]\n             * @default 1.0\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 播放速度，用于控制动画变速播放。\n             * [0: 停止播放, (0~1): 慢速播放, 1: 正常播放, (1~N): 快速播放]\n             * @default 1.0\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            this.timeScale = 1.0;\n            this._systemTime = 0.0;\n            this._animatebles = [];\n            this._clock = null;\n            this.time = time;\n            this._systemTime = new Date().getTime() * 0.001;\n        }\n        /**\n         * - Advance time for all IAnimatable instances.\n         * @param passedTime - Passed time. [-1: Automatically calculates the time difference between the current frame and the previous frame, [0~N): Passed time] (In seconds)\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 为所有的 IAnimatable 实例更新时间。\n         * @param passedTime - 前进的时间。 [-1: 自动计算当前帧与上一帧的时间差, [0~N): 前进的时间] (以秒为单位)\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        WorldClock.prototype.advanceTime = function (passedTime) {\n            if (passedTime !== passedTime) {\n                passedTime = 0.0;\n            }\n            var currentTime = Date.now() * 0.001;\n            if (passedTime < 0.0) {\n                passedTime = currentTime - this._systemTime;\n            }\n            this._systemTime = currentTime;\n            if (this.timeScale !== 1.0) {\n                passedTime *= this.timeScale;\n            }\n            if (passedTime === 0.0) {\n                return;\n            }\n            if (passedTime < 0.0) {\n                this.time -= passedTime;\n            }\n            else {\n                this.time += passedTime;\n            }\n            var i = 0, r = 0, l = this._animatebles.length;\n            for (; i < l; ++i) {\n                var animatable = this._animatebles[i];\n                if (animatable !== null) {\n                    if (r > 0) {\n                        this._animatebles[i - r] = animatable;\n                        this._animatebles[i] = null;\n                    }\n                    animatable.advanceTime(passedTime);\n                }\n                else {\n                    r++;\n                }\n            }\n            if (r > 0) {\n                l = this._animatebles.length;\n                for (; i < l; ++i) {\n                    var animateble = this._animatebles[i];\n                    if (animateble !== null) {\n                        this._animatebles[i - r] = animateble;\n                    }\n                    else {\n                        r++;\n                    }\n                }\n                this._animatebles.length -= r;\n            }\n        };\n        /**\n         * - Check whether contains a specific instance of IAnimatable.\n         * @param value - The IAnimatable instance.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 检查是否包含特定的 IAnimatable 实例。\n         * @param value - IAnimatable 实例。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        WorldClock.prototype.contains = function (value) {\n            if (value === this) {\n                return false;\n            }\n            var ancestor = value;\n            while (ancestor !== this && ancestor !== null) {\n                ancestor = ancestor.clock;\n            }\n            return ancestor === this;\n        };\n        /**\n         * - Add IAnimatable instance.\n         * @param value - The IAnimatable instance.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 添加 IAnimatable 实例。\n         * @param value - IAnimatable 实例。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        WorldClock.prototype.add = function (value) {\n            if (this._animatebles.indexOf(value) < 0) {\n                this._animatebles.push(value);\n                value.clock = this;\n            }\n        };\n        /**\n         * - Removes a specified IAnimatable instance.\n         * @param value - The IAnimatable instance.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 移除特定的 IAnimatable 实例。\n         * @param value - IAnimatable 实例。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        WorldClock.prototype.remove = function (value) {\n            var index = this._animatebles.indexOf(value);\n            if (index >= 0) {\n                this._animatebles[index] = null;\n                value.clock = null;\n            }\n        };\n        /**\n         * - Clear all IAnimatable instances.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 清除所有的 IAnimatable 实例。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        WorldClock.prototype.clear = function () {\n            for (var _i = 0, _a = this._animatebles; _i < _a.length; _i++) {\n                var animatable = _a[_i];\n                if (animatable !== null) {\n                    animatable.clock = null;\n                }\n            }\n        };\n        Object.defineProperty(WorldClock.prototype, \"clock\", {\n            /**\n             * @inheritDoc\n             */\n            get: function () {\n                return this._clock;\n            },\n            set: function (value) {\n                if (this._clock === value) {\n                    return;\n                }\n                if (this._clock !== null) {\n                    this._clock.remove(this);\n                }\n                this._clock = value;\n                if (this._clock !== null) {\n                    this._clock.add(this);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * - Deprecated, please refer to {@link dragonBones.BaseFactory#clock}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link dragonBones.BaseFactory#clock}。\n         * @deprecated\n         * @language zh_CN\n         */\n        WorldClock.clock = new WorldClock();\n        return WorldClock;\n    }());\n    dragonBones.WorldClock = WorldClock;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The animation player is used to play the animation data and manage the animation states.\n     * @see dragonBones.AnimationData\n     * @see dragonBones.AnimationState\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 动画播放器用来播放动画数据和管理动画状态。\n     * @see dragonBones.AnimationData\n     * @see dragonBones.AnimationState\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var Animation = /** @class */ (function (_super) {\n        __extends(Animation, _super);\n        function Animation() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._animationNames = [];\n            _this._animationStates = [];\n            _this._animations = {};\n            _this._animationConfig = null; // Initial value.\n            return _this;\n        }\n        Animation.toString = function () {\n            return \"[class dragonBones.Animation]\";\n        };\n        Animation.prototype._onClear = function () {\n            for (var _i = 0, _a = this._animationStates; _i < _a.length; _i++) {\n                var animationState = _a[_i];\n                animationState.returnToPool();\n            }\n            for (var k in this._animations) {\n                delete this._animations[k];\n            }\n            if (this._animationConfig !== null) {\n                this._animationConfig.returnToPool();\n            }\n            this.timeScale = 1.0;\n            this._lockUpdate = false;\n            this._animationDirty = false;\n            this._inheritTimeScale = 1.0;\n            this._animationNames.length = 0;\n            this._animationStates.length = 0;\n            //this._animations.clear();\n            this._armature = null; //\n            this._animationConfig = null; //\n            this._lastAnimationState = null;\n        };\n        Animation.prototype._fadeOut = function (animationConfig) {\n            switch (animationConfig.fadeOutMode) {\n                case 1 /* SameLayer */:\n                    for (var _i = 0, _a = this._animationStates; _i < _a.length; _i++) {\n                        var animationState = _a[_i];\n                        if (animationState._parent !== null) {\n                            continue;\n                        }\n                        if (animationState.layer === animationConfig.layer) {\n                            animationState.fadeOut(animationConfig.fadeOutTime, animationConfig.pauseFadeOut);\n                        }\n                    }\n                    break;\n                case 2 /* SameGroup */:\n                    for (var _b = 0, _c = this._animationStates; _b < _c.length; _b++) {\n                        var animationState = _c[_b];\n                        if (animationState._parent !== null) {\n                            continue;\n                        }\n                        if (animationState.group === animationConfig.group) {\n                            animationState.fadeOut(animationConfig.fadeOutTime, animationConfig.pauseFadeOut);\n                        }\n                    }\n                    break;\n                case 3 /* SameLayerAndGroup */:\n                    for (var _d = 0, _e = this._animationStates; _d < _e.length; _d++) {\n                        var animationState = _e[_d];\n                        if (animationState._parent !== null) {\n                            continue;\n                        }\n                        if (animationState.layer === animationConfig.layer &&\n                            animationState.group === animationConfig.group) {\n                            animationState.fadeOut(animationConfig.fadeOutTime, animationConfig.pauseFadeOut);\n                        }\n                    }\n                    break;\n                case 4 /* All */:\n                    for (var _f = 0, _g = this._animationStates; _f < _g.length; _f++) {\n                        var animationState = _g[_f];\n                        if (animationState._parent !== null) {\n                            continue;\n                        }\n                        animationState.fadeOut(animationConfig.fadeOutTime, animationConfig.pauseFadeOut);\n                    }\n                    break;\n                case 0 /* None */:\n                case 5 /* Single */:\n                default:\n                    break;\n            }\n        };\n        /**\n         * @internal\n         */\n        Animation.prototype.init = function (armature) {\n            if (this._armature !== null) {\n                return;\n            }\n            this._armature = armature;\n            this._animationConfig = dragonBones.BaseObject.borrowObject(dragonBones.AnimationConfig);\n        };\n        /**\n         * @internal\n         */\n        Animation.prototype.advanceTime = function (passedTime) {\n            if (passedTime < 0.0) { // Only animationState can reverse play.\n                passedTime = -passedTime;\n            }\n            if (this._armature.inheritAnimation && this._armature._parent !== null) { // Inherit parent animation timeScale.\n                this._inheritTimeScale = this._armature._parent._armature.animation._inheritTimeScale * this.timeScale;\n            }\n            else {\n                this._inheritTimeScale = this.timeScale;\n            }\n            if (this._inheritTimeScale !== 1.0) {\n                passedTime *= this._inheritTimeScale;\n            }\n            var animationStateCount = this._animationStates.length;\n            if (animationStateCount === 1) {\n                var animationState = this._animationStates[0];\n                if (animationState._fadeState > 0 && animationState._subFadeState > 0) {\n                    this._armature._dragonBones.bufferObject(animationState);\n                    this._animationStates.length = 0;\n                    this._lastAnimationState = null;\n                }\n                else {\n                    var animationData = animationState._animationData;\n                    var cacheFrameRate = animationData.cacheFrameRate;\n                    if (this._animationDirty && cacheFrameRate > 0.0) { // Update cachedFrameIndices.\n                        this._animationDirty = false;\n                        for (var _i = 0, _a = this._armature.getBones(); _i < _a.length; _i++) {\n                            var bone = _a[_i];\n                            bone._cachedFrameIndices = animationData.getBoneCachedFrameIndices(bone.name);\n                        }\n                        for (var _b = 0, _c = this._armature.getSlots(); _b < _c.length; _b++) {\n                            var slot = _c[_b];\n                            var rawDisplayDatas = slot.rawDisplayDatas;\n                            if (rawDisplayDatas !== null && rawDisplayDatas.length > 0) {\n                                var rawDsplayData = rawDisplayDatas[0];\n                                if (rawDsplayData !== null) {\n                                    if (rawDsplayData.parent === this._armature.armatureData.defaultSkin) {\n                                        slot._cachedFrameIndices = animationData.getSlotCachedFrameIndices(slot.name);\n                                        continue;\n                                    }\n                                }\n                            }\n                            slot._cachedFrameIndices = null;\n                        }\n                    }\n                    animationState.advanceTime(passedTime, cacheFrameRate);\n                }\n            }\n            else if (animationStateCount > 1) {\n                for (var i = 0, r = 0; i < animationStateCount; ++i) {\n                    var animationState = this._animationStates[i];\n                    if (animationState._fadeState > 0 && animationState._subFadeState > 0) {\n                        r++;\n                        this._armature._dragonBones.bufferObject(animationState);\n                        this._animationDirty = true;\n                        if (this._lastAnimationState === animationState) { // Update last animation state.\n                            this._lastAnimationState = null;\n                        }\n                    }\n                    else {\n                        if (r > 0) {\n                            this._animationStates[i - r] = animationState;\n                        }\n                        animationState.advanceTime(passedTime, 0.0);\n                    }\n                    if (i === animationStateCount - 1 && r > 0) { // Modify animation states size.\n                        this._animationStates.length -= r;\n                        if (this._lastAnimationState === null && this._animationStates.length > 0) {\n                            this._lastAnimationState = this._animationStates[this._animationStates.length - 1];\n                        }\n                    }\n                }\n                this._armature._cacheFrameIndex = -1;\n            }\n            else {\n                this._armature._cacheFrameIndex = -1;\n            }\n        };\n        /**\n         * - Clear all animations states.\n         * @see dragonBones.AnimationState\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 清除所有的动画状态。\n         * @see dragonBones.AnimationState\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.reset = function () {\n            for (var _i = 0, _a = this._animationStates; _i < _a.length; _i++) {\n                var animationState = _a[_i];\n                animationState.returnToPool();\n            }\n            this._animationDirty = false;\n            this._animationConfig.clear();\n            this._animationStates.length = 0;\n            this._lastAnimationState = null;\n        };\n        /**\n         * - Pause a specific animation state.\n         * @param animationName - The name of animation state. (If not set, it will pause all animations)\n         * @see dragonBones.AnimationState\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 暂停指定动画状态的播放。\n         * @param animationName - 动画状态名称。 （如果未设置，则暂停所有动画）\n         * @see dragonBones.AnimationState\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Animation.prototype.stop = function (animationName) {\n            if (animationName === void 0) { animationName = null; }\n            if (animationName !== null) {\n                var animationState = this.getState(animationName);\n                if (animationState !== null) {\n                    animationState.stop();\n                }\n            }\n            else {\n                for (var _i = 0, _a = this._animationStates; _i < _a.length; _i++) {\n                    var animationState = _a[_i];\n                    animationState.stop();\n                }\n            }\n        };\n        /**\n         * - Play animation with a specific animation config.\n         * The API is still in the experimental phase and may encounter bugs or stability or compatibility issues when used.\n         * @param animationConfig - The animation config.\n         * @returns The playing animation state.\n         * @see dragonBones.AnimationConfig\n         * @beta\n         * @version DragonBones 5.0\n         * @language en_US\n         */\n        /**\n         * - 通过指定的动画配置来播放动画。\n         * 该 API 仍在实验阶段，使用时可能遭遇 bug 或稳定性或兼容性问题。\n         * @param animationConfig - 动画配置。\n         * @returns 播放的动画状态。\n         * @see dragonBones.AnimationConfig\n         * @beta\n         * @version DragonBones 5.0\n         * @language zh_CN\n         */\n        Animation.prototype.playConfig = function (animationConfig) {\n            var animationName = animationConfig.animation;\n            if (!(animationName in this._animations)) {\n                console.warn(\"Non-existent animation.\\n\", \"DragonBones name: \" + this._armature.armatureData.parent.name, \"Armature name: \" + this._armature.name, \"Animation name: \" + animationName);\n                return null;\n            }\n            var animationData = this._animations[animationName];\n            if (animationConfig.fadeOutMode === 5 /* Single */) {\n                for (var _i = 0, _a = this._animationStates; _i < _a.length; _i++) {\n                    var animationState_1 = _a[_i];\n                    if (animationState_1._animationData === animationData) {\n                        return animationState_1;\n                    }\n                }\n            }\n            if (this._animationStates.length === 0) {\n                animationConfig.fadeInTime = 0.0;\n            }\n            else if (animationConfig.fadeInTime < 0.0) {\n                animationConfig.fadeInTime = animationData.fadeInTime;\n            }\n            if (animationConfig.fadeOutTime < 0.0) {\n                animationConfig.fadeOutTime = animationConfig.fadeInTime;\n            }\n            if (animationConfig.timeScale <= -100.0) {\n                animationConfig.timeScale = 1.0 / animationData.scale;\n            }\n            if (animationData.frameCount > 1) {\n                if (animationConfig.position < 0.0) {\n                    animationConfig.position %= animationData.duration;\n                    animationConfig.position = animationData.duration - animationConfig.position;\n                }\n                else if (animationConfig.position === animationData.duration) {\n                    animationConfig.position -= 0.000001; // Play a little time before end.\n                }\n                else if (animationConfig.position > animationData.duration) {\n                    animationConfig.position %= animationData.duration;\n                }\n                if (animationConfig.duration > 0.0 && animationConfig.position + animationConfig.duration > animationData.duration) {\n                    animationConfig.duration = animationData.duration - animationConfig.position;\n                }\n                if (animationConfig.playTimes < 0) {\n                    animationConfig.playTimes = animationData.playTimes;\n                }\n            }\n            else {\n                animationConfig.playTimes = 1;\n                animationConfig.position = 0.0;\n                if (animationConfig.duration > 0.0) {\n                    animationConfig.duration = 0.0;\n                }\n            }\n            if (animationConfig.duration === 0.0) {\n                animationConfig.duration = -1.0;\n            }\n            this._fadeOut(animationConfig);\n            var animationState = dragonBones.BaseObject.borrowObject(dragonBones.AnimationState);\n            animationState.init(this._armature, animationData, animationConfig);\n            this._animationDirty = true;\n            this._armature._cacheFrameIndex = -1;\n            if (this._animationStates.length > 0) {\n                var added = false;\n                for (var i = 0, l = this._animationStates.length; i < l; ++i) {\n                    if (animationState.layer > this._animationStates[i].layer) {\n                        added = true;\n                        this._animationStates.splice(i, 0, animationState);\n                        break;\n                    }\n                    else if (i !== l - 1 && animationState.layer > this._animationStates[i + 1].layer) {\n                        added = true;\n                        this._animationStates.splice(i + 1, 0, animationState);\n                        break;\n                    }\n                }\n                if (!added) {\n                    this._animationStates.push(animationState);\n                }\n            }\n            else {\n                this._animationStates.push(animationState);\n            }\n            // Child armature play same name animation.\n            for (var _b = 0, _c = this._armature.getSlots(); _b < _c.length; _b++) {\n                var slot = _c[_b];\n                var childArmature = slot.childArmature;\n                if (childArmature !== null && childArmature.inheritAnimation &&\n                    childArmature.animation.hasAnimation(animationName) &&\n                    childArmature.animation.getState(animationName) === null) {\n                    childArmature.animation.fadeIn(animationName); //\n                }\n            }\n            var isLocked = false;\n            for (var k in animationData.animationTimelines) {\n                if (!this._lockUpdate) {\n                    isLocked = true;\n                    this._lockUpdate = true;\n                }\n                var childAnimatiionState = this.fadeIn(k, animationConfig.fadeInTime, 1, animationState.layer, null, 0 /* None */);\n                if (childAnimatiionState !== null) {\n                    childAnimatiionState.resetToPose = false;\n                    childAnimatiionState._parent = animationState;\n                    childAnimatiionState.stop();\n                }\n            }\n            if (isLocked) {\n                this._lockUpdate = false;\n            }\n            if (!this._lockUpdate) {\n                if (animationConfig.fadeInTime <= 0.0) { // Blend animation state, update armature.\n                    this._armature.advanceTime(0.0);\n                }\n                this._lastAnimationState = animationState;\n            }\n            return animationState;\n        };\n        /**\n         * - Play a specific animation.\n         * @param animationName - The name of animation data. (If not set, The default animation will be played, or resume the animation playing from pause status, or replay the last playing animation)\n         * @param playTimes - Playing repeat times. [-1: Use default value of the animation data, 0: No end loop playing, [1~N]: Repeat N times] (default: -1)\n         * @returns The playing animation state.\n         * @example\n         * <pre>\n         *     armature.animation.play(\"walk\");\n         * </pre>\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 播放指定动画。\n         * @param animationName - 动画数据名称。 （如果未设置，则播放默认动画，或将暂停状态切换为播放状态，或重新播放之前播放的动画）\n         * @param playTimes - 循环播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）\n         * @returns 播放的动画状态。\n         * @example\n         * <pre>\n         *     armature.animation.play(\"walk\");\n         * </pre>\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Animation.prototype.play = function (animationName, playTimes) {\n            if (animationName === void 0) { animationName = null; }\n            if (playTimes === void 0) { playTimes = -1; }\n            this._animationConfig.clear();\n            this._animationConfig.resetToPose = true;\n            this._animationConfig.playTimes = playTimes;\n            this._animationConfig.fadeInTime = 0.0;\n            this._animationConfig.animation = animationName !== null ? animationName : \"\";\n            if (animationName !== null && animationName.length > 0) {\n                this.playConfig(this._animationConfig);\n            }\n            else if (this._lastAnimationState === null) {\n                var defaultAnimation = this._armature.armatureData.defaultAnimation;\n                if (defaultAnimation !== null) {\n                    this._animationConfig.animation = defaultAnimation.name;\n                    this.playConfig(this._animationConfig);\n                }\n            }\n            else if (!this._lastAnimationState.isPlaying && !this._lastAnimationState.isCompleted) {\n                this._lastAnimationState.play();\n            }\n            else {\n                this._animationConfig.animation = this._lastAnimationState.name;\n                this.playConfig(this._animationConfig);\n            }\n            return this._lastAnimationState;\n        };\n        /**\n         * - Fade in a specific animation.\n         * @param animationName - The name of animation data.\n         * @param fadeInTime - The fade in time. [-1: Use the default value of animation data, [0~N]: The fade in time (In seconds)] (Default: -1)\n         * @param playTimes - playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)\n         * @param layer - The blending layer, the animation states in high level layer will get the blending weights with high priority, when the total blending weights are more than 1.0, there will be no more weights can be allocated to the other animation states. (Default: 0)\n         * @param group - The blending group name, it is typically used to specify the substitution of multiple animation states blending. (Default: null)\n         * @param fadeOutMode - The fade out mode, which is typically used to specify alternate mode of multiple animation states blending. (Default: AnimationFadeOutMode.SameLayerAndGroup)\n         * @returns The playing animation state.\n         * @example\n         * <pre>\n         *     armature.animation.fadeIn(\"walk\", 0.3, 0, 0, \"normalGroup\").resetToPose = false;\n         *     armature.animation.fadeIn(\"attack\", 0.3, 1, 0, \"attackGroup\").resetToPose = false;\n         * </pre>\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 淡入播放指定的动画。\n         * @param animationName - 动画数据名称。\n         * @param fadeInTime - 淡入时间。 [-1: 使用动画数据默认值, [0~N]: 淡入时间 (以秒为单位)] （默认: -1）\n         * @param playTimes - 播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）\n         * @param layer - 混合图层，图层高的动画状态会优先获取混合权重，当混合权重分配总和超过 1.0 时，剩余的动画状态将不能再获得权重分配。 （默认: 0）\n         * @param group - 混合组名称，该属性通常用来指定多个动画状态混合时的相互替换关系。 （默认: null）\n         * @param fadeOutMode - 淡出模式，该属性通常用来指定多个动画状态混合时的相互替换模式。 （默认: AnimationFadeOutMode.SameLayerAndGroup）\n         * @returns 播放的动画状态。\n         * @example\n         * <pre>\n         *     armature.animation.fadeIn(\"walk\", 0.3, 0, 0, \"normalGroup\").resetToPose = false;\n         *     armature.animation.fadeIn(\"attack\", 0.3, 1, 0, \"attackGroup\").resetToPose = false;\n         * </pre>\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.fadeIn = function (animationName, fadeInTime, playTimes, layer, group, fadeOutMode) {\n            if (fadeInTime === void 0) { fadeInTime = -1.0; }\n            if (playTimes === void 0) { playTimes = -1; }\n            if (layer === void 0) { layer = 0; }\n            if (group === void 0) { group = null; }\n            if (fadeOutMode === void 0) { fadeOutMode = 3 /* SameLayerAndGroup */; }\n            this._animationConfig.clear();\n            this._animationConfig.fadeOutMode = fadeOutMode;\n            this._animationConfig.playTimes = playTimes;\n            this._animationConfig.layer = layer;\n            this._animationConfig.fadeInTime = fadeInTime;\n            this._animationConfig.animation = animationName;\n            this._animationConfig.group = group !== null ? group : \"\";\n            return this.playConfig(this._animationConfig);\n        };\n        /**\n         * - Play a specific animation from the specific time.\n         * @param animationName - The name of animation data.\n         * @param time - The start time point of playing. (In seconds)\n         * @param playTimes - Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)\n         * @returns The played animation state.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 从指定时间开始播放指定的动画。\n         * @param animationName - 动画数据名称。\n         * @param time - 播放开始的时间。 (以秒为单位)\n         * @param playTimes - 循环播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）\n         * @returns 播放的动画状态。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndPlayByTime = function (animationName, time, playTimes) {\n            if (time === void 0) { time = 0.0; }\n            if (playTimes === void 0) { playTimes = -1; }\n            this._animationConfig.clear();\n            this._animationConfig.resetToPose = true;\n            this._animationConfig.playTimes = playTimes;\n            this._animationConfig.position = time;\n            this._animationConfig.fadeInTime = 0.0;\n            this._animationConfig.animation = animationName;\n            return this.playConfig(this._animationConfig);\n        };\n        /**\n         * - Play a specific animation from the specific frame.\n         * @param animationName - The name of animation data.\n         * @param frame - The start frame of playing.\n         * @param playTimes - Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)\n         * @returns The played animation state.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 从指定帧开始播放指定的动画。\n         * @param animationName - 动画数据名称。\n         * @param frame - 播放开始的帧数。\n         * @param playTimes - 播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）\n         * @returns 播放的动画状态。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndPlayByFrame = function (animationName, frame, playTimes) {\n            if (frame === void 0) { frame = 0; }\n            if (playTimes === void 0) { playTimes = -1; }\n            this._animationConfig.clear();\n            this._animationConfig.resetToPose = true;\n            this._animationConfig.playTimes = playTimes;\n            this._animationConfig.fadeInTime = 0.0;\n            this._animationConfig.animation = animationName;\n            var animationData = animationName in this._animations ? this._animations[animationName] : null;\n            if (animationData !== null) {\n                this._animationConfig.position = animationData.duration * frame / animationData.frameCount;\n            }\n            return this.playConfig(this._animationConfig);\n        };\n        /**\n         * - Play a specific animation from the specific progress.\n         * @param animationName - The name of animation data.\n         * @param progress - The start progress value of playing.\n         * @param playTimes - Playing repeat times. [-1: Use the default value of animation data, 0: No end loop playing, [1~N]: Repeat N times] (Default: -1)\n         * @returns The played animation state.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 从指定进度开始播放指定的动画。\n         * @param animationName - 动画数据名称。\n         * @param progress - 开始播放的进度。\n         * @param playTimes - 播放次数。 [-1: 使用动画数据默认值, 0: 无限循环播放, [1~N]: 循环播放 N 次] （默认: -1）\n         * @returns 播放的动画状态。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndPlayByProgress = function (animationName, progress, playTimes) {\n            if (progress === void 0) { progress = 0.0; }\n            if (playTimes === void 0) { playTimes = -1; }\n            this._animationConfig.clear();\n            this._animationConfig.resetToPose = true;\n            this._animationConfig.playTimes = playTimes;\n            this._animationConfig.fadeInTime = 0.0;\n            this._animationConfig.animation = animationName;\n            var animationData = animationName in this._animations ? this._animations[animationName] : null;\n            if (animationData !== null) {\n                this._animationConfig.position = animationData.duration * (progress > 0.0 ? progress : 0.0);\n            }\n            return this.playConfig(this._animationConfig);\n        };\n        /**\n         * - Stop a specific animation at the specific time.\n         * @param animationName - The name of animation data.\n         * @param time - The stop time. (In seconds)\n         * @returns The played animation state.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 在指定时间停止指定动画播放\n         * @param animationName - 动画数据名称。\n         * @param time - 停止的时间。 (以秒为单位)\n         * @returns 播放的动画状态。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndStopByTime = function (animationName, time) {\n            if (time === void 0) { time = 0.0; }\n            var animationState = this.gotoAndPlayByTime(animationName, time, 1);\n            if (animationState !== null) {\n                animationState.stop();\n            }\n            return animationState;\n        };\n        /**\n         * - Stop a specific animation at the specific frame.\n         * @param animationName - The name of animation data.\n         * @param frame - The stop frame.\n         * @returns The played animation state.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 在指定帧停止指定动画的播放\n         * @param animationName - 动画数据名称。\n         * @param frame - 停止的帧数。\n         * @returns 播放的动画状态。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndStopByFrame = function (animationName, frame) {\n            if (frame === void 0) { frame = 0; }\n            var animationState = this.gotoAndPlayByFrame(animationName, frame, 1);\n            if (animationState !== null) {\n                animationState.stop();\n            }\n            return animationState;\n        };\n        /**\n         * - Stop a specific animation at the specific progress.\n         * @param animationName - The name of animation data.\n         * @param progress - The stop progress value.\n         * @returns The played animation state.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 在指定的进度停止指定的动画播放。\n         * @param animationName - 动画数据名称。\n         * @param progress - 停止进度。\n         * @returns 播放的动画状态。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndStopByProgress = function (animationName, progress) {\n            if (progress === void 0) { progress = 0.0; }\n            var animationState = this.gotoAndPlayByProgress(animationName, progress, 1);\n            if (animationState !== null) {\n                animationState.stop();\n            }\n            return animationState;\n        };\n        /**\n         * - Get a specific animation state.\n         * @param animationName - The name of animation state.\n         * @example\n         * <pre>\n         *     armature.animation.play(\"walk\");\n         *     let walkState = armature.animation.getState(\"walk\");\n         *     walkState.timeScale = 0.5;\n         * </pre>\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取指定的动画状态\n         * @param animationName - 动画状态名称。\n         * @example\n         * <pre>\n         *     armature.animation.play(\"walk\");\n         *     let walkState = armature.animation.getState(\"walk\");\n         *     walkState.timeScale = 0.5;\n         * </pre>\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Animation.prototype.getState = function (animationName) {\n            var i = this._animationStates.length;\n            while (i--) {\n                var animationState = this._animationStates[i];\n                if (animationState.name === animationName) {\n                    return animationState;\n                }\n            }\n            return null;\n        };\n        /**\n         * - Check whether a specific animation data is included.\n         * @param animationName - The name of animation data.\n         * @see dragonBones.AnimationData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 检查是否包含指定的动画数据\n         * @param animationName - 动画数据名称。\n         * @see dragonBones.AnimationData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        Animation.prototype.hasAnimation = function (animationName) {\n            return animationName in this._animations;\n        };\n        /**\n         * - Get all the animation states.\n         * @version DragonBones 5.1\n         * @language en_US\n         */\n        /**\n         * - 获取所有的动画状态\n         * @version DragonBones 5.1\n         * @language zh_CN\n         */\n        Animation.prototype.getStates = function () {\n            return this._animationStates;\n        };\n        Object.defineProperty(Animation.prototype, \"isPlaying\", {\n            /**\n             * - Check whether there is an animation state is playing\n             * @see dragonBones.AnimationState\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 检查是否有动画状态正在播放\n             * @see dragonBones.AnimationState\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                for (var _i = 0, _a = this._animationStates; _i < _a.length; _i++) {\n                    var animationState = _a[_i];\n                    if (animationState.isPlaying) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Animation.prototype, \"isCompleted\", {\n            /**\n             * - Check whether all the animation states' playing were finished.\n             * @see dragonBones.AnimationState\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 检查是否所有的动画状态均已播放完毕。\n             * @see dragonBones.AnimationState\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                for (var _i = 0, _a = this._animationStates; _i < _a.length; _i++) {\n                    var animationState = _a[_i];\n                    if (!animationState.isCompleted) {\n                        return false;\n                    }\n                }\n                return this._animationStates.length > 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Animation.prototype, \"lastAnimationName\", {\n            /**\n             * - The name of the last playing animation state.\n             * @see #lastAnimationState\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 上一个播放的动画状态名称\n             * @see #lastAnimationState\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._lastAnimationState !== null ? this._lastAnimationState.name : \"\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Animation.prototype, \"animationNames\", {\n            /**\n             * - The name of all animation data\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 所有动画数据的名称\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._animationNames;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Animation.prototype, \"animations\", {\n            /**\n             * - All animation data.\n             * @version DragonBones 4.5\n             * @language en_US\n             */\n            /**\n             * - 所有的动画数据。\n             * @version DragonBones 4.5\n             * @language zh_CN\n             */\n            get: function () {\n                return this._animations;\n            },\n            set: function (value) {\n                if (this._animations === value) {\n                    return;\n                }\n                this._animationNames.length = 0;\n                for (var k in this._animations) {\n                    delete this._animations[k];\n                }\n                for (var k in value) {\n                    this._animationNames.push(k);\n                    this._animations[k] = value[k];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Animation.prototype, \"animationConfig\", {\n            /**\n             * - An AnimationConfig instance that can be used quickly.\n             * @see dragonBones.AnimationConfig\n             * @version DragonBones 5.0\n             * @language en_US\n             */\n            /**\n             * - 一个可以快速使用的动画配置实例。\n             * @see dragonBones.AnimationConfig\n             * @version DragonBones 5.0\n             * @language zh_CN\n             */\n            get: function () {\n                this._animationConfig.clear();\n                return this._animationConfig;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Animation.prototype, \"lastAnimationState\", {\n            /**\n             * - The last playing animation state\n             * @see dragonBones.AnimationState\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 上一个播放的动画状态\n             * @see dragonBones.AnimationState\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._lastAnimationState;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * - Deprecated, please refer to {@link #play()} {@link #fadeIn()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #play()} {@link #fadeIn()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndPlay = function (animationName, fadeInTime, duration, playTimes, layer, group, fadeOutMode, pauseFadeOut, pauseFadeIn) {\n            if (fadeInTime === void 0) { fadeInTime = -1; }\n            if (duration === void 0) { duration = -1; }\n            if (playTimes === void 0) { playTimes = -1; }\n            if (layer === void 0) { layer = 0; }\n            if (group === void 0) { group = null; }\n            if (fadeOutMode === void 0) { fadeOutMode = 3 /* SameLayerAndGroup */; }\n            if (pauseFadeOut === void 0) { pauseFadeOut = true; }\n            if (pauseFadeIn === void 0) { pauseFadeIn = true; }\n            console.warn(\"Deprecated.\");\n            // tslint:disable-next-line:no-unused-expression\n            pauseFadeOut;\n            // tslint:disable-next-line:no-unused-expression\n            pauseFadeIn;\n            this._animationConfig.clear();\n            this._animationConfig.resetToPose = true;\n            this._animationConfig.fadeOutMode = fadeOutMode;\n            this._animationConfig.playTimes = playTimes;\n            this._animationConfig.layer = layer;\n            this._animationConfig.fadeInTime = fadeInTime;\n            this._animationConfig.animation = animationName;\n            this._animationConfig.group = group !== null ? group : \"\";\n            var animationData = this._animations[animationName];\n            if (animationData && duration > 0.0) {\n                this._animationConfig.timeScale = animationData.duration / duration;\n            }\n            return this.playConfig(this._animationConfig);\n        };\n        /**\n         * - Deprecated, please refer to {@link #gotoAndStopByTime()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #gotoAndStopByTime()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        Animation.prototype.gotoAndStop = function (animationName, time) {\n            if (time === void 0) { time = 0; }\n            console.warn(\"Deprecated.\");\n            return this.gotoAndStopByTime(animationName, time);\n        };\n        Object.defineProperty(Animation.prototype, \"animationList\", {\n            /**\n             * - Deprecated, please refer to {@link #animationNames}.\n             * @deprecated\n             * @language en_US\n             */\n            /**\n             * - 已废弃，请参考 {@link #animationNames}。\n             * @deprecated\n             * @language zh_CN\n             */\n            get: function () {\n                console.warn(\"Deprecated.\");\n                return this._animationNames;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Animation.prototype, \"animationDataList\", {\n            /**\n             * - Deprecated, please refer to {@link #animationNames}.\n             * @deprecated\n             * @language en_US\n             */\n            /**\n             * - 已废弃，请参考 {@link #animationNames}。\n             * @deprecated\n             * @language zh_CN\n             */\n            get: function () {\n                console.warn(\"Deprecated.\");\n                var list = [];\n                for (var i = 0, l = this._animationNames.length; i < l; ++i) {\n                    list.push(this._animations[this._animationNames[i]]);\n                }\n                return list;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Animation;\n    }(dragonBones.BaseObject));\n    dragonBones.Animation = Animation;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The animation state is generated when the animation data is played.\n     * @see dragonBones.Animation\n     * @see dragonBones.AnimationData\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 动画状态由播放动画数据时产生。\n     * @see dragonBones.Animation\n     * @see dragonBones.AnimationData\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var AnimationState = /** @class */ (function (_super) {\n        __extends(AnimationState, _super);\n        function AnimationState() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /**\n             * @internal\n             */\n            _this._blendState = new BlendState();\n            _this._boneMask = [];\n            _this._boneTimelines = [];\n            _this._surfaceTimelines = [];\n            _this._slotTimelines = [];\n            _this._constraintTimelines = [];\n            _this._animationTimelines = [];\n            _this._poseTimelines = [];\n            _this._bonePoses = {};\n            /**\n             * @internal\n             */\n            _this._actionTimeline = null; // Initial value.\n            _this._zOrderTimeline = null; // Initial value.\n            /**\n             * @internal\n             */\n            _this._parent = null; // Initial value.\n            return _this;\n        }\n        AnimationState.toString = function () {\n            return \"[class dragonBones.AnimationState]\";\n        };\n        AnimationState.prototype._onClear = function () {\n            for (var _i = 0, _a = this._boneTimelines; _i < _a.length; _i++) {\n                var timeline = _a[_i];\n                timeline.returnToPool();\n            }\n            for (var _b = 0, _c = this._surfaceTimelines; _b < _c.length; _b++) {\n                var timeline = _c[_b];\n                timeline.returnToPool();\n            }\n            for (var _d = 0, _e = this._slotTimelines; _d < _e.length; _d++) {\n                var timeline = _e[_d];\n                timeline.returnToPool();\n            }\n            for (var _f = 0, _g = this._constraintTimelines; _f < _g.length; _f++) {\n                var timeline = _g[_f];\n                timeline.returnToPool();\n            }\n            for (var _h = 0, _j = this._animationTimelines; _h < _j.length; _h++) {\n                var timeline = _j[_h];\n                timeline.returnToPool();\n            }\n            for (var k in this._bonePoses) {\n                this._bonePoses[k].returnToPool();\n                delete this._bonePoses[k];\n            }\n            if (this._actionTimeline !== null) {\n                this._actionTimeline.returnToPool();\n            }\n            if (this._zOrderTimeline !== null) {\n                this._zOrderTimeline.returnToPool();\n            }\n            this.actionEnabled = false;\n            this.additiveBlending = false;\n            this.displayControl = false;\n            this.resetToPose = false;\n            this.playTimes = 1;\n            this.layer = 0;\n            this.timeScale = 1.0;\n            this.weight = 1.0;\n            this.autoFadeOutTime = 0.0;\n            this.fadeTotalTime = 0.0;\n            this.name = \"\";\n            this.group = \"\";\n            this._timelineDirty = 2;\n            this._playheadState = 0;\n            this._fadeState = -1;\n            this._subFadeState = -1;\n            this._position = 0.0;\n            this._duration = 0.0;\n            this._fadeTime = 0.0;\n            this._time = 0.0;\n            this._fadeProgress = 0.0;\n            this._weightResult = 0.0;\n            this._blendState.clear();\n            this._boneMask.length = 0;\n            this._boneTimelines.length = 0;\n            this._surfaceTimelines.length = 0;\n            this._slotTimelines.length = 0;\n            this._constraintTimelines.length = 0;\n            this._animationTimelines.length = 0;\n            this._poseTimelines.length = 0;\n            // this._bonePoses.clear();\n            this._animationData = null; //\n            this._armature = null; //\n            this._actionTimeline = null; //\n            this._zOrderTimeline = null;\n            this._parent = null; //\n        };\n        AnimationState.prototype._updateTimelines = function () {\n            { // Update constraint timelines.\n                for (var _i = 0, _a = this._armature._constraints; _i < _a.length; _i++) {\n                    var constraint = _a[_i];\n                    var timelineDatas = this._animationData.getConstraintTimelines(constraint.name);\n                    if (timelineDatas !== null) {\n                        for (var _b = 0, timelineDatas_1 = timelineDatas; _b < timelineDatas_1.length; _b++) {\n                            var timelineData = timelineDatas_1[_b];\n                            switch (timelineData.type) {\n                                case 30 /* IKConstraint */: {\n                                    var timeline = dragonBones.BaseObject.borrowObject(dragonBones.IKConstraintTimelineState);\n                                    timeline.constraint = constraint;\n                                    timeline.init(this._armature, this, timelineData);\n                                    this._constraintTimelines.push(timeline);\n                                    break;\n                                }\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                    else if (this.resetToPose) { // Pose timeline.\n                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.IKConstraintTimelineState);\n                        timeline.constraint = constraint;\n                        timeline.init(this._armature, this, null);\n                        this._constraintTimelines.push(timeline);\n                        this._poseTimelines.push(timeline);\n                    }\n                }\n            }\n            { // Update animation timelines.\n                for (var _c = 0, _d = this._armature.animation.getStates(); _c < _d.length; _c++) {\n                    var animationState = _d[_c];\n                    if (animationState._parent !== this) {\n                        continue;\n                    }\n                    var timelineDatas = this._animationData.getAnimationTimelines(animationState.name);\n                    if (timelineDatas === null) {\n                        continue;\n                    }\n                    for (var _e = 0, timelineDatas_2 = timelineDatas; _e < timelineDatas_2.length; _e++) {\n                        var timelineData = timelineDatas_2[_e];\n                        switch (timelineData.type) {\n                            case 40 /* AnimationTime */: {\n                                var timeline = dragonBones.BaseObject.borrowObject(dragonBones.AnimationTimelineState);\n                                timeline.animationState = animationState;\n                                timeline.init(this._armature, this, timelineData);\n                                this._animationTimelines.push(timeline);\n                                break;\n                            }\n                            default:\n                                break;\n                        }\n                    }\n                }\n            }\n        };\n        AnimationState.prototype._updateBoneAndSlotTimelines = function () {\n            { // Update bone and surface timelines.\n                var boneTimelines = {};\n                for (var _i = 0, _a = this._boneTimelines; _i < _a.length; _i++) { // Create bone timelines map.\n                    var timeline = _a[_i];\n                    var timelineName = timeline.bone.name;\n                    if (!(timelineName in boneTimelines)) {\n                        boneTimelines[timelineName] = [];\n                    }\n                    boneTimelines[timelineName].push(timeline);\n                }\n                for (var _b = 0, _c = this._armature.getBones(); _b < _c.length; _b++) {\n                    var bone = _c[_b];\n                    var timelineName = bone.name;\n                    if (!this.containsBoneMask(timelineName)) {\n                        continue;\n                    }\n                    if (timelineName in boneTimelines) { // Remove bone timeline from map.\n                        delete boneTimelines[timelineName];\n                    }\n                    else if (bone._boneData.type === 0 /* Bone */) { // Create new bone timeline.\n                        var timelineDatas = this._animationData.getBoneTimelines(timelineName);\n                        var bonePose = timelineName in this._bonePoses ? this._bonePoses[timelineName] : (this._bonePoses[timelineName] = dragonBones.BaseObject.borrowObject(BonePose));\n                        if (timelineDatas !== null) {\n                            for (var _d = 0, timelineDatas_3 = timelineDatas; _d < timelineDatas_3.length; _d++) {\n                                var timelineData = timelineDatas_3[_d];\n                                switch (timelineData.type) {\n                                    case 10 /* BoneAll */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.BoneAllTimelineState);\n                                        timeline.bone = bone;\n                                        timeline.bonePose = bonePose;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._boneTimelines.push(timeline);\n                                        break;\n                                    }\n                                    case 11 /* BoneTranslate */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.BoneTranslateTimelineState);\n                                        timeline.bone = bone;\n                                        timeline.bonePose = bonePose;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._boneTimelines.push(timeline);\n                                        break;\n                                    }\n                                    case 12 /* BoneRotate */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.BoneRotateTimelineState);\n                                        timeline.bone = bone;\n                                        timeline.bonePose = bonePose;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._boneTimelines.push(timeline);\n                                        break;\n                                    }\n                                    case 13 /* BoneScale */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.BoneScaleTimelineState);\n                                        timeline.bone = bone;\n                                        timeline.bonePose = bonePose;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._boneTimelines.push(timeline);\n                                        break;\n                                    }\n                                    default:\n                                        break;\n                                }\n                            }\n                        }\n                        else if (this.resetToPose) { // Pose timeline.\n                            var timeline = dragonBones.BaseObject.borrowObject(dragonBones.BoneAllTimelineState);\n                            timeline.bone = bone;\n                            timeline.bonePose = bonePose;\n                            timeline.init(this._armature, this, null);\n                            this._boneTimelines.push(timeline);\n                            this._poseTimelines.push(timeline);\n                        }\n                    }\n                    else if (bone._boneData.type === 1 /* Surface */) {\n                        var timelineDatas = this._animationData.getSurfaceTimelines(timelineName);\n                        if (timelineDatas !== null) {\n                            for (var _e = 0, timelineDatas_4 = timelineDatas; _e < timelineDatas_4.length; _e++) {\n                                var timelineData = timelineDatas_4[_e];\n                                switch (timelineData.type) {\n                                    case 50 /* Surface */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.SurfaceTimelineState);\n                                        timeline.surface = bone;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._surfaceTimelines.push(timeline);\n                                        break;\n                                    }\n                                    default:\n                                        break;\n                                }\n                            }\n                        }\n                        else if (this.resetToPose) { // Pose timeline.\n                            var timeline = dragonBones.BaseObject.borrowObject(dragonBones.SurfaceTimelineState);\n                            timeline.surface = bone;\n                            timeline.init(this._armature, this, null);\n                            this._surfaceTimelines.push(timeline);\n                            this._poseTimelines.push(timeline);\n                        }\n                    }\n                }\n                for (var k in boneTimelines) { // Remove bone timelines.\n                    for (var _f = 0, _g = boneTimelines[k]; _f < _g.length; _f++) {\n                        var timeline = _g[_f];\n                        this._boneTimelines.splice(this._boneTimelines.indexOf(timeline), 1);\n                        timeline.returnToPool();\n                    }\n                }\n            }\n            { // Update slot timelines.\n                var slotTimelines = {};\n                var ffdFlags = [];\n                for (var _h = 0, _j = this._slotTimelines; _h < _j.length; _h++) { // Create slot timelines map.\n                    var timeline = _j[_h];\n                    var timelineName = timeline.slot.name;\n                    if (!(timelineName in slotTimelines)) {\n                        slotTimelines[timelineName] = [];\n                    }\n                    slotTimelines[timelineName].push(timeline);\n                }\n                for (var _k = 0, _l = this._armature.getSlots(); _k < _l.length; _k++) {\n                    var slot = _l[_k];\n                    var boneName = slot.parent.name;\n                    if (!this.containsBoneMask(boneName)) {\n                        continue;\n                    }\n                    var timelineName = slot.name;\n                    var timelineDatas = this._animationData.getSlotTimelines(timelineName);\n                    if (timelineName in slotTimelines) { // Remove slot timeline from map.\n                        delete slotTimelines[timelineName];\n                    }\n                    else { // Create new slot timeline.\n                        var displayIndexFlag = false;\n                        var colorFlag = false;\n                        ffdFlags.length = 0;\n                        if (timelineDatas !== null) {\n                            for (var _m = 0, timelineDatas_5 = timelineDatas; _m < timelineDatas_5.length; _m++) {\n                                var timelineData = timelineDatas_5[_m];\n                                switch (timelineData.type) {\n                                    case 20 /* SlotDisplay */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.SlotDislayTimelineState);\n                                        timeline.slot = slot;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._slotTimelines.push(timeline);\n                                        displayIndexFlag = true;\n                                        break;\n                                    }\n                                    case 21 /* SlotColor */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.SlotColorTimelineState);\n                                        timeline.slot = slot;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._slotTimelines.push(timeline);\n                                        colorFlag = true;\n                                        break;\n                                    }\n                                    case 22 /* SlotDeform */: {\n                                        var timeline = dragonBones.BaseObject.borrowObject(dragonBones.DeformTimelineState);\n                                        timeline.slot = slot;\n                                        timeline.init(this._armature, this, timelineData);\n                                        this._slotTimelines.push(timeline);\n                                        ffdFlags.push(timeline.vertexOffset);\n                                        break;\n                                    }\n                                    default:\n                                        break;\n                                }\n                            }\n                        }\n                        if (this.resetToPose) { // Pose timeline.\n                            if (!displayIndexFlag) {\n                                var timeline = dragonBones.BaseObject.borrowObject(dragonBones.SlotDislayTimelineState);\n                                timeline.slot = slot;\n                                timeline.init(this._armature, this, null);\n                                this._slotTimelines.push(timeline);\n                                this._poseTimelines.push(timeline);\n                            }\n                            if (!colorFlag) {\n                                var timeline = dragonBones.BaseObject.borrowObject(dragonBones.SlotColorTimelineState);\n                                timeline.slot = slot;\n                                timeline.init(this._armature, this, null);\n                                this._slotTimelines.push(timeline);\n                                this._poseTimelines.push(timeline);\n                            }\n                            if (slot.rawDisplayDatas !== null) {\n                                for (var _o = 0, _p = slot.rawDisplayDatas; _o < _p.length; _o++) {\n                                    var displayData = _p[_o];\n                                    if (displayData !== null && displayData.type === 2 /* Mesh */) {\n                                        var meshOffset = displayData.vertices.offset;\n                                        if (ffdFlags.indexOf(meshOffset) < 0) {\n                                            var timeline = dragonBones.BaseObject.borrowObject(dragonBones.DeformTimelineState);\n                                            timeline.vertexOffset = meshOffset; //\n                                            timeline.slot = slot;\n                                            timeline.init(this._armature, this, null);\n                                            this._slotTimelines.push(timeline);\n                                            this._poseTimelines.push(timeline);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                for (var k in slotTimelines) { // Remove slot timelines.\n                    for (var _q = 0, _r = slotTimelines[k]; _q < _r.length; _q++) {\n                        var timeline = _r[_q];\n                        this._slotTimelines.splice(this._slotTimelines.indexOf(timeline), 1);\n                        timeline.returnToPool();\n                    }\n                }\n            }\n        };\n        AnimationState.prototype._advanceFadeTime = function (passedTime) {\n            var isFadeOut = this._fadeState > 0;\n            if (this._subFadeState < 0) { // Fade start event.\n                this._subFadeState = 0;\n                var eventType = isFadeOut ? dragonBones.EventObject.FADE_OUT : dragonBones.EventObject.FADE_IN;\n                if (this._armature.eventDispatcher.hasDBEventListener(eventType)) {\n                    var eventObject = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                    eventObject.type = eventType;\n                    eventObject.armature = this._armature;\n                    eventObject.animationState = this;\n                    this._armature._dragonBones.bufferEvent(eventObject);\n                }\n            }\n            if (passedTime < 0.0) {\n                passedTime = -passedTime;\n            }\n            this._fadeTime += passedTime;\n            if (this._fadeTime >= this.fadeTotalTime) { // Fade complete.\n                this._subFadeState = 1;\n                this._fadeProgress = isFadeOut ? 0.0 : 1.0;\n            }\n            else if (this._fadeTime > 0.0) { // Fading.\n                this._fadeProgress = isFadeOut ? (1.0 - this._fadeTime / this.fadeTotalTime) : (this._fadeTime / this.fadeTotalTime);\n            }\n            else { // Before fade.\n                this._fadeProgress = isFadeOut ? 1.0 : 0.0;\n            }\n            if (this._subFadeState > 0) { // Fade complete event.\n                if (!isFadeOut) {\n                    this._playheadState |= 1; // x1\n                    this._fadeState = 0;\n                }\n                var eventType = isFadeOut ? dragonBones.EventObject.FADE_OUT_COMPLETE : dragonBones.EventObject.FADE_IN_COMPLETE;\n                if (this._armature.eventDispatcher.hasDBEventListener(eventType)) {\n                    var eventObject = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                    eventObject.type = eventType;\n                    eventObject.armature = this._armature;\n                    eventObject.animationState = this;\n                    this._armature._dragonBones.bufferEvent(eventObject);\n                }\n            }\n        };\n        /**\n         * @internal\n         */\n        AnimationState.prototype.init = function (armature, animationData, animationConfig) {\n            if (this._armature !== null) {\n                return;\n            }\n            this._armature = armature;\n            this._animationData = animationData;\n            //\n            this.resetToPose = animationConfig.resetToPose;\n            this.additiveBlending = animationConfig.additiveBlending;\n            this.displayControl = animationConfig.displayControl;\n            this.actionEnabled = animationConfig.actionEnabled;\n            this.layer = animationConfig.layer;\n            this.playTimes = animationConfig.playTimes;\n            this.timeScale = animationConfig.timeScale;\n            this.fadeTotalTime = animationConfig.fadeInTime;\n            this.autoFadeOutTime = animationConfig.autoFadeOutTime;\n            this.weight = animationConfig.weight;\n            this.name = animationConfig.name.length > 0 ? animationConfig.name : animationConfig.animation;\n            this.group = animationConfig.group;\n            if (animationConfig.pauseFadeIn) {\n                this._playheadState = 2; // 10\n            }\n            else {\n                this._playheadState = 3; // 11\n            }\n            if (animationConfig.duration < 0.0) {\n                this._position = 0.0;\n                this._duration = this._animationData.duration;\n                if (animationConfig.position !== 0.0) {\n                    if (this.timeScale >= 0.0) {\n                        this._time = animationConfig.position;\n                    }\n                    else {\n                        this._time = animationConfig.position - this._duration;\n                    }\n                }\n                else {\n                    this._time = 0.0;\n                }\n            }\n            else {\n                this._position = animationConfig.position;\n                this._duration = animationConfig.duration;\n                this._time = 0.0;\n            }\n            if (this.timeScale < 0.0 && this._time === 0.0) {\n                this._time = -0.000001; // Turn to end.\n            }\n            if (this.fadeTotalTime <= 0.0) {\n                this._fadeProgress = 0.999999; // Make different.\n            }\n            if (animationConfig.boneMask.length > 0) {\n                this._boneMask.length = animationConfig.boneMask.length;\n                for (var i = 0, l = this._boneMask.length; i < l; ++i) {\n                    this._boneMask[i] = animationConfig.boneMask[i];\n                }\n            }\n            this._actionTimeline = dragonBones.BaseObject.borrowObject(dragonBones.ActionTimelineState);\n            this._actionTimeline.init(this._armature, this, this._animationData.actionTimeline);\n            this._actionTimeline.currentTime = this._time;\n            if (this._actionTimeline.currentTime < 0.0) {\n                this._actionTimeline.currentTime = this._duration - this._actionTimeline.currentTime;\n            }\n            if (this._animationData.zOrderTimeline !== null) {\n                this._zOrderTimeline = dragonBones.BaseObject.borrowObject(dragonBones.ZOrderTimelineState);\n                this._zOrderTimeline.init(this._armature, this, this._animationData.zOrderTimeline);\n            }\n        };\n        /**\n         * @internal\n         */\n        AnimationState.prototype.advanceTime = function (passedTime, cacheFrameRate) {\n            this._blendState.dirty = false;\n            // Update fade time.\n            if (this._fadeState !== 0 || this._subFadeState !== 0) {\n                this._advanceFadeTime(passedTime);\n            }\n            // Update time.\n            if (this._playheadState === 3) { // 11\n                if (this.timeScale !== 1.0) {\n                    passedTime *= this.timeScale;\n                }\n                this._time += passedTime;\n            }\n            // Update timeline.\n            if (this._timelineDirty !== 0) {\n                if (this._timelineDirty === 2) {\n                    this._updateTimelines();\n                }\n                this._timelineDirty = 0;\n                this._updateBoneAndSlotTimelines();\n            }\n            if (this.weight === 0.0) {\n                return;\n            }\n            var isCacheEnabled = this._fadeState === 0 && cacheFrameRate > 0.0;\n            var isUpdateTimeline = true;\n            var isUpdateBoneTimeline = true;\n            var time = this._time;\n            this._weightResult = this.weight * this._fadeProgress;\n            if (this._parent !== null) {\n                this._weightResult *= this._parent._weightResult / this._parent._fadeProgress;\n            }\n            if (this._actionTimeline.playState <= 0) {\n                this._actionTimeline.update(time); // Update main timeline.\n            }\n            if (isCacheEnabled) { // Cache time internval.\n                var internval = cacheFrameRate * 2.0;\n                this._actionTimeline.currentTime = Math.floor(this._actionTimeline.currentTime * internval) / internval;\n            }\n            if (this._zOrderTimeline !== null && this._zOrderTimeline.playState <= 0) { // Update zOrder timeline.\n                this._zOrderTimeline.update(time);\n            }\n            if (isCacheEnabled) { // Update cache.\n                var cacheFrameIndex = Math.floor(this._actionTimeline.currentTime * cacheFrameRate); // uint\n                if (this._armature._cacheFrameIndex === cacheFrameIndex) { // Same cache.\n                    isUpdateTimeline = false;\n                    isUpdateBoneTimeline = false;\n                }\n                else {\n                    this._armature._cacheFrameIndex = cacheFrameIndex;\n                    if (this._animationData.cachedFrames[cacheFrameIndex]) { // Cached.\n                        isUpdateBoneTimeline = false;\n                    }\n                    else { // Cache.\n                        this._animationData.cachedFrames[cacheFrameIndex] = true;\n                    }\n                }\n            }\n            if (isUpdateTimeline) {\n                if (isUpdateBoneTimeline) { // Update bone timelines.\n                    for (var i = 0, l = this._boneTimelines.length; i < l; ++i) {\n                        var timeline = this._boneTimelines[i];\n                        if (timeline.playState <= 0) {\n                            timeline.update(time);\n                        }\n                        if (i === l - 1 || timeline.bone !== this._boneTimelines[i + 1].bone) {\n                            var state = timeline.bone._blendState.update(this._weightResult, this.layer);\n                            if (state !== 0) {\n                                timeline.blend(state);\n                            }\n                        }\n                    }\n                }\n                for (var i = 0, l = this._surfaceTimelines.length; i < l; ++i) {\n                    var timeline = this._surfaceTimelines[i];\n                    var state = timeline.surface._blendState.update(this._weightResult, this.layer);\n                    if (timeline.playState <= 0) {\n                        timeline.update(time);\n                    }\n                    if (state !== 0) {\n                        timeline.blend(state);\n                    }\n                }\n                if (this.displayControl) {\n                    for (var i = 0, l = this._slotTimelines.length; i < l; ++i) {\n                        var timeline = this._slotTimelines[i];\n                        var displayController = timeline.slot.displayController;\n                        if (displayController === null ||\n                            displayController === this.name ||\n                            displayController === this.group) {\n                            if (timeline.playState <= 0) {\n                                timeline.update(time);\n                            }\n                        }\n                    }\n                }\n                for (var i = 0, l = this._constraintTimelines.length; i < l; ++i) {\n                    var timeline = this._constraintTimelines[i];\n                    if (timeline.playState <= 0) {\n                        timeline.update(time);\n                    }\n                }\n                for (var i = 0, l = this._animationTimelines.length; i < l; ++i) {\n                    var timeline = this._animationTimelines[i];\n                    var state = timeline.animationState._blendState.update(this._weightResult, this.layer);\n                    if (timeline.playState <= 0) {\n                        timeline.update(time);\n                    }\n                    if (state !== 0) {\n                        timeline.blend(state);\n                    }\n                }\n            }\n            if (this._fadeState === 0) {\n                if (this._subFadeState > 0) {\n                    this._subFadeState = 0;\n                    if (this._poseTimelines.length > 0) { // Remove pose timelines.\n                        for (var _i = 0, _a = this._poseTimelines; _i < _a.length; _i++) {\n                            var timeline = _a[_i];\n                            if (timeline instanceof dragonBones.BoneTimelineState) {\n                                this._boneTimelines.splice(this._boneTimelines.indexOf(timeline), 1);\n                            }\n                            else if (timeline instanceof dragonBones.SurfaceTimelineState) {\n                                this._surfaceTimelines.splice(this._surfaceTimelines.indexOf(timeline), 1);\n                            }\n                            else if (timeline instanceof dragonBones.SlotTimelineState) {\n                                this._slotTimelines.splice(this._slotTimelines.indexOf(timeline), 1);\n                            }\n                            else if (timeline instanceof dragonBones.ConstraintTimelineState) {\n                                this._constraintTimelines.splice(this._constraintTimelines.indexOf(timeline), 1);\n                            }\n                            timeline.returnToPool();\n                        }\n                        this._poseTimelines.length = 0;\n                    }\n                }\n                if (this._actionTimeline.playState > 0) {\n                    if (this.autoFadeOutTime >= 0.0) { // Auto fade out.\n                        this.fadeOut(this.autoFadeOutTime);\n                    }\n                }\n            }\n        };\n        /**\n         * - Continue play.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 继续播放。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        AnimationState.prototype.play = function () {\n            this._playheadState = 3; // 11\n        };\n        /**\n         * - Stop play.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 暂停播放。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        AnimationState.prototype.stop = function () {\n            this._playheadState &= 1; // 0x\n        };\n        /**\n         * - Fade out the animation state.\n         * @param fadeOutTime - The fade out time. (In seconds)\n         * @param pausePlayhead - Whether to pause the animation playing when fade out.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 淡出动画状态。\n         * @param fadeOutTime - 淡出时间。 （以秒为单位）\n         * @param pausePlayhead - 淡出时是否暂停播放。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        AnimationState.prototype.fadeOut = function (fadeOutTime, pausePlayhead) {\n            if (pausePlayhead === void 0) { pausePlayhead = true; }\n            if (fadeOutTime < 0.0) {\n                fadeOutTime = 0.0;\n            }\n            if (pausePlayhead) {\n                this._playheadState &= 2; // x0\n            }\n            if (this._fadeState > 0) {\n                if (fadeOutTime > this.fadeTotalTime - this._fadeTime) { // If the animation is already in fade out, the new fade out will be ignored.\n                    return;\n                }\n            }\n            else {\n                this._fadeState = 1;\n                this._subFadeState = -1;\n                if (fadeOutTime <= 0.0 || this._fadeProgress <= 0.0) {\n                    this._fadeProgress = 0.000001; // Modify fade progress to different value.\n                }\n                for (var _i = 0, _a = this._boneTimelines; _i < _a.length; _i++) {\n                    var timeline = _a[_i];\n                    timeline.fadeOut();\n                }\n                for (var _b = 0, _c = this._surfaceTimelines; _b < _c.length; _b++) {\n                    var timeline = _c[_b];\n                    timeline.fadeOut();\n                }\n                for (var _d = 0, _e = this._slotTimelines; _d < _e.length; _d++) {\n                    var timeline = _e[_d];\n                    timeline.fadeOut();\n                }\n                for (var _f = 0, _g = this._constraintTimelines; _f < _g.length; _f++) {\n                    var timeline = _g[_f];\n                    timeline.fadeOut();\n                }\n                for (var _h = 0, _j = this._animationTimelines; _h < _j.length; _h++) {\n                    var timeline = _j[_h];\n                    timeline.animationState.fadeOut(fadeOutTime, pausePlayhead);\n                    timeline.fadeOut();\n                }\n            }\n            this.displayControl = false; //\n            this.fadeTotalTime = this._fadeProgress > 0.000001 ? fadeOutTime / this._fadeProgress : 0.0;\n            this._fadeTime = this.fadeTotalTime * (1.0 - this._fadeProgress);\n        };\n        /**\n         * - Check if a specific bone mask is included.\n         * @param boneName - The bone name.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 检查是否包含特定骨骼遮罩。\n         * @param boneName - 骨骼名称。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        AnimationState.prototype.containsBoneMask = function (boneName) {\n            return this._boneMask.length === 0 || this._boneMask.indexOf(boneName) >= 0;\n        };\n        /**\n         * - Add a specific bone mask.\n         * @param boneName - The bone name.\n         * @param recursive - Whether or not to add a mask to the bone's sub-bone.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 添加特定的骨骼遮罩。\n         * @param boneName - 骨骼名称。\n         * @param recursive - 是否为该骨骼的子骨骼添加遮罩。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        AnimationState.prototype.addBoneMask = function (boneName, recursive) {\n            if (recursive === void 0) { recursive = true; }\n            var currentBone = this._armature.getBone(boneName);\n            if (currentBone === null) {\n                return;\n            }\n            if (this._boneMask.indexOf(boneName) < 0) { // Add mixing\n                this._boneMask.push(boneName);\n            }\n            if (recursive) { // Add recursive mixing.\n                for (var _i = 0, _a = this._armature.getBones(); _i < _a.length; _i++) {\n                    var bone = _a[_i];\n                    if (this._boneMask.indexOf(bone.name) < 0 && currentBone.contains(bone)) {\n                        this._boneMask.push(bone.name);\n                    }\n                }\n            }\n            this._timelineDirty = 1;\n        };\n        /**\n         * - Remove the mask of a specific bone.\n         * @param boneName - The bone name.\n         * @param recursive - Whether to remove the bone's sub-bone mask.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 删除特定骨骼的遮罩。\n         * @param boneName - 骨骼名称。\n         * @param recursive - 是否删除该骨骼的子骨骼遮罩。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        AnimationState.prototype.removeBoneMask = function (boneName, recursive) {\n            if (recursive === void 0) { recursive = true; }\n            var index = this._boneMask.indexOf(boneName);\n            if (index >= 0) { // Remove mixing.\n                this._boneMask.splice(index, 1);\n            }\n            if (recursive) {\n                var currentBone = this._armature.getBone(boneName);\n                if (currentBone !== null) {\n                    var bones = this._armature.getBones();\n                    if (this._boneMask.length > 0) { // Remove recursive mixing.\n                        for (var _i = 0, bones_1 = bones; _i < bones_1.length; _i++) {\n                            var bone = bones_1[_i];\n                            var index_2 = this._boneMask.indexOf(bone.name);\n                            if (index_2 >= 0 && currentBone.contains(bone)) {\n                                this._boneMask.splice(index_2, 1);\n                            }\n                        }\n                    }\n                    else { // Add unrecursive mixing.\n                        for (var _a = 0, bones_2 = bones; _a < bones_2.length; _a++) {\n                            var bone = bones_2[_a];\n                            if (bone === currentBone) {\n                                continue;\n                            }\n                            if (!currentBone.contains(bone)) {\n                                this._boneMask.push(bone.name);\n                            }\n                        }\n                    }\n                }\n            }\n            this._timelineDirty = 1;\n        };\n        /**\n         * - Remove all bone masks.\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 删除所有骨骼遮罩。\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        AnimationState.prototype.removeAllBoneMask = function () {\n            this._boneMask.length = 0;\n            this._timelineDirty = 1;\n        };\n        Object.defineProperty(AnimationState.prototype, \"isFadeIn\", {\n            /**\n             * - Whether the animation state is fading in.\n             * @version DragonBones 5.1\n             * @language en_US\n             */\n            /**\n             * - 是否正在淡入。\n             * @version DragonBones 5.1\n             * @language zh_CN\n             */\n            get: function () {\n                return this._fadeState < 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"isFadeOut\", {\n            /**\n             * - Whether the animation state is fading out.\n             * @version DragonBones 5.1\n             * @language en_US\n             */\n            /**\n             * - 是否正在淡出。\n             * @version DragonBones 5.1\n             * @language zh_CN\n             */\n            get: function () {\n                return this._fadeState > 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"isFadeComplete\", {\n            /**\n             * - Whether the animation state is fade completed.\n             * @version DragonBones 5.1\n             * @language en_US\n             */\n            /**\n             * - 是否淡入或淡出完毕。\n             * @version DragonBones 5.1\n             * @language zh_CN\n             */\n            get: function () {\n                return this._fadeState === 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"isPlaying\", {\n            /**\n             * - Whether the animation state is playing.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 是否正在播放。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return (this._playheadState & 2) !== 0 && this._actionTimeline.playState <= 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"isCompleted\", {\n            /**\n             * - Whether the animation state is play completed.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 是否播放完毕。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._actionTimeline.playState > 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"currentPlayTimes\", {\n            /**\n             * - The times has been played.\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 已经循环播放的次数。\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._actionTimeline.currentPlayTimes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"totalTime\", {\n            /**\n             * - The total time. (In seconds)\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 总播放时间。 （以秒为单位）\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._duration;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"currentTime\", {\n            /**\n             * - The time is currently playing. (In seconds)\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 当前播放的时间。 （以秒为单位）\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._actionTimeline.currentTime;\n            },\n            set: function (value) {\n                var currentPlayTimes = this._actionTimeline.currentPlayTimes - (this._actionTimeline.playState > 0 ? 1 : 0);\n                if (value < 0 || this._duration < value) {\n                    value = (value % this._duration) + currentPlayTimes * this._duration;\n                    if (value < 0) {\n                        value += this._duration;\n                    }\n                }\n                if (this.playTimes > 0 && currentPlayTimes === this.playTimes - 1 && value === this._duration) {\n                    value = this._duration - 0.000001;\n                }\n                if (this._time === value) {\n                    return;\n                }\n                this._time = value;\n                this._actionTimeline.setCurrentTime(this._time);\n                if (this._zOrderTimeline !== null) {\n                    this._zOrderTimeline.playState = -1;\n                }\n                for (var _i = 0, _a = this._boneTimelines; _i < _a.length; _i++) {\n                    var timeline = _a[_i];\n                    timeline.playState = -1;\n                }\n                for (var _b = 0, _c = this._slotTimelines; _b < _c.length; _b++) {\n                    var timeline = _c[_b];\n                    timeline.playState = -1;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AnimationState.prototype, \"animationData\", {\n            /**\n             * - The animation data.\n             * @see dragonBones.AnimationData\n             * @version DragonBones 3.0\n             * @language en_US\n             */\n            /**\n             * - 动画数据。\n             * @see dragonBones.AnimationData\n             * @version DragonBones 3.0\n             * @language zh_CN\n             */\n            get: function () {\n                return this._animationData;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationState;\n    }(dragonBones.BaseObject));\n    dragonBones.AnimationState = AnimationState;\n    /**\n     * @internal\n     */\n    var BonePose = /** @class */ (function (_super) {\n        __extends(BonePose, _super);\n        function BonePose() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.current = new dragonBones.Transform();\n            _this.delta = new dragonBones.Transform();\n            _this.result = new dragonBones.Transform();\n            return _this;\n        }\n        BonePose.toString = function () {\n            return \"[class dragonBones.BonePose]\";\n        };\n        BonePose.prototype._onClear = function () {\n            this.current.identity();\n            this.delta.identity();\n            this.result.identity();\n        };\n        return BonePose;\n    }(dragonBones.BaseObject));\n    dragonBones.BonePose = BonePose;\n    /**\n     * @internal\n     */\n    var BlendState = /** @class */ (function () {\n        function BlendState() {\n        }\n        /**\n         * -1: First blending, 0: No blending, 1: Blending.\n         */\n        BlendState.prototype.update = function (weight, p_layer) {\n            if (this.dirty) {\n                if (this.leftWeight > 0.0) {\n                    if (this.layer !== p_layer) {\n                        if (this.layerWeight >= this.leftWeight) {\n                            this.leftWeight = 0.0;\n                            return 0;\n                        }\n                        else {\n                            this.layer = p_layer;\n                            this.leftWeight -= this.layerWeight;\n                            this.layerWeight = 0.0;\n                        }\n                    }\n                }\n                else {\n                    return 0;\n                }\n                weight *= this.leftWeight;\n                this.layerWeight += weight;\n                this.blendWeight = weight;\n                return 2;\n            }\n            this.dirty = true;\n            this.layer = p_layer;\n            this.layerWeight = weight;\n            this.leftWeight = 1.0;\n            this.blendWeight = weight;\n            return 1;\n        };\n        BlendState.prototype.clear = function () {\n            this.dirty = false;\n            this.layer = 0;\n            this.leftWeight = 0.0;\n            this.layerWeight = 0.0;\n            this.blendWeight = 0.0;\n        };\n        return BlendState;\n    }());\n    dragonBones.BlendState = BlendState;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var TimelineState = /** @class */ (function (_super) {\n        __extends(TimelineState, _super);\n        function TimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TimelineState.prototype._onClear = function () {\n            this.playState = -1;\n            this.currentPlayTimes = -1;\n            this.currentTime = -1.0;\n            this._tweenState = 0 /* None */;\n            this._frameRate = 0;\n            this._frameValueOffset = 0;\n            this._frameCount = 0;\n            this._frameOffset = 0;\n            this._frameIndex = -1;\n            this._frameRateR = 0.0;\n            this._position = 0.0;\n            this._duration = 0.0;\n            this._timeScale = 1.0;\n            this._timeOffset = 0.0;\n            this._dragonBonesData = null; //\n            this._animationData = null; //\n            this._timelineData = null; //\n            this._armature = null; //\n            this._animationState = null; //\n            this._actionTimeline = null; //\n            this._frameArray = null; //\n            this._frameIntArray = null; //\n            this._frameFloatArray = null; //\n            this._timelineArray = null; //\n            this._frameIndices = null; //\n        };\n        TimelineState.prototype._setCurrentTime = function (passedTime) {\n            var prevState = this.playState;\n            var prevPlayTimes = this.currentPlayTimes;\n            var prevTime = this.currentTime;\n            if (this._actionTimeline !== null && this._frameCount <= 1) { // No frame or only one frame.\n                this.playState = this._actionTimeline.playState >= 0 ? 1 : -1;\n                this.currentPlayTimes = 1;\n                this.currentTime = this._actionTimeline.currentTime;\n            }\n            else if (this._actionTimeline === null || this._timeScale !== 1.0 || this._timeOffset !== 0.0) { // Action timeline or has scale and offset.\n                var playTimes = this._animationState.playTimes;\n                var totalTime = playTimes * this._duration;\n                passedTime *= this._timeScale;\n                if (this._timeOffset !== 0.0) {\n                    passedTime += this._timeOffset * this._animationData.duration;\n                }\n                if (playTimes > 0 && (passedTime >= totalTime || passedTime <= -totalTime)) {\n                    if (this.playState <= 0 && this._animationState._playheadState === 3) {\n                        this.playState = 1;\n                    }\n                    this.currentPlayTimes = playTimes;\n                    if (passedTime < 0.0) {\n                        this.currentTime = 0.0;\n                    }\n                    else {\n                        this.currentTime = this._duration + 0.000001; // Precision problem\n                    }\n                }\n                else {\n                    if (this.playState !== 0 && this._animationState._playheadState === 3) {\n                        this.playState = 0;\n                    }\n                    if (passedTime < 0.0) {\n                        passedTime = -passedTime;\n                        this.currentPlayTimes = Math.floor(passedTime / this._duration);\n                        this.currentTime = this._duration - (passedTime % this._duration);\n                    }\n                    else {\n                        this.currentPlayTimes = Math.floor(passedTime / this._duration);\n                        this.currentTime = passedTime % this._duration;\n                    }\n                }\n                this.currentTime += this._position;\n            }\n            else { // Multi frames.\n                this.playState = this._actionTimeline.playState;\n                this.currentPlayTimes = this._actionTimeline.currentPlayTimes;\n                this.currentTime = this._actionTimeline.currentTime;\n            }\n            if (this.currentPlayTimes === prevPlayTimes && this.currentTime === prevTime) {\n                return false;\n            }\n            // Clear frame flag when timeline start or loopComplete.\n            if ((prevState < 0 && this.playState !== prevState) ||\n                (this.playState <= 0 && this.currentPlayTimes !== prevPlayTimes)) {\n                this._frameIndex = -1;\n            }\n            return true;\n        };\n        TimelineState.prototype.init = function (armature, animationState, timelineData) {\n            this._armature = armature;\n            this._animationState = animationState;\n            this._timelineData = timelineData;\n            this._actionTimeline = this._animationState._actionTimeline;\n            if (this === this._actionTimeline) {\n                this._actionTimeline = null; //\n            }\n            this._animationData = this._animationState._animationData;\n            this._frameRate = this._animationData.parent.frameRate;\n            this._frameRateR = 1.0 / this._frameRate;\n            this._position = this._animationState._position;\n            this._duration = this._animationState._duration;\n            this._dragonBonesData = this._animationData.parent.parent; // May by the animation data is not belone to this armature data.\n            if (this._timelineData !== null) {\n                this._frameIntArray = this._dragonBonesData.frameIntArray;\n                this._frameFloatArray = this._dragonBonesData.frameFloatArray;\n                this._frameArray = this._dragonBonesData.frameArray;\n                this._timelineArray = this._dragonBonesData.timelineArray;\n                this._frameIndices = this._dragonBonesData.frameIndices;\n                this._frameCount = this._timelineArray[this._timelineData.offset + 2 /* TimelineKeyFrameCount */];\n                this._frameValueOffset = this._timelineArray[this._timelineData.offset + 4 /* TimelineFrameValueOffset */];\n                this._timeScale = 100.0 / this._timelineArray[this._timelineData.offset + 0 /* TimelineScale */];\n                this._timeOffset = this._timelineArray[this._timelineData.offset + 1 /* TimelineOffset */] * 0.01;\n            }\n        };\n        TimelineState.prototype.fadeOut = function () { };\n        TimelineState.prototype.update = function (passedTime) {\n            if (this._setCurrentTime(passedTime)) {\n                if (this._frameCount > 1) {\n                    var timelineFrameIndex = Math.floor(this.currentTime * this._frameRate); // uint\n                    var frameIndex = this._frameIndices[this._timelineData.frameIndicesOffset + timelineFrameIndex];\n                    if (this._frameIndex !== frameIndex) {\n                        this._frameIndex = frameIndex;\n                        this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 /* TimelineFrameOffset */ + this._frameIndex];\n                        this._onArriveAtFrame();\n                    }\n                }\n                else if (this._frameIndex < 0) {\n                    this._frameIndex = 0;\n                    if (this._timelineData !== null) { // May be pose timeline.\n                        this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 /* TimelineFrameOffset */];\n                    }\n                    this._onArriveAtFrame();\n                }\n                if (this._tweenState !== 0 /* None */) {\n                    this._onUpdateFrame();\n                }\n            }\n        };\n        return TimelineState;\n    }(dragonBones.BaseObject));\n    dragonBones.TimelineState = TimelineState;\n    /**\n     * @internal\n     */\n    var TweenTimelineState = /** @class */ (function (_super) {\n        __extends(TweenTimelineState, _super);\n        function TweenTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TweenTimelineState._getEasingValue = function (tweenType, progress, easing) {\n            var value = progress;\n            switch (tweenType) {\n                case 3 /* QuadIn */:\n                    value = Math.pow(progress, 2.0);\n                    break;\n                case 4 /* QuadOut */:\n                    value = 1.0 - Math.pow(1.0 - progress, 2.0);\n                    break;\n                case 5 /* QuadInOut */:\n                    value = 0.5 * (1.0 - Math.cos(progress * Math.PI));\n                    break;\n            }\n            return (value - progress) * easing + progress;\n        };\n        TweenTimelineState._getEasingCurveValue = function (progress, samples, count, offset) {\n            if (progress <= 0.0) {\n                return 0.0;\n            }\n            else if (progress >= 1.0) {\n                return 1.0;\n            }\n            var segmentCount = count + 1; // + 2 - 1\n            var valueIndex = Math.floor(progress * segmentCount);\n            var fromValue = valueIndex === 0 ? 0.0 : samples[offset + valueIndex - 1];\n            var toValue = (valueIndex === segmentCount - 1) ? 10000.0 : samples[offset + valueIndex];\n            return (fromValue + (toValue - fromValue) * (progress * segmentCount - valueIndex)) * 0.0001;\n        };\n        TweenTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this._tweenType = 0 /* None */;\n            this._curveCount = 0;\n            this._framePosition = 0.0;\n            this._frameDurationR = 0.0;\n            this._tweenProgress = 0.0;\n            this._tweenEasing = 0.0;\n        };\n        TweenTimelineState.prototype._onArriveAtFrame = function () {\n            if (this._frameCount > 1 &&\n                (this._frameIndex !== this._frameCount - 1 ||\n                    this._animationState.playTimes === 0 ||\n                    this._animationState.currentPlayTimes < this._animationState.playTimes - 1)) {\n                this._tweenType = this._frameArray[this._frameOffset + 1 /* FrameTweenType */]; // TODO recode ture tween type.\n                this._tweenState = this._tweenType === 0 /* None */ ? 1 /* Once */ : 2 /* Always */;\n                if (this._tweenType === 2 /* Curve */) {\n                    this._curveCount = this._frameArray[this._frameOffset + 2 /* FrameTweenEasingOrCurveSampleCount */];\n                }\n                else if (this._tweenType !== 0 /* None */ && this._tweenType !== 1 /* Line */) {\n                    this._tweenEasing = this._frameArray[this._frameOffset + 2 /* FrameTweenEasingOrCurveSampleCount */] * 0.01;\n                }\n                this._framePosition = this._frameArray[this._frameOffset] * this._frameRateR;\n                if (this._frameIndex === this._frameCount - 1) {\n                    this._frameDurationR = 1.0 / (this._animationData.duration - this._framePosition);\n                }\n                else {\n                    var nextFrameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 /* TimelineFrameOffset */ + this._frameIndex + 1];\n                    var frameDuration = this._frameArray[nextFrameOffset] * this._frameRateR - this._framePosition;\n                    if (frameDuration > 0) {\n                        this._frameDurationR = 1.0 / frameDuration;\n                    }\n                    else {\n                        this._frameDurationR = 0.0;\n                    }\n                }\n            }\n            else {\n                this._tweenState = 1 /* Once */;\n            }\n        };\n        TweenTimelineState.prototype._onUpdateFrame = function () {\n            if (this._tweenState === 2 /* Always */) {\n                this._tweenProgress = (this.currentTime - this._framePosition) * this._frameDurationR;\n                if (this._tweenType === 2 /* Curve */) {\n                    this._tweenProgress = TweenTimelineState._getEasingCurveValue(this._tweenProgress, this._frameArray, this._curveCount, this._frameOffset + 3 /* FrameCurveSamples */);\n                }\n                else if (this._tweenType !== 1 /* Line */) {\n                    this._tweenProgress = TweenTimelineState._getEasingValue(this._tweenType, this._tweenProgress, this._tweenEasing);\n                }\n            }\n            else {\n                this._tweenProgress = 0.0;\n            }\n        };\n        return TweenTimelineState;\n    }(TimelineState));\n    dragonBones.TweenTimelineState = TweenTimelineState;\n    /**\n     * @internal\n     */\n    var BoneTimelineState = /** @class */ (function (_super) {\n        __extends(BoneTimelineState, _super);\n        function BoneTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoneTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.bone = null; //\n            this.bonePose = null; //\n        };\n        BoneTimelineState.prototype.blend = function (state) {\n            var blendWeight = this.bone._blendState.blendWeight;\n            var animationPose = this.bone.animationPose;\n            var result = this.bonePose.result;\n            if (state === 2) {\n                animationPose.x += result.x * blendWeight;\n                animationPose.y += result.y * blendWeight;\n                animationPose.rotation += result.rotation * blendWeight;\n                animationPose.skew += result.skew * blendWeight;\n                animationPose.scaleX += (result.scaleX - 1.0) * blendWeight;\n                animationPose.scaleY += (result.scaleY - 1.0) * blendWeight;\n            }\n            else if (blendWeight !== 1.0) {\n                animationPose.x = result.x * blendWeight;\n                animationPose.y = result.y * blendWeight;\n                animationPose.rotation = result.rotation * blendWeight;\n                animationPose.skew = result.skew * blendWeight;\n                animationPose.scaleX = (result.scaleX - 1.0) * blendWeight + 1.0;\n                animationPose.scaleY = (result.scaleY - 1.0) * blendWeight + 1.0;\n            }\n            else {\n                animationPose.x = result.x;\n                animationPose.y = result.y;\n                animationPose.rotation = result.rotation;\n                animationPose.skew = result.skew;\n                animationPose.scaleX = result.scaleX;\n                animationPose.scaleY = result.scaleY;\n            }\n            if (this._animationState._fadeState !== 0 || this._animationState._subFadeState !== 0) {\n                this.bone._transformDirty = true;\n            }\n        };\n        return BoneTimelineState;\n    }(TweenTimelineState));\n    dragonBones.BoneTimelineState = BoneTimelineState;\n    /**\n     * @internal\n     */\n    var SlotTimelineState = /** @class */ (function (_super) {\n        __extends(SlotTimelineState, _super);\n        function SlotTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SlotTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.slot = null; //\n        };\n        return SlotTimelineState;\n    }(TweenTimelineState));\n    dragonBones.SlotTimelineState = SlotTimelineState;\n    /**\n     * @internal\n     */\n    var ConstraintTimelineState = /** @class */ (function (_super) {\n        __extends(ConstraintTimelineState, _super);\n        function ConstraintTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ConstraintTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.constraint = null; //\n        };\n        return ConstraintTimelineState;\n    }(TweenTimelineState));\n    dragonBones.ConstraintTimelineState = ConstraintTimelineState;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var ActionTimelineState = /** @class */ (function (_super) {\n        __extends(ActionTimelineState, _super);\n        function ActionTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ActionTimelineState.toString = function () {\n            return \"[class dragonBones.ActionTimelineState]\";\n        };\n        ActionTimelineState.prototype._onCrossFrame = function (frameIndex) {\n            var eventDispatcher = this._armature.eventDispatcher;\n            if (this._animationState.actionEnabled) {\n                var frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 /* TimelineFrameOffset */ + frameIndex];\n                var actionCount = this._frameArray[frameOffset + 1];\n                var actions = this._animationData.parent.actions; // May be the animaton data not belong to this armature data.\n                for (var i = 0; i < actionCount; ++i) {\n                    var actionIndex = this._frameArray[frameOffset + 2 + i];\n                    var action = actions[actionIndex];\n                    if (action.type === 0 /* Play */) {\n                        var eventObject = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                        // eventObject.time = this._frameArray[frameOffset] * this._frameRateR; // Precision problem\n                        eventObject.time = this._frameArray[frameOffset] / this._frameRate;\n                        eventObject.animationState = this._animationState;\n                        dragonBones.EventObject.actionDataToInstance(action, eventObject, this._armature);\n                        this._armature._bufferAction(eventObject, true);\n                    }\n                    else {\n                        var eventType = action.type === 10 /* Frame */ ? dragonBones.EventObject.FRAME_EVENT : dragonBones.EventObject.SOUND_EVENT;\n                        if (action.type === 11 /* Sound */ || eventDispatcher.hasDBEventListener(eventType)) {\n                            var eventObject = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                            // eventObject.time = this._frameArray[frameOffset] * this._frameRateR; // Precision problem\n                            eventObject.time = this._frameArray[frameOffset] / this._frameRate;\n                            eventObject.animationState = this._animationState;\n                            dragonBones.EventObject.actionDataToInstance(action, eventObject, this._armature);\n                            this._armature._dragonBones.bufferEvent(eventObject);\n                        }\n                    }\n                }\n            }\n        };\n        ActionTimelineState.prototype._onArriveAtFrame = function () { };\n        ActionTimelineState.prototype._onUpdateFrame = function () { };\n        ActionTimelineState.prototype.update = function (passedTime) {\n            var prevState = this.playState;\n            var prevPlayTimes = this.currentPlayTimes;\n            var prevTime = this.currentTime;\n            if (this._setCurrentTime(passedTime)) {\n                var eventDispatcher = this._armature.eventDispatcher;\n                if (prevState < 0) {\n                    if (this.playState !== prevState) {\n                        if (this._animationState.displayControl && this._animationState.resetToPose) { // Reset zorder to pose.\n                            this._armature._sortZOrder(null, 0);\n                        }\n                        prevPlayTimes = this.currentPlayTimes;\n                        if (eventDispatcher.hasDBEventListener(dragonBones.EventObject.START)) {\n                            var eventObject = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                            eventObject.type = dragonBones.EventObject.START;\n                            eventObject.armature = this._armature;\n                            eventObject.animationState = this._animationState;\n                            this._armature._dragonBones.bufferEvent(eventObject);\n                        }\n                    }\n                    else {\n                        return;\n                    }\n                }\n                var isReverse = this._animationState.timeScale < 0.0;\n                var loopCompleteEvent = null;\n                var completeEvent = null;\n                if (this.currentPlayTimes !== prevPlayTimes) {\n                    if (eventDispatcher.hasDBEventListener(dragonBones.EventObject.LOOP_COMPLETE)) {\n                        loopCompleteEvent = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                        loopCompleteEvent.type = dragonBones.EventObject.LOOP_COMPLETE;\n                        loopCompleteEvent.armature = this._armature;\n                        loopCompleteEvent.animationState = this._animationState;\n                    }\n                    if (this.playState > 0) {\n                        if (eventDispatcher.hasDBEventListener(dragonBones.EventObject.COMPLETE)) {\n                            completeEvent = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                            completeEvent.type = dragonBones.EventObject.COMPLETE;\n                            completeEvent.armature = this._armature;\n                            completeEvent.animationState = this._animationState;\n                        }\n                    }\n                }\n                if (this._frameCount > 1) {\n                    var timelineData = this._timelineData;\n                    var timelineFrameIndex = Math.floor(this.currentTime * this._frameRate); // uint\n                    var frameIndex = this._frameIndices[timelineData.frameIndicesOffset + timelineFrameIndex];\n                    if (this._frameIndex !== frameIndex) { // Arrive at frame.                   \n                        var crossedFrameIndex = this._frameIndex;\n                        this._frameIndex = frameIndex;\n                        if (this._timelineArray !== null) {\n                            this._frameOffset = this._animationData.frameOffset + this._timelineArray[timelineData.offset + 5 /* TimelineFrameOffset */ + this._frameIndex];\n                            if (isReverse) {\n                                if (crossedFrameIndex < 0) {\n                                    var prevFrameIndex = Math.floor(prevTime * this._frameRate);\n                                    crossedFrameIndex = this._frameIndices[timelineData.frameIndicesOffset + prevFrameIndex];\n                                    if (this.currentPlayTimes === prevPlayTimes) { // Start.\n                                        if (crossedFrameIndex === frameIndex) { // Uncrossed.\n                                            crossedFrameIndex = -1;\n                                        }\n                                    }\n                                }\n                                while (crossedFrameIndex >= 0) {\n                                    var frameOffset = this._animationData.frameOffset + this._timelineArray[timelineData.offset + 5 /* TimelineFrameOffset */ + crossedFrameIndex];\n                                    // const framePosition = this._frameArray[frameOffset] * this._frameRateR; // Precision problem\n                                    var framePosition = this._frameArray[frameOffset] / this._frameRate;\n                                    if (this._position <= framePosition &&\n                                        framePosition <= this._position + this._duration) { // Support interval play.\n                                        this._onCrossFrame(crossedFrameIndex);\n                                    }\n                                    if (loopCompleteEvent !== null && crossedFrameIndex === 0) { // Add loop complete event after first frame.\n                                        this._armature._dragonBones.bufferEvent(loopCompleteEvent);\n                                        loopCompleteEvent = null;\n                                    }\n                                    if (crossedFrameIndex > 0) {\n                                        crossedFrameIndex--;\n                                    }\n                                    else {\n                                        crossedFrameIndex = this._frameCount - 1;\n                                    }\n                                    if (crossedFrameIndex === frameIndex) {\n                                        break;\n                                    }\n                                }\n                            }\n                            else {\n                                if (crossedFrameIndex < 0) {\n                                    var prevFrameIndex = Math.floor(prevTime * this._frameRate);\n                                    crossedFrameIndex = this._frameIndices[timelineData.frameIndicesOffset + prevFrameIndex];\n                                    var frameOffset = this._animationData.frameOffset + this._timelineArray[timelineData.offset + 5 /* TimelineFrameOffset */ + crossedFrameIndex];\n                                    // const framePosition = this._frameArray[frameOffset] * this._frameRateR; // Precision problem\n                                    var framePosition = this._frameArray[frameOffset] / this._frameRate;\n                                    if (this.currentPlayTimes === prevPlayTimes) { // Start.\n                                        if (prevTime <= framePosition) { // Crossed.\n                                            if (crossedFrameIndex > 0) {\n                                                crossedFrameIndex--;\n                                            }\n                                            else {\n                                                crossedFrameIndex = this._frameCount - 1;\n                                            }\n                                        }\n                                        else if (crossedFrameIndex === frameIndex) { // Uncrossed.\n                                            crossedFrameIndex = -1;\n                                        }\n                                    }\n                                }\n                                while (crossedFrameIndex >= 0) {\n                                    if (crossedFrameIndex < this._frameCount - 1) {\n                                        crossedFrameIndex++;\n                                    }\n                                    else {\n                                        crossedFrameIndex = 0;\n                                    }\n                                    var frameOffset = this._animationData.frameOffset + this._timelineArray[timelineData.offset + 5 /* TimelineFrameOffset */ + crossedFrameIndex];\n                                    // const framePosition = this._frameArray[frameOffset] * this._frameRateR; // Precision problem\n                                    var framePosition = this._frameArray[frameOffset] / this._frameRate;\n                                    if (this._position <= framePosition &&\n                                        framePosition <= this._position + this._duration) { // Support interval play.\n                                        this._onCrossFrame(crossedFrameIndex);\n                                    }\n                                    if (loopCompleteEvent !== null && crossedFrameIndex === 0) { // Add loop complete event before first frame.\n                                        this._armature._dragonBones.bufferEvent(loopCompleteEvent);\n                                        loopCompleteEvent = null;\n                                    }\n                                    if (crossedFrameIndex === frameIndex) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (this._frameIndex < 0) {\n                    this._frameIndex = 0;\n                    if (this._timelineData !== null) {\n                        this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 /* TimelineFrameOffset */];\n                        // Arrive at frame.\n                        var framePosition = this._frameArray[this._frameOffset] / this._frameRate;\n                        if (this.currentPlayTimes === prevPlayTimes) { // Start.\n                            if (prevTime <= framePosition) {\n                                this._onCrossFrame(this._frameIndex);\n                            }\n                        }\n                        else if (this._position <= framePosition) { // Loop complete.\n                            if (!isReverse && loopCompleteEvent !== null) { // Add loop complete event before first frame.\n                                this._armature._dragonBones.bufferEvent(loopCompleteEvent);\n                                loopCompleteEvent = null;\n                            }\n                            this._onCrossFrame(this._frameIndex);\n                        }\n                    }\n                }\n                if (loopCompleteEvent !== null) {\n                    this._armature._dragonBones.bufferEvent(loopCompleteEvent);\n                }\n                if (completeEvent !== null) {\n                    this._armature._dragonBones.bufferEvent(completeEvent);\n                }\n            }\n        };\n        ActionTimelineState.prototype.setCurrentTime = function (value) {\n            this._setCurrentTime(value);\n            this._frameIndex = -1;\n        };\n        return ActionTimelineState;\n    }(dragonBones.TimelineState));\n    dragonBones.ActionTimelineState = ActionTimelineState;\n    /**\n     * @internal\n     */\n    var ZOrderTimelineState = /** @class */ (function (_super) {\n        __extends(ZOrderTimelineState, _super);\n        function ZOrderTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ZOrderTimelineState.toString = function () {\n            return \"[class dragonBones.ZOrderTimelineState]\";\n        };\n        ZOrderTimelineState.prototype._onArriveAtFrame = function () {\n            if (this.playState >= 0) {\n                var count = this._frameArray[this._frameOffset + 1];\n                if (count > 0) {\n                    this._armature._sortZOrder(this._frameArray, this._frameOffset + 2);\n                }\n                else {\n                    this._armature._sortZOrder(null, 0);\n                }\n            }\n        };\n        ZOrderTimelineState.prototype._onUpdateFrame = function () { };\n        return ZOrderTimelineState;\n    }(dragonBones.TimelineState));\n    dragonBones.ZOrderTimelineState = ZOrderTimelineState;\n    /**\n     * @internal\n     */\n    var BoneAllTimelineState = /** @class */ (function (_super) {\n        __extends(BoneAllTimelineState, _super);\n        function BoneAllTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoneAllTimelineState.toString = function () {\n            return \"[class dragonBones.BoneAllTimelineState]\";\n        };\n        BoneAllTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData !== null) {\n                var valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * 6; // ...(timeline value offset)|xxxxxx|xxxxxx|(Value offset)xxxxx|(Next offset)xxxxx|xxxxxx|xxxxxx|...\n                var scale = this._armature._armatureData.scale;\n                var frameFloatArray = this._frameFloatArray;\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.x = frameFloatArray[valueOffset++] * scale;\n                current.y = frameFloatArray[valueOffset++] * scale;\n                current.rotation = frameFloatArray[valueOffset++];\n                current.skew = frameFloatArray[valueOffset++];\n                current.scaleX = frameFloatArray[valueOffset++];\n                current.scaleY = frameFloatArray[valueOffset++];\n                if (this._tweenState === 2 /* Always */) {\n                    if (this._frameIndex === this._frameCount - 1) {\n                        valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset; // + 0 * 6\n                    }\n                    delta.x = frameFloatArray[valueOffset++] * scale - current.x;\n                    delta.y = frameFloatArray[valueOffset++] * scale - current.y;\n                    delta.rotation = frameFloatArray[valueOffset++] - current.rotation;\n                    delta.skew = frameFloatArray[valueOffset++] - current.skew;\n                    delta.scaleX = frameFloatArray[valueOffset++] - current.scaleX;\n                    delta.scaleY = frameFloatArray[valueOffset++] - current.scaleY;\n                }\n                else {\n                    delta.x = 0.0;\n                    delta.y = 0.0;\n                    delta.rotation = 0.0;\n                    delta.skew = 0.0;\n                    delta.scaleX = 0.0;\n                    delta.scaleY = 0.0;\n                }\n            }\n            else { // Pose.\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.x = 0.0;\n                current.y = 0.0;\n                current.rotation = 0.0;\n                current.skew = 0.0;\n                current.scaleX = 1.0;\n                current.scaleY = 1.0;\n                delta.x = 0.0;\n                delta.y = 0.0;\n                delta.rotation = 0.0;\n                delta.skew = 0.0;\n                delta.scaleX = 0.0;\n                delta.scaleY = 0.0;\n            }\n        };\n        BoneAllTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            var current = this.bonePose.current;\n            var delta = this.bonePose.delta;\n            var result = this.bonePose.result;\n            this.bone._transformDirty = true;\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            result.x = current.x + delta.x * this._tweenProgress;\n            result.y = current.y + delta.y * this._tweenProgress;\n            result.rotation = current.rotation + delta.rotation * this._tweenProgress;\n            result.skew = current.skew + delta.skew * this._tweenProgress;\n            result.scaleX = current.scaleX + delta.scaleX * this._tweenProgress;\n            result.scaleY = current.scaleY + delta.scaleY * this._tweenProgress;\n        };\n        BoneAllTimelineState.prototype.fadeOut = function () {\n            var result = this.bonePose.result;\n            result.rotation = dragonBones.Transform.normalizeRadian(result.rotation);\n            result.skew = dragonBones.Transform.normalizeRadian(result.skew);\n        };\n        return BoneAllTimelineState;\n    }(dragonBones.BoneTimelineState));\n    dragonBones.BoneAllTimelineState = BoneAllTimelineState;\n    /**\n     * @internal\n     */\n    var BoneTranslateTimelineState = /** @class */ (function (_super) {\n        __extends(BoneTranslateTimelineState, _super);\n        function BoneTranslateTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoneTranslateTimelineState.toString = function () {\n            return \"[class dragonBones.BoneTranslateTimelineState]\";\n        };\n        BoneTranslateTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData !== null) {\n                var valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * 2;\n                var scale = this._armature._armatureData.scale;\n                var frameFloatArray = this._frameFloatArray;\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.x = frameFloatArray[valueOffset++] * scale;\n                current.y = frameFloatArray[valueOffset++] * scale;\n                if (this._tweenState === 2 /* Always */) {\n                    if (this._frameIndex === this._frameCount - 1) {\n                        valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset; // + 0 * 2\n                    }\n                    delta.x = frameFloatArray[valueOffset++] * scale - current.x;\n                    delta.y = frameFloatArray[valueOffset++] * scale - current.y;\n                }\n                else {\n                    delta.x = 0.0;\n                    delta.y = 0.0;\n                }\n            }\n            else { // Pose.\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.x = 0.0;\n                current.y = 0.0;\n                delta.x = 0.0;\n                delta.y = 0.0;\n            }\n        };\n        BoneTranslateTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            var current = this.bonePose.current;\n            var delta = this.bonePose.delta;\n            var result = this.bonePose.result;\n            this.bone._transformDirty = true;\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            result.x = (current.x + delta.x * this._tweenProgress);\n            result.y = (current.y + delta.y * this._tweenProgress);\n        };\n        return BoneTranslateTimelineState;\n    }(dragonBones.BoneTimelineState));\n    dragonBones.BoneTranslateTimelineState = BoneTranslateTimelineState;\n    /**\n     * @internal\n     */\n    var BoneRotateTimelineState = /** @class */ (function (_super) {\n        __extends(BoneRotateTimelineState, _super);\n        function BoneRotateTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoneRotateTimelineState.toString = function () {\n            return \"[class dragonBones.BoneRotateTimelineState]\";\n        };\n        BoneRotateTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData !== null) {\n                var valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * 2;\n                var frameFloatArray = this._frameFloatArray;\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.rotation = frameFloatArray[valueOffset++];\n                current.skew = frameFloatArray[valueOffset++];\n                if (this._tweenState === 2 /* Always */) {\n                    if (this._frameIndex === this._frameCount - 1) {\n                        valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset; // + 0 * 2\n                        delta.rotation = dragonBones.Transform.normalizeRadian(frameFloatArray[valueOffset++] - current.rotation);\n                    }\n                    else {\n                        delta.rotation = frameFloatArray[valueOffset++] - current.rotation;\n                    }\n                    delta.skew = frameFloatArray[valueOffset++] - current.skew;\n                }\n                else {\n                    delta.rotation = 0.0;\n                    delta.skew = 0.0;\n                }\n            }\n            else { // Pose.\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.rotation = 0.0;\n                current.skew = 0.0;\n                delta.rotation = 0.0;\n                delta.skew = 0.0;\n            }\n        };\n        BoneRotateTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            var current = this.bonePose.current;\n            var delta = this.bonePose.delta;\n            var result = this.bonePose.result;\n            this.bone._transformDirty = true;\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            result.rotation = current.rotation + delta.rotation * this._tweenProgress;\n            result.skew = current.skew + delta.skew * this._tweenProgress;\n        };\n        BoneRotateTimelineState.prototype.fadeOut = function () {\n            var result = this.bonePose.result;\n            result.rotation = dragonBones.Transform.normalizeRadian(result.rotation);\n            result.skew = dragonBones.Transform.normalizeRadian(result.skew);\n        };\n        return BoneRotateTimelineState;\n    }(dragonBones.BoneTimelineState));\n    dragonBones.BoneRotateTimelineState = BoneRotateTimelineState;\n    /**\n     * @internal\n     */\n    var BoneScaleTimelineState = /** @class */ (function (_super) {\n        __extends(BoneScaleTimelineState, _super);\n        function BoneScaleTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BoneScaleTimelineState.toString = function () {\n            return \"[class dragonBones.BoneScaleTimelineState]\";\n        };\n        BoneScaleTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData !== null) {\n                var valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * 2;\n                var frameFloatArray = this._frameFloatArray;\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.scaleX = frameFloatArray[valueOffset++];\n                current.scaleY = frameFloatArray[valueOffset++];\n                if (this._tweenState === 2 /* Always */) {\n                    if (this._frameIndex === this._frameCount - 1) {\n                        valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset; // + 0 * 2\n                    }\n                    delta.scaleX = frameFloatArray[valueOffset++] - current.scaleX;\n                    delta.scaleY = frameFloatArray[valueOffset++] - current.scaleY;\n                }\n                else {\n                    delta.scaleX = 0.0;\n                    delta.scaleY = 0.0;\n                }\n            }\n            else { // Pose.\n                var current = this.bonePose.current;\n                var delta = this.bonePose.delta;\n                current.scaleX = 1.0;\n                current.scaleY = 1.0;\n                delta.scaleX = 0.0;\n                delta.scaleY = 0.0;\n            }\n        };\n        BoneScaleTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            var current = this.bonePose.current;\n            var delta = this.bonePose.delta;\n            var result = this.bonePose.result;\n            this.bone._transformDirty = true;\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            result.scaleX = current.scaleX + delta.scaleX * this._tweenProgress;\n            result.scaleY = current.scaleY + delta.scaleY * this._tweenProgress;\n        };\n        return BoneScaleTimelineState;\n    }(dragonBones.BoneTimelineState));\n    dragonBones.BoneScaleTimelineState = BoneScaleTimelineState;\n    /**\n     * @internal\n     */\n    var SurfaceTimelineState = /** @class */ (function (_super) {\n        __extends(SurfaceTimelineState, _super);\n        function SurfaceTimelineState() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._current = [];\n            _this._delta = [];\n            _this._result = [];\n            return _this;\n        }\n        SurfaceTimelineState.toString = function () {\n            return \"[class dragonBones.SurfaceTimelineState]\";\n        };\n        SurfaceTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.surface = null;\n            this._frameFloatOffset = 0;\n            this._valueCount = 0;\n            this._deformCount = 0;\n            this._valueOffset = 0;\n            this._current.length = 0;\n            this._delta.length = 0;\n            this._result.length = 0;\n        };\n        SurfaceTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData !== null) {\n                var valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * this._valueCount;\n                var scale = this._armature._armatureData.scale;\n                var frameFloatArray = this._frameFloatArray;\n                if (this._tweenState === 2 /* Always */) {\n                    var nextValueOffset = valueOffset + this._valueCount;\n                    if (this._frameIndex === this._frameCount - 1) {\n                        nextValueOffset = this._animationData.frameFloatOffset + this._frameValueOffset;\n                    }\n                    for (var i = 0; i < this._valueCount; ++i) {\n                        this._delta[i] = frameFloatArray[nextValueOffset + i] * scale - (this._current[i] = frameFloatArray[valueOffset + i] * scale);\n                    }\n                }\n                else {\n                    for (var i = 0; i < this._valueCount; ++i) {\n                        this._current[i] = frameFloatArray[valueOffset + i] * scale;\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < this._valueCount; ++i) {\n                    this._current[i] = 0.0;\n                }\n            }\n        };\n        SurfaceTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            this.surface._transformDirty = true;\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            for (var i = 0; i < this._valueCount; ++i) {\n                this._result[i] = this._current[i] + this._delta[i] * this._tweenProgress;\n            }\n        };\n        SurfaceTimelineState.prototype.init = function (armature, animationState, timelineData) {\n            _super.prototype.init.call(this, armature, animationState, timelineData);\n            if (this._timelineData !== null) {\n                var frameIntOffset = this._animationData.frameIntOffset + this._timelineArray[this._timelineData.offset + 3 /* TimelineFrameValueCount */];\n                this._deformCount = this._frameIntArray[frameIntOffset + 1 /* DeformCount */];\n                this._valueCount = this._frameIntArray[frameIntOffset + 2 /* DeformValueCount */];\n                this._valueOffset = this._frameIntArray[frameIntOffset + 3 /* DeformValueOffset */];\n                this._frameFloatOffset = this._frameIntArray[frameIntOffset + 4 /* DeformFloatOffset */] + this._animationData.frameFloatOffset;\n            }\n            else {\n                this._deformCount = this.surface._deformVertices.length;\n                this._valueCount = this._deformCount;\n                this._valueOffset = 0;\n                this._frameFloatOffset = 0;\n            }\n            this._current.length = this._valueCount;\n            this._delta.length = this._valueCount;\n            this._result.length = this._valueCount;\n            for (var i = 0; i < this._valueCount; ++i) {\n                this._delta[i] = 0.0;\n            }\n        };\n        SurfaceTimelineState.prototype.blend = function (state) {\n            var blendWeight = this.surface._blendState.blendWeight;\n            var result = this.surface._deformVertices;\n            for (var i = 0; i < this._deformCount; ++i) {\n                var value = 0.0;\n                if (i < this._valueOffset) {\n                    value = this._frameFloatArray[this._frameFloatOffset + i];\n                }\n                else if (i < this._valueOffset + this._valueCount) {\n                    value = this._result[i - this._valueOffset];\n                }\n                else {\n                    value = this._frameFloatArray[this._frameFloatOffset + i - this._valueCount];\n                }\n                if (state === 2) {\n                    result[i] += value * blendWeight;\n                }\n                else if (blendWeight !== 1.0) {\n                    result[i] = value * blendWeight;\n                }\n                else {\n                    result[i] = value;\n                }\n            }\n            if (this._animationState._fadeState !== 0 || this._animationState._subFadeState !== 0) {\n                this.surface._transformDirty = true;\n            }\n        };\n        return SurfaceTimelineState;\n    }(dragonBones.TweenTimelineState));\n    dragonBones.SurfaceTimelineState = SurfaceTimelineState;\n    /**\n     * @internal\n     */\n    var SlotDislayTimelineState = /** @class */ (function (_super) {\n        __extends(SlotDislayTimelineState, _super);\n        function SlotDislayTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SlotDislayTimelineState.toString = function () {\n            return \"[class dragonBones.SlotDislayTimelineState]\";\n        };\n        SlotDislayTimelineState.prototype._onArriveAtFrame = function () {\n            if (this.playState >= 0) {\n                var displayIndex = this._timelineData !== null ? this._frameArray[this._frameOffset + 1] : this.slot._slotData.displayIndex;\n                if (this.slot.displayIndex !== displayIndex) {\n                    this.slot._setDisplayIndex(displayIndex, true);\n                }\n            }\n        };\n        return SlotDislayTimelineState;\n    }(dragonBones.SlotTimelineState));\n    dragonBones.SlotDislayTimelineState = SlotDislayTimelineState;\n    /**\n     * @internal\n     */\n    var SlotColorTimelineState = /** @class */ (function (_super) {\n        __extends(SlotColorTimelineState, _super);\n        function SlotColorTimelineState() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._current = [0, 0, 0, 0, 0, 0, 0, 0];\n            _this._delta = [0, 0, 0, 0, 0, 0, 0, 0];\n            _this._result = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n            return _this;\n        }\n        SlotColorTimelineState.toString = function () {\n            return \"[class dragonBones.SlotColorTimelineState]\";\n        };\n        SlotColorTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this._dirty = false;\n        };\n        SlotColorTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData !== null) {\n                var intArray = this._dragonBonesData.intArray;\n                var frameIntArray = this._frameIntArray;\n                var valueOffset = this._animationData.frameIntOffset + this._frameValueOffset + this._frameIndex * 1; // ...(timeline value offset)|x|x|(Value offset)|(Next offset)|x|x|...\n                var colorOffset = frameIntArray[valueOffset];\n                if (colorOffset < 0) {\n                    colorOffset += 65536; // Fixed out of bouds bug. \n                }\n                this._current[0] = intArray[colorOffset++];\n                this._current[1] = intArray[colorOffset++];\n                this._current[2] = intArray[colorOffset++];\n                this._current[3] = intArray[colorOffset++];\n                this._current[4] = intArray[colorOffset++];\n                this._current[5] = intArray[colorOffset++];\n                this._current[6] = intArray[colorOffset++];\n                this._current[7] = intArray[colorOffset++];\n                if (this._tweenState === 2 /* Always */) {\n                    if (this._frameIndex === this._frameCount - 1) {\n                        colorOffset = frameIntArray[this._animationData.frameIntOffset + this._frameValueOffset];\n                    }\n                    else {\n                        colorOffset = frameIntArray[valueOffset + 1 * 1];\n                    }\n                    if (colorOffset < 0) {\n                        colorOffset += 65536; // Fixed out of bouds bug. \n                    }\n                    this._delta[0] = intArray[colorOffset++] - this._current[0];\n                    this._delta[1] = intArray[colorOffset++] - this._current[1];\n                    this._delta[2] = intArray[colorOffset++] - this._current[2];\n                    this._delta[3] = intArray[colorOffset++] - this._current[3];\n                    this._delta[4] = intArray[colorOffset++] - this._current[4];\n                    this._delta[5] = intArray[colorOffset++] - this._current[5];\n                    this._delta[6] = intArray[colorOffset++] - this._current[6];\n                    this._delta[7] = intArray[colorOffset++] - this._current[7];\n                }\n            }\n            else { // Pose.\n                var color = this.slot._slotData.color;\n                this._current[0] = color.alphaMultiplier * 100.0;\n                this._current[1] = color.redMultiplier * 100.0;\n                this._current[2] = color.greenMultiplier * 100.0;\n                this._current[3] = color.blueMultiplier * 100.0;\n                this._current[4] = color.alphaOffset;\n                this._current[5] = color.redOffset;\n                this._current[6] = color.greenOffset;\n                this._current[7] = color.blueOffset;\n            }\n        };\n        SlotColorTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            this._dirty = true;\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            this._result[0] = (this._current[0] + this._delta[0] * this._tweenProgress) * 0.01;\n            this._result[1] = (this._current[1] + this._delta[1] * this._tweenProgress) * 0.01;\n            this._result[2] = (this._current[2] + this._delta[2] * this._tweenProgress) * 0.01;\n            this._result[3] = (this._current[3] + this._delta[3] * this._tweenProgress) * 0.01;\n            this._result[4] = this._current[4] + this._delta[4] * this._tweenProgress;\n            this._result[5] = this._current[5] + this._delta[5] * this._tweenProgress;\n            this._result[6] = this._current[6] + this._delta[6] * this._tweenProgress;\n            this._result[7] = this._current[7] + this._delta[7] * this._tweenProgress;\n        };\n        SlotColorTimelineState.prototype.fadeOut = function () {\n            this._tweenState = 0 /* None */;\n            this._dirty = false;\n        };\n        SlotColorTimelineState.prototype.update = function (passedTime) {\n            _super.prototype.update.call(this, passedTime);\n            // Fade animation.\n            if (this._tweenState !== 0 /* None */ || this._dirty) {\n                var result = this.slot._colorTransform;\n                if (this._animationState._fadeState !== 0 || this._animationState._subFadeState !== 0) {\n                    if (result.alphaMultiplier !== this._result[0] ||\n                        result.redMultiplier !== this._result[1] ||\n                        result.greenMultiplier !== this._result[2] ||\n                        result.blueMultiplier !== this._result[3] ||\n                        result.alphaOffset !== this._result[4] ||\n                        result.redOffset !== this._result[5] ||\n                        result.greenOffset !== this._result[6] ||\n                        result.blueOffset !== this._result[7]) {\n                        var fadeProgress = Math.pow(this._animationState._fadeProgress, 4);\n                        result.alphaMultiplier += (this._result[0] - result.alphaMultiplier) * fadeProgress;\n                        result.redMultiplier += (this._result[1] - result.redMultiplier) * fadeProgress;\n                        result.greenMultiplier += (this._result[2] - result.greenMultiplier) * fadeProgress;\n                        result.blueMultiplier += (this._result[3] - result.blueMultiplier) * fadeProgress;\n                        result.alphaOffset += (this._result[4] - result.alphaOffset) * fadeProgress;\n                        result.redOffset += (this._result[5] - result.redOffset) * fadeProgress;\n                        result.greenOffset += (this._result[6] - result.greenOffset) * fadeProgress;\n                        result.blueOffset += (this._result[7] - result.blueOffset) * fadeProgress;\n                        this.slot._colorDirty = true;\n                    }\n                }\n                else if (this._dirty) {\n                    this._dirty = false;\n                    if (result.alphaMultiplier !== this._result[0] ||\n                        result.redMultiplier !== this._result[1] ||\n                        result.greenMultiplier !== this._result[2] ||\n                        result.blueMultiplier !== this._result[3] ||\n                        result.alphaOffset !== this._result[4] ||\n                        result.redOffset !== this._result[5] ||\n                        result.greenOffset !== this._result[6] ||\n                        result.blueOffset !== this._result[7]) {\n                        result.alphaMultiplier = this._result[0];\n                        result.redMultiplier = this._result[1];\n                        result.greenMultiplier = this._result[2];\n                        result.blueMultiplier = this._result[3];\n                        result.alphaOffset = this._result[4];\n                        result.redOffset = this._result[5];\n                        result.greenOffset = this._result[6];\n                        result.blueOffset = this._result[7];\n                        this.slot._colorDirty = true;\n                    }\n                }\n            }\n        };\n        return SlotColorTimelineState;\n    }(dragonBones.SlotTimelineState));\n    dragonBones.SlotColorTimelineState = SlotColorTimelineState;\n    /**\n     * @internal\n     */\n    var DeformTimelineState = /** @class */ (function (_super) {\n        __extends(DeformTimelineState, _super);\n        function DeformTimelineState() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._current = [];\n            _this._delta = [];\n            _this._result = [];\n            return _this;\n        }\n        DeformTimelineState.toString = function () {\n            return \"[class dragonBones.DeformTimelineState]\";\n        };\n        DeformTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.vertexOffset = 0;\n            this._dirty = false;\n            this._frameFloatOffset = 0;\n            this._valueCount = 0;\n            this._deformCount = 0;\n            this._valueOffset = 0;\n            this._current.length = 0;\n            this._delta.length = 0;\n            this._result.length = 0;\n        };\n        DeformTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData !== null) {\n                var valueOffset = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * this._valueCount;\n                var scale = this._armature._armatureData.scale;\n                var frameFloatArray = this._frameFloatArray;\n                if (this._tweenState === 2 /* Always */) {\n                    var nextValueOffset = valueOffset + this._valueCount;\n                    if (this._frameIndex === this._frameCount - 1) {\n                        nextValueOffset = this._animationData.frameFloatOffset + this._frameValueOffset;\n                    }\n                    for (var i = 0; i < this._valueCount; ++i) {\n                        this._delta[i] = frameFloatArray[nextValueOffset + i] * scale - (this._current[i] = frameFloatArray[valueOffset + i] * scale);\n                    }\n                }\n                else {\n                    for (var i = 0; i < this._valueCount; ++i) {\n                        this._current[i] = frameFloatArray[valueOffset + i] * scale;\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < this._valueCount; ++i) {\n                    this._current[i] = 0.0;\n                }\n            }\n        };\n        DeformTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            this._dirty = true;\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            for (var i = 0; i < this._valueCount; ++i) {\n                this._result[i] = this._current[i] + this._delta[i] * this._tweenProgress;\n            }\n        };\n        DeformTimelineState.prototype.init = function (armature, animationState, timelineData) {\n            _super.prototype.init.call(this, armature, animationState, timelineData);\n            if (this._timelineData !== null) {\n                var frameIntOffset = this._animationData.frameIntOffset + this._timelineArray[this._timelineData.offset + 3 /* TimelineFrameValueCount */];\n                this.vertexOffset = this._frameIntArray[frameIntOffset + 0 /* DeformVertexOffset */];\n                if (this.vertexOffset < 0) {\n                    this.vertexOffset += 65536; // Fixed out of bouds bug. \n                }\n                this._deformCount = this._frameIntArray[frameIntOffset + 1 /* DeformCount */];\n                this._valueCount = this._frameIntArray[frameIntOffset + 2 /* DeformValueCount */];\n                this._valueOffset = this._frameIntArray[frameIntOffset + 3 /* DeformValueOffset */];\n                this._frameFloatOffset = this._frameIntArray[frameIntOffset + 4 /* DeformFloatOffset */] + this._animationData.frameFloatOffset;\n            }\n            else {\n                var deformVertices = this.slot._deformVertices;\n                this._deformCount = deformVertices !== null ? deformVertices.vertices.length : 0;\n                this._valueCount = this._deformCount;\n                this._valueOffset = 0;\n                this._frameFloatOffset = 0;\n            }\n            this._current.length = this._valueCount;\n            this._delta.length = this._valueCount;\n            this._result.length = this._valueCount;\n            for (var i = 0; i < this._valueCount; ++i) {\n                this._delta[i] = 0.0;\n            }\n        };\n        DeformTimelineState.prototype.fadeOut = function () {\n            this._tweenState = 0 /* None */;\n            this._dirty = false;\n        };\n        DeformTimelineState.prototype.update = function (passedTime) {\n            var deformVertices = this.slot._deformVertices;\n            if (deformVertices === null || deformVertices.verticesData === null || deformVertices.verticesData.offset !== this.vertexOffset) {\n                return;\n            }\n            _super.prototype.update.call(this, passedTime);\n            // Fade animation.\n            if (this._tweenState !== 0 /* None */ || this._dirty) {\n                var result = deformVertices.vertices;\n                if (this._animationState._fadeState !== 0 || this._animationState._subFadeState !== 0) {\n                    var fadeProgress = Math.pow(this._animationState._fadeProgress, 2);\n                    for (var i = 0; i < this._deformCount; ++i) {\n                        if (i < this._valueOffset) {\n                            result[i] += (this._frameFloatArray[this._frameFloatOffset + i] - result[i]) * fadeProgress;\n                        }\n                        else if (i < this._valueOffset + this._valueCount) {\n                            result[i] += (this._result[i - this._valueOffset] - result[i]) * fadeProgress;\n                        }\n                        else {\n                            result[i] += (this._frameFloatArray[this._frameFloatOffset + i - this._valueCount] - result[i]) * fadeProgress;\n                        }\n                    }\n                    deformVertices.verticesDirty = true;\n                }\n                else if (this._dirty) {\n                    this._dirty = false;\n                    for (var i = 0; i < this._deformCount; ++i) {\n                        if (i < this._valueOffset) {\n                            result[i] = this._frameFloatArray[this._frameFloatOffset + i];\n                        }\n                        else if (i < this._valueOffset + this._valueCount) {\n                            result[i] = this._result[i - this._valueOffset];\n                        }\n                        else {\n                            result[i] = this._frameFloatArray[this._frameFloatOffset + i - this._valueCount];\n                        }\n                    }\n                    deformVertices.verticesDirty = true;\n                }\n            }\n        };\n        return DeformTimelineState;\n    }(dragonBones.SlotTimelineState));\n    dragonBones.DeformTimelineState = DeformTimelineState;\n    /**\n     * @internal\n     */\n    var IKConstraintTimelineState = /** @class */ (function (_super) {\n        __extends(IKConstraintTimelineState, _super);\n        function IKConstraintTimelineState() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        IKConstraintTimelineState.toString = function () {\n            return \"[class dragonBones.IKConstraintTimelineState]\";\n        };\n        IKConstraintTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this._current = 0.0;\n            this._delta = 0.0;\n        };\n        IKConstraintTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            var ikConstraint = this.constraint;\n            if (this._timelineData !== null) {\n                var valueOffset = this._animationData.frameIntOffset + this._frameValueOffset + this._frameIndex * 2;\n                var frameIntArray = this._frameIntArray;\n                var bendPositive = frameIntArray[valueOffset++] !== 0;\n                this._current = frameIntArray[valueOffset++] * 0.01;\n                if (this._tweenState === 2 /* Always */) {\n                    if (this._frameIndex === this._frameCount - 1) {\n                        valueOffset = this._animationData.frameIntOffset + this._frameValueOffset; // + 0 * 2\n                    }\n                    this._delta = frameIntArray[valueOffset + 1] * 0.01 - this._current;\n                }\n                else {\n                    this._delta = 0.0;\n                }\n                ikConstraint._bendPositive = bendPositive;\n            }\n            else {\n                var ikConstraintData = ikConstraint._constraintData;\n                this._current = ikConstraintData.weight;\n                this._delta = 0.0;\n                ikConstraint._bendPositive = ikConstraintData.bendPositive;\n            }\n            ikConstraint.invalidUpdate();\n        };\n        IKConstraintTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            var ikConstraint = this.constraint;\n            ikConstraint._weight = this._current + this._delta * this._tweenProgress;\n            ikConstraint.invalidUpdate();\n            // TODO fade update.\n        };\n        return IKConstraintTimelineState;\n    }(dragonBones.ConstraintTimelineState));\n    dragonBones.IKConstraintTimelineState = IKConstraintTimelineState;\n    /**\n     * @internal\n     */\n    var AnimationTimelineState = /** @class */ (function (_super) {\n        __extends(AnimationTimelineState, _super);\n        function AnimationTimelineState() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._floats = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n            return _this;\n        }\n        AnimationTimelineState.toString = function () {\n            return \"[class dragonBones.AnimationTimelineState]\";\n        };\n        AnimationTimelineState.prototype._onClear = function () {\n            _super.prototype._onClear.call(this);\n            this.animationState = null;\n        };\n        AnimationTimelineState.prototype._onArriveAtFrame = function () {\n            _super.prototype._onArriveAtFrame.call(this);\n            if (this._timelineData === null) {\n                return;\n            }\n            var valueOffset = this._animationData.frameIntOffset + this._frameValueOffset + this._frameIndex * 2;\n            var frameRateR = 1.0 / this.animationState._animationData.parent.frameRate;\n            var frameIntArray = this._frameIntArray;\n            this._floats[0] = frameIntArray[valueOffset++] * frameRateR;\n            this._floats[3] = frameIntArray[valueOffset++] * 0.01;\n            if (this._tweenState === 2 /* Always */) {\n                if (this._frameIndex === this._frameCount - 1) {\n                    valueOffset = this._animationData.frameIntOffset + this._frameValueOffset; // + 0 * 2\n                }\n                this._floats[1] = frameIntArray[valueOffset++] * frameRateR - this._floats[0];\n                this._floats[4] = frameIntArray[valueOffset++] * 0.01 - this._floats[3];\n            }\n            else {\n                this._floats[1] = 0.0;\n                this._floats[4] = 0.0;\n            }\n        };\n        AnimationTimelineState.prototype._onUpdateFrame = function () {\n            _super.prototype._onUpdateFrame.call(this);\n            if (this._tweenState !== 2 /* Always */) {\n                this._tweenState = 0 /* None */;\n            }\n            if (this._floats[0] >= 0.0) {\n                this._floats[2] = this._floats[0] + this._floats[1] * this._tweenProgress;\n            }\n            this._floats[5] = this._floats[3] + this._floats[4] * this._tweenProgress;\n        };\n        AnimationTimelineState.prototype.blend = function (state) {\n            var animationState = this.animationState;\n            var blendWeight = animationState._blendState.blendWeight;\n            if (state === 2) {\n                animationState.weight += this._floats[5] * blendWeight;\n                animationState.currentTime += this._floats[2] * blendWeight;\n            }\n            else {\n                animationState.weight = this._floats[5] * blendWeight;\n                animationState.currentTime = this._floats[2] * blendWeight;\n            }\n        };\n        return AnimationTimelineState;\n    }(dragonBones.TweenTimelineState));\n    dragonBones.AnimationTimelineState = AnimationTimelineState;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - The properties of the object carry basic information about an event,\n     * which are passed as parameter or parameter's parameter to event listeners when an event occurs.\n     * @version DragonBones 4.5\n     * @language en_US\n     */\n    /**\n     * - 事件对象，包含有关事件的基本信息，当发生事件时，该实例将作为参数或参数的参数传递给事件侦听器。\n     * @version DragonBones 4.5\n     * @language zh_CN\n     */\n    var EventObject = /** @class */ (function (_super) {\n        __extends(EventObject, _super);\n        function EventObject() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @internal\n         * @private\n         */\n        EventObject.actionDataToInstance = function (data, instance, armature) {\n            if (data.type === 0 /* Play */) {\n                instance.type = EventObject.FRAME_EVENT;\n            }\n            else {\n                instance.type = data.type === 10 /* Frame */ ? EventObject.FRAME_EVENT : EventObject.SOUND_EVENT;\n            }\n            instance.name = data.name;\n            instance.armature = armature;\n            instance.actionData = data;\n            instance.data = data.data;\n            if (data.bone !== null) {\n                instance.bone = armature.getBone(data.bone.name);\n            }\n            if (data.slot !== null) {\n                instance.slot = armature.getSlot(data.slot.name);\n            }\n        };\n        EventObject.toString = function () {\n            return \"[class dragonBones.EventObject]\";\n        };\n        EventObject.prototype._onClear = function () {\n            this.time = 0.0;\n            this.type = \"\";\n            this.name = \"\";\n            this.armature = null;\n            this.bone = null;\n            this.slot = null;\n            this.animationState = null;\n            this.actionData = null;\n            this.data = null;\n        };\n        /**\n         * - Animation start play.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画开始播放。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.START = \"start\";\n        /**\n         * - Animation loop play complete once.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画循环播放完成一次。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.LOOP_COMPLETE = \"loopComplete\";\n        /**\n         * - Animation play complete.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画播放完成。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.COMPLETE = \"complete\";\n        /**\n         * - Animation fade in start.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画淡入开始。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.FADE_IN = \"fadeIn\";\n        /**\n         * - Animation fade in complete.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画淡入完成。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.FADE_IN_COMPLETE = \"fadeInComplete\";\n        /**\n         * - Animation fade out start.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画淡出开始。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.FADE_OUT = \"fadeOut\";\n        /**\n         * - Animation fade out complete.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画淡出完成。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.FADE_OUT_COMPLETE = \"fadeOutComplete\";\n        /**\n         * - Animation frame event.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画帧事件。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.FRAME_EVENT = \"frameEvent\";\n        /**\n         * - Animation frame sound event.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 动画帧声音事件。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        EventObject.SOUND_EVENT = \"soundEvent\";\n        return EventObject;\n    }(dragonBones.BaseObject));\n    dragonBones.EventObject = EventObject;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var DataParser = /** @class */ (function () {\n        function DataParser() {\n        }\n        DataParser._getArmatureType = function (value) {\n            switch (value.toLowerCase()) {\n                case \"stage\":\n                    return 2 /* Stage */;\n                case \"armature\":\n                    return 0 /* Armature */;\n                case \"movieclip\":\n                    return 1 /* MovieClip */;\n                default:\n                    return 0 /* Armature */;\n            }\n        };\n        DataParser._getBoneType = function (value) {\n            switch (value.toLowerCase()) {\n                case \"bone\":\n                    return 0 /* Bone */;\n                case \"surface\":\n                    return 1 /* Surface */;\n                default:\n                    return 0 /* Bone */;\n            }\n        };\n        DataParser._getDisplayType = function (value) {\n            switch (value.toLowerCase()) {\n                case \"image\":\n                    return 0 /* Image */;\n                case \"mesh\":\n                    return 2 /* Mesh */;\n                case \"armature\":\n                    return 1 /* Armature */;\n                case \"boundingbox\":\n                    return 3 /* BoundingBox */;\n                case \"path\":\n                    return 4 /* Path */;\n                default:\n                    return 0 /* Image */;\n            }\n        };\n        DataParser._getBoundingBoxType = function (value) {\n            switch (value.toLowerCase()) {\n                case \"rectangle\":\n                    return 0 /* Rectangle */;\n                case \"ellipse\":\n                    return 1 /* Ellipse */;\n                case \"polygon\":\n                    return 2 /* Polygon */;\n                default:\n                    return 0 /* Rectangle */;\n            }\n        };\n        DataParser._getActionType = function (value) {\n            switch (value.toLowerCase()) {\n                case \"play\":\n                    return 0 /* Play */;\n                case \"frame\":\n                    return 10 /* Frame */;\n                case \"sound\":\n                    return 11 /* Sound */;\n                default:\n                    return 0 /* Play */;\n            }\n        };\n        DataParser._getBlendMode = function (value) {\n            switch (value.toLowerCase()) {\n                case \"normal\":\n                    return 0 /* Normal */;\n                case \"add\":\n                    return 1 /* Add */;\n                case \"alpha\":\n                    return 2 /* Alpha */;\n                case \"darken\":\n                    return 3 /* Darken */;\n                case \"difference\":\n                    return 4 /* Difference */;\n                case \"erase\":\n                    return 5 /* Erase */;\n                case \"hardlight\":\n                    return 6 /* HardLight */;\n                case \"invert\":\n                    return 7 /* Invert */;\n                case \"layer\":\n                    return 8 /* Layer */;\n                case \"lighten\":\n                    return 9 /* Lighten */;\n                case \"multiply\":\n                    return 10 /* Multiply */;\n                case \"overlay\":\n                    return 11 /* Overlay */;\n                case \"screen\":\n                    return 12 /* Screen */;\n                case \"subtract\":\n                    return 13 /* Subtract */;\n                default:\n                    return 0 /* Normal */;\n            }\n        };\n        DataParser._getPositionMode = function (value) {\n            switch (value.toLocaleLowerCase()) {\n                case \"percent\":\n                    return 1 /* Percent */;\n                case \"fixed\":\n                    return 0 /* Fixed */;\n                default:\n                    return 1 /* Percent */;\n            }\n        };\n        DataParser._getSpacingMode = function (value) {\n            switch (value.toLocaleLowerCase()) {\n                case \"length\":\n                    return 0 /* Length */;\n                case \"percent\":\n                    return 2 /* Percent */;\n                case \"fixed\":\n                    return 1 /* Fixed */;\n                default:\n                    return 0 /* Length */;\n            }\n        };\n        DataParser._getRotateMode = function (value) {\n            switch (value.toLocaleLowerCase()) {\n                case \"tangent\":\n                    return 0 /* Tangent */;\n                case \"chain\":\n                    return 1 /* Chain */;\n                case \"chainscale\":\n                    return 2 /* ChainScale */;\n                default:\n                    return 0 /* Tangent */;\n            }\n        };\n        /**\n         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parsetTextureAtlasData()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link dragonBones.BaseFactory#parsetTextureAtlasData()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        DataParser.parseDragonBonesData = function (rawData) {\n            console.warn(\"Deprecated.\");\n            if (rawData instanceof ArrayBuffer) {\n                return dragonBones.BinaryDataParser.getInstance().parseDragonBonesData(rawData);\n            }\n            else {\n                return dragonBones.ObjectDataParser.getInstance().parseDragonBonesData(rawData);\n            }\n        };\n        /**\n         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parsetTextureAtlasData()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link dragonBones.BaseFactory#parsetTextureAtlasData()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        DataParser.parseTextureAtlasData = function (rawData, scale) {\n            if (scale === void 0) { scale = 1; }\n            console.warn(\"已废弃\");\n            var textureAtlasData = {};\n            var subTextureList = rawData[DataParser.SUB_TEXTURE];\n            for (var i = 0, len = subTextureList.length; i < len; i++) {\n                var subTextureObject = subTextureList[i];\n                var subTextureName = subTextureObject[DataParser.NAME];\n                var subTextureRegion = new dragonBones.Rectangle();\n                var subTextureFrame = null;\n                subTextureRegion.x = subTextureObject[DataParser.X] / scale;\n                subTextureRegion.y = subTextureObject[DataParser.Y] / scale;\n                subTextureRegion.width = subTextureObject[DataParser.WIDTH] / scale;\n                subTextureRegion.height = subTextureObject[DataParser.HEIGHT] / scale;\n                if (DataParser.FRAME_WIDTH in subTextureObject) {\n                    subTextureFrame = new dragonBones.Rectangle();\n                    subTextureFrame.x = subTextureObject[DataParser.FRAME_X] / scale;\n                    subTextureFrame.y = subTextureObject[DataParser.FRAME_Y] / scale;\n                    subTextureFrame.width = subTextureObject[DataParser.FRAME_WIDTH] / scale;\n                    subTextureFrame.height = subTextureObject[DataParser.FRAME_HEIGHT] / scale;\n                }\n                textureAtlasData[subTextureName] = { region: subTextureRegion, frame: subTextureFrame, rotated: false };\n            }\n            return textureAtlasData;\n        };\n        DataParser.DATA_VERSION_2_3 = \"2.3\";\n        DataParser.DATA_VERSION_3_0 = \"3.0\";\n        DataParser.DATA_VERSION_4_0 = \"4.0\";\n        DataParser.DATA_VERSION_4_5 = \"4.5\";\n        DataParser.DATA_VERSION_5_0 = \"5.0\";\n        DataParser.DATA_VERSION_5_5 = \"5.5\";\n        DataParser.DATA_VERSION = DataParser.DATA_VERSION_5_5;\n        DataParser.DATA_VERSIONS = [\n            DataParser.DATA_VERSION_4_0,\n            DataParser.DATA_VERSION_4_5,\n            DataParser.DATA_VERSION_5_0,\n            DataParser.DATA_VERSION_5_5\n        ];\n        DataParser.TEXTURE_ATLAS = \"textureAtlas\";\n        DataParser.SUB_TEXTURE = \"SubTexture\";\n        DataParser.FORMAT = \"format\";\n        DataParser.IMAGE_PATH = \"imagePath\";\n        DataParser.WIDTH = \"width\";\n        DataParser.HEIGHT = \"height\";\n        DataParser.ROTATED = \"rotated\";\n        DataParser.FRAME_X = \"frameX\";\n        DataParser.FRAME_Y = \"frameY\";\n        DataParser.FRAME_WIDTH = \"frameWidth\";\n        DataParser.FRAME_HEIGHT = \"frameHeight\";\n        DataParser.DRADON_BONES = \"dragonBones\";\n        DataParser.USER_DATA = \"userData\";\n        DataParser.ARMATURE = \"armature\";\n        DataParser.BONE = \"bone\";\n        DataParser.SURFACE = \"surface\";\n        DataParser.SLOT = \"slot\";\n        DataParser.CONSTRAINT = \"constraint\";\n        DataParser.IK = \"ik\";\n        DataParser.PATH_CONSTRAINT = \"path\";\n        DataParser.SKIN = \"skin\";\n        DataParser.DISPLAY = \"display\";\n        DataParser.ANIMATION = \"animation\";\n        DataParser.Z_ORDER = \"zOrder\";\n        DataParser.FFD = \"ffd\";\n        DataParser.FRAME = \"frame\";\n        DataParser.TRANSLATE_FRAME = \"translateFrame\";\n        DataParser.ROTATE_FRAME = \"rotateFrame\";\n        DataParser.SCALE_FRAME = \"scaleFrame\";\n        DataParser.DISPLAY_FRAME = \"displayFrame\";\n        DataParser.COLOR_FRAME = \"colorFrame\";\n        DataParser.DEFAULT_ACTIONS = \"defaultActions\";\n        DataParser.ACTIONS = \"actions\";\n        DataParser.EVENTS = \"events\";\n        DataParser.INTS = \"ints\";\n        DataParser.FLOATS = \"floats\";\n        DataParser.STRINGS = \"strings\";\n        DataParser.CANVAS = \"canvas\";\n        DataParser.TRANSFORM = \"transform\";\n        DataParser.PIVOT = \"pivot\";\n        DataParser.AABB = \"aabb\";\n        DataParser.COLOR = \"color\";\n        DataParser.VERSION = \"version\";\n        DataParser.COMPATIBLE_VERSION = \"compatibleVersion\";\n        DataParser.FRAME_RATE = \"frameRate\";\n        DataParser.TYPE = \"type\";\n        DataParser.SUB_TYPE = \"subType\";\n        DataParser.NAME = \"name\";\n        DataParser.PARENT = \"parent\";\n        DataParser.TARGET = \"target\";\n        DataParser.STAGE = \"stage\";\n        DataParser.SHARE = \"share\";\n        DataParser.PATH = \"path\";\n        DataParser.LENGTH = \"length\";\n        DataParser.DISPLAY_INDEX = \"displayIndex\";\n        DataParser.BLEND_MODE = \"blendMode\";\n        DataParser.INHERIT_TRANSLATION = \"inheritTranslation\";\n        DataParser.INHERIT_ROTATION = \"inheritRotation\";\n        DataParser.INHERIT_SCALE = \"inheritScale\";\n        DataParser.INHERIT_REFLECTION = \"inheritReflection\";\n        DataParser.INHERIT_ANIMATION = \"inheritAnimation\";\n        DataParser.INHERIT_DEFORM = \"inheritDeform\";\n        DataParser.SEGMENT_X = \"segmentX\";\n        DataParser.SEGMENT_Y = \"segmentY\";\n        DataParser.BEND_POSITIVE = \"bendPositive\";\n        DataParser.CHAIN = \"chain\";\n        DataParser.WEIGHT = \"weight\";\n        DataParser.FADE_IN_TIME = \"fadeInTime\";\n        DataParser.PLAY_TIMES = \"playTimes\";\n        DataParser.SCALE = \"scale\";\n        DataParser.OFFSET = \"offset\";\n        DataParser.POSITION = \"position\";\n        DataParser.DURATION = \"duration\";\n        DataParser.TWEEN_EASING = \"tweenEasing\";\n        DataParser.TWEEN_ROTATE = \"tweenRotate\";\n        DataParser.TWEEN_SCALE = \"tweenScale\";\n        DataParser.CLOCK_WISE = \"clockwise\";\n        DataParser.CURVE = \"curve\";\n        DataParser.SOUND = \"sound\";\n        DataParser.EVENT = \"event\";\n        DataParser.ACTION = \"action\";\n        DataParser.X = \"x\";\n        DataParser.Y = \"y\";\n        DataParser.SKEW_X = \"skX\";\n        DataParser.SKEW_Y = \"skY\";\n        DataParser.SCALE_X = \"scX\";\n        DataParser.SCALE_Y = \"scY\";\n        DataParser.VALUE = \"value\";\n        DataParser.ROTATE = \"rotate\";\n        DataParser.SKEW = \"skew\";\n        DataParser.ALPHA_OFFSET = \"aO\";\n        DataParser.RED_OFFSET = \"rO\";\n        DataParser.GREEN_OFFSET = \"gO\";\n        DataParser.BLUE_OFFSET = \"bO\";\n        DataParser.ALPHA_MULTIPLIER = \"aM\";\n        DataParser.RED_MULTIPLIER = \"rM\";\n        DataParser.GREEN_MULTIPLIER = \"gM\";\n        DataParser.BLUE_MULTIPLIER = \"bM\";\n        DataParser.UVS = \"uvs\";\n        DataParser.VERTICES = \"vertices\";\n        DataParser.TRIANGLES = \"triangles\";\n        DataParser.WEIGHTS = \"weights\";\n        DataParser.SLOT_POSE = \"slotPose\";\n        DataParser.BONE_POSE = \"bonePose\";\n        DataParser.GLUE_WEIGHTS = \"glueWeights\";\n        DataParser.GLUE_MESHES = \"glueMeshes\";\n        DataParser.BONES = \"bones\";\n        DataParser.POSITION_MODE = \"positionMode\";\n        DataParser.SPACING_MODE = \"spacingMode\";\n        DataParser.ROTATE_MODE = \"rotateMode\";\n        DataParser.SPACING = \"spacing\";\n        DataParser.ROTATE_OFFSET = \"rotateOffset\";\n        DataParser.ROTATE_MIX = \"rotateMix\";\n        DataParser.TRANSLATE_MIX = \"translateMix\";\n        DataParser.TARGET_DISPLAY = \"targetDisplay\";\n        DataParser.CLOSED = \"closed\";\n        DataParser.CONSTANT_SPEED = \"constantSpeed\";\n        DataParser.VERTEX_COUNT = \"vertexCount\";\n        DataParser.LENGTHS = \"lengths\";\n        DataParser.GOTO_AND_PLAY = \"gotoAndPlay\";\n        DataParser.DEFAULT_NAME = \"default\";\n        return DataParser;\n    }());\n    dragonBones.DataParser = DataParser;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var ObjectDataParser = /** @class */ (function (_super) {\n        __extends(ObjectDataParser, _super);\n        function ObjectDataParser() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._rawTextureAtlasIndex = 0;\n            _this._rawBones = [];\n            _this._data = null; //\n            _this._armature = null; //\n            _this._bone = null; //\n            _this._surface = null; //\n            _this._slot = null; //\n            _this._skin = null; //\n            _this._mesh = null; //\n            _this._animation = null; //\n            _this._timeline = null; //\n            _this._rawTextureAtlases = null;\n            _this._defaultColorOffset = -1;\n            _this._prevClockwise = 0;\n            _this._prevRotation = 0.0;\n            _this._helpMatrixA = new dragonBones.Matrix();\n            _this._helpMatrixB = new dragonBones.Matrix();\n            _this._helpTransform = new dragonBones.Transform();\n            _this._helpColorTransform = new dragonBones.ColorTransform();\n            _this._helpPoint = new dragonBones.Point();\n            _this._helpArray = [];\n            _this._intArray = [];\n            _this._floatArray = [];\n            _this._frameIntArray = [];\n            _this._frameFloatArray = [];\n            _this._frameArray = [];\n            _this._timelineArray = [];\n            _this._cacheRawMeshes = [];\n            _this._cacheMeshes = [];\n            _this._actionFrames = [];\n            _this._weightSlotPose = {};\n            _this._weightBonePoses = {};\n            _this._cacheBones = {};\n            _this._slotChildActions = {};\n            return _this;\n        }\n        ObjectDataParser._getBoolean = function (rawData, key, defaultValue) {\n            if (key in rawData) {\n                var value = rawData[key];\n                var type = typeof value;\n                if (type === \"boolean\") {\n                    return value;\n                }\n                else if (type === \"string\") {\n                    switch (value) {\n                        case \"0\":\n                        case \"NaN\":\n                        case \"\":\n                        case \"false\":\n                        case \"null\":\n                        case \"undefined\":\n                            return false;\n                        default:\n                            return true;\n                    }\n                }\n                else {\n                    return !!value;\n                }\n            }\n            return defaultValue;\n        };\n        ObjectDataParser._getNumber = function (rawData, key, defaultValue) {\n            if (key in rawData) {\n                var value = rawData[key];\n                if (value === null || value === \"NaN\") {\n                    return defaultValue;\n                }\n                return +value || 0;\n            }\n            return defaultValue;\n        };\n        ObjectDataParser._getString = function (rawData, key, defaultValue) {\n            if (key in rawData) {\n                var value = rawData[key];\n                var type = typeof value;\n                if (type === \"string\") {\n                    if (dragonBones.DragonBones.webAssembly) {\n                        for (var i = 0, l = value.length; i < l; ++i) {\n                            if (value.charCodeAt(i) > 255) {\n                                return encodeURI(value);\n                            }\n                        }\n                    }\n                    return value;\n                }\n                return String(value);\n            }\n            return defaultValue;\n        };\n        ObjectDataParser.prototype._getCurvePoint = function (x1, y1, x2, y2, x3, y3, x4, y4, t, result) {\n            var l_t = 1.0 - t;\n            var powA = l_t * l_t;\n            var powB = t * t;\n            var kA = l_t * powA;\n            var kB = 3.0 * t * powA;\n            var kC = 3.0 * l_t * powB;\n            var kD = t * powB;\n            result.x = kA * x1 + kB * x2 + kC * x3 + kD * x4;\n            result.y = kA * y1 + kB * y2 + kC * y3 + kD * y4;\n        };\n        ObjectDataParser.prototype._samplingEasingCurve = function (curve, samples) {\n            var curveCount = curve.length;\n            var stepIndex = -2;\n            for (var i = 0, l = samples.length; i < l; ++i) {\n                var t = (i + 1) / (l + 1); // float\n                while ((stepIndex + 6 < curveCount ? curve[stepIndex + 6] : 1) < t) { // stepIndex + 3 * 2\n                    stepIndex += 6;\n                }\n                var isInCurve = stepIndex >= 0 && stepIndex + 6 < curveCount;\n                var x1 = isInCurve ? curve[stepIndex] : 0.0;\n                var y1 = isInCurve ? curve[stepIndex + 1] : 0.0;\n                var x2 = curve[stepIndex + 2];\n                var y2 = curve[stepIndex + 3];\n                var x3 = curve[stepIndex + 4];\n                var y3 = curve[stepIndex + 5];\n                var x4 = isInCurve ? curve[stepIndex + 6] : 1.0;\n                var y4 = isInCurve ? curve[stepIndex + 7] : 1.0;\n                var lower = 0.0;\n                var higher = 1.0;\n                while (higher - lower > 0.0001) {\n                    var percentage = (higher + lower) * 0.5;\n                    this._getCurvePoint(x1, y1, x2, y2, x3, y3, x4, y4, percentage, this._helpPoint);\n                    if (t - this._helpPoint.x > 0.0) {\n                        lower = percentage;\n                    }\n                    else {\n                        higher = percentage;\n                    }\n                }\n                samples[i] = this._helpPoint.y;\n            }\n        };\n        ObjectDataParser.prototype._parseActionDataInFrame = function (rawData, frameStart, bone, slot) {\n            if (dragonBones.DataParser.EVENT in rawData) {\n                this._mergeActionFrame(rawData[dragonBones.DataParser.EVENT], frameStart, 10 /* Frame */, bone, slot);\n            }\n            if (dragonBones.DataParser.SOUND in rawData) {\n                this._mergeActionFrame(rawData[dragonBones.DataParser.SOUND], frameStart, 11 /* Sound */, bone, slot);\n            }\n            if (dragonBones.DataParser.ACTION in rawData) {\n                this._mergeActionFrame(rawData[dragonBones.DataParser.ACTION], frameStart, 0 /* Play */, bone, slot);\n            }\n            if (dragonBones.DataParser.EVENTS in rawData) {\n                this._mergeActionFrame(rawData[dragonBones.DataParser.EVENTS], frameStart, 10 /* Frame */, bone, slot);\n            }\n            if (dragonBones.DataParser.ACTIONS in rawData) {\n                this._mergeActionFrame(rawData[dragonBones.DataParser.ACTIONS], frameStart, 0 /* Play */, bone, slot);\n            }\n        };\n        ObjectDataParser.prototype._mergeActionFrame = function (rawData, frameStart, type, bone, slot) {\n            var actionOffset = dragonBones.DragonBones.webAssembly ? this._armature.actions.size() : this._armature.actions.length;\n            var actions = this._parseActionData(rawData, type, bone, slot);\n            var frameIndex = 0;\n            var frame = null;\n            for (var _i = 0, actions_2 = actions; _i < actions_2.length; _i++) {\n                var action = actions_2[_i];\n                this._armature.addAction(action, false);\n            }\n            if (this._actionFrames.length === 0) { // First frame.\n                frame = new ActionFrame();\n                frame.frameStart = 0;\n                this._actionFrames.push(frame);\n                frame = null;\n            }\n            for (var _a = 0, _b = this._actionFrames; _a < _b.length; _a++) { // Get same frame.\n                var eachFrame = _b[_a];\n                if (eachFrame.frameStart === frameStart) {\n                    frame = eachFrame;\n                    break;\n                }\n                else if (eachFrame.frameStart > frameStart) {\n                    break;\n                }\n                frameIndex++;\n            }\n            if (frame === null) { // Create and cache frame.\n                frame = new ActionFrame();\n                frame.frameStart = frameStart;\n                this._actionFrames.splice(frameIndex + 1, 0, frame);\n            }\n            for (var i = 0; i < actions.length; ++i) { // Cache action offsets.\n                frame.actions.push(actionOffset + i);\n            }\n        };\n        ObjectDataParser.prototype._parseArmature = function (rawData, scale) {\n            var armature = dragonBones.BaseObject.borrowObject(dragonBones.ArmatureData);\n            armature.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n            armature.frameRate = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.FRAME_RATE, this._data.frameRate);\n            armature.scale = scale;\n            if (dragonBones.DataParser.TYPE in rawData && typeof rawData[dragonBones.DataParser.TYPE] === \"string\") {\n                armature.type = dragonBones.DataParser._getArmatureType(rawData[dragonBones.DataParser.TYPE]);\n            }\n            else {\n                armature.type = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.TYPE, 0 /* Armature */);\n            }\n            if (armature.frameRate === 0) { // Data error.\n                armature.frameRate = 24;\n            }\n            this._armature = armature;\n            if (dragonBones.DataParser.CANVAS in rawData) {\n                var rawCanvas = rawData[dragonBones.DataParser.CANVAS];\n                var canvas = dragonBones.BaseObject.borrowObject(dragonBones.CanvasData);\n                if (dragonBones.DataParser.COLOR in rawCanvas) {\n                    canvas.hasBackground = true;\n                }\n                else {\n                    canvas.hasBackground = false;\n                }\n                canvas.color = ObjectDataParser._getNumber(rawCanvas, dragonBones.DataParser.COLOR, 0);\n                canvas.x = ObjectDataParser._getNumber(rawCanvas, dragonBones.DataParser.X, 0) * armature.scale;\n                canvas.y = ObjectDataParser._getNumber(rawCanvas, dragonBones.DataParser.Y, 0) * armature.scale;\n                canvas.width = ObjectDataParser._getNumber(rawCanvas, dragonBones.DataParser.WIDTH, 0) * armature.scale;\n                canvas.height = ObjectDataParser._getNumber(rawCanvas, dragonBones.DataParser.HEIGHT, 0) * armature.scale;\n                armature.canvas = canvas;\n            }\n            if (dragonBones.DataParser.AABB in rawData) {\n                var rawAABB = rawData[dragonBones.DataParser.AABB];\n                armature.aabb.x = ObjectDataParser._getNumber(rawAABB, dragonBones.DataParser.X, 0.0) * armature.scale;\n                armature.aabb.y = ObjectDataParser._getNumber(rawAABB, dragonBones.DataParser.Y, 0.0) * armature.scale;\n                armature.aabb.width = ObjectDataParser._getNumber(rawAABB, dragonBones.DataParser.WIDTH, 0.0) * armature.scale;\n                armature.aabb.height = ObjectDataParser._getNumber(rawAABB, dragonBones.DataParser.HEIGHT, 0.0) * armature.scale;\n            }\n            if (dragonBones.DataParser.BONE in rawData) {\n                var rawBones = rawData[dragonBones.DataParser.BONE];\n                for (var _i = 0, rawBones_1 = rawBones; _i < rawBones_1.length; _i++) {\n                    var rawBone = rawBones_1[_i];\n                    var parentName = ObjectDataParser._getString(rawBone, dragonBones.DataParser.PARENT, \"\");\n                    var bone = this._parseBone(rawBone);\n                    if (parentName.length > 0) { // Get bone parent.\n                        var parent_1 = armature.getBone(parentName);\n                        if (parent_1 !== null) {\n                            bone.parent = parent_1;\n                        }\n                        else { // Cache.\n                            if (!(parentName in this._cacheBones)) {\n                                this._cacheBones[parentName] = [];\n                            }\n                            this._cacheBones[parentName].push(bone);\n                        }\n                    }\n                    if (bone.name in this._cacheBones) {\n                        for (var _a = 0, _b = this._cacheBones[bone.name]; _a < _b.length; _a++) {\n                            var child = _b[_a];\n                            child.parent = bone;\n                        }\n                        delete this._cacheBones[bone.name];\n                    }\n                    armature.addBone(bone);\n                    this._rawBones.push(bone); // Cache raw bones sort.\n                }\n            }\n            if (dragonBones.DataParser.IK in rawData) {\n                var rawIKS = rawData[dragonBones.DataParser.IK];\n                for (var _c = 0, rawIKS_1 = rawIKS; _c < rawIKS_1.length; _c++) {\n                    var rawIK = rawIKS_1[_c];\n                    var constraint = this._parseIKConstraint(rawIK);\n                    if (constraint) {\n                        armature.addConstraint(constraint);\n                    }\n                }\n            }\n            armature.sortBones();\n            if (dragonBones.DataParser.SLOT in rawData) {\n                var zOrder = 0;\n                var rawSlots = rawData[dragonBones.DataParser.SLOT];\n                for (var _d = 0, rawSlots_1 = rawSlots; _d < rawSlots_1.length; _d++) {\n                    var rawSlot = rawSlots_1[_d];\n                    armature.addSlot(this._parseSlot(rawSlot, zOrder++));\n                }\n            }\n            if (dragonBones.DataParser.SKIN in rawData) {\n                var rawSkins = rawData[dragonBones.DataParser.SKIN];\n                for (var _e = 0, rawSkins_1 = rawSkins; _e < rawSkins_1.length; _e++) {\n                    var rawSkin = rawSkins_1[_e];\n                    armature.addSkin(this._parseSkin(rawSkin));\n                }\n            }\n            if (dragonBones.DataParser.PATH_CONSTRAINT in rawData) {\n                var rawPaths = rawData[dragonBones.DataParser.PATH_CONSTRAINT];\n                for (var _f = 0, rawPaths_1 = rawPaths; _f < rawPaths_1.length; _f++) {\n                    var rawPath = rawPaths_1[_f];\n                    var constraint = this._parsePathConstraint(rawPath);\n                    if (constraint) {\n                        armature.addConstraint(constraint);\n                    }\n                }\n            }\n            for (var i = 0, l = this._cacheRawMeshes.length; i < l; ++i) { // Link glue mesh.\n                var rawMeshData = this._cacheRawMeshes[i];\n                if (!(dragonBones.DataParser.GLUE_WEIGHTS in rawMeshData) || !(dragonBones.DataParser.GLUE_MESHES in rawMeshData)) {\n                    continue;\n                }\n                this._parseMeshGlue(rawMeshData, this._cacheMeshes[i]);\n            }\n            for (var i = 0, l = this._cacheRawMeshes.length; i < l; ++i) { // Link mesh.\n                var rawData_1 = this._cacheRawMeshes[i];\n                var shareName = ObjectDataParser._getString(rawData_1, dragonBones.DataParser.SHARE, \"\");\n                if (shareName.length === 0) {\n                    continue;\n                }\n                var skinName = ObjectDataParser._getString(rawData_1, dragonBones.DataParser.SKIN, dragonBones.DataParser.DEFAULT_NAME);\n                if (skinName.length === 0) { // \n                    skinName = dragonBones.DataParser.DEFAULT_NAME;\n                }\n                var shareMesh = armature.getMesh(skinName, \"\", shareName); // TODO slot;\n                if (shareMesh === null) {\n                    continue; // Error.\n                }\n                var mesh = this._cacheMeshes[i];\n                mesh.vertices.shareFrom(shareMesh.vertices);\n            }\n            if (dragonBones.DataParser.ANIMATION in rawData) {\n                var rawAnimations = rawData[dragonBones.DataParser.ANIMATION];\n                for (var _g = 0, rawAnimations_1 = rawAnimations; _g < rawAnimations_1.length; _g++) {\n                    var rawAnimation = rawAnimations_1[_g];\n                    var animation = this._parseAnimation(rawAnimation);\n                    armature.addAnimation(animation);\n                }\n            }\n            if (dragonBones.DataParser.DEFAULT_ACTIONS in rawData) {\n                var actions = this._parseActionData(rawData[dragonBones.DataParser.DEFAULT_ACTIONS], 0 /* Play */, null, null);\n                for (var _h = 0, actions_3 = actions; _h < actions_3.length; _h++) {\n                    var action = actions_3[_h];\n                    armature.addAction(action, true);\n                    if (action.type === 0 /* Play */) { // Set default animation from default action.\n                        var animation = armature.getAnimation(action.name);\n                        if (animation !== null) {\n                            armature.defaultAnimation = animation;\n                        }\n                    }\n                }\n            }\n            if (dragonBones.DataParser.ACTIONS in rawData) {\n                var actions = this._parseActionData(rawData[dragonBones.DataParser.ACTIONS], 0 /* Play */, null, null);\n                for (var _j = 0, actions_4 = actions; _j < actions_4.length; _j++) {\n                    var action = actions_4[_j];\n                    armature.addAction(action, false);\n                }\n            }\n            // Clear helper.\n            this._rawBones.length = 0;\n            this._cacheRawMeshes.length = 0;\n            this._cacheMeshes.length = 0;\n            this._armature = null;\n            for (var k in this._weightSlotPose) {\n                delete this._weightSlotPose[k];\n            }\n            for (var k in this._weightBonePoses) {\n                delete this._weightBonePoses[k];\n            }\n            for (var k in this._cacheBones) {\n                delete this._cacheBones[k];\n            }\n            for (var k in this._slotChildActions) {\n                delete this._slotChildActions[k];\n            }\n            return armature;\n        };\n        ObjectDataParser.prototype._parseBone = function (rawData) {\n            var type = 0 /* Bone */;\n            var scale = this._armature.scale;\n            if (dragonBones.DataParser.TYPE in rawData && typeof rawData[dragonBones.DataParser.TYPE] === \"string\") {\n                type = dragonBones.DataParser._getBoneType(rawData[dragonBones.DataParser.TYPE]);\n            }\n            else {\n                type = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.TYPE, 0 /* Bone */);\n            }\n            if (type === 0 /* Bone */) {\n                var bone = dragonBones.BaseObject.borrowObject(dragonBones.BoneData);\n                bone.inheritTranslation = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.INHERIT_TRANSLATION, true);\n                bone.inheritRotation = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.INHERIT_ROTATION, true);\n                bone.inheritScale = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.INHERIT_SCALE, true);\n                bone.inheritReflection = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.INHERIT_REFLECTION, true);\n                bone.length = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.LENGTH, 0) * scale;\n                bone.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n                if (dragonBones.DataParser.TRANSFORM in rawData) {\n                    this._parseTransform(rawData[dragonBones.DataParser.TRANSFORM], bone.transform, scale);\n                }\n                return bone;\n            }\n            var surface = dragonBones.BaseObject.borrowObject(dragonBones.SurfaceData);\n            surface.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n            surface.segmentX = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SEGMENT_X, 0);\n            surface.segmentY = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SEGMENT_Y, 0);\n            surface.vertices.length = (surface.segmentX + 1) * (surface.segmentY + 1) * 2;\n            if (dragonBones.DataParser.VERTICES in rawData) {\n                var rawVertices = rawData[dragonBones.DataParser.VERTICES];\n                for (var i = 0, l = surface.vertices.length; i < l; ++i) {\n                    if (i < rawVertices.length) {\n                        surface.vertices[i] = rawVertices[i] * scale;\n                    }\n                    else {\n                        surface.vertices[i] = 0.0;\n                    }\n                }\n            }\n            return surface;\n        };\n        ObjectDataParser.prototype._parseIKConstraint = function (rawData) {\n            var bone = this._armature.getBone(ObjectDataParser._getString(rawData, dragonBones.DataParser.BONE, \"\"));\n            if (bone === null) {\n                return null;\n            }\n            var target = this._armature.getBone(ObjectDataParser._getString(rawData, dragonBones.DataParser.TARGET, \"\"));\n            if (target === null) {\n                return null;\n            }\n            var constraint = dragonBones.BaseObject.borrowObject(dragonBones.IKConstraintData);\n            constraint.scaleEnabled = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.SCALE, false);\n            constraint.bendPositive = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.BEND_POSITIVE, true);\n            constraint.weight = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.WEIGHT, 1.0);\n            constraint.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n            constraint.type = 0 /* IK */;\n            constraint.target = target;\n            var chain = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.CHAIN, 0);\n            if (chain > 0 && bone.parent !== null) {\n                constraint.root = bone.parent;\n                constraint.bone = bone;\n            }\n            else {\n                constraint.root = bone;\n                constraint.bone = null;\n            }\n            return constraint;\n        };\n        ObjectDataParser.prototype._parsePathConstraint = function (rawData) {\n            var target = this._armature.getSlot(ObjectDataParser._getString(rawData, dragonBones.DataParser.TARGET, \"\"));\n            if (target === null) {\n                return null;\n            }\n            var defaultSkin = this._armature.defaultSkin;\n            if (defaultSkin === null) {\n                return null;\n            }\n            //TODO\n            var targetDisplay = defaultSkin.getDisplay(target.name, ObjectDataParser._getString(rawData, dragonBones.DataParser.TARGET_DISPLAY, target.name));\n            if (targetDisplay === null || !(targetDisplay instanceof dragonBones.PathDisplayData)) {\n                return null;\n            }\n            var bones = rawData[dragonBones.DataParser.BONES];\n            if (bones === null || bones.length === 0) {\n                return null;\n            }\n            var constraint = dragonBones.BaseObject.borrowObject(dragonBones.PathConstraintData);\n            constraint.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n            constraint.type = 1 /* Path */;\n            constraint.pathSlot = target;\n            constraint.pathDisplayData = targetDisplay;\n            constraint.target = target.parent;\n            constraint.positionMode = dragonBones.DataParser._getPositionMode(ObjectDataParser._getString(rawData, dragonBones.DataParser.POSITION_MODE, \"\"));\n            constraint.spacingMode = dragonBones.DataParser._getSpacingMode(ObjectDataParser._getString(rawData, dragonBones.DataParser.SPACING_MODE, \"\"));\n            constraint.rotateMode = dragonBones.DataParser._getRotateMode(ObjectDataParser._getString(rawData, dragonBones.DataParser.ROTATE_MODE, \"\"));\n            constraint.position = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.POSITION, 0);\n            constraint.spacing = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SPACING, 0);\n            constraint.rotateOffset = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.ROTATE_OFFSET, 0);\n            constraint.rotateMix = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.ROTATE_MIX, 1);\n            constraint.translateMix = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.TRANSLATE_MIX, 1);\n            //\n            for (var _i = 0, bones_3 = bones; _i < bones_3.length; _i++) {\n                var boneName = bones_3[_i];\n                var bone = this._armature.getBone(boneName);\n                if (bone !== null) {\n                    constraint.AddBone(bone);\n                    if (constraint.root === null) {\n                        constraint.root = bone;\n                    }\n                }\n            }\n            return constraint;\n        };\n        ObjectDataParser.prototype._parseSlot = function (rawData, zOrder) {\n            var slot = dragonBones.BaseObject.borrowObject(dragonBones.SlotData);\n            slot.displayIndex = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.DISPLAY_INDEX, 0);\n            slot.zOrder = zOrder;\n            slot.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n            slot.parent = this._armature.getBone(ObjectDataParser._getString(rawData, dragonBones.DataParser.PARENT, \"\")); //\n            if (dragonBones.DataParser.BLEND_MODE in rawData && typeof rawData[dragonBones.DataParser.BLEND_MODE] === \"string\") {\n                slot.blendMode = dragonBones.DataParser._getBlendMode(rawData[dragonBones.DataParser.BLEND_MODE]);\n            }\n            else {\n                slot.blendMode = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.BLEND_MODE, 0 /* Normal */);\n            }\n            if (dragonBones.DataParser.COLOR in rawData) {\n                slot.color = dragonBones.SlotData.createColor();\n                this._parseColorTransform(rawData[dragonBones.DataParser.COLOR], slot.color);\n            }\n            else {\n                slot.color = dragonBones.SlotData.DEFAULT_COLOR;\n            }\n            if (dragonBones.DataParser.ACTIONS in rawData) {\n                this._slotChildActions[slot.name] = this._parseActionData(rawData[dragonBones.DataParser.ACTIONS], 0 /* Play */, null, null);\n            }\n            return slot;\n        };\n        ObjectDataParser.prototype._parseSkin = function (rawData) {\n            var skin = dragonBones.BaseObject.borrowObject(dragonBones.SkinData);\n            skin.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, dragonBones.DataParser.DEFAULT_NAME);\n            if (skin.name.length === 0) {\n                skin.name = dragonBones.DataParser.DEFAULT_NAME;\n            }\n            if (dragonBones.DataParser.SLOT in rawData) {\n                var rawSlots = rawData[dragonBones.DataParser.SLOT];\n                this._skin = skin;\n                for (var _i = 0, rawSlots_2 = rawSlots; _i < rawSlots_2.length; _i++) {\n                    var rawSlot = rawSlots_2[_i];\n                    var slotName = ObjectDataParser._getString(rawSlot, dragonBones.DataParser.NAME, \"\");\n                    var slot = this._armature.getSlot(slotName);\n                    if (slot !== null) {\n                        this._slot = slot;\n                        if (dragonBones.DataParser.DISPLAY in rawSlot) {\n                            var rawDisplays = rawSlot[dragonBones.DataParser.DISPLAY];\n                            for (var _a = 0, rawDisplays_1 = rawDisplays; _a < rawDisplays_1.length; _a++) {\n                                var rawDisplay = rawDisplays_1[_a];\n                                if (rawDisplay) {\n                                    skin.addDisplay(slotName, this._parseDisplay(rawDisplay));\n                                }\n                                else {\n                                    skin.addDisplay(slotName, null);\n                                }\n                            }\n                        }\n                        this._slot = null; //\n                    }\n                }\n                this._skin = null; //\n            }\n            return skin;\n        };\n        ObjectDataParser.prototype._parseDisplay = function (rawData) {\n            var name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n            var path = ObjectDataParser._getString(rawData, dragonBones.DataParser.PATH, \"\");\n            var type = 0 /* Image */;\n            var display = null;\n            if (dragonBones.DataParser.TYPE in rawData && typeof rawData[dragonBones.DataParser.TYPE] === \"string\") {\n                type = dragonBones.DataParser._getDisplayType(rawData[dragonBones.DataParser.TYPE]);\n            }\n            else {\n                type = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.TYPE, type);\n            }\n            switch (type) {\n                case 0 /* Image */:\n                    var imageDisplay = display = dragonBones.BaseObject.borrowObject(dragonBones.ImageDisplayData);\n                    imageDisplay.name = name;\n                    imageDisplay.path = path.length > 0 ? path : name;\n                    this._parsePivot(rawData, imageDisplay);\n                    break;\n                case 1 /* Armature */:\n                    var armatureDisplay = display = dragonBones.BaseObject.borrowObject(dragonBones.ArmatureDisplayData);\n                    armatureDisplay.name = name;\n                    armatureDisplay.path = path.length > 0 ? path : name;\n                    armatureDisplay.inheritAnimation = true;\n                    if (dragonBones.DataParser.ACTIONS in rawData) {\n                        var actions = this._parseActionData(rawData[dragonBones.DataParser.ACTIONS], 0 /* Play */, null, null);\n                        for (var _i = 0, actions_5 = actions; _i < actions_5.length; _i++) {\n                            var action = actions_5[_i];\n                            armatureDisplay.addAction(action);\n                        }\n                    }\n                    else if (this._slot.name in this._slotChildActions) {\n                        var displays = this._skin.getDisplays(this._slot.name);\n                        if (displays === null ? this._slot.displayIndex === 0 : this._slot.displayIndex === displays.length) {\n                            for (var _a = 0, _b = this._slotChildActions[this._slot.name]; _a < _b.length; _a++) {\n                                var action = _b[_a];\n                                armatureDisplay.addAction(action);\n                            }\n                            delete this._slotChildActions[this._slot.name];\n                        }\n                    }\n                    break;\n                case 2 /* Mesh */:\n                    var meshDisplay = display = dragonBones.BaseObject.borrowObject(dragonBones.MeshDisplayData);\n                    meshDisplay.vertices.inheritDeform = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.INHERIT_DEFORM, true);\n                    meshDisplay.name = name;\n                    meshDisplay.path = path.length > 0 ? path : name;\n                    meshDisplay.vertices.data = this._data;\n                    if (dragonBones.DataParser.SHARE in rawData) {\n                        this._cacheRawMeshes.push(rawData);\n                        this._cacheMeshes.push(meshDisplay);\n                    }\n                    else {\n                        this._parseMesh(rawData, meshDisplay);\n                    }\n                    if ((dragonBones.DataParser.GLUE_WEIGHTS in rawData) && (dragonBones.DataParser.GLUE_MESHES in rawData)) {\n                        this._cacheRawMeshes.push(rawData);\n                        this._cacheMeshes.push(meshDisplay);\n                    }\n                    break;\n                case 3 /* BoundingBox */:\n                    var boundingBox = this._parseBoundingBox(rawData);\n                    if (boundingBox !== null) {\n                        var boundingBoxDisplay = display = dragonBones.BaseObject.borrowObject(dragonBones.BoundingBoxDisplayData);\n                        boundingBoxDisplay.name = name;\n                        boundingBoxDisplay.path = path.length > 0 ? path : name;\n                        boundingBoxDisplay.boundingBox = boundingBox;\n                    }\n                    break;\n                case 4 /* Path */:\n                    var rawCurveLengths = rawData[dragonBones.DataParser.LENGTHS];\n                    var pathDisplay = display = dragonBones.BaseObject.borrowObject(dragonBones.PathDisplayData);\n                    pathDisplay.closed = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.CLOSED, false);\n                    pathDisplay.constantSpeed = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.CONSTANT_SPEED, false);\n                    pathDisplay.name = name;\n                    pathDisplay.path = path.length > 0 ? path : name;\n                    pathDisplay.vertices.data = this._data;\n                    pathDisplay.curveLengths.length = rawCurveLengths.length;\n                    for (var i = 0, l = rawCurveLengths.length; i < l; ++i) {\n                        pathDisplay.curveLengths[i] = rawCurveLengths[i];\n                    }\n                    this._parsePath(rawData, pathDisplay);\n                    break;\n            }\n            if (display !== null && dragonBones.DataParser.TRANSFORM in rawData) {\n                this._parseTransform(rawData[dragonBones.DataParser.TRANSFORM], display.transform, this._armature.scale);\n            }\n            return display;\n        };\n        ObjectDataParser.prototype._parsePath = function (rawData, display) {\n            var rawVertices = rawData[dragonBones.DataParser.VERTICES];\n            var vertexCount = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.VERTEX_COUNT, 0); // uint\n            var vertexOffset = this._floatArray.length;\n            var pathOffset = this._intArray.length;\n            display.vertices.offset = pathOffset;\n            this._intArray.length += 1 + 1;\n            this._intArray[pathOffset + 0 /* PathVertexCount */] = vertexCount;\n            this._intArray[pathOffset + 2 /* PathFloatOffset */] = vertexOffset;\n            if (!(dragonBones.DataParser.WEIGHTS in rawData)) {\n                this._floatArray.length += rawVertices.length;\n                for (var i = 0, l = rawVertices.length; i < l; ++i) {\n                    this._floatArray[vertexOffset + i] = rawVertices[i];\n                }\n            }\n            else {\n                var rawWeights = rawData[dragonBones.DataParser.WEIGHTS];\n                var rawBones = rawData[dragonBones.DataParser.BONES];\n                var weightBoneCount = rawBones.length;\n                var weightCount = Math.floor(rawWeights.length - vertexCount) / 2; // uint\n                var weightOffset = this._intArray.length;\n                var floatOffset = this._floatArray.length;\n                var sortedBones = this._armature.sortedBones;\n                var weight = dragonBones.BaseObject.borrowObject(dragonBones.WeightData);\n                weight.count = weightCount;\n                weight.offset = weightOffset;\n                this._intArray.length += 1 + 1 + weightBoneCount + vertexCount + weightCount;\n                //\n                this._intArray[weightOffset + 0 /* WeigthBoneCount */] = weightBoneCount;\n                this._intArray[weightOffset + 1 /* WeigthFloatOffset */] = floatOffset;\n                for (var i = 0; i < weightBoneCount; i++) {\n                    var rawBoneIndex = rawBones[i];\n                    var bone = this._rawBones[rawBoneIndex];\n                    weight.addBone(bone);\n                    this._intArray[weightOffset + 2 /* WeigthBoneIndices */ + i] = sortedBones.indexOf(bone);\n                }\n                this._floatArray.length += weightCount * 3;\n                for (var i = 0, iW = 0, iV = 0, iB = weightOffset + 2 /* WeigthBoneIndices */ + weightBoneCount, iF = floatOffset; i < weightCount; i++) {\n                    var boneCount = rawWeights[iW++];\n                    this._intArray[iB++] = boneCount;\n                    for (var j = 0; j < boneCount; j++) {\n                        var boneIndex = rawWeights[iW++];\n                        var boneWeight = rawWeights[iW++];\n                        var x = rawVertices[iV++];\n                        var y = rawVertices[iV++];\n                        this._intArray[iB++] = rawBones.indexOf(boneIndex);\n                        this._floatArray[iF++] = boneWeight;\n                        this._floatArray[iF++] = x;\n                        this._floatArray[iF++] = y;\n                    }\n                }\n                display.vertices.weight = weight;\n            }\n        };\n        ObjectDataParser.prototype._parsePivot = function (rawData, display) {\n            if (dragonBones.DataParser.PIVOT in rawData) {\n                var rawPivot = rawData[dragonBones.DataParser.PIVOT];\n                display.pivot.x = ObjectDataParser._getNumber(rawPivot, dragonBones.DataParser.X, 0.0);\n                display.pivot.y = ObjectDataParser._getNumber(rawPivot, dragonBones.DataParser.Y, 0.0);\n            }\n            else {\n                display.pivot.x = 0.5;\n                display.pivot.y = 0.5;\n            }\n        };\n        ObjectDataParser.prototype._parseMesh = function (rawData, mesh) {\n            var rawVertices = rawData[dragonBones.DataParser.VERTICES];\n            var rawUVs = rawData[dragonBones.DataParser.UVS];\n            var rawTriangles = rawData[dragonBones.DataParser.TRIANGLES];\n            var vertexCount = Math.floor(rawVertices.length / 2); // uint\n            var triangleCount = Math.floor(rawTriangles.length / 3); // uint\n            var vertexOffset = this._floatArray.length;\n            var uvOffset = vertexOffset + vertexCount * 2;\n            var meshOffset = this._intArray.length;\n            var meshName = this._skin.name + \"_\" + this._slot.name + \"_\" + mesh.name; // Cache pose data.\n            mesh.vertices.offset = meshOffset;\n            this._intArray.length += 1 + 1 + 1 + 1 + triangleCount * 3;\n            this._intArray[meshOffset + 0 /* MeshVertexCount */] = vertexCount;\n            this._intArray[meshOffset + 1 /* MeshTriangleCount */] = triangleCount;\n            this._intArray[meshOffset + 2 /* MeshFloatOffset */] = vertexOffset;\n            for (var i = 0, l = triangleCount * 3; i < l; ++i) {\n                this._intArray[meshOffset + 4 /* MeshVertexIndices */ + i] = rawTriangles[i];\n            }\n            this._floatArray.length += vertexCount * 2 + vertexCount * 2;\n            for (var i = 0, l = vertexCount * 2; i < l; ++i) {\n                this._floatArray[vertexOffset + i] = rawVertices[i];\n                this._floatArray[uvOffset + i] = rawUVs[i];\n            }\n            if (dragonBones.DataParser.WEIGHTS in rawData) {\n                var rawWeights = rawData[dragonBones.DataParser.WEIGHTS];\n                var rawSlotPose = rawData[dragonBones.DataParser.SLOT_POSE];\n                var rawBonePoses = rawData[dragonBones.DataParser.BONE_POSE];\n                var sortedBones = this._armature.sortedBones;\n                var weightBoneIndices = new Array();\n                var weightBoneCount = Math.floor(rawBonePoses.length / 7); // uint\n                var floatOffset = this._floatArray.length;\n                var weightCount = Math.floor(rawWeights.length - vertexCount) / 2; // uint\n                var weightOffset = this._intArray.length;\n                var weight = dragonBones.BaseObject.borrowObject(dragonBones.WeightData);\n                weight.count = weightCount;\n                weight.offset = weightOffset;\n                weightBoneIndices.length = weightBoneCount;\n                this._intArray.length += 1 + 1 + weightBoneCount + vertexCount + weightCount;\n                this._intArray[weightOffset + 1 /* WeigthFloatOffset */] = floatOffset;\n                for (var i = 0; i < weightBoneCount; ++i) {\n                    var rawBoneIndex = rawBonePoses[i * 7]; // uint\n                    var bone = this._rawBones[rawBoneIndex];\n                    weight.addBone(bone);\n                    weightBoneIndices[i] = rawBoneIndex;\n                    this._intArray[weightOffset + 2 /* WeigthBoneIndices */ + i] = sortedBones.indexOf(bone);\n                }\n                this._floatArray.length += weightCount * 3;\n                this._helpMatrixA.copyFromArray(rawSlotPose, 0);\n                for (var i = 0, iW = 0, iB = weightOffset + 2 /* WeigthBoneIndices */ + weightBoneCount, iV = floatOffset; i < vertexCount; ++i) {\n                    var iD = i * 2;\n                    var vertexBoneCount = this._intArray[iB++] = rawWeights[iW++]; // uint\n                    var x = this._floatArray[vertexOffset + iD];\n                    var y = this._floatArray[vertexOffset + iD + 1];\n                    this._helpMatrixA.transformPoint(x, y, this._helpPoint);\n                    x = this._helpPoint.x;\n                    y = this._helpPoint.y;\n                    for (var j = 0; j < vertexBoneCount; ++j) {\n                        var rawBoneIndex = rawWeights[iW++]; // uint\n                        var boneIndex = weightBoneIndices.indexOf(rawBoneIndex);\n                        this._helpMatrixB.copyFromArray(rawBonePoses, boneIndex * 7 + 1);\n                        this._helpMatrixB.invert();\n                        this._helpMatrixB.transformPoint(x, y, this._helpPoint);\n                        this._intArray[iB++] = boneIndex;\n                        this._floatArray[iV++] = rawWeights[iW++];\n                        this._floatArray[iV++] = this._helpPoint.x;\n                        this._floatArray[iV++] = this._helpPoint.y;\n                    }\n                }\n                mesh.vertices.weight = weight;\n                this._weightSlotPose[meshName] = rawSlotPose;\n                this._weightBonePoses[meshName] = rawBonePoses;\n            }\n        };\n        ObjectDataParser.prototype._parseMeshGlue = function (rawData, mesh) {\n            rawData;\n            mesh;\n            // const rawWeights = rawData[DataParser.GLUE_WEIGHTS] as Array<number>;\n            // const rawMeshes = rawData[DataParser.GLUE_MESHES] as Array<string>;\n            // mesh.glue = BaseObject.borrowObject(GlueData);\n            // mesh.glue.weights.length = rawWeights.length;\n            // for (let i = 0, l = rawWeights.length; i < l; ++i) {\n            //     mesh.glue.weights[i] = rawWeights[i];\n            // }\n            // for (let i = 0, l = rawMeshes.length; i < l; i += 3) {\n            //     const glueMesh = this._armature.getMesh(rawMeshes[i], rawMeshes[i + 1], rawMeshes[i + 2]);\n            //     mesh.glue.addMesh(glueMesh);\n            // }\n        };\n        ObjectDataParser.prototype._parseBoundingBox = function (rawData) {\n            var boundingBox = null;\n            var type = 0 /* Rectangle */;\n            if (dragonBones.DataParser.SUB_TYPE in rawData && typeof rawData[dragonBones.DataParser.SUB_TYPE] === \"string\") {\n                type = dragonBones.DataParser._getBoundingBoxType(rawData[dragonBones.DataParser.SUB_TYPE]);\n            }\n            else {\n                type = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SUB_TYPE, type);\n            }\n            switch (type) {\n                case 0 /* Rectangle */:\n                    boundingBox = dragonBones.BaseObject.borrowObject(dragonBones.RectangleBoundingBoxData);\n                    break;\n                case 1 /* Ellipse */:\n                    boundingBox = dragonBones.BaseObject.borrowObject(dragonBones.EllipseBoundingBoxData);\n                    break;\n                case 2 /* Polygon */:\n                    boundingBox = this._parsePolygonBoundingBox(rawData);\n                    break;\n            }\n            if (boundingBox !== null) {\n                boundingBox.color = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.COLOR, 0x000000);\n                if (boundingBox.type === 0 /* Rectangle */ || boundingBox.type === 1 /* Ellipse */) {\n                    boundingBox.width = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.WIDTH, 0.0);\n                    boundingBox.height = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.HEIGHT, 0.0);\n                }\n            }\n            return boundingBox;\n        };\n        ObjectDataParser.prototype._parsePolygonBoundingBox = function (rawData) {\n            var polygonBoundingBox = dragonBones.BaseObject.borrowObject(dragonBones.PolygonBoundingBoxData);\n            if (dragonBones.DataParser.VERTICES in rawData) {\n                var scale = this._armature.scale;\n                var rawVertices = rawData[dragonBones.DataParser.VERTICES];\n                var vertices = polygonBoundingBox.vertices;\n                if (dragonBones.DragonBones.webAssembly) {\n                    vertices.resize(rawVertices.length, 0.0);\n                }\n                else {\n                    vertices.length = rawVertices.length;\n                }\n                for (var i = 0, l = rawVertices.length; i < l; i += 2) {\n                    var x = rawVertices[i] * scale;\n                    var y = rawVertices[i + 1] * scale;\n                    if (dragonBones.DragonBones.webAssembly) {\n                        vertices.set(i, x);\n                        vertices.set(i + 1, y);\n                    }\n                    else {\n                        vertices[i] = x;\n                        vertices[i + 1] = y;\n                    }\n                    // AABB.\n                    if (i === 0) {\n                        polygonBoundingBox.x = x;\n                        polygonBoundingBox.y = y;\n                        polygonBoundingBox.width = x;\n                        polygonBoundingBox.height = y;\n                    }\n                    else {\n                        if (x < polygonBoundingBox.x) {\n                            polygonBoundingBox.x = x;\n                        }\n                        else if (x > polygonBoundingBox.width) {\n                            polygonBoundingBox.width = x;\n                        }\n                        if (y < polygonBoundingBox.y) {\n                            polygonBoundingBox.y = y;\n                        }\n                        else if (y > polygonBoundingBox.height) {\n                            polygonBoundingBox.height = y;\n                        }\n                    }\n                }\n                polygonBoundingBox.width -= polygonBoundingBox.x;\n                polygonBoundingBox.height -= polygonBoundingBox.y;\n            }\n            else {\n                console.warn(\"Data error.\\n Please reexport DragonBones Data to fixed the bug.\");\n            }\n            return polygonBoundingBox;\n        };\n        ObjectDataParser.prototype._parseAnimation = function (rawData) {\n            var animation = dragonBones.BaseObject.borrowObject(dragonBones.AnimationData);\n            animation.frameCount = Math.max(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.DURATION, 1), 1);\n            animation.playTimes = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.PLAY_TIMES, 1);\n            animation.duration = animation.frameCount / this._armature.frameRate; // float\n            animation.fadeInTime = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.FADE_IN_TIME, 0.0);\n            animation.scale = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SCALE, 1.0);\n            animation.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, dragonBones.DataParser.DEFAULT_NAME);\n            if (animation.name.length === 0) {\n                animation.name = dragonBones.DataParser.DEFAULT_NAME;\n            }\n            animation.frameIntOffset = this._frameIntArray.length;\n            animation.frameFloatOffset = this._frameFloatArray.length;\n            animation.frameOffset = this._frameArray.length;\n            this._animation = animation;\n            if (dragonBones.DataParser.FRAME in rawData) {\n                var rawFrames = rawData[dragonBones.DataParser.FRAME];\n                var keyFrameCount = rawFrames.length;\n                if (keyFrameCount > 0) {\n                    for (var i = 0, frameStart = 0; i < keyFrameCount; ++i) {\n                        var rawFrame = rawFrames[i];\n                        this._parseActionDataInFrame(rawFrame, frameStart, null, null);\n                        frameStart += ObjectDataParser._getNumber(rawFrame, dragonBones.DataParser.DURATION, 1);\n                    }\n                }\n            }\n            if (dragonBones.DataParser.Z_ORDER in rawData) {\n                this._animation.zOrderTimeline = this._parseTimeline(rawData[dragonBones.DataParser.Z_ORDER], null, dragonBones.DataParser.FRAME, 1 /* ZOrder */, false, false, 0, this._parseZOrderFrame);\n            }\n            if (dragonBones.DataParser.BONE in rawData) {\n                var rawTimelines = rawData[dragonBones.DataParser.BONE];\n                for (var _i = 0, rawTimelines_1 = rawTimelines; _i < rawTimelines_1.length; _i++) {\n                    var rawTimeline = rawTimelines_1[_i];\n                    this._parseBoneTimeline(rawTimeline);\n                }\n            }\n            if (dragonBones.DataParser.SURFACE in rawData) {\n                var rawTimelines = rawData[dragonBones.DataParser.SURFACE];\n                for (var _a = 0, rawTimelines_2 = rawTimelines; _a < rawTimelines_2.length; _a++) {\n                    var rawTimeline = rawTimelines_2[_a];\n                    var surfaceName = ObjectDataParser._getString(rawTimeline, dragonBones.DataParser.NAME, \"\");\n                    this._surface = this._armature.getBone(surfaceName);\n                    if (this._surface === null) {\n                        continue;\n                    }\n                    var timeline = this._parseTimeline(rawTimeline, null, dragonBones.DataParser.FRAME, 50 /* Surface */, false, true, 0, this._parseSurfaceFrame);\n                    if (timeline !== null) {\n                        this._animation.addSurfaceTimeline(this._surface, timeline);\n                    }\n                    this._surface = null; //\n                }\n            }\n            if (dragonBones.DataParser.SLOT in rawData) {\n                var rawTimelines = rawData[dragonBones.DataParser.SLOT];\n                for (var _b = 0, rawTimelines_3 = rawTimelines; _b < rawTimelines_3.length; _b++) {\n                    var rawTimeline = rawTimelines_3[_b];\n                    this._parseSlotTimeline(rawTimeline);\n                }\n            }\n            if (dragonBones.DataParser.FFD in rawData) {\n                var rawTimelines = rawData[dragonBones.DataParser.FFD];\n                for (var _c = 0, rawTimelines_4 = rawTimelines; _c < rawTimelines_4.length; _c++) {\n                    var rawTimeline = rawTimelines_4[_c];\n                    var skinName = ObjectDataParser._getString(rawTimeline, dragonBones.DataParser.SKIN, dragonBones.DataParser.DEFAULT_NAME);\n                    var slotName = ObjectDataParser._getString(rawTimeline, dragonBones.DataParser.SLOT, \"\");\n                    var displayName = ObjectDataParser._getString(rawTimeline, dragonBones.DataParser.NAME, \"\");\n                    if (skinName.length === 0) { //\n                        skinName = dragonBones.DataParser.DEFAULT_NAME;\n                    }\n                    this._slot = this._armature.getSlot(slotName);\n                    this._mesh = this._armature.getMesh(skinName, slotName, displayName);\n                    if (this._slot === null || this._mesh === null) {\n                        continue;\n                    }\n                    var timeline = this._parseTimeline(rawTimeline, null, dragonBones.DataParser.FRAME, 22 /* SlotDeform */, false, true, 0, this._parseSlotFFDFrame);\n                    if (timeline !== null) {\n                        this._animation.addSlotTimeline(this._slot, timeline);\n                    }\n                    this._slot = null; //\n                    this._mesh = null; //\n                }\n            }\n            if (dragonBones.DataParser.IK in rawData) {\n                var rawTimelines = rawData[dragonBones.DataParser.IK];\n                for (var _d = 0, rawTimelines_5 = rawTimelines; _d < rawTimelines_5.length; _d++) {\n                    var rawTimeline = rawTimelines_5[_d];\n                    var constraintName = ObjectDataParser._getString(rawTimeline, dragonBones.DataParser.NAME, \"\");\n                    var constraint = this._armature.getConstraint(constraintName);\n                    if (constraint === null) {\n                        continue;\n                    }\n                    var timeline = this._parseTimeline(rawTimeline, null, dragonBones.DataParser.FRAME, 30 /* IKConstraint */, true, false, 2, this._parseIKConstraintFrame);\n                    if (timeline !== null) {\n                        this._animation.addConstraintTimeline(constraint, timeline);\n                    }\n                }\n            }\n            if (dragonBones.DataParser.ANIMATION in rawData) {\n                var rawTimelines = rawData[dragonBones.DataParser.ANIMATION];\n                for (var _e = 0, rawTimelines_6 = rawTimelines; _e < rawTimelines_6.length; _e++) {\n                    var rawTimeline = rawTimelines_6[_e];\n                    var animationName = ObjectDataParser._getString(rawTimeline, dragonBones.DataParser.NAME, \"\");\n                    var timeline = this._parseTimeline(rawTimeline, null, dragonBones.DataParser.FRAME, 40 /* AnimationTime */, true, false, 2, this._parseAnimationFrame);\n                    if (timeline !== null) {\n                        this._animation.addAnimationTimeline(animationName, timeline);\n                    }\n                }\n            }\n            if (this._actionFrames.length > 0) {\n                this._animation.actionTimeline = this._parseTimeline(null, this._actionFrames, \"\", 0 /* Action */, false, false, 0, this._parseActionFrame);\n                this._actionFrames.length = 0;\n            }\n            this._animation = null; //\n            return animation;\n        };\n        ObjectDataParser.prototype._parseTimeline = function (rawData, rawFrames, framesKey, type, addIntOffset, addFloatOffset, frameValueCount, frameParser) {\n            if (rawData !== null && framesKey.length > 0 && framesKey in rawData) {\n                rawFrames = rawData[framesKey];\n            }\n            if (rawFrames === null) {\n                return null;\n            }\n            var keyFrameCount = rawFrames.length;\n            if (keyFrameCount === 0) {\n                return null;\n            }\n            var frameIntArrayLength = this._frameIntArray.length;\n            var frameFloatArrayLength = this._frameFloatArray.length;\n            var timeline = dragonBones.BaseObject.borrowObject(dragonBones.TimelineData);\n            var timelineOffset = this._timelineArray.length;\n            this._timelineArray.length += 1 + 1 + 1 + 1 + 1 + keyFrameCount;\n            if (rawData !== null) {\n                this._timelineArray[timelineOffset + 0 /* TimelineScale */] = Math.round(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SCALE, 1.0) * 100);\n                this._timelineArray[timelineOffset + 1 /* TimelineOffset */] = Math.round(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.OFFSET, 0.0) * 100);\n            }\n            else {\n                this._timelineArray[timelineOffset + 0 /* TimelineScale */] = 100;\n                this._timelineArray[timelineOffset + 1 /* TimelineOffset */] = 0;\n            }\n            this._timelineArray[timelineOffset + 2 /* TimelineKeyFrameCount */] = keyFrameCount;\n            this._timelineArray[timelineOffset + 3 /* TimelineFrameValueCount */] = frameValueCount;\n            if (addIntOffset) {\n                this._timelineArray[timelineOffset + 4 /* TimelineFrameValueOffset */] = frameIntArrayLength - this._animation.frameIntOffset;\n            }\n            else if (addFloatOffset) {\n                this._timelineArray[timelineOffset + 4 /* TimelineFrameValueOffset */] = frameFloatArrayLength - this._animation.frameFloatOffset;\n            }\n            else {\n                this._timelineArray[timelineOffset + 4 /* TimelineFrameValueOffset */] = 0;\n            }\n            this._timeline = timeline;\n            timeline.type = type;\n            timeline.offset = timelineOffset;\n            if (keyFrameCount === 1) { // Only one frame.\n                timeline.frameIndicesOffset = -1;\n                this._timelineArray[timelineOffset + 5 /* TimelineFrameOffset */ + 0] = frameParser.call(this, rawFrames[0], 0, 0) - this._animation.frameOffset;\n            }\n            else {\n                var totalFrameCount = this._animation.frameCount + 1; // One more frame than animation.\n                var frameIndices = this._data.frameIndices;\n                var frameIndicesOffset = 0;\n                if (dragonBones.DragonBones.webAssembly) {\n                    frameIndicesOffset = frameIndices.size();\n                    frameIndices.resize(frameIndicesOffset + totalFrameCount, 0);\n                }\n                else {\n                    frameIndicesOffset = frameIndices.length;\n                    frameIndices.length += totalFrameCount;\n                }\n                timeline.frameIndicesOffset = frameIndicesOffset;\n                for (var i = 0, iK = 0, frameStart = 0, frameCount = 0; i < totalFrameCount; ++i) {\n                    if (frameStart + frameCount <= i && iK < keyFrameCount) {\n                        var rawFrame = rawFrames[iK];\n                        frameStart = i; // frame.frameStart;\n                        if (iK === keyFrameCount - 1) {\n                            frameCount = this._animation.frameCount - frameStart;\n                        }\n                        else {\n                            if (rawFrame instanceof ActionFrame) {\n                                frameCount = this._actionFrames[iK + 1].frameStart - frameStart;\n                            }\n                            else {\n                                frameCount = ObjectDataParser._getNumber(rawFrame, dragonBones.DataParser.DURATION, 1);\n                            }\n                        }\n                        this._timelineArray[timelineOffset + 5 /* TimelineFrameOffset */ + iK] = frameParser.call(this, rawFrame, frameStart, frameCount) - this._animation.frameOffset;\n                        iK++;\n                    }\n                    if (dragonBones.DragonBones.webAssembly) {\n                        frameIndices.set(frameIndicesOffset + i, iK - 1);\n                    }\n                    else {\n                        frameIndices[frameIndicesOffset + i] = iK - 1;\n                    }\n                }\n            }\n            this._timeline = null; //\n            return timeline;\n        };\n        ObjectDataParser.prototype._parseBoneTimeline = function (rawData) {\n            var bone = this._armature.getBone(ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\"));\n            if (bone === null) {\n                return;\n            }\n            this._bone = bone;\n            this._slot = this._armature.getSlot(this._bone.name);\n            if (dragonBones.DataParser.TRANSLATE_FRAME in rawData) {\n                var timeline = this._parseTimeline(rawData, null, dragonBones.DataParser.TRANSLATE_FRAME, 11 /* BoneTranslate */, false, true, 2, this._parseBoneTranslateFrame);\n                if (timeline !== null) {\n                    this._animation.addBoneTimeline(bone, timeline);\n                }\n            }\n            if (dragonBones.DataParser.ROTATE_FRAME in rawData) {\n                var timeline = this._parseTimeline(rawData, null, dragonBones.DataParser.ROTATE_FRAME, 12 /* BoneRotate */, false, true, 2, this._parseBoneRotateFrame);\n                if (timeline !== null) {\n                    this._animation.addBoneTimeline(bone, timeline);\n                }\n            }\n            if (dragonBones.DataParser.SCALE_FRAME in rawData) {\n                var timeline = this._parseTimeline(rawData, null, dragonBones.DataParser.SCALE_FRAME, 13 /* BoneScale */, false, true, 2, this._parseBoneScaleFrame);\n                if (timeline !== null) {\n                    this._animation.addBoneTimeline(bone, timeline);\n                }\n            }\n            if (dragonBones.DataParser.FRAME in rawData) {\n                var timeline = this._parseTimeline(rawData, null, dragonBones.DataParser.FRAME, 10 /* BoneAll */, false, true, 6, this._parseBoneAllFrame);\n                if (timeline !== null) {\n                    this._animation.addBoneTimeline(bone, timeline);\n                }\n            }\n            this._bone = null; //\n            this._slot = null; //\n        };\n        ObjectDataParser.prototype._parseSlotTimeline = function (rawData) {\n            var slot = this._armature.getSlot(ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\"));\n            if (slot === null) {\n                return;\n            }\n            this._slot = slot;\n            // Display timeline.\n            var displayTimeline = null;\n            if (dragonBones.DataParser.DISPLAY_FRAME in rawData) {\n                displayTimeline = this._parseTimeline(rawData, null, dragonBones.DataParser.DISPLAY_FRAME, 20 /* SlotDisplay */, false, false, 0, this._parseSlotDisplayFrame);\n            }\n            else {\n                displayTimeline = this._parseTimeline(rawData, null, dragonBones.DataParser.FRAME, 20 /* SlotDisplay */, false, false, 0, this._parseSlotDisplayFrame);\n            }\n            if (displayTimeline !== null) {\n                this._animation.addSlotTimeline(slot, displayTimeline);\n            }\n            var colorTimeline = null;\n            if (dragonBones.DataParser.COLOR_FRAME in rawData) {\n                colorTimeline = this._parseTimeline(rawData, null, dragonBones.DataParser.COLOR_FRAME, 21 /* SlotColor */, true, false, 1, this._parseSlotColorFrame);\n            }\n            else {\n                colorTimeline = this._parseTimeline(rawData, null, dragonBones.DataParser.FRAME, 21 /* SlotColor */, true, false, 1, this._parseSlotColorFrame);\n            }\n            if (colorTimeline !== null) {\n                this._animation.addSlotTimeline(slot, colorTimeline);\n            }\n            this._slot = null; //\n        };\n        ObjectDataParser.prototype._parseFrame = function (rawData, frameStart, frameCount) {\n            // tslint:disable-next-line:no-unused-expression\n            rawData;\n            // tslint:disable-next-line:no-unused-expression\n            frameCount;\n            var frameOffset = this._frameArray.length;\n            this._frameArray.length += 1;\n            this._frameArray[frameOffset + 0 /* FramePosition */] = frameStart;\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseTweenFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseFrame(rawData, frameStart, frameCount);\n            if (frameCount > 0) {\n                if (dragonBones.DataParser.CURVE in rawData) {\n                    var sampleCount = frameCount + 1;\n                    this._helpArray.length = sampleCount;\n                    this._samplingEasingCurve(rawData[dragonBones.DataParser.CURVE], this._helpArray);\n                    this._frameArray.length += 1 + 1 + this._helpArray.length;\n                    this._frameArray[frameOffset + 1 /* FrameTweenType */] = 2 /* Curve */;\n                    this._frameArray[frameOffset + 2 /* FrameTweenEasingOrCurveSampleCount */] = sampleCount;\n                    for (var i = 0; i < sampleCount; ++i) {\n                        this._frameArray[frameOffset + 3 /* FrameCurveSamples */ + i] = Math.round(this._helpArray[i] * 10000.0);\n                    }\n                }\n                else {\n                    var noTween = -2.0;\n                    var tweenEasing = noTween;\n                    if (dragonBones.DataParser.TWEEN_EASING in rawData) {\n                        tweenEasing = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.TWEEN_EASING, noTween);\n                    }\n                    if (tweenEasing === noTween) {\n                        this._frameArray.length += 1;\n                        this._frameArray[frameOffset + 1 /* FrameTweenType */] = 0 /* None */;\n                    }\n                    else if (tweenEasing === 0.0) {\n                        this._frameArray.length += 1;\n                        this._frameArray[frameOffset + 1 /* FrameTweenType */] = 1 /* Line */;\n                    }\n                    else if (tweenEasing < 0.0) {\n                        this._frameArray.length += 1 + 1;\n                        this._frameArray[frameOffset + 1 /* FrameTweenType */] = 3 /* QuadIn */;\n                        this._frameArray[frameOffset + 2 /* FrameTweenEasingOrCurveSampleCount */] = Math.round(-tweenEasing * 100.0);\n                    }\n                    else if (tweenEasing <= 1.0) {\n                        this._frameArray.length += 1 + 1;\n                        this._frameArray[frameOffset + 1 /* FrameTweenType */] = 4 /* QuadOut */;\n                        this._frameArray[frameOffset + 2 /* FrameTweenEasingOrCurveSampleCount */] = Math.round(tweenEasing * 100.0);\n                    }\n                    else {\n                        this._frameArray.length += 1 + 1;\n                        this._frameArray[frameOffset + 1 /* FrameTweenType */] = 5 /* QuadInOut */;\n                        this._frameArray[frameOffset + 2 /* FrameTweenEasingOrCurveSampleCount */] = Math.round(tweenEasing * 100.0 - 100.0);\n                    }\n                }\n            }\n            else {\n                this._frameArray.length += 1;\n                this._frameArray[frameOffset + 1 /* FrameTweenType */] = 0 /* None */;\n            }\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseActionFrame = function (frame, frameStart, frameCount) {\n            // tslint:disable-next-line:no-unused-expression\n            frameCount;\n            var frameOffset = this._frameArray.length;\n            var actionCount = frame.actions.length;\n            this._frameArray.length += 1 + 1 + actionCount;\n            this._frameArray[frameOffset + 0 /* FramePosition */] = frameStart;\n            this._frameArray[frameOffset + 0 /* FramePosition */ + 1] = actionCount; // Action count.\n            for (var i = 0; i < actionCount; ++i) { // Action offsets.\n                this._frameArray[frameOffset + 0 /* FramePosition */ + 2 + i] = frame.actions[i];\n            }\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseZOrderFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseFrame(rawData, frameStart, frameCount);\n            if (dragonBones.DataParser.Z_ORDER in rawData) {\n                var rawZOrder = rawData[dragonBones.DataParser.Z_ORDER];\n                if (rawZOrder.length > 0) {\n                    var slotCount = this._armature.sortedSlots.length;\n                    var unchanged = new Array(slotCount - rawZOrder.length / 2);\n                    var zOrders = new Array(slotCount);\n                    for (var i_1 = 0; i_1 < unchanged.length; ++i_1) {\n                        unchanged[i_1] = 0;\n                    }\n                    for (var i_2 = 0; i_2 < slotCount; ++i_2) {\n                        zOrders[i_2] = -1;\n                    }\n                    var originalIndex = 0;\n                    var unchangedIndex = 0;\n                    for (var i_3 = 0, l = rawZOrder.length; i_3 < l; i_3 += 2) {\n                        var slotIndex = rawZOrder[i_3];\n                        var zOrderOffset = rawZOrder[i_3 + 1];\n                        while (originalIndex !== slotIndex) {\n                            unchanged[unchangedIndex++] = originalIndex++;\n                        }\n                        var index = originalIndex + zOrderOffset;\n                        zOrders[index] = originalIndex++;\n                    }\n                    while (originalIndex < slotCount) {\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    }\n                    this._frameArray.length += 1 + slotCount;\n                    this._frameArray[frameOffset + 1] = slotCount;\n                    var i = slotCount;\n                    while (i--) {\n                        if (zOrders[i] === -1) {\n                            this._frameArray[frameOffset + 2 + i] = unchanged[--unchangedIndex] || 0;\n                        }\n                        else {\n                            this._frameArray[frameOffset + 2 + i] = zOrders[i] || 0;\n                        }\n                    }\n                    return frameOffset;\n                }\n            }\n            this._frameArray.length += 1;\n            this._frameArray[frameOffset + 1] = 0;\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseBoneAllFrame = function (rawData, frameStart, frameCount) {\n            this._helpTransform.identity();\n            if (dragonBones.DataParser.TRANSFORM in rawData) {\n                this._parseTransform(rawData[dragonBones.DataParser.TRANSFORM], this._helpTransform, 1.0);\n            }\n            // Modify rotation.\n            var rotation = this._helpTransform.rotation;\n            if (frameStart !== 0) {\n                if (this._prevClockwise === 0) {\n                    rotation = this._prevRotation + dragonBones.Transform.normalizeRadian(rotation - this._prevRotation);\n                }\n                else {\n                    if (this._prevClockwise > 0 ? rotation >= this._prevRotation : rotation <= this._prevRotation) {\n                        this._prevClockwise = this._prevClockwise > 0 ? this._prevClockwise - 1 : this._prevClockwise + 1;\n                    }\n                    rotation = this._prevRotation + rotation - this._prevRotation + dragonBones.Transform.PI_D * this._prevClockwise;\n                }\n            }\n            this._prevClockwise = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.TWEEN_ROTATE, 0.0);\n            this._prevRotation = rotation;\n            //\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var frameFloatOffset = this._frameFloatArray.length;\n            this._frameFloatArray.length += 6;\n            this._frameFloatArray[frameFloatOffset++] = this._helpTransform.x;\n            this._frameFloatArray[frameFloatOffset++] = this._helpTransform.y;\n            this._frameFloatArray[frameFloatOffset++] = rotation;\n            this._frameFloatArray[frameFloatOffset++] = this._helpTransform.skew;\n            this._frameFloatArray[frameFloatOffset++] = this._helpTransform.scaleX;\n            this._frameFloatArray[frameFloatOffset++] = this._helpTransform.scaleY;\n            this._parseActionDataInFrame(rawData, frameStart, this._bone, this._slot);\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseBoneTranslateFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var frameFloatOffset = this._frameFloatArray.length;\n            this._frameFloatArray.length += 2;\n            this._frameFloatArray[frameFloatOffset++] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.X, 0.0);\n            this._frameFloatArray[frameFloatOffset++] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.Y, 0.0);\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseBoneRotateFrame = function (rawData, frameStart, frameCount) {\n            // Modify rotation.\n            var rotation = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.ROTATE, 0.0) * dragonBones.Transform.DEG_RAD;\n            if (frameStart !== 0) {\n                if (this._prevClockwise === 0) {\n                    rotation = this._prevRotation + dragonBones.Transform.normalizeRadian(rotation - this._prevRotation);\n                }\n                else {\n                    if (this._prevClockwise > 0 ? rotation >= this._prevRotation : rotation <= this._prevRotation) {\n                        this._prevClockwise = this._prevClockwise > 0 ? this._prevClockwise - 1 : this._prevClockwise + 1;\n                    }\n                    rotation = this._prevRotation + rotation - this._prevRotation + dragonBones.Transform.PI_D * this._prevClockwise;\n                }\n            }\n            this._prevClockwise = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.CLOCK_WISE, 0);\n            this._prevRotation = rotation;\n            //\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var frameFloatOffset = this._frameFloatArray.length;\n            this._frameFloatArray.length += 2;\n            this._frameFloatArray[frameFloatOffset++] = rotation;\n            this._frameFloatArray[frameFloatOffset++] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SKEW, 0.0) * dragonBones.Transform.DEG_RAD;\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseBoneScaleFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var frameFloatOffset = this._frameFloatArray.length;\n            this._frameFloatArray.length += 2;\n            this._frameFloatArray[frameFloatOffset++] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.X, 1.0);\n            this._frameFloatArray[frameFloatOffset++] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.Y, 1.0);\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseSurfaceFrame = function (rawData, frameStart, frameCount) {\n            var frameFloatOffset = this._frameFloatArray.length;\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var rawVertices = rawData[dragonBones.DataParser.VERTICES];\n            var offset = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.OFFSET, 0); // uint\n            var vertexCount = this._surface.vertices.length / 2; // uint\n            var x = 0.0;\n            var y = 0.0;\n            this._frameFloatArray.length += vertexCount * 2;\n            for (var i = 0; i < vertexCount * 2; i += 2) {\n                if (i < offset || i - offset >= rawVertices.length) {\n                    x = 0.0;\n                }\n                else {\n                    x = rawVertices[i - offset];\n                }\n                if (i + 1 < offset || i + 1 - offset >= rawVertices.length) {\n                    y = 0.0;\n                }\n                else {\n                    y = rawVertices[i + 1 - offset];\n                }\n                this._frameFloatArray[frameFloatOffset + i] = x;\n                this._frameFloatArray[frameFloatOffset + i + 1] = y;\n            }\n            if (frameStart === 0) {\n                var frameIntOffset = this._frameIntArray.length;\n                this._frameIntArray.length += 1 + 1 + 1 + 1 + 1;\n                this._frameIntArray[frameIntOffset + 0 /* DeformVertexOffset */] = 0; // \n                this._frameIntArray[frameIntOffset + 1 /* DeformCount */] = this._frameFloatArray.length - frameFloatOffset;\n                this._frameIntArray[frameIntOffset + 2 /* DeformValueCount */] = this._frameFloatArray.length - frameFloatOffset;\n                this._frameIntArray[frameIntOffset + 3 /* DeformValueOffset */] = 0;\n                this._frameIntArray[frameIntOffset + 4 /* DeformFloatOffset */] = frameFloatOffset - this._animation.frameFloatOffset;\n                this._timelineArray[this._timeline.offset + 3 /* TimelineFrameValueCount */] = frameIntOffset - this._animation.frameIntOffset;\n            }\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseSlotDisplayFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseFrame(rawData, frameStart, frameCount);\n            this._frameArray.length += 1;\n            if (dragonBones.DataParser.VALUE in rawData) {\n                this._frameArray[frameOffset + 1] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.VALUE, 0);\n            }\n            else {\n                this._frameArray[frameOffset + 1] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.DISPLAY_INDEX, 0);\n            }\n            this._parseActionDataInFrame(rawData, frameStart, this._slot.parent, this._slot);\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseSlotColorFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var colorOffset = -1;\n            if (dragonBones.DataParser.VALUE in rawData || dragonBones.DataParser.COLOR in rawData) {\n                var rawColor = dragonBones.DataParser.VALUE in rawData ? rawData[dragonBones.DataParser.VALUE] : rawData[dragonBones.DataParser.COLOR];\n                for (var k in rawColor) { // Detects the presence of color.\n                    // tslint:disable-next-line:no-unused-expression\n                    k;\n                    this._parseColorTransform(rawColor, this._helpColorTransform);\n                    colorOffset = this._intArray.length;\n                    this._intArray.length += 8;\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.alphaMultiplier * 100);\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.redMultiplier * 100);\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.greenMultiplier * 100);\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.blueMultiplier * 100);\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.alphaOffset);\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.redOffset);\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.greenOffset);\n                    this._intArray[colorOffset++] = Math.round(this._helpColorTransform.blueOffset);\n                    colorOffset -= 8;\n                    break;\n                }\n            }\n            if (colorOffset < 0) {\n                if (this._defaultColorOffset < 0) {\n                    this._defaultColorOffset = colorOffset = this._intArray.length;\n                    this._intArray.length += 8;\n                    this._intArray[colorOffset++] = 100;\n                    this._intArray[colorOffset++] = 100;\n                    this._intArray[colorOffset++] = 100;\n                    this._intArray[colorOffset++] = 100;\n                    this._intArray[colorOffset++] = 0;\n                    this._intArray[colorOffset++] = 0;\n                    this._intArray[colorOffset++] = 0;\n                    this._intArray[colorOffset++] = 0;\n                }\n                colorOffset = this._defaultColorOffset;\n            }\n            var frameIntOffset = this._frameIntArray.length;\n            this._frameIntArray.length += 1;\n            this._frameIntArray[frameIntOffset] = colorOffset;\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseSlotFFDFrame = function (rawData, frameStart, frameCount) {\n            var frameFloatOffset = this._frameFloatArray.length;\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var rawVertices = dragonBones.DataParser.VERTICES in rawData ? rawData[dragonBones.DataParser.VERTICES] : null;\n            var offset = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.OFFSET, 0); // uint\n            var vertexCount = this._intArray[this._mesh.vertices.offset + 0 /* MeshVertexCount */];\n            var meshName = this._mesh.parent.name + \"_\" + this._slot.name + \"_\" + this._mesh.name;\n            var weight = this._mesh.vertices.weight;\n            var x = 0.0;\n            var y = 0.0;\n            var iB = 0;\n            var iV = 0;\n            if (weight !== null) {\n                var rawSlotPose = this._weightSlotPose[meshName];\n                this._helpMatrixA.copyFromArray(rawSlotPose, 0);\n                this._frameFloatArray.length += weight.count * 2;\n                iB = weight.offset + 2 /* WeigthBoneIndices */ + weight.bones.length;\n            }\n            else {\n                this._frameFloatArray.length += vertexCount * 2;\n            }\n            for (var i = 0; i < vertexCount * 2; i += 2) {\n                if (rawVertices === null) { // Fill 0.\n                    x = 0.0;\n                    y = 0.0;\n                }\n                else {\n                    if (i < offset || i - offset >= rawVertices.length) {\n                        x = 0.0;\n                    }\n                    else {\n                        x = rawVertices[i - offset];\n                    }\n                    if (i + 1 < offset || i + 1 - offset >= rawVertices.length) {\n                        y = 0.0;\n                    }\n                    else {\n                        y = rawVertices[i + 1 - offset];\n                    }\n                }\n                if (weight !== null) { // If mesh is skinned, transform point by bone bind pose.\n                    var rawBonePoses = this._weightBonePoses[meshName];\n                    var vertexBoneCount = this._intArray[iB++];\n                    this._helpMatrixA.transformPoint(x, y, this._helpPoint, true);\n                    x = this._helpPoint.x;\n                    y = this._helpPoint.y;\n                    for (var j = 0; j < vertexBoneCount; ++j) {\n                        var boneIndex = this._intArray[iB++];\n                        this._helpMatrixB.copyFromArray(rawBonePoses, boneIndex * 7 + 1);\n                        this._helpMatrixB.invert();\n                        this._helpMatrixB.transformPoint(x, y, this._helpPoint, true);\n                        this._frameFloatArray[frameFloatOffset + iV++] = this._helpPoint.x;\n                        this._frameFloatArray[frameFloatOffset + iV++] = this._helpPoint.y;\n                    }\n                }\n                else {\n                    this._frameFloatArray[frameFloatOffset + i] = x;\n                    this._frameFloatArray[frameFloatOffset + i + 1] = y;\n                }\n            }\n            if (frameStart === 0) {\n                var frameIntOffset = this._frameIntArray.length;\n                this._frameIntArray.length += 1 + 1 + 1 + 1 + 1;\n                this._frameIntArray[frameIntOffset + 0 /* DeformVertexOffset */] = this._mesh.vertices.offset;\n                this._frameIntArray[frameIntOffset + 1 /* DeformCount */] = this._frameFloatArray.length - frameFloatOffset;\n                this._frameIntArray[frameIntOffset + 2 /* DeformValueCount */] = this._frameFloatArray.length - frameFloatOffset;\n                this._frameIntArray[frameIntOffset + 3 /* DeformValueOffset */] = 0;\n                this._frameIntArray[frameIntOffset + 4 /* DeformFloatOffset */] = frameFloatOffset - this._animation.frameFloatOffset;\n                this._timelineArray[this._timeline.offset + 3 /* TimelineFrameValueCount */] = frameIntOffset - this._animation.frameIntOffset;\n            }\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseIKConstraintFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var frameIntOffset = this._frameIntArray.length;\n            this._frameIntArray.length += 2;\n            this._frameIntArray[frameIntOffset++] = ObjectDataParser._getBoolean(rawData, dragonBones.DataParser.BEND_POSITIVE, true) ? 1 : 0;\n            this._frameIntArray[frameIntOffset++] = Math.round(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.WEIGHT, 1.0) * 100.0);\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseAnimationFrame = function (rawData, frameStart, frameCount) {\n            var frameOffset = this._parseTweenFrame(rawData, frameStart, frameCount);\n            var frameIntOffset = this._frameIntArray.length;\n            this._frameIntArray.length += 2;\n            this._frameIntArray[frameIntOffset++] = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.VALUE, 0);\n            this._frameIntArray[frameIntOffset++] = Math.round(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.WEIGHT, 1.0) * 100.0);\n            return frameOffset;\n        };\n        ObjectDataParser.prototype._parseActionData = function (rawData, type, bone, slot) {\n            var actions = new Array();\n            if (typeof rawData === \"string\") {\n                var action = dragonBones.BaseObject.borrowObject(dragonBones.ActionData);\n                action.type = type;\n                action.name = rawData;\n                action.bone = bone;\n                action.slot = slot;\n                actions.push(action);\n            }\n            else if (rawData instanceof Array) {\n                for (var _i = 0, rawData_2 = rawData; _i < rawData_2.length; _i++) {\n                    var rawAction = rawData_2[_i];\n                    var action = dragonBones.BaseObject.borrowObject(dragonBones.ActionData);\n                    if (dragonBones.DataParser.GOTO_AND_PLAY in rawAction) {\n                        action.type = 0 /* Play */;\n                        action.name = ObjectDataParser._getString(rawAction, dragonBones.DataParser.GOTO_AND_PLAY, \"\");\n                    }\n                    else {\n                        if (dragonBones.DataParser.TYPE in rawAction && typeof rawAction[dragonBones.DataParser.TYPE] === \"string\") {\n                            action.type = dragonBones.DataParser._getActionType(rawAction[dragonBones.DataParser.TYPE]);\n                        }\n                        else {\n                            action.type = ObjectDataParser._getNumber(rawAction, dragonBones.DataParser.TYPE, type);\n                        }\n                        action.name = ObjectDataParser._getString(rawAction, dragonBones.DataParser.NAME, \"\");\n                    }\n                    if (dragonBones.DataParser.BONE in rawAction) {\n                        var boneName = ObjectDataParser._getString(rawAction, dragonBones.DataParser.BONE, \"\");\n                        action.bone = this._armature.getBone(boneName);\n                    }\n                    else {\n                        action.bone = bone;\n                    }\n                    if (dragonBones.DataParser.SLOT in rawAction) {\n                        var slotName = ObjectDataParser._getString(rawAction, dragonBones.DataParser.SLOT, \"\");\n                        action.slot = this._armature.getSlot(slotName);\n                    }\n                    else {\n                        action.slot = slot;\n                    }\n                    var userData = null;\n                    if (dragonBones.DataParser.INTS in rawAction) {\n                        if (userData === null) {\n                            userData = dragonBones.BaseObject.borrowObject(dragonBones.UserData);\n                        }\n                        var rawInts = rawAction[dragonBones.DataParser.INTS];\n                        for (var _a = 0, rawInts_1 = rawInts; _a < rawInts_1.length; _a++) {\n                            var rawValue = rawInts_1[_a];\n                            userData.addInt(rawValue);\n                        }\n                    }\n                    if (dragonBones.DataParser.FLOATS in rawAction) {\n                        if (userData === null) {\n                            userData = dragonBones.BaseObject.borrowObject(dragonBones.UserData);\n                        }\n                        var rawFloats = rawAction[dragonBones.DataParser.FLOATS];\n                        for (var _b = 0, rawFloats_1 = rawFloats; _b < rawFloats_1.length; _b++) {\n                            var rawValue = rawFloats_1[_b];\n                            userData.addFloat(rawValue);\n                        }\n                    }\n                    if (dragonBones.DataParser.STRINGS in rawAction) {\n                        if (userData === null) {\n                            userData = dragonBones.BaseObject.borrowObject(dragonBones.UserData);\n                        }\n                        var rawStrings = rawAction[dragonBones.DataParser.STRINGS];\n                        for (var _c = 0, rawStrings_1 = rawStrings; _c < rawStrings_1.length; _c++) {\n                            var rawValue = rawStrings_1[_c];\n                            userData.addString(rawValue);\n                        }\n                    }\n                    action.data = userData;\n                    actions.push(action);\n                }\n            }\n            return actions;\n        };\n        ObjectDataParser.prototype._parseTransform = function (rawData, transform, scale) {\n            transform.x = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.X, 0.0) * scale;\n            transform.y = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.Y, 0.0) * scale;\n            if (dragonBones.DataParser.ROTATE in rawData || dragonBones.DataParser.SKEW in rawData) {\n                transform.rotation = dragonBones.Transform.normalizeRadian(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.ROTATE, 0.0) * dragonBones.Transform.DEG_RAD);\n                transform.skew = dragonBones.Transform.normalizeRadian(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SKEW, 0.0) * dragonBones.Transform.DEG_RAD);\n            }\n            else if (dragonBones.DataParser.SKEW_X in rawData || dragonBones.DataParser.SKEW_Y in rawData) {\n                transform.rotation = dragonBones.Transform.normalizeRadian(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SKEW_Y, 0.0) * dragonBones.Transform.DEG_RAD);\n                transform.skew = dragonBones.Transform.normalizeRadian(ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SKEW_X, 0.0) * dragonBones.Transform.DEG_RAD) - transform.rotation;\n            }\n            transform.scaleX = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SCALE_X, 1.0);\n            transform.scaleY = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SCALE_Y, 1.0);\n        };\n        ObjectDataParser.prototype._parseColorTransform = function (rawData, color) {\n            color.alphaMultiplier = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.ALPHA_MULTIPLIER, 100) * 0.01;\n            color.redMultiplier = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.RED_MULTIPLIER, 100) * 0.01;\n            color.greenMultiplier = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.GREEN_MULTIPLIER, 100) * 0.01;\n            color.blueMultiplier = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.BLUE_MULTIPLIER, 100) * 0.01;\n            color.alphaOffset = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.ALPHA_OFFSET, 0);\n            color.redOffset = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.RED_OFFSET, 0);\n            color.greenOffset = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.GREEN_OFFSET, 0);\n            color.blueOffset = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.BLUE_OFFSET, 0);\n        };\n        ObjectDataParser.prototype._parseArray = function (rawData) {\n            // tslint:disable-next-line:no-unused-expression\n            rawData;\n            this._intArray.length = 0;\n            this._floatArray.length = 0;\n            this._frameIntArray.length = 0;\n            this._frameFloatArray.length = 0;\n            this._frameArray.length = 0;\n            this._timelineArray.length = 0;\n        };\n        ObjectDataParser.prototype._modifyArray = function () {\n            // Align.\n            if ((this._intArray.length % Int16Array.BYTES_PER_ELEMENT) !== 0) {\n                this._intArray.push(0);\n            }\n            if ((this._frameIntArray.length % Int16Array.BYTES_PER_ELEMENT) !== 0) {\n                this._frameIntArray.push(0);\n            }\n            if ((this._frameArray.length % Int16Array.BYTES_PER_ELEMENT) !== 0) {\n                this._frameArray.push(0);\n            }\n            if ((this._timelineArray.length % Uint16Array.BYTES_PER_ELEMENT) !== 0) {\n                this._timelineArray.push(0);\n            }\n            var l1 = this._intArray.length * Int16Array.BYTES_PER_ELEMENT;\n            var l2 = this._floatArray.length * Float32Array.BYTES_PER_ELEMENT;\n            var l3 = this._frameIntArray.length * Int16Array.BYTES_PER_ELEMENT;\n            var l4 = this._frameFloatArray.length * Float32Array.BYTES_PER_ELEMENT;\n            var l5 = this._frameArray.length * Int16Array.BYTES_PER_ELEMENT;\n            var l6 = this._timelineArray.length * Uint16Array.BYTES_PER_ELEMENT;\n            var lTotal = l1 + l2 + l3 + l4 + l5 + l6;\n            if (dragonBones.DragonBones.webAssembly) {\n                var shareBuffer = dragonBones.webAssemblyModule.HEAP16.buffer;\n                var bufferPointer = dragonBones.webAssemblyModule._malloc(lTotal);\n                var intArray = new Int16Array(shareBuffer, bufferPointer, this._intArray.length);\n                var floatArray = new Float32Array(shareBuffer, bufferPointer + l1, this._floatArray.length);\n                var frameIntArray = new Int16Array(shareBuffer, bufferPointer + l1 + l2, this._frameIntArray.length);\n                var frameFloatArray = new Float32Array(shareBuffer, bufferPointer + l1 + l2 + l3, this._frameFloatArray.length);\n                var frameArray = new Int16Array(shareBuffer, bufferPointer + l1 + l2 + l3 + l4, this._frameArray.length);\n                var timelineArray = new Uint16Array(shareBuffer, bufferPointer + l1 + l2 + l3 + l4 + l5, this._timelineArray.length);\n                for (var i = 0, l = this._intArray.length; i < l; ++i) {\n                    intArray[i] = this._intArray[i];\n                }\n                for (var i = 0, l = this._floatArray.length; i < l; ++i) {\n                    floatArray[i] = this._floatArray[i];\n                }\n                for (var i = 0, l = this._frameIntArray.length; i < l; ++i) {\n                    frameIntArray[i] = this._frameIntArray[i];\n                }\n                for (var i = 0, l = this._frameFloatArray.length; i < l; ++i) {\n                    frameFloatArray[i] = this._frameFloatArray[i];\n                }\n                for (var i = 0, l = this._frameArray.length; i < l; ++i) {\n                    frameArray[i] = this._frameArray[i];\n                }\n                for (var i = 0, l = this._timelineArray.length; i < l; ++i) {\n                    timelineArray[i] = this._timelineArray[i];\n                }\n                dragonBones.webAssemblyModule.setDataBinary(this._data, bufferPointer, l1, l2, l3, l4, l5, l6);\n            }\n            else {\n                var binary = new ArrayBuffer(lTotal);\n                var intArray = new Int16Array(binary, 0, this._intArray.length);\n                var floatArray = new Float32Array(binary, l1, this._floatArray.length);\n                var frameIntArray = new Int16Array(binary, l1 + l2, this._frameIntArray.length);\n                var frameFloatArray = new Float32Array(binary, l1 + l2 + l3, this._frameFloatArray.length);\n                var frameArray = new Int16Array(binary, l1 + l2 + l3 + l4, this._frameArray.length);\n                var timelineArray = new Uint16Array(binary, l1 + l2 + l3 + l4 + l5, this._timelineArray.length);\n                for (var i = 0, l = this._intArray.length; i < l; ++i) {\n                    intArray[i] = this._intArray[i];\n                }\n                for (var i = 0, l = this._floatArray.length; i < l; ++i) {\n                    floatArray[i] = this._floatArray[i];\n                }\n                for (var i = 0, l = this._frameIntArray.length; i < l; ++i) {\n                    frameIntArray[i] = this._frameIntArray[i];\n                }\n                for (var i = 0, l = this._frameFloatArray.length; i < l; ++i) {\n                    frameFloatArray[i] = this._frameFloatArray[i];\n                }\n                for (var i = 0, l = this._frameArray.length; i < l; ++i) {\n                    frameArray[i] = this._frameArray[i];\n                }\n                for (var i = 0, l = this._timelineArray.length; i < l; ++i) {\n                    timelineArray[i] = this._timelineArray[i];\n                }\n                this._data.binary = binary;\n                this._data.intArray = intArray;\n                this._data.floatArray = floatArray;\n                this._data.frameIntArray = frameIntArray;\n                this._data.frameFloatArray = frameFloatArray;\n                this._data.frameArray = frameArray;\n                this._data.timelineArray = timelineArray;\n            }\n            this._defaultColorOffset = -1;\n        };\n        ObjectDataParser.prototype.parseDragonBonesData = function (rawData, scale) {\n            if (scale === void 0) { scale = 1; }\n            console.assert(rawData !== null && rawData !== undefined, \"Data error.\");\n            var version = ObjectDataParser._getString(rawData, dragonBones.DataParser.VERSION, \"\");\n            var compatibleVersion = ObjectDataParser._getString(rawData, dragonBones.DataParser.COMPATIBLE_VERSION, \"\");\n            if (dragonBones.DataParser.DATA_VERSIONS.indexOf(version) >= 0 ||\n                dragonBones.DataParser.DATA_VERSIONS.indexOf(compatibleVersion) >= 0) {\n                var data = dragonBones.BaseObject.borrowObject(dragonBones.DragonBonesData);\n                data.version = version;\n                data.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n                data.frameRate = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.FRAME_RATE, 24);\n                if (data.frameRate === 0) { // Data error.\n                    data.frameRate = 24;\n                }\n                if (dragonBones.DataParser.ARMATURE in rawData) {\n                    this._data = data;\n                    this._parseArray(rawData);\n                    var rawArmatures = rawData[dragonBones.DataParser.ARMATURE];\n                    for (var _i = 0, rawArmatures_1 = rawArmatures; _i < rawArmatures_1.length; _i++) {\n                        var rawArmature = rawArmatures_1[_i];\n                        data.addArmature(this._parseArmature(rawArmature, scale));\n                    }\n                    if (!this._data.binary) { // DragonBones.webAssembly ? 0 : null;\n                        this._modifyArray();\n                    }\n                    if (dragonBones.DataParser.STAGE in rawData) {\n                        data.stage = data.getArmature(ObjectDataParser._getString(rawData, dragonBones.DataParser.STAGE, \"\"));\n                    }\n                    else if (data.armatureNames.length > 0) {\n                        data.stage = data.getArmature(data.armatureNames[0]);\n                    }\n                    this._data = null;\n                }\n                if (dragonBones.DataParser.TEXTURE_ATLAS in rawData) {\n                    this._rawTextureAtlases = rawData[dragonBones.DataParser.TEXTURE_ATLAS];\n                }\n                return data;\n            }\n            else {\n                console.assert(false, \"Nonsupport data version: \" + version + \"\\n\" +\n                    \"Please convert DragonBones data to support version.\\n\" +\n                    \"Read more: https://github.com/DragonBones/Tools/\");\n            }\n            return null;\n        };\n        ObjectDataParser.prototype.parseTextureAtlasData = function (rawData, textureAtlasData, scale) {\n            if (scale === void 0) { scale = 1.0; }\n            console.assert(rawData !== undefined);\n            if (rawData === null) {\n                if (this._rawTextureAtlases === null || this._rawTextureAtlases.length === 0) {\n                    return false;\n                }\n                var rawTextureAtlas = this._rawTextureAtlases[this._rawTextureAtlasIndex++];\n                this.parseTextureAtlasData(rawTextureAtlas, textureAtlasData, scale);\n                if (this._rawTextureAtlasIndex >= this._rawTextureAtlases.length) {\n                    this._rawTextureAtlasIndex = 0;\n                    this._rawTextureAtlases = null;\n                }\n                return true;\n            }\n            // Texture format.\n            textureAtlasData.width = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.WIDTH, 0);\n            textureAtlasData.height = ObjectDataParser._getNumber(rawData, dragonBones.DataParser.HEIGHT, 0);\n            textureAtlasData.scale = scale === 1.0 ? (1.0 / ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SCALE, 1.0)) : scale;\n            textureAtlasData.name = ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, \"\");\n            textureAtlasData.imagePath = ObjectDataParser._getString(rawData, dragonBones.DataParser.IMAGE_PATH, \"\");\n            if (dragonBones.DataParser.SUB_TEXTURE in rawData) {\n                var rawTextures = rawData[dragonBones.DataParser.SUB_TEXTURE];\n                for (var i = 0, l = rawTextures.length; i < l; ++i) {\n                    var rawTexture = rawTextures[i];\n                    var textureData = textureAtlasData.createTexture();\n                    textureData.rotated = ObjectDataParser._getBoolean(rawTexture, dragonBones.DataParser.ROTATED, false);\n                    textureData.name = ObjectDataParser._getString(rawTexture, dragonBones.DataParser.NAME, \"\");\n                    textureData.region.x = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.X, 0.0);\n                    textureData.region.y = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.Y, 0.0);\n                    textureData.region.width = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.WIDTH, 0.0);\n                    textureData.region.height = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.HEIGHT, 0.0);\n                    var frameWidth = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.FRAME_WIDTH, -1.0);\n                    var frameHeight = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.FRAME_HEIGHT, -1.0);\n                    if (frameWidth > 0.0 && frameHeight > 0.0) {\n                        textureData.frame = dragonBones.TextureData.createRectangle();\n                        textureData.frame.x = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.FRAME_X, 0.0);\n                        textureData.frame.y = ObjectDataParser._getNumber(rawTexture, dragonBones.DataParser.FRAME_Y, 0.0);\n                        textureData.frame.width = frameWidth;\n                        textureData.frame.height = frameHeight;\n                    }\n                    textureAtlasData.addTexture(textureData);\n                }\n            }\n            return true;\n        };\n        /**\n         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parseDragonBonesData()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link dragonBones.BaseFactory#parseDragonBonesData()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        ObjectDataParser.getInstance = function () {\n            if (ObjectDataParser._objectDataParserInstance === null) {\n                ObjectDataParser._objectDataParserInstance = new ObjectDataParser();\n            }\n            return ObjectDataParser._objectDataParserInstance;\n        };\n        ObjectDataParser._objectDataParserInstance = null;\n        return ObjectDataParser;\n    }(dragonBones.DataParser));\n    dragonBones.ObjectDataParser = ObjectDataParser;\n    /**\n     * @internal\n     */\n    var ActionFrame = /** @class */ (function () {\n        function ActionFrame() {\n            this.frameStart = 0;\n            this.actions = [];\n        }\n        return ActionFrame;\n    }());\n    dragonBones.ActionFrame = ActionFrame;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * @internal\n     */\n    var BinaryDataParser = /** @class */ (function (_super) {\n        __extends(BinaryDataParser, _super);\n        function BinaryDataParser() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BinaryDataParser.prototype._inRange = function (a, min, max) {\n            return min <= a && a <= max;\n        };\n        BinaryDataParser.prototype._decodeUTF8 = function (data) {\n            var EOF_byte = -1;\n            var EOF_code_point = -1;\n            var FATAL_POINT = 0xFFFD;\n            var pos = 0;\n            var result = \"\";\n            var code_point;\n            var utf8_code_point = 0;\n            var utf8_bytes_needed = 0;\n            var utf8_bytes_seen = 0;\n            var utf8_lower_boundary = 0;\n            while (data.length > pos) {\n                var _byte = data[pos++];\n                if (_byte === EOF_byte) {\n                    if (utf8_bytes_needed !== 0) {\n                        code_point = FATAL_POINT;\n                    }\n                    else {\n                        code_point = EOF_code_point;\n                    }\n                }\n                else {\n                    if (utf8_bytes_needed === 0) {\n                        if (this._inRange(_byte, 0x00, 0x7F)) {\n                            code_point = _byte;\n                        }\n                        else {\n                            if (this._inRange(_byte, 0xC2, 0xDF)) {\n                                utf8_bytes_needed = 1;\n                                utf8_lower_boundary = 0x80;\n                                utf8_code_point = _byte - 0xC0;\n                            }\n                            else if (this._inRange(_byte, 0xE0, 0xEF)) {\n                                utf8_bytes_needed = 2;\n                                utf8_lower_boundary = 0x800;\n                                utf8_code_point = _byte - 0xE0;\n                            }\n                            else if (this._inRange(_byte, 0xF0, 0xF4)) {\n                                utf8_bytes_needed = 3;\n                                utf8_lower_boundary = 0x10000;\n                                utf8_code_point = _byte - 0xF0;\n                            }\n                            else {\n                            }\n                            utf8_code_point = utf8_code_point * Math.pow(64, utf8_bytes_needed);\n                            code_point = null;\n                        }\n                    }\n                    else if (!this._inRange(_byte, 0x80, 0xBF)) {\n                        utf8_code_point = 0;\n                        utf8_bytes_needed = 0;\n                        utf8_bytes_seen = 0;\n                        utf8_lower_boundary = 0;\n                        pos--;\n                        code_point = _byte;\n                    }\n                    else {\n                        utf8_bytes_seen += 1;\n                        utf8_code_point = utf8_code_point + (_byte - 0x80) * Math.pow(64, utf8_bytes_needed - utf8_bytes_seen);\n                        if (utf8_bytes_seen !== utf8_bytes_needed) {\n                            code_point = null;\n                        }\n                        else {\n                            var cp = utf8_code_point;\n                            var lower_boundary = utf8_lower_boundary;\n                            utf8_code_point = 0;\n                            utf8_bytes_needed = 0;\n                            utf8_bytes_seen = 0;\n                            utf8_lower_boundary = 0;\n                            if (this._inRange(cp, lower_boundary, 0x10FFFF) && !this._inRange(cp, 0xD800, 0xDFFF)) {\n                                code_point = cp;\n                            }\n                            else {\n                                code_point = _byte;\n                            }\n                        }\n                    }\n                }\n                //Decode string\n                if (code_point !== null && code_point !== EOF_code_point) {\n                    if (code_point <= 0xFFFF) {\n                        if (code_point > 0)\n                            result += String.fromCharCode(code_point);\n                    }\n                    else {\n                        code_point -= 0x10000;\n                        result += String.fromCharCode(0xD800 + ((code_point >> 10) & 0x3ff));\n                        result += String.fromCharCode(0xDC00 + (code_point & 0x3ff));\n                    }\n                }\n            }\n            return result;\n        };\n        BinaryDataParser.prototype._getUTF16Key = function (value) {\n            for (var i = 0, l = value.length; i < l; ++i) {\n                if (value.charCodeAt(i) > 255) {\n                    return encodeURI(value);\n                }\n            }\n            return value;\n        };\n        BinaryDataParser.prototype._parseBinaryTimeline = function (type, offset, timelineData) {\n            if (timelineData === void 0) { timelineData = null; }\n            var timeline = timelineData !== null ? timelineData : dragonBones.BaseObject.borrowObject(dragonBones.TimelineData);\n            timeline.type = type;\n            timeline.offset = offset;\n            this._timeline = timeline;\n            var keyFrameCount = this._timelineArrayBuffer[timeline.offset + 2 /* TimelineKeyFrameCount */];\n            if (keyFrameCount === 1) {\n                timeline.frameIndicesOffset = -1;\n            }\n            else {\n                var frameIndicesOffset = 0;\n                var totalFrameCount = this._animation.frameCount + 1; // One more frame than animation.\n                var frameIndices = this._data.frameIndices;\n                if (dragonBones.DragonBones.webAssembly) {\n                    frameIndicesOffset = frameIndices.size();\n                    frameIndices.resize(frameIndicesOffset + totalFrameCount, 0);\n                }\n                else {\n                    frameIndicesOffset = frameIndices.length;\n                    frameIndices.length += totalFrameCount;\n                }\n                timeline.frameIndicesOffset = frameIndicesOffset;\n                for (var i = 0, iK = 0, frameStart = 0, frameCount = 0; i < totalFrameCount; ++i) {\n                    if (frameStart + frameCount <= i && iK < keyFrameCount) {\n                        frameStart = this._frameArrayBuffer[this._animation.frameOffset + this._timelineArrayBuffer[timeline.offset + 5 /* TimelineFrameOffset */ + iK]];\n                        if (iK === keyFrameCount - 1) {\n                            frameCount = this._animation.frameCount - frameStart;\n                        }\n                        else {\n                            frameCount = this._frameArrayBuffer[this._animation.frameOffset + this._timelineArrayBuffer[timeline.offset + 5 /* TimelineFrameOffset */ + iK + 1]] - frameStart;\n                        }\n                        iK++;\n                    }\n                    if (dragonBones.DragonBones.webAssembly) {\n                        frameIndices.set(frameIndicesOffset + i, iK - 1);\n                    }\n                    else {\n                        frameIndices[frameIndicesOffset + i] = iK - 1;\n                    }\n                }\n            }\n            this._timeline = null; //\n            return timeline;\n        };\n        BinaryDataParser.prototype._parseVertices = function (rawData, vertices) {\n            vertices.offset = rawData[dragonBones.DataParser.OFFSET];\n            var weightOffset = this._intArrayBuffer[vertices.offset + 3 /* MeshWeightOffset */];\n            if (weightOffset >= 0) {\n                var weight = dragonBones.BaseObject.borrowObject(dragonBones.WeightData);\n                var vertexCount = this._intArrayBuffer[vertices.offset + 0 /* MeshVertexCount */];\n                var boneCount = this._intArrayBuffer[weightOffset + 0 /* WeigthBoneCount */];\n                weight.offset = weightOffset;\n                for (var i = 0; i < boneCount; ++i) {\n                    var boneIndex = this._intArrayBuffer[weightOffset + 2 /* WeigthBoneIndices */ + i];\n                    weight.addBone(this._rawBones[boneIndex]);\n                }\n                var boneIndicesOffset = weightOffset + 2 /* WeigthBoneIndices */ + boneCount;\n                var weightCount = 0;\n                for (var i = 0, l = vertexCount; i < l; ++i) {\n                    var vertexBoneCount = this._intArrayBuffer[boneIndicesOffset++];\n                    weightCount += vertexBoneCount;\n                    boneIndicesOffset += vertexBoneCount;\n                }\n                weight.count = weightCount;\n                vertices.weight = weight;\n            }\n        };\n        BinaryDataParser.prototype._parseMesh = function (rawData, mesh) {\n            this._parseVertices(rawData, mesh.vertices);\n        };\n        BinaryDataParser.prototype._parsePath = function (rawData, path) {\n            this._parseVertices(rawData, path.vertices);\n        };\n        BinaryDataParser.prototype._parseAnimation = function (rawData) {\n            var animation = dragonBones.BaseObject.borrowObject(dragonBones.AnimationData);\n            animation.frameCount = Math.max(dragonBones.ObjectDataParser._getNumber(rawData, dragonBones.DataParser.DURATION, 1), 1);\n            animation.playTimes = dragonBones.ObjectDataParser._getNumber(rawData, dragonBones.DataParser.PLAY_TIMES, 1);\n            animation.duration = animation.frameCount / this._armature.frameRate; // float\n            animation.fadeInTime = dragonBones.ObjectDataParser._getNumber(rawData, dragonBones.DataParser.FADE_IN_TIME, 0.0);\n            animation.scale = dragonBones.ObjectDataParser._getNumber(rawData, dragonBones.DataParser.SCALE, 1.0);\n            animation.name = dragonBones.ObjectDataParser._getString(rawData, dragonBones.DataParser.NAME, dragonBones.DataParser.DEFAULT_NAME);\n            if (animation.name.length === 0) {\n                animation.name = dragonBones.DataParser.DEFAULT_NAME;\n            }\n            // Offsets.\n            var offsets = rawData[dragonBones.DataParser.OFFSET];\n            animation.frameIntOffset = offsets[0];\n            animation.frameFloatOffset = offsets[1];\n            animation.frameOffset = offsets[2];\n            this._animation = animation;\n            if (dragonBones.DataParser.ACTION in rawData) {\n                animation.actionTimeline = this._parseBinaryTimeline(0 /* Action */, rawData[dragonBones.DataParser.ACTION]);\n            }\n            if (dragonBones.DataParser.Z_ORDER in rawData) {\n                animation.zOrderTimeline = this._parseBinaryTimeline(1 /* ZOrder */, rawData[dragonBones.DataParser.Z_ORDER]);\n            }\n            if (dragonBones.DataParser.BONE in rawData) {\n                var rawTimeliness = rawData[dragonBones.DataParser.BONE];\n                for (var k in rawTimeliness) {\n                    var rawTimelines = rawTimeliness[k];\n                    if (dragonBones.DragonBones.webAssembly) {\n                        k = this._getUTF16Key(k);\n                    }\n                    var bone = this._armature.getBone(k);\n                    if (bone === null) {\n                        continue;\n                    }\n                    for (var i = 0, l = rawTimelines.length; i < l; i += 2) {\n                        var timelineType = rawTimelines[i];\n                        var timelineOffset = rawTimelines[i + 1];\n                        var timeline = this._parseBinaryTimeline(timelineType, timelineOffset);\n                        this._animation.addBoneTimeline(bone, timeline);\n                    }\n                }\n            }\n            if (dragonBones.DataParser.SURFACE in rawData) {\n                var rawTimeliness = rawData[dragonBones.DataParser.SURFACE];\n                for (var k in rawTimeliness) {\n                    var rawTimelines = rawTimeliness[k];\n                    if (dragonBones.DragonBones.webAssembly) {\n                        k = this._getUTF16Key(k);\n                    }\n                    var surface = this._armature.getBone(k);\n                    if (surface === null) {\n                        continue;\n                    }\n                    for (var i = 0, l = rawTimelines.length; i < l; i += 2) {\n                        var timelineType = rawTimelines[i];\n                        var timelineOffset = rawTimelines[i + 1];\n                        var timeline = this._parseBinaryTimeline(timelineType, timelineOffset);\n                        this._animation.addSurfaceTimeline(surface, timeline);\n                    }\n                }\n            }\n            if (dragonBones.DataParser.SLOT in rawData) {\n                var rawTimeliness = rawData[dragonBones.DataParser.SLOT];\n                for (var k in rawTimeliness) {\n                    var rawTimelines = rawTimeliness[k];\n                    if (dragonBones.DragonBones.webAssembly) {\n                        k = this._getUTF16Key(k);\n                    }\n                    var slot = this._armature.getSlot(k);\n                    if (slot === null) {\n                        continue;\n                    }\n                    for (var i = 0, l = rawTimelines.length; i < l; i += 2) {\n                        var timelineType = rawTimelines[i];\n                        var timelineOffset = rawTimelines[i + 1];\n                        var timeline = this._parseBinaryTimeline(timelineType, timelineOffset);\n                        this._animation.addSlotTimeline(slot, timeline);\n                    }\n                }\n            }\n            if (dragonBones.DataParser.CONSTRAINT in rawData) {\n                var rawTimeliness = rawData[dragonBones.DataParser.CONSTRAINT];\n                for (var k in rawTimeliness) {\n                    var rawTimelines = rawTimeliness[k];\n                    if (dragonBones.DragonBones.webAssembly) {\n                        k = this._getUTF16Key(k);\n                    }\n                    var constraint = this._armature.getConstraint(k);\n                    if (constraint === null) {\n                        continue;\n                    }\n                    for (var i = 0, l = rawTimelines.length; i < l; i += 2) {\n                        var timelineType = rawTimelines[i];\n                        var timelineOffset = rawTimelines[i + 1];\n                        var timeline = this._parseBinaryTimeline(timelineType, timelineOffset);\n                        this._animation.addConstraintTimeline(constraint, timeline);\n                    }\n                }\n            }\n            if (dragonBones.DataParser.ANIMATION in rawData) {\n                var rawTimeliness = rawData[dragonBones.DataParser.ANIMATION];\n                for (var k in rawTimeliness) {\n                    var rawTimelines = rawTimeliness[k];\n                    if (dragonBones.DragonBones.webAssembly) {\n                        k = this._getUTF16Key(k);\n                    }\n                    for (var i = 0, l = rawTimelines.length; i < l; i += 2) {\n                        var timelineType = rawTimelines[i];\n                        var timelineOffset = rawTimelines[i + 1];\n                        var timeline = this._parseBinaryTimeline(timelineType, timelineOffset);\n                        this._animation.addAnimationTimeline(k, timeline);\n                    }\n                }\n            }\n            this._animation = null;\n            return animation;\n        };\n        BinaryDataParser.prototype._parseArray = function (rawData) {\n            var offsets = rawData[dragonBones.DataParser.OFFSET];\n            var l1 = offsets[1];\n            var l2 = offsets[3];\n            var l3 = offsets[5];\n            var l4 = offsets[7];\n            var l5 = offsets[9];\n            var l6 = offsets[11];\n            var intArray = new Int16Array(this._binary, this._binaryOffset + offsets[0], l1 / Int16Array.BYTES_PER_ELEMENT);\n            var floatArray = new Float32Array(this._binary, this._binaryOffset + offsets[2], l2 / Float32Array.BYTES_PER_ELEMENT);\n            var frameIntArray = new Int16Array(this._binary, this._binaryOffset + offsets[4], l3 / Int16Array.BYTES_PER_ELEMENT);\n            var frameFloatArray = new Float32Array(this._binary, this._binaryOffset + offsets[6], l4 / Float32Array.BYTES_PER_ELEMENT);\n            var frameArray = new Int16Array(this._binary, this._binaryOffset + offsets[8], l5 / Int16Array.BYTES_PER_ELEMENT);\n            var timelineArray = new Uint16Array(this._binary, this._binaryOffset + offsets[10], l6 / Uint16Array.BYTES_PER_ELEMENT);\n            if (dragonBones.DragonBones.webAssembly) {\n                var lTotal = l1 + l2 + l3 + l4 + l5 + l6;\n                var bufferPointer = dragonBones.webAssemblyModule._malloc(lTotal);\n                var rawArray = new Uint8Array(this._binary, this._binaryOffset, lTotal / Uint8Array.BYTES_PER_ELEMENT);\n                var copyArray = new Uint8Array(dragonBones.webAssemblyModule.HEAP16.buffer, bufferPointer, rawArray.length);\n                for (var i = 0, l = rawArray.length; i < l; ++i) {\n                    copyArray[i] = rawArray[i];\n                }\n                dragonBones.webAssemblyModule.setDataBinary(this._data, bufferPointer, l1, l2, l3, l4, l5, l6);\n                this._intArrayBuffer = intArray;\n                this._floatArrayBuffer = floatArray;\n                this._frameIntArrayBuffer = frameIntArray;\n                this._frameFloatArrayBuffer = frameFloatArray;\n                this._frameArrayBuffer = frameArray;\n                this._timelineArrayBuffer = timelineArray;\n            }\n            else {\n                this._data.binary = this._binary;\n                this._data.intArray = this._intArrayBuffer = intArray;\n                this._data.floatArray = this._floatArrayBuffer = floatArray;\n                this._data.frameIntArray = this._frameIntArrayBuffer = frameIntArray;\n                this._data.frameFloatArray = this._frameFloatArrayBuffer = frameFloatArray;\n                this._data.frameArray = this._frameArrayBuffer = frameArray;\n                this._data.timelineArray = this._timelineArrayBuffer = timelineArray;\n            }\n        };\n        BinaryDataParser.prototype.parseDragonBonesData = function (rawData, scale) {\n            if (scale === void 0) { scale = 1; }\n            console.assert(rawData !== null && rawData !== undefined && rawData instanceof ArrayBuffer, \"Data error.\");\n            var tag = new Uint8Array(rawData, 0, 8);\n            if (tag[0] !== \"D\".charCodeAt(0) ||\n                tag[1] !== \"B\".charCodeAt(0) ||\n                tag[2] !== \"D\".charCodeAt(0) ||\n                tag[3] !== \"T\".charCodeAt(0)) {\n                console.assert(false, \"Nonsupport data.\");\n                return null;\n            }\n            var headerLength = new Uint32Array(rawData, 8, 1)[0];\n            var headerBytes = new Uint8Array(rawData, 8 + 4, headerLength);\n            var headerString = this._decodeUTF8(headerBytes);\n            var header = JSON.parse(headerString);\n            //\n            this._binaryOffset = 8 + 4 + headerLength;\n            this._binary = rawData;\n            return _super.prototype.parseDragonBonesData.call(this, header, scale);\n        };\n        /**\n         * - Deprecated, please refer to {@link dragonBones.BaseFactory#parseDragonBonesData()}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link dragonBones.BaseFactory#parseDragonBonesData()}。\n         * @deprecated\n         * @language zh_CN\n         */\n        BinaryDataParser.getInstance = function () {\n            if (BinaryDataParser._binaryDataParserInstance === null) {\n                BinaryDataParser._binaryDataParserInstance = new BinaryDataParser();\n            }\n            return BinaryDataParser._binaryDataParserInstance;\n        };\n        BinaryDataParser._binaryDataParserInstance = null;\n        return BinaryDataParser;\n    }(dragonBones.ObjectDataParser));\n    dragonBones.BinaryDataParser = BinaryDataParser;\n})(dragonBones || (dragonBones = {}));\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2012-2018 DragonBones team and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (dragonBones) {\n    /**\n     * - Base class for the factory that create the armatures. (Typically only one global factory instance is required)\n     * The factory instance create armatures by parsed and added DragonBonesData instances and TextureAtlasData instances.\n     * Once the data has been parsed, it has been cached in the factory instance and does not need to be parsed again until it is cleared by the factory instance.\n     * @see dragonBones.DragonBonesData\n     * @see dragonBones.TextureAtlasData\n     * @see dragonBones.ArmatureData\n     * @see dragonBones.Armature\n     * @version DragonBones 3.0\n     * @language en_US\n     */\n    /**\n     * - 创建骨架的工厂基类。 （通常只需要一个全局工厂实例）\n     * 工厂通过解析并添加的 DragonBonesData 实例和 TextureAtlasData 实例来创建骨架。\n     * 当数据被解析过之后，已经添加到工厂中，在没有被工厂清理之前，不需要再次解析。\n     * @see dragonBones.DragonBonesData\n     * @see dragonBones.TextureAtlasData\n     * @see dragonBones.ArmatureData\n     * @see dragonBones.Armature\n     * @version DragonBones 3.0\n     * @language zh_CN\n     */\n    var BaseFactory = /** @class */ (function () {\n        /**\n         * - Create a factory instance. (typically only one global factory instance is required)\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 创建一个工厂实例。 （通常只需要一个全局工厂实例）\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        function BaseFactory(dataParser) {\n            if (dataParser === void 0) { dataParser = null; }\n            /**\n             * @private\n             */\n            this.autoSearch = false;\n            this._dragonBonesDataMap = {};\n            this._textureAtlasDataMap = {};\n            this._dragonBones = null;\n            this._dataParser = null;\n            if (BaseFactory._objectParser === null) {\n                BaseFactory._objectParser = new dragonBones.ObjectDataParser();\n            }\n            if (BaseFactory._binaryParser === null) {\n                BaseFactory._binaryParser = new dragonBones.BinaryDataParser();\n            }\n            this._dataParser = dataParser !== null ? dataParser : BaseFactory._objectParser;\n        }\n        BaseFactory.prototype._isSupportMesh = function () {\n            return true;\n        };\n        BaseFactory.prototype._getTextureData = function (textureAtlasName, textureName) {\n            if (textureAtlasName in this._textureAtlasDataMap) {\n                for (var _i = 0, _a = this._textureAtlasDataMap[textureAtlasName]; _i < _a.length; _i++) {\n                    var textureAtlasData = _a[_i];\n                    var textureData = textureAtlasData.getTexture(textureName);\n                    if (textureData !== null) {\n                        return textureData;\n                    }\n                }\n            }\n            if (this.autoSearch) { // Will be search all data, if the autoSearch is true.\n                for (var k in this._textureAtlasDataMap) {\n                    for (var _b = 0, _c = this._textureAtlasDataMap[k]; _b < _c.length; _b++) {\n                        var textureAtlasData = _c[_b];\n                        if (textureAtlasData.autoSearch) {\n                            var textureData = textureAtlasData.getTexture(textureName);\n                            if (textureData !== null) {\n                                return textureData;\n                            }\n                        }\n                    }\n                }\n            }\n            return null;\n        };\n        BaseFactory.prototype._fillBuildArmaturePackage = function (dataPackage, dragonBonesName, armatureName, skinName, textureAtlasName) {\n            var dragonBonesData = null;\n            var armatureData = null;\n            if (dragonBonesName.length > 0) {\n                if (dragonBonesName in this._dragonBonesDataMap) {\n                    dragonBonesData = this._dragonBonesDataMap[dragonBonesName];\n                    armatureData = dragonBonesData.getArmature(armatureName);\n                }\n            }\n            if (armatureData === null && (dragonBonesName.length === 0 || this.autoSearch)) { // Will be search all data, if do not give a data name or the autoSearch is true.\n                for (var k in this._dragonBonesDataMap) {\n                    dragonBonesData = this._dragonBonesDataMap[k];\n                    if (dragonBonesName.length === 0 || dragonBonesData.autoSearch) {\n                        armatureData = dragonBonesData.getArmature(armatureName);\n                        if (armatureData !== null) {\n                            dragonBonesName = k;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (armatureData !== null) {\n                dataPackage.dataName = dragonBonesName;\n                dataPackage.textureAtlasName = textureAtlasName;\n                dataPackage.data = dragonBonesData;\n                dataPackage.armature = armatureData;\n                dataPackage.skin = null;\n                if (skinName.length > 0) {\n                    dataPackage.skin = armatureData.getSkin(skinName);\n                    if (dataPackage.skin === null && this.autoSearch) {\n                        for (var k in this._dragonBonesDataMap) {\n                            var skinDragonBonesData = this._dragonBonesDataMap[k];\n                            var skinArmatureData = skinDragonBonesData.getArmature(skinName);\n                            if (skinArmatureData !== null) {\n                                dataPackage.skin = skinArmatureData.defaultSkin;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (dataPackage.skin === null) {\n                    dataPackage.skin = armatureData.defaultSkin;\n                }\n                return true;\n            }\n            return false;\n        };\n        BaseFactory.prototype._buildBones = function (dataPackage, armature) {\n            for (var _i = 0, _a = dataPackage.armature.sortedBones; _i < _a.length; _i++) {\n                var boneData = _a[_i];\n                var bone = dragonBones.BaseObject.borrowObject(boneData.type === 0 /* Bone */ ? dragonBones.Bone : dragonBones.Surface);\n                bone.init(boneData, armature);\n            }\n        };\n        /**\n         * @private\n         */\n        BaseFactory.prototype._buildSlots = function (dataPackage, armature) {\n            var currentSkin = dataPackage.skin;\n            var defaultSkin = dataPackage.armature.defaultSkin;\n            if (currentSkin === null || defaultSkin === null) {\n                return;\n            }\n            var skinSlots = {};\n            for (var k in defaultSkin.displays) {\n                var displays = defaultSkin.getDisplays(k);\n                skinSlots[k] = displays;\n            }\n            if (currentSkin !== defaultSkin) {\n                for (var k in currentSkin.displays) {\n                    var displays = currentSkin.getDisplays(k);\n                    skinSlots[k] = displays;\n                }\n            }\n            for (var _i = 0, _a = dataPackage.armature.sortedSlots; _i < _a.length; _i++) {\n                var slotData = _a[_i];\n                var displayDatas = slotData.name in skinSlots ? skinSlots[slotData.name] : null;\n                var slot = this._buildSlot(dataPackage, slotData, armature);\n                slot.rawDisplayDatas = displayDatas;\n                if (displayDatas !== null) {\n                    var displayList = new Array();\n                    // for (const displayData of displays) \n                    for (var i = 0, l = dragonBones.DragonBones.webAssembly ? displayDatas.size() : displayDatas.length; i < l; ++i) {\n                        var displayData = dragonBones.DragonBones.webAssembly ? displayDatas.get(i) : displayDatas[i];\n                        if (displayData !== null) {\n                            displayList.push(this._getSlotDisplay(dataPackage, displayData, null, slot));\n                        }\n                        else {\n                            displayList.push(null);\n                        }\n                    }\n                    slot._setDisplayList(displayList);\n                }\n                slot._setDisplayIndex(slotData.displayIndex, true);\n            }\n        };\n        BaseFactory.prototype._buildConstraints = function (dataPackage, armature) {\n            var constraints = dataPackage.armature.constraints;\n            for (var k in constraints) {\n                var constraintData = constraints[k];\n                // TODO more constraint type.\n                switch (constraintData.type) {\n                    case 0 /* IK */:\n                        var ikConstraint = dragonBones.BaseObject.borrowObject(dragonBones.IKConstraint);\n                        ikConstraint.init(constraintData, armature);\n                        armature._addConstraint(ikConstraint);\n                        break;\n                    case 1 /* Path */:\n                        var pathConstraint = dragonBones.BaseObject.borrowObject(dragonBones.PathConstraint);\n                        pathConstraint.init(constraintData, armature);\n                        armature._addConstraint(pathConstraint);\n                        break;\n                    default:\n                        var constraint = dragonBones.BaseObject.borrowObject(dragonBones.IKConstraint);\n                        constraint.init(constraintData, armature);\n                        armature._addConstraint(constraint);\n                        break;\n                }\n            }\n        };\n        BaseFactory.prototype._buildChildArmature = function (dataPackage, slot, displayData) {\n            // tslint:disable-next-line:no-unused-expression\n            slot;\n            return this.buildArmature(displayData.path, dataPackage !== null ? dataPackage.dataName : \"\", \"\", dataPackage !== null ? dataPackage.textureAtlasName : \"\");\n        };\n        BaseFactory.prototype._getSlotDisplay = function (dataPackage, displayData, rawDisplayData, slot) {\n            var dataName = dataPackage !== null ? dataPackage.dataName : displayData.parent.parent.parent.name;\n            var display = null;\n            switch (displayData.type) {\n                case 0 /* Image */: {\n                    var imageDisplayData = displayData;\n\n                    if (dataPackage !== null && dataPackage.textureAtlasName.length > 0) {\n                        imageDisplayData.texture = this._getTextureData(dataPackage.textureAtlasName, displayData.path);\n                    }\n\n                    if (imageDisplayData.texture === null) {\n                        imageDisplayData.texture = this._getTextureData(dataName, displayData.path);\n                    }\n\n                    if (rawDisplayData !== null && rawDisplayData.type === 2 /* Mesh */ && this._isSupportMesh()) {\n                        display = slot.meshDisplay;\n                    }\n                    else {\n                        display = slot.rawDisplay;\n                    }\n                    break;\n                }\n                case 2 /* Mesh */: {\n                    var meshDisplayData = displayData;\n                    \n                    if (dataPackage !== null && dataPackage.textureAtlasName.length > 0) {\n                        meshDisplayData.texture = this._getTextureData(dataPackage.textureAtlasName, meshDisplayData.path);\n                    }\n\n                    if (meshDisplayData.texture === null) {\n                        meshDisplayData.texture = this._getTextureData(dataName, meshDisplayData.path);\n                    }\n\n                    if (this._isSupportMesh()) {\n                        display = slot.meshDisplay;\n                    }\n                    else {\n                        display = slot.rawDisplay;\n                    }\n                    break;\n                }\n                case 1 /* Armature */: {\n                    var armatureDisplayData = displayData;\n                    var childArmature = this._buildChildArmature(dataPackage, slot, displayData);\n                    if (childArmature !== null) {\n                        childArmature.inheritAnimation = armatureDisplayData.inheritAnimation;\n                        if (!childArmature.inheritAnimation) {\n                            var actions = armatureDisplayData.actions.length > 0 ? armatureDisplayData.actions : childArmature.armatureData.defaultActions;\n                            if (actions.length > 0) {\n                                for (var _i = 0, actions_6 = actions; _i < actions_6.length; _i++) {\n                                    var action = actions_6[_i];\n                                    var eventObject = dragonBones.BaseObject.borrowObject(dragonBones.EventObject);\n                                    dragonBones.EventObject.actionDataToInstance(action, eventObject, slot.armature);\n                                    eventObject.slot = slot;\n                                    slot.armature._bufferAction(eventObject, false);\n                                }\n                            }\n                            else {\n                                childArmature.animation.play();\n                            }\n                        }\n                        armatureDisplayData.armature = childArmature.armatureData; // \n                    }\n                    display = childArmature;\n                    break;\n                }\n                case 3 /* BoundingBox */:\n                    break;\n                default:\n                    break;\n            }\n            return display;\n        };\n        /**\n         * - Parse the raw data to a DragonBonesData instance and cache it to the factory.\n         * @param rawData - The raw data.\n         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (If not set, use the instance name instead)\n         * @param scale - Specify a scaling value for all armatures. (Default: 1.0)\n         * @returns DragonBonesData instance\n         * @see #getDragonBonesData()\n         * @see #addDragonBonesData()\n         * @see #removeDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 将原始数据解析为 DragonBonesData 实例，并缓存到工厂中。\n         * @param rawData - 原始数据。\n         * @param name - 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）\n         * @param scale - 为所有的骨架指定一个缩放值。 （默认: 1.0）\n         * @returns DragonBonesData 实例\n         * @see #getDragonBonesData()\n         * @see #addDragonBonesData()\n         * @see #removeDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseFactory.prototype.parseDragonBonesData = function (rawData, name, scale) {\n            if (name === void 0) { name = null; }\n            if (scale === void 0) { scale = 1.0; }\n            var dataParser = rawData instanceof ArrayBuffer ? BaseFactory._binaryParser : this._dataParser;\n            var dragonBonesData = dataParser.parseDragonBonesData(rawData, scale);\n            while (true) {\n                var textureAtlasData = this._buildTextureAtlasData(null, null);\n                if (dataParser.parseTextureAtlasData(null, textureAtlasData, scale)) {\n                    this.addTextureAtlasData(textureAtlasData, name);\n                }\n                else {\n                    textureAtlasData.returnToPool();\n                    break;\n                }\n            }\n            if (dragonBonesData !== null) {\n                this.addDragonBonesData(dragonBonesData, name);\n            }\n            return dragonBonesData;\n        };\n        /**\n         * - Parse the raw texture atlas data and the texture atlas object to a TextureAtlasData instance and cache it to the factory.\n         * @param rawData - The raw texture atlas data.\n         * @param textureAtlas - The texture atlas object.\n         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (If not set, use the instance name instead)\n         * @param scale - Specify a scaling value for the map set. (Default: 1.0)\n         * @returns TextureAtlasData instance\n         * @see #getTextureAtlasData()\n         * @see #addTextureAtlasData()\n         * @see #removeTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 将原始贴图集数据和贴图集对象解析为 TextureAtlasData 实例，并缓存到工厂中。\n         * @param rawData - 原始贴图集数据。\n         * @param textureAtlas - 贴图集对象。\n         * @param name - 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）\n         * @param scale - 为贴图集指定一个缩放值。 （默认: 1.0）\n         * @returns TextureAtlasData 实例\n         * @see #getTextureAtlasData()\n         * @see #addTextureAtlasData()\n         * @see #removeTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseFactory.prototype.parseTextureAtlasData = function (rawData, textureAtlas, name, scale) {\n            if (name === void 0) { name = null; }\n            if (scale === void 0) { scale = 1.0; }\n            var textureAtlasData = this._buildTextureAtlasData(null, null);\n            this._dataParser.parseTextureAtlasData(rawData, textureAtlasData, scale);\n            this._buildTextureAtlasData(textureAtlasData, textureAtlas || null);\n            this.addTextureAtlasData(textureAtlasData, name);\n            return textureAtlasData;\n        };\n        /**\n         * @private\n         */\n        BaseFactory.prototype.updateTextureAtlasData = function (name, textureAtlases) {\n            var textureAtlasDatas = this.getTextureAtlasData(name);\n            if (textureAtlasDatas !== null) {\n                for (var i = 0, l = textureAtlasDatas.length; i < l; ++i) {\n                    if (i < textureAtlases.length) {\n                        this._buildTextureAtlasData(textureAtlasDatas[i], textureAtlases[i]);\n                    }\n                }\n            }\n        };\n        /**\n         * - Get a specific DragonBonesData instance.\n         * @param name - The DragonBonesData instance cache name.\n         * @returns DragonBonesData instance\n         * @see #parseDragonBonesData()\n         * @see #addDragonBonesData()\n         * @see #removeDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的 DragonBonesData 实例。\n         * @param name - DragonBonesData 实例的缓存名称。\n         * @returns DragonBonesData 实例\n         * @see #parseDragonBonesData()\n         * @see #addDragonBonesData()\n         * @see #removeDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        BaseFactory.prototype.getDragonBonesData = function (name) {\n            return (name in this._dragonBonesDataMap) ? this._dragonBonesDataMap[name] : null;\n        };\n        /**\n         * - Cache a DragonBonesData instance to the factory.\n         * @param data - The DragonBonesData instance.\n         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (if not set, use the instance name instead)\n         * @see #parseDragonBonesData()\n         * @see #getDragonBonesData()\n         * @see #removeDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 将 DragonBonesData 实例缓存到工厂中。\n         * @param data - DragonBonesData 实例。\n         * @param name - 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）\n         * @see #parseDragonBonesData()\n         * @see #getDragonBonesData()\n         * @see #removeDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        BaseFactory.prototype.addDragonBonesData = function (data, name) {\n            if (name === void 0) { name = null; }\n            name = name !== null ? name : data.name;\n            if (name in this._dragonBonesDataMap) {\n                if (this._dragonBonesDataMap[name] === data) {\n                    return;\n                }\n                console.warn(\"Can not add same name data: \" + name);\n                return;\n            }\n            this._dragonBonesDataMap[name] = data;\n        };\n        /**\n         * - Remove a DragonBonesData instance.\n         * @param name - The DragonBonesData instance cache name.\n         * @param disposeData - Whether to dispose data. (Default: true)\n         * @see #parseDragonBonesData()\n         * @see #getDragonBonesData()\n         * @see #addDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 移除 DragonBonesData 实例。\n         * @param name - DragonBonesData 实例缓存名称。\n         * @param disposeData - 是否释放数据。 （默认: true）\n         * @see #parseDragonBonesData()\n         * @see #getDragonBonesData()\n         * @see #addDragonBonesData()\n         * @see dragonBones.DragonBonesData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        BaseFactory.prototype.removeDragonBonesData = function (name, disposeData) {\n            if (disposeData === void 0) { disposeData = true; }\n            if (name in this._dragonBonesDataMap) {\n                if (disposeData) {\n                    this._dragonBones.bufferObject(this._dragonBonesDataMap[name]);\n                }\n                delete this._dragonBonesDataMap[name];\n            }\n        };\n        /**\n         * - Get a list of specific TextureAtlasData instances.\n         * @param name - The TextureAtlasData cahce name.\n         * @see #parseTextureAtlasData()\n         * @see #addTextureAtlasData()\n         * @see #removeTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 获取特定的 TextureAtlasData 实例列表。\n         * @param name - TextureAtlasData 实例缓存名称。\n         * @see #parseTextureAtlasData()\n         * @see #addTextureAtlasData()\n         * @see #removeTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        BaseFactory.prototype.getTextureAtlasData = function (name) {\n            return (name in this._textureAtlasDataMap) ? this._textureAtlasDataMap[name] : null;\n        };\n        /**\n         * - Cache a TextureAtlasData instance to the factory.\n         * @param data - The TextureAtlasData instance.\n         * @param name - Specify a cache name for the instance so that the instance can be obtained through this name. (if not set, use the instance name instead)\n         * @see #parseTextureAtlasData()\n         * @see #getTextureAtlasData()\n         * @see #removeTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 将 TextureAtlasData 实例缓存到工厂中。\n         * @param data - TextureAtlasData 实例。\n         * @param name - 为该实例指定一个缓存名称，以便可以通过此名称获取该实例。 （如果未设置，则使用该实例中的名称）\n         * @see #parseTextureAtlasData()\n         * @see #getTextureAtlasData()\n         * @see #removeTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        BaseFactory.prototype.addTextureAtlasData = function (data, name) {\n            if (name === void 0) { name = null; }\n            name = name !== null ? name : data.name;\n            var textureAtlasList = (name in this._textureAtlasDataMap) ? this._textureAtlasDataMap[name] : (this._textureAtlasDataMap[name] = []);\n            if (textureAtlasList.indexOf(data) < 0) {\n                textureAtlasList.push(data);\n            }\n        };\n        /**\n         * - Remove a TextureAtlasData instance.\n         * @param name - The TextureAtlasData instance cache name.\n         * @param disposeData - Whether to dispose data.\n         * @see #parseTextureAtlasData()\n         * @see #getTextureAtlasData()\n         * @see #addTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 移除 TextureAtlasData 实例。\n         * @param name - TextureAtlasData 实例的缓存名称。\n         * @param disposeData - 是否释放数据。\n         * @see #parseTextureAtlasData()\n         * @see #getTextureAtlasData()\n         * @see #addTextureAtlasData()\n         * @see dragonBones.TextureAtlasData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        BaseFactory.prototype.removeTextureAtlasData = function (name, disposeData) {\n            if (disposeData === void 0) { disposeData = true; }\n            if (name in this._textureAtlasDataMap) {\n                var textureAtlasDataList = this._textureAtlasDataMap[name];\n                if (disposeData) {\n                    for (var _i = 0, textureAtlasDataList_1 = textureAtlasDataList; _i < textureAtlasDataList_1.length; _i++) {\n                        var textureAtlasData = textureAtlasDataList_1[_i];\n                        this._dragonBones.bufferObject(textureAtlasData);\n                    }\n                }\n                delete this._textureAtlasDataMap[name];\n            }\n        };\n        /**\n         * - Get a specific armature data.\n         * @param name - The armature data name.\n         * @param dragonBonesName - The cached name for DragonbonesData instance.\n         * @see dragonBones.ArmatureData\n         * @version DragonBones 5.1\n         * @language en_US\n         */\n        /**\n         * - 获取特定的骨架数据。\n         * @param name - 骨架数据名称。\n         * @param dragonBonesName - DragonBonesData 实例的缓存名称。\n         * @see dragonBones.ArmatureData\n         * @version DragonBones 5.1\n         * @language zh_CN\n         */\n        BaseFactory.prototype.getArmatureData = function (name, dragonBonesName) {\n            if (dragonBonesName === void 0) { dragonBonesName = \"\"; }\n            var dataPackage = new BuildArmaturePackage();\n            if (!this._fillBuildArmaturePackage(dataPackage, dragonBonesName, name, \"\", \"\")) {\n                return null;\n            }\n            return dataPackage.armature;\n        };\n        /**\n         * - Clear all cached DragonBonesData instances and TextureAtlasData instances.\n         * @param disposeData - Whether to dispose data.\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 清除缓存的所有 DragonBonesData 实例和 TextureAtlasData 实例。\n         * @param disposeData - 是否释放数据。\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseFactory.prototype.clear = function (disposeData) {\n            if (disposeData === void 0) { disposeData = true; }\n            for (var k in this._dragonBonesDataMap) {\n                if (disposeData) {\n                    this._dragonBones.bufferObject(this._dragonBonesDataMap[k]);\n                }\n                delete this._dragonBonesDataMap[k];\n            }\n            for (var k in this._textureAtlasDataMap) {\n                if (disposeData) {\n                    var textureAtlasDataList = this._textureAtlasDataMap[k];\n                    for (var _i = 0, textureAtlasDataList_2 = textureAtlasDataList; _i < textureAtlasDataList_2.length; _i++) {\n                        var textureAtlasData = textureAtlasDataList_2[_i];\n                        this._dragonBones.bufferObject(textureAtlasData);\n                    }\n                }\n                delete this._textureAtlasDataMap[k];\n            }\n        };\n        /**\n         * - Create a armature from cached DragonBonesData instances and TextureAtlasData instances.\n         * Note that when the created armature that is no longer in use, you need to explicitly dispose {@link #dragonBones.Armature#dispose()}.\n         * @param armatureName - The armature data name.\n         * @param dragonBonesName - The cached name of the DragonBonesData instance. (If not set, all DragonBonesData instances are retrieved, and when multiple DragonBonesData instances contain a the same name armature data, it may not be possible to accurately create a specific armature)\n         * @param skinName - The skin name, you can set a different ArmatureData name to share it's skin data. (If not set, use the default skin data)\n         * @returns The armature.\n         * @example\n         * <pre>\n         *     let armature = factory.buildArmature(\"armatureName\", \"dragonBonesName\");\n         *     armature.clock = factory.clock;\n         * </pre>\n         * @see dragonBones.DragonBonesData\n         * @see dragonBones.ArmatureData\n         * @version DragonBones 3.0\n         * @language en_US\n         */\n        /**\n         * - 通过缓存的 DragonBonesData 实例和 TextureAtlasData 实例创建一个骨架。\n         * 注意，创建的骨架不再使用时，需要显式释放 {@link #dragonBones.Armature#dispose()}。\n         * @param armatureName - 骨架数据名称。\n         * @param dragonBonesName - DragonBonesData 实例的缓存名称。 （如果未设置，将检索所有的 DragonBonesData 实例，当多个 DragonBonesData 实例中包含同名的骨架数据时，可能无法准确的创建出特定的骨架）\n         * @param skinName - 皮肤名称，可以设置一个其他骨架数据名称来共享其皮肤数据。（如果未设置，则使用默认的皮肤数据）\n         * @returns 骨架。\n         * @example\n         * <pre>\n         *     let armature = factory.buildArmature(\"armatureName\", \"dragonBonesName\");\n         *     armature.clock = factory.clock;\n         * </pre>\n         * @see dragonBones.DragonBonesData\n         * @see dragonBones.ArmatureData\n         * @version DragonBones 3.0\n         * @language zh_CN\n         */\n        BaseFactory.prototype.buildArmature = function (armatureName, dragonBonesName, skinName, textureAtlasName) {\n            if (dragonBonesName === void 0) { dragonBonesName = \"\"; }\n            if (skinName === void 0) { skinName = \"\"; }\n            if (textureAtlasName === void 0) { textureAtlasName = \"\"; }\n            var dataPackage = new BuildArmaturePackage();\n            if (!this._fillBuildArmaturePackage(dataPackage, dragonBonesName || \"\", armatureName, skinName || \"\", textureAtlasName || \"\")) {\n                console.warn(\"No armature data: \" + armatureName + \", \" + (dragonBonesName !== null ? dragonBonesName : \"\"));\n                return null;\n            }\n            var armature = this._buildArmature(dataPackage);\n            this._buildBones(dataPackage, armature);\n            this._buildSlots(dataPackage, armature);\n            this._buildConstraints(dataPackage, armature);\n            armature.invalidUpdate(null, true);\n            armature.advanceTime(0.0); // Update armature pose.\n            return armature;\n        };\n        /**\n         * @private\n         */\n        BaseFactory.prototype.replaceDisplay = function (slot, displayData, displayIndex) {\n            if (displayIndex === void 0) { displayIndex = -1; }\n            if (displayIndex < 0) {\n                displayIndex = slot.displayIndex;\n            }\n            if (displayIndex < 0) {\n                displayIndex = 0;\n            }\n            slot.replaceDisplayData(displayData, displayIndex);\n            var displayList = slot.displayList; // Copy.\n            if (displayList.length <= displayIndex) {\n                displayList.length = displayIndex + 1;\n                for (var i = 0, l = displayList.length; i < l; ++i) { // Clean undefined.\n                    if (!displayList[i]) {\n                        displayList[i] = null;\n                    }\n                }\n            }\n            if (displayData !== null) {\n                var rawDisplayDatas = slot.rawDisplayDatas;\n                var rawDisplayData = null;\n                if (rawDisplayDatas) {\n                    if (dragonBones.DragonBones.webAssembly) {\n                        if (displayIndex < rawDisplayDatas.size()) {\n                            rawDisplayData = rawDisplayDatas.get(displayIndex);\n                        }\n                    }\n                    else {\n                        if (displayIndex < rawDisplayDatas.length) {\n                            rawDisplayData = rawDisplayDatas[displayIndex];\n                        }\n                    }\n                }\n                displayList[displayIndex] = this._getSlotDisplay(null, displayData, rawDisplayData, slot);\n            }\n            else {\n                displayList[displayIndex] = null;\n            }\n            slot.displayList = displayList;\n        };\n        /**\n         * - Replaces the current display data for a particular slot with a specific display data.\n         * Specify display data with \"dragonBonesName/armatureName/slotName/displayName\".\n         * @param dragonBonesName - The DragonBonesData instance cache name.\n         * @param armatureName - The armature data name.\n         * @param slotName - The slot data name.\n         * @param displayName - The display data name.\n         * @param slot - The slot.\n         * @param displayIndex - The index of the display data that is replaced. (If it is not set, replaces the current display data)\n         * @example\n         * <pre>\n         *     let slot = armature.getSlot(\"weapon\");\n         *     factory.replaceSlotDisplay(\"dragonBonesName\", \"armatureName\", \"slotName\", \"displayName\", slot);\n         * </pre>\n         * @version DragonBones 4.5\n         * @language en_US\n         */\n        /**\n         * - 用特定的显示对象数据替换特定插槽当前的显示对象数据。\n         * 用 \"dragonBonesName/armatureName/slotName/displayName\" 指定显示对象数据。\n         * @param dragonBonesName - DragonBonesData 实例的缓存名称。\n         * @param armatureName - 骨架数据名称。\n         * @param slotName - 插槽数据名称。\n         * @param displayName - 显示对象数据名称。\n         * @param slot - 插槽。\n         * @param displayIndex - 被替换的显示对象数据的索引。 （如果未设置，则替换当前的显示对象数据）\n         * @example\n         * <pre>\n         *     let slot = armature.getSlot(\"weapon\");\n         *     factory.replaceSlotDisplay(\"dragonBonesName\", \"armatureName\", \"slotName\", \"displayName\", slot);\n         * </pre>\n         * @version DragonBones 4.5\n         * @language zh_CN\n         */\n        BaseFactory.prototype.replaceSlotDisplay = function (dragonBonesName, armatureName, slotName, displayName, slot, displayIndex) {\n            if (displayIndex === void 0) { displayIndex = -1; }\n            var armatureData = this.getArmatureData(armatureName, dragonBonesName || \"\");\n            if (!armatureData || !armatureData.defaultSkin) {\n                return false;\n            }\n            var displayData = armatureData.defaultSkin.getDisplay(slotName, displayName);\n            if (!displayData) {\n                return false;\n            }\n            this.replaceDisplay(slot, displayData, displayIndex);\n            return true;\n        };\n        /**\n         * @private\n         */\n        BaseFactory.prototype.replaceSlotDisplayList = function (dragonBonesName, armatureName, slotName, slot) {\n            var armatureData = this.getArmatureData(armatureName, dragonBonesName || \"\");\n            if (!armatureData || !armatureData.defaultSkin) {\n                return false;\n            }\n            var displays = armatureData.defaultSkin.getDisplays(slotName);\n            if (!displays) {\n                return false;\n            }\n            var displayIndex = 0;\n            // for (const displayData of displays) \n            for (var i = 0, l = dragonBones.DragonBones.webAssembly ? displays.size() : displays.length; i < l; ++i) {\n                var displayData = dragonBones.DragonBones.webAssembly ? displays.get(i) : displays[i];\n                this.replaceDisplay(slot, displayData, displayIndex++);\n            }\n            return true;\n        };\n        /**\n         * - Share specific skin data with specific armature.\n         * @param armature - The armature.\n         * @param skin - The skin data.\n         * @param isOverride - Whether it completely override the original skin. (Default: false)\n         * @param exclude - A list of slot names that do not need to be replace.\n         * @example\n         * <pre>\n         *     let armatureA = factory.buildArmature(\"armatureA\", \"dragonBonesA\");\n         *     let armatureDataB = factory.getArmatureData(\"armatureB\", \"dragonBonesB\");\n         *     if (armatureDataB && armatureDataB.defaultSkin) {\n         *     factory.replaceSkin(armatureA, armatureDataB.defaultSkin, false, [\"arm_l\", \"weapon_l\"]);\n         *     }\n         * </pre>\n         * @see dragonBones.Armature\n         * @see dragonBones.SkinData\n         * @version DragonBones 5.6\n         * @language en_US\n         */\n        /**\n         * - 将特定的皮肤数据共享给特定的骨架使用。\n         * @param armature - 骨架。\n         * @param skin - 皮肤数据。\n         * @param isOverride - 是否完全覆盖原来的皮肤。 （默认: false）\n         * @param exclude - 不需要被替换的插槽名称列表。\n         * @example\n         * <pre>\n         *     let armatureA = factory.buildArmature(\"armatureA\", \"dragonBonesA\");\n         *     let armatureDataB = factory.getArmatureData(\"armatureB\", \"dragonBonesB\");\n         *     if (armatureDataB && armatureDataB.defaultSkin) {\n         *     factory.replaceSkin(armatureA, armatureDataB.defaultSkin, false, [\"arm_l\", \"weapon_l\"]);\n         *     }\n         * </pre>\n         * @see dragonBones.Armature\n         * @see dragonBones.SkinData\n         * @version DragonBones 5.6\n         * @language zh_CN\n         */\n        BaseFactory.prototype.replaceSkin = function (armature, skin, isOverride, exclude) {\n            if (isOverride === void 0) { isOverride = false; }\n            if (exclude === void 0) { exclude = null; }\n            var success = false;\n            var defaultSkin = skin.parent.defaultSkin;\n            for (var _i = 0, _a = armature.getSlots(); _i < _a.length; _i++) {\n                var slot = _a[_i];\n                if (exclude !== null && exclude.indexOf(slot.name) >= 0) {\n                    continue;\n                }\n                var displays = skin.getDisplays(slot.name);\n                if (!displays) {\n                    if (defaultSkin !== null && skin !== defaultSkin) {\n                        displays = defaultSkin.getDisplays(slot.name);\n                    }\n                    if (!displays) {\n                        if (isOverride) {\n                            slot.rawDisplayDatas = null;\n                            slot.displayList = []; //\n                        }\n                        continue;\n                    }\n                }\n                var displayCount = dragonBones.DragonBones.webAssembly ? displays.size() : displays.length;\n                var displayList = slot.displayList; // Copy.\n                displayList.length = displayCount; // Modify displayList length.\n                for (var i = 0, l = displayCount; i < l; ++i) {\n                    var displayData = dragonBones.DragonBones.webAssembly ? displays.get(i) : displays[i];\n                    if (displayData !== null) {\n                        displayList[i] = this._getSlotDisplay(null, displayData, null, slot);\n                    }\n                    else {\n                        displayList[i] = null;\n                    }\n                }\n                success = true;\n                slot.rawDisplayDatas = displays;\n                slot.displayList = displayList;\n            }\n            return success;\n        };\n        /**\n         * - Replaces the existing animation data for a specific armature with the animation data for the specific armature data.\n         * This enables you to make a armature template so that other armature without animations can share it's animations.\n         * @param armature - The armtaure.\n         * @param armatureData - The armature data.\n         * @param isOverride - Whether to completely overwrite the original animation. (Default: false)\n         * @example\n         * <pre>\n         *     let armatureA = factory.buildArmature(\"armatureA\", \"dragonBonesA\");\n         *     let armatureDataB = factory.getArmatureData(\"armatureB\", \"dragonBonesB\");\n         *     if (armatureDataB) {\n         *     factory.replaceAnimation(armatureA, armatureDataB);\n         *     }\n         * </pre>\n         * @see dragonBones.Armature\n         * @see dragonBones.ArmatureData\n         * @version DragonBones 5.6\n         * @language en_US\n         */\n        /**\n         * - 用特定骨架数据的动画数据替换特定骨架现有的动画数据。\n         * 这样就能实现制作一个骨架动画模板，让其他没有制作动画的骨架共享该动画。\n         * @param armature - 骨架。\n         * @param armatureData - 骨架数据。\n         * @param isOverride - 是否完全覆盖原来的动画。（默认: false）\n         * @example\n         * <pre>\n         *     let armatureA = factory.buildArmature(\"armatureA\", \"dragonBonesA\");\n         *     let armatureDataB = factory.getArmatureData(\"armatureB\", \"dragonBonesB\");\n         *     if (armatureDataB) {\n         *     factory.replaceAnimation(armatureA, armatureDataB);\n         *     }\n         * </pre>\n         * @see dragonBones.Armature\n         * @see dragonBones.ArmatureData\n         * @version DragonBones 5.6\n         * @language zh_CN\n         */\n        BaseFactory.prototype.replaceAnimation = function (armature, armatureData, isOverride) {\n            if (isOverride === void 0) { isOverride = true; }\n            var skinData = armatureData.defaultSkin;\n            if (skinData === null) {\n                return false;\n            }\n            if (isOverride) {\n                armature.animation.animations = armatureData.animations;\n            }\n            else {\n                var rawAnimations = armature.animation.animations;\n                var animations = {};\n                for (var k in rawAnimations) {\n                    animations[k] = rawAnimations[k];\n                }\n                for (var k in armatureData.animations) {\n                    animations[k] = armatureData.animations[k];\n                }\n                armature.animation.animations = animations;\n            }\n            for (var _i = 0, _a = armature.getSlots(); _i < _a.length; _i++) {\n                var slot = _a[_i];\n                var index = 0;\n                for (var _b = 0, _c = slot.displayList; _b < _c.length; _b++) {\n                    var display = _c[_b];\n                    if (display instanceof dragonBones.Armature) {\n                        var displayDatas = skinData.getDisplays(slot.name);\n                        if (displayDatas !== null && index < (dragonBones.DragonBones.webAssembly ? displayDatas.size() : displayDatas.length)) {\n                            var displayData = dragonBones.DragonBones.webAssembly ? displayDatas.get(index) : displayDatas[index];\n                            if (displayData !== null && displayData.type === 1 /* Armature */) {\n                                var childArmatureData = this.getArmatureData(displayData.path, displayData.parent.parent.parent.name);\n                                if (childArmatureData) {\n                                    this.replaceAnimation(display, childArmatureData, isOverride);\n                                }\n                            }\n                        }\n                    }\n                    index++;\n                }\n            }\n            return true;\n        };\n        /**\n         * @private\n         */\n        BaseFactory.prototype.getAllDragonBonesData = function () {\n            return this._dragonBonesDataMap;\n        };\n        /**\n         * @private\n         */\n        BaseFactory.prototype.getAllTextureAtlasData = function () {\n            return this._textureAtlasDataMap;\n        };\n        Object.defineProperty(BaseFactory.prototype, \"clock\", {\n            /**\n             * - An Worldclock instance updated by engine.\n             * @version DragonBones 5.7\n             * @language en_US\n             */\n            /**\n             * - 由引擎驱动的 WorldClock 实例。\n             * @version DragonBones 5.7\n             * @language zh_CN\n             */\n            get: function () {\n                return this._dragonBones.clock;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseFactory.prototype, \"dragonBones\", {\n            /**\n             * @private\n             */\n            get: function () {\n                return this._dragonBones;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * - Deprecated, please refer to {@link #replaceSkin}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #replaceSkin}。\n         * @deprecated\n         * @language zh_CN\n         */\n        BaseFactory.prototype.changeSkin = function (armature, skin, exclude) {\n            if (exclude === void 0) { exclude = null; }\n            return this.replaceSkin(armature, skin, false, exclude);\n        };\n        /**\n         * - Deprecated, please refer to {@link #replaceAnimation}.\n         * @deprecated\n         * @language en_US\n         */\n        /**\n         * - 已废弃，请参考 {@link #replaceAnimation}。\n         * @deprecated\n         * @language zh_CN\n         */\n        BaseFactory.prototype.copyAnimationsToArmature = function (toArmature, fromArmatreName, fromSkinName, fromDragonBonesDataName, replaceOriginalAnimation) {\n            if (fromSkinName === void 0) { fromSkinName = \"\"; }\n            if (fromDragonBonesDataName === void 0) { fromDragonBonesDataName = \"\"; }\n            if (replaceOriginalAnimation === void 0) { replaceOriginalAnimation = true; }\n            // tslint:disable-next-line:no-unused-expression\n            fromSkinName;\n            var armatureData = this.getArmatureData(fromArmatreName, fromDragonBonesDataName);\n            if (!armatureData) {\n                return false;\n            }\n            return this.replaceAnimation(toArmature, armatureData, replaceOriginalAnimation);\n        };\n        BaseFactory._objectParser = null;\n        BaseFactory._binaryParser = null;\n        return BaseFactory;\n    }());\n    dragonBones.BaseFactory = BaseFactory;\n    /**\n     * @internal\n     */\n    var BuildArmaturePackage = /** @class */ (function () {\n        function BuildArmaturePackage() {\n            this.dataName = \"\";\n            this.textureAtlasName = \"\";\n            this.skin = null;\n        }\n        return BuildArmaturePackage;\n    }());\n    dragonBones.BuildArmaturePackage = BuildArmaturePackage;\n})(dragonBones || (dragonBones = {}));\n\n(function(dragonBones){\n\n        /**\n     * @internal\n     * @private\n     */\n    dragonBones.BinaryOffset = {\n        WeigthBoneCount : 0,\n        WeigthFloatOffset : 1,\n        WeigthBoneIndices : 2,\n        MeshVertexCount : 0,\n        MeshTriangleCount : 1,\n        MeshFloatOffset : 2,\n        MeshWeightOffset : 3,\n        MeshVertexIndices : 4,\n        TimelineScale : 0,\n        TimelineOffset : 1,\n        TimelineKeyFrameCount : 2,\n        TimelineFrameValueCount : 3,\n        TimelineFrameValueOffset : 4,\n        TimelineFrameOffset : 5,\n        FramePosition : 0,\n        FrameTweenType : 1,\n        FrameTweenEasingOrCurveSampleCount : 2,\n        FrameCurveSamples : 3,\n        DeformMeshOffset : 0,\n        DeformCount : 1,\n        DeformValueCount : 2,\n        DeformValueOffset : 3,\n        DeformFloatOffset : 4,\n    }\n    /**\n     * @internal\n     * @private\n     */\n    dragonBones.ArmatureType= {\n        Armature : 0,\n        MovieClip : 1,\n        Stage : 2,\n    }\n    /**\n     * @internal\n     * @private\n     */\n    dragonBones.BoneType ={\n        Bone : 0,\n        Surface : 1,\n    }\n    /**\n     * @private\n     */\n    dragonBones.DisplayType = {\n        Image : 0,\n        Armature : 1,\n        Mesh : 2,\n        BoundingBox : 3,\n    }\n    /**\n     * - Bounding box type.\n     * @version DragonBones 5.0\n     * @language en_US\n     */\n    /**\n     * - 边界框类型。\n     * @version DragonBones 5.0\n     * @language zh_CN\n     */\n    dragonBones.BoundingBoxType ={\n        Rectangle : 0,\n        Ellipse : 1,\n        Polygon : 2,\n    }\n    /**\n     * @internal\n     * @private\n     */\n    dragonBones.ActionType = {\n        Play : 0,\n        Stop : 1,\n        GotoAndPlay : 2,\n        GotoAndStop : 3,\n        FadeIn : 4,\n        FadeOut : 5,\n        Frame : 10,\n        Sound : 11,\n    }\n    /**\n     * @internal\n     * @private\n     */\n    dragonBones.BlendMode= {\n        Normal : 0,\n        Add : 1,\n        Alpha : 2,\n        Darken : 3,\n        Difference : 4,\n        Erase : 5,\n        HardLight : 6,\n        Invert : 7,\n        Layer : 8,\n        Lighten : 9,\n        Multiply : 10,\n        Overlay : 11,\n        Screen : 12,\n        Subtract : 13,\n    }\n    /**\n     * @internal\n     * @private\n     */\n    dragonBones.TweenType = {\n        None : 0,\n        Line : 1,\n        Curve : 2,\n        QuadIn : 3,\n        QuadOut : 4,\n        QuadInOut : 5,\n    }\n    /**\n     * @internal\n     * @private\n     */\n    dragonBones.TimelineType ={\n        Action : 0,\n        ZOrder : 1,\n        BoneAll : 10,\n        BoneTranslate : 11,\n        BoneRotate : 12,\n        BoneScale : 13,\n        Surface : 50,\n        SlotDisplay : 20,\n        SlotColor : 21,\n        SlotFFD : 22,\n        IKConstraint : 30,\n        AnimationTime : 40,\n        AnimationWeight : 41,\n    }\n\n})(dragonBones || (dragonBones = {}));\n\n\n// auto generated\nexport const DragonBones = dragonBones.DragonBones;\nexport const BaseObject = dragonBones.BaseObject;\nexport const Matrix = dragonBones.Matrix;\nexport const Transform = dragonBones.Transform;\nexport const ColorTransform = dragonBones.ColorTransform;\nexport const Point = dragonBones.Point;\nexport const Rectangle = dragonBones.Rectangle;\nexport const UserData = dragonBones.UserData;\nexport const ActionData = dragonBones.ActionData;\nexport const DragonBonesData = dragonBones.DragonBonesData;\nexport const ArmatureData = dragonBones.ArmatureData;\nexport const BoneData = dragonBones.BoneData;\nexport const SurfaceData = dragonBones.SurfaceData;\nexport const SlotData = dragonBones.SlotData;\nexport const ConstraintData = dragonBones.ConstraintData;\nexport const IKConstraintData = dragonBones.IKConstraintData;\nexport const PathConstraintData = dragonBones.PathConstraintData;\nexport const CanvasData = dragonBones.CanvasData;\nexport const SkinData = dragonBones.SkinData;\nexport const VerticesData = dragonBones.VerticesData;\nexport const DisplayData = dragonBones.DisplayData;\nexport const ImageDisplayData = dragonBones.ImageDisplayData;\nexport const ArmatureDisplayData = dragonBones.ArmatureDisplayData;\nexport const MeshDisplayData = dragonBones.MeshDisplayData;\nexport const BoundingBoxDisplayData = dragonBones.BoundingBoxDisplayData;\nexport const PathDisplayData = dragonBones.PathDisplayData;\nexport const WeightData = dragonBones.WeightData;\nexport const BoundingBoxData = dragonBones.BoundingBoxData;\nexport const RectangleBoundingBoxData = dragonBones.RectangleBoundingBoxData;\nexport const EllipseBoundingBoxData = dragonBones.EllipseBoundingBoxData;\nexport const PolygonBoundingBoxData = dragonBones.PolygonBoundingBoxData;\nexport const AnimationData = dragonBones.AnimationData;\nexport const TimelineData = dragonBones.TimelineData;\nexport const AnimationConfig = dragonBones.AnimationConfig;\nexport const TextureAtlasData = dragonBones.TextureAtlasData;\nexport const TextureData = dragonBones.TextureData;\nexport const DeformVertices = dragonBones.DeformVertices;\nexport const Armature = dragonBones.Armature;\nexport const TransformObject = dragonBones.TransformObject;\nexport const Bone = dragonBones.Bone;\nexport const Surface = dragonBones.Surface;\nexport const Slot = dragonBones.Slot;\nexport const Constraint = dragonBones.Constraint;\nexport const IKConstraint = dragonBones.IKConstraint;\nexport const PathConstraint = dragonBones.PathConstraint;\nexport const WorldClock = dragonBones.WorldClock;\nexport const Animation = dragonBones.Animation;\nexport const AnimationState = dragonBones.AnimationState;\nexport const BonePose = dragonBones.BonePose;\nexport const BlendState = dragonBones.BlendState;\nexport const TimelineState = dragonBones.TimelineState;\nexport const TweenTimelineState = dragonBones.TweenTimelineState;\nexport const BoneTimelineState = dragonBones.BoneTimelineState;\nexport const SlotTimelineState = dragonBones.SlotTimelineState;\nexport const ConstraintTimelineState = dragonBones.ConstraintTimelineState;\nexport const ActionTimelineState = dragonBones.ActionTimelineState;\nexport const ZOrderTimelineState = dragonBones.ZOrderTimelineState;\nexport const BoneAllTimelineState = dragonBones.BoneAllTimelineState;\nexport const BoneTranslateTimelineState = dragonBones.BoneTranslateTimelineState;\nexport const BoneRotateTimelineState = dragonBones.BoneRotateTimelineState;\nexport const BoneScaleTimelineState = dragonBones.BoneScaleTimelineState;\nexport const SurfaceTimelineState = dragonBones.SurfaceTimelineState;\nexport const SlotDislayTimelineState = dragonBones.SlotDislayTimelineState;\nexport const SlotColorTimelineState = dragonBones.SlotColorTimelineState;\nexport const DeformTimelineState = dragonBones.DeformTimelineState;\nexport const IKConstraintTimelineState = dragonBones.IKConstraintTimelineState;\nexport const AnimationTimelineState = dragonBones.AnimationTimelineState;\nexport const EventObject = dragonBones.EventObject;\nexport const DataParser = dragonBones.DataParser;\nexport const ObjectDataParser = dragonBones.ObjectDataParser;\nexport const ActionFrame = dragonBones.ActionFrame;\nexport const BinaryDataParser = dragonBones.BinaryDataParser;\nexport const BaseFactory = dragonBones.BaseFactory;\nexport const BuildArmaturePackage = dragonBones.BuildArmaturePackage;\nexport const BinaryOffset = dragonBones.BinaryOffset;\nexport const ArmatureType = dragonBones.ArmatureType;\nexport const BoneType = dragonBones.BoneType;\nexport const DisplayType = dragonBones.DisplayType;\nexport const BoundingBoxType = dragonBones.BoundingBoxType;\nexport const ActionType = dragonBones.ActionType;\nexport const BlendMode = dragonBones.BlendMode;\nexport const TweenType = dragonBones.TweenType;\nexport const TimelineType = dragonBones.TimelineType;\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Armature, BlendMode, Matrix } from '@cocos/dragonbones-js';\r\nimport { Texture2D } from '../asset/assets';\r\nimport { Color, Mat4 } from '../core';\r\nimport { CCArmatureDisplay } from './CCArmatureDisplay';\r\nimport { CCFactory } from './CCFactory';\r\nimport { CCSlot } from './CCSlot';\r\n\r\nconst MaxCacheTime = 30;\r\nconst FrameTime = 1 / 60;\r\n\r\nconst _vertices: number[] = [];\r\nconst _indices: number[] = [];\r\nlet _boneInfoOffset = 0;\r\nlet _indexOffset = 0;\r\nlet _vfOffset = 0;\r\nlet _preTexUrl: string | null = null;\r\nlet _preBlendMode: BlendMode | null = null;\r\nlet _segVCount = 0;\r\nlet _segICount = 0;\r\nlet _segOffset = 0;\r\nlet _colorOffset = 0;\r\nlet _preColor = 0;\r\nlet _x: number;\r\nlet _y: number;\r\n// x y u v c1\r\nconst PER_VERTEX_SIZE = 5;\r\n// x y z / u v / r g b a\r\nconst EXPORT_VERTEX_SIZE = 9;\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private interface.\r\n */\r\nexport interface ArmatureInfo {\r\n    curAnimationCache: AnimationCache | null;\r\n    armature: Armature;\r\n    animationsCache: { [key: string]: AnimationCache };\r\n}\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private interface.\r\n */\r\nexport interface ArmatureFrame {\r\n    segments: ArmatureFrameSegment[];\r\n    colors: ArmatureFrameColor[];\r\n    boneInfos: ArmatureFrameBoneInfo[];\r\n    vertices: Float32Array;\r\n    uintVert: Uint32Array;\r\n    indices: Uint16Array;\r\n}\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private interface.\r\n */\r\nexport interface ArmatureFrameBoneInfo {\r\n    globalTransformMatrix: Matrix;\r\n}\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private interface.\r\n */\r\nexport interface ArmatureFrameColor {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n    a: number;\r\n    vfOffset?: number;\r\n}\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private interface.\r\n */\r\nexport interface ArmatureFrameSegment {\r\n    indexCount: number;\r\n    vfCount: number;\r\n    vertexCount: number;\r\n    tex: Texture2D;\r\n    blendMode: BlendMode;\r\n}\r\n\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private class.\r\n * @en Cache all frames in an animation.\r\n * @zh 缓存所有动画帧。\r\n */\r\nexport class AnimationCache {\r\n    public maxVertexCount = 0;\r\n    public maxIndexCount = 0;\r\n\r\n    _privateMode = false;\r\n    _inited = false;\r\n    _invalid = true;\r\n    _enableCacheAttachedInfo = false;\r\n    frames: SafeArray<ArmatureFrame> = [];\r\n    totalTime = 0;\r\n    isCompleted = false;\r\n    _frameIdx = -1;\r\n\r\n    _armatureInfo: ArmatureInfo | null = null;\r\n    _animationName: string | null = null;\r\n    _tempSegments: ArmatureFrameSegment[] | null = null;\r\n    _tempColors: ArmatureFrameColor[] | null = null;\r\n    _tempBoneInfos: ArmatureFrameBoneInfo[] | null = null;\r\n\r\n    constructor () {\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     * @en Initialization.\r\n     * @zh 初始化。\r\n     * @param armatureInfo @en Armature info. @zh 龙骨信息。\r\n     * @param animationName @en Animation name. @zh 动画名称。\r\n     */\r\n    init (armatureInfo: ArmatureInfo, animationName: string): void {\r\n        this._inited = true;\r\n        this._armatureInfo = armatureInfo;\r\n        this._animationName = animationName;\r\n    }\r\n\r\n    /**\r\n     * @en Clears all animation frames cached.\r\n     * @zh 清除所有缓存动画帧。\r\n     */\r\n    clear (): void {\r\n        this._inited = false;\r\n        for (let i = 0, n = this.frames.length; i < n; i++) {\r\n            const frame = this.frames[i]!;\r\n            frame.segments.length = 0;\r\n        }\r\n        this.invalidAllFrame();\r\n    }\r\n    /**\r\n     * @en Start to play cached frames.\r\n     * @zh 开始播放缓存动画帧。\r\n     */\r\n    begin (): void {\r\n        if (!this._invalid) return;\r\n\r\n        const armatureInfo = this._armatureInfo!;\r\n        const curAnimationCache = armatureInfo.curAnimationCache;\r\n        if (curAnimationCache && curAnimationCache !== this) {\r\n            if (this._privateMode) {\r\n                curAnimationCache.invalidAllFrame();\r\n            } else {\r\n                curAnimationCache.updateToFrame();\r\n            }\r\n        }\r\n        const armature = armatureInfo.armature;\r\n        const animation = armature.animation;\r\n        animation.play(this._animationName, 1);\r\n\r\n        armatureInfo.curAnimationCache = this;\r\n        this._invalid = false;\r\n        this._frameIdx = -1;\r\n        this.totalTime = 0;\r\n        this.isCompleted = false;\r\n    }\r\n    /**\r\n     * @en Complete to play cached frames.\r\n     * @zh 完成播放缓存动画帧。\r\n     */\r\n    end (): void {\r\n        if (!this._needToUpdate()) {\r\n            this._armatureInfo!.curAnimationCache = null;\r\n            this.frames.length = this._frameIdx + 1;\r\n            this.isCompleted = true;\r\n        }\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _needToUpdate (toFrameIdx?: number): boolean {\r\n        const armatureInfo = this._armatureInfo!;\r\n        const armature = armatureInfo.armature;\r\n        const animation = armature.animation;\r\n        return !animation.isCompleted\r\n            && this.totalTime < MaxCacheTime\r\n            && (toFrameIdx === undefined || this._frameIdx < toFrameIdx);\r\n    }\r\n    /**\r\n     * @en Update to specified animation frame.\r\n     * @zh 更新动画到指定帧序列。\r\n     * @param toFrameIdx @en Frame index. @zh 帧序列。\r\n     */\r\n    updateToFrame (toFrameIdx?: number): void {\r\n        if (!this._inited) return;\r\n\r\n        this.begin();\r\n\r\n        if (!this._needToUpdate(toFrameIdx)) return;\r\n\r\n        const armatureInfo = this._armatureInfo!;\r\n        const armature = armatureInfo.armature;\r\n\r\n        do {\r\n            // Solid update frame rate 1/60.\r\n            armature.advanceTime(FrameTime);\r\n            this._frameIdx++;\r\n            this.updateFrame(armature, this._frameIdx);\r\n            this.totalTime += FrameTime;\r\n        } while (this._needToUpdate(toFrameIdx));\r\n\r\n        this.end();\r\n    }\r\n    /**\r\n     * @en Check if initialized or not.\r\n     * @zh 检查是否已初始化。\r\n     * @returns @en True means has been initialized, false means not.\r\n     *          @zh True 表示已初始化完成，false 表示还没初始化。\r\n     */\r\n    isInited (): boolean {\r\n        return this._inited;\r\n    }\r\n    /**\r\n     * @en Check if current state is invalid.\r\n     * @zh 检查当前状态是否为无效。\r\n     * @returns @zh True means invalid, false means valid.\r\n     *          @en True 表示当前数据为无效状态，false 表示当前数据有效。\r\n     */\r\n    isInvalid (): boolean {\r\n        return this._invalid;\r\n    }\r\n    /**\r\n     * @en Mark all cached frames as invalid.\r\n     * @zh 将所有缓存帧标记为无效的。\r\n     */\r\n    invalidAllFrame (): void {\r\n        this.isCompleted = false;\r\n        this._invalid = true;\r\n    }\r\n    /**\r\n     * @en Update all cached frames.\r\n     * @zh 更新所有缓存帧。\r\n     */\r\n    updateAllFrame (): void {\r\n        this.invalidAllFrame();\r\n        this.updateToFrame();\r\n    }\r\n    /**\r\n     * @en Enable attached information.\r\n     * @zh 启用挂载附着信息。\r\n     */\r\n    enableCacheAttachedInfo (): void {\r\n        if (!this._enableCacheAttachedInfo) {\r\n            this._enableCacheAttachedInfo = true;\r\n            this.invalidAllFrame();\r\n        }\r\n    }\r\n    /**\r\n     * @en Update to specified animation frame of armature.\r\n     * @zh 更新龙骨动画到指定帧序列。\r\n     * @param armature @en Armature. @zh 指定骨架。\r\n     * @param index @en Frame index. @zh 帧序列。\r\n     */\r\n    updateFrame (armature, index): void {\r\n        _vfOffset = 0;\r\n        _boneInfoOffset = 0;\r\n        _indexOffset = 0;\r\n        _preTexUrl = null;\r\n        _preBlendMode = null;\r\n        _segVCount = 0;\r\n        _segICount = 0;\r\n        _segOffset = 0;\r\n        _colorOffset = 0;\r\n        _preColor = 0;\r\n\r\n        this.frames[index] = this.frames[index] || {\r\n            segments: [],\r\n            colors: [],\r\n            boneInfos: [],\r\n            vertices: new Float32Array(),\r\n            uintVert: new Uint32Array(),\r\n            indices: new Uint16Array(),\r\n        };\r\n        const frame = this.frames[index]!;\r\n\r\n        const segments = this._tempSegments = frame.segments;\r\n        const colors = this._tempColors = frame.colors;\r\n        const boneInfos = this._tempBoneInfos = frame.boneInfos;\r\n\r\n        this._traverseArmature(armature, 1.0);\r\n        // At last must handle pre color and segment.\r\n        // Because vertex count will right at the end.\r\n        // Handle pre color.\r\n        if (_colorOffset > 0) {\r\n            colors[_colorOffset - 1].vfOffset = _vfOffset;\r\n        }\r\n        colors.length = _colorOffset;\r\n        boneInfos.length = _boneInfoOffset;\r\n\r\n        // Handle pre segment\r\n        const preSegOffset = _segOffset - 1;\r\n        if (preSegOffset >= 0) {\r\n            if (_segICount > 0) {\r\n                const preSegInfo = segments[preSegOffset];\r\n                preSegInfo.indexCount = _segICount;\r\n                preSegInfo.vfCount = _segVCount * EXPORT_VERTEX_SIZE;\r\n                preSegInfo.vertexCount = _segVCount;\r\n                segments.length = _segOffset;\r\n            } else {\r\n                segments.length = _segOffset - 1;\r\n            }\r\n        }\r\n\r\n        // Discard all segments.\r\n        if (segments.length === 0) return;\r\n\r\n        // Fill vertices\r\n        let vertices = frame.vertices;\r\n        const vertexCount = _vfOffset / PER_VERTEX_SIZE;\r\n        const copyOutVerticeSize = vertexCount * EXPORT_VERTEX_SIZE;\r\n        if (!vertices || vertices.length < _vfOffset) {\r\n            vertices = frame.vertices = new Float32Array(copyOutVerticeSize);\r\n        }\r\n        let colorI32: number;\r\n        for (let i = 0, j = 0; i < copyOutVerticeSize;) {\r\n            vertices[i] = _vertices[j++]; // x\r\n            vertices[i + 1] = _vertices[j++]; // y\r\n            vertices[i + 3] = _vertices[j++]; // u\r\n            vertices[i + 4] = _vertices[j++]; // v\r\n            colorI32 = _vertices[j++];\r\n            vertices[i + 5] = (colorI32 & 0xff) / 255.0;\r\n            vertices[i + 6] = ((colorI32 >> 8) & 0xff) / 255.0;\r\n            vertices[i + 7] = ((colorI32 >> 16) & 0xff) / 255.0;\r\n            vertices[i + 8] = ((colorI32 >> 24) & 0xff) / 255.0;\r\n            i += EXPORT_VERTEX_SIZE;\r\n        }\r\n\r\n        // Fill indices\r\n        let indices = frame.indices;\r\n        if (!indices || indices.length < _indexOffset) {\r\n            indices = frame.indices = new Uint16Array(_indexOffset);\r\n        }\r\n\r\n        for (let i = 0; i < _indexOffset; i++) {\r\n            indices[i] = _indices[i];\r\n        }\r\n\r\n        frame.vertices = vertices;\r\n        frame.indices = indices;\r\n\r\n        this.maxVertexCount = vertexCount > this.maxVertexCount ? vertexCount : this.maxVertexCount;\r\n        this.maxIndexCount = indices.length > this.maxIndexCount ? indices.length : this.maxIndexCount;\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _traverseArmature (armature: Armature, parentOpacity): void {\r\n        const colors = this._tempColors!;\r\n        const segments = this._tempSegments!;\r\n        const boneInfos = this._tempBoneInfos!;\r\n        const slots = armature._slots;\r\n        let slotVertices: number[];\r\n        let slotIndices: number[];\r\n        let slot: CCSlot;\r\n        let slotMatrix: Mat4;\r\n        let slotColor: Color;\r\n        let colorVal: number;\r\n        let texture: Texture2D | null;\r\n        let preSegOffset: number;\r\n        let preSegInfo: ArmatureFrameSegment;\r\n        const bones = armature._bones;\r\n\r\n        if (this._enableCacheAttachedInfo) {\r\n            for (let i = 0, l = bones.length; i < l; i++, _boneInfoOffset++) {\r\n                const bone = bones[i];\r\n                let boneInfo = boneInfos[_boneInfoOffset];\r\n                if (!boneInfo) {\r\n                    boneInfo = boneInfos[_boneInfoOffset] = {\r\n                        globalTransformMatrix: new Matrix(),\r\n                    };\r\n                }\r\n                const boneMat = bone.globalTransformMatrix;\r\n                const cacheBoneMat = boneInfo.globalTransformMatrix;\r\n                cacheBoneMat.copyFrom(boneMat);\r\n            }\r\n        }\r\n\r\n        for (let i = 0, l = slots.length; i < l; i++) {\r\n            slot = slots[i] as CCSlot;\r\n            if (!slot._visible || !slot._displayData) continue;\r\n\r\n            slot.updateWorldMatrix();\r\n            slotColor = slot._color;\r\n\r\n            if (slot.childArmature) {\r\n                this._traverseArmature(slot.childArmature, parentOpacity * slotColor.a / 255);\r\n                continue;\r\n            }\r\n\r\n            texture = slot.getTexture();\r\n            if (!texture) continue;\r\n\r\n            if (_preTexUrl !== texture.nativeUrl || _preBlendMode !== slot._blendMode) {\r\n                _preTexUrl = texture.nativeUrl;\r\n                _preBlendMode = slot._blendMode;\r\n                // Handle pre segment.\r\n                preSegOffset = _segOffset - 1;\r\n                if (preSegOffset >= 0) {\r\n                    if (_segICount > 0) {\r\n                        preSegInfo = segments[preSegOffset];\r\n                        preSegInfo.indexCount = _segICount;\r\n                        preSegInfo.vertexCount = _segVCount;\r\n                        preSegInfo.vfCount = _segVCount * EXPORT_VERTEX_SIZE;\r\n                    } else {\r\n                        // Discard pre segment.\r\n                        _segOffset--;\r\n                    }\r\n                }\r\n                // Handle now segment.\r\n                segments[_segOffset] = {\r\n                    tex: texture,\r\n                    blendMode: slot._blendMode,\r\n                    indexCount: 0,\r\n                    vertexCount: 0,\r\n                    vfCount: 0,\r\n                };\r\n                _segOffset++;\r\n                _segICount = 0;\r\n                _segVCount = 0;\r\n            }\r\n\r\n            colorVal = ((slotColor.a * parentOpacity << 24) >>> 0) + (slotColor.b << 16) + (slotColor.g << 8) + slotColor.r;\r\n\r\n            if (_preColor !== colorVal) {\r\n                _preColor = colorVal;\r\n                if (_colorOffset > 0) {\r\n                    colors[_colorOffset - 1].vfOffset = _vfOffset;\r\n                }\r\n                colors[_colorOffset++] = {\r\n                    r: slotColor.r,\r\n                    g: slotColor.g,\r\n                    b: slotColor.b,\r\n                    a: slotColor.a * parentOpacity,\r\n                    vfOffset: 0,\r\n                };\r\n            }\r\n\r\n            slotVertices = slot._localVertices;\r\n            slotIndices = slot._indices;\r\n\r\n            slotMatrix = slot._worldMatrix;\r\n\r\n            for (let j = 0, vl = slotVertices.length; j < vl;) {\r\n                _x = slotVertices[j++];\r\n                _y = slotVertices[j++];\r\n                _vertices[_vfOffset++] = _x * slotMatrix.m00 + _y * slotMatrix.m04 + slotMatrix.m12;\r\n                _vertices[_vfOffset++] = _x * slotMatrix.m01 + _y * slotMatrix.m05 + slotMatrix.m13;\r\n                _vertices[_vfOffset++] = slotVertices[j++];\r\n                _vertices[_vfOffset++] = slotVertices[j++];\r\n                _vertices[_vfOffset++] = colorVal;\r\n            }\r\n\r\n            // This place must use segment vertex count to calculate vertex offset.\r\n            // Assembler will calculate vertex offset again for different segment.\r\n            for (let ii = 0, il = slotIndices.length; ii < il; ii++) {\r\n                _indices[_indexOffset++] = _segVCount + slotIndices[ii];\r\n            }\r\n\r\n            _segICount += slotIndices.length;\r\n            _segVCount += slotVertices.length / 4;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @en Cached data of armature.\r\n * @zh 骨架缓存。\r\n */\r\nexport class ArmatureCache {\r\n    protected _privateMode = false;\r\n    protected _animationPool: Record<string, AnimationCache> = {};\r\n    protected _armatureCache: Record<string, ArmatureInfo> = {};\r\n\r\n    constructor () {\r\n    }\r\n    /**\r\n     * @en Enable private cache mode.\r\n     * @zh 启用私有缓存模式。\r\n     */\r\n    enablePrivateMode (): void {\r\n        this._privateMode = true;\r\n    }\r\n\r\n    /**\r\n     * @en If using private cache mode, all cached data will be destroyed when corresponding dragonbone nodes are destroyed.\r\n     * @zh 如果为私有缓存模式，cache 数据将随组件一起销毁。\r\n     */\r\n    dispose (): void {\r\n        for (const key in this._armatureCache) {\r\n            const armatureInfo = this._armatureCache[key];\r\n            if (armatureInfo) {\r\n                const armature = armatureInfo.armature;\r\n                if (armature) armature.dispose();\r\n            }\r\n        }\r\n        this._armatureCache = {};\r\n        this._animationPool = {};\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _removeArmature (armatureKey: string): void {\r\n        const armatureInfo = this._armatureCache[armatureKey];\r\n        const animationsCache = armatureInfo.animationsCache;\r\n        for (const aniKey in animationsCache) {\r\n            // Clear cache texture, and put cache into pool.\r\n            // No need to create TypedArray next time.\r\n            const animationCache = animationsCache[aniKey];\r\n            if (!animationCache) continue;\r\n            this._animationPool[`${armatureKey}#${aniKey}`] = animationCache;\r\n            animationCache.clear();\r\n        }\r\n\r\n        const armature = armatureInfo.armature;\r\n        if (armature) armature.dispose();\r\n        delete this._armatureCache[armatureKey];\r\n    }\r\n    /**\r\n     * @en When dragonbones assets be destroy, remove armature from dragonbones cache.\r\n     * @zh 当 dragonbones assets 销毁时，从 cache 中移除骨架。\r\n     */\r\n    resetArmature (uuid: string): void {\r\n        for (const armatureKey in this._armatureCache) {\r\n            if (armatureKey.indexOf(uuid) === -1) continue;\r\n            this._removeArmature(armatureKey);\r\n        }\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    getArmatureCache (armatureName: string, armatureKey: string, atlasUUID: string): Armature | null {\r\n        const armatureInfo = this._armatureCache[armatureKey];\r\n        let armature: Armature;\r\n        if (!armatureInfo) {\r\n            const factory = CCFactory.getInstance();\r\n            const proxy = factory.buildArmatureDisplay(armatureName, armatureKey, '', atlasUUID) as CCArmatureDisplay;\r\n            if (!proxy || !proxy._armature) return null;\r\n            armature = proxy._armature;\r\n            // If armature has child armature, can not be cache, because it's\r\n            // animation data can not be precompute.\r\n            if (!ArmatureCache.canCache(armature)) {\r\n                armature.dispose();\r\n                return null;\r\n            }\r\n\r\n            this._armatureCache[armatureKey] = {\r\n                armature,\r\n                // Cache all kinds of animation frame.\r\n                // When armature is dispose, clear all animation cache.\r\n                animationsCache: {},\r\n                curAnimationCache: null,\r\n            };\r\n        } else {\r\n            armature = armatureInfo.armature;\r\n        }\r\n        return armature;\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    getAnimationCache (armatureKey, animationName): AnimationCache | null {\r\n        const armatureInfo = this._armatureCache[armatureKey];\r\n        if (!armatureInfo) return null;\r\n\r\n        const animationsCache = armatureInfo.animationsCache;\r\n        return animationsCache[animationName];\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    initAnimationCache (armatureKey: string, animationName: string): AnimationCache | null {\r\n        if (!animationName) return null;\r\n\r\n        const armatureInfo = this._armatureCache[armatureKey];\r\n        const armature = armatureInfo && armatureInfo.armature;\r\n        if (!armature) return null;\r\n        const animation = armature.animation;\r\n        const hasAni = animation.hasAnimation(animationName);\r\n        if (!hasAni) return null;\r\n\r\n        const animationsCache = armatureInfo.animationsCache;\r\n        let animationCache = animationsCache[animationName];\r\n        if (!animationCache) {\r\n            // If cache exist in pool, then just use it.\r\n            const poolKey = `${armatureKey}#${animationName}`;\r\n            animationCache = this._animationPool[poolKey];\r\n            if (animationCache) {\r\n                delete this._animationPool[poolKey];\r\n            } else {\r\n                animationCache = new AnimationCache();\r\n                animationCache._privateMode = this._privateMode;\r\n            }\r\n            animationCache.init(armatureInfo, animationName);\r\n            animationsCache[animationName] = animationCache;\r\n        }\r\n        return animationCache;\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    invalidAnimationCache (armatureKey: string): void {\r\n        const armatureInfo = this._armatureCache[armatureKey];\r\n        const armature = armatureInfo && armatureInfo.armature;\r\n        if (!armature) return;\r\n\r\n        const animationsCache = armatureInfo.animationsCache;\r\n        for (const aniKey in animationsCache) {\r\n            const animationCache = animationsCache[aniKey];\r\n            animationCache.invalidAllFrame();\r\n        }\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    updateAnimationCache (armatureKey: string, animationName: string): void {\r\n        if (animationName) {\r\n            const animationCache = this.initAnimationCache(armatureKey, animationName);\r\n            if (!animationCache) return;\r\n            animationCache.updateAllFrame();\r\n        } else {\r\n            const armatureInfo = this._armatureCache[armatureKey];\r\n            const armature = armatureInfo && armatureInfo.armature;\r\n            if (!armature) return;\r\n\r\n            const animationsCache = armatureInfo.animationsCache;\r\n            for (const aniKey in animationsCache) {\r\n                const animationCache = animationsCache[aniKey];\r\n                animationCache.updateAllFrame();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    static canCache (armature: Armature): boolean {\r\n        const slots = armature._slots;\r\n        for (let i = 0, l = slots.length; i < l; i++) {\r\n            const slot = slots[i];\r\n            if (slot.childArmature) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static FrameTime = FrameTime;\r\n    static sharedCache = new ArmatureCache();\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BaseObject, TextureAtlasData, TextureData } from '@cocos/dragonbones-js';\r\nimport { SpriteFrame } from '../2d';\r\nimport { TextureBase } from '../asset/assets/texture-base';\r\nimport { Rect, _decorator } from '../core';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * @en The texture atlas of dragonbones.\r\n * @zh 龙骨组件中的纹理图集资源。\r\n */\r\n@ccclass('dragonBones.CCTextureAtlasData')\r\nexport class CCTextureAtlasData extends TextureAtlasData {\r\n    /**\r\n     * @en The texture used for rendering.\r\n     * @zh 实际用于渲染显示的纹理对象。\r\n     */\r\n    get renderTexture (): TextureBase | null {\r\n        return this._renderTexture;\r\n    }\r\n\r\n    set renderTexture (value) {\r\n        this._renderTexture = value;\r\n        if (value) {\r\n            for (const k in this.textures) {\r\n                const textureData = this.textures[k] as CCTextureData;\r\n                if (!textureData.spriteFrame) {\r\n                    let rect: Rect | null = null;\r\n                    if (textureData.rotated) {\r\n                        rect = new Rect(textureData.region.x, textureData.region.y,\r\n                            textureData.region.height, textureData.region.width);\r\n                    } else {\r\n                        rect = new Rect(textureData.region.x, textureData.region.y,\r\n                            textureData.region.width, textureData.region.height);\r\n                        // }\r\n                        // const offset = new Vec2(0, 0);\r\n                        // const size = new Size(rect.width, rect.height);\r\n                        // setTexture(value, rect, false, offset, size);\r\n                        textureData.spriteFrame = new SpriteFrame();\r\n                        textureData.spriteFrame.texture = value;\r\n                        textureData.spriteFrame.rect = rect;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (const k in this.textures) {\r\n                const textureData = this.textures[k] as CCTextureData;\r\n                textureData.spriteFrame = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _renderTexture: TextureBase | null = null;\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    static toString (): string {\r\n        return '[class dragonBones.CCTextureAtlasData]';\r\n    }\r\n    /**\r\n     * @en Create texture data, get data from the object pool.\r\n     * @zh 创建纹理数据，从对象池获取。\r\n     */\r\n    createTexture (): CCTextureData {\r\n        return BaseObject.borrowObject(CCTextureData);\r\n    }\r\n    /**\r\n     * @en Clear associated texture resources.\r\n     * @zh 清除关联的纹理。\r\n     */\r\n    _onClear (): void {\r\n        super._onClear();\r\n        this.renderTexture = null;\r\n    }\r\n}\r\n/**\r\n * @en Texture data used in dragonbones.\r\n * @zh 龙骨资源中的纹理数据。\r\n */\r\n@ccclass('dragonBones.CCTextureData')\r\nexport class CCTextureData extends TextureData {\r\n    /**\r\n     * @en SpriteFrame assets.\r\n     * @zh SpriteFrame 资源。\r\n     */\r\n    spriteFrame: SpriteFrame | null = null\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    static toString (): string {\r\n        return '[class dragonBones.CCTextureData]';\r\n    }\r\n    /**\r\n     * @en Clear SpriteFrame assets.\r\n     * @zh 清除关联的SpriteFrame 资源。\r\n     */\r\n    _onClear (): void {\r\n        super._onClear();\r\n        this.spriteFrame = null;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BoneType, BinaryOffset, Slot } from '@cocos/dragonbones-js';\r\nimport { Texture2D } from '../asset/assets';\r\nimport { Color, Mat4, _decorator } from '../core';\r\nimport { CCTextureData } from './CCTextureData';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n// @skipLibCheck\r\n/**\r\n * @en Slots attach on bones，to control the display status and attributes of the display object.\r\n * @zh 插槽附着在骨骼上，控制显示对象的显示状态和属性。\r\n*/\r\n@ccclass('dragonBones.CCSlot')\r\nexport class CCSlot extends Slot {\r\n    static toString (): string {\r\n        return '[class dragonBones.CCSlot]';\r\n    }\r\n\r\n    /**\r\n     * @en Vertices in local coordinate system.\r\n     * @zh 局部坐标顶点数据。\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    _localVertices: number[];\r\n\r\n    /**\r\n     * @en Indices array of vertex data.\r\n     * @zh 顶点数组索引。\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    _indices: number[];\r\n\r\n    /**\r\n     * @en Local transformation matrix\r\n     * @zh 局部坐标系变换矩阵\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    _matrix: Mat4;\r\n\r\n    /**\r\n     * @en World transformation matrix\r\n     * @zh 世界坐标系变换矩阵\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _worldMatrix: Mat4;\r\n\r\n    protected _worldMatrixDirty: boolean;\r\n\r\n    /**\r\n     * @en Color setting on a slot\r\n     * @zh 设置在 Slot 上的颜色\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    _color: Color;\r\n\r\n    constructor () {\r\n        super();\r\n        this._localVertices = [];\r\n        this._indices = [];\r\n        this._matrix = new Mat4();\r\n        this._worldMatrix = new Mat4();\r\n        this._worldMatrixDirty = true;\r\n        this._visible = false;\r\n        this._color = new Color();\r\n    }\r\n\r\n    /**\r\n     * @en Get a Texture2D object from _textureData.\r\n     * @zh 获取2D纹理对象。\r\n     * @returns @en A texture instance if _textureData is not null, otherwise returns null.\r\n     *          @zh 若 _textureData 为 null，将返回 null。\r\n     */\r\n    getTexture (): Texture2D | null {\r\n        if (this._textureData) {\r\n            const sp = (this._textureData as any).spriteFrame;\r\n            const tex = sp.texture as Texture2D;\r\n            return tex;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @en Calculates world matrix of slot.\r\n     * @zh 计算插槽世界矩阵。\r\n     */\r\n    calculWorldMatrix (): void {\r\n        const parent = this._armature._parent as CCSlot;\r\n        if (parent) {\r\n            this._mulMat(this._worldMatrix, parent._worldMatrix, this._matrix);\r\n            // Mat4.multiply(this._worldMatrix, parent._worldMatrix, this._matrix);\r\n        } else {\r\n            Mat4.copy(this._worldMatrix, this._matrix);\r\n        }\r\n        this._worldMatrixDirty = false;\r\n    }\r\n    /**\r\n     * @en Resets slot data and state.\r\n     * @zh 重置插槽数据和状态。\r\n     */\r\n    _onClear (): void {\r\n        super._onClear();\r\n        this._localVertices.length = 0;\r\n        this._indices.length = 0;\r\n        Mat4.identity(this._matrix);\r\n        Mat4.identity(this._worldMatrix);\r\n        this._worldMatrixDirty = true;\r\n        this._color = new Color();\r\n        this._visible = false;\r\n    }\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _onUpdateDisplay (): void {\r\n    }\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _initDisplay (value): void {\r\n    }\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _addDisplay (): void {\r\n        this._visible = true;\r\n    }\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _replaceDisplay (value): void {\r\n    }\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _removeDisplay (): void {\r\n        this._visible = false;\r\n    }\r\n\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _disposeDisplay (object): void {\r\n    }\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _updateVisible (): void {\r\n        this._visible = this.parent.visible;\r\n    }\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _updateGlueMesh (): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * just for adapt to dragonbones api,no need to do any thing\r\n     * @deprecated Since v3.7.2, this interface that will be removed in the future.\r\n     */\r\n    _updateZOrder (): void {\r\n    }\r\n    /**\r\n     * @en Update the color blending mode of the slot.\r\n     * @zh 更新插槽的颜色混合模式。\r\n     */\r\n    _updateBlendMode (): void {\r\n        if (this._childArmature) {\r\n            const childSlots = this._childArmature.getSlots();\r\n            for (let i = 0, l = childSlots.length; i < l; i++) {\r\n                const slot = childSlots[i] as CCSlot;\r\n                slot._blendMode = this._blendMode;\r\n                slot._updateBlendMode();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @en Update the color of the slot.\r\n     * @zh 更新插槽的颜色。\r\n     */\r\n    _updateColor (): void {\r\n        const c = this._color;\r\n        c.r = this._colorTransform.redMultiplier * 255;\r\n        c.g = this._colorTransform.greenMultiplier * 255;\r\n        c.b = this._colorTransform.blueMultiplier * 255;\r\n        c.a = this._colorTransform.alphaMultiplier * 255;\r\n    }\r\n    /**\r\n     * @en Update one frame of slot vertex data.\r\n     * @zh 更新一帧插槽顶点数据。\r\n     */\r\n    _updateFrame (): void {\r\n        this._indices.length = 0;\r\n        const indices = this._indices;\r\n        const localVertices = this._localVertices;\r\n        let indexOffset = 0;\r\n        let vfOffset = 0;\r\n\r\n        const currentTextureData = this._textureData as CCTextureData;\r\n        if (!this._display || this._displayIndex < 0 || !currentTextureData || !currentTextureData.spriteFrame) return;\r\n\r\n        const texture = currentTextureData.spriteFrame.texture;\r\n        const textureAtlasWidth = texture.width;\r\n        const textureAtlasHeight = texture.height;\r\n        const region = currentTextureData.region;\r\n\r\n        if (textureAtlasWidth === 0 || textureAtlasHeight === 0) {\r\n            console.error(`SpriteFrame ${currentTextureData.spriteFrame.name} incorrect size ${textureAtlasWidth} x ${textureAtlasHeight}`);\r\n            return;\r\n        }\r\n\r\n        const currentVerticesData = (this._deformVertices !== null && this._display === this._meshDisplay) ? this._deformVertices.verticesData : null;\r\n\r\n        if (currentVerticesData) {\r\n            const data = currentVerticesData.data;\r\n            const intArray = data.intArray;\r\n            const floatArray = data.floatArray;\r\n            const vertexCount = intArray[currentVerticesData.offset + BinaryOffset.MeshVertexCount];\r\n            const triangleCount = intArray[currentVerticesData.offset + BinaryOffset.MeshTriangleCount];\r\n            let vertexOffset: number = intArray[currentVerticesData.offset + BinaryOffset.MeshFloatOffset];\r\n\r\n            if (vertexOffset < 0) {\r\n                vertexOffset += 65536; // Fixed out of bouds bug.\r\n            }\r\n\r\n            const uvOffset = vertexOffset + vertexCount * 2;\r\n            const scale = this._armature._armatureData.scale;\r\n\r\n            for (let i = 0, l = vertexCount * 2; i < l; i += 2) {\r\n                localVertices[vfOffset++] = floatArray[vertexOffset + i] * scale;\r\n                localVertices[vfOffset++] = -floatArray[vertexOffset + i + 1] * scale;\r\n\r\n                if (currentVerticesData.rotated) {\r\n                    localVertices[vfOffset++] = (region.x + (1.0 - floatArray[uvOffset + i]) * region.width) / textureAtlasWidth;\r\n                    localVertices[vfOffset++] = (region.y + floatArray[uvOffset + i + 1] * region.height) / textureAtlasHeight;\r\n                } else {\r\n                    localVertices[vfOffset++] = (region.x + floatArray[uvOffset + i] * region.width) / textureAtlasWidth;\r\n                    localVertices[vfOffset++] = (region.y + floatArray[uvOffset + i + 1] * region.height) / textureAtlasHeight;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < triangleCount * 3; ++i) {\r\n                indices[indexOffset++] = intArray[currentVerticesData.offset + BinaryOffset.MeshVertexIndices + i];\r\n            }\r\n\r\n            localVertices.length = vfOffset;\r\n            indices.length = indexOffset;\r\n\r\n            const isSkinned = !!currentVerticesData.weight;\r\n            if (isSkinned) {\r\n                this._identityTransform();\r\n            }\r\n        } else {\r\n            const l = region.x / textureAtlasWidth;\r\n            const b = (region.y + region.height) / textureAtlasHeight;\r\n            const r = (region.x + region.width) / textureAtlasWidth;\r\n            const t = region.y / textureAtlasHeight;\r\n\r\n            localVertices[vfOffset++] = 0; // 0x\r\n            localVertices[vfOffset++] = 0; // 0y\r\n            localVertices[vfOffset++] = l; // 0u\r\n            localVertices[vfOffset++] = b; // 0v\r\n\r\n            localVertices[vfOffset++] = region.width; // 1x\r\n            localVertices[vfOffset++] = 0; // 1y\r\n            localVertices[vfOffset++] = r; // 1u\r\n            localVertices[vfOffset++] = b; // 1v\r\n\r\n            localVertices[vfOffset++] = 0; // 2x\r\n            localVertices[vfOffset++] = region.height; // 2y\r\n            localVertices[vfOffset++] = l; // 2u\r\n            localVertices[vfOffset++] = t; // 2v\r\n\r\n            localVertices[vfOffset++] = region.width; // 3x\r\n            localVertices[vfOffset++] = region.height; // 3y\r\n            localVertices[vfOffset++] = r; // 3u\r\n            localVertices[vfOffset++] = t; // 3v\r\n\r\n            indices[0] = 0;\r\n            indices[1] = 1;\r\n            indices[2] = 2;\r\n            indices[3] = 1;\r\n            indices[4] = 3;\r\n            indices[5] = 2;\r\n\r\n            localVertices.length = vfOffset;\r\n            indices.length = 6;\r\n        }\r\n\r\n        this._visibleDirty = true;\r\n        this._blendModeDirty = true;\r\n        this._colorDirty = true;\r\n    }\r\n    /**\r\n     * @en Update mesh data of slot.\r\n     * @zh 更新槽点的网格数据。\r\n     */\r\n    _updateMesh (): void {\r\n        const scale = this._armature._armatureData.scale;\r\n        const deformVertices = this._deformVertices.vertices;\r\n        const bones = this._deformVertices.bones;\r\n        const verticesData = this._deformVertices.verticesData;\r\n        const weightData = verticesData.weight;\r\n        const hasDeform = deformVertices.length > 0 && verticesData.inheritDeform;\r\n\r\n        const localVertices = this._localVertices;\r\n        if (weightData) {\r\n            const data = verticesData.data;\r\n            const intArray = data.intArray;\r\n            const floatArray = data.floatArray;\r\n            const vertexCount = intArray[verticesData.offset + BinaryOffset.MeshVertexCount];\r\n            let weightFloatOffset = intArray[weightData.offset + BinaryOffset.WeigthFloatOffset];\r\n\r\n            if (weightFloatOffset < 0) {\r\n                weightFloatOffset += 65536; // Fixed out of bouds bug\r\n            }\r\n\r\n            for (\r\n                let i = 0, iB = weightData.offset + BinaryOffset.WeigthBoneIndices + bones.length, iV = weightFloatOffset, iF = 0, lvi = 0;\r\n                i < vertexCount;\r\n                i++, lvi += 4\r\n            ) {\r\n                const boneCount = intArray[iB++];\r\n                let xG = 0.0;\r\n                let yG = 0.0;\r\n\r\n                for (let j = 0; j < boneCount; ++j) {\r\n                    const boneIndex = intArray[iB++];\r\n                    const bone = bones[boneIndex];\r\n\r\n                    if (bone !== null) {\r\n                        const matrix = bone.globalTransformMatrix;\r\n                        const weight = floatArray[iV++];\r\n                        let xL = floatArray[iV++] * scale;\r\n                        let yL = floatArray[iV++] * scale;\r\n\r\n                        if (hasDeform) {\r\n                            xL += deformVertices[iF++];\r\n                            yL += deformVertices[iF++];\r\n                        }\r\n\r\n                        xG += (matrix.a * xL + matrix.c * yL + matrix.tx) * weight;\r\n                        yG += (matrix.b * xL + matrix.d * yL + matrix.ty) * weight;\r\n                    }\r\n                }\r\n\r\n                localVertices[lvi] = xG;\r\n                localVertices[lvi + 1] = -yG;\r\n            }\r\n        } else if (hasDeform) {\r\n            const isSurface = this._parent._boneData.type !== BoneType.Bone;\r\n            const data = verticesData.data;\r\n            const intArray = data.intArray;\r\n            const floatArray = data.floatArray;\r\n            const vertexCount = intArray[verticesData.offset + BinaryOffset.MeshVertexCount];\r\n            let vertexOffset = intArray[verticesData.offset + BinaryOffset.MeshFloatOffset];\r\n\r\n            if (vertexOffset < 0) {\r\n                vertexOffset += 65536; // Fixed out of bouds bug.\r\n            }\r\n\r\n            for (let i = 0, l = vertexCount, lvi = 0; i < l; i++, lvi += 4) {\r\n                const x: number = floatArray[vertexOffset + i * 2] * scale + deformVertices[i * 2];\r\n                const y: number = floatArray[vertexOffset + i * 2 + 1] * scale + deformVertices[i * 2 + 1];\r\n\r\n                if (isSurface) {\r\n                    const matrix = this._parent._getGlobalTransformMatrix(x, y);\r\n                    localVertices[lvi] = matrix.a * x + matrix.c * y + matrix.tx;\r\n                    localVertices[lvi + 1] = -matrix.b * x + matrix.d * y + matrix.ty;\r\n                } else {\r\n                    localVertices[lvi] = x;\r\n                    localVertices[lvi + 1] = -y;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (weightData) {\r\n            this._identityTransform();\r\n        }\r\n    }\r\n    /**\r\n     * @en Reset current matrix to identity matrix.\r\n     * @zh 重置当前矩阵为单位矩阵。\r\n     */\r\n    _identityTransform (): void {\r\n        const m = this._matrix;\r\n        m.m00 = 1.0;\r\n        m.m01 = 0.0;\r\n        m.m04 = -0.0;\r\n        m.m05 = -1.0;\r\n        m.m12 = 0.0;\r\n        m.m13 = 0.0;\r\n        this._worldMatrixDirty = true;\r\n    }\r\n    /**\r\n     * @en Update transform of slot.\r\n     * @zh 更新插槽的变换。\r\n     */\r\n    _updateTransform (): void {\r\n        const m = this._matrix;\r\n        m.m00 = this.globalTransformMatrix.a;\r\n        m.m01 = this.globalTransformMatrix.b;\r\n        m.m04 = -this.globalTransformMatrix.c;\r\n        m.m05 = -this.globalTransformMatrix.d;\r\n\r\n        if (this._childArmature) {\r\n            m.m12 = this.globalTransformMatrix.tx;\r\n            m.m13 = this.globalTransformMatrix.ty;\r\n        } else {\r\n            m.m12 = this.globalTransformMatrix.tx - (this.globalTransformMatrix.a * this._pivotX - this.globalTransformMatrix.c * this._pivotY);\r\n            m.m13 = this.globalTransformMatrix.ty - (this.globalTransformMatrix.b * this._pivotX - this.globalTransformMatrix.d * this._pivotY);\r\n        }\r\n        this._worldMatrixDirty = true;\r\n    }\r\n    /**\r\n     * @en Update world matrix of slot.\r\n     * @zh 更新插槽的世界矩阵。\r\n     */\r\n    updateWorldMatrix (): void {\r\n        if (!this._armature) return;\r\n\r\n        const parentSlot = this._armature._parent as CCSlot;\r\n        if (parentSlot) {\r\n            parentSlot.updateWorldMatrix();\r\n        }\r\n\r\n        if (this._worldMatrixDirty) {\r\n            this.calculWorldMatrix();\r\n            const childArmature = this.childArmature;\r\n            if (!childArmature) return;\r\n            const slots = childArmature.getSlots();\r\n            for (let i = 0, n = slots.length; i < n; i++) {\r\n                const slot = slots[i] as CCSlot;\r\n                if (slot) {\r\n                    slot._worldMatrixDirty = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    /* protected */ _mulMat (out: Mat4, a: Readonly<Mat4>, b: Readonly<Mat4>): void {\r\n        const aa = a.m00; const ab = a.m01; const ac = a.m04; const ad = a.m05; const atx = a.m12; const aty = a.m13;\r\n        const ba = b.m00; const bb = b.m01; const bc = b.m04; const bd = b.m05; const btx = b.m12; const bty = b.m13;\r\n        if (ab !== 0 || ac !== 0) {\r\n            out.m00 = ba * aa + bb * ac;\r\n            out.m01 = ba * ab + bb * ad;\r\n            out.m04 = bc * aa + bd * ac;\r\n            out.m05 = bc * ab + bd * ad;\r\n            out.m12 = aa * btx + ac * bty + atx;\r\n            out.m13 = ab * btx + ad * bty + aty;\r\n        } else {\r\n            out.m00 = ba * aa;\r\n            out.m01 = bb * ad;\r\n            out.m04 = bc * aa;\r\n            out.m05 = bd * ad;\r\n            out.m12 = aa * btx + atx;\r\n            out.m13 = ad * bty + aty;\r\n        }\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\r\n/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Armature, DisplayData, IEventDispatcher, Slot } from '@cocos/dragonbones-js';\r\nimport { Vec3, EventTarget, _decorator, warn } from '../core';\r\n// eslint-disable-next-line import/named\r\nimport { CCSlot } from './CCSlot';\r\nimport { ArmatureDisplay } from './ArmatureDisplay';\r\nimport { Node } from '../scene-graph';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * @en CCArmatureDisplay contains function about data showing and sending events.\r\n * @zh CCArmatureDisplay 封装了数据显示和事件派发的功能。\r\n */\r\n@ccclass('dragonBones.CCArmatureDisplay')\r\nexport class CCArmatureDisplay extends DisplayData implements IEventDispatcher {\r\n    /**\r\n     * @en Return this.\r\n     * @zh 返回自身。\r\n     */\r\n    get node (): CCArmatureDisplay { return this; }\r\n    /**\r\n     * @deprecated This variable will be removed in the future.\r\n     */\r\n    shouldAdvanced = false;\r\n    /**\r\n     * @en The node contains ArmatureDisplay component.\r\n     * @zh ArmatureDisplay 组件所在的 node。\r\n     */\r\n    _ccNode: Node|null = null;\r\n    /**\r\n     * @en ArmatureDisplay component.\r\n     * @zh ArmatureDisplay 组件。\r\n     */\r\n    _ccComponent: ArmatureDisplay |null = null;\r\n    /**\r\n     * @en EventTarget is an object to which an event is dispatched when something has occurred.\r\n     * @zh 事件目标是具有注册监听器、派发事件能力的对象。\r\n     */\r\n    _eventTarget: EventTarget;\r\n    /**\r\n     * @en The core Armature object.\r\n     * @zh 核心骨架对象。\r\n     */\r\n    _armature: Armature | null = null;\r\n\r\n    constructor () {\r\n        super();\r\n        this._eventTarget = new EventTarget();\r\n    }\r\n    /**\r\n     * @en The funciton is empty and always return false.\r\n     * @zh 方法未实现总返回 false。\r\n     */\r\n    hasEvent (type: string): boolean {\r\n        warn('Method not implemented.');\r\n        return false;\r\n    }\r\n    /**\r\n     * @en The funciton has no realization.\r\n     * @zh 方法未实现。\r\n     */\r\n    addEvent (type: string, listener: any, thisObject: any): void {\r\n        warn('Method not implemented.');\r\n    }\r\n    /**\r\n     * @en The funciton has no realization.\r\n     * @zh 方法未实现。\r\n     */\r\n    removeEvent (type: string, listener: any, thisObject: any): void {\r\n        warn('Method not implemented.');\r\n    }\r\n    /**\r\n     * @en Sets EventTarget object.\r\n     * @zh 设置事件目标。\r\n     */\r\n    setEventTarget (eventTarget: EventTarget): void {\r\n        this._eventTarget = eventTarget;\r\n    }\r\n    /**\r\n     * @en Gets the root display object.\r\n     * @zh 获取顶层的显示容器实例。\r\n     */\r\n    getRootDisplay (): CCArmatureDisplay {\r\n        let parentSlot = this._armature!._parent;\r\n        if (!parentSlot) {\r\n            return this;\r\n        }\r\n\r\n        let slot: Slot;\r\n        while (parentSlot) {\r\n            slot = parentSlot;\r\n            parentSlot = parentSlot._armature._parent;\r\n        }\r\n        return slot!._armature.display;\r\n    }\r\n    /**\r\n     * @en Convert pos to parent slot coordination.\r\n     * @zh 将坐标转换到父插槽的坐标系下。\r\n     */\r\n    convertToRootSpace (pos: Vec3): Vec3 {\r\n        const slot = this._armature!._parent as CCSlot;\r\n        if (!slot) {\r\n            return pos;\r\n        }\r\n        slot.updateWorldMatrix();\r\n\r\n        const worldMatrix = slot._worldMatrix;\r\n        const newPos = new Vec3(0, 0);\r\n        newPos.x = pos.x * worldMatrix.m00 + pos.y * worldMatrix.m04 + worldMatrix.m12;\r\n        newPos.y = pos.x * worldMatrix.m01 + pos.y * worldMatrix.m05 + worldMatrix.m13;\r\n        return newPos;\r\n    }\r\n    /**\r\n     * @en Convert pos to world coordination.\r\n     * @zh 将坐标转换到世界坐标系下。\r\n     */\r\n    convertToWorldSpace (point: Vec3): Vec3 | undefined {\r\n        const newPos = this.convertToRootSpace(point);\r\n        const ccNode = this.getRootNode();\r\n        return ccNode?._getUITransformComp()?.convertToWorldSpaceAR(newPos);\r\n    }\r\n    /**\r\n     * @en Get the node of root ArmatureDisplay component in.\r\n     * @zh 获取顶层 ArmatureDisplay 组件所在的 node。\r\n     */\r\n    getRootNode (): Node | null {\r\n        const rootDisplay = this.getRootDisplay();\r\n        return rootDisplay && rootDisplay._ccNode;\r\n    }\r\n\r\n    /**\r\n     * @en Initialize _armature at start.\r\n     * @zh 初始时设置骨架。\r\n     */\r\n    // dragonbones api\r\n    dbInit (armature: Armature | null): void {\r\n        this._armature = armature;\r\n    }\r\n    /**\r\n     * @en Clears Armature object.\r\n     * @zh 清除骨架对象。\r\n     */\r\n    dbClear (): void {\r\n        this._armature = null;\r\n    }\r\n    /**\r\n     * @en Trigger ArmatureDisplay component to update render data.\r\n     * @zh 触发 ArmatureDisplay 组件更新渲染数据。\r\n     */\r\n    dbUpdate (): void {\r\n        if (this._ccComponent) {\r\n            this._ccComponent._markForUpdateRenderData();\r\n        }\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2.\r\n     * @deprecated This variable will be removed in the future.\r\n     */\r\n    advanceTimeBySelf (on: boolean | number): void {\r\n        this.shouldAdvanced = !!on;\r\n    }\r\n\r\n    hasDBEventListener (type: string): boolean {\r\n        return this._eventTarget.hasEventListener(type);\r\n    }\r\n\r\n    addDBEventListener (type: string, listener, target): void {\r\n        this._eventTarget.on(type, listener, target);\r\n    }\r\n\r\n    removeDBEventListener (type: string, listener, target): void {\r\n        this._eventTarget.off(type, listener, target);\r\n    }\r\n\r\n    dispatchDBEvent (type: string, eventObject): void {\r\n        this._eventTarget.emit(type, eventObject);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { Armature, BaseObject, Animation, BaseFactory, DragonBones, DragonBonesData, DisplayData } from '@cocos/dragonbones-js';\r\nimport { ISchedulable, Scheduler, System, SystemPriority, _decorator } from '../core';\r\nimport { CCTextureAtlasData } from './CCTextureData';\r\nimport { TextureBase } from '../asset/assets/texture-base';\r\nimport { CCSlot } from './CCSlot';\r\nimport { ArmatureDisplay } from './ArmatureDisplay';\r\nimport { CCArmatureDisplay } from './CCArmatureDisplay';\r\nimport { Node } from '../scene-graph';\r\nimport { director, Game, game } from '../game';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * DragonBones factory\r\n * @class CCFactory\r\n * @extends BaseFactory\r\n * @en Usually only one global factory instance is needed. The factory creates\r\n * Armature object by parsing DragonBonesData and TextureAtlasData instances,\r\n * and is responsible for global updating the Dragonbones component animation\r\n * and rendering data.\r\n * @zh 通常只需要一个全局工厂实例，工厂通过解析 DragonBonesData 和 TextureAtlasData\r\n * 实例来创建骨架，并负责全局的龙骨组件动画和渲染数据的更新。\r\n*/\r\n@ccclass('CCFactory')\r\nexport class CCFactory extends BaseFactory implements ISchedulable {\r\n    static _factory: CCFactory | null = null;\r\n\r\n    /**\r\n     * @en\r\n     * Get an CCFactory instance.\r\n     * @zh\r\n     * 获取一个 CCFactory 实例。\r\n     * @method getInstance\r\n     * @returns @en The global CCFactory instance object.\r\n     *          @zh 返回全局的 CCFactory 实例对象。\r\n     * @static\r\n     * @example\r\n     * let factory = CCFactory.getInstance();\r\n    */\r\n    static getInstance (): CCFactory {\r\n        if (!CCFactory._factory) {\r\n            CCFactory._factory = new CCFactory();\r\n        }\r\n        return CCFactory._factory;\r\n    }\r\n    /**\r\n     * @en The id value always 'CCFactory'.\r\n     * @zh 拥有固定值 'CCFactory'。\r\n     */\r\n    id?: string;\r\n    /**\r\n     * @en The uuid value always 'CCFactory'.\r\n     * @zh 拥有固定值 'CCFactory'。\r\n     */\r\n    uuid?: string;\r\n    /**\r\n     * @en Restores the sorted CCSlot objects.\r\n     * @zh 存储已排序好的插槽。\r\n     */\r\n    protected _slots?: CCSlot[];\r\n\r\n    constructor () {\r\n        super();\r\n        const eventManager = new CCArmatureDisplay();\r\n        this._dragonBones = new DragonBones(eventManager);\r\n\r\n        if (director.getScheduler()) {\r\n            game.on(Game.EVENT_RESTART, this.onRestart, this);\r\n            this.initUpdate();\r\n        }\r\n        this.id = this.uuid = 'CCFactory';\r\n    }\r\n    /**\r\n     * @en Sets CCFactory object null when Restart game.\r\n     * @zh 重启时需将工厂实例置空。\r\n     */\r\n    onRestart (): void {\r\n        CCFactory._factory = null;\r\n    }\r\n\r\n    /**\r\n     * @en Initialize update schedule.\r\n     * @zh 初始化更新计划。\r\n     */\r\n    initUpdate (dt?: number): void {\r\n        // director.getScheduler().enableForTarget(this);\r\n        Scheduler.enableForTarget(this);\r\n        director.getScheduler().scheduleUpdate(this, SystemPriority.HIGH, false);\r\n    }\r\n    /**\r\n     * @en Trigger ArmatureDisplay components to update animation and render data.\r\n     * @zh 触发 ArmatureDisplay 组件更新动画和渲染数据。\r\n     */\r\n    update (dt: number): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) return;\r\n        this._dragonBones.advanceTime(dt);\r\n    }\r\n    /**\r\n     * @en Parser raw data to DragonBonesData.\r\n     * @zh 从 raw data 解析出 DragonBonesData 数据。\r\n     */\r\n    getDragonBonesDataByRawData (rawData: any): DragonBonesData | null {\r\n        const dataParser = rawData instanceof ArrayBuffer ? BaseFactory._binaryParser : this._dataParser;\r\n        return dataParser.parseDragonBonesData(rawData, 1.0);\r\n    }\r\n    /**\r\n     * @en Build new armature with a new display.\r\n     * @zh 创建骨架的显示数据。\r\n     */\r\n    // Build new armature with a new display.\r\n    buildArmatureDisplay (armatureName: string, dragonBonesName?: string, skinName?: string, textureAtlasName?: string): DisplayData | null {\r\n        const armature = this.buildArmature(armatureName, dragonBonesName, skinName, textureAtlasName);\r\n        return armature ? armature._display : null;\r\n    }\r\n\r\n    // Build sub armature from an exist armature component.\r\n    // It will share dragonAsset and dragonAtlasAsset.\r\n    // But node can not share,or will cause render error.\r\n    /**\r\n     * @en Create a new node with Dragonbones component.\r\n     * @zh 创建一个附带龙骨组件的 node 节点。\r\n     */\r\n    createArmatureNode (comp: ArmatureDisplay, armatureName: string, node?: Node): ArmatureDisplay {\r\n        node = node || new Node();\r\n        let display = node.getComponent('dragonBones.ArmatureDisplay') as ArmatureDisplay;\r\n        if (!display) {\r\n            display = node.addComponent('dragonBones.ArmatureDisplay') as ArmatureDisplay;\r\n        }\r\n\r\n        node.name = armatureName;\r\n\r\n        display._armatureName = armatureName;\r\n        display._dragonAsset = comp.dragonAsset;\r\n        display._dragonAtlasAsset = comp.dragonAtlasAsset;\r\n        display._init();\r\n\r\n        return display;\r\n    }\r\n\r\n    _buildTextureAtlasData (textureAtlasData: null | CCTextureAtlasData, textureAtlas?: TextureBase): CCTextureAtlasData {\r\n        if (textureAtlasData) {\r\n            textureAtlasData.renderTexture = textureAtlas!;\r\n        } else {\r\n            textureAtlasData = BaseObject.borrowObject(CCTextureAtlasData);\r\n        }\r\n        return textureAtlasData;\r\n    }\r\n\r\n    _sortSlots (): void {\r\n        const slots = this._slots!;\r\n        const sortedSlots: CCSlot[] = [];\r\n        for (let i = 0, l = slots.length; i < l; i++) {\r\n            const slot = slots[i];\r\n            const zOrder = slot._zOrder;\r\n            let inserted = false;\r\n            for (let j = sortedSlots.length - 1; j >= 0; j--) {\r\n                if (zOrder >= sortedSlots[j]._zOrder) {\r\n                    sortedSlots.splice(j + 1, 0, slot);\r\n                    inserted = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!inserted) {\r\n                sortedSlots.unshift(slot);\r\n            }\r\n        }\r\n        this._slots = sortedSlots;\r\n    }\r\n    _buildArmature (dataPackage): Armature {\r\n        const armature = BaseObject.borrowObject(Armature);\r\n\r\n        armature._skinData = dataPackage.skin;\r\n        armature._animation = BaseObject.borrowObject(Animation);\r\n        armature._animation._armature = armature;\r\n        armature._animation.animations = dataPackage.armature.animations;\r\n\r\n        armature._isChildArmature = false;\r\n\r\n        // fixed dragonbones sort issue\r\n        // armature._sortSlots = this._sortSlots;\r\n\r\n        const display = new CCArmatureDisplay();\r\n\r\n        armature.init(dataPackage.armature, display as any, display, this._dragonBones);\r\n\r\n        return armature;\r\n    }\r\n\r\n    _buildSlot (dataPackage, slotData, displays): CCSlot {\r\n        const slot = BaseObject.borrowObject(CCSlot);\r\n        const display = slot;\r\n        slot.init(slotData, displays, display, display);\r\n        return slot;\r\n    }\r\n    /**\r\n     * @en Gets DragonBonesData object by UUID.\r\n     * @zh 通过 UUID 获取 DragonBonesData object。\r\n     */\r\n    getDragonBonesDataByUUID (uuid): DragonBonesData | null {\r\n        for (const name in this._dragonBonesDataMap) {\r\n            if (name.indexOf(uuid) !== -1) {\r\n                return this._dragonBonesDataMap[name];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @en Remove DragonBonesData object from cache by UUID.\r\n     * @zh 通过 UUID 从缓存移除 DragonBonesData object。\r\n     */\r\n    removeDragonBonesDataByUUID (uuid: string, disposeData?: boolean): void {\r\n        if (disposeData === undefined) { disposeData = true; }\r\n        for (const name in this._dragonBonesDataMap) {\r\n            if (name.indexOf(uuid) === -1) continue;\r\n            if (disposeData) {\r\n                this._dragonBones.bufferObject(this._dragonBonesDataMap[name]);\r\n            }\r\n            delete this._dragonBonesDataMap[name];\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { Asset } from '../asset/assets';\r\nimport { ArmatureCache } from './ArmatureCache';\r\nimport { Enum, cclegacy, _decorator, warn } from '../core';\r\nimport { CCFactory } from './CCFactory';\r\nimport { Node } from '../scene-graph';\r\n\r\nconst { ccclass, serializable } = _decorator;\r\n\r\n/**\r\n * @en The skeleton data of dragonBones.\r\n * @zh dragonBones 的骨骼数据。\r\n * @class DragonBonesAsset\r\n * @extends Asset\r\n */\r\n@ccclass('dragonBones.DragonBonesAsset')\r\nexport class DragonBonesAsset extends Asset {\r\n    /**\r\n     * @en The string parsed from the DragonBonesAsset data in json format.\r\n     * See http://developer.egret.com/cn/github/egret-docs/DB/dbLibs/dataFormat/index.html\r\n     * @zh Json 格式的 DragonBones 骨骼数据被解析后的字符串。\r\n     * 可查看 DragonBones 官方文档 http://developer.egret.com/cn/github/egret-docs/DB/dbLibs/dataFormat/index.html\r\n     * @property {string} dragonBonesJson\r\n     */\r\n    @serializable\r\n    protected _dragonBonesJson = '';\r\n\r\n    get dragonBonesJson (): string {\r\n        return this._dragonBonesJson;\r\n    }\r\n\r\n    set dragonBonesJson (value) {\r\n        this._dragonBonesJson = value;\r\n        this._dragonBonesJsonData = JSON.parse(value);\r\n        this.reset();\r\n    }\r\n\r\n    private _factory: CCFactory| null = null;\r\n    protected _dragonBonesJsonData?: ArrayBuffer;\r\n\r\n    private _armaturesEnum: any = null;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n        this.reset();\r\n    }\r\n    /**\r\n     * @en Create a new node with Dragonbones component.\r\n     * @zh 创建一个附带龙骨组件的 node 节点。\r\n     */\r\n    createNode (callback: (err: Error | null, node: Node) => void): void {\r\n        const node = new Node(this.name);\r\n        const armatureDisplay = node.addComponent('dragonBones.ArmatureDisplay') as any;\r\n        armatureDisplay.dragonAsset = this;\r\n\r\n        return callback(null, node);\r\n    }\r\n    /**\r\n     * @en Reset DragonBonesAsset data and state.\r\n     * @zh 重置 DragonBonesAsset 数据和状态。\r\n     */\r\n    reset (): void {\r\n        this._clear();\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            this._armaturesEnum = null;\r\n        }\r\n    }\r\n    /**\r\n     * @en Initialize with altas uuid.\r\n     * @zh 使用 uuid 初始化 DragonBonesAsset 资产数据。\r\n     * @param factory   @en The global CCFactory instance object.\r\n     *                  @zh 全局的 CCFactory 对象。\r\n     * @param atlasUUID @en Atlas uuid. @zh Atlas uuid。\r\n     */\r\n    init (factory?: CCFactory, atlasUUID?: string): string {\r\n        this._factory = factory || CCFactory.getInstance();\r\n\r\n        if (!this._dragonBonesJsonData && this.dragonBonesJson) {\r\n            this._dragonBonesJsonData = JSON.parse(this.dragonBonesJson);\r\n        }\r\n\r\n        let rawData: any = null;\r\n        if (this._dragonBonesJsonData) {\r\n            rawData = this._dragonBonesJsonData;\r\n        } else {\r\n            rawData = this._nativeAsset;\r\n        }\r\n\r\n        // If create by manual, uuid is empty.\r\n        if (!this._uuid) {\r\n            const dbData = this._factory.getDragonBonesDataByRawData(rawData);\r\n            if (dbData) {\r\n                this._uuid = dbData.name;\r\n            } else {\r\n                warn('dragonbones name is empty');\r\n            }\r\n        }\r\n\r\n        const armatureKey = `${this._uuid}#${atlasUUID!}`;\r\n        const dragonBonesData = this._factory.getDragonBonesData(armatureKey);\r\n        if (dragonBonesData) return armatureKey;\r\n\r\n        // eslint-disable-next-line max-len\r\n        this._factory.parseDragonBonesData(rawData instanceof ArrayBuffer ? rawData : (rawData.buffer instanceof ArrayBuffer ? rawData.buffer : rawData), armatureKey);\r\n        return armatureKey;\r\n    }\r\n\r\n    // EDITOR\r\n    /**\r\n     * @engineInternal Since v3.7.2, this is an engine private function.\r\n     */\r\n    getArmatureEnum (): any {\r\n        if (this._armaturesEnum) {\r\n            return this._armaturesEnum as unknown as any;\r\n        }\r\n        this.init();\r\n        const dragonBonesData = this._factory!.getDragonBonesDataByUUID(this._uuid);\r\n        if (dragonBonesData) {\r\n            const armatureNames = dragonBonesData.armatureNames;\r\n            const enumDef = {};\r\n            for (let i = 0; i < armatureNames.length; i++) {\r\n                const name = armatureNames[i];\r\n                enumDef[name] = i;\r\n            }\r\n            return this._armaturesEnum = Enum(enumDef);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2, this is an engine private function.\r\n     */\r\n    public getAnimsEnum (armatureName: string): { '<None>': number; } | null {\r\n        this.init();\r\n        const dragonBonesData = this._factory!.getDragonBonesDataByUUID(this._uuid);\r\n        if (dragonBonesData) {\r\n            const armature = dragonBonesData.getArmature(armatureName);\r\n            if (!armature) {\r\n                return null;\r\n            }\r\n\r\n            const enumDef = { '<None>': 0 };\r\n            const anims = armature.animations;\r\n            let i = 0;\r\n            for (const animName in anims) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (anims.hasOwnProperty(animName)) {\r\n                    enumDef[animName] = i + 1;\r\n                    i++;\r\n                }\r\n            }\r\n            return Enum(enumDef);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @en Destroy DragonBonesAsset data.\r\n     * @zh 销毁 DragonBonesAsset 资产数据。\r\n     */\r\n    public destroy (): boolean {\r\n        this._clear();\r\n        return super.destroy();\r\n    }\r\n\r\n    protected _clear (): void {\r\n        if (this._factory) {\r\n            ArmatureCache.sharedCache.resetArmature(this._uuid);\r\n            this._factory.removeDragonBonesDataByUUID(this._uuid, true);\r\n        }\r\n    }\r\n}\r\n\r\ncclegacy.internal.DragonBonesAsset = DragonBonesAsset;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport { TextureAtlasData } from '@cocos/dragonbones-js';\r\nimport { ArmatureCache } from './ArmatureCache';\r\nimport { ArmatureDisplay } from './ArmatureDisplay';\r\nimport { CCFactory } from './CCFactory';\r\nimport { cclegacy, _decorator } from '../core';\r\nimport { Asset, Texture2D } from '../asset/assets';\r\nimport { Node } from '../scene-graph';\r\n\r\nconst { ccclass, serializable, type } = _decorator;\r\n\r\n/**\r\n * @en The skeleton atlas data of dragonBones.\r\n * @zh DragonBones 的骨骼纹理数据。\r\n * @class DragonBonesAtlasAsset\r\n * @extends Asset\r\n */\r\n@ccclass('dragonBones.DragonBonesAtlasAsset')\r\nexport class DragonBonesAtlasAsset extends Asset {\r\n    constructor () {\r\n        super();\r\n        this._clear();\r\n    }\r\n    /**\r\n     * @en atlas of json file.\r\n     * @zh 纹理图集的 json 文件。\r\n     */\r\n    @serializable\r\n    _atlasJson = '';\r\n    get atlasJson (): string {\r\n        return this._atlasJson;\r\n    }\r\n    set atlasJson (value) {\r\n        this._atlasJson = value;\r\n        this._atlasJsonData = JSON.parse(this.atlasJson);\r\n        this._clear();\r\n    }\r\n    /**\r\n     * @en 2D Texture.\r\n     * @zh 2D 纹理。\r\n     */\r\n    @serializable\r\n    @type(Texture2D)\r\n    _texture: Texture2D | null = null;\r\n\r\n    /**\r\n     * @en Data with json format for Describing the atlas information.\r\n     * @zh 描述图集信息的 json 数据。\r\n     */\r\n    @serializable\r\n    _atlasJsonData: any = {};\r\n    /**\r\n     * @en Dragonbones instance of CCFactory.\r\n     * @zh Dragonbones 工厂实例。\r\n     */\r\n    _factory: CCFactory| null = null;\r\n    /**\r\n     * @en 2D texture.\r\n     * @zh 2D 纹理。\r\n     * @property {Texture2D} texture\r\n     */\r\n    get texture (): Texture2D | null {\r\n        return this._texture;\r\n    }\r\n    set texture (value) {\r\n        this._texture = value;\r\n        this._clear();\r\n    }\r\n    /**\r\n     * @en The texture atlas data.\r\n     * @zh 贴图集数据。\r\n     */\r\n    @serializable\r\n    _textureAtlasData: TextureAtlasData | null = null;\r\n\r\n    /**\r\n     * @en Create a new node with Dragonbones component.\r\n     * @zh 创建一个附带龙骨组件的 node 节点。\r\n     */\r\n    createNode (callback: (error: Error | null, node: Node) => void): void {\r\n        const node = new Node(this.name);\r\n        const armatureDisplay = node.addComponent('dragonBones.ArmatureDisplay') as ArmatureDisplay;\r\n        armatureDisplay.dragonAtlasAsset = this;\r\n\r\n        return callback(null, node);\r\n    }\r\n\r\n    /**\r\n     * @en Atlas resource initialization. Parse the original atlas data and atlas object into a\r\n     * TextureAtlasData instance, and cache it to the factory.\r\n     * @zh 图集资源初始化。将原始贴图集数据和贴图集对象解析为 TextureAtlasData 实例，并缓存到工厂中。\r\n     */\r\n    init (factory: CCFactory): void {\r\n        this._factory = factory;\r\n\r\n        if (!this._atlasJsonData) {\r\n            this._atlasJsonData = JSON.parse(this.atlasJson);\r\n        }\r\n        const atlasJsonObj = this._atlasJsonData;\r\n\r\n        // If create by manual, uuid is empty.\r\n        this._uuid = this._uuid || atlasJsonObj.name;\r\n\r\n        if (this._textureAtlasData) {\r\n            factory.addTextureAtlasData(this._textureAtlasData, this._uuid);\r\n        } else {\r\n            this._textureAtlasData = factory.parseTextureAtlasData(atlasJsonObj, this.texture, this._uuid);\r\n        }\r\n    }\r\n    /**\r\n     * @en Destroy altas assets.\r\n     * @zh 销毁图集资源。\r\n     */\r\n    destroy (): boolean {\r\n        this._clear();\r\n        return super.destroy();\r\n    }\r\n\r\n    protected _clear (): void {\r\n        if (JSB) return;\r\n        if (this._factory) {\r\n            ArmatureCache.sharedCache.resetArmature(this._uuid);\r\n            this._factory.removeTextureAtlasData(this._uuid, true);\r\n            this._factory.removeDragonBonesDataByUUID(this._uuid, true);\r\n        }\r\n        this._textureAtlasData = null;\r\n    }\r\n}\r\n\r\ncclegacy.internal.DragonBonesAtlasAsset = DragonBonesAtlasAsset;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Armature, Matrix } from '@cocos/dragonbones-js';\r\nimport { Mat4, Vec3, _decorator } from '../core';\r\nimport { Node } from '../scene-graph';\r\nimport { ArmatureFrameBoneInfo } from './ArmatureCache';\r\nimport { ArmatureDisplay } from './ArmatureDisplay';\r\n\r\nconst _tempMat4 = new Mat4();\r\nconst { ccclass } = _decorator;\r\n\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private class.\r\n * Users no need to call any function in this class.\r\n */\r\n/**\r\n * @en Attach node tool.\r\n * @zh 挂点工具类。\r\n * @class dragonBones.AttachUtil\r\n */\r\n\r\n@ccclass('dragonBones.AttachUtil')\r\nexport class AttachUtil {\r\n    private _inited = false;\r\n    private _armature: Armature | null = null;\r\n    private _armatureNode: Node | null = null;\r\n    private _armatureDisplay: ArmatureDisplay | null = null;\r\n    constructor () {\r\n\r\n    }\r\n    /**\r\n     * @en Initializes parameters.\r\n     * @zh 初始化参数设置。\r\n     */\r\n    init (armatureDisplay: ArmatureDisplay): void {\r\n        this._inited = true;\r\n        this._armature = armatureDisplay._armature;\r\n        this._armatureNode = armatureDisplay.node;\r\n        this._armatureDisplay = armatureDisplay;\r\n    }\r\n    /**\r\n     * @en Resets parameter values.\r\n     * @zh 重置参数设置。\r\n     */\r\n    reset (): void {\r\n        this._inited = false;\r\n        this._armature = null;\r\n        this._armatureNode = null;\r\n        this._armatureDisplay = null;\r\n    }\r\n    /**\r\n     * @en Synchronize transformation of nodes attached to bones.\r\n     * @zh 同步变换附着在骨骼上节点。\r\n     */\r\n    _syncAttachedNode (): void {\r\n        if (!this._inited) return;\r\n        const rootMatrix = this._armatureNode!.worldMatrix;\r\n\r\n        let boneInfos: ArmatureFrameBoneInfo[] | null = null;\r\n        const isCached = this._armatureDisplay!.isAnimationCached();\r\n        if (isCached && this._armatureDisplay) {\r\n            boneInfos = this._armatureDisplay._curFrame && this._armatureDisplay._curFrame.boneInfos;\r\n            if (!boneInfos) return;\r\n        }\r\n\r\n        const sockets = this._armatureDisplay!.sockets;\r\n        const socketNodes = this._armatureDisplay!.socketNodes;\r\n\r\n        const matrixHandle = (node: Node, boneMat: Matrix): void => {\r\n            const tm = _tempMat4;\r\n            tm.m00 = boneMat.a;\r\n            tm.m01 = boneMat.b;\r\n            tm.m04 = -boneMat.c;\r\n            tm.m05 = -boneMat.d;\r\n            tm.m12 = boneMat.tx;\r\n            tm.m13 = boneMat.ty;\r\n            node.matrix = _tempMat4;\r\n        };\r\n\r\n        const bones = this._armature!.getBones();\r\n\r\n        for (let l = sockets.length - 1; l >= 0; l--) {\r\n            const sock = sockets[l];\r\n            const boneNode = sock.target;\r\n\r\n            if (!boneNode) continue;\r\n            // Node has been destroy\r\n            if (!boneNode.isValid) {\r\n                socketNodes.delete(sock.path);\r\n                sockets.splice(l, 1);\r\n                continue;\r\n            }\r\n            // Bone has been destroy\r\n            const bone = isCached ? boneInfos![sock.boneIndex!] : bones[sock.boneIndex as unknown as number];\r\n            if (!bone) continue;\r\n\r\n            // if (!bone) {\r\n            //     boneNode.removeFromParent();\r\n            //     boneNode.destroy();\r\n            //     socketNodes.delete(sock.path);\r\n            //     sockets.splice(l, 1);\r\n            //     continue;\r\n            // }\r\n            matrixHandle(boneNode, bone.globalTransformMatrix);\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { Armature, Bone, EventObject, AnimationState } from '@cocos/dragonbones-js';\r\nimport { UIRenderer } from '../2d/framework/ui-renderer';\r\nimport { Color, Enum, ccenum, errorID, RecyclePool, js, EventTarget, cclegacy, _decorator, warn, CCObjectFlags } from '../core';\r\nimport { BlendFactor } from '../gfx';\r\nimport { AnimationCache, ArmatureCache, ArmatureFrame } from './ArmatureCache';\r\nimport { AttachUtil } from './AttachUtil';\r\nimport { CCFactory } from './CCFactory';\r\nimport { DragonBonesAsset } from './DragonBonesAsset';\r\nimport { DragonBonesAtlasAsset } from './DragonBonesAtlasAsset';\r\nimport type { Graphics } from '../2d/components/graphics';\r\nimport { CCArmatureDisplay } from './CCArmatureDisplay';\r\nimport { MaterialInstance } from '../render-scene/core/material-instance';\r\nimport { ArmatureSystem } from './ArmatureSystem';\r\nimport { Batcher2D } from '../2d/renderer/batcher-2d';\r\nimport { RenderEntity, RenderEntityType } from '../2d/renderer/render-entity';\r\nimport { RenderDrawInfo } from '../2d/renderer/render-draw-info';\r\nimport { Material, Texture2D } from '../asset/assets';\r\nimport { Node } from '../scene-graph';\r\nimport { builtinResMgr } from '../asset/asset-manager';\r\nimport { setPropertyEnumType } from '../core/internal-index';\r\nimport type { RenderData } from '../2d/renderer/render-data';\r\n\r\nenum DefaultArmaturesEnum {\r\n    default = -1,\r\n}\r\nccenum(DefaultArmaturesEnum);\r\n\r\nenum DefaultAnimsEnum {\r\n    '<None>' = 0,\r\n}\r\nccenum(DefaultAnimsEnum);\r\n\r\nenum DefaultCacheMode {\r\n    REALTIME = 0,\r\n}\r\nccenum(DefaultCacheMode);\r\n\r\n/**\r\n * @en Control animation speed, should be larger than 0.\r\n * @zh 控制龙骨动画播放速度，数值应大于 0。\r\n */\r\n// eslint-disable-next-line prefer-const,import/no-mutable-exports\r\nexport let timeScale = 1;\r\n\r\n/**\r\n * @en Enum for cache mode type.\r\n * @zh Dragonbones 渲染类型。\r\n * @enum ArmatureDisplay.AnimationCacheMode\r\n */\r\nexport enum AnimationCacheMode {\r\n    /**\r\n     * @en The realtime mode.\r\n     * @zh 实时计算模式。\r\n     * @property {Number} REALTIME\r\n     */\r\n    REALTIME = 0,\r\n    /**\r\n     * @en The shared cache mode.\r\n     * @zh 共享缓存模式。\r\n     * @property {Number} SHARED_CACHE\r\n     */\r\n    SHARED_CACHE = 1,\r\n    /**\r\n     * @en The private cache mode.\r\n     * @zh 私有缓存模式。\r\n     * @property {Number} PRIVATE_CACHE\r\n     */\r\n    PRIVATE_CACHE = 2\r\n}\r\nccenum(AnimationCacheMode);\r\n\r\nconst { ccclass, serializable, editable, type, help, menu, tooltip, visible, displayName, override, displayOrder, executeInEditMode } = _decorator;\r\n\r\n/**\r\n * @en Struct that can store rendering data-related information.\r\n * @zh 用于存储渲染数据相关信息的结构体。\r\n */\r\nexport interface ArmatureDisplayDrawData {\r\n    /**\r\n     * @en A Material instance. @zh 材质实例。\r\n     */\r\n    material: Material | null;\r\n    /**\r\n     * @en 2D Texture. @zh 2D 纹理。\r\n     */\r\n    texture: Texture2D | null;\r\n    /**\r\n     * @en Vertex index offset. @zh 顶点索引偏移。\r\n     */\r\n    indexOffset: number;\r\n    /**\r\n     * @en Vertex index count. @zh 顶点索引数量。\r\n     */\r\n    indexCount: number;\r\n}\r\n\r\n/**\r\n * @en DragonBones Socket. Used to attach components to bone nodes and move them together\r\n * with bone animations. Developers need to specify the bone path that needs to follow the\r\n * movement and which node the motion transformation will be applied to.\r\n * @zh 骨骼挂点。用于将组件挂载在骨骼节点上，随骨骼动画一起运动。\r\n * 用户需指定需要跟随运动的骨骼路径以及运动变换将作用于哪个节点上。\r\n */\r\n@ccclass('dragonBones.ArmatureDisplay.DragonBoneSocket')\r\nexport class DragonBoneSocket {\r\n    /**\r\n     * @en Path of the target joint.\r\n     * @zh 此挂点的目标骨骼路径。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public path = '';\r\n\r\n    /**\r\n     * @en Transform output node.\r\n     * @zh 此挂点的变换信息输出节点。\r\n     */\r\n    @type(Node)\r\n    @editable\r\n    @serializable\r\n    public target: Node | null = null;\r\n\r\n    public boneIndex: number | null = null;\r\n\r\n    constructor (path = '', target: Node | null = null) {\r\n        this.path = path;\r\n        this.target = target;\r\n    }\r\n}\r\n\r\njs.setClassAlias(DragonBoneSocket, 'dragonBones.ArmatureDisplay.DragonBoneSocket');\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ninterface BoneIndex extends Number {\r\n    _any: number;\r\n}\r\n\r\n/**\r\n * @en\r\n * The Armature Display of DragonBones <br/>\r\n * <br/>\r\n * Armature Display has a reference to a DragonBonesAsset and stores the state for ArmatureDisplay instance,\r\n * which consists of the current pose's bone SRT, slot colors, and which slot attachments are visible. <br/>\r\n * Multiple Armature Display can use the same DragonBonesAsset which includes all animations, skins, and attachments. <br/>\r\n * Cocos Creator supports DragonBones version to 5.6.300.\r\n * @zh\r\n * DragonBones 骨骼动画 <br/>\r\n * <br/>\r\n * Armature Display 具有对骨骼数据的引用并且存储了骨骼实例的状态，\r\n * 它由当前的骨骼动作，slot 颜色，和可见的 slot attachments 组成。<br/>\r\n * 多个 Armature Display 可以使用相同的骨骼数据，其中包括所有的动画，皮肤和 attachments。<br/>\r\n * Cocos Creator 支持 DragonBones 版本最高到 v5.6.300.\r\n *\r\n * @class ArmatureDisplay\r\n * @extends RenderComponent\r\n */\r\n@ccclass('dragonBones.ArmatureDisplay')\r\n@help('i18n:cc.DragonBones')\r\n@menu('DragonBones/ArmatureDisplay')\r\n@executeInEditMode\r\nexport class ArmatureDisplay extends UIRenderer {\r\n    static AnimationCacheMode = AnimationCacheMode;\r\n\r\n    /**\r\n     * @en\r\n     * The DragonBones data contains the armatures information (bind pose bones, slots, draw order,\r\n     * attachments, skins, etc) and animations but does not hold any state.<br/>\r\n     * Multiple ArmatureDisplay can share the same DragonBones data.\r\n     * @zh\r\n     * 骨骼数据包含了骨骼信息（绑定骨骼动作，slots，渲染顺序，\r\n     * attachments，皮肤等等）和动画但不持有任何状态。<br/>\r\n     * 多个 ArmatureDisplay 可以共用相同的骨骼数据。\r\n     * @property {DragonBonesAsset} dragonAsset\r\n     */\r\n    @editable\r\n    @type(DragonBonesAsset)\r\n    @tooltip('i18n:COMPONENT.dragon_bones.dragon_bones_asset')\r\n    get dragonAsset (): DragonBonesAsset | null {\r\n        return this._dragonAsset;\r\n    }\r\n    set dragonAsset (value) {\r\n        this._dragonAsset = value;\r\n        this.destroyRenderData();\r\n        this._refresh();\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            this._defaultArmatureIndex = 0;\r\n            this._animationIndex = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The atlas asset for the DragonBones.\r\n     * @zh\r\n     * 骨骼数据所需的 Atlas Texture 数据。\r\n     * @property {DragonBonesAtlasAsset} dragonAtlasAsset\r\n     */\r\n    @editable\r\n    @type(DragonBonesAtlasAsset)\r\n    @tooltip('i18n:COMPONENT.dragon_bones.dragon_bones_atlas_asset')\r\n    get dragonAtlasAsset (): DragonBonesAtlasAsset | null { return this._dragonAtlasAsset; }\r\n    set dragonAtlasAsset (value) {\r\n        this._dragonAtlasAsset = value;\r\n        this._parseDragonAtlasAsset();\r\n        this._refresh();\r\n    }\r\n\r\n    /**\r\n     * @en The name of current armature.\r\n     * @zh 当前的 Armature 名称。\r\n     * @property {String} armatureName\r\n     */\r\n    @visible(false)\r\n    get armatureName (): string { return this._armatureName; }\r\n    set armatureName (name) {\r\n        this._armatureName = name;\r\n        const animNames = this.getAnimationNames(this._armatureName);\r\n\r\n        if (!this.animationName || animNames.indexOf(this.animationName) < 0) {\r\n            if (EDITOR_NOT_IN_PREVIEW) {\r\n                this.animationName = animNames[0];\r\n            } else {\r\n                // Not use default animation name at runtime\r\n                this.animationName = '';\r\n            }\r\n        }\r\n\r\n        if (this._armature && !this.isAnimationCached()) {\r\n            this._factory!._dragonBones.clock.remove(this._armature);\r\n        }\r\n\r\n        this._refresh();\r\n\r\n        if (this._armature && !this.isAnimationCached()) {\r\n            this._factory!._dragonBones.clock.add(this._armature);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The name of current playing animation.\r\n     * @zh 当前播放的动画名称。\r\n     * @property {String} animationName\r\n     */\r\n    @visible(false)\r\n    get animationName (): string {\r\n        return this._animationName;\r\n    }\r\n    set animationName (value) {\r\n        this._animationName = value;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    @displayName('Armature')\r\n    @editable\r\n    @type(DefaultArmaturesEnum)\r\n    @tooltip('i18n:COMPONENT.dragon_bones.armature_name')\r\n    get _defaultArmatureIndex (): DefaultArmaturesEnum {\r\n        return this._defaultArmatureIndexValue;\r\n    }\r\n    set _defaultArmatureIndex (value: DefaultArmaturesEnum) {\r\n        this._defaultArmatureIndexValue = value;\r\n        let armatureName = '';\r\n        if (this.dragonAsset) {\r\n            let armaturesEnum;\r\n            if (this.dragonAsset) {\r\n                armaturesEnum = this.dragonAsset.getArmatureEnum();\r\n            }\r\n            if (!armaturesEnum) {\r\n                errorID(7400, this.name);\r\n                return;\r\n            }\r\n\r\n            armatureName = armaturesEnum[this._defaultArmatureIndex];\r\n        }\r\n\r\n        if (armatureName !== undefined) {\r\n            this.armatureName = armatureName;\r\n        } else {\r\n            errorID(7401, this.name);\r\n        }\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    @editable\r\n    @type(DefaultAnimsEnum)\r\n    @displayName('Animation')\r\n    @tooltip('i18n:COMPONENT.dragon_bones.animation_name')\r\n    get _animationIndex (): DefaultAnimsEnum {\r\n        return this._animationIndexValue;\r\n    }\r\n    set _animationIndex (value) {\r\n        this._animationIndexValue = value;\r\n\r\n        if (this._animationIndex === 0) {\r\n            this.animationName = '';\r\n            return;\r\n        }\r\n\r\n        let animsEnum;\r\n        if (this.dragonAsset) {\r\n            animsEnum = this.dragonAsset.getAnimsEnum(this.armatureName);\r\n        }\r\n\r\n        if (!animsEnum) {\r\n            return;\r\n        }\r\n\r\n        const animName = animsEnum[this._animationIndex];\r\n        if (animName !== undefined) {\r\n            this.playAnimation(animName, this.playTimes);\r\n        } else {\r\n            errorID(7402, this.name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    @editable\r\n    @displayName('Animation Cache Mode')\r\n    @tooltip('i18n:COMPONENT.dragon_bones.animation_cache_mode')\r\n    get _defaultCacheMode (): AnimationCacheMode { return this._defaultCacheModeValue; }\r\n    set _defaultCacheMode (value) {\r\n        this._defaultCacheModeValue = value;\r\n\r\n        if (this._defaultCacheMode !== AnimationCacheMode.REALTIME) {\r\n            if (this._armature && !ArmatureCache.canCache(this._armature)) {\r\n                this._defaultCacheMode = AnimationCacheMode.REALTIME;\r\n                warn('Animation cache mode doesn\\'t support skeletal nesting');\r\n                return;\r\n            }\r\n        }\r\n        this.setAnimationCacheMode(this._defaultCacheMode);\r\n    }\r\n    /**\r\n     * @en The time scale of this armature.\r\n     * @zh 当前骨骼中所有动画的时间缩放率。\r\n     * @property {Number} timeScale\r\n     * @default 1\r\n     */\r\n    @editable\r\n    @tooltip('i18n:COMPONENT.dragon_bones.time_scale')\r\n    @serializable\r\n    get timeScale (): number { return this._timeScale; }\r\n    set timeScale (value) {\r\n        this._timeScale = value;\r\n\r\n        if (this._armature && !this.isAnimationCached()) {\r\n            this._armature.animation.timeScale = this.timeScale;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The play times of the default animation.\r\n     *      -1 means using the value of config file;\r\n     *      0 means repeat for ever\r\n     *      >0 means repeat times\r\n     * @zh 播放默认动画的循环次数\r\n     *      -1 表示使用配置文件中的默认值;\r\n     *      0 表示无限循环\r\n     *      >0 表示循环次数\r\n     * @property {Number} playTimes\r\n     * @default -1\r\n     */\r\n    @tooltip('i18n:COMPONENT.dragon_bones.play_times')\r\n    @editable\r\n    @serializable\r\n    public playTimes = -1;\r\n\r\n    /**\r\n     * @en Indicates whether to enable premultiplied alpha.\r\n     * You should disable this option when image's transparent area appears to have opaque pixels,\r\n     * or enable this option when image's half transparent area appears to be darken.\r\n     * @zh 是否启用贴图预乘。\r\n     * 当图片的透明区域出现色块时需要关闭该选项，当图片的半透明区域颜色变黑时需要启用该选项。\r\n     * @property {Boolean} premultipliedAlpha\r\n     * @default false\r\n     */\r\n    @serializable\r\n    @editable\r\n    @tooltip('i18n:COMPONENT.skeleton.premultipliedAlpha')\r\n    public premultipliedAlpha = false;\r\n\r\n    /**\r\n     * @en Indicates whether open debug bones.\r\n     * @zh 是否显示 bone 的 debug 信息。\r\n     * @property {Boolean} debugBones\r\n     * @default false\r\n     */\r\n    @tooltip('i18n:COMPONENT.dragon_bones.debug_bones')\r\n    @editable\r\n    get debugBones (): boolean { return this._debugBones; }\r\n    set debugBones (value) {\r\n        this._debugBones = value;\r\n        this._updateDebugDraw();\r\n    }\r\n\r\n    /**\r\n     * @en Enabled batch model. If rendering a large number of identical textures and simple\r\n     * skeleton animations, enabling batching can reduce the number of drawcalls and improve\r\n     * rendering efficiency, otherwise it is not necessary to enable it.\r\n     * @zh 开启合批。如果渲染大量相同纹理，且结构简单的龙骨动画，开启合批可以降低 drawcall 数量，\r\n     * 提升渲染效率，否则不需要开启。\r\n    */\r\n    @tooltip('i18n:COMPONENT.dragon_bones.enabled_batch')\r\n    @editable\r\n    get enableBatch (): boolean { return this._enableBatch; }\r\n    set enableBatch (value) {\r\n        if (value !== this._enableBatch) {\r\n            this._enableBatch = value;\r\n            this._updateBatch();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The bone sockets this animation component maintains.<br>\r\n     * Sockets have to be registered here before attaching custom nodes to animated bones.\r\n     * @zh\r\n     * 当前动画组件维护的挂点数组。要挂载自定义节点到受动画驱动的骨骼上，必须先在此注册挂点。\r\n     */\r\n    @type([DragonBoneSocket])\r\n    @tooltip('i18n:animation.sockets')\r\n    get sockets (): DragonBoneSocket[] {\r\n        return this._sockets;\r\n    }\r\n\r\n    set sockets (val: DragonBoneSocket[]) {\r\n        this._verifySockets(val);\r\n        this._sockets = val;\r\n        this._updateSocketBindings();\r\n        // this.attachUtil._syncAttachedNode();\r\n        if (val.length > 0 && this._frameCache) {\r\n            this._frameCache.enableCacheAttachedInfo();\r\n        }\r\n    }\r\n    /**\r\n     * @en Gets the socket nodes. Socket nodes are registered synchronous motion\r\n     * transformation with bones.\r\n     * @zh 获取 socket nodes，socket nodes 被注册到组件上，可以随骨骼做同步运动变换。\r\n     */\r\n    get socketNodes (): Map<string, Node> { return this._socketNodes; }\r\n    /**\r\n     * @en The armature is the core of the skeletal animation system.\r\n     * @zh 骨架是骨骼动画系统的核心。\r\n     */\r\n    _armature: Armature | null = null;\r\n    /**\r\n     * @en The tool for mounting functionality.\r\n     * @zh 挂载工具。\r\n     */\r\n    public attachUtil: AttachUtil;\r\n    /**\r\n     * @en Draw call list.\r\n     * @zh Draw call 列表。\r\n     */\r\n    get drawList (): RecyclePool<ArmatureDisplayDrawData> { return this._drawList; }\r\n    @serializable\r\n    protected _defaultArmatureIndexValue: DefaultArmaturesEnum = DefaultArmaturesEnum.default;\r\n    /**\r\n     * @en The skeleton data of dragonBones.\r\n     * @zh DragonBones 的骨骼数据。\r\n     */\r\n    @serializable\r\n    /* protected */ _dragonAsset: DragonBonesAsset | null = null;\r\n    /**\r\n     * @en The skeleton atlas data of dragonBones.\r\n     * @zh DragonBones 的骨骼纹理数据。\r\n     */\r\n    @serializable\r\n    /* protected */ _dragonAtlasAsset: DragonBonesAtlasAsset | null = null;\r\n    @serializable\r\n    /**\r\n     * @en The armature data name.\r\n     * @zh 骨架数据名称。\r\n     */\r\n    /* protected */ _armatureName = '';\r\n    @serializable\r\n    protected _animationName = '';\r\n    @serializable\r\n    protected _animationIndexValue: DefaultAnimsEnum = 0;\r\n    protected _preCacheMode = -1;\r\n    protected _cacheMode: AnimationCacheMode = AnimationCacheMode.REALTIME;\r\n    @serializable\r\n    protected _defaultCacheModeValue: AnimationCacheMode = AnimationCacheMode.REALTIME;\r\n    @serializable\r\n    protected _timeScale = 1;\r\n    @serializable\r\n    protected _playTimes = -1;\r\n\r\n    @serializable\r\n    protected _debugBones = false;\r\n\r\n    @serializable\r\n    protected _enableBatch = false;\r\n    /**\r\n     * @en The graphics component for debugging.\r\n     * @zh 用于调试的 Graphics 组件。\r\n     */\r\n    /* protected */ _debugDraw: Graphics | null = null;\r\n\r\n    // DragonBones data store key.\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected _armatureKey = '';\r\n\r\n    // Below properties will effect when cache mode is SHARED_CACHE or PRIVATE_CACHE.\r\n    // accumulate time\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected _accTime = 0;\r\n    // Play times counter\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected _playCount = 0;\r\n    // Frame cache\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected _frameCache: AnimationCache | null = null;\r\n    // Cur frame\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _curFrame: ArmatureFrame | null = null;\r\n    // Playing flag\r\n    protected _playing = false;\r\n    // Armature cache\r\n    protected _armatureCache: ArmatureCache | null = null;\r\n\r\n    protected _eventTarget: EventTarget;\r\n\r\n    protected _factory: CCFactory | null = null;\r\n\r\n    protected _displayProxy: CCArmatureDisplay | null = null;\r\n\r\n    protected _drawIdx = 0;\r\n    protected _drawList = new RecyclePool<ArmatureDisplayDrawData>((): ArmatureDisplayDrawData => ({\r\n        material: null,\r\n        texture: null,\r\n        indexOffset: 0,\r\n        indexCount: 0,\r\n    }), 1);\r\n    /**\r\n    * @engineInternal\r\n    */\r\n    public maxVertexCount = 0;\r\n    /**\r\n    * @engineInternal\r\n    */\r\n    public maxIndexCount = 0;\r\n\r\n    protected _materialCache: { [key: string]: MaterialInstance } = {};\r\n\r\n    protected _enumArmatures: any = Enum({});\r\n    protected _enumAnimations: any = Enum({});\r\n\r\n    protected _socketNodes = new Map<string, Node>();\r\n    protected _cachedSockets = new Map<string, BoneIndex>();\r\n\r\n    @serializable\r\n    protected _sockets: DragonBoneSocket[] = [];\r\n\r\n    private _inited;\r\n    private _drawInfoList: RenderDrawInfo[] = [];\r\n    private requestDrawInfo (idx: number): RenderDrawInfo {\r\n        if (!this._drawInfoList[idx]) {\r\n            this._drawInfoList[idx] = new RenderDrawInfo();\r\n        }\r\n        return this._drawInfoList[idx];\r\n    }\r\n\r\n    constructor () {\r\n        super();\r\n        // Property _materialCache Use to cache material,since dragonBones may use multiple texture,\r\n        // it will clone from the '_material' property,if the dragonbones only have one texture,\r\n        // it will just use the _material,won't clone it.\r\n        // So if invoke getMaterial,it only return _material,if you want to change all materialCache,\r\n        // you can change materialCache directly.\r\n        this._eventTarget = new EventTarget();\r\n        this._inited = false;\r\n        this.attachUtil = new AttachUtil();\r\n        this.initFactory();\r\n        setPropertyEnumType(this, '_animationIndex', this._enumAnimations);\r\n        setPropertyEnumType(this, '_defaultArmatureIndex', this._enumArmatures);\r\n        this._useVertexOpacity = true;\r\n    }\r\n    /**\r\n     * @en Initializes _factory from CCFactory, if golbal factory not exists, will create a new one.\r\n     * @zh 初始化变量 _factory，如果全局工厂实例不存在将新创建一个工厂实列对象。\r\n     */\r\n    initFactory (): void {\r\n        this._factory = CCFactory.getInstance();\r\n    }\r\n\r\n    onLoad (): void {\r\n        super.onLoad();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _requestDrawData (material: Material, texture: Texture2D, indexOffset: number, indexCount: number): ArmatureDisplayDrawData {\r\n        const draw = this._drawList.add();\r\n        draw.material = material;\r\n        draw.texture = texture;\r\n        draw.indexOffset = indexOffset;\r\n        draw.indexCount = indexCount;\r\n        return draw;\r\n    }\r\n    /**\r\n     * @en\r\n     * Destroy render data，will be called when need to rebuild render data or component is destroyed.\r\n     * @zh\r\n     * 销毁渲染数据，一般在重新生成渲染数据时或销毁组件时调用。\r\n     */\r\n    public destroyRenderData (): void {\r\n        this._drawList.reset();\r\n        super.destroyRenderData();\r\n    }\r\n\r\n    private getMaterialTemplate (): Material {\r\n        if (this.customMaterial !== null) return this.customMaterial;\r\n        if (this.material) return this.material;\r\n        this.updateMaterial();\r\n        return this.material!;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    public getMaterialForBlend (src: BlendFactor, dst: BlendFactor): MaterialInstance {\r\n        const key = `${src}/${dst}`;\r\n        let inst = this._materialCache[key];\r\n        if (inst) {\r\n            return inst;\r\n        }\r\n        const material = this.getMaterialTemplate();\r\n        const matInfo = {\r\n            parent: material,\r\n            subModelIdx: 0,\r\n            owner: this,\r\n        };\r\n\r\n        inst = new MaterialInstance(matInfo);\r\n        inst.recompileShaders({ TWO_COLORED: false, USE_LOCAL: false });\r\n        this._materialCache[key] = inst;\r\n        inst.overridePipelineStates({\r\n            blendState: {\r\n                targets: [{\r\n                    blendSrc: src, blendDst: dst,\r\n                }],\r\n            },\r\n        });\r\n        return inst;\r\n    }\r\n\r\n    protected _updateBuiltinMaterial (): Material {\r\n        const material = builtinResMgr.get<Material>('default-spine-material');\r\n        return material;\r\n    }\r\n\r\n    /**\r\n     * @en Custom material.\r\n     * @zh 自定义材质。\r\n     */\r\n    @override\r\n    @type(Material)\r\n    @displayOrder(0)\r\n    get customMaterial (): Material | null {\r\n        return this._customMaterial;\r\n    }\r\n    set customMaterial (val) {\r\n        this._customMaterial = val;\r\n        this.updateMaterial();\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public override updateMaterial (): void {\r\n        let mat: Material;\r\n        if (this._customMaterial) mat = this._customMaterial;\r\n        else mat = this._updateBuiltinMaterial();\r\n        this.setSharedMaterial(mat, 0);\r\n        this._cleanMaterialCache();\r\n    }\r\n\r\n    protected _render (batcher: Batcher2D): void {\r\n        let indicesCount = 0;\r\n        if (this.renderData && this._drawList) {\r\n            const rd = this.renderData;\r\n            const chunk = rd.chunk;\r\n            const accessor = chunk.vertexAccessor;\r\n            const meshBuffer = rd.getMeshBuffer()!;\r\n            const origin = meshBuffer.indexOffset;\r\n            // Fill index buffer\r\n            for (let i = 0; i < this._drawList.length; i++) {\r\n                this._drawIdx = i;\r\n                const dc = this._drawList.data[i];\r\n                if (dc.texture) {\r\n                    batcher.commitMiddleware(\r\n                        this,\r\n                        meshBuffer,\r\n                        origin + dc.indexOffset,\r\n                        dc.indexCount,\r\n                        dc.texture,\r\n                        dc.material!,\r\n                        this._enableBatch,\r\n                    );\r\n                }\r\n                indicesCount += dc.indexCount;\r\n            }\r\n            const subIndices = rd.indices!.subarray(0, indicesCount);\r\n            accessor.appendIndices(chunk.bufferId, subIndices);\r\n        }\r\n    }\r\n\r\n    __preload (): void {\r\n        super.__preload();\r\n        this._init();\r\n    }\r\n    /**\r\n     * @en Initialize asset data and internal data within the component.\r\n     * @zh 初始化资产数据以及组件内部数据。\r\n     */\r\n    _init (): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            this._objFlags |= (CCObjectFlags.IsAnchorLocked | CCObjectFlags.IsSizeLocked);\r\n            // this._refreshInspector();\r\n        }\r\n\r\n        this._cacheMode = this._defaultCacheMode;\r\n\r\n        if (this._inited) return;\r\n        this._inited = true;\r\n\r\n        // this._resetAssembler();\r\n        // this._activateMaterial();\r\n\r\n        this._parseDragonAtlasAsset();\r\n        this._refresh();\r\n\r\n        const children = this.node.children;\r\n        for (let i = 0, n = children.length; i < n; i++) {\r\n            const child = children[i];\r\n            if (child && child.name === 'DEBUG_DRAW_NODE') {\r\n                child.destroy();\r\n            }\r\n        }\r\n        this._updateDebugDraw();\r\n        this._indexBoneSockets();\r\n        this._updateSocketBindings();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The key of dragonbones cache data, which is regard as 'dragonbonesName', when you want to change dragonbones cloth.\r\n     * @zh\r\n     * 缓存龙骨数据的 key 值，换装的时会使用到该值，作为 'dragonbonesName' 使用。\r\n     * @method getArmatureKey\r\n     * @returns @en The key of dragonbones cache data. @zh 缓存龙骨数据的 key 值。\r\n     * @example\r\n     * let factory = dragonBones.CCFactory.getInstance();\r\n     * let needChangeSlot = needChangeArmature.armature().getSlot(\"changeSlotName\");\r\n     * factory.replaceSlotDisplay(toChangeArmature.getArmatureKey(), \"armatureName\", \"slotName\", \"displayName\", needChangeSlot);\r\n     */\r\n    getArmatureKey (): string {\r\n        return this._armatureKey;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * It's best to set cache mode before set property 'dragonAsset', or will waste some cpu time.\r\n     * If set the mode in editor, then no need to worry about order problem.\r\n     * @zh\r\n     * 若想切换渲染模式，最好在设置'dragonAsset'之前，先设置好渲染模式，否则有运行时开销。\r\n     * 若在编辑中设置渲染模式，则无需担心设置次序的问题。\r\n     *\r\n     * @method setAnimationCacheMode\r\n     * @param cacheMode\r\n     *      @en The value can be set to REALTIME, SHARED_CACHE, or PRIVATE_CACHE.\r\n     *      @zh 可以在 REALTIME，SHARED_CACHE，PRIVATE_CACHE 中取值。\r\n     * @example\r\n     * armatureDisplay.setAnimationCacheMode(dragonBones.ArmatureDisplay.AnimationCacheMode.SHARED_CACHE);\r\n     */\r\n    setAnimationCacheMode (cacheMode: AnimationCacheMode): void {\r\n        if (this._preCacheMode !== cacheMode) {\r\n            this._cacheMode = cacheMode;\r\n            this._buildArmature();\r\n            if (this._armature && !this.isAnimationCached()) {\r\n                this._factory!._dragonBones.clock.add(this._armature);\r\n            }\r\n            this._updateSocketBindings();\r\n            this._markForUpdateRenderData();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether in cached mode.\r\n     * @zh 当前是否处于缓存模式。\r\n     * @method isAnimationCached\r\n     * @returns @en True means animation mode is SHARED_CACHE or PRIVATE_CACHE.\r\n     *              False means animation mode is REALTIME.\r\n     *          @zh True 代表动画使用 SHARED_CACHE 或 PRIVATE_CACHE 模式。\r\n     *              False 代表动画使用 REALTIME 模式。\r\n     */\r\n    isAnimationCached (): boolean {\r\n        if (EDITOR_NOT_IN_PREVIEW) return false;\r\n        return this._cacheMode !== AnimationCacheMode.REALTIME;\r\n    }\r\n    /**\r\n     * @en Be called when the component state becomes available.\r\n     * Instance of ArmatureDisplay will be added into ArmatureSystem.\r\n     * @zh 组件状态变为可用时调用。ArmatureDisplay 实例将被添加到 ArmatureSystem。\r\n     */\r\n    onEnable (): void {\r\n        super.onEnable();\r\n        // If cache mode is cache, no need to update by dragonbones library.\r\n        if (this._armature && !this.isAnimationCached()) {\r\n            this._factory!._dragonBones.clock.add(this._armature);\r\n        }\r\n        this._flushAssembler();\r\n        ArmatureSystem.getInstance().add(this);\r\n    }\r\n    /**\r\n     * @en Be called when the component state becomes invalid.\r\n     * Instance of ArmatureDisplay will be removed from ArmatureSystem.\r\n     * @zh 组件状态变为不可用时调用。ArmatureDisplay 实例将被从 ArmatureSystem 移除。\r\n     */\r\n    onDisable (): void {\r\n        super.onDisable();\r\n        // If cache mode is cache, no need to update by dragonbones library.\r\n        if (this._armature && !this.isAnimationCached()) {\r\n            this._factory!._dragonBones.clock.remove(this._armature);\r\n        }\r\n        ArmatureSystem.getInstance().remove(this);\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _emitCacheCompleteEvent (): void {\r\n        // Animation loop complete, the event diffrent from dragonbones inner event,\r\n        // It has no event object.\r\n        this._eventTarget.emit(EventObject.LOOP_COMPLETE);\r\n\r\n        // Animation complete the event diffrent from dragonbones inner event,\r\n        // It has no event object.\r\n        this._eventTarget.emit(EventObject.COMPLETE);\r\n    }\r\n    /**\r\n     * @en Update animation frame.\r\n     * @zh 更新动画序列。\r\n     * @param dt @en Delta time, unit is second. @zh 时间差，单位为秒。\r\n     */\r\n    updateAnimation (dt): void {\r\n        this._markForUpdateRenderData();\r\n        if (!this.isAnimationCached()) return;\r\n        if (!this._frameCache) return;\r\n\r\n        const frameCache = this._frameCache;\r\n        if (!frameCache.isInited()) {\r\n            return;\r\n        }\r\n\r\n        const frames = frameCache.frames;\r\n        if (!this._playing) {\r\n            if (frameCache.isInvalid()) {\r\n                frameCache.updateToFrame();\r\n                this._curFrame = frames[frames.length - 1]!;\r\n                // Update render data size if needed\r\n                if (this.renderData\r\n                    && (this.renderData.vertexCount < frameCache.maxVertexCount\r\n                    || this.renderData.indexCount < frameCache.maxIndexCount)) {\r\n                    this.maxVertexCount = frameCache.maxVertexCount > this.maxVertexCount ? frameCache.maxVertexCount : this.maxVertexCount;\r\n                    this.maxIndexCount = frameCache.maxIndexCount > this.maxIndexCount ? frameCache.maxIndexCount : this.maxIndexCount;\r\n                    this.renderData.resize(this.maxVertexCount, this.maxIndexCount);\r\n                    if (!this.renderData.indices || this.maxIndexCount > this.renderData.indices.length) {\r\n                        this.renderData.indices = new Uint16Array(this.maxIndexCount);\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const frameTime = ArmatureCache.FrameTime;\r\n\r\n        // Animation Start, the event different from dragonbones inner event,\r\n        // It has no event object.\r\n        if (this._accTime === 0 && this._playCount === 0) {\r\n            this._eventTarget.emit(EventObject.START);\r\n        }\r\n\r\n        const globalTimeScale = timeScale;\r\n        this._accTime += dt * this.timeScale * globalTimeScale;\r\n        let frameIdx = Math.floor(this._accTime / frameTime);\r\n        if (!frameCache.isCompleted) {\r\n            frameCache.updateToFrame(frameIdx);\r\n            // Update render data size if needed\r\n            if (this.renderData\r\n                && (this.renderData.vertexCount < frameCache.maxVertexCount\r\n                || this.renderData.indexCount < frameCache.maxIndexCount)) {\r\n                this.maxVertexCount = frameCache.maxVertexCount > this.maxVertexCount ? frameCache.maxVertexCount : this.maxVertexCount;\r\n                this.maxIndexCount = frameCache.maxIndexCount > this.maxIndexCount ? frameCache.maxIndexCount : this.maxIndexCount;\r\n                this.renderData.resize(this.maxVertexCount, this.maxIndexCount);\r\n                if (!this.renderData.indices || this.maxIndexCount > this.renderData.indices.length) {\r\n                    this.renderData.indices = new Uint16Array(this.maxIndexCount);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (frameCache.isCompleted && frameIdx >= frames.length) {\r\n            this._playCount++;\r\n            if ((this.playTimes > 0 && this._playCount >= this.playTimes)) {\r\n                // set frame to end frame.\r\n                this._curFrame = frames[frames.length - 1]!;\r\n                this._accTime = 0;\r\n                this._playing = false;\r\n                this._playCount = 0;\r\n                this._emitCacheCompleteEvent();\r\n                this.attachUtil._syncAttachedNode();\r\n                return;\r\n            }\r\n            this._accTime = 0;\r\n            frameIdx = 0;\r\n            this._emitCacheCompleteEvent();\r\n        }\r\n\r\n        this._curFrame = frames[frameIdx]!;\r\n        this.attachUtil._syncAttachedNode();\r\n    }\r\n    /**\r\n     * @en Destroy component, release resource.\r\n     * @zh 销毁组件时调用，释放相关资源。\r\n     */\r\n    onDestroy (): void {\r\n        this._materialInstances = this._materialInstances.filter((instance): boolean => !!instance);\r\n        this._inited = false;\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            if (this._cacheMode === AnimationCacheMode.PRIVATE_CACHE) {\r\n                this._armatureCache!.dispose();\r\n                this._armatureCache = null;\r\n                this._armature = null;\r\n            } else if (this._cacheMode === AnimationCacheMode.SHARED_CACHE) {\r\n                this._armatureCache = null;\r\n                this._armature = null;\r\n            } else if (this._armature) {\r\n                this._armature.dispose();\r\n                this._armature = null;\r\n            }\r\n        } else if (this._armature) {\r\n            this._armature.dispose();\r\n            this._armature = null;\r\n        }\r\n        this._drawList.destroy();\r\n        super.onDestroy();\r\n    }\r\n    /**\r\n     * @en Update the debugging component show.\r\n     * @zh 更新调试 Graphic 组件的显示。\r\n     */\r\n    _updateDebugDraw (): void {\r\n        if (this.debugBones) {\r\n            if (!this._debugDraw) {\r\n                let debugDrawNode: Node | null = new Node('DEBUG_DRAW_NODE');\r\n                debugDrawNode.hideFlags |= CCObjectFlags.DontSave | CCObjectFlags.HideInHierarchy;\r\n                let debugDraw: Graphics | undefined;\r\n                try {\r\n                    debugDraw = debugDrawNode.addComponent('cc.Graphics') as Graphics;\r\n                    debugDraw.lineWidth = 1;\r\n                    debugDraw.strokeColor = new Color(255, 0, 0, 255);\r\n\r\n                    this._debugDraw = debugDraw;\r\n                    this._debugDraw.node.parent = this.node;\r\n                } catch (e: any) {\r\n                    errorID(4501, e.message as string);\r\n                    debugDrawNode.destroy();\r\n                    debugDrawNode = null;\r\n                }\r\n            }\r\n        } else if (this._debugDraw) {\r\n            this._debugDraw.node.parent = null;\r\n        }\r\n        this._markForUpdateRenderData();\r\n    }\r\n    /**\r\n     * @en Update related data due to batching settings.\r\n     * @zh 更新由于合批设置导致的相关数据。\r\n     */\r\n    protected _updateBatch (): void {\r\n        this._cleanMaterialCache();\r\n        this._markForUpdateRenderData();\r\n    }\r\n    /**\r\n     * @en Building data of armature.\r\n     * @zh 构建骨架数据。\r\n     */\r\n    _buildArmature (): void {\r\n        if (!this.dragonAsset || !this.dragonAtlasAsset || !this.armatureName) return;\r\n\r\n        // Switch Asset or Atlas or cacheMode will rebuild armature.\r\n        if (this._armature) {\r\n            // dispose pre build armature\r\n            if (!EDITOR_NOT_IN_PREVIEW) {\r\n                if (this._preCacheMode === AnimationCacheMode.PRIVATE_CACHE) {\r\n                    this._armatureCache!.dispose();\r\n                } else if (this._preCacheMode === AnimationCacheMode.REALTIME) {\r\n                    this._armature.dispose();\r\n                }\r\n            } else {\r\n                this._armature.dispose();\r\n            }\r\n\r\n            this._armatureCache = null;\r\n            this._armature = null;\r\n            this._displayProxy = null;\r\n            this._frameCache = null;\r\n            this._curFrame = null;\r\n            this._playing = false;\r\n            this._preCacheMode = -1;\r\n        }\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            if (this._cacheMode === AnimationCacheMode.SHARED_CACHE) {\r\n                this._armatureCache = ArmatureCache.sharedCache;\r\n            } else if (this._cacheMode === AnimationCacheMode.PRIVATE_CACHE) {\r\n                this._armatureCache = new ArmatureCache();\r\n                this._armatureCache.enablePrivateMode();\r\n            }\r\n        }\r\n\r\n        const atlasUUID = this.dragonAtlasAsset._uuid;\r\n        this._armatureKey = this.dragonAsset.init(this._factory!, atlasUUID);\r\n\r\n        if (this.isAnimationCached()) {\r\n            this._armature = this._armatureCache!.getArmatureCache(this.armatureName, this._armatureKey, atlasUUID);\r\n            if (!this._armature) {\r\n                // Cache fail,swith to REALTIME cache mode.\r\n                this._cacheMode = AnimationCacheMode.REALTIME;\r\n            }\r\n        }\r\n\r\n        this._preCacheMode = this._cacheMode;\r\n        if (EDITOR_NOT_IN_PREVIEW || this._cacheMode === AnimationCacheMode.REALTIME) {\r\n            this._displayProxy = this._factory!.buildArmatureDisplay(this.armatureName, this._armatureKey, '', atlasUUID) as CCArmatureDisplay;\r\n            if (!this._displayProxy) return;\r\n            this._displayProxy._ccNode = this.node;\r\n            this._displayProxy._ccComponent = this;\r\n            this._displayProxy.setEventTarget(this._eventTarget);\r\n            this._armature = this._displayProxy._armature;\r\n            this._armature!.animation.timeScale = this.timeScale;\r\n            // If change mode or armature, armature must insert into clock.\r\n            // this._factory._dragonBones.clock.add(this._armature);\r\n        }\r\n\r\n        if (this._cacheMode !== AnimationCacheMode.REALTIME && this.debugBones) {\r\n            warn('Debug bones is invalid in cached mode');\r\n        }\r\n\r\n        if (this._armature) {\r\n            const armatureData = this._armature.armatureData;\r\n            const aabb = armatureData.aabb;\r\n            this.node._getUITransformComp()!.setContentSize(aabb.width, aabb.height);\r\n        }\r\n        this.attachUtil.init(this);\r\n\r\n        if (this.animationName) {\r\n            this.playAnimation(this.animationName, this.playTimes);\r\n        }\r\n        this._flushAssembler();\r\n    }\r\n    /**\r\n     * @en Gets sockets binding on this component.\r\n     * @zh 获取绑定在本组件上的socket。\r\n     */\r\n    public querySockets (): string[] {\r\n        if (!this._armature) {\r\n            return [];\r\n        }\r\n        if (this._cachedSockets.size === 0) {\r\n            this._indexBoneSockets();\r\n        }\r\n        return Array.from(this._cachedSockets.keys()).sort();\r\n    }\r\n\r\n    /**\r\n     * @en Query socket path with slot or bone name.\r\n     * @zh 查询 Socket 路径。\r\n     * @param name @en Slot name or Bone name. @zh 插槽或骨骼名称。\r\n     */\r\n    public querySocketPathByName (name: string): string[] {\r\n        const ret: string[] = [];\r\n        for (const key of this._cachedSockets.keys()) {\r\n            if (key.endsWith(name)) {\r\n                ret.push(key);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _parseDragonAtlasAsset (): void {\r\n        if (this.dragonAtlasAsset) {\r\n            this.dragonAtlasAsset.init(this._factory!);\r\n        }\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _refresh (): void {\r\n        this._buildArmature();\r\n        this._indexBoneSockets();\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            // update inspector\r\n            this._updateArmatureEnum();\r\n            this._updateAnimEnum();\r\n            this._updateCacheModeEnum();\r\n            // Editor.Utils.refreshSelectedInspector('node', this.node.uuid);\r\n        }\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    private _cacheModeEnum: any;\r\n    // EDITOR\r\n    _updateCacheModeEnum (): void {\r\n        this._cacheModeEnum = Enum({});\r\n        if (this._armature) {\r\n            Object.assign(this._cacheModeEnum, AnimationCacheMode);\r\n        } else {\r\n            Object.assign(this._cacheModeEnum, DefaultCacheMode);\r\n        }\r\n        setPropertyEnumType(this, '_defaultCacheMode', this._cacheModeEnum);\r\n    }\r\n\r\n    // update animation list for editor\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _updateAnimEnum (): void {\r\n        let animEnum;\r\n        if (this.dragonAsset) {\r\n            animEnum = this.dragonAsset.getAnimsEnum(this.armatureName);\r\n        } else {\r\n            animEnum = DefaultAnimsEnum;\r\n        }\r\n\r\n        this._enumAnimations = Enum({});\r\n        Object.assign(this._enumAnimations, animEnum || DefaultAnimsEnum);\r\n        Enum.update(this._enumAnimations);\r\n        // change enum\r\n        setPropertyEnumType(this, '_animationIndex', this._enumAnimations);\r\n    }\r\n\r\n    // update armature list for editor\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _updateArmatureEnum (): void {\r\n        let armatureEnum;\r\n        if (this.dragonAsset) {\r\n            armatureEnum = this.dragonAsset.getArmatureEnum();\r\n        } else {\r\n            armatureEnum = DefaultArmaturesEnum;\r\n        }\r\n\r\n        this._enumArmatures = Enum({});\r\n        Object.assign(this._enumArmatures, armatureEnum || DefaultArmaturesEnum);\r\n        Enum.update(this._enumArmatures);\r\n        // change enum\r\n        setPropertyEnumType(this, '_defaultArmatureIndex', this._enumArmatures);\r\n    }\r\n    /**\r\n     * @engineInternal Since v3.7.2 this is an engine private function.\r\n     */\r\n    _indexBoneSockets (): void {\r\n        if (!this._armature) {\r\n            return;\r\n        }\r\n        this._cachedSockets.clear();\r\n        const nameToBone = this._cachedSockets;\r\n        const cacheBoneName = (bi: BoneIndex, bones: Bone[], cache: Map<BoneIndex, string>): string => {\r\n            if (cache.has(bi)) { return cache.get(bi)!; }\r\n            const bone = bones[bi as unknown as number];\r\n            if (!bone.parent) {\r\n                cache.set(bi, bone.name);\r\n                (bone as any).path = bone.name;\r\n                return bone.name;\r\n            }\r\n            const name = `${cacheBoneName((bone.parent as any)._boneIndex, bones, cache)}/${bone.name}`;\r\n            cache.set(bi, name);\r\n            (bone as any).path = name;\r\n            return name;\r\n        };\r\n        const walkArmature = (prefix: string, armature: Armature): void => {\r\n            const bones = armature.getBones();\r\n            const boneToName = new Map<BoneIndex, string>();\r\n            for (let i = 0; i < bones.length; i++) {\r\n                (bones[i] as any)._boneIndex = i;\r\n            }\r\n            for (let i = 0; i < bones.length; i++) {\r\n                cacheBoneName(i as unknown as BoneIndex, bones, boneToName);\r\n            }\r\n            for (const bone of boneToName.keys()) {\r\n                nameToBone.set(`${prefix}${boneToName.get(bone)!}`, bone);\r\n            }\r\n            const slots = armature.getSlots();\r\n            for (let i = 0; i < slots.length; i++) {\r\n                if (slots[i].childArmature) {\r\n                    walkArmature(slots[i].name, slots[i].childArmature!);\r\n                }\r\n            }\r\n        };\r\n        walkArmature('', this._armature);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Play the specified animation.\r\n     * Parameter animName specify the animation name.\r\n     * Parameter playTimes specify the repeat times of the animation.\r\n     * -1 means use the value of the config file.\r\n     * 0 means play the animation for ever.\r\n     * >0 means repeat times.\r\n     * @zh\r\n     * 播放指定的动画.\r\n     * animName 指定播放动画的名称。\r\n     * playTimes 指定播放动画的次数。\r\n     * -1 为使用配置文件中的次数。\r\n     * 0 为无限循环播放。\r\n     * >0 为动画的重复次数。\r\n     */\r\n    playAnimation (animName: string, playTimes?: number): AnimationState | null {\r\n        this.playTimes = (playTimes === undefined) ? -1 : playTimes;\r\n        this.animationName = animName;\r\n\r\n        if (this.isAnimationCached()) {\r\n            let cache = this._armatureCache!.getAnimationCache(this._armatureKey, animName);\r\n            if (!cache) {\r\n                cache = this._armatureCache!.initAnimationCache(this._armatureKey, animName);\r\n            }\r\n            if (cache) {\r\n                this._accTime = 0;\r\n                this._playCount = 0;\r\n                this._frameCache = cache;\r\n                if (this._sockets.length > 0) {\r\n                    this._frameCache.enableCacheAttachedInfo();\r\n                }\r\n                this._frameCache.updateToFrame(0);\r\n                this._playing = true;\r\n                this._curFrame = this._frameCache.frames[0]!;\r\n            }\r\n        } else if (this._armature) {\r\n            return this._armature.animation.play(animName, this.playTimes);\r\n        }\r\n        this._markForUpdateRenderData();\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Updating an animation cache to calculate all frame data in the animation is a cost in\r\n     * performance due to calculating all data in a single frame.\r\n     * To update the cache, use the invalidAnimationCache method with high performance.\r\n     * @zh\r\n     * 更新某个动画缓存, 预计算动画中所有帧数据，由于在单帧计算所有数据，所以较消耗性能。\r\n     * 若想更新缓存，可使用 invalidAnimationCache 方法，具有较高性能。\r\n     * @method updateAnimationCache\r\n     * @param animName @en Animation's name. @zh 动画名称。\r\n     */\r\n    updateAnimationCache (animName: string): void {\r\n        if (!this.isAnimationCached()) return;\r\n        this._armatureCache!.updateAnimationCache(this._armatureKey, animName);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Invalidates the animation cache, which is then recomputed on each frame.\r\n     * @zh\r\n     * 使动画缓存失效，之后会在每帧重新计算。\r\n     * @method invalidAnimationCache\r\n     */\r\n    invalidAnimationCache (): void {\r\n        if (!this.isAnimationCached()) return;\r\n        this._armatureCache!.invalidAnimationCache(this._armatureKey);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the all armature names in the DragonBones Data.\r\n     * @zh\r\n     * 获取 DragonBones 数据中所有的 armature 名称。\r\n     * @method getArmatureNames\r\n     * @returns @en Return an array of armature names. @zh 返回 armature 名称数组。\r\n     */\r\n    getArmatureNames (): string[] {\r\n        const dragonBonesData = this._factory!.getDragonBonesData(this._armatureKey);\r\n        return (dragonBonesData && dragonBonesData.armatureNames) || [];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the all animation names of specified armature.\r\n     * @zh\r\n     * 获取指定的 armature 的所有动画名称。\r\n     * @method getAnimationNames\r\n     * @param armatureName @en The name of armature. @zh Armature 名称。\r\n     * @returns @en Return an array of all animation names.\r\n     *          @zh 返回包含所有动画名称的数组。\r\n     */\r\n    getAnimationNames (armatureName: string): string[] {\r\n        const ret: string[] = [];\r\n        const dragonBonesData = this._factory!.getDragonBonesData(this._armatureKey);\r\n        if (dragonBonesData) {\r\n            const armatureData = dragonBonesData.getArmature(armatureName);\r\n            if (armatureData) {\r\n                for (const animName in armatureData.animations) {\r\n                    // eslint-disable-next-line no-prototype-builtins\r\n                    if (armatureData.animations.hasOwnProperty(animName)) {\r\n                        ret.push(animName);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add event listener for the DragonBones Event, the same to addEventListener.\r\n     * @zh\r\n     * 添加 DragonBones 事件监听器，与 addEventListener 作用相同。\r\n     * @method on\r\n     * @param eventType @en A string representing the event type to listen for.\r\n     *                  @zh 用于表示监听事件类型的字符串。\r\n     * @param listener  @en The callback that will be invoked when the event is dispatched.\r\n     *                  @zh 事件派发时的回调。\r\n     * @param target    @en The target (this object) to invoke the callback, can be null.\r\n     *                  @zh 调用回调函数的对象，可以为 null。\r\n     */\r\n    on (eventType: string, listener, target): void {\r\n        this.addEventListener(eventType, listener, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Remove the event listener for the DragonBones Event, the same to removeEventListener.\r\n     * @zh\r\n     * 移除 DragonBones 事件监听器，与 removeEventListener 作用相同。\r\n     * @method off\r\n     * @param eventType @en A string representing the event type to listen for.\r\n     *                  @zh 用于表示监听事件类型的字符串。\r\n     * @param listener  @en The callback that will be invoked when the event is dispatched.\r\n     *                  @zh 事件派发时的回调。\r\n     * @param target    @en The target (this object) to invoke the callback, can be null.\r\n     *                  @zh 调用回调函数的对象，可以为 null。\r\n     */\r\n    off (eventType: string, listener, target): void {\r\n        this.removeEventListener(eventType, listener, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add DragonBones one-time event listener, the callback will remove itself after the first time it is triggered.\r\n     * @zh\r\n     * 添加 DragonBones 一次性事件监听器，回调会在第一时间被触发后删除自身。\r\n     * @method once\r\n     * @param eventType @en A string representing the event type to listen for.\r\n     *                  @zh 用于表示监听事件类型的字符串。\r\n     * @param listener  @en The callback that will be invoked when the event is dispatched.\r\n     *                  @zh 事件派发时的回调。\r\n     * @param target    @en The target (this object) to invoke the callback, can be null.\r\n     *                  @zh 调用回调函数的对象，可以为 null。\r\n     */\r\n    once (eventType: string, listener, target): void {\r\n        this._eventTarget.once(eventType, listener, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add event listener for the DragonBones Event.\r\n     * @zh\r\n     * 添加 DragonBones 事件监听器。\r\n     * @method addEventListener\r\n     * @param eventType @en A string representing the event type to listen for.\r\n     *                  @zh 用于表示监听事件类型的字符串。\r\n     * @param listener  @en The callback that will be invoked when the event is dispatched.\r\n     *                  @zh 事件派发时的回调。\r\n     * @param target    @en The target (this object) to invoke the callback, can be null.\r\n     *                  @zh 调用回调函数的对象，可以为 null。\r\n     */\r\n    addEventListener (eventType, listener, target): void {\r\n        this._eventTarget.on(eventType, listener, target);\r\n    }\r\n\r\n    /**\r\n     * @en Remove the event listener for the DragonBones Event.\r\n     * @zh 移除 DragonBones 事件监听器。\r\n     * @method removeEventListener\r\n     * @param eventType @en A string representing the event type to listen for.\r\n     *                  @zh 用于表示监听事件类型的字符串。\r\n     * @param listener  @en The callback that will be invoked when the event is dispatched.\r\n     *                  @zh 事件派发时的回调。\r\n     * @param target    @en The target (this object) to invoke the callback, can be null.\r\n     *                  @zh 调用回调函数的对象，可以为 null。\r\n     */\r\n    removeEventListener (eventType, listener, target): void {\r\n        this._eventTarget.off(eventType, listener, target);\r\n    }\r\n\r\n    /**\r\n     * @en Build the armature for specified name.\r\n     * @zh 构建指定名称的 armature 对象。\r\n     * @method buildArmature\r\n     * @param armatureName @en The name of armature. @zh Armature 名称。\r\n     * @param node @en The node contains ArmatureDisplay component.\r\n     *             @zh 承载 ArmatureDisplay 组件的 node。\r\n     * @returns @en Return a new ArmatureDisplay component.\r\n     *          @zh 返回一个新创建的 ArmatureDisplay 组件。\r\n     */\r\n    buildArmature (armatureName: string, node?: Node): ArmatureDisplay {\r\n        return this._factory!.createArmatureNode(this, armatureName, node);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the current armature object of the ArmatureDisplay.\r\n     * @zh\r\n     * 获取 ArmatureDisplay 当前使用的 Armature 对象。\r\n     * @method armature\r\n     * @returns @en Return the armature object. @zh 返回 armature 对象。\r\n     */\r\n    armature (): Armature | null {\r\n        return this._armature;\r\n    }\r\n\r\n    protected _flushAssembler (): void {\r\n        const assembler = ArmatureDisplay.Assembler.getAssembler(this);\r\n        if (this._assembler !== assembler) {\r\n            this._assembler = assembler;\r\n        }\r\n        if (this._armature && this._assembler) {\r\n            this._renderData = this._assembler.createData!(this) as RenderData;\r\n            if (this._renderData) {\r\n                this.maxVertexCount = this._renderData.vertexCount;\r\n                this.maxIndexCount = this._renderData.indexCount;\r\n            }\r\n            this._markForUpdateRenderData();\r\n            this._updateColor();\r\n        }\r\n    }\r\n\r\n    protected _updateSocketBindings (): void {\r\n        if (!this._armature) return;\r\n        this._socketNodes.clear();\r\n        for (let i = 0, l = this._sockets.length; i < l; i++) {\r\n            const socket = this._sockets[i];\r\n            if (socket.path && socket.target) {\r\n                const bone = this._cachedSockets.get(socket.path);\r\n                if (!bone) {\r\n                    console.error(`Skeleton data does not contain path ${socket.path}`);\r\n                    continue;\r\n                }\r\n                socket.boneIndex = bone as unknown as number;\r\n                this._socketNodes.set(socket.path, socket.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _verifySockets (sockets: DragonBoneSocket[]): void {\r\n        for (let i = 0, l = sockets.length; i < l; i++) {\r\n            const target = sockets[i].target;\r\n            if (target) {\r\n                if (!target.parent || (target.parent !== this.node)) {\r\n                    console.error(`Target node ${target.name} is expected to be a direct child of ${this.node.name}`);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _cleanMaterialCache (): void {\r\n        for (const val in this._materialCache) {\r\n            this._materialCache[val].destroy();\r\n        }\r\n        this._materialCache = {};\r\n    }\r\n\r\n    protected createRenderEntity (): RenderEntity {\r\n        const renderEntity = new RenderEntity(RenderEntityType.DYNAMIC);\r\n        renderEntity.setUseLocal(false);\r\n        return renderEntity;\r\n    }\r\n    /**\r\n     * @en Sets flag for update render data.\r\n     * @zh 标记组件渲染数据更新。\r\n     */\r\n    public markForUpdateRenderData (enable = true): void {\r\n        super._markForUpdateRenderData(enable);\r\n        if (this._debugDraw) {\r\n            this._debugDraw._markForUpdateRenderData(enable);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal since v3.7.2 this is an engine private function.\r\n     */\r\n    public syncAttachedNode (): void {\r\n        // sync attached node matrix\r\n        this.attachUtil._syncAttachedNode();\r\n    }\r\n}\r\n\r\ncclegacy.internal.ArmatureDisplay = ArmatureDisplay;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { director } from '../game/director';\r\nimport { System, SystemPriority, cclegacy } from '../core';\r\nimport { ArmatureDisplay } from './ArmatureDisplay';\r\n/**\r\n * @en The ArmatureSystem is mainly responsible for triggering and updating the animation uniformly.\r\n * @zh 骨架系统，主要负责统一触发更新骨骼动画。\r\n */\r\nexport class ArmatureSystem extends System {\r\n    /**\r\n     * @en The ID flag of the system.\r\n     * @zh 此系统的 ID 标记。\r\n     */\r\n    static readonly ID = 'ARMATURE';\r\n\r\n    private static _instance: ArmatureSystem;\r\n\r\n    private constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en Gets the instance of the ArmatureSystem system.\r\n     * @zh 获取 Dragonbones Armature 系统的单例。\r\n     */\r\n    public static getInstance (): ArmatureSystem {\r\n        if (!ArmatureSystem._instance) {\r\n            ArmatureSystem._instance = new ArmatureSystem();\r\n            director.registerSystem(ArmatureSystem.ID, ArmatureSystem._instance, SystemPriority.HIGH);\r\n        }\r\n        return ArmatureSystem._instance;\r\n    }\r\n\r\n    private _armatures = new Set<ArmatureDisplay>();\r\n    /**\r\n     * @en Add the ArmatureDisplay components into ArmatureSystem system.\r\n     * @zh 将龙骨组件添加到系统中。\r\n     */\r\n    public add (armature: ArmatureDisplay | null): void {\r\n        if (!armature) return;\r\n        if (!this._armatures.has(armature)) {\r\n            this._armatures.add(armature);\r\n        }\r\n    }\r\n    /**\r\n     * @en Remove the ArmatureDisplay components from ArmatureSystem system.\r\n     * @zh 将龙骨组件从系统移除。\r\n     */\r\n    public remove (armature: ArmatureDisplay | null): void {\r\n        if (!armature) return;\r\n        if (this._armatures.has(armature)) {\r\n            this._armatures.delete(armature);\r\n        }\r\n    }\r\n    /**\r\n     * @en Trigger animation update of Armature objects.\r\n     * @zh 触发更新龙骨动画。\r\n     */\r\n    postUpdate (dt: number): void {\r\n        if (!this._armatures) {\r\n            return;\r\n        }\r\n        this._armatures.forEach((armature): void => {\r\n            armature.updateAnimation(dt);\r\n            armature.syncAttachedNode();\r\n        });\r\n    }\r\n    /**\r\n     * @en\r\n     * Trigger update of rendering data for all Dragonbone components.\r\n     * @zh\r\n     * 触发标记更新所有龙骨组件的渲染数据。\r\n     */\r\n    public prepareRenderData (): void {\r\n        if (!this._armatures) {\r\n            return;\r\n        }\r\n        this._armatures.forEach((armature): void => {\r\n            armature._markForUpdateRenderData();\r\n        });\r\n    }\r\n}\r\n\r\ncclegacy.internal.ArmatureSystem = ArmatureSystem;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Armature, BlendMode } from '@cocos/dragonbones-js';\r\nimport { Color, Mat4, Vec3, cclegacy } from '../../core';\r\nimport { BlendFactor } from '../../gfx';\r\nimport { vfmtPosUvColor } from '../../2d/renderer/vertex-format';\r\nimport { MaterialInstance } from '../../render-scene/core/material-instance';\r\nimport type { IAssembler } from '../../2d/renderer/base';\r\nimport { ArmatureFrame } from '../ArmatureCache';\r\nimport { ArmatureDisplay } from '../ArmatureDisplay';\r\nimport { CCSlot } from '../CCSlot';\r\nimport { StaticVBAccessor } from '../../2d/renderer/static-vb-accessor';\r\nimport { RenderData } from '../../2d/renderer/render-data';\r\nimport type { Texture2D } from '../../asset/assets';\r\nimport type { TextureBase } from '../../asset/assets/texture-base';\r\nimport type { Node } from '../../scene-graph';\r\nimport { director } from '../../game';\r\nimport type { IBatcher } from '../../2d/renderer/i-batcher';\r\n\r\nconst NEED_COLOR = 0x01;\r\nconst NEED_BATCH = 0x10;\r\n\r\nconst _boneColor = new Color(255, 0, 0, 255);\r\nconst _slotColor = new Color(0, 0, 255, 255);\r\nconst _originColor = new Color(0, 255, 0, 255);\r\n\r\n/** node R [0,1] */\r\nlet _nodeR: number;\r\n/** node G [0,1] */\r\nlet _nodeG: number;\r\n/** node B [0,1] */\r\nlet _nodeB: number;\r\n/** node alpha [0,1] */\r\nlet _nodeA: number;\r\n\r\nlet _premultipliedAlpha: boolean;\r\nlet _multiply: number;\r\nlet _mustFlush: boolean;\r\nlet _renderData: RenderData | null;\r\nlet _ibuf: Uint16Array;\r\nlet _vbuf: Float32Array;\r\nlet _node: Node | undefined;\r\nlet _comp: ArmatureDisplay | undefined;\r\nlet _vertexFloatCount = 0;\r\nlet _vertexCount = 0;\r\nlet _vertexOffset = 0;\r\nlet _vertexFloatOffset = 0;\r\nlet _indexCount = 0;\r\nlet _indexOffset = 0;\r\nlet _actualVCount = 0;\r\nlet _actualICount = 0;\r\nlet _prevDrawIndexOffset = 0;\r\nconst LOCAL_FLOAT_PER_VERTEX  = 4; //xyuv\r\nconst PER_VERTEX_SIZE = 3 + 2 + 4; //xyz-uv-rgba;\r\n\r\nconst _c = new Float32Array(4);\r\nlet _handleVal: number;\r\nconst _tempVecPos = new Vec3(0, 0, 0);\r\nconst _slotMat = new Mat4();\r\n\r\nlet _currentMaterial: MaterialInstance | null = null;\r\nlet _currentTexture: Texture2D | null = null;\r\n\r\nfunction _getSlotMaterial (tex: TextureBase | null, blendMode: BlendMode): MaterialInstance | null {\r\n    if (!tex) return null;\r\n\r\n    let src: BlendFactor;\r\n    let dst: BlendFactor;\r\n    switch (blendMode) {\r\n    case 1:// additive\r\n        src = _premultipliedAlpha ? BlendFactor.ONE : BlendFactor.SRC_ALPHA;\r\n        dst = BlendFactor.ONE;\r\n        break;\r\n    case 10:// multiply\r\n        src = BlendFactor.DST_COLOR;\r\n        dst = BlendFactor.ONE_MINUS_SRC_ALPHA;\r\n        break;\r\n    case 12:// screen\r\n        src = BlendFactor.ONE;\r\n        dst = BlendFactor.ONE_MINUS_SRC_COLOR;\r\n        break;\r\n    case 0:// normal\r\n    default:\r\n        src = _premultipliedAlpha ? BlendFactor.ONE : BlendFactor.SRC_ALPHA;\r\n        dst = BlendFactor.ONE_MINUS_SRC_ALPHA;\r\n        break;\r\n    }\r\n    return _comp!.getMaterialForBlend(src, dst);\r\n}\r\n\r\nfunction _handleColor (color: {r: number, g: number, b: number, a: number}, parentOpacity: number): void {\r\n    const _a = color.a * parentOpacity * _nodeA;\r\n    const _multiply = _premultipliedAlpha ? _a / 255.0 : 1.0;\r\n    const _r = color.r * _nodeR * _multiply / 255.0;\r\n    const _g = color.g * _nodeG * _multiply / 255.0;\r\n    const _b = color.b * _nodeB * _multiply / 255.0;\r\n    _c[0] = _r;\r\n    _c[1] = _g;\r\n    _c[2] = _b;\r\n    _c[3] = _premultipliedAlpha ? 1.0 : _a / 255.0;\r\n}\r\n\r\nlet _accessor: StaticVBAccessor = null!;\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private object.\r\n * simple 组装器\r\n * 可通过 `UI.simple` 获取该组装器。\r\n */\r\nclass Simple implements IAssembler {\r\n    private accessor = _accessor;\r\n    private vCount = 32767;\r\n    ensureAccessor (): StaticVBAccessor {\r\n        if (!_accessor) {\r\n            const device = director.root!.device;\r\n            const batcher = director.root!.batcher2D;\r\n            const attributes = vfmtPosUvColor;\r\n            this.accessor = _accessor = new StaticVBAccessor(device, attributes, this.vCount);\r\n            // Register to batcher so that batcher can upload buffers after batching process\r\n            batcher.registerBufferAccessor(Number.parseInt('DRAGONBONES', 36), _accessor);\r\n        }\r\n        return this.accessor;\r\n    }\r\n\r\n    createData (comp: ArmatureDisplay): RenderData {\r\n        let rd = comp.renderData;\r\n        if (!rd) {\r\n            this.ensureAccessor();\r\n            const slots = comp._armature!._slots;\r\n            let vCount = 0;\r\n            let iCount = 0;\r\n            for (let i = 0; i < slots.length; ++i) {\r\n                const slot = slots[i] as CCSlot;\r\n                const remainder = slot._localVertices.length % 4;\r\n                if (remainder === 0) {\r\n                    vCount += slot._localVertices.length / LOCAL_FLOAT_PER_VERTEX;\r\n                } else {\r\n                    vCount += (slot._localVertices.length - remainder) / LOCAL_FLOAT_PER_VERTEX + 1;\r\n                }\r\n                iCount += slot._indices.length;\r\n            }\r\n\r\n            rd = RenderData.add(vfmtPosUvColor, this.accessor);\r\n            rd.resize(vCount, iCount);\r\n            if (!rd.indices || iCount !== rd.indices.length) {\r\n                rd.indices = new Uint16Array(iCount);\r\n            }\r\n        }\r\n        return rd;\r\n    }\r\n\r\n    updateRenderData (comp: ArmatureDisplay): void {\r\n        _comp = comp;\r\n        const armature = comp._armature;\r\n        if (armature) {\r\n            updateComponentRenderData(comp);\r\n        }\r\n    }\r\n\r\n    updateColor (comp: ArmatureDisplay): void {\r\n        if (!comp) return;\r\n        _comp = comp;\r\n        _comp._markForUpdateRenderData();\r\n    }\r\n}\r\n\r\nexport const simple = new Simple();\r\n\r\nfunction realTimeTraverse (armature: Armature, parentOpacity: number, worldMat?: Mat4): void {\r\n    const rd = _renderData;\r\n    if (!rd) return;\r\n    _vbuf = rd.chunk.vb;\r\n    _ibuf = rd.indices!;\r\n\r\n    const slots = armature._slots;\r\n    let material: MaterialInstance;\r\n    let vertices: number[];\r\n    let indices: number[];\r\n    let slotColor: Color;\r\n    let slot: CCSlot;\r\n\r\n    let cumulatedCount = 0;\r\n\r\n    for (let i = 0, l = slots.length; i < l; i++) {\r\n        slot = slots[i] as CCSlot;\r\n        slotColor = slot._color;\r\n\r\n        if (!slot._visible || !slot._displayData) continue;\r\n\r\n        if (worldMat) {\r\n            /* enable batch or recursive armature */\r\n            Mat4.multiply(slot._worldMatrix, worldMat, slot._matrix);\r\n        } else {\r\n            Mat4.copy(slot._worldMatrix, slot._matrix);\r\n        }\r\n\r\n        if (slot.childArmature) {\r\n            realTimeTraverse(slot.childArmature, slotColor.a / 255, slot._worldMatrix);\r\n            continue;\r\n        }\r\n\r\n        material = _getSlotMaterial(slot.getTexture(), slot._blendMode)!;\r\n        if (!material) {\r\n            continue;\r\n        }\r\n        if (!_currentMaterial) _currentMaterial = material;\r\n\r\n        const texture = slot.getTexture();\r\n\r\n        if (_mustFlush || material.hash !== _currentMaterial.hash || (texture && _currentTexture !== texture)) {\r\n            _mustFlush = false;\r\n            const cumulatedCount = _indexOffset - _prevDrawIndexOffset;\r\n            // Submit draw data\r\n            if (cumulatedCount > 0) {\r\n                _comp!._requestDrawData(_currentMaterial, _currentTexture!, _prevDrawIndexOffset, cumulatedCount);\r\n                _prevDrawIndexOffset = _indexOffset;\r\n            }\r\n            _currentTexture = texture;\r\n            _currentMaterial = material;\r\n        }\r\n\r\n        _handleColor(slotColor, parentOpacity);\r\n        _slotMat.set(slot._worldMatrix);\r\n\r\n        vertices = slot._localVertices;\r\n        _vertexCount = vertices.length / LOCAL_FLOAT_PER_VERTEX;\r\n        _vertexFloatCount = _vertexCount * PER_VERTEX_SIZE;\r\n        indices = slot._indices;\r\n        _indexCount = indices.length;\r\n\r\n        // Slot and vertices in armature may be replaced in some cases\r\n        // (for example caused by CCFactory.replaceSlotDisplay)\r\n        let isResize = false;\r\n        if (_vertexOffset + _vertexCount > _actualVCount) {\r\n            _actualVCount = _vertexOffset + _vertexCount;\r\n            isResize = true;\r\n        }\r\n        if (_indexOffset + _indexCount > _actualICount) {\r\n            _actualICount = _indexOffset + _indexCount;\r\n            isResize = true;\r\n        }\r\n        if (isResize) {\r\n            const oldIndices = _ibuf;\r\n            const oldChunkOffset = rd.chunk.vertexOffset;\r\n            rd.resizeAndCopy(_actualVCount, _actualICount > rd.indexCount ? _actualICount : rd.indexCount);\r\n            _vbuf = rd.chunk.vb;\r\n            if (_actualICount > _ibuf.length) {\r\n                _ibuf = rd.indices = new Uint16Array(_actualICount);\r\n            }\r\n            const correction = rd.chunk.vertexOffset - oldChunkOffset;\r\n            for (let i = 0; i < _indexOffset; ++i) {\r\n                _ibuf[i] = oldIndices[i] + correction;\r\n            }\r\n        }\r\n\r\n        // vertext format:\r\n        //       x y z u v r g b a\r\n        for (let vi = 0, vl = vertices.length, v = _vertexFloatOffset; vi < vl; v += PER_VERTEX_SIZE) {\r\n            _tempVecPos.x = vertices[vi++];\r\n            _tempVecPos.y = vertices[vi++];\r\n            _tempVecPos.z = 0;\r\n            _tempVecPos.transformMat4(_slotMat);\r\n\r\n            _vbuf[v] = _tempVecPos.x;\r\n            _vbuf[v + 1] = _tempVecPos.y;\r\n            _vbuf[v + 2] = _tempVecPos.z;\r\n\r\n            _vbuf[v + 3] = vertices[vi++]; // u\r\n            _vbuf[v + 4] = vertices[vi++]; // v\r\n\r\n            _vbuf.set(_c, v + 5);// color\r\n        }\r\n        const chunkOffset = rd.chunk.vertexOffset;\r\n        for (let i = 0, il = indices.length, ii = _indexOffset; i < il; i++, ii++) {\r\n            _ibuf[ii] = _vertexOffset + indices[i] + chunkOffset;\r\n        }\r\n        _vertexFloatOffset += _vertexFloatCount;\r\n        _vertexOffset += _vertexCount;\r\n        _indexOffset += _indexCount;\r\n        _vertexCount = 0;\r\n        _indexCount = 0;\r\n    }\r\n\r\n    cumulatedCount = _indexOffset - _prevDrawIndexOffset;\r\n    if (_currentTexture && cumulatedCount > 0) {\r\n        _comp!._requestDrawData(_currentMaterial!, _currentTexture, _prevDrawIndexOffset, cumulatedCount);\r\n        _prevDrawIndexOffset = _indexOffset;\r\n    }\r\n    if (_comp!.maxIndexCount < _actualICount) {\r\n        _comp!.maxIndexCount = _actualICount;\r\n    }\r\n    if (_comp!.maxVertexCount < _actualVCount) {\r\n        _comp!.maxVertexCount = _actualVCount;\r\n    }\r\n}\r\n\r\nfunction cacheTraverse (frame: ArmatureFrame | null, parentMat?: Mat4): void {\r\n    if (!frame) return;\r\n    const segments = frame.segments;\r\n    const rd = _renderData;\r\n    if (segments.length === 0 || !rd) return;\r\n\r\n    let material: MaterialInstance | null = null;\r\n    // let offsetInfo;\r\n    const vertices = frame.vertices;\r\n    const indices = frame.indices;\r\n\r\n    let chunkOffset = 0;\r\n    let frameVFOffset = 0;\r\n    let frameIndexOffset = 0;\r\n    let segVFCount = 0;\r\n\r\n    let colorOffset = 0;\r\n    const colors = frame.colors;\r\n    let nowColor = colors[colorOffset++];\r\n    let maxVFOffset = nowColor.vfOffset!;\r\n    _handleColor(nowColor, 1.0);\r\n\r\n    const vbuf = rd.chunk.vb;\r\n    const ibuf = rd.indices!;\r\n\r\n    for (let i = 0, n = segments.length; i < n; i++) {\r\n        const segInfo = segments[i];\r\n        material = _getSlotMaterial(segInfo.tex, segInfo.blendMode)!;\r\n        if (!material) continue;\r\n        if (!_currentMaterial) _currentMaterial = material;\r\n        if (_mustFlush || material.hash !== _currentMaterial.hash || (segInfo.tex && segInfo.tex !== _currentTexture)) {\r\n            _mustFlush = false;\r\n            const cumulatedCount = _indexOffset - _prevDrawIndexOffset;\r\n            // Submit draw data\r\n            if (cumulatedCount > 0) {\r\n                _comp!._requestDrawData(_currentMaterial, _currentTexture!, _prevDrawIndexOffset, cumulatedCount);\r\n                _prevDrawIndexOffset = _indexOffset;\r\n            }\r\n            _currentMaterial = material;\r\n            _currentTexture = segInfo.tex!;\r\n        }\r\n\r\n        _vertexCount = segInfo.vertexCount;\r\n        _indexCount = segInfo.indexCount;\r\n\r\n        // Fill indices\r\n        chunkOffset = rd.chunk.vertexOffset;\r\n        for (let ii = _indexOffset, il = _indexOffset + _indexCount; ii < il; ii++) {\r\n            ibuf[ii] = chunkOffset + _vertexOffset + indices[frameIndexOffset++];\r\n        }\r\n\r\n        // Fill vertices\r\n        segVFCount = segInfo.vfCount;\r\n        const subArray = vertices.subarray(frameVFOffset, segVFCount);\r\n        vbuf.set(subArray, frameVFOffset);\r\n\r\n        let offset = 0;\r\n        if (parentMat) {\r\n            for (let ii = 0, il = _vertexCount; ii < il; ii++) {\r\n                _tempVecPos.x = vbuf[offset];\r\n                _tempVecPos.y = vbuf[offset + 1];\r\n                _tempVecPos.z = 0;\r\n                _tempVecPos.transformMat4(parentMat);\r\n                vbuf[offset] = _tempVecPos.x;\r\n                vbuf[offset + 1] = _tempVecPos.y;\r\n                vbuf[offset + 2] = _tempVecPos.z;\r\n                offset += PER_VERTEX_SIZE;\r\n            }\r\n        }\r\n        if ((_handleVal & NEED_COLOR)) {\r\n            // handle color\r\n            // tip: step of frameColorOffset should fix with vertex attributes, (xyzuvrgba--xyuvc)\r\n            let frameColorOffset = frameVFOffset / 9 * 5;\r\n            for (let ii = frameVFOffset, iEnd = frameVFOffset + segVFCount; ii < iEnd; ii += PER_VERTEX_SIZE, frameColorOffset += 5) {\r\n                if (frameColorOffset >= maxVFOffset) {\r\n                    nowColor = colors[colorOffset++];\r\n                    _handleColor(nowColor, 1.0);\r\n                    maxVFOffset = nowColor.vfOffset!;\r\n                }\r\n                vbuf.set(_c, ii + 5);\r\n            }\r\n        }\r\n        // Segment increment\r\n        frameVFOffset += segVFCount;\r\n        _vertexOffset += _vertexCount;\r\n        _indexOffset += _indexCount;\r\n        _vertexCount = 0;\r\n        _indexCount = 0;\r\n    }\r\n    const cumulatedCount = _indexOffset - _prevDrawIndexOffset;\r\n    if (_currentTexture && cumulatedCount > 0) {\r\n        _comp!._requestDrawData(_currentMaterial!, _currentTexture, _prevDrawIndexOffset, cumulatedCount);\r\n    }\r\n}\r\n\r\nfunction updateComponentRenderData (comp: ArmatureDisplay): void {\r\n    // comp.node._renderFlag |= RenderFlow.FLAG_UPDATE_RENDER_DATA;\r\n\r\n    const armature = comp._armature;\r\n    if (!armature || comp.renderData === null) return;\r\n\r\n    // Init temp var.\r\n    _mustFlush = true;\r\n    _premultipliedAlpha = comp.premultipliedAlpha;\r\n    // Reuse draw list\r\n    comp.drawList.reset();\r\n    _comp = comp;\r\n    _node = comp.node;\r\n    _renderData = comp.renderData;\r\n    _comp = comp;\r\n    _handleVal = 0;\r\n    _currentMaterial = null;\r\n\r\n    const nodeColor = comp.color;\r\n    _nodeR = nodeColor.r / 255;\r\n    _nodeG = nodeColor.g / 255;\r\n    _nodeB = nodeColor.b / 255;\r\n    _nodeA = comp.node._uiProps.opacity;\r\n    if (Color.toUint32(nodeColor) !== 0xffffffff) {\r\n        _handleVal |= NEED_COLOR;\r\n    }\r\n\r\n    const worldMat = comp.node.getWorldMatrix();\r\n\r\n    _vertexFloatCount = 0;\r\n    _vertexOffset = 0;\r\n    _vertexFloatOffset = 0;\r\n    _indexCount = 0;\r\n    _indexOffset = 0;\r\n    _prevDrawIndexOffset = 0;\r\n    _actualVCount = _comp.maxVertexCount;\r\n    _actualICount = _comp.maxIndexCount;\r\n\r\n    if (comp.isAnimationCached()) {\r\n        // Traverse input assembler.\r\n        cacheTraverse(comp._curFrame, worldMat);\r\n    } else {\r\n        // Traverse all armature.\r\n        realTimeTraverse(armature, 1.0, worldMat);\r\n\r\n        const graphics = comp._debugDraw;\r\n        if (comp.debugBones && graphics) {\r\n            graphics.clear();\r\n\r\n            graphics.lineWidth = 5;\r\n            graphics.strokeColor = _boneColor;\r\n            graphics.fillColor = _slotColor; // Root bone color is same as slot color.\r\n\r\n            const bones = armature.getBones();\r\n            for (let i = 0, l = bones.length; i < l; i++) {\r\n                const bone = bones[i];\r\n                const boneLength = Math.max(bone.boneData.length, 5);\r\n                const startX = bone.globalTransformMatrix.tx;\r\n                const startY = bone.globalTransformMatrix.ty;\r\n                const endX = startX + bone.globalTransformMatrix.a * boneLength;\r\n                const endY = startY + bone.globalTransformMatrix.b * boneLength;\r\n\r\n                graphics.moveTo(startX, startY);\r\n                graphics.lineTo(endX, endY);\r\n                graphics.stroke();\r\n\r\n                // Bone origins.\r\n                graphics.circle(startX, startY, Math.PI * 2);\r\n                graphics.fill();\r\n                if (i === 0) {\r\n                    graphics.fillColor = _originColor;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Ensure mesh buffer update\r\n    _accessor.getMeshBuffer(_renderData.chunk.bufferId).setDirty();\r\n\r\n    // Clear temp var.\r\n    _node = undefined;\r\n    _comp = undefined;\r\n}\r\n\r\ncclegacy.internal.DragonBonesAssembler = simple;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { IAssemblerManager } from '../../2d/renderer/base';\r\nimport { ArmatureDisplay } from '../ArmatureDisplay';\r\nimport { simple } from './simple';\r\n\r\n// Inline all type switch to avoid jit deoptimization during inlined function change\r\n/**\r\n * @engineInternal Since v3.7.2 this is an engine private object.\r\n */\r\nexport const simpleDragonBoneAssembler: IAssemblerManager = {\r\n    getAssembler () {\r\n        return simple;\r\n    },\r\n};\r\n\r\nArmatureDisplay.Assembler = simpleDragonBoneAssembler;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @engineInternal Since v3.7.2, this is an engine private enum type.\r\n * @deprecated Since v3.7.2, will be removed in the future.\r\n */\r\nexport enum ExtensionType {\r\n    FFD = 0,\r\n    AdjustColor = 10,\r\n    BevelFilter = 11,\r\n    BlurFilter = 12,\r\n    DropShadowFilter = 13,\r\n    GlowFilter = 14,\r\n    GradientBevelFilter = 15,\r\n    GradientGlowFilter = 16\r\n}\r\n\r\n/**\r\n * @en Event type in dragonbones animation.\r\n * @zh 龙骨动画中的事件类型。\r\n */\r\nexport enum DragonBonesEventType {\r\n    /**\r\n     * @en Event about animation frame.\r\n     * @zh 动画帧相关的事件。\r\n     */\r\n    Frame = 0,\r\n    /**\r\n     * @en Event about sound.\r\n     * @zh 声音相关的事件。\r\n     */\r\n    Sound = 1\r\n}\r\n\r\n// To keep the compatibility, don't use it internally, otherwise, enum value may be inlined to wrong value.\r\n// Use DragonBonesEventType instead.\r\nexport const EventType = DragonBonesEventType;\r\n\r\n/**\r\n * @en Animation fade out mode.\r\n * @zh 动画淡出模式。\r\n */\r\nexport enum AnimationFadeOutMode {\r\n    None = 0,\r\n\r\n    /**\r\n     * @en Fade out the animation states of the same layer.\r\n     * @zh 淡出同层的动画状态。\r\n     */\r\n    SameLayer = 1,\r\n\r\n    /**\r\n     * @en Fade out the animation states of the same group.\r\n     * @zh 淡出同组的动画状态。\r\n     */\r\n    SameGroup = 2,\r\n\r\n    /**\r\n     * @en Fade out the animation states of the same layer and group.\r\n     * @zh 淡出同层并且同组的动画状态。\r\n     */\r\n    SameLayerAndGroup = 3,\r\n\r\n    /**\r\n     * @en Fade out of all animation states.\r\n     * @zh 淡出所有的动画状态。\r\n     */\r\n    All = 4\r\n}\r\n\r\nexport * from './CCFactory';\r\nexport * from './CCSlot';\r\nexport * from './CCTextureData';\r\nexport * from './CCArmatureDisplay';\r\nexport * from './ArmatureCache';\r\n\r\nexport * from './DragonBonesAsset';\r\nexport * from './DragonBonesAtlasAsset';\r\nexport * from './ArmatureDisplay';\r\nexport * from './AttachUtil';\r\nexport * from './assembler';\r\n\r\nexport * from '@cocos/dragonbones-js';\r\n"],"names":["__extends","Object","setPrototypeOf","dragonBones","DragonBones","eventManager","this","_clock","WorldClock","_events","_objects","_eventManager","console","info","VERSION","prototype","advanceTime","passedTime","length","_i","_a","returnToPool","i","eventObject","armature","_armatureData","eventDispatcher","dispatchDBEvent","type","EventObject","SOUND_EVENT","bufferObject","bufferEvent","value","indexOf","push","object","defineProperty","get","enumerable","configurable","yDown","debug","debugDraw","webAssembly","warn","assert","Date","now","getTime","t","e","r","constructor","hasOwnProperty","hashCode","BaseObject","_hashCode","_isInPool","_returnObject","classType","String","maxCount","_maxCountMap","_defaultMaxCount","pool","_poolsMap","toString","Error","setMaxCount","objectConstructor","clearPool","k","borrowObject","pop","object_1","_onClear","Matrix","a","b","c","d","tx","ty","copyFrom","copyFromArray","offset","identity","concat","aA","txA","tyA","bA","cA","dA","invert","determinant","transformPoint","x","y","result","delta","transformRectangle","rectangle","xMax","width","yMax","height","x0","y0","x1","x2","y2","x3","y3","tmp","Math","floor","ceil","y1","skew","rotation","scaleX","scaleY","Transform","normalizeRadian","PI","add","minus","fromMatrix","matrix","backupScaleX","backupScaleY","PI_Q","atan","cos","sin","skewX","toMatrix","PI_D","PI_H","RAD_DEG","DEG_RAD","ColorTransform","alphaMultiplier","redMultiplier","greenMultiplier","blueMultiplier","alphaOffset","redOffset","greenOffset","blueOffset","Point","clear","Rectangle","UserData","_super","_this","apply","arguments","ints","floats","strings","addInt","addFloat","addString","getInt","index","getFloat","getString","ActionData","data","name","bone","slot","DragonBonesData","frameIndices","cachedFrames","armatureNames","armatures","userData","autoSearch","frameRate","version","stage","binary","intArray","floatArray","frameIntArray","frameFloatArray","frameArray","timelineArray","addArmature","parent","getArmature","armatureName","dispose","ArmatureData","aabb","animationNames","sortedBones","sortedSlots","defaultActions","actions","bones","slots","constraints","skins","animations","canvas","_b","_c","cacheFrameRate","scale","defaultSkin","defaultAnimation","sortBones","total","count","sortHelper","flag","constraint","root","target","cacheFrames","setCacheFrame","globalTransformMatrix","transform","arrayOffset","dataArray","getCacheFrame","addBone","addSlot","addConstraint","addSkin","addAnimation","addAction","isDefault","getBone","boneName","getSlot","slotName","getConstraint","constraintName","getSkin","skinName","getMesh","meshName","skin","getDisplay","getAnimation","animationName","BoneData","inheritTranslation","inheritRotation","inheritScale","inheritReflection","SurfaceData","vertices","call","segmentX","segmentY","SlotData","color","createColor","blendMode","displayIndex","zOrder","DEFAULT_COLOR","ConstraintData","order","IKConstraintData","scaleEnabled","bendPositive","weight","PathConstraintData","pathSlot","pathDisplayData","positionMode","spacingMode","rotateMode","position","spacing","rotateOffset","rotateMix","translateMix","AddBone","CanvasData","hasBackground","SkinData","displays","slotDisplays_1","display","addDisplay","displayName","slotDisplays","getDisplays","slotDisplays_2","VerticesData","isShared","inheritDeform","shareFrom","DisplayData","path","ImageDisplayData","pivot","texture","ArmatureDisplayData","inheritAnimation","MeshDisplayData","BoundingBoxDisplayData","boundingBox","PathDisplayData","curveLengths","closed","constantSpeed","WeightData","BoundingBoxData","RectangleBoundingBoxData","_computeOutCode","xMin","yMin","code","rectangleIntersectsSegment","xA","yA","xB","yB","intersectionPointA","intersectionPointB","normalRadians","inSideA","inSideB","intersectionCount","outcode0","outcode1","normalRadian","outcodeOut","containsPoint","pX","pY","widthH","heightH","intersectsSegment","EllipseBoundingBoxData","ellipseIntersectsSegment","xC","yC","dd","dX","dY","lAB","sqrt","xD","yD","rr","dR","dT","sA","sB","sideAB","atan2","PolygonBoundingBoxData","polygonIntersectsSegment","dXAB","llAB","dMin","dMax","dXCD","dYCD","llCD","ll","dYAB","isInSide","l","iP","AnimationData","boneTimelines","surfaceTimelines","slotTimelines","constraintTimelines","animationTimelines","boneCachedFrameIndices","slotCachedFrameIndices","actionTimeline","zOrderTimeline","_e","_d","_f","_g","_h","_j","frameIntOffset","frameFloatOffset","frameOffset","frameCount","playTimes","duration","fadeInTime","max","cacheFrameCount","indices","Array","addBoneTimeline","timeline","timelines","addSurfaceTimeline","surface","addSlotTimeline","addConstraintTimeline","addAnimationTimeline","timelineName","getBoneTimelines","getSurfaceTimelines","getSlotTimelines","getConstraintTimelines","getAnimationTimelines","getBoneCachedFrameIndices","getSlotCachedFrameIndices","TimelineData","frameIndicesOffset","AnimationConfig","boneMask","pauseFadeOut","fadeOutMode","fadeOutTweenType","fadeOutTime","actionEnabled","additiveBlending","displayControl","pauseFadeIn","resetToPose","fadeInTweenType","layer","timeScale","autoFadeOutTime","animation","group","containsBoneMask","addBoneMask","recursive","currentBone","getBones","contains","removeBoneMask","splice","index_1","TextureAtlasData","textures","imagePath","createTexture","addTexture","getTexture","textureName","TextureData","region","frame","createRectangle","rotated","DeformVertices","verticesDirty","verticesData","init","verticesDataValue","vertexCount","isBonesUpdate","_childrenTransformDirty","dragonBones_1","Armature","_bones","_slots","_constraints","_actions","_animation","_proxy","_replaceTextureAtlasData","_onSortSlots","_zOrder","remove","dbClear","_lockUpdate","_slotsDirty","_zOrderDirty","_flipX","_flipY","_cacheFrameIndex","_display","_replacedTexture","_dragonBones","_parent","_sortZOrder","slotIndices","isOriginal","slotDatas","slotIndex","slotData","_setZorder","_addBone","_addSlot","_addConstraint","_bufferAction","action","append","unshift","armatureData","proxy","Animation","dbInit","prevCacheFrameIndex","sort","update","actionData","childArmature","fadeIn","getSlots","dbUpdate","invalidUpdate","updateSlot","isV","intSlotA","intXA","intYA","intAN","intSlotB","intXB","intYB","intBN","getBoneByDisplay","getSlotByDisplay","set","clock","replaceTexture","replacedTexture","hasEventListener","hasDBEventListener","addEventListener","listener","addDBEventListener","removeEventListener","removeDBEventListener","enableAnimationCache","TransformObject","global","origin","_globalDirty","_armature","updateGlobalTransform","_helpMatrix","_helpTransform","_helpPoint","Bone","animationPose","_blendState","BlendState","offsetMode","_transformDirty","_localDirty","_hasConstraint","_visible","_cachedFrameIndex","_boneData","_cachedFrameIndices","_updateGlobalTransformMatrix","isCache","boneData","flipX","flipY","inherit","parentMatrix","_getGlobalTransformMatrix","armatureValue","cacheFrameIndex","dirty","cachedFrameIndex","_root","updateByConstraint","ancestor","_updateVisible","Surface","_vertices","_deformVertices","_hullCache","_matrixCahce","_dX","_dY","_k","_kX","_kY","_getAffineTransform","lX","lY","aX","aY","bX","bY","cX","cY","isDown","dabX","dabY","dacY","dacX","_updateVertices","animationVertices","originalVertices","segmentXD","lastIndex","raX","raY","rbX","rbY","rcX","rcY","rdX","rdY","lB","lA","surfaceData","indexX","indexY","matrices","matrixIndex","helpMatrix","vertexIndex","ddX","ddY","sX","sY","helpPoint","Slot","_localMatrix","_colorTransform","_displayDatas","_displayList","_rawDisplay","_meshDisplay","disposeDisplayList","eachDisplay","disposeDisplayList_1","_disposeDisplay","displayController","_displayDirty","_blendModeDirty","_colorDirty","_blendMode","_displayIndex","_animationDisplayIndex","_pivotX","_pivotY","_slotData","_rawDisplayDatas","_displayData","_boundingBoxData","_textureData","_childArmature","_getDefaultRawDisplayData","defaultRawDisplayDatas","_updateDisplayData","prevDisplayData","prevTextureData","rawDisplayData","currentVerticesData","prevVerticesData","imageDisplayData","rect","_updateDisplay","prevDisplay","prevChildArmature","currentDisplay","_onUpdateDisplay","_replaceDisplay","_visibleDirty","_updateFrame","reset","actions_1","actionDataToInstance","play","_setDisplayIndex","isAnimation","_setColor","_setDisplayList","_initDisplay","rawDisplay","meshDisplay","_isFromCache","slotParent","_addDisplay","_updateZOrder","_updateBlendMode","_updateColor","isSkinned","isSurface","_updateMesh","_updateTransform","updateTransformAndMatrix","replaceDisplayData","backupDisplayList","backupDisplayList_1","disposeDisplayList_2","displayListLength","replaceDisplayList","displayList","setDisplay","Constraint","_target","_bone","_constraintData","IKConstraint","_scaleEnabled","_bendPositive","_weight","_computeA","ikGlobal","radian","_computeB","boneLength","parentGlobal","lLL","lPP","lP","rawRadian","rawRadianA","lTT","lL","lT","radianA","h","hX","hY","rY","parentParent","parentParentMatrix","isPPR","rX","rawParentRadian","currentRadianA","radianB","constraintData","ikConstraintData","PathConstraint","_spaces","_positions","_curves","_boneLengths","_pathGlobalVertices","_segments","pathOffset","_pathSlot","_updatePathVertices","dragonBonesData","pathVertexCount","pathVertexOffset","weightData","weightBoneCount","weightOffset","iV","iB","iW","xG","yG","ii","vx","vy","parentBone","iV_1","_computeVertices","start","out","_computeBezierCurve","pathDisplayDta","spaceCount","tangents","percentPosition","percentSpacing","positions","spaces","isClosed","curveVertices","verticesLength","curveCount","preCurve","pathLength","curves","tmpx","tmpy","dddfx","dddfy","ddfx","ddfy","dfx","dfy","cx1","cy1","cx2","cy2","w","segments","segment","o","curve","p","length_1","prev","curveLength","length_2","addCurvePosition","lenghts","percent","len","preLen","mt","mt2","t2","isPathVerticeDirty","deformVertices","isLengthMode","isChainScaleMode","isTangentMode","boneCount","spacesCount","tip","boneX","boneY","dy","lenght","s","dx","length_3","time","_systemTime","_animatebles","currentTime","animatable","animateble","_animationNames","_animationStates","_animations","_animationConfig","_animationDirty","_inheritTimeScale","_lastAnimationState","_fadeOut","animationConfig","animationState","fadeOut","animationStateCount","_fadeState","_subFadeState","animationData","_animationData","rawDisplayDatas","rawDsplayData","stop","getState","playConfig","animationState_1","AnimationState","added","hasAnimation","isLocked","childAnimatiionState","isPlaying","isCompleted","gotoAndPlayByTime","gotoAndPlayByFrame","gotoAndPlayByProgress","progress","gotoAndStopByTime","gotoAndStopByFrame","gotoAndStopByProgress","getStates","gotoAndPlay","gotoAndStop","list","_boneMask","_boneTimelines","_surfaceTimelines","_slotTimelines","_constraintTimelines","_animationTimelines","_poseTimelines","_bonePoses","_actionTimeline","_zOrderTimeline","fadeTotalTime","_timelineDirty","_playheadState","_position","_duration","_fadeTime","_time","_fadeProgress","_weightResult","_updateTimelines","timelineDatas","timelineDatas_1","timelineData","IKConstraintTimelineState","timelineDatas_2","AnimationTimelineState","_updateBoneAndSlotTimelines","bonePose","BonePose","timelineDatas_3","BoneAllTimelineState","BoneTranslateTimelineState","BoneRotateTimelineState","BoneScaleTimelineState","timelineDatas_4","SurfaceTimelineState","_l","displayIndexFlag","colorFlag","ffdFlags","_m","timelineDatas_5","SlotDislayTimelineState","SlotColorTimelineState","DeformTimelineState","vertexOffset","_p","_o","displayData","meshOffset","_q","_r","_advanceFadeTime","isFadeOut","FADE_OUT","FADE_IN","eventType","FADE_OUT_COMPLETE","FADE_IN_COMPLETE","ActionTimelineState","ZOrderTimelineState","isCacheEnabled","isUpdateTimeline","isUpdateBoneTimeline","playState","internval","state","blend","BoneTimelineState","SlotTimelineState","ConstraintTimelineState","pausePlayhead","bones_1","index_2","bones_2","removeAllBoneMask","currentPlayTimes","setCurrentTime","current","p_layer","leftWeight","layerWeight","blendWeight","TimelineState","_tweenState","_frameRate","_frameValueOffset","_frameCount","_frameOffset","_frameIndex","_frameRateR","_timeScale","_timeOffset","_dragonBonesData","_timelineData","_animationState","_frameArray","_frameIntArray","_frameFloatArray","_timelineArray","_frameIndices","_setCurrentTime","prevState","prevPlayTimes","totalTime","prevTime","frameIndex","timelineFrameIndex","_onArriveAtFrame","_onUpdateFrame","TweenTimelineState","_getEasingValue","tweenType","easing","pow","_getEasingCurveValue","samples","segmentCount","valueIndex","fromValue","_tweenType","_curveCount","_framePosition","_frameDurationR","_tweenProgress","_tweenEasing","nextFrameOffset","frameDuration","_onCrossFrame","actionCount","FRAME_EVENT","START","isReverse","loopCompleteEvent","completeEvent","LOOP_COMPLETE","COMPLETE","crossedFrameIndex","prevFrameIndex","framePosition","valueOffset","_current","_delta","_result","_frameFloatOffset","_valueCount","_deformCount","_valueOffset","nextValueOffset","_dirty","colorOffset","fadeProgress","ikConstraint","_floats","frameRateR","instance","DataParser","_getArmatureType","toLowerCase","_getBoneType","_getDisplayType","_getBoundingBoxType","_getActionType","_getBlendMode","_getPositionMode","toLocaleLowerCase","_getSpacingMode","_getRotateMode","parseDragonBonesData","rawData","ArrayBuffer","BinaryDataParser","getInstance","ObjectDataParser","parseTextureAtlasData","textureAtlasData","subTextureList","SUB_TEXTURE","subTextureObject","subTextureName","NAME","subTextureRegion","subTextureFrame","X","Y","WIDTH","HEIGHT","FRAME_WIDTH","FRAME_X","FRAME_Y","FRAME_HEIGHT","DATA_VERSION_2_3","DATA_VERSION_3_0","DATA_VERSION_4_0","DATA_VERSION_4_5","DATA_VERSION_5_0","DATA_VERSION_5_5","DATA_VERSION","DATA_VERSIONS","TEXTURE_ATLAS","FORMAT","IMAGE_PATH","ROTATED","DRADON_BONES","USER_DATA","ARMATURE","BONE","SURFACE","SLOT","CONSTRAINT","IK","PATH_CONSTRAINT","SKIN","DISPLAY","ANIMATION","Z_ORDER","FFD","FRAME","TRANSLATE_FRAME","ROTATE_FRAME","SCALE_FRAME","DISPLAY_FRAME","COLOR_FRAME","DEFAULT_ACTIONS","ACTIONS","EVENTS","INTS","FLOATS","STRINGS","CANVAS","TRANSFORM","PIVOT","AABB","COLOR","COMPATIBLE_VERSION","FRAME_RATE","TYPE","SUB_TYPE","PARENT","TARGET","STAGE","SHARE","PATH","LENGTH","DISPLAY_INDEX","BLEND_MODE","INHERIT_TRANSLATION","INHERIT_ROTATION","INHERIT_SCALE","INHERIT_REFLECTION","INHERIT_ANIMATION","INHERIT_DEFORM","SEGMENT_X","SEGMENT_Y","BEND_POSITIVE","CHAIN","WEIGHT","FADE_IN_TIME","PLAY_TIMES","SCALE","OFFSET","POSITION","DURATION","TWEEN_EASING","TWEEN_ROTATE","TWEEN_SCALE","CLOCK_WISE","CURVE","SOUND","EVENT","ACTION","SKEW_X","SKEW_Y","SCALE_X","SCALE_Y","VALUE","ROTATE","SKEW","ALPHA_OFFSET","RED_OFFSET","GREEN_OFFSET","BLUE_OFFSET","ALPHA_MULTIPLIER","RED_MULTIPLIER","GREEN_MULTIPLIER","BLUE_MULTIPLIER","UVS","VERTICES","TRIANGLES","WEIGHTS","SLOT_POSE","BONE_POSE","GLUE_WEIGHTS","GLUE_MESHES","BONES","POSITION_MODE","SPACING_MODE","ROTATE_MODE","SPACING","ROTATE_OFFSET","ROTATE_MIX","TRANSLATE_MIX","TARGET_DISPLAY","CLOSED","CONSTANT_SPEED","VERTEX_COUNT","LENGTHS","GOTO_AND_PLAY","DEFAULT_NAME","_rawTextureAtlasIndex","_rawBones","_data","_surface","_slot","_skin","_mesh","_timeline","_rawTextureAtlases","_defaultColorOffset","_prevClockwise","_prevRotation","_helpMatrixA","_helpMatrixB","_helpColorTransform","_helpArray","_intArray","_floatArray","_cacheRawMeshes","_cacheMeshes","_actionFrames","_weightSlotPose","_weightBonePoses","_cacheBones","_slotChildActions","_getBoolean","key","defaultValue","_getNumber","_getString","charCodeAt","encodeURI","_getCurvePoint","x4","y4","l_t","powA","kA","kB","kC","powB","kD","_samplingEasingCurve","stepIndex","isInCurve","lower","higher","percentage","_parseActionDataInFrame","frameStart","_mergeActionFrame","actionOffset","size","_parseActionData","actions_2","ActionFrame","eachFrame","_parseArmature","rawCanvas","rawAABB","rawBones_1","rawBone","parentName","_parseBone","parent_1","rawIKS_1","rawIK","_parseIKConstraint","rawSlots_1","rawSlot","_parseSlot","rawSkins_1","_parseSkin","rawSkin","rawPaths_1","rawPath","_parsePathConstraint","rawMeshData","_parseMeshGlue","rawData_1","shareName","shareMesh","rawAnimations_1","rawAnimation","_parseAnimation","actions_3","actions_4","_parseTransform","rawVertices","targetDisplay","bones_3","_parseColorTransform","rawSlots","rawSlots_2","rawDisplays_1","_parseDisplay","imageDisplay","_parsePivot","armatureDisplay","actions_5","_parseMesh","_parseBoundingBox","boundingBoxDisplay","rawCurveLengths","pathDisplay","_parsePath","rawWeights","rawBones","weightCount","floatOffset","rawBoneIndex","iF","j","boneIndex","boneWeight","rawPivot","mesh","rawUVs","triangleCount","rawTriangles","uvOffset","rawSlotPose","rawBonePoses","weightBoneIndices","iD","vertexBoneCount","_parsePolygonBoundingBox","polygonBoundingBox","resize","rawFrames","keyFrameCount","rawFrame","_parseTimeline","_parseZOrderFrame","rawTimelines_1","rawTimeline","_parseBoneTimeline","rawTimelines_2","surfaceName","_parseSurfaceFrame","rawTimelines_3","_parseSlotTimeline","rawTimelines_4","_parseSlotFFDFrame","rawTimelines_5","_parseIKConstraintFrame","rawTimelines_6","_parseAnimationFrame","_parseActionFrame","framesKey","addIntOffset","addFloatOffset","frameValueCount","frameParser","frameIntArrayLength","timelineOffset","round","frameFloatArrayLength","totalFrameCount","iK","_parseBoneTranslateFrame","_parseBoneRotateFrame","_parseBoneScaleFrame","_parseBoneAllFrame","displayTimeline","_parseSlotDisplayFrame","colorTimeline","_parseSlotColorFrame","_parseFrame","_parseTweenFrame","sampleCount","tweenEasing","rawZOrder","slotCount","unchanged","zOrders","i_1","i_2","i_3","zOrderOffset","originalIndex","unchangedIndex","rawColor","rawData_2","rawAction","rawInts_1","rawValue","rawFloats_1","rawStrings_1","_parseArray","_modifyArray","Int16Array","BYTES_PER_ELEMENT","Uint16Array","l1","l2","Float32Array","l3","l4","l6","lTotal","l5","shareBuffer","webAssemblyModule","HEAP16","buffer","_malloc","bufferPointer","setDataBinary","compatibleVersion","rawArmatures_1","rawArmature","undefined","rawTextureAtlas","rawTextures","textureData","rawTexture","frameWidth","frameHeight","_objectDataParserInstance","_inRange","min","_decodeUTF8","utf8_code_point","utf8_bytes_needed","utf8_bytes_seen","utf8_lower_boundary","pos","_byte","code_point","cp","lower_boundary","fromCharCode","_getUTF16Key","_parseBinaryTimeline","_timelineArrayBuffer","_frameArrayBuffer","_parseVertices","_intArrayBuffer","boneIndicesOffset","offsets","rawTimeliness","rawTimelines","timelineType","_binary","_binaryOffset","rawArray","Uint8Array","copyArray","_floatArrayBuffer","_frameIntArrayBuffer","_frameFloatArrayBuffer","tag","headerLength","Uint32Array","headerBytes","headerString","header","JSON","parse","_binaryDataParserInstance","BaseFactory","dataParser","_dragonBonesDataMap","_textureAtlasDataMap","_dataParser","_objectParser","_binaryParser","_isSupportMesh","_getTextureData","textureAtlasName","_fillBuildArmaturePackage","dataPackage","dragonBonesName","dataName","skinArmatureData","_buildBones","_buildSlots","currentSkin","skinSlots","displayDatas","_buildSlot","_getSlotDisplay","_buildConstraints","pathConstraint","_buildChildArmature","buildArmature","meshDisplayData","armatureDisplayData","actions_6","_buildTextureAtlasData","addTextureAtlasData","addDragonBonesData","textureAtlas","updateTextureAtlasData","textureAtlases","textureAtlasDatas","getTextureAtlasData","getDragonBonesData","removeDragonBonesData","disposeData","textureAtlasList","removeTextureAtlasData","textureAtlasDataList","textureAtlasDataList_1","getArmatureData","BuildArmaturePackage","textureAtlasDataList_2","_buildArmature","replaceDisplay","replaceSlotDisplay","replaceSlotDisplayList","replaceSkin","isOverride","exclude","success","displayCount","replaceAnimation","skinData","rawAnimations","childArmatureData","getAllDragonBonesData","getAllTextureAtlasData","changeSkin","copyAnimationsToArmature","toArmature","fromArmatreName","fromSkinName","fromDragonBonesDataName","replaceOriginalAnimation","BinaryOffset","WeigthBoneCount","WeigthFloatOffset","WeigthBoneIndices","MeshVertexCount","MeshTriangleCount","MeshFloatOffset","MeshWeightOffset","MeshVertexIndices","TimelineScale","TimelineOffset","TimelineKeyFrameCount","TimelineFrameValueCount","TimelineFrameValueOffset","TimelineFrameOffset","FramePosition","FrameTweenType","FrameTweenEasingOrCurveSampleCount","FrameCurveSamples","DeformMeshOffset","DeformCount","DeformValueCount","DeformValueOffset","DeformFloatOffset","ArmatureType","MovieClip","Stage","BoneType","DisplayType","Image","Mesh","BoundingBox","BoundingBoxType","Ellipse","Polygon","ActionType","Play","Stop","GotoAndPlay","GotoAndStop","FadeIn","FadeOut","Frame","Sound","BlendMode","Normal","Add","Alpha","Darken","Difference","Erase","HardLight","Invert","Layer","Lighten","Multiply","Overlay","Screen","Subtract","TweenType","None","Line","Curve","QuadIn","QuadOut","QuadInOut","TimelineType","Action","ZOrder","BoneAll","BoneTranslate","BoneRotate","BoneScale","SlotDisplay","SlotColor","SlotFFD","AnimationTime","AnimationWeight","_x","_y","ccclass","_decorator","CCTextureAtlasData","_dec","_class","_TextureAtlasData","_len","args","_key","_renderTexture","_inheritsLoose","_proto","CCTextureData","renderTexture","_createClass","spriteFrame","Rect","SpriteFrame","_dec2","_class3","_TextureData","_this2","_len2","_key2","CCSlot","_Slot","_localVertices","_indices","_matrix","_worldMatrix","_worldMatrixDirty","_color","Mat4","Color","calculWorldMatrix","_mulMat","copy","_removeDisplay","visible","_updateGlueMesh","childSlots","g","localVertices","indexOffset","vfOffset","currentTextureData","textureAtlasWidth","textureAtlasHeight","_identityTransform","error","hasDeform","weightFloatOffset","lvi","xL","yL","m","m00","m01","m04","m05","m12","m13","updateWorldMatrix","parentSlot","n","aa","ab","ac","ad","atx","aty","ba","bb","bc","bd","btx","bty","CCArmatureDisplay","_DisplayData","shouldAdvanced","_ccNode","_ccComponent","_eventTarget","EventTarget","hasEvent","addEvent","removeEvent","setEventTarget","eventTarget","getRootDisplay","convertToRootSpace","worldMatrix","newPos","Vec3","convertToWorldSpace","point","_ccNode$_getUITransfo","ccNode","getRootNode","_getUITransformComp","convertToWorldSpaceAR","rootDisplay","_markForUpdateRenderData","advanceTimeBySelf","on","off","emit","CCFactory","_class2","_BaseFactory","id","uuid","director","getScheduler","game","Game","EVENT_RESTART","onRestart","_assertThisInitialized","initUpdate","_factory","Scheduler","enableForTarget","scheduleUpdate","SystemPriority","HIGH","dt","getDragonBonesDataByRawData","buildArmatureDisplay","createArmatureNode","comp","node","Node","getComponent","addComponent","_armatureName","_dragonAsset","dragonAsset","_dragonAtlasAsset","dragonAtlasAsset","_init","_sortSlots","inserted","_skinData","_isChildArmature","getDragonBonesDataByUUID","removeDragonBonesDataByUUID","FrameTime","_boneInfoOffset","_indexOffset","_vfOffset","_preTexUrl","_preBlendMode","_segVCount","_segICount","_segOffset","_colorOffset","_preColor","AnimationCache","maxVertexCount","maxIndexCount","_privateMode","_inited","_invalid","_enableCacheAttachedInfo","frames","_frameIdx","_armatureInfo","_animationName","_tempSegments","_tempColors","_tempBoneInfos","armatureInfo","invalidAllFrame","begin","curAnimationCache","updateToFrame","end","_needToUpdate","toFrameIdx","updateFrame","isInited","isInvalid","updateAllFrame","enableCacheAttachedInfo","colors","boneInfos","uintVert","_traverseArmature","preSegOffset","preSegInfo","indexCount","vfCount","colorI32","copyOutVerticeSize","parentOpacity","slotVertices","slotMatrix","slotColor","colorVal","boneInfo","boneMat","nativeUrl","tex","vl","il","ArmatureCache","_animationPool","_armatureCache","_proto2","enablePrivateMode","_removeArmature","armatureKey","animationsCache","aniKey","animationCache","resetArmature","getArmatureCache","atlasUUID","canCache","getAnimationCache","initAnimationCache","poolKey","invalidAnimationCache","updateAnimationCache","sharedCache","serializable","DragonBonesAsset","_Asset","_dragonBonesJson","_initializer","_dragonBonesJsonData","_armaturesEnum","createNode","callback","_clear","factory","dragonBonesJson","_nativeAsset","_uuid","dbData","getArmatureEnum","enumDef","Enum","getAnimsEnum","anims","animName","destroy","Asset","cclegacy","internal","DragonBonesAtlasAsset","Texture2D","_atlasJson","_texture","_initializer2","_atlasJsonData","_initializer3","_textureAtlasData","_initializer4","atlasJson","atlasJsonObj","_applyDecoratedInitializer","DefaultArmaturesEnum","DefaultAnimsEnum","DefaultCacheMode","AnimationCacheMode","_tempMat4","AttachUtil","_armatureNode","_armatureDisplay","_syncAttachedNode","isCached","isAnimationCached","_curFrame","tm","sockets","socketNodes","sock","boneNode","isValid","ArmatureSystem","_System","_armatures","Set","_instance","registerSystem","ID","has","postUpdate","forEach","updateAnimation","syncAttachedNode","prepareRenderData","System","ccenum","override","DragonBoneSocket","js","ArmatureDisplay","Material","_dec3","_class6","_UIRenderer","premultipliedAlpha","attachUtil","_defaultArmatureIndexValue","_initializer5","_initializer6","_initializer7","_initializer8","_initializer9","_animationIndexValue","_initializer10","_preCacheMode","_cacheMode","REALTIME","_defaultCacheModeValue","_initializer11","_initializer12","_playTimes","_initializer13","_debugBones","_initializer14","_enableBatch","_initializer15","_debugDraw","_armatureKey","_accTime","_playCount","_frameCache","_playing","_displayProxy","_drawIdx","_drawList","RecyclePool","material","_materialCache","_enumArmatures","_enumAnimations","_socketNodes","Map","_cachedSockets","_sockets","_initializer16","_drawInfoList","_cacheModeEnum","initFactory","setPropertyEnumType","_useVertexOpacity","requestDrawInfo","idx","RenderDrawInfo","onLoad","_requestDrawData","draw","destroyRenderData","getMaterialTemplate","customMaterial","updateMaterial","getMaterialForBlend","src","dst","inst","MaterialInstance","subModelIdx","owner","recompileShaders","TWO_COLORED","USE_LOCAL","overridePipelineStates","blendState","targets","blendSrc","blendDst","_updateBuiltinMaterial","builtinResMgr","mat","_customMaterial","setSharedMaterial","_cleanMaterialCache","_render","batcher","indicesCount","renderData","rd","chunk","accessor","vertexAccessor","meshBuffer","getMeshBuffer","dc","commitMiddleware","subIndices","subarray","appendIndices","bufferId","__preload","_defaultCacheMode","_parseDragonAtlasAsset","_refresh","children","child","_updateDebugDraw","_indexBoneSockets","_updateSocketBindings","getArmatureKey","setAnimationCacheMode","cacheMode","onEnable","_flushAssembler","onDisable","_emitCacheCompleteEvent","frameCache","frameTime","frameIdx","onDestroy","_materialInstances","filter","PRIVATE_CACHE","SHARED_CACHE","debugBones","debugDrawNode","hideFlags","CCObjectFlags","DontSave","HideInHierarchy","lineWidth","strokeColor","errorID","message","_updateBatch","setContentSize","playAnimation","querySockets","from","keys","querySocketPathByName","_step","ret","_iterator","_createForOfIteratorHelperLoose","done","endsWith","_updateCacheModeEnum","assign","_updateAnimEnum","animEnum","_updateArmatureEnum","armatureEnum","nameToBone","cacheBoneName","bi","cache","_boneIndex","walkArmature","prefix","boneToName","_step2","_iterator2","getArmatureNames","getAnimationNames","once","assembler","Assembler","getAssembler","_assembler","_renderData","createData","socket","_verifySockets","val","createRenderEntity","renderEntity","RenderEntity","RenderEntityType","DYNAMIC","setUseLocal","markForUpdateRenderData","enable","animNames","armaturesEnum","_defaultArmatureIndex","animsEnum","_animationIndex","UIRenderer","_class5","_applyDecoratedDescriptor","_dec8","getOwnPropertyDescriptor","_dec9","_class4","_nodeR","_nodeG","_nodeB","_nodeA","_premultipliedAlpha","_mustFlush","_ibuf","_vbuf","_comp","_handleVal","_boneColor","_slotColor","_originColor","_vertexFloatCount","_vertexCount","_vertexOffset","_vertexFloatOffset","_indexCount","_actualVCount","_actualICount","_prevDrawIndexOffset","_tempVecPos","_slotMat","_currentMaterial","_currentTexture","_getSlotMaterial","BlendFactor","ONE","SRC_ALPHA","DST_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","_handleColor","_multiply","_accessor","simple","Simple","vCount","ensureAccessor","device","batcher2D","attributes","vfmtPosUvColor","StaticVBAccessor","registerBufferAccessor","Number","parseInt","iCount","remainder","RenderData","updateRenderData","updateComponentRenderData","updateColor","realTimeTraverse","worldMat","vb","cumulatedCount","multiply","hash","isResize","oldIndices","oldChunkOffset","resizeAndCopy","correction","vi","v","z","transformMat4","chunkOffset","cacheTraverse","parentMat","frameVFOffset","frameIndexOffset","segVFCount","nowColor","maxVFOffset","vbuf","ibuf","segInfo","subArray","frameColorOffset","iEnd","drawList","nodeColor","_uiProps","opacity","toUint32","getWorldMatrix","graphics","fillColor","startX","startY","endX","endY","moveTo","lineTo","stroke","circle","fill","setDirty","DragonBonesAssembler","ExtensionType","DragonBonesEventType","simpleDragonBoneAssembler","AnimationFadeOutMode","EventType"],"mappings":"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","x_google_ignoreList":[0]}