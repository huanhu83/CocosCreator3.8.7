{"version":3,"file":"gc-object-BD6DANSw.js","sources":["../../../cocos/core/data/utils/asserts.ts","../../../cocos/core/data/utils/attribute-internal.ts","../../../cocos/core/value-types/enum.ts","../../../cocos/core/platform/debug.ts","../../../cocos/core/math/bits.ts","../../../cocos/core/utils/array.ts","../../../cocos/core/memop/scalable-container.ts","../../../cocos/core/memop/pool.ts","../../../cocos/core/utils/id-generator.ts","../../../cocos/core/memop/recycle-pool.ts","../../../cocos/core/memop/cached-array.ts","../../../cocos/core/utils/js-typed.ts","../../../cocos/core/utils/pool.ts","../../../cocos/core/utils/js.ts","../../../cocos/core/value-types/bitmask.ts","../../../cocos/core/value-types/value-type.ts","../../../cocos/core/settings.ts","../../../pal/screen-adapter/enum-type/orientation.ts","../../../cocos/core/platform/macro.ts","../../../pal/utils.ts","../../../cocos/core/utils/misc.ts","../../../cocos/core/data/utils/attribute.ts","../../../cocos/core/data/utils/preprocess-class.ts","../../../cocos/core/data/utils/requiring-frame.ts","../../../cocos/core/data/class-stash.ts","../../../cocos/core/data/class.ts","../../../cocos/core/data/object.ts","../../../cocos/core/event/callbacks-invoker.ts","../../../cocos/core/event/eventify.ts","../../../cocos/core/event/event-target.ts","../../../pal/system-info/enum-type/browser-type.ts","../../../pal/system-info/enum-type/language.ts","../../../pal/system-info/enum-type/network-type.ts","../../../pal/system-info/enum-type/operating-system.ts","../../../pal/system-info/enum-type/platform.ts","../../../pal/system-info/enum-type/feature.ts","../../../cocos/core/event/async-delegate.ts","../../../pal/system-info/web/system-info.ts","../../../cocos/core/data/garbage-collection.ts","../../../cocos/core/data/gc-object.ts"],"sourcesContent":["/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG } from 'internal:constants';\r\n\r\n/**\r\n * Asserts that the expression is non-nullable, i.e. is neither `null` nor `undefined`.\r\n * @param expr Testing expression.\r\n * @param message Optional message.\r\n * @engineInternal\r\n */\r\nexport function assertIsNonNullable<T> (expr: T, message?: string): asserts expr is NonNullable<T> {\r\n    assertIsTrue(!(expr === null || expr === undefined), message);\r\n}\r\n\r\n/**\r\n * Asserts that the expression evaluated to `true`.\r\n * @param expr Testing expression.\r\n * @param message Optional message.\r\n * @engineInternal\r\n */\r\nexport function assertIsTrue (expr: unknown, message?: string): asserts expr {\r\n    if (DEBUG && !expr) {\r\n        // eslint-disable-next-line no-debugger\r\n        // debugger;\r\n        throw new Error(`Assertion failed: ${message ?? '<no-message>'}`);\r\n    }\r\n}\r\n\r\n/**\r\n * Assets that the index is valid.\r\n * @engineInternal\r\n */\r\nexport function assertsArrayIndex<T> (array: T[], index: number): void {\r\n    assertIsTrue(index >= 0 && index < array.length, `Array index ${index} out of bounds: [0, ${array.length})`);\r\n}\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Enum, EnumType } from '../../value-types/enum';\r\nimport { getClassAttrs, DELIMETER } from './attribute';\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function setPropertyEnumType (objectOrConstructor: object, propertyName: string, enumType: EnumType): void {\r\n    setPropertyEnumTypeOnAttrs(getClassAttrs(objectOrConstructor), propertyName, enumType);\r\n}\r\n\r\nexport function setPropertyEnumTypeOnAttrs (attrs: Record<string, any>, propertyName: string, enumType: EnumType): void {\r\n    attrs[`${propertyName}${DELIMETER}type`] = 'Enum';\r\n    attrs[`${propertyName}${DELIMETER}enumList`] = Enum.getList(enumType);\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST, DEV } from 'internal:constants';\r\nimport { value } from '../utils/js';\r\nimport { legacyCC } from '../global-exports';\r\nimport { errorID } from '../platform/debug';\r\nimport { assertIsTrue } from '../data/utils/asserts';\r\n\r\nconst hasOwnPropertyProto = Object.prototype.hasOwnProperty;\r\n\r\nexport type EnumType = Record<string, string | number>;\r\n\r\n/**\r\n * @en\r\n * Define an enum type. <br/>\r\n * If a enum item has a value of -1, it will be given an Integer number according to it's order in the list.<br/>\r\n * Otherwise it will use the value specified by user who writes the enum definition.\r\n *\r\n * @zh\r\n * 定义一个枚举类型。<br/>\r\n * 用户可以把枚举值设为任意的整数，如果设为 -1，系统将会分配为上一个枚举值 + 1。\r\n *\r\n * @param obj\r\n * @en A JavaScript literal object containing enum names and values, or a TypeScript enum type.\r\n * @zh 包含枚举名和值的 JavaScript literal 对象，或者是一个 TypeScript enum 类型。\r\n * @return @en The defined enum type. @zh 定义的枚举类型。\r\n */\r\nexport function Enum<T extends object> (obj: T): T {\r\n    if ('__enums__' in obj) {\r\n        return obj;\r\n    }\r\n    value(obj, '__enums__', null, true);\r\n    return Enum.update(obj);\r\n}\r\n\r\n/**\r\n * @en\r\n * Update the enum object properties.\r\n * @zh\r\n * 更新枚举对象的属性列表。\r\n * @param obj @en The enum object to update. @zh 需要更新的枚举对象。\r\n */\r\nEnum.update = <T extends object> (obj: T): T => {\r\n    let lastIndex = -1;\r\n    const keys: string[] = Object.keys(obj);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        let val = obj[key];\r\n        if (val === -1) {\r\n            val = ++lastIndex;\r\n            obj[key] = val;\r\n        } else if (typeof val === 'number') {\r\n            lastIndex = val;\r\n        } else if (typeof val === 'string' && Number.isInteger(parseFloat(key))) {\r\n            continue;\r\n        }\r\n        const reverseKey = `${val}`;\r\n        if (key !== reverseKey) {\r\n            if ((EDITOR || TEST) && reverseKey in obj && obj[reverseKey] !== key) {\r\n                errorID(7100, reverseKey);\r\n                continue;\r\n            }\r\n            value(obj, reverseKey, key);\r\n        }\r\n    }\r\n    // auto update list if __enums__ is array\r\n    // NOTE: `__enums__` is injected properties\r\n    if (Array.isArray((obj as any).__enums__)) {\r\n        updateList(obj);\r\n    }\r\n    return obj;\r\n};\r\n\r\nnamespace Enum {\r\n    export interface Enumerator<EnumT> {\r\n        /**\r\n         * The name of the enumerator.\r\n         */\r\n        name: keyof EnumT;\r\n\r\n        /**\r\n         * The value of the numerator.\r\n         */\r\n        value: EnumT[keyof EnumT];\r\n    }\r\n}\r\n\r\ninterface EnumExtras<EnumT> {\r\n    __enums__: null | Enum.Enumerator<EnumT>[];\r\n}\r\n\r\n/**\r\n * Determines if the object is an enum type.\r\n * @param enumType @en The object to judge. @zh 需要判断的对象。\r\n */\r\nEnum.isEnum = <EnumT extends object>(enumType: EnumT): boolean => enumType && hasOwnPropertyProto.call(enumType, '__enums__');\r\n\r\nfunction assertIsEnum <EnumT extends object> (enumType: EnumT): asserts enumType is EnumT & EnumExtras<EnumT> {\r\n    assertIsTrue(hasOwnPropertyProto.call(enumType, '__enums__'));\r\n}\r\n\r\n/**\r\n * Get the enumerators from the enum type.\r\n * @param enumType @en An enum type. @zh 枚举类型。\r\n */\r\nEnum.getList = <EnumT extends object>(enumType: EnumT): readonly Enum.Enumerator<EnumT>[] => {\r\n    assertIsEnum(enumType);\r\n\r\n    if (enumType.__enums__) {\r\n        return enumType.__enums__;\r\n    }\r\n\r\n    return updateList(enumType as EnumT);\r\n};\r\n\r\n/**\r\n * Update the enumerators from the enum type.\r\n * @param enumType @en The enum type defined from [[Enum]] @zh 从[[Enum]]定义的枚举类型。\r\n * @return {Object[]}\r\n */\r\nfunction updateList<EnumT extends object> (enumType: EnumT): readonly Enum.Enumerator<EnumT>[] {\r\n    assertIsEnum(enumType);\r\n    const enums: any[] = enumType.__enums__ || [];\r\n    enums.length = 0;\r\n\r\n    let isAllInteger = true;\r\n    for (const name in enumType) {\r\n        const v = enumType[name];\r\n        const isIntegerValue = Number.isInteger(v);\r\n        if (!isIntegerValue) {\r\n            isAllInteger = false;\r\n        }\r\n\r\n        // Reverse Mapping (value -> name) should not be added to `__enums__` property.\r\n        if (isIntegerValue || (typeof v === 'string' && enumType[v] !== Number.parseInt(name))) {\r\n            enums.push({ name, value: v });\r\n        }\r\n    }\r\n    if (isAllInteger) {\r\n        enums.sort((a, b): number => a.value - b.value);\r\n    }\r\n    enumType.__enums__ = enums;\r\n    return enums as Enum.Enumerator<EnumT>[];\r\n}\r\n\r\n/**\r\n * Reorder the enumerators in the enumeration type by compareFunction.\r\n * @param enumType @en The enum type defined from [[Enum]] @zh 从[[Enum]]定义的枚举类型。\r\n * @param compareFn @en Function used to determine the order of the elements. @zh 用于确定元素顺序的函数。\r\n */\r\nEnum.sortList = <EnumT extends object> (enumType: EnumT, compareFn: (a: Enum.Enumerator<EnumT>, b: Enum.Enumerator<EnumT>) => number): void => {\r\n    assertIsEnum(enumType);\r\n    if (!Array.isArray(enumType.__enums__)) {\r\n        return;\r\n    }\r\n    enumType.__enums__.sort(compareFn);\r\n};\r\n\r\nif (DEV) {\r\n    // check key order in object literal\r\n    const _TestEnum = Enum({\r\n        ZERO: -1,\r\n        ONE: -1,\r\n        TWO: -1,\r\n        THREE: -1,\r\n    });\r\n    if (_TestEnum.ZERO !== 0 || _TestEnum.ONE !== 1 || _TestEnum.THREE !== 3) {\r\n        errorID(7101);\r\n    }\r\n}\r\n\r\n/**\r\n * Make the enum type `enumType` as enumeration so that Creator may identify, operate on it.\r\n * Formally, as a result of invocation on this function with enum type `enumType`:\r\n * - `Enum.isEnum(enumType)` returns `true`;\r\n * - `Enum.getList(enumType)` returns the enumerators of `enumType`.\r\n * @param\r\n * @en enumType An enum type, eg, a kind of type with similar semantic defined by TypeScript.\r\n * @zh 枚举类型，例如 TypeScript 中定义的类型。\r\n */\r\nexport function ccenum<EnumT extends object> (enumType: EnumT): void {\r\n    if (!('__enums__' in enumType)) {\r\n        value(enumType, '__enums__', null, true);\r\n    }\r\n}\r\n\r\nlegacyCC.Enum = Enum;\r\n","/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable no-console */\r\nimport { EDITOR, JSB, DEV, DEBUG } from 'internal:constants';\r\nimport debugInfos from '../../../DebugInfos';\r\nimport { legacyCC, ccwindow, VERSION } from '../global-exports';\r\n\r\nconst ccdocument = ccwindow.document;\r\n\r\nconst ERROR_MAP_URL = `https://github.com/cocos/cocos-engine/blob/${VERSION}/EngineErrorMap.md`;\r\n\r\nexport type StringSubstitution = number | string;\r\n\r\n// The html element displays log in web page (DebugMode.INFO_FOR_WEB_PAGE)\r\nlet logList: HTMLTextAreaElement | null = null;\r\n\r\nlet ccLog = console.log.bind(console);\r\n\r\nlet ccWarn = ccLog;\r\n\r\nlet ccError = ccLog;\r\n\r\nlet ccAssert = (condition: boolean, message?: string, ...optionalParams: StringSubstitution[]): void => {\r\n    if (!condition) {\r\n        console.log(`ASSERT: ${formatString(message, ...optionalParams)}`);\r\n    }\r\n};\r\n\r\nlet ccDebug = ccLog;\r\n\r\n/**\r\n * Constructs a string from a sequence of js object arguments.\r\n */\r\nfunction formatString (...data: unknown[]): string {\r\n    return legacyCC.js.formatStr.apply(null, data) as string;\r\n}\r\n\r\n/**\r\n * @en Outputs a log message to the console.\r\n *     The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects.\r\n * @zh 向控制台输出一条日志信息。这条信息可能是单个字符串（包括可选的替代字符串），也可能是一个或多个对象。\r\n */\r\nexport function log (...data: unknown[]): void {\r\n    return ccLog(...data);\r\n}\r\n\r\n/**\r\n * @en Outputs a warning message to the console.\r\n *     The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects.\r\n *     - In Cocos Creator, warning is yellow.\r\n *     - In Chrome, warning have a yellow warning icon with the message text.\r\n * @zh 向控制台输出一条警告信息。这条信息可能是单个字符串（包括可选的替代字符串），也可能是一个或多个对象。\r\n *     - 在 Cocos Creator 中，警告信息显示是黄色的。<br/>\r\n *     - 在 Chrome 中，警告信息有着黄色的图标以及黄色的消息文本。<br/>\r\n */\r\nexport function warn (...data: unknown[]): void {\r\n    return ccWarn(...data);\r\n}\r\n\r\n/**\r\n * @en Outputs an error message to the console.\r\n *     The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects.\r\n *     - In Cocos Creator, error is red.<br/>\r\n *     - In Chrome, error have a red icon along with red message text.<br/>\r\n * @zh 向控制台输出一条错误信息。这条信息可能是单个字符串（包括可选的替代字符串），也可能是一个或多个对象。\r\n *     - 在 Cocos Creator 中，错误信息显示是红色的。<br/>\r\n *     - 在 Chrome 中，错误信息有红色的图标以及红色的消息文本。<br/>\r\n */\r\nexport function error (...data: unknown[]): void {\r\n    return ccError(...data);\r\n}\r\n\r\n/**\r\n * @en\r\n * Assert the condition and output error messages if the condition is not true.\r\n * @zh\r\n * 对检查测试条件进行检查，如果条件不为 true 则输出错误消息\r\n * @param condition @zh 需要检查的条件。 @en The condition to check on.\r\n * @param message @zh 包含零个或多个需要替换的JavaScript字符串。@en JavaScript objects to replace substitution strings in msg.\r\n * @param optionalParams  @zh 用来替换在message中需要替换的JavaScript对象。@en JavaScript objects with which to replace substitution strings within msg.\r\n * This gives you additional control over the format of the output.\r\n */\r\nexport function assert (condition: boolean, message?: string, ...optionalParams: StringSubstitution[]): asserts condition {\r\n    return ccAssert(condition, message, ...optionalParams);\r\n}\r\n\r\n/**\r\n * @en Outputs a message at the \"debug\" log level.\r\n * @zh 输出一条“调试”日志等级的消息。\r\n * @param data @zh 输出的消息对象。 @en The output message object.\r\n */\r\nexport function debug (...data: unknown[]): void {\r\n    return ccDebug(...data);\r\n}\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport function _resetDebugSetting (mode: DebugMode): void {\r\n    // reset\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    ccLog = ccWarn = ccError = ccAssert = ccDebug = (): void => {};\r\n\r\n    if (mode === DebugMode.NONE) {\r\n        return;\r\n    }\r\n\r\n    if (mode > DebugMode.ERROR) {\r\n        // Log to web page.\r\n        const logToWebPage = (msg: string): void => {\r\n            if (!legacyCC.game.canvas) {\r\n                return;\r\n            }\r\n\r\n            if (!logList) {\r\n                const logDiv = ccdocument.createElement('Div');\r\n                logDiv.setAttribute('id', 'logInfoDiv');\r\n                logDiv.setAttribute('width', '200');\r\n                const height: number = legacyCC.game.canvas.height;\r\n                logDiv.setAttribute('height', `${height}`);\r\n                const logDivStyle = logDiv.style;\r\n                logDivStyle.zIndex = '99999';\r\n                logDivStyle.position = 'absolute';\r\n                logDivStyle.top = logDivStyle.left = '0';\r\n\r\n                logList = ccdocument.createElement('textarea');\r\n                logList.setAttribute('rows', '20');\r\n                logList.setAttribute('cols', '30');\r\n                logList.setAttribute('disabled', 'true');\r\n                const logListStyle = logList.style;\r\n                logListStyle.backgroundColor = 'transparent';\r\n                logListStyle.borderBottom = '1px solid #cccccc';\r\n                logListStyle.borderTopWidth = logListStyle.borderLeftWidth = logListStyle.borderRightWidth = '0px';\r\n                logListStyle.borderTopStyle = logListStyle.borderLeftStyle = logListStyle.borderRightStyle = 'none';\r\n                logListStyle.padding = '0px';\r\n                logListStyle.margin = '0px';\r\n\r\n                logDiv.appendChild(logList);\r\n                legacyCC.game.canvas.parentNode.appendChild(logDiv);\r\n            }\r\n\r\n            logList.value = `${logList.value + msg}\\r\\n`;\r\n            logList.scrollTop = logList.scrollHeight;\r\n        };\r\n\r\n        ccError = (...data: unknown[]): void => {\r\n            logToWebPage(`ERROR :  ${formatString(...data)}`);\r\n        };\r\n        ccAssert = (condition: boolean, message?: unknown, ...optionalParams: unknown[]): void => {\r\n            if (!condition) {\r\n                logToWebPage(`ASSERT: ${formatString(message, ...optionalParams)}`);\r\n            }\r\n        };\r\n        if (mode !== DebugMode.ERROR_FOR_WEB_PAGE) {\r\n            ccWarn = (...data: unknown[]): void => {\r\n                logToWebPage(`WARN :  ${formatString(...data)}`);\r\n            };\r\n        }\r\n        if (mode === DebugMode.INFO_FOR_WEB_PAGE) {\r\n            ccLog = (...data: unknown[]): void => {\r\n                logToWebPage(formatString(...data));\r\n            };\r\n        }\r\n    } else if (console) {\r\n        // Log to console.\r\n\r\n        // For JSB\r\n        if (!console.error) {\r\n            console.error = console.log;\r\n        }\r\n\r\n        if (!console.warn) {\r\n            console.warn = console.log;\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        if (EDITOR || console.error.bind) {\r\n            // use bind to avoid pollute call stacks\r\n            ccError = console.error.bind(console);\r\n        } else {\r\n            ccError = JSB ? console.error : (...data: unknown[]): void => console.error.apply(console, data);\r\n        }\r\n        ccAssert = (condition: boolean, message?: unknown, ...optionalParams: unknown[]): void => {\r\n            if (!condition) {\r\n                const errorText = formatString(message, ...optionalParams);\r\n                if (DEV) {\r\n                    console.error(errorText);\r\n                } else {\r\n                    throw new Error(errorText);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    if (mode !== DebugMode.ERROR) {\r\n        if (EDITOR) {\r\n            ccWarn = console.warn.bind(console);\r\n        } else if (console.warn.bind) {\r\n            // use bind to avoid pollute call stacks\r\n            ccWarn = console.warn.bind(console);\r\n        } else {\r\n            ccWarn = JSB ? console.warn : (...data: unknown[]): void => console.warn.apply(console, data);\r\n        }\r\n    }\r\n\r\n    if (EDITOR) {\r\n        ccLog = console.log.bind(console);\r\n    } else if (mode <= DebugMode.INFO) {\r\n        if (JSB) {\r\n            ccLog = console.log;\r\n        } else if (console.log.bind) {\r\n            // use bind to avoid pollute call stacks\r\n            ccLog = console.log.bind(console);\r\n        } else {\r\n            ccLog = (...data: unknown[]): void => console.log.apply(console, data);\r\n        }\r\n    }\r\n\r\n    if (mode <= DebugMode.VERBOSE) {\r\n        if (typeof console.debug === 'function') {\r\n            const vendorDebug = console.debug.bind(console);\r\n            ccDebug = (...data: unknown[]): any => vendorDebug(...data);\r\n        }\r\n    }\r\n}\r\n\r\nexport function _throw (error_: any): any {\r\n    if (EDITOR) {\r\n        return error(error_);\r\n    } else {\r\n        const stack = error_.stack;\r\n        if (stack) {\r\n            error(JSB ? (`${error_}\\n${stack}`) : stack);\r\n        } else {\r\n            error(error_);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\nfunction getTypedFormatter (type: 'Log' | 'Debug' | 'Warning' | 'Error' | 'Assert'): (id: number, ...args: StringSubstitution[]) => string {\r\n    return (id: number, ...args: StringSubstitution[]): string => {\r\n        const msg = DEBUG ? (debugInfos[id] || 'unknown id') : `${type} ${id}, please go to ${ERROR_MAP_URL}#${id} to see details.`;\r\n        if (args.length === 0) {\r\n            return msg;\r\n        }\r\n        return DEBUG ? formatString(msg, ...args) : `${msg} Arguments: ${args.join(', ')}`;\r\n    };\r\n}\r\n\r\nconst logFormatter = getTypedFormatter('Log');\r\nexport function logID (id: number, ...optionalParams: StringSubstitution[]): void {\r\n    log(logFormatter(id, ...optionalParams));\r\n}\r\n\r\nconst debugFormatter = getTypedFormatter('Debug');\r\nexport function debugID (id: number, ...optionalParams: StringSubstitution[]): void {\r\n    debug(debugFormatter(id, ...optionalParams));\r\n}\r\n\r\nconst warnFormatter = getTypedFormatter('Warning');\r\nexport function warnID (id: number, ...optionalParams: StringSubstitution[]): void {\r\n    warn(warnFormatter(id, ...optionalParams));\r\n}\r\n\r\nconst errorFormatter = getTypedFormatter('Error');\r\nexport function errorID (id: number, ...optionalParams: StringSubstitution[]): void {\r\n    error(errorFormatter(id, ...optionalParams));\r\n}\r\n\r\nconst assertFormatter = getTypedFormatter('Assert');\r\nexport function assertID (condition: boolean, id: number, ...optionalParams: StringSubstitution[]): void {\r\n    if (condition) {\r\n        return;\r\n    }\r\n    assert(false, assertFormatter(id, ...optionalParams));\r\n}\r\n\r\n/**\r\n * @en Enum for debug modes.\r\n * @zh 调试模式。\r\n */\r\nexport enum DebugMode {\r\n    /**\r\n     * @en The debug mode none.\r\n     * @zh 禁止模式，禁止显示任何日志消息。\r\n     */\r\n    NONE = 0,\r\n\r\n    /**\r\n     * @en The debug mode none.\r\n     * @zh 调试模式，显示所有日志消息。\r\n     */\r\n    VERBOSE = 1,\r\n\r\n    /**\r\n     * @en Information mode, which display messages with level higher than \"information\" level.\r\n     * @zh 信息模式，显示“信息”级别以上的日志消息。\r\n     */\r\n    INFO = 2,\r\n\r\n    /**\r\n     * @en Information mode, which display messages with level higher than \"warning\" level.\r\n     * @zh 警告模式，显示“警告”级别以上的日志消息。\r\n     */\r\n    WARN = 3,\r\n\r\n    /**\r\n     * @en Information mode, which display only messages with \"error\" level.\r\n     * @zh 错误模式，仅显示“错误”级别的日志消息。\r\n     */\r\n    ERROR = 4,\r\n\r\n    /**\r\n     * @en The debug mode info for web page.\r\n     * @zh 信息模式（仅 WEB 端有效），在画面上输出所有信息。\r\n     */\r\n    INFO_FOR_WEB_PAGE = 5,\r\n\r\n    /**\r\n     * @en The debug mode warn for web page.\r\n     * @zh 警告模式（仅 WEB 端有效），在画面上输出 warn 级别以上的（包含 error）信息。\r\n     */\r\n    WARN_FOR_WEB_PAGE = 6,\r\n\r\n    /**\r\n     * @en The debug mode error for web page.\r\n     * @zh 错误模式（仅 WEB 端有效），在画面上输出 error 信息。\r\n     */\r\n    ERROR_FOR_WEB_PAGE = 7,\r\n}\r\n\r\n/**\r\n * @en Gets error message with the error id and possible parameters.\r\n * @zh 通过 error id 和必要的参数来获取错误信息。\r\n * @param errorId @zh 错误的ID。@en Error id.\r\n * @param param @zh 输出日志。@en Output log.\r\n */\r\nexport function getError (errorId: number, ...param: StringSubstitution[]): string {\r\n    return errorFormatter(errorId, ...param);\r\n}\r\n\r\n/**\r\n * @en Returns whether or not to display the FPS and debug information.\r\n * @zh 是否显示 FPS 信息和部分调试信息。\r\n * @deprecated @zh 从v3.6开始不再支持，请使用 profiler.isShowingStates。@en Since v3.6, Please use profiler.isShowingStates instead.\r\n */\r\nexport function isDisplayStats (): boolean {\r\n    return legacyCC.profiler ? legacyCC.profiler.isShowingStats() as boolean : false;\r\n}\r\n\r\n/**\r\n * @en Sets whether display the FPS and debug informations on the bottom-left corner.\r\n * @zh 设置是否在左下角显示 FPS 和部分调试。\r\n * @deprecated @zh 从v3.6开始不再支持，请使用 profiler.showStats。@en Since v3.6, Please use profiler.showStats instead.\r\n */\r\nexport function setDisplayStats (displayStats: boolean): void {\r\n    if (legacyCC.profiler) {\r\n        displayStats ? legacyCC.profiler.showStats() : legacyCC.profiler.hideStats();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * Bit twiddling hacks for JavaScript.\r\n *\r\n * Author: Mikola Lysenko\r\n *\r\n * Ported from Stanford bit twiddling hack library:\r\n *    http://graphics.stanford.edu/~seander/bithacks.html\r\n */\r\n\r\n/**\r\n * @en\r\n * Number of bits in an integer\r\n * @zh\r\n * 整型类型的 bit 数\r\n */\r\nexport const INT_BITS = 32;\r\n/**\r\n * @en\r\n * The maximal signed integer number\r\n * @zh\r\n * 最大有符号整型数\r\n */\r\nexport const INT_MAX = 0x7fffffff;\r\n/**\r\n * @en\r\n * The minimal signed integer number\r\n * @zh\r\n * 最小有符号整型数\r\n */\r\nexport const INT_MIN = -1 << (INT_BITS - 1);\r\n\r\n/**\r\n * @en Returns -1, 0, +1 depending on sign of x.\r\n * @zh 根据x的符号返回 -1，0，+1。\r\n */\r\nexport function sign (v: number): number {\r\n    return ((v > 0) as unknown as number) - ((v < 0) as unknown as number);\r\n}\r\n\r\n/**\r\n * @en Computes absolute value of integer.\r\n * @zh 计算整数的绝对值。\r\n */\r\nexport function abs (v: number): number {\r\n    const mask = v >> (INT_BITS - 1);\r\n    return (v ^ mask) - mask;\r\n}\r\n\r\n/**\r\n * @en Computes minimum of integers x and y.\r\n * @zh 计算整数x和y中的最小值。\r\n */\r\nexport function min (x: number, y: number): number {\r\n    return y ^ ((x ^ y) & -(x < y));\r\n}\r\n\r\n/**\r\n * @en Computes maximum of integers x and y.\r\n * @zh 计算整数x和y中的最大值。\r\n */\r\nexport function max (x: number, y: number): number {\r\n    return x ^ ((x ^ y) & -(x < y));\r\n}\r\n\r\n/**\r\n * @en Checks if a number is a power of two.\r\n * @zh 检查一个数字是否是2的幂。\r\n */\r\nexport function isPow2 (v: number): boolean {\r\n    return !(v & (v - 1)) && (!!v);\r\n}\r\n\r\n/**\r\n * @en Computes log base 2 of v.\r\n * @zh 计算以 2 为底的 v 的对数。\r\n */\r\nexport function log2 (v: number): number {\r\n    let r: number;\r\n    let shift: number;\r\n    r = ((v > 0xFFFF) as unknown as number) << 4; v >>>= r;\r\n    shift = ((v > 0xFF) as unknown as number) << 3; v >>>= shift; r |= shift;\r\n    shift = ((v > 0xF) as unknown as number) << 2; v >>>= shift; r |= shift;\r\n    shift = ((v > 0x3) as unknown as number) << 1; v >>>= shift; r |= shift;\r\n    return r | (v >> 1);\r\n}\r\n\r\n/**\r\n * @en Computes log base 10 of v.\r\n * @zh 计算以 10 为底的 v 的对数。\r\n */\r\nexport function log10 (v: number): number {\r\n    return (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7\r\n        : (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4\r\n            : (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\r\n}\r\n\r\n/**\r\n * @en Counts number of bits.\r\n * @zh 计算传入数字二进制表示中 1 的数量。\r\n */\r\nexport function popCount (v: number): number {\r\n    v -= ((v >>> 1) & 0x55555555);\r\n    v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\r\n    return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\r\n}\r\n\r\n/**\r\n * @en Counts number of trailing zeros.\r\n * @zh 计算传入数字二进制表示尾随零的数量。\r\n */\r\nexport function countTrailingZeros (v: number): number {\r\n    let c = 32;\r\n    v &= -v;\r\n    if (v) { c--; }\r\n    if (v & 0x0000FFFF) { c -= 16; }\r\n    if (v & 0x00FF00FF) { c -= 8; }\r\n    if (v & 0x0F0F0F0F) { c -= 4; }\r\n    if (v & 0x33333333) { c -= 2; }\r\n    if (v & 0x55555555) { c -= 1; }\r\n    return c;\r\n}\r\n\r\n/**\r\n * @en Rounds to next power of 2.\r\n * @zh 计算大于等于v的最小的二的整数次幂的数字。\r\n */\r\nexport function nextPow2 (v: number): number {\r\n    --v;\r\n    v |= v >>> 1;\r\n    v |= v >>> 2;\r\n    v |= v >>> 4;\r\n    v |= v >>> 8;\r\n    v |= v >>> 16;\r\n    return v + 1;\r\n}\r\n\r\n/**\r\n * @en Rounds down to previous power of 2.\r\n * @zh 计算小于等于v的最小的二的整数次幂的数字。\r\n */\r\nexport function prevPow2 (v: number): number {\r\n    v |= v >>> 1;\r\n    v |= v >>> 2;\r\n    v |= v >>> 4;\r\n    v |= v >>> 8;\r\n    v |= v >>> 16;\r\n    return v - (v >>> 1);\r\n}\r\n\r\n/**\r\n * @en Computes parity of word.\r\n * @zh 奇偶校验。\r\n */\r\nexport function parity (v: number): number {\r\n    v ^= v >>> 16;\r\n    v ^= v >>> 8;\r\n    v ^= v >>> 4;\r\n    v &= 0xf;\r\n    return (0x6996 >>> v) & 1;\r\n}\r\n\r\nconst REVERSE_TABLE: number[] = new Array(256);\r\n\r\n((tab: number[]): void => {\r\n    for (let i = 0; i < 256; ++i) {\r\n        let v = i;\r\n        let r = i;\r\n        let s = 7;\r\n        for (v >>>= 1; v; v >>>= 1) {\r\n            r <<= 1;\r\n            r |= v & 1;\r\n            --s;\r\n        }\r\n        tab[i] = (r << s) & 0xff;\r\n    }\r\n})(REVERSE_TABLE);\r\n\r\n/**\r\n * @en Reverse bits in a 32 bit word.\r\n * @zh 翻转 32 位二进制数字。\r\n */\r\nexport function reverse (v: number): number {\r\n    return (REVERSE_TABLE[v & 0xff] << 24)\r\n        | (REVERSE_TABLE[(v >>> 8) & 0xff] << 16)\r\n        | (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)\r\n        | REVERSE_TABLE[(v >>> 24) & 0xff];\r\n}\r\n\r\n/**\r\n * @en Interleave bits of 2 coordinates with 16 bits. Useful for fast quadtree codes.\r\n * @zh 将两个 16 位数字按位交错编码。有利于在快速四叉树中使用。\r\n */\r\nexport function interleave2 (x: number, y: number): number {\r\n    x &= 0xFFFF;\r\n    x = (x | (x << 8)) & 0x00FF00FF;\r\n    x = (x | (x << 4)) & 0x0F0F0F0F;\r\n    x = (x | (x << 2)) & 0x33333333;\r\n    x = (x | (x << 1)) & 0x55555555;\r\n\r\n    y &= 0xFFFF;\r\n    y = (y | (y << 8)) & 0x00FF00FF;\r\n    y = (y | (y << 4)) & 0x0F0F0F0F;\r\n    y = (y | (y << 2)) & 0x33333333;\r\n    y = (y | (y << 1)) & 0x55555555;\r\n\r\n    return x | (y << 1);\r\n}\r\n\r\n/**\r\n * @en Extracts the nth interleaved component.\r\n * @zh 提取第 n 个交错分量。\r\n */\r\nexport function deinterleave2 (v: number, n: number): number {\r\n    v = (v >>> n) & 0x55555555;\r\n    v = (v | (v >>> 1)) & 0x33333333;\r\n    v = (v | (v >>> 2)) & 0x0F0F0F0F;\r\n    v = (v | (v >>> 4)) & 0x00FF00FF;\r\n    v = (v | (v >>> 16)) & 0x000FFFF;\r\n    return (v << 16) >> 16;\r\n}\r\n\r\n/**\r\n * @en Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes.\r\n * @zh 将三个数字按位交错编码，每个数字占十位。有利于在八叉树中使用。\r\n */\r\nexport function interleave3 (x: number, y: number, z: number): number {\r\n    x &= 0x3FF;\r\n    x = (x | (x << 16)) & 4278190335;\r\n    x = (x | (x << 8)) & 251719695;\r\n    x = (x | (x << 4)) & 3272356035;\r\n    x = (x | (x << 2)) & 1227133513;\r\n\r\n    y &= 0x3FF;\r\n    y = (y | (y << 16)) & 4278190335;\r\n    y = (y | (y << 8)) & 251719695;\r\n    y = (y | (y << 4)) & 3272356035;\r\n    y = (y | (y << 2)) & 1227133513;\r\n    x |= (y << 1);\r\n\r\n    z &= 0x3FF;\r\n    z = (z | (z << 16)) & 4278190335;\r\n    z = (z | (z << 8)) & 251719695;\r\n    z = (z | (z << 4)) & 3272356035;\r\n    z = (z | (z << 2)) & 1227133513;\r\n\r\n    return x | (z << 2);\r\n}\r\n\r\n/**\r\n * @en Extracts nth interleaved component of a 3-tuple.\r\n * @zh 提取三个数字中的第n个交错分量。\r\n */\r\nexport function deinterleave3 (v: number, n: number): number {\r\n    v = (v >>> n) & 1227133513;\r\n    v = (v | (v >>> 2)) & 3272356035;\r\n    v = (v | (v >>> 4)) & 251719695;\r\n    v = (v | (v >>> 8)) & 4278190335;\r\n    v = (v | (v >>> 16)) & 0x3FF;\r\n    return (v << 22) >> 22;\r\n}\r\n\r\n/**\r\n * @en Compute the lexicographically next bit permutation\r\n * @zh 计算下一组字典序的比特排列\r\n */\r\nexport function nextCombination (v: number): number {\r\n    const t = v | (v - 1);\r\n    return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\r\n}\r\n","/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { logID } from '../platform/debug';\r\n\r\n/**\r\n * @example\r\n * ```\r\n * import { js } from 'cc';\r\n * var array = [0, 1, 2, 3, 4];\r\n * var iterator = new js.array.MutableForwardIterator(array);\r\n * for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n *     var item = array[iterator.i];\r\n *     ...\r\n * }\r\n * ```\r\n */\r\nexport class MutableForwardIterator<T> {\r\n    public i = 0;\r\n\r\n    constructor (public array: T[]) {\r\n    }\r\n\r\n    get length (): number {\r\n        return this.array.length;\r\n    }\r\n\r\n    set length (value: number) {\r\n        this.array.length = value;\r\n        if (this.i >= value) {\r\n            this.i = value - 1;\r\n        }\r\n    }\r\n\r\n    public remove (value: T): void {\r\n        const index = this.array.indexOf(value);\r\n        if (index >= 0) {\r\n            this.removeAt(index);\r\n        }\r\n    }\r\n\r\n    public removeAt (i: number): void {\r\n        this.array.splice(i, 1);\r\n\r\n        if (i <= this.i) {\r\n            --this.i;\r\n        }\r\n    }\r\n\r\n    public fastRemove (value: T): void {\r\n        const index = this.array.indexOf(value);\r\n        if (index >= 0) {\r\n            this.fastRemoveAt(index);\r\n        }\r\n    }\r\n\r\n    public fastRemoveAt (i: number): void {\r\n        const array = this.array;\r\n        array[i] = array[array.length - 1];\r\n        --array.length;\r\n\r\n        if (i <= this.i) {\r\n            --this.i;\r\n        }\r\n    }\r\n\r\n    public push (item: T): void {\r\n        this.array.push(item);\r\n    }\r\n}\r\n\r\n/**\r\n * @zh\r\n * 移除指定索引的数组元素。\r\n * @en\r\n * Removes the array item at the specified index.\r\n * @param array @zh 被操作的数组。@en The array to be operated.\r\n * @param index @zh 待移除元素的索引。@en The index of the element to be removed.\r\n */\r\nexport function removeAt<T> (array: T[], index: number): void {\r\n    array.splice(index, 1);\r\n}\r\n\r\n/**\r\n * @zh\r\n * 移除指定索引的数组元素。\r\n * 此函数十分高效，但会改变数组的元素次序。\r\n * @en\r\n * Removes the array item at the specified index.\r\n * It's faster but the order of the array will be changed.\r\n * @param array @zh 被操作的数组。@en The array to be operated.\r\n * @param index @zh 待移除元素的索引。@en The index of the element to be removed.\r\n */\r\nexport function fastRemoveAt<T> (array: T[], index: number): void {\r\n    const length = array.length;\r\n    if (index < 0 || index >= length) {\r\n        return;\r\n    }\r\n    array[index] = array[length - 1];\r\n    array.length = length - 1;\r\n}\r\n\r\n/**\r\n * @zh\r\n * 移除首个指定的数组元素。判定元素相等时相当于于使用了 `Array.prototype.indexOf`。\r\n * @en\r\n * Removes the first occurrence of a specific object from the array.\r\n * Decision of the equality of elements is similar to `Array.prototype.indexOf`.\r\n * @param array @zh 被操作的数组。@en The array to be operated.\r\n * @param value @zh 待移除元素。@en The value to be removed.\r\n */\r\nexport function remove<T> (array: T[], value: T): boolean {\r\n    const index = array.indexOf(value);\r\n    if (index >= 0) {\r\n        removeAt(array, index);\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * @zh\r\n * 移除首个指定的数组元素。判定元素相等时相当于于使用了 `Array.prototype.indexOf`。\r\n * 此函数十分高效，但会改变数组的元素次序。\r\n * @en\r\n * Removes the first occurrence of a specific object from the array.\r\n * Decision of the equality of elements is similar to `Array.prototype.indexOf`.\r\n * It's faster but the order of the array will be changed.\r\n * @param array @zh 被操作的数组。@en The array to be operated.\r\n * @param value @zh 待移除元素。@en The value to be removed.\r\n */\r\nexport function fastRemove<T> (array: T[], value: T): void {\r\n    const index = array.indexOf(value);\r\n    if (index >= 0) {\r\n        array[index] = array[array.length - 1];\r\n        --array.length;\r\n    }\r\n}\r\n\r\n/**\r\n * @zh\r\n * 移除首个使谓词满足的数组元素。\r\n * @en\r\n * Removes the first occurrence of a specific object from the array where `predicate` is `true`.\r\n * @param array @zh 被操作的数组。@en The array to be operated.\r\n * @param predicate @zh 一元谓词，如果要元素的话，需要返回 true。@en unary predicate which returns true if the element should be removed.\r\n */\r\nexport function removeIf<T> (array: T[], predicate: (value: T) => boolean): T | undefined {\r\n    const index = array.findIndex(predicate);\r\n    if (index >= 0) {\r\n        const value = array[index];\r\n        removeAt(array, index);\r\n        return value;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * @zh\r\n * 验证数组的类型。\r\n * 此函数将用 `instanceof` 操作符验证每一个元素。\r\n * @en\r\n * Verify array's Type.\r\n * This function tests each element using `instanceof` operator.\r\n * @param array @zh 待验证的数组。@en The array to be verified.\r\n * @param type @zh 用来判断数组元素的数据类型。@en The type used to verify the element type.\r\n * @returns @zh 当每一个元素都是指定类型时返回 `true`，否则返回 `false`。@en Return true if all elements of the array is the same type, false others.\r\n */\r\nexport function verifyType<T extends Function> (array: any[], type: T): array is T[] {\r\n    if (array && array.length > 0) {\r\n        for (const item of array) {\r\n            if (!(item instanceof type)) {\r\n                logID(1300);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * @zh\r\n * 移除多个数组元素。\r\n * @en\r\n * Removes multiple array elements.\r\n * @param array @zh 被操作的数组。@en The array to be operated.\r\n * @param removals @zh 所有待移除的元素。此数组的每个元素所对应的首个源数组的元素都会被移除。\r\n *                 @en The values to be removed. If a value appears multiple times in the array, only the first math element will be removed.\r\n */\r\nexport function removeArray<T> (array: T[], removals: T[]): void {\r\n    for (let i = 0, l = removals.length; i < l; i++) {\r\n        remove(array, removals[i]);\r\n    }\r\n}\r\n\r\n/**\r\n * @zh\r\n * 在数组的指定索引上插入对象。\r\n * @en\r\n * Inserts some objects at specified index.\r\n * @param array @zh 被操作的数组。@en The array to be operated.\r\n * @param objects @zh 插入的所有对象。@en The objects to be inserted.\r\n * @param index @zh 插入的索引。@en The index to insert at.\r\n * @returns @zh 传入的 `array`。@en The passed in `array`.\r\n */\r\nexport function appendObjectsAt<T> (array: T[], objects: T[], index: number): T[] {\r\n    array.splice.apply(array, [index, 0, ...objects]);\r\n    return array;\r\n}\r\n\r\n/**\r\n * @zh\r\n * 返回数组是否包含指定的元素。\r\n * @en\r\n * Determines whether the array contains a specific element.\r\n * @param array @zh 被查询的数组 @en The array to be checked.\r\n * @param value @zh 用来查询的值 @en The value used to check for.\r\n * @returns @zh true 如果包含该元素，否则返回 false。@en true if contains the value, false else.\r\n */\r\nexport function contains<T> (array: T[], value: T): boolean {\r\n    return array.indexOf(value) >= 0;\r\n}\r\n\r\n/**\r\n * @zh\r\n * 拷贝数组。\r\n * @en\r\n * Copy an array.\r\n * @param array @zh 用来拷贝的数组。@en The array to be copied from.\r\n * @returns @zh 数组的副本。@en A new array has the same values as `array`.\r\n */\r\nexport function copy<T> (array: T[]): T[] {\r\n    const len = array.length;\r\n    const cloned = new Array<T>(len);\r\n    for (let i = 0; i < len; i += 1) {\r\n        cloned[i] = array[i];\r\n    }\r\n    return cloned;\r\n}\r\n\r\nexport function fillItems<T> (array: T[], ...items: T[]): void {\r\n    for (let i = 0, len = items.length; i < len; ++i) {\r\n        array[i] = items[i];\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2021-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { fastRemoveAt } from '../utils/array';\r\n\r\nexport abstract class ScalableContainer {\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _poolHandle = -1;\r\n    constructor () {\r\n        scalableContainerManager.addContainer(this);\r\n    }\r\n\r\n    abstract tryShrink (): void;\r\n\r\n    destroy (): void {\r\n        scalableContainerManager.removeContainer(this);\r\n    }\r\n}\r\n\r\n/**\r\n * @en ScalableContainerManager is a sequence container that stores ScalableContainers.\r\n * It will shrink all managed ScalableContainer in a fixed interval.\r\n */\r\nclass ScalableContainerManager {\r\n    private _pools: ScalableContainer[] = [];\r\n    private _lastShrinkPassed = 0;\r\n    /**\r\n     * @en Shrink interval in seconds.\r\n     */\r\n    public shrinkTimeSpan = 5;\r\n\r\n    constructor () {}\r\n\r\n    /**\r\n     * @en Add a ScalableContainer. Will add the same ScalableContainer instance once.\r\n     * @param pool @en The ScalableContainer to add.\r\n     */\r\n    addContainer (pool: ScalableContainer): void {\r\n        if (pool._poolHandle !== -1) return;\r\n        pool._poolHandle = this._pools.length;\r\n        this._pools.push(pool);\r\n    }\r\n\r\n    /**\r\n     * @en Remove a ScalableContainer.\r\n     * @param pool @en The ScalableContainer to remove.\r\n     */\r\n    removeContainer (pool: ScalableContainer): void {\r\n        if (pool._poolHandle === -1) return;\r\n        this._pools[this._pools.length - 1]._poolHandle = pool._poolHandle;\r\n        fastRemoveAt(this._pools, pool._poolHandle);\r\n        pool._poolHandle = -1;\r\n    }\r\n\r\n    /**\r\n     * @en Try to shrink all managed ScalableContainers.\r\n     */\r\n    tryShrink (): void {\r\n        for (let i = 0; i < this._pools.length; i++) {\r\n            this._pools[i].tryShrink();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en An update function invoked every frame.\r\n     * @param dt @en Delta time of frame interval in secondes.\r\n     */\r\n    update (dt: number): void {\r\n        this._lastShrinkPassed += dt;\r\n        if (this._lastShrinkPassed > this.shrinkTimeSpan) {\r\n            this.tryShrink();\r\n            this._lastShrinkPassed -= this.shrinkTimeSpan;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en A global ScalableContainerManager instance.\r\n */\r\nexport const scalableContainerManager = new ScalableContainerManager();\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { max } from '../math/bits';\r\nimport { warnID } from '../platform/debug';\r\nimport { ScalableContainer } from './scalable-container';\r\n\r\n/**\r\n * @en Typed object pool.\r\n * It's a traditional design, you can get elements out of the pool or recycle elements by putting back into the pool.\r\n * @zh 支持类型的对象池。这是一个传统设计的对象池，你可以从对象池中取出对象或是放回不再需要对象来复用。\r\n * @see [[RecyclePool]]\r\n */\r\nexport class Pool<T> extends ScalableContainer {\r\n    private declare _ctor: () => T;\r\n    private declare _elementsPerBatch: number;\r\n    private declare _shrinkThreshold: number;\r\n    private declare _nextAvail: number;\r\n    private _freePool: T[] = [];\r\n    private declare _dtor: ((obj: T) => void) | null;\r\n\r\n    /**\r\n     * @en Constructor with the allocator of elements and initial pool size.\r\n     * @zh 使用元素的构造器和初始大小的构造函数。\r\n     * @param ctor @en The allocator of elements in pool, it's invoked directly without `new` in Pool.\r\n     * @zh 元素的构造器，Pool 内部使用该构造器直接创建实例。\r\n     * @param elementsPerBatch @en Initial pool size, this size will also be the incremental size when\r\n     * the pool is overloaded.\r\n     * @zh 对象池的初始大小。当对象池扩容时，也会使用该值。\r\n     * @param dtor @en The finalizer of element, it's invoked when this Pool is destroyed or shrunk if\r\n     * it is valid.\r\n     * @zh 元素的析构器。如果存在的话，当对象池销毁或者缩容时，会使用该析构器。\r\n     * @param shrinkThreshold @en The container is shrink only if the size of the container exceeds the shrinkThreshold,\r\n     * and the size of the container after reduction is greater than or equal to the shrinkThreshold. The value equals elementsPerBatch\r\n     * if not value is passed.\r\n     * @zh 只有容器的数量大于 shrinkThreshold 时才缩容，缩减后的容器大小小于等于 shrinkThreshold。如果没有传入值，那么它的值和 elementsPerBatch 相同。\r\n     */\r\n    constructor (ctor: () => T, elementsPerBatch: number, dtor?: (obj: T) => void, shrinkThreshold?: number) {\r\n        super();\r\n        this._ctor = ctor;\r\n        this._dtor = dtor || null;\r\n        this._elementsPerBatch = Math.max(elementsPerBatch, 1);\r\n        this._shrinkThreshold = shrinkThreshold ? max(shrinkThreshold, 1) : this._elementsPerBatch;\r\n        this._nextAvail = this._elementsPerBatch - 1;\r\n\r\n        for (let i = 0; i < this._elementsPerBatch; ++i) {\r\n            this._freePool.push(ctor());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Take an object out of the object pool.\r\n     * @zh 从对象池中取出一个对象。\r\n     * @returns @en An object ready for use. This function always returns an object.\r\n     * @zh 该函数总是返回一个可用的对象。\r\n     */\r\n    public alloc (): T {\r\n        if (this._nextAvail < 0) {\r\n            this._freePool.length = this._elementsPerBatch;\r\n            for (let i = 0; i < this._elementsPerBatch; i++) {\r\n                this._freePool[i] = this._ctor();\r\n            }\r\n            this._nextAvail = this._elementsPerBatch - 1;\r\n        }\r\n\r\n        return this._freePool[this._nextAvail--];\r\n    }\r\n\r\n    /**\r\n     * @en Put an object back into the object pool.\r\n     * @zh 将一个对象放回对象池中。\r\n     * @param obj @en The object to be put back into the pool.\r\n     * @zh 放回对象池中的对象。\r\n     */\r\n    public free (obj: T): void {\r\n        this._freePool[++this._nextAvail] = obj;\r\n    }\r\n\r\n    /**\r\n     * @en Put multiple objects back into the object pool.\r\n     * @zh 将一组对象放回对象池中。\r\n     * @param objs @en An array of objects to be put back into the pool.\r\n     * @zh 放回对象池中的一组对象。\r\n     */\r\n    public freeArray (objs: T[]): void {\r\n        this._freePool.length = this._nextAvail + 1;\r\n        Array.prototype.push.apply(this._freePool, objs);\r\n        this._nextAvail += objs.length;\r\n    }\r\n\r\n    /**\r\n     * @en Try to shrink the object pool to reduce memory usage.\r\n     * @zh 尝试缩容对象池，以释放内存。\r\n     */\r\n    public tryShrink (): void {\r\n        const freeObjectNumber = this._nextAvail + 1;\r\n        if (freeObjectNumber <= this._shrinkThreshold) {\r\n            return;\r\n        }\r\n\r\n        let objectNumberToShrink = 0;\r\n        if (freeObjectNumber >> 1 >= this._shrinkThreshold) {\r\n            objectNumberToShrink = freeObjectNumber >> 1;\r\n        } else {\r\n            objectNumberToShrink = Math.floor((freeObjectNumber - this._shrinkThreshold + 1) / 2);\r\n        }\r\n\r\n        if (this._dtor) {\r\n            for (let i = this._nextAvail - objectNumberToShrink + 1;  i <=  this._nextAvail; ++i) {\r\n                this._dtor(this._freePool[i]);\r\n            }\r\n        }\r\n        this._nextAvail -= objectNumberToShrink;\r\n        this._freePool.length = this._nextAvail + 1;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy all elements and clear the pool.\r\n     * @zh 释放对象池中所有资源并清空缓存池。\r\n     */\r\n    public destroy (): void {\r\n        const dtor = arguments.length > 0 ? arguments[0] : null;\r\n        if (dtor) { warnID(14100); }\r\n        const readDtor = dtor || this._dtor;\r\n        if (readDtor) {\r\n            for (let i = 0; i <= this._nextAvail; i++) {\r\n                readDtor(this._freePool[i]);\r\n            }\r\n        }\r\n        this._freePool.length = 0;\r\n        this._nextAvail = -1;\r\n        super.destroy();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\n\r\nconst NonUuidMark = '.';\r\n\r\n/**\r\n * @en\r\n * ID generator for runtime.\r\n *\r\n * @zh\r\n * 运行时 ID 生成器。\r\n */\r\nexport class IDGenerator {\r\n    /**\r\n    * @en\r\n    * The global id generator might have a conflict problem once every 365 days,\r\n    * if the game runs at 60 FPS and each frame 4760273 counts of new id are requested.\r\n    *\r\n    * @zh\r\n    * 全局的 id 生成器，如果游戏以 60 FPS 运行，每帧获取 4760273 个新 id, 则可能在 365 天后发生冲突。\r\n    */\r\n    public static global = new IDGenerator('global');\r\n\r\n    /**\r\n     * @en A number to record current id. It may increase when invoke `getNewId()`. Should use\r\n     * `getNewId()` to get a unique id.\r\n     * @zh 记录当前 id 值。调用 `getNewId()` 时，它可能被加1。应该使用 `getNewId()` 获取唯一的 id。\r\n     */\r\n    public declare id: number;\r\n\r\n    /**\r\n     * @en A string value indicates the category this IDGenerator belongs to. It will be an empty\r\n     * string if not be assigned by passed parameter in constructor.\r\n     * @zh 用于标识该 IDGenerator 所属的类别。如果构造函数没有传参数对它赋值的话，它将是一个空字符串。\r\n     */\r\n    public declare prefix: string;\r\n\r\n    /**\r\n     * @en Construct a new id generator.\r\n     * @zh 构造一个新的 id 生成器。\r\n     *\r\n     * @param category @en You can specify a unique category to avoid id collision with other instance of IdGenerator.\r\n     * @zh 你能指定一个唯一的标识用于避免与其他 id 生成器冲突。\r\n     */\r\n    constructor (category?: string) {\r\n        // Initialize with a random id to emphasize that the returns id should not be stored in persistence data.\r\n        this.id = 0 | (Math.random() * 998);\r\n        this.prefix = category ? (category + NonUuidMark) : '';\r\n    }\r\n\r\n    /**\r\n     * @en Gets a unique id. @zh 获取唯一的 id。\r\n     * @returns @en The unique id. It has the form `prefix+id`, for example `scene55`, `scene` is `prefix`, `55` is `id`.\r\n     * @zh 唯一的 id。它的形式是 `prefix+id`，比如 `scene55`，`scene` 是 prefix，`55` 是 `id`。\r\n     */\r\n    public getNewId (): string {\r\n        if (EDITOR && (this.prefix === 'Node.' || this.prefix === 'Comp.')) {\r\n            return EditorExtends.UuidUtils.uuid();\r\n        }\r\n        return this.prefix + (++this.id).toString();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ScalableContainer } from './scalable-container';\r\n\r\n/**\r\n * @en Recyclable object pool. It's designed to be entirely reused each time.\r\n * There is no put and get method, each time you get the [[data]], you can use all elements as new.\r\n * You shouldn't simultaneously use the same RecyclePool in more than two overlapped logic.\r\n * Its size can be automatically incremented or manually resized.\r\n * @zh 循环对象池。这种池子被设计为每次使用都完整复用。\r\n * 它没有回收和提取的函数，通过获取 [[data]] 可以获取池子中所有元素，全部都应该被当做新对象来使用。\r\n * 开发者不应该在相互交叉的不同逻辑中同时使用同一个循环对象池。\r\n * 池子尺寸可以在池子满时自动扩充，也可以手动调整。\r\n * @see [[Pool]]\r\n */\r\nexport class RecyclePool<T = any> extends ScalableContainer {\r\n    private declare _fn: () => T;\r\n    private declare _dtor: ((obj: T) => void) | null;\r\n    private _count = 0;\r\n    private declare _data: T[];\r\n    private declare _initSize: number;\r\n\r\n    /**\r\n     * @en Constructor with the allocator of elements and initial pool size, all elements will be pre-allocated.\r\n     * @zh 使用元素的构造器和初始大小的构造函数，所有元素都会被预创建。\r\n     * @param fn The allocator of elements in pool, it's invoked directly without `new`\r\n     * @param size Initial pool size\r\n     * @param dtor The finalizer of element, it's invoked when this container is destroyed or shrunk\r\n     */\r\n    constructor (fn: () => T, size: number, dtor?: (obj: T) => void) {\r\n        super();\r\n        this._fn = fn;\r\n        this._dtor = dtor || null;\r\n        this._data = new Array(size);\r\n        this._initSize = size;\r\n\r\n        for (let i = 0; i < size; ++i) {\r\n            this._data[i] = fn();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The length of the object pool.\r\n     * @zh 对象池大小。\r\n     */\r\n    get length (): number {\r\n        return this._count;\r\n    }\r\n\r\n    /**\r\n     * @en The underlying array of all pool elements.\r\n     * @zh 实际对象池数组。\r\n     */\r\n    get data (): T[] {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * @en Resets the object pool. Only changes the length to 0.\r\n     * @zh 清空对象池。目前仅仅会设置尺寸为 0。\r\n     */\r\n    public reset (): void {\r\n        this._count = 0;\r\n    }\r\n\r\n    /**\r\n     * @en Resize the object poo, and fills with new created elements.\r\n     * @zh 设置对象池大小，并填充新的元素。\r\n     * @param size @en The new size of the pool. @zh 新的对象池大小。\r\n     */\r\n    public resize (size: number): void {\r\n        if (size > this._data.length) {\r\n            for (let i = this._data.length; i < size; ++i) {\r\n                this._data[i] = this._fn();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Adds a new element. If the capacity is insufficient, it will automatically expand to twice its original size.\r\n     * @zh 添加一个新元素，如果容量不足，会自动扩充尺寸到原来的 2 倍。\r\n     */\r\n    public add (): T {\r\n        if (this._count >= this._data.length) {\r\n            this.resize(this._data.length << 1);\r\n        }\r\n\r\n        return this._data[this._count++];\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the object pool. Please don't use it any more after it is destroyed.\r\n     * @zh 销毁对象池。销毁后不能继续使用。\r\n     */\r\n    public destroy (): void {\r\n        if (this._dtor) {\r\n            for (let i = 0; i < this._data.length; i++) {\r\n                this._dtor(this._data[i]);\r\n            }\r\n        }\r\n        this._data.length = 0;\r\n        this._count = 0;\r\n        super.destroy();\r\n    }\r\n\r\n    /**\r\n     * @en Try to shrink the object pool to free memory.\r\n     * @zh 尝试回收没用的对象，释放内存。\r\n     */\r\n    public tryShrink (): void {\r\n        if (this._data.length >> 2 > this._count) {\r\n            const length = Math.max(this._initSize, this._data.length >> 1);\r\n            if (this._dtor) {\r\n                for (let i = length; i < this._data.length; i++) {\r\n                    this._dtor(this._data[i]);\r\n                }\r\n            }\r\n            this._data.length = length;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Remove the element with the specified index from the object pool. This will decrease pool size.\r\n     * @zh 移除对象池中指定索引的元素，会减小池子尺寸。\r\n     * @param idx @en The index of the element to remove. @zh 被移除的元素的索引。\r\n     */\r\n    public removeAt (idx: number): void {\r\n        if (idx >= this._count) {\r\n            return;\r\n        }\r\n\r\n        const last = this._count - 1;\r\n        const tmp = this._data[idx];\r\n        this._data[idx] = this._data[last];\r\n        this._data[last] = tmp;\r\n        this._count -= 1;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ScalableContainer } from './scalable-container';\r\n\r\n/**\r\n * @en\r\n * Cached array is a data structure for objects cache, it's designed for persistent data.\r\n * Its content array length will keep grow.\r\n * @zh\r\n * 适用于对象缓存的数组类型封装，一般用于不易被移除的常驻数据。\r\n * 它的内部数组长度会持续增长，不会减少。\r\n */\r\nexport class CachedArray<T> extends ScalableContainer {\r\n    /**\r\n     * @en\r\n     * The array which stores actual content.\r\n     * @zh\r\n     * 实际存储数据内容的数组。\r\n     */\r\n    public declare array: T[];\r\n\r\n    /**\r\n     * @en\r\n     * The actual count of data object.\r\n     * @zh\r\n     * 实际存储的元素数量。\r\n     */\r\n    public length = 0;\r\n\r\n    private declare _compareFn?: (a: T, b: T) => number;\r\n    private _initSize = 0;\r\n\r\n    /**\r\n     * @en Constructor. @zh 构造函数。\r\n     * @param length @en Initial length of the CachedArray. @zh CachedArray 的初始长度。\r\n     * @param compareFn @en Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * @zh 用来确定元素顺序的函数。如果第一个参数小于第二个参数，它应该返回一个负值，如果它们相等，则返回0，否则返回一个正值。\r\n     * 如果省略，元素将按 ASCII 字符升序排序。\r\n     */\r\n    constructor (length: number, compareFn?: (a: T, b: T) => number) {\r\n        super();\r\n        this.array = new Array(length);\r\n        this._initSize = length;\r\n        this._compareFn = compareFn;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Push an element to the end of the array.\r\n     * @zh\r\n     * 向数组末尾添加一个元素。\r\n     * @param item @en The item to be added. @zh 被添加到数组的元素。\r\n     */\r\n    public push (item: T): void {\r\n        this.array[this.length++] = item;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pop the last element in the array. The [[length]] will reduce, but the internal array will keep its size.\r\n     * @zh\r\n     * 弹出数组最后一个元素，CachedArray 的 [[length]] 会减少，但是内部数组的实际长度不变。\r\n     * @returns @en The last element of this CachedArray. If CachedArray is empty, will return undefined.\r\n     * @zh 数组的最后一个元素。如果数组为空，将返回 undefined。\r\n     */\r\n    public pop (): T | undefined {\r\n        return this.array[--this.length];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the element at the specified index of the array.\r\n     * @zh\r\n     * 获取数组中指定位置的元素。\r\n     * @param idx @en The index of the requested element. @zh 用于获取数组元素的索引。\r\n     * @returns @en The element at given index. If idx not in [0, [[length]]) or array is empty, will return undefined.\r\n     * @zh 数组下标对应的元素。如果 idx 超出 [0, [[length]]），或者数组是空的，将返回 undefined。\r\n     */\r\n    public get (idx: number): T | undefined {\r\n        return this.array[idx];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clear the cache. The [[length]] will be set to 0, but the internal array will keep its size.\r\n     * @zh\r\n     * 清空数组所有元素。[[length]] 会被设为 0，但内部数组的实际长度不变\r\n     */\r\n    public clear (): void {\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Destroy the array. The [[length]] will be set to 0, and clear the internal array.\r\n     * @zh\r\n     * 销毁数组。[[length]] 会被设为 0，并且清空内部数组。\r\n     */\r\n    public destroy (): void {\r\n        this.length = 0;\r\n        this.array.length = 0;\r\n        super.destroy();\r\n    }\r\n\r\n    /**\r\n     * @en Requests the removal of unused capacity.\r\n     * @zh 尝试释放多余的内存。\r\n     */\r\n    public tryShrink (): void {\r\n        if (this.array.length >> 2 > this.length) {\r\n            this.array.length = Math.max(this._initSize, this.array.length >> 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sort the existing elements in cache by [[compareFn]] passed in constructor.\r\n     * If [[compareFn]] is not passed in, the elements are sorted in ascending, ASCII character order.\r\n     * @zh\r\n     * 使用构造函数传入的 [[compareFn]] 排序所有现有元素。如果没有传入比较函数，将按照 ASCII 升序排序。\r\n     */\r\n    public sort (): void {\r\n        this.array.length = this.length;\r\n        this.array.sort(this._compareFn);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add all elements of a given array to the end of the current array.\r\n     * @zh\r\n     * 添加一个指定数组中的所有元素到当前数组末尾。\r\n     * @param array @en The given array to be appended. @zh 被添加的数组。\r\n     */\r\n    public concat (array: T[]): void {\r\n        for (let i = 0; i < array.length; ++i) {\r\n            this.array[this.length++] = array[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Delete the element at the specified location and move the last element to that location.\r\n     * @zh 删除指定位置的元素并将最后一个元素移动至该位置。\r\n     * @param idx @en The index of the element to be deleted. If idx out of range [0, length), there is\r\n     * not effect.\r\n     *  @zh 希望被删除的索引。如果索引超出 [0, length)，将没有效果。\r\n     */\r\n    public fastRemove (idx: number): void {\r\n        if (idx >= this.length || idx < 0) {\r\n            return;\r\n        }\r\n        const last = --this.length;\r\n        this.array[idx] = this.array[last];\r\n    }\r\n\r\n    /**\r\n     * @en Returns the first index that compares equal to val.\r\n     * @zh 返回在数组中找到的第一个和 val 相等的元素的索引。\r\n     * @param val @en Value to search for. @zh 搜索的值。\r\n     * @returns The index to the first element that compares equal to val. If no elements match, returns -1.\r\n     * @zh 第一个和 val 相等的元素的索引。如果没找到，将返回 -1。\r\n     */\r\n    public indexOf (val: T): number {\r\n        for (let i = 0, len = this.length; i < len; ++i) {\r\n            if (this.array[i] === val) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, DEV, TEST } from 'internal:constants';\r\nimport { warnID, error, errorID, StringSubstitution, logID } from '../platform/debug';\r\nimport { IDGenerator }  from './id-generator';\r\n\r\nconst tempCIDGenerator = new IDGenerator('TmpCId.');\r\n\r\nconst aliasesTag = typeof Symbol === 'undefined' ? '__aliases__' : Symbol('[[Aliases]]');\r\nconst classNameTag = '__classname__';\r\nconst classIdTag = '__cid__';\r\n\r\n/**\r\n * @en\r\n * Checks if an object is `number`.\r\n * @zh\r\n * 检查对象是否是 number 类型。\r\n * @param object @en The object to check. @zh 要检查的对象。\r\n * @returns @en True if it is a number primitive or a `Number` instance, false else.\r\n * @zh 如果该对象是基础数字类型或者是 `Number` 实例，返回 `true`；否则返回 `false`。\r\n * @example\r\n * ```ts\r\n * var obj = 10;\r\n * isNumber(obj); // returns true\r\n *\r\n * obj = new Number(10);\r\n * isNumber(obj); // returns true\r\n * ```\r\n */\r\nexport function isNumber (object: any): object is number {\r\n    return typeof object === 'number' || object instanceof Number;\r\n}\r\n\r\n/**\r\n * @en\r\n * Checks if an object is `string`.\r\n * @zh\r\n * 检查对象是否是 string 类型。\r\n * @param object @en The object to check. @zh 要检查的对象。\r\n * @returns @en True if it is a string primitive or a `String` instance, false else.\r\n * @zh 如果该对象是基础字符串类型或者是 `String` 实例，返回 `true`；否则返回 `false`。\r\n * @example\r\n * ```ts\r\n * var obj = \"it is a string\";\r\n * isString(obj); // returns true\r\n *\r\n * obj = new String(\"it is a string\");\r\n * isString(obj); // returns true\r\n * ```\r\n */\r\nexport function isString (object: any): object is string {\r\n    return typeof object === 'string' || object instanceof String;\r\n}\r\n\r\n/**\r\n * @en\r\n * Checks if an object is empty object. If an object does not have any enumerable property\r\n * (including properties inherits from prototype chains), then it is an empty object.\r\n * @zh\r\n * 检查对象是否为空对象。空对象的定义是：没有任何可被枚举的属性（包括从原型链继承的属性）的对象。\r\n * @param obj @en The object to check. @zh 要检查的对象。\r\n * @returns @en True if it is not an empty object or not an object, false else.\r\n * @zh 如果不是空对象或者不是一个对象，返回 `true`；否则返回 `false`。\r\n */\r\nexport function isEmptyObject (obj: any): boolean {\r\n    for (const key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * @en A helper function to add a property to an object, or modifies attributes\r\n * of an existing property. The property is configurable.\r\n * @zh 为对象添加属性或者修改已有属性的辅助函数。该属性是可配置的。\r\n * @param object @en The object to add or modify attributes. @zh 要添加或者修改属性的对象。\r\n * @param propertyName @en The property name to add or modify. @zh 要添加或修改的属性名。\r\n * @param value_ @en The property value to add or new value to replace a existing attribute.\r\n * @zh 要添加的属性值，或者取代现有属性的新值。\r\n * @param writable @en If the property is writable. @zh 属性是否可写。\r\n * @param enumerable @en If the property is enumerable. @zh 属性是否可枚举。\r\n */\r\nexport const value = ((): (object: Record<string | number, any>, propertyName: string, value_: any, writable?: boolean, enumerable?: boolean) => void => {\r\n    const descriptor: PropertyDescriptor = {\r\n        value: undefined,\r\n        enumerable: false,\r\n        writable: false,\r\n        configurable: true,\r\n    };\r\n    return (object: Record<string | number, any>, propertyName: string, value_: any, writable?: boolean, enumerable?: boolean): void => {\r\n        descriptor.value = value_;\r\n        descriptor.writable = writable;\r\n        descriptor.enumerable = enumerable;\r\n        Object.defineProperty(object, propertyName, descriptor);\r\n        descriptor.value = undefined;\r\n    };\r\n})();\r\n\r\n/**\r\n * @en A helper function to add or modify `get`, `set`, `enumerable` or `configurable` of a property.\r\n * @zh 添加或修改属性的 `get`, `set`, `enumerable` 或者 `configurable`。\r\n * @param object @en The object to add or modify attributes. @zh 要添加或者修改属性的对象。\r\n * @param propertyName @en The property name to add or modify. @zh 要添加或修改的属性名。\r\n * @param getter @en The getter of a property. @zh 属性的获取函数。\r\n * @param setter @en The setter of a property. @zh 属性的设置函数。\r\n * @param enumerable @en If the property is enumerable. @zh 属性是否可列举。\r\n * @param configurable @en If the property is configurable. @zh 属性是否可配置。\r\n */\r\nexport const getset = ((): (object: Record<string | number, any>, propertyName: string, getter: Getter, setter?: Setter | boolean, enumerable?: boolean, configurable?: boolean) => void => {\r\n    const descriptor: PropertyDescriptor = {\r\n        get: undefined,\r\n        set: undefined,\r\n        enumerable: false,\r\n    };\r\n    return (object: Record<string | number, any>, propertyName: string, getter: Getter, setter?: Setter | boolean, enumerable = false, configurable = false): void => {\r\n        if (typeof setter === 'boolean') {\r\n            logID(1031);\r\n            enumerable = setter;\r\n            setter = undefined;\r\n        }\r\n        descriptor.get = getter;\r\n        // TODO: on OH platform, strictNullCheck compiler option is false, so we need to force inferring as Setter type. @PP_Pro\r\n        descriptor.set = setter as Setter;\r\n        descriptor.enumerable = enumerable;\r\n        descriptor.configurable = configurable;\r\n        Object.defineProperty(object, propertyName, descriptor);\r\n        descriptor.get = undefined;\r\n        descriptor.set = undefined;\r\n    };\r\n})();\r\n\r\n/**\r\n * @en A helper function to add or modify `get`, `enumerable` or `configurable` of a property.\r\n * @zh 添加或修改属性的 `get`, `enumerable` 或者 `configurable`。\r\n * @param object @en The object to add or modify attributes. @zh 要添加或者修改属性的对象。\r\n * @param propertyName @en The property name to add or modify. @zh 要添加或修改的属性名。\r\n * @param getter @en The getter of a property. @zh 属性的获取函数。\r\n * @param enumerable @en If the property is enumerable. @zh 属性是否可列举。\r\n * @param configurable @en If the property is configurable. @zh 属性是否可配置。\r\n */\r\nexport const get = ((): (object: Record<string | number, any>, propertyName: string, getter: Getter, enumerable?: boolean, configurable?: boolean) => void => {\r\n    const descriptor: PropertyDescriptor = {\r\n        get: undefined,\r\n        enumerable: false,\r\n        configurable: false,\r\n    };\r\n    return (object: Record<string | number, any>, propertyName: string, getter: Getter, enumerable?: boolean, configurable?: boolean): void => {\r\n        descriptor.get = getter;\r\n        descriptor.enumerable = enumerable;\r\n        descriptor.configurable = configurable;\r\n        Object.defineProperty(object, propertyName, descriptor);\r\n        descriptor.get = undefined;\r\n    };\r\n})();\r\n\r\n/**\r\n * @en A helper function to add or modify `get`, `enumerable` or `configurable` of a property.\r\n * @zh 添加或修改属性的 `get`, `enumerable` 或者 `configurable`。\r\n * @param object @en The object to add or modify attributes. @zh 要添加或者修改属性的对象。\r\n * @param propertyName @en The property name to add or modify. @zh 要添加或修改的属性名。\r\n * @param setter @en The setter of a property. @zh 属性的设置函数。\r\n * @param enumerable @en If the property is enumerable. @zh 属性是否可列举。\r\n * @param configurable @en If the property is configurable. @zh 属性是否可配置。\r\n */\r\nexport const set = ((): (object: Record<string | number, any>, propertyName: string, setter: Setter, enumerable?: boolean, configurable?: boolean) => void => {\r\n    const descriptor: PropertyDescriptor = {\r\n        set: undefined,\r\n        enumerable: false,\r\n        configurable: false,\r\n    };\r\n    return (object: Record<string | number, any>, propertyName: string, setter: Setter, enumerable?: boolean, configurable?: boolean): void => {\r\n        descriptor.set = setter;\r\n        descriptor.enumerable = enumerable;\r\n        descriptor.configurable = configurable;\r\n        Object.defineProperty(object, propertyName, descriptor);\r\n        descriptor.set = undefined;\r\n    };\r\n})();\r\n\r\n/**\r\n * @en\r\n * A simple wrapper of `Object.create(null)` which ensures the return object have no prototype (and thus no inherited members).\r\n * This eliminates the need to make `hasOwnProperty` judgments when we look for values by key on the object,\r\n * which is helpful for performance in this case.\r\n * @zh\r\n * 该方法是对 `Object.create(null)` 的简单封装。\r\n * `Object.create(null)` 用于创建无 prototype （也就无继承）的空对象。\r\n * 这样我们在该对象上查找属性时，就不用进行 `hasOwnProperty` 判断，此时对性能提升有帮助。\r\n *\r\n * @param forceDictMode @en Apply the delete operator to newly created map object. This will let V8 put the object in\r\n * \"dictionary mode\" and disables creation of hidden classes. This will improve the performance of objects that are\r\n * constantly changing shape.\r\n * @zh 对新创建的地图对象应用删除操作。这将让V8将对象置于 \"字典模式\"，并禁止创建隐藏类。这将提高那些不断变化形状对象的性能。\r\n * @returns @en A newly map object. @zh 一个新的 map 对象。\r\n */\r\nexport function createMap (forceDictMode?: boolean): any {\r\n    const map = Object.create(null);\r\n    if (forceDictMode) {\r\n        const INVALID_IDENTIFIER_1 = '.';\r\n        const INVALID_IDENTIFIER_2 = '/';\r\n        // assign dummy values on the object\r\n        map[INVALID_IDENTIFIER_1] = 1;\r\n        map[INVALID_IDENTIFIER_2] = 1;\r\n        delete map[INVALID_IDENTIFIER_1];\r\n        delete map[INVALID_IDENTIFIER_2];\r\n    }\r\n    return map;\r\n}\r\n\r\n/**\r\n * @en\r\n * Gets class name of the object, if object is just a {} (and which class named 'Object'), it will return \"\".\r\n * (modified from <a href=\"http://stackoverflow.com/questions/1249531/how-to-get-a-javascript-objects-class\">the code of stackoverflow post</a>)\r\n * @zh\r\n * 获取对象的类型名称，如果对象是 {} 字面量，将会返回 \"\"。参考了 stackoverflow 的代码实现：\r\n * <a href=\"http://stackoverflow.com/questions/1249531/how-to-get-a-javascript-objects-class\">stackoverflow 的实现</a>\r\n * @param objOrCtor @en An object instance or constructor. @zh 类实例或者构造函数。\r\n * @returns @en The class name. @zh 类名。\r\n */\r\nexport function getClassName (objOrCtor: any): string {\r\n    if (typeof objOrCtor === 'function') {\r\n        const prototype = objOrCtor.prototype;\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (prototype && prototype.hasOwnProperty(classNameTag) && prototype[classNameTag]) {\r\n            return prototype[classNameTag] as string;\r\n        }\r\n        let ret = '';\r\n        //  for browsers which have name property in the constructor of the object, such as chrome\r\n        if (objOrCtor.name) {\r\n            ret = objOrCtor.name;\r\n        } else if (objOrCtor.toString) {\r\n            let arr;\r\n            const str = objOrCtor.toString();\r\n            if (str.charAt(0) === '[') {\r\n                // str is \"[object objectClass]\"\r\n                // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\r\n                arr = /\\[\\w+\\s*(\\w+)\\]/.exec(str);\r\n            } else {\r\n                // str is function objectClass () {} for IE Firefox\r\n                // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\r\n                arr = /^function\\s*(\\w+)/.exec(str);\r\n            }\r\n            if (arr && arr.length === 2) {\r\n                ret = arr[1];\r\n            }\r\n        }\r\n        return ret !== 'Object' ? ret : '';\r\n    } else if (objOrCtor && objOrCtor.constructor) {\r\n        return getClassName(objOrCtor.constructor);\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * @en Deprecates a property. It will print waring message if the deprecated property is accessed.\r\n * The warning message includes new property name to use.\r\n * @zh 废弃一个属性。如果被废弃属性还在使用的话，会打印警告消息。警告消息包含新的属性名。\r\n * @param object @en The object or class of the property to deprecate.\r\n *               @zh 被废弃属性的对象或者类。\r\n * @param obsoleted @en The property name to deprecate. It could be a property name or `className.propertyName`.\r\n * @zh 要废弃的属性名。可以直接传属性名或者是 `类名.属性名` 的形式。\r\n * @param newExpr @en New property name to use. It could be a property name or `className.propertyName`.\r\n * @zh 新的属性名。可以直接传属性名或者是 `类名.属性名` 的形式。\r\n * @param writable @en Whether the property is writable. Default is false. @zh 该属性是否可写。默认不可写。\r\n */\r\nexport function obsolete (object: any, obsoleted: string, newExpr: string, writable?: boolean): void {\r\n    const extractPropName = /([^.]+)$/;\r\n    const oldProp = extractPropName.exec(obsoleted)![0];\r\n    const newProp = extractPropName.exec(newExpr)![0];\r\n    function getter (this: any): unknown {\r\n        if (DEV) {\r\n            warnID(5400, obsoleted, newExpr);\r\n        }\r\n        return this[newProp] as unknown;\r\n    }\r\n    function setter (this: any, value_: any): void {\r\n        if (DEV) {\r\n            warnID(5401, obsoleted, newExpr);\r\n        }\r\n        this[newProp] = value_;\r\n    }\r\n\r\n    if (writable) {\r\n        getset(object, oldProp, getter, setter);\r\n    } else {\r\n        get(object, oldProp, getter);\r\n    }\r\n}\r\n\r\n/**\r\n * @en Deprecates some properties. It will print waring message if any deprecated property is accessed.\r\n * The warning message includes new property name to use.\r\n * @zh 废弃一组属性。如果被废弃属性还在使用的话，会打印警告消息。警告消息包含新的属性名。\r\n * @param obj @en The object or class of these properties to deprecate.\r\n *            @zh 被废弃属性的对象或者类。\r\n * @param objName @en The object name or class name of these properties to deprecate.\r\n *                @zh 被废弃属性的对象名或者类名。\r\n * @param props @en The property names to deprecate. @zh 被废弃的一组属性名。\r\n * @param writable @en Whether these properties are writable. @zh 被废弃的属性是否可写。\r\n */\r\nexport function obsoletes (obj, objName, props, writable): void {\r\n    for (const obsoleted in props) {\r\n        const newName = props[obsoleted];\r\n        obsolete(obj, `${objName}.${obsoleted}`, newName, writable);\r\n    }\r\n}\r\n\r\nconst REGEXP_NUM_OR_STR = /(%d)|(%s)/;\r\nconst REGEXP_STR = /%s/;\r\n\r\n/**\r\n * @en\r\n * A string tool to construct a string with format string.\r\n * @zh\r\n * 根据格式字符串构造一个字符串。\r\n * @param msg @en A JavaScript string containing zero or more substitution strings (%s).\r\n * @zh 包含有 0 个或者多个格式符的字符串。\r\n * @param subst @en JavaScript objects with which to replace substitution strings within msg.\r\n * @zh 替换 `msg` 里格式符的表达式。\r\n * @returns @en A new formatted string. @zh 格式化后的新字符串。\r\n * @example\r\n * ```\r\n * import { js } from 'cc';\r\n * js.formatStr(\"a: %s, b: %s\", a, b);\r\n * js.formatStr(a, b, c);\r\n * ```\r\n */\r\nexport function formatStr (msg: string, ...subst: StringSubstitution[]): string;\r\n/**\r\n * @en\r\n * A string tool to constructs a string from an arbitrary sequence of js object arguments.\r\n * @zh\r\n * 根据任意 js 对象参数序列构造一个字符串。\r\n * @returns @en A new formatted string. @zh 格式化后的新字符串。\r\n * @example\r\n * ```\r\n * import { js } from 'cc';\r\n * js.formatStr({}, null, undefined);  // [object Object] null undefined\r\n * ```\r\n */\r\nexport function formatStr (...data: unknown[]): string;\r\nexport function formatStr (msg: unknown, ...subst: unknown[]): string {\r\n    if (arguments.length === 0) {\r\n        return '';\r\n    }\r\n    if (subst.length === 0) {\r\n        return `${msg}`;\r\n    }\r\n\r\n    const hasSubstitution = typeof msg === 'string' && REGEXP_NUM_OR_STR.test(msg);\r\n    if (hasSubstitution) {\r\n        for (const arg of subst) {\r\n            const regExpToTest = typeof arg === 'number' ? REGEXP_NUM_OR_STR : REGEXP_STR;\r\n            if (regExpToTest.test(msg as string)) {\r\n                const notReplaceFunction = `${arg}`;\r\n                msg = (msg as string).replace(regExpToTest, notReplaceFunction);\r\n            } else {\r\n                msg += ` ${arg}`;\r\n            }\r\n        }\r\n    } else {\r\n        for (const arg of subst) {\r\n            msg += ` ${arg}`;\r\n        }\r\n    }\r\n    return msg as string;\r\n}\r\n\r\n// see https://github.com/petkaantonov/bluebird/issues/1389\r\n/**\r\n * @en Removes the first argument. @zh 移除第一个参数。\r\n * @returns @en An Array that contains all arguments except the first one.\r\n * @zh 新的参数数组，该数组不包含第一个参数。\r\n */\r\nexport function shiftArguments (): any[] {\r\n    const len = arguments.length - 1;\r\n    const args = new Array(len);\r\n    for (let i = 0; i < len; ++i) {\r\n        args[i] = arguments[i + 1];\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return args;\r\n}\r\n\r\n/**\r\n * @en Gets a property descriptor by property name of an object or its prototypes.\r\n * @zh 根据属性名从一个对象或者它的原型链中获取属性描述符。\r\n * @param object @en The object to get property descriptor. @zh 获取描述符的对象。\r\n * @param propertyName @en The property name to get property descriptor.\r\n * @zh 获取属性描述符的属性名。\r\n * @returns @en A `PropertyDescriptor` instance or null if not found.\r\n * @zh 属性描述符对象。如果没找到的话，返回 null。\r\n */\r\nexport function getPropertyDescriptor (object: any, propertyName: string): PropertyDescriptor | null {\r\n    while (object) {\r\n        const pd = Object.getOwnPropertyDescriptor(object, propertyName);\r\n        if (pd) {\r\n            return pd;\r\n        }\r\n        object = Object.getPrototypeOf(object);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction _copyProp (name: string, source: any, target: any): void {\r\n    const pd = getPropertyDescriptor(source, name);\r\n    if (pd) {\r\n        Object.defineProperty(target, name, pd);\r\n    }\r\n}\r\n\r\n/**\r\n * @en Copies all properties except those in `excepts` from `source` to `target`.\r\n * @zh 把 `source` 的所有属性，除了那些定义在 `excepts`的属性，拷贝到 `target`。\r\n * @param source @en Source object to copy from. @zh 拷贝的源对象。\r\n * @param target @en Target object to copy to. @zh 拷贝到目标对象。\r\n * @param excepts @en Properties are not copied. @zh 不拷贝到属性。\r\n */\r\nexport function copyAllProperties (source: any, target: any, excepts: Array<string>): void {\r\n    const propertyNames: Array<string> = Object.getOwnPropertyNames(source);\r\n    for (let i = 0, len = propertyNames.length; i < len; ++i) {\r\n        const propertyName: string = propertyNames[i];\r\n        if (excepts.indexOf(propertyName) !== -1) {\r\n            continue;\r\n        }\r\n\r\n        _copyProp(propertyName, source, target);\r\n    }\r\n}\r\n\r\n/**\r\n * @en Copies all the properties in \"sources\" that are not defined in object from \"sources\" to \"object\".\r\n * @zh 将 \"sources\" 中的所有没在 object 定义的属性从 \"sources\" 复制到 \"object\"。\r\n * @param object @en Object to copy properties to. @zh 拷贝的目标对象。\r\n * @param sources @en Source objects to copy properties from. @zh 拷贝到源对象数组。\r\n * @return @en The passing `object` or a new object if passing object is not valid.\r\n * @zh 传入的对象。如果传入的对象无效或者没传入，将返回一个新对象。\r\n */\r\nexport function addon (object?: Record<string | number, any>, ...sources: any[]): Record<string | number, any> {\r\n    object = object || {};\r\n    for (let i = 0; i < sources.length; ++i) {\r\n        const source = sources[i];\r\n        if (source) {\r\n            if (typeof source !== 'object') {\r\n                errorID(5402, source as string);\r\n                continue;\r\n            }\r\n            for (const name in source) {\r\n                if (!(name in object)) {\r\n                    _copyProp(name, source, object);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return object;\r\n}\r\n\r\n/**\r\n * @en Copies all the properties in \"sources\" from \"sources\" to \"object\".\r\n * @zh 将 \"sources\" 中的所有属性从 \"sources\" 复制到 \"object\"。\r\n * @param object @en Object to copy properties to. @zh 拷贝的目标对象。\r\n * @param sources @en Source objects to copy properties from. @zh 拷贝到源对象数组。\r\n * @return @en The passing `object` or a new object if passing object is not valid.\r\n * @zh 传入的对象。如果传入的对象无效或者没传入，将返回一个新对象。\r\n */\r\nexport function mixin (object?: Record<string | number, any>, ...sources: any[]): Record<string | number, any> {\r\n    object = object || {};\r\n    for (let i = 0; i < sources.length; ++i) {\r\n        const source = sources[i];\r\n        if (source) {\r\n            if (typeof source !== 'object') {\r\n                errorID(5403, source as string);\r\n                continue;\r\n            }\r\n            for (const name in source) {\r\n                _copyProp(name, source, object);\r\n            }\r\n        }\r\n    }\r\n    return object;\r\n}\r\n\r\n/**\r\n * @en\r\n * Makes a class inherit from the supplied base class.\r\n * @zh\r\n * 将一个类型继承另一个类型。\r\n * @param cls @en The class to inherit. @zh 要继承的类。\r\n * @param base @en The class to inherit from. @zh 被继承的类。\r\n * @returns @en Passed in `cls`. @zh 传入的 `cls`。\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function extend (cls: Function, base: Function): Function | undefined {\r\n    if (DEV) {\r\n        if (!base) {\r\n            errorID(5404);\r\n            return;\r\n        }\r\n        if (!cls) {\r\n            errorID(5405);\r\n            return;\r\n        }\r\n        if (Object.keys(cls.prototype).length > 0) {\r\n            errorID(5406);\r\n        }\r\n    }\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    for (const p in base) { if (base.hasOwnProperty(p)) { cls[p] = base[p]; } }\r\n    cls.prototype = Object.create(base.prototype, {\r\n        constructor: {\r\n            value: cls,\r\n            writable: true,\r\n            configurable: true,\r\n        },\r\n    });\r\n    // eslint-disable-next-line consistent-return\r\n    return cls;\r\n}\r\n\r\n/**\r\n * @en Get super class.\r\n * @zh 获取父类。\r\n * @param constructor @en The constructor to get super class.\r\n * @zh 要获取父类的构造函数。\r\n * @returns @en Super class. @zh 父类。\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function getSuper (constructor: Function): any {\r\n    const proto = constructor.prototype; // bound function do not have prototype\r\n    const dunderProto = proto && Object.getPrototypeOf(proto);\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return dunderProto && dunderProto.constructor;\r\n}\r\n\r\n/**\r\n * @en\r\n * Checks whether a class is child of another class, or is the same type as another class.\r\n * @zh 判断一类型是否是另一类型的子类或本身。\r\n * @param subclass @en Sub class to check. @zh 子类类型。\r\n * @param superclass @en Super class to check. @zh 父类类型。\r\n * @return @en True if sub class is child of super class, or they are the same type. False else.\r\n * @zh 如果子类类型是父类类型的子类，或者二者是相同类型，那么返回 true，否则返回 false。\r\n */\r\nexport function isChildClassOf<T extends Constructor>(subclass: unknown, superclass: T): subclass is T;\r\nexport function isChildClassOf(subclass: unknown, superclass: unknown): boolean;\r\nexport function isChildClassOf (subclass: unknown, superclass: unknown): boolean {\r\n    if (subclass && superclass) {\r\n        if (typeof subclass !== 'function') {\r\n            return false;\r\n        }\r\n        if (typeof superclass !== 'function') {\r\n            if (DEV) {\r\n                warnID(3625, superclass as string);\r\n            }\r\n            return false;\r\n        }\r\n        if (subclass === superclass) {\r\n            return true;\r\n        }\r\n        for (; ;) {\r\n            // eslint-disable-next-line @typescript-eslint/ban-types\r\n            subclass = getSuper(subclass as Function);\r\n            if (!subclass) {\r\n                return false;\r\n            }\r\n            if (subclass === superclass) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @en Removes all enumerable properties from a object.\r\n * @zh 移除对象中所有可枚举属性.\r\n * @param object @en The object to remove enumerable properties from.\r\n * @zh 要删除可枚举属性的对象。\r\n */\r\nexport function clear (object: Record<string | number, any>): void {\r\n    for (const key of Object.keys(object)) {\r\n        delete object[key];\r\n    }\r\n}\r\n\r\nfunction isTempClassId (id): boolean {\r\n    return typeof id !== 'string' || id.startsWith(tempCIDGenerator.prefix);\r\n}\r\n\r\n// id registration\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const _idToClass: Record<string, Constructor> = createMap(true);\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const _nameToClass: Record<string, Constructor> = createMap(true);\r\n\r\nfunction setup (tag: string, table: Record<string | number, any>, allowExist: boolean): (id: string, constructor: Constructor) => void {\r\n    return function (id: string, constructor: Constructor): void {\r\n        // deregister old\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (constructor.prototype.hasOwnProperty(tag)) {\r\n            delete table[constructor.prototype[tag]];\r\n        }\r\n        value(constructor.prototype, tag, id);\r\n        // register class\r\n        if (id) {\r\n            const registered = table[id];\r\n            if (!allowExist && registered && registered !== constructor) {\r\n                let detail = '';\r\n                if (TEST) {\r\n                    // eslint-disable-next-line no-multi-str\r\n                    detail += ' (This may be caused by error of unit test.) \\\r\nIf you dont need serialization, you can set class id to \"\". You can also call \\\r\njs.unregisterClass to remove the id of unused class';\r\n                }\r\n                errorID(16334, tag, id, detail);\r\n            } else {\r\n                table[id] = constructor;\r\n            }\r\n            // if (id === \"\") {\r\n            //    console.trace(\"\", table === _nameToClass);\r\n            // }\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @en\r\n * Register the class by specified id, if its classname is not defined, the class name will also be set.\r\n * @zh\r\n * 通过 id 注册类型\r\n * @method _setClassId\r\n * @param classId\r\n * @param constructor\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const _setClassId = setup('__cid__', _idToClass, false);\r\n\r\nconst doSetClassName = setup('__classname__', _nameToClass, true);\r\n\r\n/**\r\n * @en Registers a class by specified name manually.\r\n * @zh 通过指定的名称手动注册类型\r\n * @param className @en Class name to register. @zh 注册的类名。\r\n * @param constructor @en Constructor to register. @zh 注册的构造函数。\r\n */\r\nexport function setClassName (className: string, constructor: Constructor): void {\r\n    doSetClassName(className, constructor);\r\n    // auto set class id\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!constructor.prototype.hasOwnProperty(classIdTag)) {\r\n        const id = className || tempCIDGenerator.getNewId();\r\n        if (id) {\r\n            _setClassId(id, constructor);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en Sets an alias for a class.\r\n * After executing `setClassAlias(target, alias)`, `alias` will be a single way short cut for class `target`.\r\n * `js.getClassByName(alias)` and `getClassById(alias)` will return `target`. But `js.getClassName(target)`\r\n * will return the original class name of `target`, not the alias.\r\n * @zh 为类设置别名。执行 `setClassAlias(target, alias)` 后，`alias` 将作为类 `target` 的 “单向 ID” 和 “单向名称”。\r\n * 因此，`getClassById(alias)` 和 `getClassByName(alias)` 都会得到 `target`。这种映射是单向的，这意味着 `getClassName(target)`\r\n * 和 `getClassId(target)` 将不会返回 `alias`。\r\n * @param target @en Constructor of a class to set an alias. @zh 设置别名的类的构造函数。\r\n * @param alias @en Alias to set. The name shall not have been set as class name or alias of another class.\r\n * @zh 类的别名。别名不能重复，也不能是已有类的名字。\r\n */\r\nexport function setClassAlias (target: Constructor, alias: string): void {\r\n    const nameRegistry = _nameToClass[alias];\r\n    const idRegistry = _idToClass[alias];\r\n    let ok = true;\r\n    if (nameRegistry && nameRegistry !== target) {\r\n        errorID(16335, alias);\r\n        ok = false;\r\n    }\r\n    if (idRegistry && idRegistry !== target) {\r\n        errorID(16336, alias);\r\n        ok = false;\r\n    }\r\n    if (ok) {\r\n        let classAliases = target[aliasesTag];\r\n        if (!classAliases) {\r\n            classAliases = [];\r\n            target[aliasesTag] = classAliases;\r\n        }\r\n        classAliases.push(alias);\r\n        _nameToClass[alias] = target;\r\n        _idToClass[alias] = target;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Unregister some classes from engine.\r\n * If you don't need a registered class anymore, you should unregister the class or engine will keep its reference.\r\n * Please note that it‘s your responsibility to remove other references to the class.\r\n * @zh\r\n * 取消注册类型。如果你不再需要一个注册的类，你应该取消注册这个类，否则引擎会还有对它的引用。\r\n * 请注意，你仍然有责任释放其他地方对该类的引用。\r\n *\r\n * @param ...constructor @en The classes to unregister. @zh 取消注册的类型列表。\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function unregisterClass (...constructors: Function[]): void {\r\n    for (const constructor of constructors) {\r\n        const p = constructor.prototype;\r\n        const classId = p[classIdTag];\r\n        if (classId) {\r\n            delete _idToClass[classId];\r\n        }\r\n        const classname = p[classNameTag];\r\n        if (classname) {\r\n            delete _nameToClass[classname];\r\n        }\r\n        const aliases = p[aliasesTag];\r\n        if (aliases) {\r\n            for (let iAlias = 0; iAlias < aliases.length; ++iAlias) {\r\n                const alias = aliases[iAlias];\r\n                delete _nameToClass[alias];\r\n                delete _idToClass[alias];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en Gets a registered class by id.\r\n * @zh 通过 id 获取已注册的类型。\r\n * @param classId @en An id to get class.\r\n * @return constructor\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n * Please use `getClassById()` instead.\r\n */\r\nexport function _getClassById (classId): Constructor<unknown> {\r\n    return getClassById(classId);\r\n}\r\n\r\n/**\r\n * @en Gets the registered class by id.\r\n * @zh 通过 id 获取已注册的类型。\r\n * @param classId @en The class id used to get class. @zh 获取类的 id。\r\n * @returns @en The constructor of the registered class. @zh 注册的类构造函数。\r\n */\r\nexport function getClassById (classId): Constructor<unknown> {\r\n    return _idToClass[classId];\r\n}\r\n\r\n/**\r\n * @en\r\n * Gets the registered class by class name.\r\n * @zh\r\n * 通过类名获取已注册的类型。\r\n * @param classname @en The class name used to get class. @zh 获取类的类名。\r\n * @returns @en The constructor of the registered class. @zh 注册的类构造函数。\r\n */\r\nexport function getClassByName (classname): Constructor<unknown> {\r\n    return _nameToClass[classname];\r\n}\r\n\r\n/**\r\n * @en\r\n * Get class id of the object\r\n * @zh\r\n * 获取对象的 class id\r\n * @param obj - instance or constructor\r\n * @param [allowTempId = true]   - can return temp id in editor\r\n * @return\r\n * @deprecated since v3.5.0. this is an engine private interface that will be removed in the future.\r\n * Please use `getClassId()` instead.\r\n */\r\nexport function _getClassId (obj, allowTempId?: boolean): string {\r\n    return getClassId(obj, allowTempId);\r\n}\r\n\r\n/**\r\n * @en\r\n * Gets class id of an object\r\n * @zh\r\n * 获取对象的 class id。\r\n * @param obj @en An object instance to get class id. @zh 获取类标识的对象。\r\n * @param allowTempId @en Whether allow to return a temple class id in editor.\r\n * @zh 在编辑器时，是否允许返回一个临时的类标识。\r\n * @returns @en Class id if found, empty string else.\r\n * @zh 找到的类标识。如果没找到的话，返回空字符串。\r\n */\r\nexport function getClassId (obj, allowTempId?: boolean): string {\r\n    allowTempId = (typeof allowTempId !== 'undefined' ? allowTempId : true);\r\n\r\n    let res;\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (typeof obj === 'function' && obj.prototype.hasOwnProperty(classIdTag)) {\r\n        res = obj.prototype[classIdTag];\r\n        if (!allowTempId && (DEV || EDITOR) && isTempClassId(res)) {\r\n            return '';\r\n        }\r\n        return res as string;\r\n    }\r\n    if (obj && obj.constructor) {\r\n        const prototype = obj.constructor.prototype;\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (prototype && prototype.hasOwnProperty(classIdTag)) {\r\n            res = obj[classIdTag];\r\n            if (!allowTempId && (DEV || EDITOR) && isTempClassId(res)) {\r\n                return '';\r\n            }\r\n            return res as string;\r\n        }\r\n    }\r\n    return '';\r\n}\r\n","/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\ntype CleanUpFunction<T> = (value: T) => boolean | void;\r\n\r\n/**\r\n * @en\r\n * A fixed-length object pool designed for general type.<br>\r\n * The implementation of this object pool is very simple.\r\n * It can help you to improve your game performance for objects which need frequent release and recreate operations.<br/>\r\n * @zh\r\n * 长度固定的对象缓存池，可以用来缓存各种对象类型。<br/>\r\n * 这个对象池的实现非常精简，它可以帮助您提高游戏性能，适用于优化对象的反复创建和销毁。\r\n * @class js.Pool\r\n * @example\r\n * ```\r\n *\r\n * Example 1:\r\n *\r\n * function Details () {\r\n *     this.uuidList = [];\r\n * };\r\n * Details.prototype.reset = function () {\r\n *     this.uuidList.length = 0;\r\n * };\r\n * Details.pool = new js.Pool(function (obj) {\r\n *     obj.reset();\r\n * }, 5);\r\n * Details.pool.get = function () {\r\n *     return this._get() || new Details();\r\n * };\r\n *\r\n * var detail = Details.pool.get();\r\n * ...\r\n * Details.pool.put(detail);\r\n *\r\n * Example 2:\r\n *\r\n * function Details (buffer) {\r\n *    this.uuidList = buffer;\r\n * };\r\n * ...\r\n * Details.pool.get = function (buffer) {\r\n *     var cached = this._get();\r\n *     if (cached) {\r\n *         cached.uuidList = buffer;\r\n *         return cached;\r\n *     }\r\n *     else {\r\n *         return new Details(buffer);\r\n *     }\r\n * };\r\n *\r\n * var detail = Details.pool.get( [] );\r\n * ...\r\n * ```\r\n */\r\nexport class Pool<T> {\r\n    /**\r\n     * @en\r\n     * The current number of available objects, the default is 0. It will gradually increase with the recycle of the object,\r\n     * the maximum will not exceed the size specified when the constructor is called.\r\n     * @zh\r\n     * 当前可用对象数量，一开始默认是 0，随着对象的回收会逐渐增大，最大不会超过调用构造函数时指定的 size。\r\n     * @default 0\r\n     */\r\n    public count: number = 0;\r\n\r\n    /**\r\n     * @en\r\n     * Gets an object from pool.\r\n     * @zh 从对象池中获取一个对象。\r\n     * @returns @en An object or null if this pool doesn't contain any object.\r\n     * @zh 获取的对象。如果对象池中没有对象，返回 null。\r\n     */\r\n    public get (): T | null {\r\n        return this._get();\r\n    }\r\n\r\n    private declare _pool: Array<T | null>;\r\n    private declare _cleanup: CleanUpFunction<T> | null;\r\n\r\n    /**\r\n     * @en Constructor. @zh 构造函数。\r\n     * @param cleanupFunc @en Callback method used to process the cleanup logic when the object is recycled.\r\n     * @zh 当对象放入对象池时，用来执行清理逻辑的回调函数。\r\n     * @param size @en Pool size. @zh 对象池大小。\r\n     */\r\n    constructor (cleanup: CleanUpFunction<T>, size: number);\r\n\r\n    /**\r\n     * @en Constructor. @zh 构造函数。\r\n     * @param size @en Pool size. @zh 对象池大小。\r\n     */\r\n    constructor (size: number);\r\n\r\n    /**\r\n     * @en Constructor. @zh 构造函数。\r\n     * @param _0 @en If it is a number, it is the array size. Or it is a callback function used to process\r\n     * the cleanup logic when the object is recycled.\r\n     * @zh 如果是 number，那么它是对象池大小。否则是当对象放入对象池时，用来执行清理逻辑的回调函数。\r\n     * @param _1 @en Array size if it is a valid number. @zh 如果是个有效的 number 类型，那么是对象池大小。\r\n     */\r\n    constructor (_0: CleanUpFunction<T> | number, _1?: number) {\r\n        const size = (_1 === undefined) ? (_0 as number) : _1;\r\n        const cleanupFunc = (_1 === undefined) ? null : (_0 as CleanUpFunction<T>);\r\n        this._pool = new Array(size);\r\n        this._cleanup = cleanupFunc;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets an object from pool.\r\n     * @zh 从对象池中获取一个对象。\r\n     * @returns @en An object or null if this pool doesn't contain any object.\r\n     * @zh 获取的对象。如果对象池中没有对象，返回 null。\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _get (): T | null {\r\n        if (this.count > 0) {\r\n            --this.count;\r\n            const cache = this._pool[this.count];\r\n            this._pool[this.count] = null;\r\n            return cache;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Put an object into the pool.\r\n     * @zh 向对象池返还一个不再需要的对象。\r\n     */\r\n    public put (obj: T): void {\r\n        const pool = this._pool;\r\n        if (this.count < pool.length) {\r\n            if (this._cleanup && this._cleanup(obj) === false) {\r\n                return;\r\n            }\r\n            pool[this.count] = obj;\r\n            ++this.count;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Resize the pool.\r\n     * @zh 设置对象池容量。\r\n     * @param length @en New pool size.\r\n     * @zh 新对象池大小。\r\n     */\r\n    public resize (length: number): void {\r\n        if (length >= 0) {\r\n            this._pool.length = length;\r\n            if (this.count > length) {\r\n                this.count = length;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { IDGenerator } from './id-generator';\r\nimport {\r\n    _idToClass,\r\n    _nameToClass,\r\n    _getClassById,\r\n    _getClassId,\r\n    _setClassId,\r\n    addon,\r\n    clear,\r\n    createMap,\r\n    extend,\r\n    formatStr,\r\n    get,\r\n    getClassByName,\r\n    getClassById,\r\n    getClassName,\r\n    getClassId,\r\n    getPropertyDescriptor,\r\n    getset,\r\n    getSuper,\r\n    isChildClassOf,\r\n    isNumber,\r\n    isString,\r\n    isEmptyObject,\r\n    mixin,\r\n    obsolete,\r\n    obsoletes,\r\n    set,\r\n    setClassName,\r\n    setClassAlias,\r\n    shiftArguments,\r\n    unregisterClass,\r\n    value,\r\n} from './js-typed';\r\nimport { Pool } from './pool';\r\nimport * as array from './array';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nexport * from './js-typed';\r\nexport { IDGenerator } from './id-generator';\r\nexport { Pool } from './pool';\r\nexport { array };\r\n\r\n/**\r\n * @deprecated since v3.7.0, `js.js` is deprecated, please access `js` directly instead.\r\n */\r\nexport const js = {\r\n    IDGenerator,\r\n    Pool,\r\n    array,\r\n    isNumber,\r\n    isString,\r\n    isEmptyObject,\r\n    getPropertyDescriptor,\r\n    addon,\r\n    mixin,\r\n    extend,\r\n    getSuper,\r\n    isChildClassOf,\r\n    clear,\r\n    value,\r\n    getset,\r\n    get,\r\n    set,\r\n    unregisterClass,\r\n    getClassName,\r\n    setClassName,\r\n    setClassAlias,\r\n    getClassByName,\r\n    getClassById,\r\n    /**\r\n     * @en All classes registered in the engine, indexed by name.\r\n     * @zh 引擎中已注册的所有类型，通过名称进行索引。\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     * @example\r\n     * ```\r\n     * import { js } from 'cc';\r\n     * // save all registered classes before loading scripts\r\n     * let builtinClassIds = js._registeredClassIds;\r\n     * let builtinClassNames = js._registeredClassNames;\r\n     * // load some scripts that contain CCClass\r\n     * ...\r\n     * // clear all loaded classes\r\n     * js._registeredClassIds = builtinClassIds;\r\n     * js._registeredClassNames = builtinClassNames;\r\n     * ```\r\n     *\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get _registeredClassNames (): typeof _nameToClass {\r\n        return { ..._nameToClass };\r\n    },\r\n    set _registeredClassNames (value: typeof _nameToClass) {\r\n        clear(_nameToClass);\r\n        Object.assign(_nameToClass, value);\r\n    },\r\n    /**\r\n     * @en All classes registered in the engine, indexed by ID.\r\n     * @zh 引擎中已注册的所有类型，通过 ID 进行索引。\r\n     * @example\r\n     * ```\r\n     * import { js } from 'cc';\r\n     * // save all registered classes before loading scripts\r\n     * let builtinClassIds = js._registeredClassIds;\r\n     * let builtinClassNames = js._registeredClassNames;\r\n     * // load some scripts that contain CCClass\r\n     * ...\r\n     * // clear all loaded classes\r\n     * js._registeredClassIds = builtinClassIds;\r\n     * js._registeredClassNames = builtinClassNames;\r\n     * ```\r\n     *\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get _registeredClassIds (): typeof _idToClass {\r\n        return { ..._idToClass };\r\n    },\r\n    set _registeredClassIds (value: typeof _idToClass) {\r\n        clear(_idToClass);\r\n        Object.assign(_idToClass, value);\r\n    },\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    _getClassId,\r\n    getClassId,\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    _setClassId,\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    _getClassById,\r\n    obsolete,\r\n    obsoletes,\r\n    formatStr,\r\n    shiftArguments,\r\n    createMap,\r\n};\r\n\r\n/**\r\n * @en This module provides some JavaScript utilities. All members can be accessed via `import { js } from 'cc'`.\r\n * @zh 这个模块封装了 JavaScript 相关的一些实用函数，你可以通过 `import { js } from 'cc'` 来访问这个模块。\r\n */\r\nlegacyCC.js = js;\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { value } from '../utils/js';\r\nimport { legacyCC } from '../global-exports';\r\nimport { errorID } from '../platform/debug';\r\n\r\n/**\r\n * @en\r\n * Defines a BitMask type. The editor will display different inspector depending on this data type.  It may define some properties to the object.\r\n * The keys of new properties are the integer type values, and the values are corresponding keys. See the example below.\r\n * keys.\r\n * @zh\r\n * 定义一个位掩码类型。编辑器会根据这个数据类型显示不同的显示界面。它可能会在对象添加新属性。新属性的 key 是原来的整型 value，value 是对应的 key。参考下面的例子。\r\n * @param obj\r\n * @en A JavaScript literal object containing BitMask names and values.\r\n * @zh 包含 BitMask 名称和值的 JavaScript 文字对象。\r\n * @returns @en The defined BitMask type @zh 定义的位掩码类型。\r\n * @example\r\n * ```ts\r\n * // `type1` and `type2` are single-selected.\r\n * let obj = {\r\n *     type1: 0,\r\n *     type2: 1 << 2,\r\n * }\r\n *\r\n * // `type1` and `type2` are multiple-selected.\r\n * // New properties are added to obj, obj now is\r\n * // {\r\n * //     type1: 0,\r\n * //     type2: 1<< 2,\r\n * //     0: type1,\r\n * //     4: type2\r\n * // }\r\n * BitMask(obj);\r\n * ```\r\n */\r\nexport function BitMask<T extends object> (obj: T): T {\r\n    if ('__bitmask__' in obj) {\r\n        return obj;\r\n    }\r\n    value(obj, '__bitmask__', null, true);\r\n\r\n    let lastIndex = -1;\r\n    const keys: string[] = Object.keys(obj);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        let val = obj[key];\r\n        if (val === -1) {\r\n            val = ++lastIndex;\r\n            obj[key] = val;\r\n        } else if (typeof val === 'number') {\r\n            lastIndex = val;\r\n        } else if (typeof val === 'string' && Number.isInteger(parseFloat(key))) {\r\n            continue;\r\n        }\r\n        const reverseKey = `${val}`;\r\n        if (key !== reverseKey) {\r\n            if ((EDITOR || TEST) && reverseKey in obj && obj[reverseKey] !== key) {\r\n                errorID(7100, reverseKey);\r\n                continue;\r\n            }\r\n            value(obj, reverseKey, key);\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\n/**\r\n * @en Checks if an object is BitMask. @zh 检查一个对象是否是 BitMask。\r\n * @param BitMaskType @en The object to check. @zh 待检查对象。\r\n * @returns @en True if it is a BitMask, false else.\r\n * @zh 如果是 BitMask，返回 true；否则返回 false。\r\n */\r\nBitMask.isBitMask = (BitMaskType): any => BitMaskType && Object.prototype.hasOwnProperty.call(BitMaskType, '__bitmask__');\r\n\r\n/**\r\n *\r\n * @param BitMaskDef\r\n * @returns @en A sorted array with integer values. @zh 存储整型属性值的数组。该数组已排序。\r\n */\r\nBitMask.getList = (BitMaskDef): any => {\r\n    if (BitMaskDef.__bitmask__) {\r\n        return BitMaskDef.__bitmask__;\r\n    }\r\n\r\n    return BitMask.update(BitMaskDef);\r\n};\r\n\r\n/**\r\n * @en\r\n * Update BitMask object properties.\r\n * @zh\r\n * 更新 BitMask 对象的属性列表。\r\n *\r\n * @param BitMaskDef\r\n * @returns @en A sorted array with integer values. @zh 存储整型属性值的数组。该数组已排序。\r\n */\r\nBitMask.update = (BitMaskDef): any => {\r\n    if (!Array.isArray(BitMaskDef.__bitmask__)) {\r\n        BitMaskDef.__bitmask__ = [];\r\n    }\r\n\r\n    const bitList = BitMaskDef.__bitmask__;\r\n    bitList.length = 0;\r\n\r\n    for (const name in BitMaskDef) {\r\n        const v = BitMaskDef[name];\r\n        if (Number.isInteger(v)) {\r\n            bitList.push({ name, value: v });\r\n        }\r\n    }\r\n    bitList.sort((a, b): number => a.value - b.value);\r\n\r\n    return bitList;\r\n};\r\n\r\n/**\r\n * @en Similar to [[BitMask]], but it doesn't add properties to the object.\r\n * @zh 和 [[BitMask]] 类似功能，但不会往对象添加属性。\r\n * @param bitmaskx @en An object to make BitMask type. @zh 要标记为 BitMask 类型的对象。\r\n * @returns @en The passed in object. @zh 传入的对象。\r\n */\r\nexport function ccbitmask (bitmaskx): void {\r\n    if ('__bitmask__' in bitmaskx) {\r\n        return;\r\n    }\r\n    value(bitmaskx as Record<string | number, any>, '__bitmask__', null, true);\r\n}\r\n\r\nlegacyCC.BitMask = BitMask;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { errorID } from '../platform/debug';\r\nimport * as js from '../utils/js';\r\nimport { legacyCC } from '../global-exports';\r\n\r\n/**\r\n * @en The base class of all value types.\r\n * @zh 所有值类型的基类。\r\n */\r\nexport class ValueType {\r\n    constructor () {}\r\n    /**\r\n     * @en\r\n     * Clone the current object. The clone result of the object should be equal to the current object,\r\n     * i.e. satisfy `this.equals(this, value.clone())`.\r\n     * The base version of this method do nothing and returns `this'.\r\n     * The derived class **must** rewrite this method and the returned object should not be `this`, i.e. satisfy `this !== this.clone()`.\r\n     * @zh\r\n     * 克隆当前值。克隆的结果值应与当前值相等，即满足 `this.equals(this, value.clone())`。\r\n     * 本方法的基类版本简单地返回 `this`；\r\n     * 派生类**必须**重写本方法，并且返回的对象不应当为 `this`，即满足 `this !== this.clone()`。\r\n     * @returns @en The cloned object. @zh 克隆的对象。\r\n     */\r\n    public clone (): ValueType {\r\n        errorID(100, `${js.getClassName(this)}.clone`);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Check whether the current object is equal to the specified object.\r\n     * This check should be interchangeable, i.e. satisfy `this.equals(other) === other.equals(this)`.\r\n     * The base version of this method will returns `false'.\r\n     * @zh\r\n     * 判断当前值是否与指定值相等。此判断应当具有交换性，即满足 `this.equals(other) === other.equals(this)`。\r\n     * 本方法的基类版本简单地返回 `false`。\r\n     * @param other @en The other object @zh 指定值。\r\n     * @returns @en `true` if equal, otherwise returns `false` @zh 如果相等，则返回 `true`，否则返回 `false`。\r\n     */\r\n    public equals (other: this): boolean {\r\n        // errorID(100, js.getClassName(this) + '.equals');\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set the property values of the current object with the given object.\r\n     * The base version of this method will returns `this' and the derived class **must** rewrite this method.\r\n     * @zh\r\n     * 赋值当前值使其与指定值相等。\r\n     * 本方法的基类版本简单地返回 `this`，派生类**必须**重写本方法。\r\n     * @param other @en The other object. @zh 指定值。\r\n     */\r\n    public set (other: this): void {\r\n        errorID(100, `${js.getClassName(this)}.set`);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Convert the current object to a string.\r\n     * The base version of this method will returns an empty string.\r\n     * @zh\r\n     * 返回当前值的字符串表示。\r\n     * 本方法的基类版本返回空字符串。\r\n     * @returns @en The string representation of the current value. @zh 当前值的字符串表示。\r\n     */\r\n    public toString (): string {\r\n        return `${''}`;\r\n    }\r\n}\r\njs.setClassName('cc.ValueType', ValueType);\r\n\r\nlegacyCC.ValueType = ValueType;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { HTML5, NATIVE, TAOBAO, TAOBAO_MINIGAME } from 'internal:constants';\r\nimport { legacyCC } from './global-exports';\r\n\r\ndeclare const fsUtils: any;\r\ndeclare const require: (path: string) =>  Promise<void>;\r\n\r\n/**\r\n * @zh\r\n * Settings 中的默认分组，通常与模块一一对应。\r\n *\r\n * @en\r\n * The default grouping in Settings, which usually corresponds to the module.\r\n */\r\nexport enum SettingsCategory {\r\n    PATH = 'path',\r\n    ENGINE = 'engine',\r\n    ASSETS = 'assets',\r\n    SCRIPTING = 'scripting',\r\n    PHYSICS = 'physics',\r\n    RENDERING = 'rendering',\r\n    LAUNCH = 'launch',\r\n    SCREEN = 'screen',\r\n    SPLASH_SCREEN = 'splashScreen',\r\n    ANIMATION = 'animation',\r\n    PROFILING = 'profiling',\r\n    PLUGINS = 'plugins',\r\n    XR = 'xr',\r\n}\r\n\r\n/**\r\n * @zh\r\n * 配置模块用于获取 settings.json 配置文件中的配置信息，同时你可以覆盖一些配置从而影响引擎的启动和运行，可参考 [game.init] 的参数选项说明。你可以通过 [settings] 访问此模块单例。\r\n * @en\r\n * The Settings module is used to get the configuration information in the settings.json configuration file,\r\n * and you can override some of the configuration to affect the launch and running of the engine, as described in the [game.init] parameter options.\r\n * You can access this single instance of the module via [settings].\r\n */\r\nexport class Settings {\r\n    static Category = SettingsCategory;\r\n\r\n    constructor () {}\r\n\r\n    /**\r\n     * Initialization\r\n     * @internal\r\n     */\r\n    init (path = '', overrides: Record<string, any> = {}): Promise<void> {\r\n        for (const categoryName in overrides) {\r\n            const category = overrides[categoryName];\r\n            if (category) {\r\n                for (const name in category) {\r\n                    this.overrideSettings(categoryName, name, category[name]);\r\n                }\r\n            }\r\n        }\r\n        if (!path) return Promise.resolve();\r\n\r\n        if (NATIVE) {\r\n            if (window.oh && window.scriptEngineType === 'napi') {\r\n                return new Promise((resolve, reject): void => {\r\n                    // TODO: to support a virtual module of settings.\r\n                    // For now, we use a system module context to dynamically import the relative path of module.\r\n                    const settingsModule = '../settings.js';\r\n                    import(settingsModule).then((res): void => {\r\n                        this._settings = res.default;\r\n                        resolve();\r\n                    }).catch((e): void => reject(e));\r\n                });\r\n            }\r\n        }\r\n        return new Promise((resolve, reject): void => {\r\n            if (!HTML5 && !path.startsWith('http')) {\r\n                // TODO: readJsonSync not working on Taobao IDE\r\n                if (TAOBAO || TAOBAO_MINIGAME) {\r\n                    globalThis.fsUtils.readJson(path, (err, result): void => {\r\n                        if (err) {\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                        this._settings = result;\r\n                        resolve();\r\n                    });\r\n                } else {\r\n                    const result = fsUtils.readJsonSync(path);\r\n                    if (result instanceof Error) {\r\n                        reject(result);\r\n                    } else {\r\n                        this._settings = result;\r\n                        resolve();\r\n                    }\r\n                }\r\n            } else {\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.open('GET', path);\r\n                xhr.responseType = 'text';\r\n                xhr.onload = (): void => {\r\n                    this._settings = JSON.parse(xhr.response as string);\r\n                    resolve();\r\n                };\r\n                xhr.onerror = (): void => {\r\n                    reject(new Error('request settings failed!'));\r\n                };\r\n                xhr.send(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 覆盖一部分配置数据。\r\n     *\r\n     * @en\r\n     * Override some configuration info in Settings module.\r\n     *\r\n     * @param category @en The category you want to override. @zh 想要覆盖的分组。\r\n     * @param name @en The name of the configuration in the category you want to override. @zh 分组中想要覆盖的具体配置名称。\r\n     * @param value @en The value of the configuration you want to override. @zh 想要覆盖的具体值。\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * console.log(settings.querySettings(SettingsCategory.ASSETS, 'server')); // print https://www.cocos.com\r\n     * settings.overrideSettings(SettingsCategory.ASSETS, 'server', 'http://www.test.com');\r\n     * console.log(settings.querySettings(SettingsCategory.ASSETS, 'server')); // print http://www.test.com\r\n     * ```\r\n     */\r\n    overrideSettings<T = any> (category: SettingsCategory | string, name: string, value: T): void {\r\n        if (!(category in this._override)) {\r\n            this._override[category] = {};\r\n        }\r\n        this._override[category][name] = value;\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 查询配置模块中具体分组中的具体配置值。\r\n     *\r\n     * @en\r\n     * Query specific configuration values in specific category in the settings module.\r\n     *\r\n     * @param category @en The name of category to query. @zh 想要查询的分组名称。\r\n     * @param name @en The name of configuration in category to query. @zh 分组中想要查询的具体的配置名称。\r\n     * @returns @en The value of configuration to query. @zh 想要查询的具体配置值。\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * console.log(settings.querySettings(SettingsCategory.ENGINE, 'debug')); // print false\r\n     * ```\r\n     */\r\n    querySettings<T = any> (category: SettingsCategory | string, name: string): T | null {\r\n        if (category in this._override) {\r\n            const categorySettings = this._override[category];\r\n            if (categorySettings && name in categorySettings) {\r\n                return categorySettings[name] as T;\r\n            }\r\n        }\r\n        if (category in this._settings) {\r\n            const categorySettings = this._settings[category];\r\n            if (categorySettings && name in categorySettings) {\r\n                return categorySettings[name] as T;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private _settings: Record<string, any> = {};\r\n    private _override: Record<string, any> = {};\r\n}\r\n\r\nexport declare namespace Settings {\r\n    export type Category = typeof SettingsCategory;\r\n}\r\n\r\n/**\r\n * @zh\r\n * Settings 模块单例，你能通过此单例访问 settings.json 中的配置数据。\r\n * @en\r\n * Settings module singleton, through this you can access the configuration data in settings.json.\r\n */\r\nexport const settings = new Settings();\r\nlegacyCC.settings = settings;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum Orientation {\r\n    PORTRAIT = 1,\r\n    PORTRAIT_UPSIDE_DOWN = PORTRAIT << 1,\r\n    LANDSCAPE_LEFT = PORTRAIT << 2,\r\n    LANDSCAPE_RIGHT = PORTRAIT << 3,\r\n    LANDSCAPE = LANDSCAPE_LEFT | LANDSCAPE_RIGHT,\r\n    AUTO = PORTRAIT | LANDSCAPE,\r\n}\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, MINIGAME, NATIVE, PREVIEW, RUNTIME_BASED } from 'internal:constants';\r\nimport { legacyCC } from '../global-exports';\r\nimport { settings, SettingsCategory } from '../settings';\r\nimport { Orientation } from '../../../pal/screen-adapter/enum-type';\r\n\r\nconst SUPPORT_TEXTURE_FORMATS = ['.astc', '.pkm', '.pvr', '.webp', '.jpg', '.jpeg', '.bmp', '.png'];\r\n\r\nconst KEY = {\r\n    /**\r\n     * @en None\r\n     * @zh 没有分配\r\n     * @readonly\r\n     */\r\n    none: 0,\r\n\r\n    // android\r\n    /**\r\n     * @en The back key on mobile phone\r\n     * @zh 移动端返回键\r\n     * @readonly\r\n     * @deprecated since v3.3, please use KeyCode.MOBILE_BACK instead.\r\n     */\r\n    back: 6,\r\n    /**\r\n     * @en The menu key on mobile phone\r\n     * @zh 移动端菜单键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    menu: 18,\r\n\r\n    /**\r\n     * @en The backspace key\r\n     * @zh 退格键\r\n     * @readonly\r\n     */\r\n    backspace: 8,\r\n\r\n    /**\r\n     * @en The tab key\r\n     * @zh Tab 键\r\n     * @readonly\r\n     */\r\n    tab: 9,\r\n\r\n    /**\r\n     * @en The enter key\r\n     * @zh 回车键\r\n     * @readonly\r\n     */\r\n    enter: 13,\r\n\r\n    /**\r\n     * @en The shift key\r\n     * @zh Shift 键\r\n     * @readonly\r\n     * @deprecated since v3.3, please use KeyCode.SHIFT_LEFT instead.\r\n     */\r\n    shift: 16, // should use shiftkey instead\r\n\r\n    /**\r\n     * @en The ctrl key\r\n     * @zh Ctrl 键\r\n     * @readonly\r\n     * @deprecated since v3.3, please use KeyCode.CTRL_LEFT instead.\r\n     */\r\n    ctrl: 17, // should use ctrlkey\r\n\r\n    /**\r\n     * @en The alt key\r\n     * @zh Alt 键\r\n     * @readonly\r\n     * @deprecated since v3.3, please use KeyCode.ALT_LEFT instead.\r\n     */\r\n    alt: 18, // should use altkey\r\n\r\n    /**\r\n     * @en The pause key\r\n     * @zh 暂停键\r\n     * @readonly\r\n     */\r\n    pause: 19,\r\n\r\n    /**\r\n     * @en The caps lock key\r\n     * @zh 大写锁定键\r\n     * @readonly\r\n     */\r\n    capslock: 20,\r\n\r\n    /**\r\n     * @en The esc key\r\n     * @zh ESC 键\r\n     * @readonly\r\n     */\r\n    escape: 27,\r\n\r\n    /**\r\n     * @en The space key\r\n     * @zh 空格键\r\n     * @readonly\r\n     */\r\n    space: 32,\r\n\r\n    /**\r\n     * @en The page up key\r\n     * @zh 向上翻页键\r\n     * @readonly\r\n     */\r\n    pageup: 33,\r\n\r\n    /**\r\n     * @en The page down key\r\n     * @zh 向下翻页键\r\n     * @readonly\r\n     */\r\n    pagedown: 34,\r\n\r\n    /**\r\n     * @en The end key\r\n     * @zh 结束键\r\n     * @readonly\r\n     */\r\n    end: 35,\r\n\r\n    /**\r\n     * @en The home key\r\n     * @zh 主菜单键\r\n     * @readonly\r\n     */\r\n    home: 36,\r\n\r\n    /**\r\n     * @en The left key\r\n     * @zh 向左箭头键\r\n     * @readonly\r\n     */\r\n    left: 37,\r\n\r\n    /**\r\n     * @en The up key\r\n     * @zh 向上箭头键\r\n     * @readonly\r\n     */\r\n    up: 38,\r\n\r\n    /**\r\n     * @en The right key\r\n     * @zh 向右箭头键\r\n     * @readonly\r\n     */\r\n    right: 39,\r\n\r\n    /**\r\n     * @en The down key\r\n     * @zh 向下箭头键\r\n     * @readonly\r\n     */\r\n    down: 40,\r\n\r\n    /**\r\n     * @en The select key\r\n     * @zh Select 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    select: 41,\r\n\r\n    /**\r\n     * @en The insert key\r\n     * @zh 插入键\r\n     * @readonly\r\n     */\r\n    insert: 45,\r\n\r\n    /**\r\n     * @en The Delete key\r\n     * @zh 删除键\r\n     * @readonly\r\n     */\r\n    Delete: 46,\r\n\r\n    /**\r\n     * @en The '0' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 0 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    0: 48,\r\n\r\n    /**\r\n     * @en The '1' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 1 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    1: 49,\r\n\r\n    /**\r\n     * @en The '2' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 2 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    2: 50,\r\n\r\n    /**\r\n     * @en The '3' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 3 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    3: 51,\r\n\r\n    /**\r\n     * @en The '4' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 4 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    4: 52,\r\n\r\n    /**\r\n     * @en The '5' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 5 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    5: 53,\r\n\r\n    /**\r\n     * @en The '6' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 6 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    6: 54,\r\n\r\n    /**\r\n     * @en The '7' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 7 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    7: 55,\r\n\r\n    /**\r\n     * @en The '8' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 8 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    8: 56,\r\n\r\n    /**\r\n     * @en The '9' key on the top of the alphanumeric keyboard.\r\n     * @zh 字母键盘上的 9 键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    9: 57,\r\n\r\n    /**\r\n     * @en The a key\r\n     * @zh A 键\r\n     * @readonly\r\n     */\r\n    a: 65,\r\n\r\n    /**\r\n     * @en The b key\r\n     * @zh B 键\r\n     * @readonly\r\n     */\r\n    b: 66,\r\n\r\n    /**\r\n     * @en The c key\r\n     * @zh C 键\r\n     * @readonly\r\n     */\r\n    c: 67,\r\n\r\n    /**\r\n     * @en The d key\r\n     * @zh D 键\r\n     * @readonly\r\n     */\r\n    d: 68,\r\n\r\n    /**\r\n     * @en The e key\r\n     * @zh E 键\r\n     * @readonly\r\n     */\r\n    e: 69,\r\n\r\n    /**\r\n     * @en The f key\r\n     * @zh F 键\r\n     * @readonly\r\n     */\r\n    f: 70,\r\n\r\n    /**\r\n     * @en The g key\r\n     * @zh G 键\r\n     * @readonly\r\n     */\r\n    g: 71,\r\n\r\n    /**\r\n     * @en The h key\r\n     * @zh H 键\r\n     * @readonly\r\n     */\r\n    h: 72,\r\n\r\n    /**\r\n     * @en The i key\r\n     * @zh I 键\r\n     * @readonly\r\n     */\r\n    i: 73,\r\n\r\n    /**\r\n     * @en The j key\r\n     * @zh J 键\r\n     * @readonly\r\n     */\r\n    j: 74,\r\n\r\n    /**\r\n     * @en The k key\r\n     * @zh K 键\r\n     * @readonly\r\n     */\r\n    k: 75,\r\n\r\n    /**\r\n     * @en The l key\r\n     * @zh L 键\r\n     * @readonly\r\n     */\r\n    l: 76,\r\n\r\n    /**\r\n     * @en The m key\r\n     * @zh M 键\r\n     * @readonly\r\n     */\r\n    m: 77,\r\n\r\n    /**\r\n     * @en The n key\r\n     * @zh N 键\r\n     * @readonly\r\n     */\r\n    n: 78,\r\n\r\n    /**\r\n     * @en The o key\r\n     * @zh O 键\r\n     * @readonly\r\n     */\r\n    o: 79,\r\n\r\n    /**\r\n     * @en The p key\r\n     * @zh P 键\r\n     * @readonly\r\n     */\r\n    p: 80,\r\n\r\n    /**\r\n     * @en The q key\r\n     * @zh Q 键\r\n     * @readonly\r\n     */\r\n    q: 81,\r\n\r\n    /**\r\n     * @en The r key\r\n     * @zh R 键\r\n     * @readonly\r\n     */\r\n    r: 82,\r\n\r\n    /**\r\n     * @en The s key\r\n     * @zh S 键\r\n     * @readonly\r\n     */\r\n    s: 83,\r\n\r\n    /**\r\n     * @en The t key\r\n     * @zh T 键\r\n     * @readonly\r\n     */\r\n    t: 84,\r\n\r\n    /**\r\n     * @en The u key\r\n     * @zh U 键\r\n     * @readonly\r\n     */\r\n    u: 85,\r\n\r\n    /**\r\n     * @en The v key\r\n     * @zh V 键\r\n     * @readonly\r\n     */\r\n    v: 86,\r\n\r\n    /**\r\n     * @en The w key\r\n     * @zh W 键\r\n     * @readonly\r\n     */\r\n    w: 87,\r\n\r\n    /**\r\n     * @en The x key\r\n     * @zh X 键\r\n     * @readonly\r\n     */\r\n    x: 88,\r\n\r\n    /**\r\n     * @en The y key\r\n     * @zh Y 键\r\n     * @readonly\r\n     */\r\n    y: 89,\r\n\r\n    /**\r\n     * @en The z key\r\n     * @zh Z 键\r\n     * @readonly\r\n     */\r\n    z: 90,\r\n\r\n    /**\r\n     * @en The numeric keypad 0\r\n     * @zh 数字键盘 0\r\n     * @readonly\r\n     */\r\n    num0: 96,\r\n\r\n    /**\r\n     * @en The numeric keypad 1\r\n     * @zh 数字键盘 1\r\n     * @readonly\r\n     */\r\n    num1: 97,\r\n\r\n    /**\r\n     * @en The numeric keypad 2\r\n     * @zh 数字键盘 2\r\n     * @readonly\r\n     */\r\n    num2: 98,\r\n\r\n    /**\r\n     * @en The numeric keypad 3\r\n     * @zh 数字键盘 3\r\n     * @readonly\r\n     */\r\n    num3: 99,\r\n\r\n    /**\r\n     * @en The numeric keypad 4\r\n     * @zh 数字键盘 4\r\n     * @readonly\r\n     */\r\n    num4: 100,\r\n\r\n    /**\r\n     * @en The numeric keypad 5\r\n     * @zh 数字键盘 5\r\n     * @readonly\r\n     */\r\n    num5: 101,\r\n\r\n    /**\r\n     * @en The numeric keypad 6\r\n     * @zh 数字键盘 6\r\n     * @readonly\r\n     */\r\n    num6: 102,\r\n\r\n    /**\r\n     * @en The numeric keypad 7\r\n     * @zh 数字键盘 7\r\n     * @readonly\r\n     */\r\n    num7: 103,\r\n\r\n    /**\r\n     * @en The numeric keypad 8\r\n     * @zh 数字键盘 8\r\n     * @readonly\r\n     */\r\n    num8: 104,\r\n\r\n    /**\r\n     * @en The numeric keypad 9\r\n     * @zh 数字键盘 9\r\n     * @readonly\r\n     */\r\n    num9: 105,\r\n\r\n    /**\r\n     * @en The numeric keypad '*'\r\n     * @zh 数字键盘 *\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    '*': 106,\r\n\r\n    /**\r\n     * @en The numeric keypad '+'\r\n     * @zh 数字键盘 +\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    '+': 107,\r\n\r\n    /**\r\n     * @en The numeric keypad '-'\r\n     * @zh 数字键盘 -\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    '-': 109,\r\n\r\n    /**\r\n     * @en The numeric keypad 'delete'\r\n     * @zh 数字键盘删除键\r\n     * @readonly\r\n     */\r\n    numdel: 110,\r\n\r\n    /**\r\n     * @en The numeric keypad '/'\r\n     * @zh 数字键盘 /\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    '/': 111,\r\n\r\n    /**\r\n     * @en The F1 function key\r\n     * @zh F1 功能键\r\n     * @readonly\r\n     */\r\n    f1: 112, // f1-f12 dont work on ie\r\n\r\n    /**\r\n     * @en The F2 function key\r\n     * @zh F2 功能键\r\n     * @readonly\r\n     */\r\n    f2: 113,\r\n\r\n    /**\r\n     * @en The F3 function key\r\n     * @zh F3 功能键\r\n     * @readonly\r\n     */\r\n    f3: 114,\r\n\r\n    /**\r\n     * @en The F4 function key\r\n     * @zh F4 功能键\r\n     * @readonly\r\n     */\r\n    f4: 115,\r\n\r\n    /**\r\n     * @en The F5 function key\r\n     * @zh F5 功能键\r\n     * @readonly\r\n     */\r\n    f5: 116,\r\n\r\n    /**\r\n     * @en The F6 function key\r\n     * @zh F6 功能键\r\n     * @readonly\r\n     */\r\n    f6: 117,\r\n\r\n    /**\r\n     * @en The F7 function key\r\n     * @zh F7 功能键\r\n     * @readonly\r\n     */\r\n    f7: 118,\r\n\r\n    /**\r\n     * @en The F8 function key\r\n     * @zh F8 功能键\r\n     * @readonly\r\n     */\r\n    f8: 119,\r\n\r\n    /**\r\n     * @en The F9 function key\r\n     * @zh F9 功能键\r\n     * @readonly\r\n     */\r\n    f9: 120,\r\n\r\n    /**\r\n     * @en The F10 function key\r\n     * @zh F10 功能键\r\n     * @readonly\r\n     */\r\n    f10: 121,\r\n\r\n    /**\r\n     * @en The F11 function key\r\n     * @zh F11 功能键\r\n     * @readonly\r\n     */\r\n    f11: 122,\r\n\r\n    /**\r\n     * @en The F12 function key\r\n     * @zh F12 功能键\r\n     * @readonly\r\n     */\r\n    f12: 123,\r\n\r\n    /**\r\n     * @en The numlock key\r\n     * @zh 数字锁定键\r\n     * @readonly\r\n     */\r\n    numlock: 144,\r\n\r\n    /**\r\n     * @en The scroll lock key\r\n     * @zh 滚动锁定键\r\n     * @readonly\r\n     */\r\n    scrolllock: 145,\r\n\r\n    /**\r\n     * @en The ';' key.\r\n     * @zh 分号键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    ';': 186,\r\n\r\n    /**\r\n     * @en The ';' key.\r\n     * @zh 分号键\r\n     * @readonly\r\n     */\r\n    semicolon: 186,\r\n\r\n    /**\r\n     * @en The '=' key.\r\n     * @zh 等于号键\r\n     * @readonly\r\n     */\r\n    equal: 187,\r\n\r\n    /**\r\n     * @en The '=' key.\r\n     * @zh 等于号键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    '=': 187,\r\n\r\n    /**\r\n     * @en The ',' key.\r\n     * @zh 逗号键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    ',': 188,\r\n\r\n    /**\r\n     * @en The ',' key.\r\n     * @zh 逗号键\r\n     * @readonly\r\n     */\r\n    comma: 188,\r\n\r\n    /**\r\n     * @en The dash '-' key.\r\n     * @zh 中划线键\r\n     * @readonly\r\n     */\r\n    dash: 189,\r\n\r\n    /**\r\n     * @en The '.' key.\r\n     * @zh 句号键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    '.': 190,\r\n\r\n    /**\r\n     * @en The '.' key\r\n     * @zh 句号键\r\n     * @readonly\r\n     */\r\n    period: 190,\r\n\r\n    /**\r\n     * @en The forward slash key\r\n     * @zh 正斜杠键\r\n     * @readonly\r\n     */\r\n    forwardslash: 191,\r\n\r\n    /**\r\n     * @en The grave key\r\n     * @zh 按键 `\r\n     * @readonly\r\n     */\r\n    grave: 192,\r\n\r\n    /**\r\n     * @en The '[' key\r\n     * @zh 按键 [\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    '[': 219,\r\n\r\n    /**\r\n     * @en The '[' key\r\n     * @zh 按键 [\r\n     * @readonly\r\n     */\r\n    openbracket: 219,\r\n\r\n    /**\r\n     * @en The '\\' key\r\n     * @zh 反斜杠键\r\n     * @readonly\r\n     */\r\n    backslash: 220,\r\n\r\n    /**\r\n     * @en The ']' key\r\n     * @zh 按键 ]\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    ']': 221,\r\n\r\n    /**\r\n     * @en The ']' key\r\n     * @zh 按键 ]\r\n     * @readonly\r\n     */\r\n    closebracket: 221,\r\n\r\n    /**\r\n     * @en The quote key\r\n     * @zh 单引号键\r\n     * @readonly\r\n     */\r\n    quote: 222,\r\n\r\n    // gamepad controll\r\n\r\n    /**\r\n     * @en The dpad left key\r\n     * @zh 导航键 向左\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    dpadLeft: 1000,\r\n\r\n    /**\r\n     * @en The dpad right key\r\n     * @zh 导航键 向右\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    dpadRight: 1001,\r\n\r\n    /**\r\n     * @en The dpad up key\r\n     * @zh 导航键 向上\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    dpadUp: 1003,\r\n\r\n    /**\r\n     * @en The dpad down key\r\n     * @zh 导航键 向下\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    dpadDown: 1004,\r\n\r\n    /**\r\n     * @en The dpad center key\r\n     * @zh 导航键 确定键\r\n     * @readonly\r\n     * @deprecated since v3.3\r\n     */\r\n    dpadCenter: 1005,\r\n};\r\n/**\r\n * @en\r\n * Predefined constants, see [[Macro]] for detailed contents.\r\n * @zh\r\n * 预定义常量，具体内容参考 [[Macro]] 文档。\r\n */\r\n/**\r\n * @en Interface declaration for predefined constants, for usage you should be importing [[macro]] directly.\r\n * @zh 预定义常量的接口声明，实际使用应该直接导入 [[macro]]。\r\n */\r\ninterface Macro {\r\n    /**\r\n     * @en\r\n     * The image format supported by the engine, the actual supported formats may differ in different build platforms and device types.\r\n     * Currently contains ['.astc', '.pkm', '.pvr', '.webp', '.jpg', '.jpeg', '.bmp', '.png'].\r\n     * @zh\r\n     * 引擎默认支持的图片格式，实际运行时支持的格式可能在不同的构建平台和设备类型上有所差别。\r\n     * 目前包含的格式有 ['.astc', '.pkm', '.pvr', '.webp', '.jpg', '.jpeg', '.bmp', '.png']。\r\n     */\r\n    SUPPORT_TEXTURE_FORMATS: string[];\r\n\r\n    /**\r\n     * @en Key map for keyboard event\r\n     * @zh 键盘事件的按键值。\r\n     * @example {@link cocos/core/platform/CCCommon/KEY.js}\r\n     * @deprecated since v3.3 please use [[KeyCode]] instead\r\n     */\r\n    KEY: typeof KEY;\r\n\r\n    /**\r\n     * @en One angle in radian, equals to PI / 180\r\n     * @zh 弧度制中的单位角度，等同于 PI / 180\r\n     */\r\n    RAD: number;\r\n\r\n    /**\r\n     * @en One radian in angle, equals to 180 / PI\r\n     * @zh 角度制中的单位弧度，等同于 180 / PI\r\n     */\r\n    DEG: number;\r\n\r\n    /**\r\n     * @en A maximum value of number representing infinity repeat times\r\n     * @zh 重复执行的最大值，实际取值为数字的最大值\r\n     */\r\n    REPEAT_FOREVER: number;\r\n\r\n    /**\r\n     * @en A float value for representing a minimum error in comparison\r\n     * @zh 用于比较时可忽略的浮点误差值\r\n     */\r\n    FLT_EPSILON: number;\r\n\r\n    // Possible device orientations\r\n    /**\r\n     * @en Oriented vertically\r\n     * @zh 竖屏朝向\r\n     */\r\n    ORIENTATION_PORTRAIT: number;\r\n\r\n    /**\r\n     * @en Inverted portrait orientation, with the device bottom facing upward.\r\n     * @zh 倒置竖屏，设备底部朝上\r\n     */\r\n    ORIENTATION_PORTRAIT_UPSIDE_DOWN: number;\r\n\r\n    /**\r\n     * @en Oriented horizontally. Users cannot directly listen to this value; they need to listen for ORIENTATION_LANDSCAPE_LEFT or ORIENTATION_LANDSCAPE_RIGHT.\r\n     * @zh 横屏朝向, 外部不能直接监听该值，需要监听 ORIENTATION_LANDSCAPE_LEFT 或 ORIENTATION_LANDSCAPE_RIGHT\r\n     */\r\n    ORIENTATION_LANDSCAPE: number;\r\n\r\n    /**\r\n     * @en Oriented horizontally, top side facing to the left. Supported only on mobile devices.\r\n     * @zh 水平方向，顶部朝向左侧;仅移动端支持\r\n     */\r\n    ORIENTATION_LANDSCAPE_LEFT: number;\r\n\r\n    /**\r\n     * @en Oriented horizontally, top side facing to the right. Supported only on mobile devices.\r\n     * @zh 水平方向，顶部朝向右侧;仅移动端支持\r\n     */\r\n    ORIENTATION_LANDSCAPE_RIGHT: number;\r\n\r\n    /**\r\n     * @en Oriented automatically\r\n     * @zh 自动适配朝向\r\n     */\r\n    ORIENTATION_AUTO: number;\r\n\r\n    /**\r\n     * @en\r\n     * Whether or not enabled tiled map auto culling. If you set the TiledMap skew or rotation,\r\n     * then need to manually disable this, otherwise, the rendering will be wrong.\r\n     * Currently not used in 3D engine\r\n     * @zh\r\n     * 是否开启瓦片地图的自动裁减功能。瓦片地图如果设置了 skew, rotation 的话，需要手动关闭，否则渲染会出错。\r\n     * 在 3D 引擎中暂时无效。\r\n     * @default true\r\n     * @deprecated since v3.0\r\n     */\r\n    ENABLE_TILEDMAP_CULLING: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * The timeout to determine whether a touch is no longer active and should be removed.\r\n     * The reason to add this timeout is due to an issue in X5 browser core,\r\n     * when X5 is presented in wechat on Android, if a touch is glissed from the bottom up, and leave the page area,\r\n     * no touch cancel event is triggered, and the touch will be considered active forever.\r\n     * After multiple times of this action, our maximum touches number will be reached and all new touches will be ignored.\r\n     * So this new mechanism can remove the touch that should be inactive if it's not updated during the last 5000 milliseconds.\r\n     * Though it might remove a real touch if it's just not moving for the last 5 seconds,\r\n     * which is not easy with the sensibility of mobile touch screen.\r\n     * You can modify this value to have a better behavior if you find it's not enough.\r\n     * @zh\r\n     * 用于甄别一个触点对象是否已经失效并且可以被移除的延时时长\r\n     * 添加这个时长的原因是 X5 内核在微信浏览器中出现的一个 bug。\r\n     * 在这个环境下，如果用户将一个触点从底向上移出页面区域，将不会触发任何 touch cancel 或 touch end 事件，而这个触点会被永远当作停留在页面上的有效触点。\r\n     * 重复这样操作几次之后，屏幕上的触点数量将达到我们的事件系统所支持的最高触点数量，之后所有的触摸事件都将被忽略。\r\n     * 所以这个新的机制可以在触点在一定时间内没有任何更新的情况下视为失效触点并从事件系统中移除。\r\n     * 当然，这也可能移除一个真实的触点，如果用户的触点真的在一定时间段内完全没有移动（这在当前手机屏幕的灵敏度下会很难）。\r\n     * 你可以修改这个值来获得你需要的效果，默认值是 5000 毫秒。\r\n     * @default 5000\r\n     */\r\n    TOUCH_TIMEOUT: number;\r\n\r\n    /**\r\n     * @en\r\n     * Boolean that indicates if the canvas contains an alpha channel, default sets to false for better performance.\r\n     * Though if you want to make your canvas background transparent and show other dom elements at the background,\r\n     * you can set it to true before [[game.init]].\r\n     * Web only.\r\n     * @zh\r\n     * 用于设置 Canvas 背景是否支持 alpha 通道，默认为 false，这样可以有更高的性能表现。\r\n     * 如果你希望 Canvas 背景是透明的，并显示背后的其他 DOM 元素，你可以在 [[game.init]] 之前将这个值设为 true。\r\n     * 仅支持 Web\r\n     * @default false\r\n     */\r\n    ENABLE_TRANSPARENT_CANVAS: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * Boolean that indicates if the GL context is created with `antialias` option turned on, default value is false.\r\n     * Set it to true could make your game graphics slightly smoother, like texture hard edges when rotated.\r\n     * Whether to use this really depend on your game design and targeted platform,\r\n     * device with retina display usually have good detail on graphics with or without this option,\r\n     * you probably don't want antialias if your game style is pixel art based.\r\n     * Also, it could have great performance impact with some browser / device using software MSAA.\r\n     * You can set it to true before [[game.init]].\r\n     * Only affect OpenGL ES and WebGL backend\r\n     * @zh\r\n     * 用于设置在创建 GL Context 时是否开启抗锯齿选项，默认值是 false。\r\n     * 将这个选项设置为 true 会让你的游戏画面稍稍平滑一些，比如旋转硬边贴图时的锯齿。是否开启这个选项很大程度上取决于你的游戏和面向的平台。\r\n     * 在大多数拥有 retina 级别屏幕的设备上用户往往无法区分这个选项带来的变化；如果你的游戏选择像素艺术风格，你也多半不会想开启这个选项。\r\n     * 同时，在少部分使用软件级别抗锯齿算法的设备或浏览器上，这个选项会对性能产生比较大的影响。\r\n     * 你可以在 [[game.init]] 之前设置这个值，否则它不会生效。\r\n     * 仅影响 WebGL 后端\r\n     * @default true\r\n     */\r\n    ENABLE_WEBGL_ANTIALIAS: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * Used to set float output render target, more accurate multiple light sources, fog, and translucent effects, custom pipeline only, the default value is false.\r\n     * @zh\r\n     * 用于开启浮点格式的RT输出, 更精确的多光源、雾化和半透明效果, 仅用于自定义管线, 默认值为 false。\r\n     * @default false\r\n     */\r\n    ENABLE_FLOAT_OUTPUT: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * Whether to clear the original image cache after uploaded a texture to GPU.\r\n     * If cleared, [Dynamic Atlas](https://docs.cocos.com/creator/manual/en/advanced-topics/dynamic-atlas.html) will not be supported.\r\n     * Normally you don't need to enable this option on the web platform, because Image object doesn't consume too much memory.\r\n     * But on Wechat Game platform, the current version cache decoded data in Image object, which has high memory usage.\r\n     * So we enabled this option by default on Wechat, so that we can release Image cache immediately after uploaded to GPU.\r\n     * Currently not useful in 3D engine\r\n     * @zh\r\n     * 是否在将贴图上传至 GPU 之后删除原始图片缓存，删除之后图片将无法进行 [动态合图](https://docs.cocos.com/creator/manual/zh/advanced-topics/dynamic-atlas.html)。\r\n     * 在 Web 平台，你通常不需要开启这个选项，因为在 Web 平台 Image 对象所占用的内存很小。\r\n     * 但是在微信小游戏平台的当前版本，Image 对象会缓存解码后的图片数据，它所占用的内存空间很大。\r\n     * 所以我们在微信平台默认开启了这个选项，这样我们就可以在上传 GL 贴图之后立即释放 Image 对象的内存，避免过高的内存占用。\r\n     * 在 3D 引擎中暂时无效。\r\n     * @default false\r\n     */\r\n    CLEANUP_IMAGE_CACHE: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * Whether to enable multi-touch.\r\n     * @zh\r\n     * 是否开启多点触摸\r\n     * @default true\r\n     */\r\n    ENABLE_MULTI_TOUCH: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * The maximum size of the canvas pool used by Label, please adjust according to the number of label component in the same scene of the project\r\n     * @zh\r\n     * Label 使用的 canvas pool 的最大大小，请根据项目同场景的 label 数量进行调整\r\n     * @default 20\r\n     */\r\n    MAX_LABEL_CANVAS_POOL_SIZE: number;\r\n\r\n    /**\r\n     * @en\r\n     * Boolean that indicates if enable highp precision data in structure with fragment shader.\r\n     * Enable this option will make the variables defined by the HIGHP_VALUE_STRUCT_DEFINE macro in the shader more accurate, such as position.\r\n     * Enable this option can avoid some distorted lighting effects. That depends on whether your game has abnormal lighting effects on this platform.\r\n     * There will be a slight performance loss if enable this option, but the impact is not significant.\r\n     * Only affect WebGL backend\r\n     * @zh\r\n     * 用于设置是否在片元着色器中使用结构体的时候，允许其中的数据使用highp精度\r\n     * 将这个选项设置为 true 会让shader中使用HIGHP_VALUE_STRUCT_DEFINE宏定义的变量精度更高，比如位置信息等，避免出现一些失真的光照效果。是否开启这个选项很大程度上取决于你的游戏在此平台上是否出现了异常的表现。\r\n     * 开启后会有轻微的性能损失，但影响不大。\r\n     * 仅影响 WebGL 后端\r\n     * @default false\r\n     */\r\n    ENABLE_WEBGL_HIGHP_STRUCT_VALUES: boolean;\r\n\r\n    /**\r\n     * @zh Batcher2D 中内存增量的大小（KB）\r\n     * 这个值决定了当场景中存在的 2d 渲染组件的顶点数量超过当前 batcher2D 中可容纳的顶点数量时，内存扩充的增加量\r\n     * 这个值越大，共用同一个 meshBuffer 的 2d 渲染组件数量会更多，但每次扩充所占用的内存也会更大\r\n     * 默认值在标准格式（[[VertexFormat.vfmtPosUvColor]]）下可容纳 4096 个顶点（4096*9*4/1024），你可以增加容量来提升每个批次可容纳的元素数量\r\n     * @en The MeshBuffer chunk size in Batcher2D (KB)\r\n     * This value determines the increase in memory expansion,\r\n     * when the number of vertices of 2d rendering components present in the scene exceeds the number of vertices,\r\n     * that can be accommodated in the current batcher2D.\r\n     * The larger this value is, the more 2d rendering components will share the same meshBuffer, but the more memory will be used for each expansion\r\n     * The default size can contain 4096 standard vertex ([[VertexFormat.vfmtPosUvColor]]) in one buffer,\r\n     * you can user larger buffer size to increase the elements count per 2d draw batch.\r\n     * @default 144 KB\r\n     */\r\n    BATCHER2D_MEM_INCREMENT: number;\r\n\r\n    /**\r\n     * @zh 自定义渲染管线的名字（实验性）\r\n     * 引擎会根据名字创建对应的渲染管线（仅限Web平台）。如果名字为空，则不启用自定义渲染管线。\r\n     * 目前仅支持'Forward', 'Deferred'两种。\r\n     * @en The name of custom rendering pipeline (experimental)\r\n     * Engine will use the name to create the custom pipeline (Web only). If the name is empty, custom pipeline will be disabled.\r\n     * Currently only 'Forward' and 'Deferred' are supported.\r\n     */\r\n    CUSTOM_PIPELINE_NAME: string;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    init (): void;\r\n}\r\n\r\n/**\r\n * @en\r\n * Predefined constants, see [[Macro]] for detailed contents.\r\n * @zh\r\n * 预定义常量，具体内容参考 [[Macro]] 文档。\r\n */\r\nconst macro: Macro = {\r\n    SUPPORT_TEXTURE_FORMATS,\r\n    KEY,\r\n    RAD: Math.PI / 180,\r\n    DEG: 180 / Math.PI,\r\n    REPEAT_FOREVER: (Number.MAX_VALUE - 1),\r\n    FLT_EPSILON: 0.0000001192092896,\r\n    ORIENTATION_PORTRAIT: Orientation.PORTRAIT,\r\n    ORIENTATION_PORTRAIT_UPSIDE_DOWN: Orientation.PORTRAIT_UPSIDE_DOWN,\r\n    ORIENTATION_LANDSCAPE: Orientation.LANDSCAPE,\r\n    ORIENTATION_LANDSCAPE_LEFT: Orientation.LANDSCAPE_LEFT,\r\n    ORIENTATION_LANDSCAPE_RIGHT: Orientation.LANDSCAPE_RIGHT,\r\n    ORIENTATION_AUTO: Orientation.AUTO,\r\n    ENABLE_TILEDMAP_CULLING: true,\r\n    TOUCH_TIMEOUT: 5000,\r\n    ENABLE_TRANSPARENT_CANVAS: false,\r\n    ENABLE_WEBGL_ANTIALIAS: true,\r\n    ENABLE_FLOAT_OUTPUT: false,\r\n    CLEANUP_IMAGE_CACHE: false,\r\n    ENABLE_MULTI_TOUCH: true,\r\n    MAX_LABEL_CANVAS_POOL_SIZE: 20,\r\n    ENABLE_WEBGL_HIGHP_STRUCT_VALUES: false,\r\n    BATCHER2D_MEM_INCREMENT: 144,\r\n    CUSTOM_PIPELINE_NAME: 'Builtin',\r\n    init () {\r\n        if (NATIVE || MINIGAME || RUNTIME_BASED) {\r\n            this.CLEANUP_IMAGE_CACHE = true;\r\n        }\r\n        const defaultValues = settings.querySettings(SettingsCategory.ENGINE, 'macros');\r\n        if (defaultValues) {\r\n            for (const key in defaultValues) {\r\n                macro[key] = defaultValues[key];\r\n            }\r\n        }\r\n        if (PREVIEW || EDITOR) {\r\n            this.ENABLE_WEBGL_ANTIALIAS = true;\r\n        }\r\n        if (EDITOR) {\r\n            this.ENABLE_TRANSPARENT_CANVAS = false;\r\n        }\r\n    },\r\n};\r\n\r\nlegacyCC.macro = macro;\r\nexport { macro };\r\nexport type { Macro };\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, USE_XR } from 'internal:constants';\r\nimport { warnID } from '../cocos/core/platform/debug';\r\n\r\n/**\r\n * This method clones methods in minigame environment, sub as `wx`, `swan` etc. to a module called minigame.\r\n * @param targetObject Usually it's specified as the minigame module.\r\n * @param originObj Original minigame environment such as `wx`, `swan` etc.\r\n */\r\nexport function cloneObject<T extends object = any> (targetObject: T, originObj: T): void {\r\n    Object.keys(originObj).forEach((key) => {\r\n        if (typeof originObj[key] === 'function') {\r\n            targetObject[key] = originObj[key].bind(originObj);\r\n            return;\r\n        }\r\n        targetObject[key] = originObj[key];\r\n    });\r\n}\r\n\r\ntype MiningameAudioCallbackName = 'onPlay' | 'onPause' | 'onStop' | 'onSeek';\r\ntype InnerAudioContextPolyfillConfig = {\r\n    [CallbackName in MiningameAudioCallbackName]: boolean;\r\n};\r\n/**\r\n * This method is to create a polyfill on minigame platform when the innerAudioContext callback doesn't work.\r\n * @param minigameEnv Specify the minigame enviroment such as `wx`, `swan` etc.\r\n * @param polyfillConfig Specify the field, if it's true, the polyfill callback will be applied.\r\n * @param isAsynchronous Specify whether the callback is called asynchronous.\r\n * @returns A polyfilled createInnerAudioContext method.\r\n */\r\nexport function createInnerAudioContextPolyfill (minigameEnv: any, polyfillConfig: InnerAudioContextPolyfillConfig, isAsynchronous = false) {\r\n    return (): InnerAudioContext => {\r\n        const audioContext: InnerAudioContext = minigameEnv.createInnerAudioContext();\r\n\r\n        // add polyfill if onPlay method doesn't work this platform\r\n        if (polyfillConfig.onPlay) {\r\n            const originalPlay = audioContext.play;\r\n            let _onPlayCB: (() => void) | null = null;\r\n            Object.defineProperty(audioContext, 'onPlay', {\r\n                configurable: true,\r\n                value (cb: () => void) {\r\n                    _onPlayCB = cb;\r\n                },\r\n            });\r\n            Object.defineProperty(audioContext, 'play', {\r\n                configurable: true,\r\n                value () {\r\n                    originalPlay.call(audioContext);\r\n                    if (_onPlayCB) {\r\n                        if (isAsynchronous) {\r\n                            setTimeout(_onPlayCB, 0);\r\n                        } else {\r\n                            _onPlayCB();\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n        }\r\n\r\n        // add polyfill if onPause method doesn't work this platform\r\n        if (polyfillConfig.onPause) {\r\n            const originalPause = audioContext.pause;\r\n            let _onPauseCB: (() => void) | null = null;\r\n            Object.defineProperty(audioContext, 'onPause', {\r\n                configurable: true,\r\n                value (cb: () => void) {\r\n                    _onPauseCB = cb;\r\n                },\r\n            });\r\n            Object.defineProperty(audioContext, 'pause', {\r\n                configurable: true,\r\n                value () {\r\n                    originalPause.call(audioContext);\r\n                    if (_onPauseCB) {\r\n                        if (isAsynchronous) {\r\n                            setTimeout(_onPauseCB, 0);\r\n                        } else {\r\n                            _onPauseCB();\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n        }\r\n\r\n        // add polyfill if onStop method doesn't work on this platform\r\n        if (polyfillConfig.onStop) {\r\n            const originalStop = audioContext.stop;\r\n            let _onStopCB: (() => void) | null = null;\r\n            Object.defineProperty(audioContext, 'onStop', {\r\n                configurable: true,\r\n                value (cb: () => void) {\r\n                    _onStopCB = cb;\r\n                },\r\n            });\r\n            Object.defineProperty(audioContext, 'stop', {\r\n                configurable: true,\r\n                value () {\r\n                    originalStop.call(audioContext);\r\n                    if (_onStopCB) {\r\n                        if (isAsynchronous) {\r\n                            setTimeout(_onStopCB, 0);\r\n                        } else {\r\n                            _onStopCB();\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n        }\r\n\r\n        // add polyfill if onSeeked method doesn't work on this platform\r\n        if (polyfillConfig.onSeek) {\r\n            const originalSeek = audioContext.seek;\r\n            let _onSeekCB: (() => void) | null = null;\r\n            Object.defineProperty(audioContext, 'onSeeked', {\r\n                configurable: true,\r\n                value (cb: () => void) {\r\n                    _onSeekCB = cb;\r\n                },\r\n            });\r\n            Object.defineProperty(audioContext, 'seek', {\r\n                configurable: true,\r\n                value (time: number) {\r\n                    originalSeek.call(audioContext, time);\r\n                    if (_onSeekCB) {\r\n                        if (isAsynchronous) {\r\n                            setTimeout(_onSeekCB, 0);\r\n                        } else {\r\n                            _onSeekCB();\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n        }\r\n\r\n        return audioContext;\r\n    };\r\n}\r\n\r\n/**\r\n * Compare two version, version should in pattern like 3.0.0.\r\n * If versionA > versionB, return number larger than 0.\r\n * If versionA = versionB, return number euqal to 0.\r\n * If versionA < versionB, return number smaller than 0.\r\n * @param versionA\r\n * @param versionB\r\n */\r\nexport function versionCompare (versionA: string, versionB: string): number {\r\n    const versionRegExp = /\\d+\\.\\d+\\.\\d+/;\r\n    if (!(versionRegExp.test(versionA) && versionRegExp.test(versionB))) {\r\n        warnID(16356);\r\n        return 0;\r\n    }\r\n    const versionNumbersA = versionA.split('.').map((num: string) => Number.parseInt(num));\r\n    const versionNumbersB = versionB.split('.').map((num: string) => Number.parseInt(num));\r\n    for (let i = 0; i < 3; ++i) {\r\n        const numberA = versionNumbersA[i];\r\n        const numberB = versionNumbersB[i];\r\n        if (numberA !== numberB) {\r\n            return numberA - numberB;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n/**\r\n * A custom implementation of setTimeout that uses requestAnimationFrame.\r\n * @param callback The function to be executed after a delay.\r\n * @param delay The delay time in milliseconds.\r\n * @param args The arguments to be passed to the callback function.\r\n * @returns A unique identifier for the timer.\r\n */\r\nexport function setTimeoutRAF<T extends any[]> (callback: (...args: T) => void, delay: number, ...args: T): number {\r\n    const start = performance.now();\r\n\r\n    const raf = requestAnimationFrame\r\n    || window.requestAnimationFrame\r\n    || window.webkitRequestAnimationFrame\r\n    || window.mozRequestAnimationFrame\r\n    || window.oRequestAnimationFrame\r\n    || window.msRequestAnimationFrame;\r\n\r\n    if (EDITOR || raf === undefined || (USE_XR && globalThis.__globalXR?.isWebXR)) {\r\n        return setTimeout(callback, delay, ...args);\r\n    }\r\n\r\n    const handleRAF = (): void => {\r\n        if (performance.now() - start < delay) {\r\n            raf(handleRAF);\r\n        } else {\r\n            callback(...args);\r\n        }\r\n    };\r\n\r\n    return raf(handleRAF);\r\n}\r\n\r\n/**\r\n * Cancels a timer that was created using the rafTimeout function.\r\n * @param id A numeric ID that represents the timer to be canceled.\r\n * @returns Nothing.\r\n */\r\nexport function clearTimeoutRAF (id: number): void {\r\n    const caf = cancelAnimationFrame\r\n        || window.cancelAnimationFrame\r\n        || window.cancelRequestAnimationFrame\r\n        || window.msCancelRequestAnimationFrame\r\n        || window.mozCancelRequestAnimationFrame\r\n        || window.oCancelRequestAnimationFrame\r\n        || window.webkitCancelRequestAnimationFrame\r\n        || window.msCancelAnimationFrame\r\n        || window.mozCancelAnimationFrame\r\n        || window.webkitCancelAnimationFrame\r\n        || window.ocancelAnimationFrame;\r\n    if (EDITOR || caf === undefined || (USE_XR && globalThis.__globalXR?.isWebXR)) {\r\n        clearTimeout(id);\r\n    } else {\r\n        caf(id);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable no-new-func */\r\n\r\nimport { DEV } from 'internal:constants';\r\nimport { getClassName, getset, isEmptyObject } from './js';\r\nimport { legacyCC } from '../global-exports';\r\nimport { warnID } from '../platform/debug';\r\nimport { macro } from '../platform/macro';\r\nimport { setTimeoutRAF } from '../../../pal/utils';\r\nimport type { Component } from '../../scene-graph';\r\n\r\nexport const BUILTIN_CLASSID_RE = /^(?:cc|dragonBones|sp|ccsg)\\..+/;\r\n\r\nexport interface Modifiable {\r\n    getModifiableProperties(): string[];\r\n}\r\n\r\nconst BASE64_KEYS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\nconst values: number[] = new Array(123); // max char code in base64Keys\r\nfor (let i = 0; i < 123; ++i) { values[i] = 64; } // fill with placeholder('=') index\r\nfor (let i = 0; i < 64; ++i) { values[BASE64_KEYS.charCodeAt(i)] = i; }\r\n\r\n// decoded value indexed by base64 char code\r\nexport const BASE64_VALUES = values;\r\n\r\n/**\r\n * @en Defines properties for a class, or replaces getter, setter of existing properties.\r\n * @param ctor @en Class to modify.\r\n * @param sameNameGetSets @en Getters and setters of properties. The getter and setter\r\n * have the same name. So a property getter and setter occupy one position in `sameNameGetSets`.\r\n * @param diffNameGetSets @en Getters and setters of properties. The getter and setter\r\n * have different names. So a property getter and setter occupy two positions in `diffNameGetSets`.\r\n * @engineInternal\r\n */\r\nexport function propertyDefine (ctor: any, sameNameGetSets: string[], diffNameGetSets: Record<string, string[]>): void {\r\n    function define (np: Record<string | number, any>, propName: string, getter: string, setter: string): void {\r\n        const pd = Object.getOwnPropertyDescriptor(np, propName);\r\n        if (pd) {\r\n            if (pd.get && getter) { np[getter] = pd.get; }\r\n            if (pd.set && setter) { np[setter] = pd.set; }\r\n        } else {\r\n            const getterFunc = np[getter] as Getter;\r\n            if (DEV && !getterFunc) {\r\n                const clsName: string = (legacyCC.Class._isCCClass(ctor) && getClassName(ctor))\r\n                    || ctor.name\r\n                    || '(anonymous class)';\r\n                warnID(5700, propName, getter, clsName);\r\n            } else {\r\n                getset(np, propName, getterFunc, np[setter] as Setter);\r\n            }\r\n        }\r\n    }\r\n    let propName: string;\r\n    const np = ctor.prototype as  Record<string | number, any>;\r\n    for (let i = 0, len = sameNameGetSets.length; i < len; ++i) {\r\n        propName = sameNameGetSets[i];\r\n        const suffix: string = (propName[0].toUpperCase()) + (propName.slice(1));\r\n        define(np, propName, `get${suffix}`, `set${suffix}`);\r\n    }\r\n    for (propName in diffNameGetSets) {\r\n        const gs = diffNameGetSets[propName];\r\n        define(np, propName, gs[0], gs[1]);\r\n    }\r\n}\r\n\r\n/**\r\n * @en Inserts a new element into a map. All values corresponding to the same key are stored in an array.\r\n * @zh 往 map 插入一个元素。同一个关键字对应的所有值存储在一个数组里。\r\n * @param map @en The map to insert element. @zh 插入元素的 map。\r\n * @param key @en The key of new element. @zh 新插入元素的关键字。\r\n * @param value @en The value of new element. @zh 新插入元素的值。\r\n * @param pushFront @en Whether to put new value in front of the vector if key exists.\r\n * @zh 如果关键字已经存在，是否把新插入的值放到数组第一个位置。\r\n */\r\nexport function pushToMap (map, key, value, pushFront): void {\r\n    const exists = map[key];\r\n    if (exists) {\r\n        if (Array.isArray(exists)) {\r\n            if (pushFront) {\r\n                exists.push(exists[0]);\r\n                exists[0] = value;\r\n            } else {\r\n                exists.push(value);\r\n            }\r\n        } else {\r\n            map[key] = (pushFront ? [value, exists] : [exists, value]);\r\n        }\r\n    } else {\r\n        map[key] = value;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Checks whether a node is a descendant of a given node, that is the node itself, one of its direct\r\n * children (childNodes), one of the children's direct children, and so on.\r\n * @zh 检查节点是否是一个给定的节点的后代，即节点本身、它的一个直接子节点（childNodes）、该子节点的一个直接子节点，依此类推。\r\n * @param refNode @en The node to check. @zh 检查的节点。\r\n * @param otherNode @en The node to test with. @zh 用来测试的节点。\r\n * @returns @en True if otherNode is contained in refNode, false if not.\r\n * @zh 如果 refNode 包含 otherNode，返回 true；否则返回 false。\r\n */\r\nexport function contains (refNode, otherNode): boolean {\r\n    if (typeof refNode.contains === 'function') {\r\n        return refNode.contains(otherNode) as boolean;\r\n    } else if (typeof refNode.compareDocumentPosition === 'function') {\r\n        return !!(refNode.compareDocumentPosition(otherNode) & 16);\r\n    } else {\r\n        let node = otherNode.parentNode;\r\n        if (node) {\r\n            do {\r\n                if (node === refNode) {\r\n                    return true;\r\n                } else {\r\n                    node = node.parentNode;\r\n                }\r\n            } while (node !== null);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Checks whether a node is a DOM node. @zh 检查一个节点是否是一个 DOM 节点。\r\n * @param node @en The node the check. @zh 被检查节点。\r\n * @returns @en True if node is a DOM node, false else.\r\n * @zh 如果 DOM 节点，返回 true；否则返回 false。\r\n */\r\nexport function isDomNode (node): boolean {\r\n    if (typeof window === 'object' && typeof Node === 'function') {\r\n        // If \"TypeError: Right-hand side of 'instanceof' is not callback\" is thrown,\r\n        // it should because window.Node was overwritten.\r\n        return node instanceof Node;\r\n    } else {\r\n        return !!node\r\n            && typeof node === 'object'\r\n            && typeof node.nodeType === 'number'\r\n            && typeof node.nodeName === 'string';\r\n    }\r\n}\r\n\r\n/**\r\n * @en Invoke a function in next frame. @zh 在下一帧执行传入的函数。\r\n * @param callback @en The function to be invoked next frame. @zh 下一帧要执行的函数。\r\n * @param p1 @en The first parameter passed to `callback`. @zh 传给回调函数的第一个参数。\r\n * @param p2 @en The seconde parameter passed to `callback`. @zh 传给回调函数的第二个参数。\r\n */\r\nexport function callInNextTick<T extends any[]> (callback: (...args: T) => void, ...args: T): void {\r\n    if (callback) {\r\n        setTimeoutRAF((): void => {\r\n            callback(...args);\r\n        }, 0);\r\n    }\r\n}\r\n\r\n// use anonymous function here to ensure it will not being hoisted without EDITOR\r\n/**\r\n * @en Create a new function that will invoke `functionName` with try catch.\r\n * @zh 创建一个新函数，该函数会使用 try catch 机制调用 `functionName`.\r\n * @param funcName @en The function name to be invoked with try catch.\r\n * @zh 被 try catch 包裹的函数名。\r\n * @returns @en A new function that will invoke `functionName` with try catch.\r\n * @zh 使用 try catch 机制调用 `functionName` 的新函数.\r\n */\r\nexport function tryCatchFunctor_EDITOR (funcName: string): (comp: Component) => void {\r\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\r\n    return Function(\r\n        'target',\r\n        `${'try {\\n'\r\n        + '  target.'}${funcName}();\\n`\r\n        + `}\\n`\r\n        + `catch (e) {\\n`\r\n        + `  cc._throw(e);\\n`\r\n        + `}`,\r\n    ) as (comp: Component) => void;\r\n}\r\n\r\n/**\r\n * @en Checks whether an object is an empty object.\r\n * @zh 检查一个对象是否为空对象。\r\n * @param obj @en The object to check. @zh 要检查的对象。\r\n * @returns @en True if it is an empty object. False if it is not an empty object, not Object type, null or undefined.\r\n * @ 如果是空对象，返回 true。如果不是空对象，不是Object类型，空或未定义，则为假。\r\n */\r\nexport function isPlainEmptyObj_DEV (obj): boolean {\r\n    if (!obj || obj.constructor !== Object) {\r\n        return false;\r\n    }\r\n    return isEmptyObject(obj);\r\n}\r\n\r\n/**\r\n * @en Clamps a value between a min and a max value. </br>\r\n * If the original value is greater than max_inclusive, returns max_inclusive. </br>\r\n * If the original value is less than min_inclusive, returns min_inclusive. </br>\r\n * Else returns the original value.\r\n * @zh 限定浮点数的最大最小值。<br/>\r\n * 如果数值大于 max_inclusive 则返回 max_inclusive。<br/>\r\n * 如果数值小于 min_inclusive 则返回 min_inclusive。<br/>\r\n * 否则返回自身。\r\n * @param value @en Original value. @zh 初始值。\r\n * @param min_inclusive @en Minimum value in range. @zh 最小值。\r\n * @param max_inclusive @en Maximum value in range. @zh 最大值。\r\n * @returns @en The clamped value. @zh 目标值。\r\n * @example\r\n * var v1 = clampf(20, 0, 20); // 20;\r\n * var v2 = clampf(-1, 0, 20); //  0;\r\n * var v3 = clampf(10, 0, 20); // 10;\r\n */\r\nexport function clampf (value: number, min_inclusive: number, max_inclusive: number): number {\r\n    if (min_inclusive > max_inclusive) {\r\n        const temp = min_inclusive;\r\n        min_inclusive = max_inclusive;\r\n        max_inclusive = temp;\r\n    }\r\n    return value < min_inclusive ? min_inclusive : value < max_inclusive ? value : max_inclusive;\r\n}\r\n\r\n/**\r\n * @en Converts degree to radian.\r\n * @zh 将度数转换为弧度。\r\n * @param angle @en The degree to convert. @zh 角度。\r\n * @returns @en The radian. @zh 弧度。\r\n */\r\nexport function degreesToRadians (angle: number): number {\r\n    return angle * macro.RAD;\r\n}\r\n\r\n/**\r\n * @en Converts radian to degree.\r\n * @zh 将弧度转换为角度。\r\n * @param angle @en The radian to convert. @zh 弧度。\r\n * @returns @en The degree. @zh 角度。\r\n */\r\nexport function radiansToDegrees (angle): number {\r\n    return angle * macro.DEG;\r\n}\r\n\r\n// if (TEST) {\r\n//     // editor mocks using in unit tests\r\n//     if (typeof Editor === 'undefined') {\r\n//         window.Editor = {\r\n//             UuidUtils: {\r\n//                 NonUuidMark: '.',\r\n//                 uuid () {\r\n//                     return '' + ((new Date()).getTime() + Math.random());\r\n//                 },\r\n//             },\r\n//         };\r\n//     }\r\n// }\r\n\r\nlegacyCC.misc = {\r\n    BUILTIN_CLASSID_RE,\r\n    BASE64_VALUES,\r\n    propertyDefine,\r\n    pushToMap,\r\n    contains,\r\n    isDomNode,\r\n    callInNextTick,\r\n    isPlainEmptyObj_DEV,\r\n    clampf,\r\n    degreesToRadians,\r\n    radiansToDegrees,\r\n};\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { log, warnID } from '../../platform/debug';\r\nimport { formatStr, get, getClassName, isChildClassOf, value } from '../../utils/js';\r\nimport { isPlainEmptyObj_DEV } from '../../utils/misc';\r\nimport { legacyCC } from '../../global-exports';\r\n\r\nexport const DELIMETER = '$_$';\r\n\r\nexport function createAttrsSingle (owner: Object, superAttrs?: any): any {\r\n    const attrs = superAttrs ? Object.create(superAttrs) : {};\r\n    value(owner, '__attrs__', attrs);\r\n    return attrs;\r\n}\r\n\r\n/**\r\n * @param subclass Should not have '__attrs__'.\r\n */\r\nexport function createAttrs (subclass: any): any {\r\n    if (typeof subclass !== 'function') {\r\n        // attributes only in instance\r\n        const instance = subclass;\r\n        return createAttrsSingle(instance, getClassAttrs(instance.constructor));\r\n    }\r\n    let superClass: any;\r\n    const chains: any[] = legacyCC.Class.getInheritanceChain(subclass);\r\n    for (let i = chains.length - 1; i >= 0; i--) {\r\n        const cls = chains[i];\r\n        const attrs = cls.hasOwnProperty('__attrs__') && cls.__attrs__;\r\n        if (!attrs) {\r\n            superClass = chains[i + 1];\r\n            createAttrsSingle(cls, superClass && superClass.__attrs__);\r\n        }\r\n    }\r\n    superClass = chains[0];\r\n    createAttrsSingle(subclass, superClass && superClass.__attrs__);\r\n    return subclass.__attrs__;\r\n}\r\n\r\n// /**\r\n//  * @class Class\r\n//  */\r\n/**\r\n * Tag the class with any meta attributes, then return all current attributes assigned to it.\r\n * This function holds only the attributes, not their implementations.\r\n * @param constructor The class or instance. If instance, the attribute will be dynamic and only available for the specified instance.\r\n * @param propertyName The name of the property or function, used to retrieve the attributes.\r\n * @private\r\n */\r\nexport function attr (constructor: any, propertyName: string): { [attributeName: string]: any; } {\r\n    const attrs = getClassAttrs(constructor);\r\n    const prefix = propertyName + DELIMETER;\r\n    const ret = {};\r\n    for (const key in attrs) {\r\n        if (key.startsWith(prefix)) {\r\n            ret[key.slice(prefix.length)] = attrs[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\n/**\r\n * Returns a read-only meta-object.\r\n */\r\nexport function getClassAttrs (constructor: any): any {\r\n    return (constructor.hasOwnProperty('__attrs__') && constructor.__attrs__) || createAttrs(constructor);\r\n}\r\n\r\nexport function setClassAttr (ctor, propName, key, value): void {\r\n    getClassAttrs(ctor)[propName + DELIMETER + key] = value;\r\n}\r\n\r\nexport class PrimitiveType<T> {\r\n    public declare name: string;\r\n\r\n    public declare default: T;\r\n\r\n    constructor (name: string, defaultValue: T) {\r\n        this.name = name;\r\n        this.default = defaultValue;\r\n    }\r\n\r\n    public toString (): string {\r\n        return this.name;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Indicates that the editor should treat this property or array element as an Integer value.\r\n * @zh\r\n * 指定编辑器以整数形式对待该属性或数组元素。\r\n * @example\r\n * ```ts\r\n * import { CCInteger, _decorator } from \"cc\";\r\n *\r\n * // in the class definition:\r\n *\r\n * @_decorator.property({type: CCInteger})\r\n * count = 0;\r\n *\r\n * @_decorator.property({type: [CCInteger]})\r\n * array = [];\r\n * ```\r\n */\r\nexport const CCInteger = new PrimitiveType('Integer', 0);\r\nlegacyCC.Integer = CCInteger;\r\nlegacyCC.CCInteger = CCInteger;\r\n\r\n/**\r\n * @en\r\n * Indicates that the editor should treat this property or array element as a Float value.\r\n * @zh\r\n * 指定编辑器以浮点数形式对待该属性或数组元素。\r\n * @example\r\n * ```ts\r\n * import { CCFloat, _decorator } from \"cc\";\r\n *\r\n * // in the class definition:\r\n *\r\n * @_decorator.property({type: CCFloat})\r\n * x = 0;\r\n *\r\n * @_decorator.property({type: [CCFloat]})\r\n * array = [];\r\n * ```\r\n */\r\nexport const CCFloat = new PrimitiveType('Float', 0.0);\r\nlegacyCC.Float = CCFloat;\r\nlegacyCC.CCFloat = CCFloat;\r\n\r\nif (EDITOR) {\r\n    get(legacyCC, 'Number', () => {\r\n        warnID(3603);\r\n        return CCFloat;\r\n    });\r\n}\r\n\r\n/**\r\n * @en\r\n * Indicates that the editor should treat this property or array element as a Boolean value.\r\n * @zh\r\n * 指定编辑器以布尔值形式对待该属性或数组元素。\r\n *\r\n * @example\r\n * ```ts\r\n * import { CCBoolean, _decorator } from \"cc\";\r\n * // in the class definition\r\n * @_decorator.property({type: CCBoolean})\r\n * isTrue = false;\r\n *\r\n * @_decorator.property({type: [CCBoolean]})\r\n * array = [];\r\n * ```\r\n */\r\nexport const CCBoolean = new PrimitiveType('Boolean', false);\r\nlegacyCC.Boolean = CCBoolean;\r\nlegacyCC.CCBoolean = CCBoolean;\r\n\r\n/**\r\n * @en\r\n * Indicates that the editor should treat this property or array element as a String value.\r\n * @zh\r\n * 指定编辑器以字符串形式对待该属性或数组元素。\r\n * @example\r\n * ```ts\r\n * import { CCString, _decorator } from \"cc\";\r\n *\r\n * // in the class definition\r\n *\r\n * @_decorator.property({type: CCString})\r\n * name = '';\r\n *\r\n * @_decorator.property({type: [CCString]})\r\n * array = [];\r\n * ```\r\n */\r\nexport const CCString = new PrimitiveType('String', '');\r\nlegacyCC.String = CCString;\r\nlegacyCC.CCString = CCString;\r\n\r\n// Ensures the type matches its default value\r\nexport function getTypeChecker_ET (type: string, attributeName: string) {\r\n    return function (constructor: Function, mainPropertyName: string): void {\r\n        const propInfo = `\"${getClassName(constructor)}.${mainPropertyName}\"`;\r\n        const mainPropAttrs = attr(constructor, mainPropertyName);\r\n        let mainPropAttrsType = mainPropAttrs.type;\r\n        if (mainPropAttrsType === CCInteger || mainPropAttrsType === CCFloat) {\r\n            mainPropAttrsType = 'Number';\r\n        } else if (mainPropAttrsType === CCString || mainPropAttrsType === CCBoolean) {\r\n            mainPropAttrsType = `${mainPropAttrsType}`;\r\n        }\r\n        if (mainPropAttrsType !== type) {\r\n            warnID(3604, propInfo);\r\n            return;\r\n        }\r\n\r\n        if (!mainPropAttrs.hasOwnProperty('default')) {\r\n            return;\r\n        }\r\n        const defaultVal = mainPropAttrs.default;\r\n        if (typeof defaultVal === 'undefined') {\r\n            return;\r\n        }\r\n        const isContainer = Array.isArray(defaultVal) || isPlainEmptyObj_DEV(defaultVal);\r\n        if (isContainer) {\r\n            return;\r\n        }\r\n        const defaultType = typeof defaultVal;\r\n        const type_lowerCase = type.toLowerCase();\r\n        if (defaultType === type_lowerCase) {\r\n            if (type_lowerCase === 'object') {\r\n                if (defaultVal && !(defaultVal instanceof mainPropAttrs.ctor)) {\r\n                    warnID(3605, propInfo, getClassName(mainPropAttrs.ctor));\r\n                } else {\r\n                    return;\r\n                }\r\n            } else if (type !== 'Number') {\r\n                warnID(3606, attributeName, propInfo, type);\r\n            }\r\n        } else if (defaultType !== 'function') {\r\n            if (type === CCString.default && defaultVal == null) {\r\n                warnID(3607, propInfo);\r\n            } else {\r\n                warnID(3611, attributeName, propInfo, defaultType);\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n        delete mainPropAttrs.type;\r\n    };\r\n}\r\n\r\n// Ensures the type matches its default value\r\nexport function getObjTypeChecker_ET (typeCtor) {\r\n    return function (classCtor, mainPropName): void {\r\n        getTypeChecker_ET('Object', 'type')(classCtor, mainPropName);\r\n        // check ValueType\r\n        const defaultDef = getClassAttrs(classCtor)[`${mainPropName + DELIMETER}default`];\r\n        const defaultVal = legacyCC.Class.getDefault(defaultDef);\r\n        if (!Array.isArray(defaultVal) && isChildClassOf(typeCtor, legacyCC.ValueType)) {\r\n            const typename = getClassName(typeCtor);\r\n            const info = formatStr(\r\n                'No need to specify the \"type\" of \"%s.%s\" because %s is a child class of ValueType.',\r\n                getClassName(classCtor),\r\n                mainPropName,\r\n                typename,\r\n            );\r\n            if (defaultDef) {\r\n                log(info);\r\n            } else {\r\n                warnID(3612, info, typename, getClassName(classCtor), mainPropName, typename);\r\n            }\r\n        }\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV, EDITOR, TEST } from 'internal:constants';\r\nimport { error, errorID, warn, warnID } from '../../platform/debug';\r\nimport * as js from '../../utils/js';\r\nimport { PrimitiveType } from './attribute';\r\nimport { legacyCC } from '../../global-exports';\r\n\r\n// 增加预处理属性这个步骤的目的是降低 CCClass 的实现难度，将比较稳定的通用逻辑和一些需求比较灵活的属性需求分隔开。\r\n\r\nconst SerializableAttrs = {\r\n    default: {},\r\n    serializable: {},\r\n    editorOnly: {},\r\n    formerlySerializedAs: {},\r\n};\r\n\r\n/**\r\n * 预处理 notify 等扩展属性\r\n */\r\nfunction parseNotify (val, propName, notify, properties): void {\r\n    if (val.get || val.set) {\r\n        if (DEV) {\r\n            warnID(5500);\r\n        }\r\n        return;\r\n    }\r\n    if (val.hasOwnProperty('default')) {\r\n        // 添加新的内部属性，将原来的属性修改为 getter/setter 形式\r\n        // （以 _ 开头将自动设置property 为 visible: false）\r\n        const newKey = `_N$${propName}`;\r\n\r\n        val.get = function (): any {\r\n            return this[newKey];\r\n        };\r\n        val.set = function (value): void {\r\n            const oldValue = this[newKey];\r\n            this[newKey] = value;\r\n            notify.call(this, oldValue);\r\n        };\r\n\r\n        const newValue = {};\r\n        properties[newKey] = newValue;\r\n        // 将不能用于get方法中的属性移动到newValue中\r\n\r\n        for (const attr in SerializableAttrs) {\r\n            const v = SerializableAttrs[attr];\r\n            if (val.hasOwnProperty(attr)) {\r\n                newValue[attr] = val[attr];\r\n                if (!v.canUsedInGet) {\r\n                    delete val[attr];\r\n                }\r\n            }\r\n        }\r\n    } else if (DEV) {\r\n        warnID(5501);\r\n    }\r\n}\r\n\r\nfunction parseType (val, type, className, propName): void {\r\n    const STATIC_CHECK = (EDITOR && DEV) || TEST;\r\n\r\n    if (Array.isArray(type)) {\r\n        if (STATIC_CHECK && 'default' in val) {\r\n            if (!legacyCC.Class.isArray(val.default)) {\r\n                warnID(5507, className, propName);\r\n            }\r\n        }\r\n        if (type.length > 0) {\r\n            val.type = type = type[0];\r\n        } else {\r\n            return errorID(5508, className, propName);\r\n        }\r\n    }\r\n    if (typeof type === 'function') {\r\n        if (type === String) {\r\n            val.type = legacyCC.String;\r\n            if (STATIC_CHECK) {\r\n                warnID(3608, `\"${className}.${propName}\"`);\r\n            }\r\n        } else if (type === Boolean) {\r\n            val.type = legacyCC.Boolean;\r\n            if (STATIC_CHECK) {\r\n                warnID(3609, `\"${className}.${propName}\"`);\r\n            }\r\n        } else if (type === Number) {\r\n            val.type = legacyCC.Float;\r\n            if (STATIC_CHECK) {\r\n                warnID(3610, `\"${className}.${propName}\"`);\r\n            }\r\n        }\r\n    } else if (STATIC_CHECK) {\r\n        switch (type) {\r\n        case 'Number':\r\n            warnID(5510, className, propName);\r\n            break;\r\n        case 'String':\r\n            warn(`The type of \"${className}.${propName}\" must be CCString, not \"String\".`);\r\n            break;\r\n        case 'Boolean':\r\n            warn(`The type of \"${className}.${propName}\" must be CCBoolean, not \"Boolean\".`);\r\n            break;\r\n        case 'Float':\r\n            warn(`The type of \"${className}.${propName}\" must be CCFloat, not \"Float\".`);\r\n            break;\r\n        case 'Integer':\r\n            warn(`The type of \"${className}.${propName}\" must be CCInteger, not \"Integer\".`);\r\n            break;\r\n        case null:\r\n            warnID(5511, className, propName);\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (EDITOR && typeof type === 'function') {\r\n        if (legacyCC.Class._isCCClass(type) && val.serializable !== false && !js.getClassId(type, false)) {\r\n            warnID(5512, className, propName, className, propName);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getBaseClassWherePropertyDefined_DEV (propName, cls): any {\r\n    if (DEV) {\r\n        let res;\r\n        for (; cls && cls.__props__ && cls.__props__.indexOf(propName) !== -1; cls = cls.$super) {\r\n            res = cls;\r\n        }\r\n        if (!res) {\r\n            error('unknown error');\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nfunction _wrapOptions (isGetset: boolean, _default, type?: Function | Function[] | PrimitiveType<any>): {\r\n    default?: any;\r\n    _short?: boolean | undefined;\r\n    type?: any;\r\n} {\r\n    const res: {\r\n        default?: any,\r\n        _short?: boolean,\r\n        type?: any,\r\n    } = isGetset || typeof _default === 'undefined' ? { _short: true } : { _short: true, default: _default };\r\n    if (type) {\r\n        res.type = type;\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function getFullFormOfProperty (options, isGetset): {\r\n    default?: any;\r\n    _short?: boolean | undefined;\r\n    type?: any;\r\n} | null {\r\n    const isLiteral = options && options.constructor === Object;\r\n    if (!isLiteral) {\r\n        if (Array.isArray(options) && options.length > 0) {\r\n            return _wrapOptions(isGetset, [], options);\r\n        } else if (typeof options === 'function') {\r\n            const type = options;\r\n            return _wrapOptions(isGetset, js.isChildClassOf(type, legacyCC.ValueType) ? new type() : null, type);\r\n        } else if (options instanceof PrimitiveType) {\r\n            return _wrapOptions(isGetset, undefined, options);\r\n        } else {\r\n            return _wrapOptions(isGetset, options);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function preprocessAttrs (properties, className, cls): void {\r\n    for (const propName in properties) {\r\n        let val = properties[propName];\r\n        const fullForm = getFullFormOfProperty(val, false);\r\n        if (fullForm) {\r\n            val = properties[propName] = fullForm;\r\n        }\r\n        if (val) {\r\n            if (EDITOR) {\r\n                if ('default' in val) {\r\n                    if (val.get) {\r\n                        errorID(5513, className, propName);\r\n                    } else if (val.set) {\r\n                        errorID(5514, className, propName);\r\n                    } else if (legacyCC.Class._isCCClass(val.default)) {\r\n                        val.default = null;\r\n                        errorID(5515, className, propName);\r\n                    }\r\n                }\r\n            }\r\n            if (DEV && !val.override && cls.__props__.indexOf(propName) !== -1) {\r\n                // check override\r\n                const baseClass = js.getClassName(getBaseClassWherePropertyDefined_DEV(propName, cls));\r\n                warnID(5517, className, propName, baseClass, propName);\r\n            }\r\n            const notify = val.notify;\r\n            if (notify) {\r\n                if (DEV) {\r\n                    error('not yet support notify attributes.');\r\n                } else {\r\n                    parseNotify(val, propName, notify, properties);\r\n                }\r\n            }\r\n\r\n            if ('type' in val) {\r\n                parseType(val, val.type, className, propName);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst CALL_SUPER_DESTROY_REG_DEV = /\\b\\._super\\b|destroy.*\\.call\\s*\\(\\s*\\w+\\s*[,|)]/;\r\nexport function doValidateMethodWithProps_DEV (func, funcName, className, cls, base): false | undefined {\r\n    if (cls.__props__ && cls.__props__.indexOf(funcName) >= 0) {\r\n        // find class that defines this method as a property\r\n        const baseClassName = js.getClassName(getBaseClassWherePropertyDefined_DEV(funcName, cls));\r\n        errorID(3648, className, funcName, baseClassName);\r\n        return false;\r\n    }\r\n    if (funcName === 'destroy'\r\n        && js.isChildClassOf(base, legacyCC.Component)\r\n        && !CALL_SUPER_DESTROY_REG_DEV.test(func)\r\n    ) {\r\n        error(`Overwriting '${funcName}' function in '${className}' class without calling super is not allowed. Call the super function in '${funcName}' please.`);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { legacyCC } from '../../global-exports';\r\n\r\n/**\r\n *\r\n */\r\nlet requiringFrames: any = [];  // the requiring frame infos\r\n\r\nexport function push (module, uuid: string, script, importMeta?): void {\r\n    if (script === undefined) {\r\n        script = uuid;\r\n        uuid = '';\r\n    }\r\n    requiringFrames.push({\r\n        uuid,\r\n        script,\r\n        module,\r\n        exports: module.exports,    // original exports\r\n        beh: null,\r\n        importMeta,\r\n    });\r\n}\r\n\r\nexport function pop (): void {\r\n    const frameInfo = requiringFrames.pop();\r\n    // check exports\r\n    const module = frameInfo.module;\r\n    let exports = module.exports;\r\n    if (exports === frameInfo.exports) {\r\n        for (const anykey in exports) {\r\n            // exported\r\n            return;\r\n        }\r\n        // auto export component\r\n        module.exports = exports = frameInfo.cls;\r\n    }\r\n}\r\n\r\nexport function peek (): any {\r\n    return requiringFrames[requiringFrames.length - 1];\r\n}\r\n\r\nlegacyCC._RF = {\r\n    push,\r\n    pop,\r\n    peek,\r\n};\r\n\r\nif (EDITOR) {\r\n    legacyCC._RF.reset = (): void => {\r\n        requiringFrames = [];\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { IExposedAttributes } from './utils/attribute-defines';\r\n\r\n/**\r\n * Class slash stores information collected from decorators.\r\n * Once the class decorator entered, the class definition begins. It processes the stash and removes it.\r\n */\r\nexport interface ClassStash {\r\n    /**\r\n     * When extracting default values under the TypeScript environment,\r\n     * We have to construct an object of the current class and get its member values.\r\n     * This field stores the create-once object.\r\n     */\r\n    default?: unknown;\r\n\r\n    /**\r\n     * Just a kind of organization.\r\n     */\r\n    proto?: {\r\n        /**\r\n         * The property stashes.\r\n         */\r\n        properties?: Record<PropertyKey, PropertyStash>;\r\n    };\r\n\r\n    /**\r\n     * The error properties.\r\n     * We record them here to ensure only once an error report is given to each property.\r\n     */\r\n    errorProps?: Record<PropertyKey, true>;\r\n}\r\n\r\nexport interface PropertyStash extends IExposedAttributes {\r\n    /**\r\n     * The property's default value.\r\n     */\r\n    default?: unknown;\r\n\r\n    /**\r\n     * The property's getter, if it's an accessor.\r\n     */\r\n    get?: () => unknown;\r\n\r\n    /**\r\n     * The property's setter, if it's an accessor.\r\n     */\r\n    set?: (value: unknown) => void;\r\n\r\n    /**\r\n     * Reserved for deprecated usage.\r\n     */\r\n    _short?: unknown;\r\n\r\n    /**\r\n     * Some decorators may write this internal slot. See `PropertyStashInternalFlag`.\r\n     */\r\n    __internalFlags: number;\r\n}\r\n\r\nexport enum PropertyStashInternalFlag {\r\n    /**\r\n     * Indicates this property is reflected using \"standalone property decorators\" such as\r\n     * `@editable`, `@visible`, `serializable`.\r\n     * All standalone property decorators would set this flag;\r\n     * non-standalone property decorators won't set this flag.\r\n     */\r\n    STANDALONE = 1 << 0,\r\n\r\n    /**\r\n     * Indicates this property is visible, if no other explicit visibility decorators(`@visible`s) are attached.\r\n     */\r\n    IMPLICIT_VISIBLE = 1 << 1,\r\n\r\n    /**\r\n     * Indicates this property is serializable, if no other explicit visibility decorators(`@serializable`s) are attached.\r\n     */\r\n    IMPLICIT_SERIALIZABLE = 1 << 2,\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV, EDITOR, SUPPORT_JIT, TEST } from 'internal:constants';\r\nimport { errorID, warnID, error } from '../platform/debug';\r\nimport * as js from '../utils/js';\r\nimport { getSuper } from '../utils/js';\r\nimport { BitMask } from '../value-types';\r\nimport { Enum } from '../value-types/enum';\r\nimport * as attributeUtils from './utils/attribute';\r\nimport { IAcceptableAttributes } from './utils/attribute-defines';\r\nimport { preprocessAttrs } from './utils/preprocess-class';\r\nimport * as RF from './utils/requiring-frame';\r\n\r\nimport { legacyCC } from '../global-exports';\r\nimport { PropertyStash, PropertyStashInternalFlag } from './class-stash';\r\nimport { setPropertyEnumTypeOnAttrs } from './utils/attribute-internal';\r\n\r\nconst DELIMETER = attributeUtils.DELIMETER;\r\nconst CCCLASS_TAG = '__ctors__'; // Still use this historical name to avoid unsynchronized version issue\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport const ENUM_TAG = 'Enum';\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport const BITMASK_TAG = 'BitMask';\r\n\r\nfunction pushUnique (array, item): void {\r\n    if (array.indexOf(item) < 0) {\r\n        array.push(item);\r\n    }\r\n}\r\n\r\n// both getter and prop must register the name into `__props__` array\r\nfunction appendProp (cls, name): void {\r\n    if (DEV) {\r\n        // if (!IDENTIFIER_RE.test(name)) {\r\n        //    error('The property name \"' + name + '\" is not compliant with JavaScript naming standards');\r\n        //    return;\r\n        // }\r\n        if (name.indexOf('.') !== -1) {\r\n            errorID(3634);\r\n            return;\r\n        }\r\n    }\r\n    pushUnique(cls.__props__, name);\r\n}\r\n\r\nfunction defineProp (cls, className, propName, val): void {\r\n    if (DEV) {\r\n        // check base prototype to avoid name collision\r\n        if (CCClass.getInheritanceChain(cls)\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            .some((x) => x.prototype.hasOwnProperty(propName))) {\r\n            errorID(3637, className, propName, className);\r\n            return;\r\n        }\r\n    }\r\n\r\n    appendProp(cls, propName);\r\n\r\n    // apply attributes\r\n    parseAttributes(cls, val, className, propName, false);\r\n    if ((EDITOR && !window.Build) || TEST) {\r\n        for (let i = 0; i < onAfterProps_ET.length; i++) {\r\n            onAfterProps_ET[i](cls, propName);\r\n        }\r\n        onAfterProps_ET.length = 0;\r\n    }\r\n}\r\n\r\nfunction defineGetSet (cls, name, propName, val): void {\r\n    const getter = val.get;\r\n    const setter = val.set;\r\n\r\n    if (getter) {\r\n        parseAttributes(cls, val, name, propName, true);\r\n        if ((EDITOR && !window.Build) || TEST) {\r\n            onAfterProps_ET.length = 0;\r\n        }\r\n\r\n        attributeUtils.setClassAttr(cls, propName, 'serializable', false);\r\n\r\n        if (DEV) {\r\n            // 不论是否 visible 都要添加到 props，否则 asset watcher 不能正常工作\r\n            appendProp(cls, propName);\r\n        }\r\n\r\n        if (EDITOR || DEV) {\r\n            attributeUtils.setClassAttr(cls, propName, 'hasGetter', true); // 方便 editor 做判断\r\n        }\r\n    }\r\n\r\n    if (setter) {\r\n        if (EDITOR || DEV) {\r\n            attributeUtils.setClassAttr(cls, propName, 'hasSetter', true); // 方便 editor 做判断\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDefault (defaultVal): any {\r\n    if (typeof defaultVal === 'function') {\r\n        if (EDITOR) {\r\n            try {\r\n                return defaultVal();\r\n            } catch (e) {\r\n                legacyCC._throw(e);\r\n                return undefined;\r\n            }\r\n        } else {\r\n            return defaultVal();\r\n        }\r\n    }\r\n    return defaultVal;\r\n}\r\n\r\nfunction doDefine (className, baseClass, options): any {\r\n    const ctor = options.ctor;\r\n\r\n    if (DEV) {\r\n        // check ctor\r\n        if (CCClass._isCCClass(ctor)) {\r\n            errorID(3618, className);\r\n        }\r\n    }\r\n\r\n    js.value(ctor, CCCLASS_TAG, true, true);\r\n\r\n    const prototype = ctor.prototype;\r\n    if (baseClass) {\r\n        ctor.$super = baseClass;\r\n    }\r\n\r\n    js.setClassName(className, ctor);\r\n    return ctor;\r\n}\r\n\r\nfunction define (className, baseClass, options): any {\r\n    const Component = legacyCC.Component;\r\n    const frame = RF.peek();\r\n\r\n    if (frame && js.isChildClassOf(baseClass, Component)) {\r\n        // project component\r\n        if (js.isChildClassOf(frame.cls, Component)) {\r\n            errorID(3615);\r\n            return null;\r\n        }\r\n        if (DEV && frame.uuid && className) {\r\n            // warnID(3616, className);\r\n        }\r\n        className = className || frame.script;\r\n    }\r\n\r\n    const cls = doDefine(className, baseClass, options);\r\n\r\n    if (EDITOR) {\r\n        // for RenderPipeline, RenderFlow, RenderStage\r\n        const isRenderPipeline = js.isChildClassOf(baseClass, legacyCC.RenderPipeline);\r\n        const isRenderFlow = js.isChildClassOf(baseClass, legacyCC.RenderFlow);\r\n        const isRenderStage = js.isChildClassOf(baseClass, legacyCC.RenderStage);\r\n        const isRender = isRenderPipeline || isRenderFlow || isRenderStage;\r\n        if (isRender) {\r\n            let renderName = '';\r\n            if (isRenderPipeline) {\r\n                renderName = 'render_pipeline';\r\n            } else if (isRenderFlow) {\r\n                renderName = 'render_flow';\r\n            } else if (isRenderStage) {\r\n                renderName = 'render_stage';\r\n            }\r\n            // 增加了 hidden: 开头标识，使它最终不会显示在 Editor inspector 的添加组件列表里\r\n\r\n            window.EditorExtends && window.EditorExtends.Component.addMenu(cls, `hidden:${renderName}/${className}`, -1);\r\n        }\r\n\r\n        // Note: `options.ctor` should be the same as `cls` except if\r\n        // cc-class is defined by `cc.Class({/* ... */})`.\r\n        // In such case, `options.ctor` may be `undefined`.\r\n        // So we can not use `options.ctor`. Instead, we should use `cls` which is the \"real\" registered cc-class.\r\n        EditorExtends.emit('class-registered', cls, frame, className);\r\n    }\r\n\r\n    if (frame) {\r\n        // 基础的 ts, js 脚本组件\r\n        if (js.isChildClassOf(baseClass, Component)) {\r\n            const uuid = frame.uuid;\r\n            if (uuid) {\r\n                js._setClassId(uuid, cls);\r\n                if (EDITOR) {\r\n                    cls.prototype.__scriptUuid = EditorExtends.UuidUtils.decompressUuid(uuid);\r\n                }\r\n            }\r\n            frame.cls = cls;\r\n        } else if (!js.isChildClassOf(frame.cls, Component)) {\r\n            frame.cls = cls;\r\n        }\r\n    }\r\n    return cls;\r\n}\r\n\r\nfunction getNewValueTypeCodeJit (value): string {\r\n    const clsName = js.getClassName(value);\r\n    const type = value.constructor;\r\n    let res = `new ${clsName}(`;\r\n    for (let i = 0; i < type.__props__.length; i++) {\r\n        const prop = type.__props__[i];\r\n        const propVal = value[prop];\r\n        if (DEV && typeof propVal === 'object') {\r\n            errorID(3641, clsName);\r\n            return `new ${clsName}()`;\r\n        }\r\n        res += propVal;\r\n        if (i < type.__props__.length - 1) {\r\n            res += ',';\r\n        }\r\n    }\r\n    return `${res})`;\r\n}\r\n\r\n// TODO - move escapeForJS, IDENTIFIER_RE, getNewValueTypeCodeJit to misc.js or a new source file\r\n\r\n// convert a normal string including newlines, quotes and Unicode characters into a string literal\r\n// ready to use in JavaScript source\r\nfunction escapeForJS (s): string {\r\n    return JSON.stringify(s)\r\n        // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\r\n        .replace(/\\u2028/g, '\\\\u2028')\r\n        .replace(/\\u2029/g, '\\\\u2029');\r\n}\r\n\r\n// simple test variable name\r\nconst IDENTIFIER_RE = /^[A-Za-z_$][0-9A-Za-z_$]*$/;\r\n\r\nfunction declareProperties (cls, className, properties, baseClass): void {\r\n    cls.__props__ = [];\r\n\r\n    if (baseClass && baseClass.__props__) {\r\n        cls.__props__ = baseClass.__props__.slice();\r\n    }\r\n\r\n    if (properties) {\r\n        // 预处理属性\r\n        preprocessAttrs(properties, className, cls);\r\n\r\n        for (const propName in properties) {\r\n            const val = properties[propName];\r\n            if (!val.get && !val.set) {\r\n                defineProp(cls, className, propName, val);\r\n            } else {\r\n                defineGetSet(cls, className, propName, val);\r\n            }\r\n        }\r\n    }\r\n\r\n    const attrs = attributeUtils.getClassAttrs(cls);\r\n    cls.__values__ = cls.__props__.filter((prop) => attrs[`${prop}${DELIMETER}serializable`] !== false);\r\n}\r\n\r\nexport function CCClass<TFunction> (options: {\r\n    name?: string;\r\n    extends: null | (Function & { __props__?: any; _sealed?: boolean });\r\n    ctor: TFunction;\r\n    properties?: any;\r\n    editor?: any;\r\n}): any {\r\n    let name = options.name;\r\n    const base = options.extends/* || CCObject */;\r\n\r\n    // create constructor\r\n    const cls = define(name, base, options);\r\n    if (!name) {\r\n        name = legacyCC.js.getClassName(cls);\r\n    }\r\n\r\n    cls._sealed = true;\r\n    if (base) {\r\n        base._sealed = false;\r\n    }\r\n\r\n    // define Properties\r\n    const properties = options.properties;\r\n    declareProperties(cls, name, properties, base);\r\n\r\n    const editor = options.editor;\r\n    if (editor) {\r\n        if (js.isChildClassOf(base, legacyCC.Component)) {\r\n            legacyCC.Component._registerEditorProps(cls, editor);\r\n        } else if (DEV) {\r\n            warnID(3623, name!);\r\n        }\r\n    }\r\n\r\n    return cls;\r\n}\r\n\r\n/**\r\n * @en\r\n * Checks whether the constructor is initialized by `@ccclass`.\r\n * @zh\r\n * 检查构造函数是否经由 `@ccclass` 初始化。\r\n * @method _isCCClass\r\n * @param {Function} constructor\r\n * @return {Boolean}\r\n * @private\r\n */\r\nCCClass._isCCClass = function isCCClass (constructor): boolean {\r\n    // Does not support fastDefined class (ValueType).\r\n    // Use `instanceof ValueType` if necessary.\r\n    // eslint-disable-next-line no-prototype-builtins, @typescript-eslint/no-unsafe-return\r\n    return constructor?.hasOwnProperty?.(CCCLASS_TAG);     // Remember, the static variable is not inheritable\r\n};\r\n\r\n//\r\n// Optimized define function only for internal classes\r\n//\r\n// @method fastDefine\r\n// @param {String} className\r\n// @param {Function} constructor\r\n// @param {Object} serializableFields\r\n// @private\r\n//\r\nCCClass.fastDefine = function (className, constructor, serializableFields): void {\r\n    js.setClassName(className, constructor);\r\n    const props = constructor.__props__ = constructor.__values__ = Object.keys(serializableFields);\r\n    const attrs = attributeUtils.getClassAttrs(constructor);\r\n    for (let i = 0; i < props.length; i++) {\r\n        const key = props[i];\r\n        attrs[`${key + DELIMETER}visible`] = false;\r\n        attrs[`${key + DELIMETER}default`] = serializableFields[key];\r\n    }\r\n};\r\n\r\nCCClass.Attr = attributeUtils;\r\nCCClass.attr = attributeUtils.attr;\r\n\r\n/**\r\n * Returns if the class is a cc-class or is fast-defined.\r\n * @param constructor The constructor of the class.\r\n * @returns Judge result.\r\n * @engineInternal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function isCCClassOrFastDefined<T> (constructor: Constructor<T>): boolean {\r\n    // eslint-disable-next-line no-prototype-builtins, @typescript-eslint/no-unsafe-return\r\n    return  constructor?.hasOwnProperty?.('__values__');\r\n}\r\n\r\nCCClass.isCCClassOrFastDefined = isCCClassOrFastDefined;\r\n\r\n/**\r\n * Return all super classes.\r\n * @param constructor The Constructor.\r\n */\r\nfunction getInheritanceChain (constructor): any[] {\r\n    const chain: any[] = [];\r\n    for (; ;) {\r\n        constructor = getSuper(constructor);\r\n        if (!constructor) {\r\n            break;\r\n        }\r\n        if (constructor !== Object) {\r\n            chain.push(constructor);\r\n        }\r\n    }\r\n    return chain;\r\n}\r\n\r\nCCClass.getInheritanceChain = getInheritanceChain;\r\n\r\nconst PrimitiveTypes = {\r\n    // Specify that the input value must be integer in Properties.\r\n    // Also used to indicates that the type of elements in array or the type of value in dictionary is integer.\r\n    Integer: 'Number',\r\n    // Indicates that the type of elements in array or the type of value in dictionary is double.\r\n    Float: 'Number',\r\n    Boolean: 'Boolean',\r\n    String: 'String',\r\n};\r\n\r\ninterface IParsedAttribute extends IAcceptableAttributes {\r\n    ctor?: Function;\r\n    enumList?: readonly any[];\r\n    bitmaskList?: any[];\r\n}\r\ntype OnAfterProp = (constructor: Function, mainPropertyName: string) => void;\r\nconst onAfterProps_ET: OnAfterProp[] = [];\r\n\r\ninterface AttributesRecord {\r\n    get?: unknown;\r\n    set?: unknown;\r\n    default?: unknown;\r\n}\r\n\r\nfunction parseAttributes (constructor: Function, attributes: PropertyStash, className: string, propertyName: string, usedInGetter): void {\r\n    const ERR_Type = DEV ? 'The %s of %s must be type %s' : '';\r\n\r\n    let attrs: IParsedAttribute | null = null;\r\n    let propertyNamePrefix = '';\r\n    function initAttrs (): any {\r\n        propertyNamePrefix = propertyName + DELIMETER;\r\n        return attrs = attributeUtils.getClassAttrs(constructor);\r\n    }\r\n\r\n    if ((EDITOR && !window.Build) || TEST) {\r\n        onAfterProps_ET.length = 0;\r\n    }\r\n\r\n    if ('type' in attributes && typeof attributes.type === 'undefined') {\r\n        warnID(3660, propertyName, className);\r\n    }\r\n\r\n    let warnOnNoDefault = true;\r\n\r\n    const type = attributes.type;\r\n    if (type) {\r\n        const primitiveType = PrimitiveTypes[type];\r\n        if (primitiveType) {\r\n            (attrs || initAttrs())[`${propertyNamePrefix}type`] = type;\r\n            if (((EDITOR && !window.Build) || TEST) && !attributes._short) {\r\n                onAfterProps_ET.push(attributeUtils.getTypeChecker_ET(primitiveType, `cc.${type}`));\r\n            }\r\n        } else if (type === 'Object') {\r\n            if (DEV) {\r\n                errorID(3644, className, propertyName);\r\n            }\r\n        }\r\n        // else if (type === Attr.ScriptUuid) {\r\n        //     (attrs || initAttrs())[propertyNamePrefix + 'type'] = 'Script';\r\n        //     attrs[propertyNamePrefix + 'ctor'] = cc.ScriptAsset;\r\n        // }\r\n        else if (typeof type === 'object') {\r\n            if (Enum.isEnum(type)) {\r\n                setPropertyEnumTypeOnAttrs(\r\n                    attrs || initAttrs(),\r\n                    propertyName,\r\n                    type,\r\n                );\r\n            } else if (BitMask.isBitMask(type)) {\r\n                (attrs || initAttrs())[`${propertyNamePrefix}type`] = BITMASK_TAG;\r\n                attrs![`${propertyNamePrefix}bitmaskList`] = BitMask.getList(type);\r\n            } else if (DEV) {\r\n                errorID(3645, className, propertyName, type);\r\n            }\r\n        } else if (typeof type === 'function') {\r\n            // Do not warn missing-default if the type is object\r\n            warnOnNoDefault = false;\r\n            (attrs || initAttrs())[`${propertyNamePrefix}type`] = 'Object';\r\n            attrs![`${propertyNamePrefix}ctor`] = type;\r\n            if (((EDITOR && !window.Build) || TEST) && !attributes._short) {\r\n                onAfterProps_ET.push(attributeUtils.getObjTypeChecker_ET(type));\r\n            }\r\n        } else if (DEV) {\r\n            errorID(3646, className, propertyName, type);\r\n        }\r\n    }\r\n\r\n    if ('default' in attributes) {\r\n        (attrs || initAttrs())[`${propertyNamePrefix}default`] = attributes.default;\r\n    } else if (((EDITOR && !window.Build) || TEST) && warnOnNoDefault && !(attributes.get || attributes.set)) {\r\n        // TODO: we close this warning for now:\r\n        // issue: https://github.com/cocos/3d-tasks/issues/14887\r\n        // warnID(3654, className, propertyName);\r\n    }\r\n\r\n    const parseSimpleAttribute = (attributeName: keyof IAcceptableAttributes, expectType: string): void => {\r\n        if (attributeName in attributes) {\r\n            const val = attributes[attributeName];\r\n            if (typeof val === expectType) {\r\n                (attrs || initAttrs())[propertyNamePrefix + attributeName] = val;\r\n            } else if (DEV) {\r\n                error(ERR_Type, attributeName, className, propertyName, expectType);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (attributes.editorOnly) {\r\n        if (DEV && usedInGetter) {\r\n            errorID(3613, 'editorOnly', className, propertyName);\r\n        } else {\r\n            (attrs || initAttrs())[`${propertyNamePrefix}editorOnly`] = true;\r\n        }\r\n    }\r\n    // parseSimpleAttr('preventDeferredLoad', 'boolean');\r\n    if (DEV) {\r\n        parseSimpleAttribute('displayName', 'string');\r\n        parseSimpleAttribute('displayOrder', 'number');\r\n        parseSimpleAttribute('multiline', 'boolean');\r\n        parseSimpleAttribute('radian', 'boolean');\r\n        if (attributes.readonly) {\r\n            (attrs || initAttrs())[`${propertyNamePrefix}readonly`] = attributes.readonly;\r\n        }\r\n        parseSimpleAttribute('tooltip', 'string');\r\n        if (attributes.group) {\r\n            (attrs || initAttrs())[`${propertyNamePrefix}group`] = attributes.group;\r\n        }\r\n        parseSimpleAttribute('slide', 'boolean');\r\n        parseSimpleAttribute('unit', 'string');\r\n        parseSimpleAttribute('radioGroup', 'boolean');\r\n    }\r\n\r\n    const isStandaloneMode = attributes.__internalFlags & PropertyStashInternalFlag.STANDALONE;\r\n\r\n    let normalizedSerializable: undefined | boolean;\r\n    if (isStandaloneMode) {\r\n        normalizedSerializable = attributes.serializable === true\r\n            || (attributes.__internalFlags & PropertyStashInternalFlag.IMPLICIT_SERIALIZABLE) !== 0;\r\n    } else if (attributes.serializable === false) {\r\n        normalizedSerializable = false;\r\n        if (DEV && usedInGetter) {\r\n            errorID(3613, 'serializable', className, propertyName);\r\n        }\r\n    }\r\n    if (typeof normalizedSerializable !== 'undefined') {\r\n        (attrs || initAttrs())[`${propertyNamePrefix}serializable`] = normalizedSerializable;\r\n    }\r\n\r\n    parseSimpleAttribute('formerlySerializedAs', 'string');\r\n\r\n    if (DEV) {\r\n        if ('animatable' in attributes) {\r\n            (attrs || initAttrs())[`${propertyNamePrefix}animatable`] = attributes.animatable;\r\n        }\r\n    }\r\n\r\n    if (DEV) {\r\n        const visible = attributes.visible;\r\n\r\n        let normalizedVisible: undefined | boolean | (() => boolean);\r\n        switch (typeof visible) {\r\n        case 'boolean':\r\n        case 'function':\r\n            normalizedVisible = visible;\r\n            break;\r\n        default: {\r\n            if (isStandaloneMode) {\r\n                normalizedVisible = (attributes.__internalFlags & PropertyStashInternalFlag.IMPLICIT_VISIBLE) !== 0;\r\n            } else {\r\n                const startsWithUS = (propertyName.charCodeAt(0) === 95);\r\n                if (startsWithUS) {\r\n                    normalizedVisible = false;\r\n                }\r\n            }\r\n        }\r\n        }\r\n\r\n        if (typeof normalizedVisible !== 'undefined') {\r\n            (attrs || initAttrs())[`${propertyNamePrefix}visible`] = normalizedVisible;\r\n        }\r\n    }\r\n\r\n    const range = attributes.range;\r\n    if (range) {\r\n        if (Array.isArray(range)) {\r\n            if (range.length >= 2) {\r\n                (attrs || initAttrs())[`${propertyNamePrefix}min`] = range[0];\r\n                attrs![`${propertyNamePrefix}max`] = range[1];\r\n                if (range.length > 2) {\r\n                    attrs![`${propertyNamePrefix}step`] = range[2];\r\n                }\r\n            } else if (DEV) {\r\n                errorID(3647);\r\n            }\r\n        } else if (DEV) {\r\n            error(ERR_Type, 'range', className, propertyName, 'array');\r\n        }\r\n    }\r\n    if (DEV) {\r\n        const parseReturnNumberFuncAttribute = (attributeName: keyof IAcceptableAttributes) => {\r\n            const value = attributes[attributeName];\r\n            if (value === undefined) { return; }\r\n\r\n            if (typeof value === 'number' || typeof value === 'function') {\r\n                (attrs || initAttrs())[`${propertyNamePrefix}${attributeName}`] = value;\r\n            } else {\r\n                error(ERR_Type, attributeName, className, propertyName, 'number | function');\r\n            }\r\n        };\r\n        parseReturnNumberFuncAttribute('min');\r\n        parseReturnNumberFuncAttribute('max');\r\n    }\r\n    parseSimpleAttribute('step', 'number');\r\n    parseSimpleAttribute('userData', 'object');\r\n}\r\n\r\nCCClass.isArray = function (defaultVal): boolean {\r\n    defaultVal = getDefault(defaultVal);\r\n    return Array.isArray(defaultVal);\r\n};\r\n\r\nCCClass.getDefault = getDefault;\r\nCCClass.escapeForJS = escapeForJS;\r\nCCClass.IDENTIFIER_RE = IDENTIFIER_RE;\r\n// NOTE: the type of getNewValueTypeCode can be ((value: any) => string) or boolean.\r\nCCClass.getNewValueTypeCode = (SUPPORT_JIT && getNewValueTypeCodeJit) as any;\r\n\r\nlegacyCC.Class = CCClass;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { SUPPORT_JIT, EDITOR, TEST, JSB, EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport * as js from '../utils/js';\r\nimport { CCClass } from './class';\r\nimport { errorID, warnID } from '../platform/debug';\r\nimport { legacyCC } from '../global-exports';\r\nimport { EditorExtendableObject, editorExtrasTag } from './editor-extras-tag';\r\nimport { copyAllProperties } from '../utils/js';\r\n\r\n// definitions for CCObjectFlags\r\n\r\nexport enum CCObjectFlags {\r\n    Destroyed = 1 << 0,\r\n    RealDestroyed = 1 << 1,\r\n    ToDestroy = 1 << 2,\r\n    DontSave = 1 << 3,\r\n    EditorOnly = 1 << 4,\r\n    Dirty = 1 << 5,\r\n    DontDestroy = 1 << 6,\r\n    Destroying = 1 << 7,\r\n    Deactivating = 1 << 8,\r\n    LockedInEditor = 1 << 9,\r\n    HideInHierarchy = 1 << 10,\r\n\r\n    IsOnEnableCalled = 1 << 11,\r\n    IsEditorOnEnableCalled = 1 << 12,\r\n    IsPreloadStarted = 1 << 13,\r\n    IsOnLoadCalled = 1 << 14,\r\n    IsOnLoadStarted = 1 << 15,\r\n    IsStartCalled = 1 << 16,\r\n\r\n    IsRotationLocked = 1 << 17,\r\n    IsScaleLocked = 1 << 18,\r\n    IsAnchorLocked = 1 << 19,\r\n    IsSizeLocked = 1 << 20,\r\n    IsPositionLocked = 1 << 21,\r\n\r\n    IsSkipTransformUpdate = 1 << 24,\r\n\r\n    // var Hide = HideInGame | HideInEditor,\r\n    // should not clone or serialize these flags\r\n    PersistentMask = ~(ToDestroy | Dirty | Destroying | DontDestroy | Deactivating\r\n                           | IsPreloadStarted | IsOnLoadStarted | IsOnLoadCalled | IsStartCalled\r\n                           | IsOnEnableCalled | IsEditorOnEnableCalled\r\n                           | IsRotationLocked | IsScaleLocked | IsAnchorLocked | IsSizeLocked | IsPositionLocked\r\n    /* RegisteredInEditor */),\r\n\r\n    // all the hideFlags\r\n    AllHideMasks = DontSave | EditorOnly | LockedInEditor | HideInHierarchy,\r\n}\r\n\r\nconst objectsToDestroy: CCObject[] = [];\r\nlet deferredDestroyTimer: number | null = null;\r\n\r\ntype DestructFunction = (o: CCObject) => void;\r\n\r\nfunction compileDestruct (obj: any, ctor: any): DestructFunction {\r\n    const shouldSkipId = obj instanceof legacyCC.Node || obj instanceof legacyCC.Component;\r\n    const idToSkip = shouldSkipId ? '_id' : null;\r\n\r\n    let key: string;\r\n    const propsToReset = {};\r\n    for (key in obj) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (obj.hasOwnProperty(key)) {\r\n            if (key === idToSkip) {\r\n                continue;\r\n            }\r\n            switch (typeof obj[key]) {\r\n            case 'string':\r\n                propsToReset[key] = '';\r\n                break;\r\n            case 'object':\r\n            case 'function':\r\n                propsToReset[key] = null;\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // Overwrite propsToReset according to Class\r\n    if (CCClass._isCCClass(ctor)) {\r\n        const attrs = legacyCC.Class.Attr.getClassAttrs(ctor);\r\n        const propList = ctor.__props__;\r\n\r\n        for (let i = 0; i < propList.length; i++) {\r\n            key = propList[i];\r\n            // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\r\n            const attrKey = `${key}`;\r\n            if (attrKey in attrs) {\r\n                if (shouldSkipId && key === '_id') {\r\n                    continue;\r\n                }\r\n                switch (typeof attrs[attrKey]) {\r\n                case 'string':\r\n                    propsToReset[key] = '';\r\n                    break;\r\n                case 'object':\r\n                case 'function':\r\n                    propsToReset[key] = null;\r\n                    break;\r\n                case 'undefined':\r\n                    propsToReset[key] = undefined;\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (SUPPORT_JIT) {\r\n        // compile code\r\n        let func = '';\r\n\r\n        for (key in propsToReset) {\r\n            let statement;\r\n            if (CCClass.IDENTIFIER_RE.test(key)) {\r\n                statement = `o.${key}=`;\r\n            } else {\r\n                statement = `o[${CCClass.escapeForJS(key)}]=`;\r\n            }\r\n            let val = propsToReset[key];\r\n            if (val === '') {\r\n                val = '\"\"';\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\r\n            func += (`${statement + val};\\n`);\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func\r\n        return Function('o', func) as DestructFunction;\r\n    } else {\r\n        return (o): void => {\r\n            for (const _key in propsToReset) {\r\n                o[_key] = propsToReset[_key];\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * The base class of most of all the objects in Fireball.\r\n * @zh\r\n * 大部分对象的基类。\r\n * @private\r\n */\r\nclass CCObject implements EditorExtendableObject {\r\n    public static _deferredDestroy (): void {\r\n        const deleteCount = objectsToDestroy.length;\r\n        for (let i = 0; i < deleteCount; ++i) {\r\n            const obj = objectsToDestroy[i];\r\n            if (!(obj._objFlags & CCObjectFlags.Destroyed)) {\r\n                obj._destroyImmediate();\r\n            }\r\n        }\r\n        // if we called b.destroy() in a.onDestroy(), objectsToDestroy will be resized,\r\n        // but we only destroy the objects which called destroy in this frame.\r\n        if (deleteCount === objectsToDestroy.length) {\r\n            objectsToDestroy.length = 0;\r\n        } else {\r\n            objectsToDestroy.splice(0, deleteCount);\r\n        }\r\n\r\n        if (EDITOR) {\r\n            deferredDestroyTimer = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public declare [editorExtrasTag]: unknown;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _objFlags: number = 0;\r\n\r\n    /**\r\n     * @dontmangle\r\n     * NOTE: _name is a serializable property set by `CCClass.fastDefine`,\r\n     * so it should not be mangled while `mangleProtected` is true in `<<ProjectRoot>>/engine-mangle-config.json`.\r\n     */\r\n    protected declare _name: string;\r\n\r\n    constructor (name = '') {\r\n        /**\r\n         * @default \"\"\r\n         * @private\r\n         */\r\n        this._name = name;\r\n\r\n        if (EDITOR) {\r\n            // See cocos/cocos-engine#15392\r\n            this[editorExtrasTag] = {};\r\n        }\r\n    }\r\n\r\n    // MEMBER\r\n\r\n    /**\r\n     * @en The name of the object.\r\n     * @zh 该对象的名称。\r\n     * @default \"\"\r\n     * @example\r\n     * ```\r\n     * obj.name = \"New Obj\";\r\n     * ```\r\n     */\r\n    get name (): string {\r\n        return this._name;\r\n    }\r\n    set name (value) {\r\n        this._name = value;\r\n    }\r\n\r\n    /**\r\n     * @en After inheriting CCObject objects, control whether you need to hide, lock, serialize, and other functions.\r\n     * @zh 在继承 CCObject 对象后，控制是否需要隐藏，锁定，序列化等功能。\r\n     */\r\n    public set hideFlags (hideFlags: CCObject.Flags) {\r\n        const flags = hideFlags & CCObjectFlags.AllHideMasks;\r\n        this._objFlags = (this._objFlags & ~CCObjectFlags.AllHideMasks) | flags;\r\n    }\r\n    public get hideFlags (): CCObject.Flags {\r\n        return this._objFlags & CCObjectFlags.AllHideMasks;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Indicates whether the object is not yet destroyed. (It will not be available after being destroyed)<br>\r\n     * When an object's `destroy` is called, it is actually destroyed after the end of this frame.\r\n     * So `isValid` will return false from the next frame, while `isValid` in the current frame will still be true.\r\n     * If you want to determine whether the current frame has called `destroy`, use `isValid(obj, true)`,\r\n     * but this is often caused by a particular logical requirements, which is not normally required.\r\n     *\r\n     * @zh\r\n     * 表示该对象是否可用（被 destroy 后将不可用）。<br>\r\n     * 当一个对象的 `destroy` 调用以后，会在这一帧结束后才真正销毁。<br>\r\n     * 因此从下一帧开始 `isValid` 就会返回 false，而当前帧内 `isValid` 仍然会是 true。<br>\r\n     * 如果希望判断当前帧是否调用过 `destroy`，请使用 `isValid(obj, true)`，不过这往往是特殊的业务需求引起的，通常情况下不需要这样。\r\n     * @default true\r\n     * @readOnly\r\n     * @example\r\n     * ```ts\r\n     * import { Node, log } from 'cc';\r\n     * const node = new Node();\r\n     * log(node.isValid);    // true\r\n     * node.destroy();\r\n     * log(node.isValid);    // true, still valid in this frame\r\n     * // after a frame...\r\n     * log(node.isValid);    // false, destroyed in the end of last frame\r\n     * ```\r\n     */\r\n    get isValid (): boolean {\r\n        return !(this._objFlags & CCObjectFlags.Destroyed);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Destroy this Object, and release all its own references to other objects.<br/>\r\n     * Actual object destruction will delayed until before rendering.\r\n     * From the next frame, this object is not usable any more.\r\n     * You can use `isValid(obj)` to check whether the object is destroyed before accessing it.\r\n     * @zh\r\n     * 销毁该对象，并释放所有它对其它对象的引用。<br/>\r\n     * 实际销毁操作会延迟到当前帧渲染前执行。从下一帧开始，该对象将不再可用。\r\n     * 您可以在访问对象之前使用 `isValid(obj)` 来检查对象是否已被销毁。\r\n     * @return whether it is the first time the destroy being called\r\n     * @example\r\n     * ```\r\n     * obj.destroy();\r\n     * ```\r\n     */\r\n    public destroy (): boolean {\r\n        if (this._objFlags & CCObjectFlags.Destroyed) {\r\n            warnID(5000);\r\n            return false;\r\n        }\r\n        if (this._objFlags & CCObjectFlags.ToDestroy) {\r\n            return false;\r\n        }\r\n        this._objFlags |= CCObjectFlags.ToDestroy;\r\n        objectsToDestroy.push(this);\r\n\r\n        if (EDITOR_NOT_IN_PREVIEW && deferredDestroyTimer === null && legacyCC.engine && !legacyCC.engine._isUpdating) {\r\n            // auto destroy immediate in edit mode\r\n            deferredDestroyTimer = setTimeout(CCObject._deferredDestroy);\r\n        }\r\n\r\n        if (JSB) {\r\n            // TODO: `_destroy` method only implemented on native @dumganhar\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14644\r\n            (this as any)._destroy();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clear all references in the instance.\r\n     *\r\n     * NOTE: this method will not clear the getter or setter functions which defined in the instance of CCObject.\r\n     *\r\n     * @zh\r\n     * 清理实例的所有引用\r\n     * 注意：此方法不会清理实例上的 getter 与 setter 方法。\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     * @example\r\n     * ```\r\n     * // You can override the _destruct method if you need, for example:\r\n     *       _destruct: function () {\r\n     *           for (var key in this) {\r\n     *               if (this.hasOwnProperty(key)) {\r\n     *                   switch (typeof this[key]) {\r\n     *                       case 'string':\r\n     *                           this[key] = '';\r\n     *                           break;\r\n     *                       case 'object':\r\n     *                       case 'function':\r\n     *                           this[key] = null;\r\n     *                           break;\r\n     *               }\r\n     *           }\r\n     *       }\r\n     * ```\r\n     */\r\n    public _destruct (): void {\r\n        const ctor: any = this.constructor;\r\n        let destruct: DestructFunction;\r\n        if (Object.prototype.hasOwnProperty.call(ctor, '__destruct__')) {\r\n            destruct = ctor.__destruct__;\r\n        } else {\r\n            destruct = compileDestruct(this, ctor);\r\n            js.value(ctor as Record<string, any>, '__destruct__', destruct, true);\r\n        }\r\n\r\n        destruct(this);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _destroyImmediate (): void {\r\n        if (this._objFlags & CCObjectFlags.Destroyed) {\r\n            errorID(5000);\r\n            return;\r\n        }\r\n        // TODO: '_onPreDestroy' should be define in CCObject class.\r\n        // issue: https://github.com/cocos/cocos-engine/issues/14643\r\n        ((this as any)._onPreDestroy)?.();\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            /*Native properties cannot be reset by _destruct, because the native properties are hung on the prototype and\r\n             *hasOwnProperty's detection cannot be passed.\r\n             */\r\n            // TODO: `destruct` is only implemented on native @dumganhar\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14644\r\n            if (JSB && (this as any).destruct) {\r\n                (this as any).destruct();\r\n            }\r\n            this._destruct();\r\n        }\r\n\r\n        this._objFlags |= CCObjectFlags.Destroyed;\r\n    }\r\n}\r\n\r\nconst prototype = CCObject.prototype;\r\nif (EDITOR || TEST) {\r\n    js.get(prototype, 'isRealValid', function (this: CCObject) {\r\n        return !(this._objFlags & CCObjectFlags.RealDestroyed);\r\n    });\r\n\r\n    /**\r\n     * @en After inheriting CCObject objects, control whether you need to hide, lock, serialize, and other functions.\r\n     * This method is only available for editors and is not recommended for developers\r\n     * @zh 在继承 CCObject 对象后，控制是否需要隐藏，锁定，序列化等功能(该方法仅提供给编辑器使用，不建议开发者使用)。\r\n     */\r\n    js.getset(\r\n        prototype,\r\n        'objFlags',\r\n        function (this: CCObject) {\r\n            return this._objFlags;\r\n        },\r\n        function (this: CCObject, objFlags: CCObjectFlags) {\r\n            this._objFlags = objFlags;\r\n        },\r\n    );\r\n\r\n    /*\r\n    * @en\r\n    * In fact, Object's \"destroy\" will not trigger the destruct operation in Firebal Editor.\r\n    * The destruct operation will be executed by Undo system later.\r\n    * @zh\r\n    * 事实上，对象的 “destroy” 不会在编辑器中触发析构操作，\r\n    * 析构操作将在 Undo 系统中**延后**执行。\r\n    * @method realDestroyInEditor\r\n    * @private\r\n    * TODO: this is a dynamic inject method, should be define in class\r\n    * issue: https://github.com/cocos/cocos-engine/issues/14643\r\n    */\r\n    (prototype as any).realDestroyInEditor = function (): void {\r\n        if (!(this._objFlags & CCObjectFlags.Destroyed)) {\r\n            warnID(5001);\r\n            return;\r\n        }\r\n        if (this._objFlags & CCObjectFlags.RealDestroyed) {\r\n            warnID(5000);\r\n            return;\r\n        }\r\n        this._destruct();\r\n        this._objFlags |= CCObjectFlags.RealDestroyed;\r\n    };\r\n}\r\n\r\n// NOTE: `clearImmediate` method is only defined in NodeJS environment.\r\ndeclare const clearImmediate: (immediateId: number) => void;\r\nif (EDITOR) {\r\n    js.value(CCObject, '_clearDeferredDestroyTimer', () => {\r\n        if (deferredDestroyTimer !== null) {\r\n            clearImmediate(deferredDestroyTimer);\r\n            deferredDestroyTimer = null;\r\n        }\r\n    });\r\n    /**\r\n     * The customized serialization for this object. (Editor Only)\r\n     * @method _serialize\r\n     * @param {Boolean} exporting\r\n     * @return {object} the serialized json data object\r\n     * TODO: this is a dynamic inject method, should be define in class\r\n     * issue: https://github.com/cocos/cocos-engine/issues/14643\r\n     */\r\n    (prototype as any)._serialize = null;\r\n}\r\n\r\n/**\r\n * Init this object from the custom serialized data.\r\n * @method _deserialize\r\n * @param {Object} data - the serialized json data\r\n * @param {_Deserializer} ctx\r\n * TODO: this is a dynamic inject method, should be define in class\r\n * issue: https://github.com/cocos/cocos-engine/issues/14643\r\n */\r\n(prototype as any)._deserialize = null;\r\n\r\n// See cocos/cocos-engine#15392\r\nif (EDITOR) {\r\n    CCClass.fastDefine('cc.Object', CCObject, { _name: '', _objFlags: 0, [editorExtrasTag]: {} });\r\n    CCClass.Attr.setClassAttr(CCObject, editorExtrasTag, 'editorOnly', true);\r\n} else {\r\n    CCClass.fastDefine('cc.Object', CCObject, { _name: '', _objFlags: 0 });\r\n}\r\n\r\nconst CCObjectFlagsEnum = {};\r\nfor (const key in CCObjectFlags) {\r\n    if (typeof key === 'string' && typeof CCObjectFlags[key] === 'number') {\r\n        CCObjectFlagsEnum[key] = CCObjectFlags[key];\r\n    }\r\n}\r\n/**\r\n * Bit mask that controls object states.\r\n * @enum Object.Flags\r\n * @private\r\n */\r\njs.value(CCObject, 'Flags', CCObjectFlagsEnum);\r\n\r\ndeclare namespace CCObject {\r\n    export enum Flags {\r\n        Destroyed,\r\n        // ToDestroy: ToDestroy,\r\n\r\n        /**\r\n         * @en The object will not be saved.\r\n         * @zh 该对象将不会被保存。\r\n         */\r\n        DontSave,\r\n\r\n        /**\r\n         * @en The object will not be saved when building a player.\r\n         * @zh 构建项目时，该对象将不会被保存。\r\n         */\r\n        EditorOnly,\r\n\r\n        Dirty,\r\n\r\n        /**\r\n         * @en Dont destroy automatically when loading a new scene.\r\n         * @zh 加载一个新场景时，不自动删除该对象。\r\n         * @private\r\n         */\r\n        DontDestroy,\r\n\r\n        /**\r\n         * @en\r\n         * @zh\r\n         * @private\r\n         */\r\n        PersistentMask,\r\n\r\n        // FLAGS FOR ENGINE\r\n\r\n        /**\r\n         * @en\r\n         * @zh\r\n         * @private\r\n         */\r\n        Destroying,\r\n\r\n        /**\r\n         * @en The node is deactivating.\r\n         * @zh 节点正在反激活的过程中。\r\n         * @private\r\n         */\r\n        Deactivating,\r\n\r\n        /**\r\n         * @en\r\n         * Hide in game and hierarchy.\r\n         * This flag is readonly, it can only be used as an argument of scene.addEntity() or Entity.createWithFlags().\r\n         * @zh\r\n         * 在游戏和层级中隐藏该对象。<br/>\r\n         * 该标记只读，它只能被用作 scene.addEntity()的一个参数。\r\n         */\r\n        // HideInGame: HideInGame,\r\n\r\n        /**\r\n         * @en The lock node, when the node is locked, cannot be clicked in the scene.\r\n         * @zh 锁定节点，锁定后场景内不能点击。\r\n         * @private\r\n         */\r\n        LockedInEditor,\r\n\r\n        /**\r\n          * @en Hide the object in editor.\r\n          * @zh 在编辑器中隐藏该对象。\r\n          */\r\n        HideInHierarchy,\r\n\r\n        /**\r\n          * @en The object will not be saved and hide the object in editor,and lock node, when the node is locked,\r\n          * cannot be clicked in the scene,and The object will not be saved when building a player.\r\n          * @zh 该对象将不会被保存,构建项目时，该对象将不会被保存, 锁定节点，锁定后场景内不能点击, 在编辑器中隐藏该对象。\r\n          */\r\n        AllHideMasks,\r\n\r\n        // FLAGS FOR EDITOR\r\n\r\n        /**\r\n         * @en\r\n         * Hide in game view, hierarchy, and scene view... etc.\r\n         * This flag is readonly, it can only be used as an argument of scene.addEntity() or Entity.createWithFlags().\r\n         * @zh\r\n         * 在游戏视图，层级，场景视图等等...中隐藏该对象。\r\n         * 该标记只读，它只能被用作 scene.addEntity()的一个参数。\r\n         */\r\n        // Hide: Hide,\r\n\r\n        // FLAGS FOR COMPONENT\r\n\r\n        IsPreloadStarted,\r\n        IsOnLoadStarted,\r\n        IsOnLoadCalled,\r\n        IsOnEnableCalled,\r\n        IsStartCalled,\r\n        IsEditorOnEnableCalled,\r\n\r\n        IsPositionLocked,\r\n        IsRotationLocked,\r\n        IsScaleLocked,\r\n        IsAnchorLocked,\r\n        IsSizeLocked,\r\n    }\r\n\r\n    // for @ccclass\r\n    let __props__: string[];\r\n    let __values__: string[];\r\n}\r\n\r\n/*\r\n * @en\r\n * Checks whether the object is a CCObject.<br>\r\n *\r\n * @zh\r\n * 检查该对象是否为CCObject。<br>\r\n *\r\n * @method isCCObject\r\n * @param object\r\n * @return @en Whether it is a CCObject boolean value. @zh 是否为CCObject的布尔值。\r\n * @engineInternal\r\n */\r\nexport function isCCObject (object: any): object is CCObject {\r\n    return object instanceof CCObject;\r\n}\r\n\r\n/*\r\n * @en\r\n * Checks whether the object is non-nil and not yet destroyed.<br>\r\n * When an object's `destroy` is called, it is actually destroyed after the end of this frame.\r\n * So `isValid` will return false from the next frame, while `isValid` in the current frame will still be true.\r\n * If you want to determine whether the current frame has called `destroy`, use `isValid(obj, true)`,\r\n * but this is often caused by a particular logical requirements, which is not normally required.\r\n *\r\n * @zh\r\n * 检查该对象是否不为 null 并且尚未销毁。<br>\r\n * 当一个对象的 `destroy` 调用以后，会在这一帧结束后才真正销毁。<br>\r\n * 因此从下一帧开始 `isValid` 就会返回 false，而当前帧内 `isValid` 仍然会是 true。<br>\r\n * 如果希望判断当前帧是否调用过 `destroy`，请使用 `isValid(obj, true)`，不过这往往是特殊的业务需求引起的，通常情况下不需要这样。\r\n *\r\n * @method isValid\r\n * @param value\r\n * @param [strictMode=false] - If true, Object called destroy() in this frame will also treated as invalid.\r\n * @return whether is valid\r\n * @example\r\n * ```\r\n * import { Node, log } from 'cc';\r\n * var node = new Node();\r\n * log(isValid(node));    // true\r\n * node.destroy();\r\n * log(isValid(node));    // true, still valid in this frame\r\n * // after a frame...\r\n * log(isValid(node));    // false, destroyed in the end of last frame\r\n * ```\r\n */\r\nexport function isValid<T> (value: T | null | undefined, strictMode?: boolean): value is T {\r\n    if (typeof value === 'object') {\r\n        return !!value && !((value as any)._objFlags & (strictMode ? (CCObjectFlags.Destroyed | CCObjectFlags.ToDestroy) : CCObjectFlags.Destroyed));\r\n    } else {\r\n        return typeof value !== 'undefined';\r\n    }\r\n}\r\nlegacyCC.isValid = isValid;\r\n\r\nif (EDITOR || TEST) {\r\n    js.value(CCObject, '_willDestroy', (obj) => !(obj._objFlags & CCObjectFlags.Destroyed) && (obj._objFlags & CCObjectFlags.ToDestroy) > 0);\r\n    js.value(CCObject, '_cancelDestroy', (obj) => {\r\n        obj._objFlags &= ~CCObjectFlags.ToDestroy;\r\n        js.array.fastRemove(objectsToDestroy, obj);\r\n    });\r\n}\r\n\r\ndeclare const jsb: any;\r\n\r\nif (JSB) {\r\n    copyAllProperties(CCObject, jsb.CCObject, ['prototype', 'length', 'name']);\r\n    copyAllProperties(\r\n        CCObject.prototype,\r\n        jsb.CCObject.prototype,\r\n        ['constructor', 'name', 'hideFlags', 'isValid'],\r\n    );\r\n\r\n    (CCObject as unknown as any) = jsb.CCObject;\r\n}\r\n\r\nlegacyCC.Object = CCObject;\r\nexport { CCObject };\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { TEST } from 'internal:constants';\r\nimport { Pool } from '../memop';\r\nimport { array, createMap } from '../utils/js';\r\nimport { isCCObject, isValid } from '../data/object';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nconst fastRemoveAt = array.fastRemoveAt;\r\n\r\nfunction empty (): void { }\r\n\r\nclass CallbackInfo {\r\n    public callback: AnyFunction = empty;\r\n    public target: unknown = undefined;\r\n    public once = false;\r\n\r\n    constructor () {}\r\n\r\n    public set (callback: AnyFunction, target?: unknown, once?: boolean): void {\r\n        this.callback = callback || empty;\r\n        this.target = target;\r\n        this.once = !!once;\r\n    }\r\n\r\n    public reset (): void {\r\n        this.target = undefined;\r\n        this.callback = empty;\r\n        this.once = false;\r\n    }\r\n\r\n    public check (): boolean {\r\n        // Validation\r\n        if (isCCObject(this.target) && !isValid(this.target, true)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nconst callbackInfoPool = new Pool(() => new CallbackInfo(), 32);\r\n/**\r\n * @zh 事件监听器列表的简单封装。\r\n * @en A simple list of event callbacks\r\n */\r\nexport class CallbackList {\r\n    public callbackInfos: Array<CallbackInfo | null> = [];\r\n    public isInvoking = false;\r\n    public containCanceled = false;\r\n\r\n    constructor () {}\r\n\r\n    /**\r\n     * @zh 从列表中移除与指定目标相同回调函数的事件。\r\n     * @en Remove the event listeners with the given callback from the list\r\n     *\r\n     * @param cb - The callback to be removed\r\n     */\r\n    public removeByCallback (cb: AnyFunction): void {\r\n        for (let i = 0; i < this.callbackInfos.length; ++i) {\r\n            const info = this.callbackInfos[i];\r\n            if (info && info.callback === cb) {\r\n                info.reset();\r\n                callbackInfoPool.free(info);\r\n                fastRemoveAt(this.callbackInfos, i);\r\n                --i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @zh 从列表中移除与指定目标相同调用者的事件。\r\n     * @en Remove the event listeners with the given target from the list\r\n     * @param target\r\n     */\r\n    public removeByTarget (target: unknown): void {\r\n        for (let i = 0; i < this.callbackInfos.length; ++i) {\r\n            const info = this.callbackInfos[i];\r\n            if (info && info.target === target) {\r\n                info.reset();\r\n                callbackInfoPool.free(info);\r\n                fastRemoveAt(this.callbackInfos, i);\r\n                --i;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh 移除指定编号事件。\r\n     * @en Remove the event listener at the given index\r\n     * @param index\r\n     */\r\n    public cancel (index: number): void {\r\n        const info = this.callbackInfos[index];\r\n        if (info) {\r\n            info.reset();\r\n            if (this.isInvoking) {\r\n                this.callbackInfos[index] = null;\r\n            } else {\r\n                fastRemoveAt(this.callbackInfos, index);\r\n            }\r\n            callbackInfoPool.free(info);\r\n        }\r\n        this.containCanceled = true;\r\n    }\r\n\r\n    /**\r\n     * @zh 注销所有事件。\r\n     * @en Cancel all event listeners\r\n     */\r\n    public cancelAll (): void {\r\n        for (let i = 0; i < this.callbackInfos.length; i++) {\r\n            const info = this.callbackInfos[i];\r\n            if (info) {\r\n                info.reset();\r\n                callbackInfoPool.free(info);\r\n                this.callbackInfos[i] = null;\r\n            }\r\n        }\r\n        this.containCanceled = true;\r\n    }\r\n\r\n    /**\r\n     * @zh 立即删除所有取消的回调。（在移除过程中会更加紧凑的排列数组）\r\n     * @en Delete all canceled callbacks and compact array\r\n     */\r\n    public purgeCanceled (): void {\r\n        for (let i = this.callbackInfos.length - 1; i >= 0; --i) {\r\n            const info = this.callbackInfos[i];\r\n            if (!info) {\r\n                fastRemoveAt(this.callbackInfos, i);\r\n            }\r\n        }\r\n        this.containCanceled = false;\r\n    }\r\n\r\n    /**\r\n     * @zh 清除并重置所有数据。\r\n     * @en Clear all data\r\n     */\r\n    public clear (): void {\r\n        this.cancelAll();\r\n        this.callbackInfos.length = 0;\r\n        this.isInvoking = false;\r\n        this.containCanceled = false;\r\n    }\r\n}\r\n\r\nconst MAX_SIZE = 16;\r\nconst callbackListPool = new Pool<CallbackList>(() => new CallbackList(), MAX_SIZE);\r\n\r\nexport interface ICallbackTable {\r\n    [x: string]: CallbackList | undefined;\r\n}\r\n\r\ntype EventType = string | number;\r\n/**\r\n * @zh CallbacksInvoker 用来根据事件名（Key）管理事件监听器列表并调用回调方法。\r\n * @en CallbacksInvoker is used to manager and invoke event listeners with different event keys,\r\n * each key is mapped to a CallbackList.\r\n * @engineInternal\r\n */\r\nexport class CallbacksInvoker<EventTypeClass extends EventType = EventType> {\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _callbackTable: ICallbackTable = createMap(true);\r\n    private _offCallback?: () => void;\r\n\r\n    constructor () {}\r\n\r\n    /**\r\n     * @zh 向一个事件名注册一个新的事件监听器，包含回调函数和调用者\r\n     * @en Register an event listener to a given event key with callback and target.\r\n     *\r\n     * @param key - Event type\r\n     * @param callback - Callback function when event triggered\r\n     * @param target - Callback callee\r\n     * @param once - Whether invoke the callback only once (and remove it)\r\n     */\r\n    public on (key: EventTypeClass, callback: AnyFunction, target?: unknown, once?: boolean): AnyFunction {\r\n        if (!this.hasEventListener(key, callback, target)) {\r\n            let list = this._callbackTable[key];\r\n            if (!list) {\r\n                list = this._callbackTable[key] = callbackListPool.alloc();\r\n            }\r\n            const info = callbackInfoPool.alloc();\r\n            info.set(callback, target, once);\r\n            list.callbackInfos.push(info);\r\n        }\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * @zh 检查指定事件是否已注册回调。\r\n     * @en Checks whether there is correspond event listener registered on the given event\r\n     * @param key - Event type\r\n     * @param callback - Callback function when event triggered\r\n     * @param target - Callback callee\r\n     */\r\n    public hasEventListener (key: EventTypeClass, callback?: AnyFunction, target?: unknown): boolean {\r\n        const list = this._callbackTable && this._callbackTable[key];\r\n        if (!list) {\r\n            return false;\r\n        }\r\n\r\n        // check any valid callback\r\n        const infos = list.callbackInfos;\r\n        if (!callback) {\r\n            // Make sure no cancelled callbacks\r\n            if (list.isInvoking) {\r\n                for (let i = 0; i < infos.length; ++i) {\r\n                    if (infos[i]) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            } else {\r\n                return infos.length > 0;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < infos.length; ++i) {\r\n            const info = infos[i];\r\n            if (info && info.check() && info.callback === callback && info.target === target) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @zh 移除在特定事件类型中注册的所有回调或在某个目标中注册的所有回调。\r\n     * @en Removes all callbacks registered in a certain event type or all callbacks registered with a certain target\r\n     * @param keyOrTarget - The event type or target with which the listeners will be removed\r\n     */\r\n    public removeAll (keyOrTarget: unknown): void {\r\n        const type = typeof keyOrTarget;\r\n        if (type === 'string' || type === 'number') {\r\n            // remove by key\r\n            const list = this._callbackTable && this._callbackTable[keyOrTarget as string|number];\r\n            if (list) {\r\n                if (list.isInvoking) {\r\n                    list.cancelAll();\r\n                } else {\r\n                    list.clear();\r\n                    callbackListPool.free(list);\r\n                    delete this._callbackTable[keyOrTarget as string|number];\r\n                }\r\n            }\r\n        } else if (keyOrTarget) {\r\n            // remove by target\r\n            for (const key in this._callbackTable) {\r\n                const list = this._callbackTable[key]!;\r\n                if (list.isInvoking) {\r\n                    const infos = list.callbackInfos;\r\n                    for (let i = 0; i < infos.length; ++i) {\r\n                        const info = infos[i];\r\n                        if (info && info.target === keyOrTarget) {\r\n                            list.cancel(i);\r\n                        }\r\n                    }\r\n                } else {\r\n                    list.removeByTarget(keyOrTarget);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh 删除以指定事件，回调函数，目标注册的回调。\r\n     * @en Remove event listeners registered with the given event key, callback and target\r\n     * @param key - Event type\r\n     * @param callback - The callback function of the event listener, if absent all event listeners for the given type will be removed\r\n     * @param target - The callback callee of the event listener\r\n     */\r\n    public off (key: EventTypeClass, callback?: AnyFunction, target?: unknown): void {\r\n        const list = this._callbackTable && this._callbackTable[key];\r\n        if (list) {\r\n            const infos = list.callbackInfos;\r\n            if (callback) {\r\n                for (let i = 0; i < infos.length; ++i) {\r\n                    const info = infos[i];\r\n                    if (info && info.callback === callback && info.target === target) {\r\n                        list.cancel(i);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                this.removeAll(key);\r\n            }\r\n        }\r\n        this._offCallback?.();\r\n    }\r\n\r\n    /**\r\n     * @zh 派发一个指定事件，并传递需要的参数\r\n     * @en Trigger an event directly with the event name and necessary arguments.\r\n     * @param key - event type\r\n     * @param arg0 - The first argument to be passed to the callback\r\n     * @param arg1 - The second argument to be passed to the callback\r\n     * @param arg2 - The third argument to be passed to the callback\r\n     * @param arg3 - The fourth argument to be passed to the callback\r\n     * @param arg4 - The fifth argument to be passed to the callback\r\n     */\r\n    public emit (key: EventTypeClass, arg0?: any, arg1?: any, arg2?: any, arg3?: any, arg4?: any): void {\r\n        const list: CallbackList = this._callbackTable && this._callbackTable[key]!;\r\n        if (list) {\r\n            const rootInvoker = !list.isInvoking;\r\n            list.isInvoking = true;\r\n\r\n            const infos = list.callbackInfos;\r\n            for (let i = 0, len = infos.length; i < len; ++i) {\r\n                const info = infos[i];\r\n                if (info) {\r\n                    const callback = info.callback;\r\n                    const target = info.target;\r\n                    // Pre off once callbacks to avoid influence on logic in callback\r\n                    if (info.once) {\r\n                        this.off(key, callback, target);\r\n                    }\r\n                    // Lazy check validity of callback target,\r\n                    // if target is CCObject and is no longer valid, then remove the callback info directly\r\n                    if (!info.check()) {\r\n                        this.off(key, callback, target);\r\n                    } else if (target) {\r\n                        callback.call(target, arg0, arg1, arg2, arg3, arg4);\r\n                    } else {\r\n                        callback(arg0, arg1, arg2, arg3, arg4);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (rootInvoker) {\r\n                list.isInvoking = false;\r\n                if (list.containCanceled) {\r\n                    list.purgeCanceled();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除所有回调。\r\n     */\r\n    public clear (): void {\r\n        for (const key in this._callbackTable) {\r\n            const list = this._callbackTable[key];\r\n            if (list) {\r\n                list.clear();\r\n                callbackListPool.free(list);\r\n                delete this._callbackTable[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _registerOffCallback (cb: () => void): void {\r\n        this._offCallback = cb;\r\n    }\r\n}\r\n\r\nif (TEST) {\r\n    legacyCC._Test.CallbacksInvoker = CallbacksInvoker;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CallbacksInvoker } from './callbacks-invoker';\r\nimport { createMap } from '../utils/js';\r\n\r\ntype Constructor<T> = new (...args: any[]) => T;\r\n\r\ntype EventType = string | number;\r\n\r\n/**\r\n * @zh\r\n * 实现该接口的对象具有处理事件的能力。\r\n * @en\r\n * Objects those implement this interface have essentially the capability to process events.\r\n */\r\nexport interface IEventified {\r\n    /**\r\n     * @zh 检查指定事件是否已注册回调。\r\n     * @en Checks whether there is correspond event listener registered on the given event.\r\n     * @param type - Event type.\r\n     * @param callback - Callback function when event triggered.\r\n     * @param target - Callback callee.\r\n     */\r\n    hasEventListener (type: string, callback?: (...args: any[]) => void, target?: any): boolean;\r\n\r\n    /**\r\n     * @en\r\n     * Register an callback of a specific event type on the EventTarget.\r\n     * This type of event should be triggered via `emit`.\r\n     * @zh\r\n     * 注册事件目标的特定事件类型回调。这种类型的事件应该被 `emit` 触发。\r\n     *\r\n     * @param type - A string representing the event type to listen for.\r\n     * @param callback - The callback that will be invoked when the event is dispatched.\r\n     *                              The callback is ignored if it is a duplicate (the callbacks are unique).\r\n     * @param thisArg - The target (this object) to invoke the callback, can be null\r\n     * @return - Just returns the incoming callback so you can save the anonymous function easier.\r\n     * @example\r\n     * import { log } from 'cc';\r\n     * eventTarget.on('fire', function () {\r\n     *     log(\"fire in the hole\");\r\n     * }, node);\r\n     */\r\n    on<TFunction extends (...args: any[]) => void> (type: EventType, callback: TFunction, thisArg?: any, once?: boolean): typeof callback;\r\n\r\n    /**\r\n     * @en\r\n     * Register an callback of a specific event type on the EventTarget,\r\n     * the callback will remove itself after the first time it is triggered.\r\n     * @zh\r\n     * 注册事件目标的特定事件类型回调，回调会在第一时间被触发后删除自身。\r\n     *\r\n     * @param type - A string representing the event type to listen for.\r\n     * @param callback - The callback that will be invoked when the event is dispatched.\r\n     *                              The callback is ignored if it is a duplicate (the callbacks are unique).\r\n     * @param target - The target (this object) to invoke the callback, can be null\r\n     * @example\r\n     * import { log } from 'cc';\r\n     * eventTarget.once('fire', function () {\r\n     *     log(\"this is the callback and will be invoked only once\");\r\n     * }, node);\r\n     */\r\n    once<TFunction extends (...args: any[]) => void> (type: EventType, callback: TFunction, thisArg?: any): typeof callback;\r\n\r\n    /**\r\n     * @en\r\n     * Removes the listeners previously registered with the same type, callback, target and or useCapture,\r\n     * if only type is passed as parameter, all listeners registered with that type will be removed.\r\n     * @zh\r\n     * 删除之前用同类型，回调，目标或 useCapture 注册的事件监听器，如果只传递 type，将会删除 type 类型的所有事件监听器。\r\n     *\r\n     * @param type - A string representing the event type being removed.\r\n     * @param callback - The callback to remove.\r\n     * @param target - The target (this object) to invoke the callback, if it's not given, only callback without target will be removed\r\n     * @example\r\n     * import { log } from 'cc';\r\n     * // register fire eventListener\r\n     * var callback = eventTarget.on('fire', function () {\r\n     *     log(\"fire in the hole\");\r\n     * }, target);\r\n     * // remove fire event listener\r\n     * eventTarget.off('fire', callback, target);\r\n     * // remove all fire event listeners\r\n     * eventTarget.off('fire');\r\n     */\r\n    off<TFunction extends (...args: any[]) => void> (type: EventType, callback?: TFunction, thisArg?: any): void;\r\n\r\n    /**\r\n     * @en Removes all callbacks previously registered with the same target (passed as parameter).\r\n     * This is not for removing all listeners in the current event target,\r\n     * and this is not for removing all listeners the target parameter have registered.\r\n     * It's only for removing all listeners (callback and target couple) registered on the current event target by the target parameter.\r\n     * @zh 在当前 EventTarget 上删除指定目标（target 参数）注册的所有事件监听器。\r\n     * 这个函数无法删除当前 EventTarget 的所有事件监听器，也无法删除 target 参数所注册的所有事件监听器。\r\n     * 这个函数只能删除 target 参数在当前 EventTarget 上注册的所有事件监听器。\r\n     * @param typeOrTarget - The target to be searched for all related listeners\r\n     */\r\n    targetOff (typeOrTarget: any): void;\r\n\r\n    /**\r\n     * @zh 移除在特定事件类型中注册的所有回调或在某个目标中注册的所有回调。\r\n     * @en Removes all callbacks registered in a certain event type or all callbacks registered with a certain target\r\n     * @param typeOrTarget - The event type or target with which the listeners will be removed\r\n     */\r\n    removeAll (typeOrTarget: any): void;\r\n\r\n    /**\r\n     * @zh 派发一个指定事件，并传递需要的参数\r\n     * @en Trigger an event directly with the event name and necessary arguments.\r\n     * @param type - event type\r\n     * @param args - Arguments when the event triggered\r\n     */\r\n    emit (type: EventType, arg0?: any, arg1?: any, arg2?: any, arg3?: any, arg4?: any): void;\r\n}\r\n\r\n/**\r\n * @en Generate a new class from the given base class, after polyfill all functionalities in [[IEventified]] as if it's extended from [[EventTarget]]\r\n * @zh 生成一个类，该类继承自指定的基类，并以和 [[EventTarget]] 等同的方式实现了 [[IEventified]] 的所有接口。\r\n * @param base The base class\r\n * @example\r\n * ```ts\r\n * class Base { say() { console.log('Hello!'); } }\r\n * class MyClass extends Eventify(Base) { }\r\n * function (o: MyClass) {\r\n *     o.say(); // Ok: Extend from `Base`\r\n *     o.emit('sing', 'The ghost'); // Ok: `MyClass` implements IEventified\r\n * }\r\n * ```\r\n */\r\nexport function Eventify<TBase> (base: Constructor<TBase>): Constructor<TBase & IEventified> {\r\n    class Eventified extends (base as unknown as any) {\r\n        /**\r\n         * @dontmangle\r\n         * NOTE: Eventified mixins all properties from CallbacksInvoker.prototype in the following code.\r\n         * After invoking `Eventify` for a class, CallbacksInvoker's constructor will not be called,\r\n         * but its functions may invoke `this._callbackTable` which is declared as `public` in CallbacksInvoker.\r\n         * Marking it as dontmangle is a workaround to avoid the issue that `this._callbackTable` is not defined.\r\n         */\r\n        protected _callbackTable = createMap(true);\r\n\r\n        public once<Callback extends (...any) => void> (type: EventType, callback: Callback, target?: any): Callback {\r\n            return this.on(type, callback, target, true) as Callback;\r\n        }\r\n\r\n        public targetOff (typeOrTarget: any): void {\r\n            this.removeAll(typeOrTarget);\r\n        }\r\n    }\r\n\r\n    // Mixin with `CallbacksInvokers`'s prototype\r\n    const callbacksInvokerPrototype = CallbacksInvoker.prototype;\r\n    const propertyKeys: (string | symbol)[] = (Object.getOwnPropertyNames(callbacksInvokerPrototype) as (string | symbol)[]).concat(\r\n        Object.getOwnPropertySymbols(callbacksInvokerPrototype),\r\n    );\r\n    for (let iPropertyKey = 0; iPropertyKey < propertyKeys.length; ++iPropertyKey) {\r\n        const propertyKey = propertyKeys[iPropertyKey];\r\n        if (!(propertyKey in Eventified.prototype)) {\r\n            const propertyDescriptor = Object.getOwnPropertyDescriptor(callbacksInvokerPrototype, propertyKey);\r\n            if (propertyDescriptor) {\r\n                Object.defineProperty(Eventified.prototype, propertyKey, propertyDescriptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    return Eventified as unknown as Constructor<TBase & IEventified>;\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { legacyCC } from '../global-exports';\r\nimport { Eventify } from './eventify';\r\n\r\nclass Empty {}\r\n\r\n/**\r\n * @en\r\n * EventTarget is an object to which an event is dispatched when something has occurred.\r\n * [[Node]]s are the most common event targets, but other objects can be event targets too.\r\n * If a class cannot extend from EventTarget, it can consider using [[Eventify]].\r\n *\r\n * @zh\r\n * 事件目标是具有注册监听器、派发事件能力的类，[[Node]] 是最常见的事件目标，\r\n * 但是其他类也可以继承自事件目标以获得管理监听器和派发事件的能力。\r\n * 如果无法继承自 EventTarget，也可以使用 [[Eventify]]\r\n */\r\nexport const EventTarget = Eventify(Empty);\r\n\r\nexport type EventTarget = InstanceType<typeof EventTarget>;\r\n\r\nlegacyCC.EventTarget = EventTarget;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum BrowserType {\r\n    /**\r\n     * @en Browser Type - Unknown\r\n     * @zh 浏览器类型 - 未知\r\n     */\r\n    UNKNOWN = 'unknown',\r\n    /**\r\n     * @en Browser Type - WeChat inner browser\r\n     * @zh 浏览器类型 - 微信内置浏览器\r\n     */\r\n    WECHAT = 'wechat',\r\n    /**\r\n     * @en Browser Type - Android Browser\r\n     * @zh 浏览器类型 - 安卓浏览器\r\n     */\r\n    ANDROID = 'androidbrowser',\r\n    /**\r\n     * @en Browser Type - Internet Explorer\r\n     * @zh 浏览器类型 - 微软 IE\r\n     */\r\n    IE = 'ie',\r\n    /**\r\n     * @en Browser Type - Microsoft Edge\r\n     * @zh 浏览器类型 - 微软 Edge\r\n     */\r\n    EDGE = 'edge',\r\n    /**\r\n     * @en Browser Type - QQ Browser\r\n     * @zh 浏览器类型 - QQ 浏览器\r\n     */\r\n    QQ = 'qqbrowser',\r\n    /**\r\n     * @en Browser Type - Mobile QQ Browser\r\n     * @zh 浏览器类型 - 手机 QQ 浏览器\r\n     */\r\n    MOBILE_QQ = 'mqqbrowser',\r\n    /**\r\n     * @en Browser Type - UC Browser\r\n     * @zh 浏览器类型 - UC 浏览器\r\n     */\r\n    UC = 'ucbrowser',\r\n    /**\r\n     * @en Browser Type - Third party integrated UC browser\r\n     * @zh 浏览器类型 - 第三方应用中集成的 UC 浏览器\r\n     */\r\n    UCBS = 'ucbs',\r\n    /**\r\n     * @en Browser Type - 360 Browser\r\n     * @zh 浏览器类型 - 360 浏览器\r\n     */\r\n    BROWSER_360 = '360browser',\r\n    /**\r\n     * @en Browser Type - Baidu Box App\r\n     * @zh 浏览器类型 - Baidu Box App\r\n     */\r\n    BAIDU_APP = 'baiduboxapp',\r\n    /**\r\n     * @en Browser Type - Baidu Browser\r\n     * @zh 浏览器类型 - 百度浏览器\r\n     */\r\n    BAIDU = 'baidubrowser',\r\n    /**\r\n     * @en Browser Type - Maxthon Browser\r\n     * @zh 浏览器类型 - 傲游浏览器\r\n     */\r\n    MAXTHON = 'maxthon',\r\n    /**\r\n     * @en Browser Type - Opera Browser\r\n     * @zh 浏览器类型 - Opera 浏览器\r\n     */\r\n    OPERA = 'opera',\r\n    /**\r\n     * @en Browser Type - Oupeng Browser\r\n     * @zh 浏览器类型 - 欧朋浏览器\r\n     */\r\n    OUPENG = 'oupeng',\r\n    /**\r\n     * @en Browser Type - MI UI Browser\r\n     * @zh 浏览器类型 - MIUI 内置浏览器\r\n     */\r\n    MIUI = 'miuibrowser',\r\n    /**\r\n     * @en Browser Type - Firefox Browser\r\n     * @zh 浏览器类型 - Firefox 浏览器\r\n     */\r\n    FIREFOX = 'firefox',\r\n    /**\r\n     * @en Browser Type - Safari Browser\r\n     * @zh 浏览器类型 - Safari 浏览器\r\n     */\r\n    SAFARI = 'safari',\r\n    /**\r\n     * @en Browser Type - Chrome Browser\r\n     * @zh 浏览器类型 - Chrome 浏览器\r\n     */\r\n    CHROME = 'chrome',\r\n    /**\r\n     * @en Browser Type - Cheetah Browser\r\n     * @zh 浏览器类型 - 猎豹浏览器\r\n     */\r\n    LIEBAO = 'liebao',\r\n    /**\r\n     * @en Browser Type - QZone Inner Browser\r\n     * @zh 浏览器类型 - QZone 内置浏览器\r\n     */\r\n    QZONE = 'qzone',\r\n    /**\r\n     * @en Browser Type - Sogou Browser\r\n     * @zh 浏览器类型 - 搜狗浏览器\r\n     */\r\n    SOUGOU = 'sogou',\r\n    /**\r\n     * @en Browser Type - Huawei Browser\r\n     * @zh 浏览器类型 - 华为浏览器\r\n     */\r\n    HUAWEI = 'huawei',\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum Language {\r\n    /**\r\n     * @en Unknown language code\r\n     * @zh 语言代码 - 未知\r\n     */\r\n    UNKNOWN = 'unknown',\r\n\r\n    /**\r\n     * @en English language code\r\n     * @zh 语言代码 - 英语\r\n     */\r\n    ENGLISH = 'en',\r\n\r\n    /**\r\n     * @en Chinese language code\r\n     * @zh 语言代码 - 中文\r\n     */\r\n    CHINESE = 'zh',\r\n\r\n    /**\r\n     * @en French language code\r\n     * @zh 语言代码 - 法语\r\n     */\r\n    FRENCH = 'fr',\r\n\r\n    /**\r\n     * @en Italian language code\r\n     * @zh 语言代码 - 意大利语\r\n     */\r\n    ITALIAN = 'it',\r\n\r\n    /**\r\n     * @en German language code\r\n     * @zh 语言代码 - 德语\r\n     */\r\n    GERMAN = 'de',\r\n\r\n    /**\r\n     * @en Spanish language code\r\n     * @zh 语言代码 - 西班牙语\r\n     */\r\n    SPANISH = 'es',\r\n\r\n    /**\r\n     * @en Spanish language code\r\n     * @zh 语言代码 - 荷兰语\r\n     */\r\n    DUTCH = 'du',\r\n\r\n    /**\r\n     * @en Russian language code\r\n     * @zh 语言代码 - 俄罗斯语\r\n     */\r\n    RUSSIAN = 'ru',\r\n\r\n    /**\r\n     * @en Korean language code\r\n     * @zh 语言代码 - 韩语\r\n     */\r\n    KOREAN = 'ko',\r\n\r\n    /**\r\n     * @en Japanese language code\r\n     * @zh 语言代码 - 日语\r\n     */\r\n    JAPANESE = 'ja',\r\n\r\n    /**\r\n     * @en Hungarian language code\r\n     * @zh 语言代码 - 匈牙利语\r\n     */\r\n    HUNGARIAN = 'hu',\r\n\r\n    /**\r\n     * @en Portuguese language code\r\n     * @zh 语言代码 - 葡萄牙语\r\n     */\r\n    PORTUGUESE = 'pt',\r\n\r\n    /**\r\n     * @en Arabic language code\r\n     * @zh 语言代码 - 阿拉伯语\r\n     */\r\n    ARABIC = 'ar',\r\n\r\n    /**\r\n     * @en Norwegian language code\r\n     * @zh 语言代码 - 挪威语\r\n     */\r\n    NORWEGIAN = 'no',\r\n\r\n    /**\r\n     * @en Polish language code\r\n     * @zh 语言代码 - 波兰语\r\n     */\r\n    POLISH = 'pl',\r\n\r\n    /**\r\n     * @en Turkish language code\r\n     * @zh 语言代码 - 土耳其语\r\n     */\r\n    TURKISH = 'tr',\r\n\r\n    /**\r\n     * @en Ukrainian language code\r\n     * @zh 语言代码 - 乌克兰语\r\n     */\r\n    UKRAINIAN = 'uk',\r\n\r\n    /**\r\n     * @en Romanian language code\r\n     * @zh 语言代码 - 罗马尼亚语\r\n     */\r\n    ROMANIAN = 'ro',\r\n\r\n    /**\r\n     * @en Bulgarian language code\r\n     * @zh 语言代码 - 保加利亚语\r\n     */\r\n    BULGARIAN = 'bg',\r\n\r\n    /**\r\n     * @en Hindi language code\r\n     * @zh 语言代码 - 印度语\r\n     */\r\n    HINDI = 'hi',\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum NetworkType {\r\n    /**\r\n     * @en Network is unreachable.\r\n     * @zh 网络不通\r\n     */\r\n    NONE,\r\n    /**\r\n     * @en Network is reachable via WiFi or cable.\r\n     * @zh 通过无线或者有线本地网络连接因特网\r\n     */\r\n    LAN,\r\n    /**\r\n     * @en Network is reachable via Wireless Wide Area Network\r\n     * @zh 通过蜂窝移动网络连接因特网\r\n     */\r\n    WWAN,\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum OS {\r\n    /**\r\n     * @en Operating System - Unknown\r\n     * @zh 操作系统 - 未知\r\n     */\r\n    UNKNOWN = 'Unknown',\r\n    /**\r\n     * @en Operating System - iOS\r\n     * @zh 操作系统 - iOS\r\n     */\r\n    IOS = 'iOS',\r\n    /**\r\n     * @en Operating System - Android\r\n     * @zh 操作系统 - 安卓\r\n     */\r\n    ANDROID = 'Android',\r\n    /**\r\n     * @en Operating System - Windows\r\n     * @zh 操作系统 - Windows\r\n     */\r\n    WINDOWS = 'Windows',\r\n    /**\r\n     * @en Operating System - Linux\r\n     * @zh 操作系统 - Linux\r\n     */\r\n    LINUX = 'Linux',\r\n    /**\r\n     * @en Operating System - Mac OS X\r\n     * @zh 操作系统 - Mac OS X\r\n     */\r\n    OSX = 'OS X',\r\n    /**\r\n     * @en Operating System - HarmonyOS\r\n     * @zh 操作系统 - 鸿蒙\r\n     */\r\n    OHOS = 'OHOS',\r\n    /**\r\n     * @en Operating System - OpenHarmony\r\n     * @zh 操作系统 - OpenHarmony\r\n     */\r\n    OPENHARMONY = 'OpenHarmony',\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum Platform {\r\n    UNKNOWN = 'UNKNOWN',\r\n    // Web Based\r\n    EDITOR_PAGE = 'EDITOR_PAGE',\r\n    EDITOR_CORE = 'EDITOR_CORE',\r\n    MOBILE_BROWSER = 'MOBILE_BROWSER',\r\n    DESKTOP_BROWSER = 'DESKTOP_BROWSER',\r\n    // Native\r\n    WIN32 = 'WIN32',\r\n    ANDROID = 'ANDROID',\r\n    IOS = 'IOS',\r\n    MACOS = 'MACOS',\r\n    OHOS = 'OHOS',\r\n    OPENHARMONY = 'OPENHARMONY',\r\n    // Minigame\r\n    WECHAT_GAME = 'WECHAT_GAME',\r\n    WECHAT_MINI_PROGRAM = 'WECHAT_MINI_PROGRAM',\r\n    XIAOMI_QUICK_GAME = 'XIAOMI_QUICK_GAME',\r\n    ALIPAY_MINI_GAME = 'ALIPAY_MINI_GAME',\r\n    TAOBAO_CREATIVE_APP = 'TAOBAO_CREATIVE_APP',\r\n    TAOBAO_MINI_GAME = 'TAOBAO_MINI_GAME',\r\n    BYTEDANCE_MINI_GAME = 'BYTEDANCE_MINI_GAME',\r\n    // Runtime Based\r\n    OPPO_MINI_GAME = 'OPPO_MINI_GAME',\r\n    VIVO_MINI_GAME = 'VIVO_MINI_GAME',\r\n    HUAWEI_QUICK_GAME = 'HUAWEI_QUICK_GAME',\r\n    MIGU_MINI_GAME = 'MIGU_MINI_GAME',\r\n    HONOR_MINI_GAME = 'HONOR_MINI_GAME',\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum Feature {\r\n    /**\r\n     * @en Feature to support Webp.\r\n     * @zh 是否支持 Webp 特性。\r\n     */\r\n    WEBP = 'WEBP',\r\n    /**\r\n     * @en Feature to support Image Bitmap.\r\n     * @zh 是否支持 Image Bitmap 特性。\r\n     */\r\n    IMAGE_BITMAP = 'IMAGE_BITMAP',\r\n    /**\r\n     * @en Feature to support Web View.\r\n     * @zh 是否支持 Web View 特性。\r\n     */\r\n    WEB_VIEW = 'WEB_VIEW',\r\n    /**\r\n     * @en Feature to support Video Player.\r\n     * @zh 是否支持 Video Player 特性。\r\n     */\r\n    VIDEO_PLAYER = 'VIDEO_PLAYER',\r\n    /**\r\n     * @en Feature to support Safe Area.\r\n     * @zh 是否支持 Safe Area 特性。\r\n     */\r\n    SAFE_AREA = 'SAFE_AREA',\r\n\r\n    /**\r\n     * @en Feature to support HPE (high performance emulator) platforms, such as Google Play Games For PC.\r\n     * @zh 是否支持 HPE 平台, 比如: Android 的 Google Play Games 在 PC 上的模拟器.\r\n     */\r\n    HPE = 'HPE',\r\n\r\n    /**\r\n     * @en Feature to support Touch Input.\r\n     * Touch Input is only supported on some devices with touch screen.\r\n     * This feature tells that whether the device has a touch screen.\r\n     * @zh 是否支持触摸输入。\r\n     * 触摸输入只在一些带触摸屏的设备上支持。\r\n     * 这个特性旨在说明设备上是否带触摸屏。\r\n     */\r\n    INPUT_TOUCH = 'INPUT_TOUCH',\r\n    /**\r\n     * @en Feature to support dispatching EventKeyboard.\r\n     * @zh 是否支持派发 EventKeyboard。\r\n     */\r\n    EVENT_KEYBOARD = 'EVENT_KEYBOARD',\r\n    /**\r\n     * @en Feature to support dispatching EventMouse.\r\n     * @zh 是否支持派发 EventMouse。\r\n     */\r\n    EVENT_MOUSE = 'EVENT_MOUSE',\r\n    /**\r\n     * @en Feature to support dispatching EventTouch.\r\n     * On some devices without touch screen, we still can simulate dispatching EventTouch from EventMouse.\r\n     * @zh 是否支持派发 EventTouch。\r\n     * 在一些不带触摸屏的设备上，我们仍然会从 EventMouse 模拟派发 EventTouch。\r\n     */\r\n    EVENT_TOUCH = 'EVENT_TOUCH',\r\n    /**\r\n     * @en Feature to support dispatching EventAcceleration.\r\n     * @zh 是否支持派发 EventAcceleration。\r\n     */\r\n    EVENT_ACCELEROMETER = 'EVENT_ACCELEROMETER',\r\n    /**\r\n     * @en Feature to support dispatching EventGamepad.\r\n     * @zh 是否支持派发 EventGamepad.\r\n     */\r\n    EVENT_GAMEPAD = 'EVENT_GAMEPAD',\r\n    /**\r\n     * @en Feature to support dispatching EventHandle.\r\n     * @zh 是否支持派发 EventHandle\r\n     */\r\n    EVENT_HANDLE = 'EVENT_HANDLE',\r\n    /**\r\n     * @en Feature to support dispatching EventHMD.\r\n     * @zh 是否支持派发 EventHMD\r\n     */\r\n    EVENT_HMD = 'EVENT_HMD',\r\n    /**\r\n     * @en Feature to support dispatching EventHandheld.\r\n     * @zh 是否支持派发 EventHandheld\r\n     */\r\n    EVENT_HANDHELD = 'EVENT_HANDHELD',\r\n    /**\r\n     * @en Check whether Webassembly is supported at runtime. Generally, it needs to be checked when the constant `NATIVE_CODE_BUNDLE_MODE` is 2.\r\n     * If it is not supported, you need to fallback to the Asm solution.\r\n     * @zh 运行时检测是否支持 Webassembly，一般在宏 `NATIVE_CODE_BUNDLE_MODE` 为 2 时需要检测，如果不支持，需要回滚到 Asm 方案\r\n     */\r\n    WASM = 'WASM',\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { array } from '../utils/js';\r\n\r\n/**\r\n * @zh\r\n * Async Delegate 用于支持异步回调的代理，你可以新建一个异步代理，并注册异步回调，等到对应的时机触发代理事件。\r\n *\r\n * @en\r\n * Async Delegate is a delegate that supports asynchronous callbacks.\r\n * You can create a new AsyncDelegate, register the asynchronous callback, and wait until the corresponding time to dispatch the event.\r\n *\r\n * @example\r\n * ```ts\r\n * const ad = new AsyncDelegate();\r\n * ad.add(() => {\r\n *     return new Promise((resolve, reject) => {\r\n *        setTimeout(() => {\r\n *            console.log('hello world');\r\n *            resolve();\r\n *        }, 1000);\r\n *     })\r\n * });\r\n * await ad.dispatch();\r\n * ```\r\n */\r\nexport class AsyncDelegate<T extends (...args: any) => (Promise<void> | void) = () => (Promise<void> | void)> {\r\n    private _delegates: T[] = [];\r\n\r\n    /**\r\n     * @en\r\n     * Add an async callback or sync callback.\r\n     *\r\n     * @zh\r\n     * 添加一个异步回调或同步回调。\r\n     *\r\n     * @param callback\r\n     * @en The callback to add, and will be invoked when this delegate is dispatching.\r\n     * @zh 要添加的回调，并将在该委托调度时被调用。\r\n     */\r\n    public add (callback: T): void {\r\n        if (!this._delegates.includes(callback)) {\r\n            this._delegates.push(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 查询是否已注册某个回调。\r\n     * @en\r\n     * Queries if a callback has been registered.\r\n     *\r\n     * @param callback @en The callback to query. @zh 要查询的回调函数。\r\n     * @returns @en Whether the callback has been added. @zh 是否已经添加了回调。\r\n     */\r\n    public hasListener (callback: T): boolean {\r\n        return this._delegates.includes(callback);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Remove the specific callback of this delegate.\r\n     *\r\n     * @zh\r\n     * 移除此代理中某个具体的回调。\r\n     *\r\n     * @param callback @en The callback to remove. @zh 要移除的某个回调。\r\n     */\r\n    public remove (callback: T): void {\r\n        array.fastRemove(this._delegates, callback);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Dispatching the delegate event. This function will trigger all previously registered callbacks and does not guarantee execution order.\r\n     *\r\n     * @zh\r\n     * 派发代理事件。此函数会触发所有之前注册的回调，并且不保证执行顺序。\r\n     *\r\n     * @param args @en The parameters to be transferred to callback. @zh 传递给回调函数的参数。\r\n     * @returns @en The promise awaiting all async callback resolved. @zh 等待所有异步回调结束的 Promise 对象。\r\n     */\r\n    public dispatch (...args: Parameters<T>): Promise<void[]> {\r\n        return Promise.all(this._delegates.map((func) => func(...arguments)).filter(Boolean));\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG, EDITOR, PREVIEW, TEST } from 'internal:constants';\r\nimport { IFeatureMap } from 'pal/system-info';\r\nimport { EventTarget } from '../../../cocos/core/event';\r\nimport { checkPalIntegrity, withImpl } from '../../integrity-check';\r\nimport { BrowserType, NetworkType, OS, Platform, Language, Feature } from '../enum-type';\r\nimport { warn } from '../../../cocos/core/platform/debug';\r\n\r\nclass SystemInfo extends EventTarget {\r\n    public declare readonly networkType: NetworkType;\r\n    public declare readonly isNative: boolean;\r\n    public declare readonly isBrowser: boolean;\r\n    public declare readonly isMobile: boolean;\r\n    public declare readonly isLittleEndian: boolean;\r\n    public declare readonly platform: Platform;\r\n    public declare readonly language: Language;\r\n    public declare readonly nativeLanguage: string;\r\n    public declare readonly os: OS;\r\n    public declare readonly osVersion: string;\r\n    public declare readonly osMainVersion: number;\r\n    public declare readonly browserType: BrowserType;\r\n    public declare readonly browserVersion: string;\r\n    public declare readonly isXR: boolean;\r\n    private _battery: any = null;\r\n    private declare _featureMap: IFeatureMap;\r\n    private _initPromise: Promise<void>[] = [];\r\n\r\n    constructor () {\r\n        super();\r\n        const nav = window.navigator;\r\n        const ua = nav.userAgent.toLowerCase();\r\n        // NOTE: getBattery is not totally supported on Web standard\r\n        (nav as any).getBattery?.().then((battery) => {\r\n            this._battery = battery;\r\n        });\r\n\r\n        this.networkType = NetworkType.LAN;  // TODO\r\n        this.isNative = false;\r\n        this.isBrowser = true;\r\n\r\n        // init isMobile and platform\r\n        if (EDITOR) {\r\n            this.isMobile = false;\r\n            this.platform = Platform.EDITOR_PAGE;  // TODO\r\n        } else {\r\n            this.isMobile = /mobile|android|iphone|ipad/.test(ua);\r\n            this.platform = this.isMobile ? Platform.MOBILE_BROWSER : Platform.DESKTOP_BROWSER;\r\n        }\r\n\r\n        // init isLittleEndian\r\n        this.isLittleEndian = ((): boolean => {\r\n            const buffer = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true);\r\n            // Int16Array uses the platform's endianness.\r\n            return new Int16Array(buffer)[0] === 256;\r\n        })();\r\n\r\n        // init languageCode and language\r\n        let currLanguage = nav.language;\r\n        this.nativeLanguage = currLanguage.toLowerCase();\r\n        currLanguage = currLanguage || (nav as any).browserLanguage;\r\n        currLanguage = currLanguage ? currLanguage.split('-')[0] : Language.ENGLISH;\r\n        this.language = currLanguage as Language;\r\n\r\n        // init os, osVersion and osMainVersion\r\n        let isAndroid = false; let iOS = false; let osVersion = ''; let osMajorVersion = 0;\r\n        let uaResult = /android\\s*(\\d+(?:\\.\\d+)*)/i.exec(ua) || /android\\s*(\\d+(?:\\.\\d+)*)/i.exec(nav.platform);\r\n        if (uaResult) {\r\n            isAndroid = true;\r\n            osVersion = uaResult[1] || '';\r\n            osMajorVersion = parseInt(osVersion) || 0;\r\n        }\r\n        uaResult = /(iPad|iPhone|iPod).*OS ((\\d+_?){2,3})/i.exec(ua);\r\n        if (uaResult) {\r\n            iOS = true;\r\n            osVersion = uaResult[2] || '';\r\n            osMajorVersion = parseInt(osVersion) || 0;\r\n            // refer to https://github.com/cocos-creator/engine/pull/5542 , thanks for contribition from @krapnikkk\r\n            // ipad OS 13 safari identifies itself as \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko)\"\r\n            // so use maxTouchPoints to check whether it's desktop safari or not.\r\n            // reference: https://stackoverflow.com/questions/58019463/how-to-detect-device-name-in-safari-on-ios-13-while-it-doesnt-show-the-correct\r\n            // FIXME: should remove it when touch-enabled mac are available\r\n            // TODO: due to compatibility issues, it is still determined to be ios, and a new operating system type ipados may be added later？\r\n        } else if (/(iPhone|iPad|iPod)/.exec(nav.platform) || (nav.platform === 'MacIntel' && nav.maxTouchPoints && nav.maxTouchPoints > 1)) {\r\n            iOS = true;\r\n            osVersion = '';\r\n            osMajorVersion = 0;\r\n        }\r\n\r\n        let osName = OS.UNKNOWN;\r\n        if (nav.appVersion.indexOf('Win') !== -1) {\r\n            osName = OS.WINDOWS;\r\n        } else if (iOS) {\r\n            osName = OS.IOS;\r\n        } else if (nav.appVersion.indexOf('Mac') !== -1) {\r\n            osName = OS.OSX;\r\n        } else if (nav.appVersion.indexOf('X11') !== -1 && nav.appVersion.indexOf('Linux') === -1) {\r\n            osName = OS.LINUX;\r\n        } else if (isAndroid) {\r\n            osName = OS.ANDROID;\r\n        } else if (nav.appVersion.indexOf('Linux') !== -1 || ua.indexOf('ubuntu') !== -1) {\r\n            osName = OS.LINUX;\r\n        }\r\n\r\n        this.os = osName;\r\n        this.osVersion = osVersion;\r\n        this.osMainVersion = osMajorVersion;\r\n\r\n        // TODO: use dack-type to determine the browserType\r\n        // init browserType and browserVersion\r\n        this.browserType = BrowserType.UNKNOWN;\r\n        const typeReg0 = /wechat|weixin|micromessenger/i;\r\n        const typeReg1 = /mqqbrowser|micromessenger|qqbrowser|sogou|qzone|liebao|maxthon|ucbs|360 aphone|360browser|baiduboxapp|baidubrowser|maxthon|mxbrowser|miuibrowser/i;\r\n        const typeReg2 = /qq|qqbrowser|ucbrowser|ubrowser|edge|HuaweiBrowser/i;\r\n        const typeReg3 = /chrome|safari|firefox|trident|opera|opr\\/|oupeng/i;\r\n        const browserTypes = typeReg0.exec(ua) || typeReg1.exec(ua) || typeReg2.exec(ua) || typeReg3.exec(ua);\r\n\r\n        let browserType = browserTypes ? browserTypes[0].toLowerCase() : OS.UNKNOWN;\r\n        if (browserType === 'safari' && isAndroid) {\r\n            browserType = BrowserType.ANDROID;\r\n        } else if (browserType === 'qq' && /android.*applewebkit/i.test(ua)) {\r\n            browserType = BrowserType.ANDROID;\r\n        }\r\n        const typeMap = {\r\n            micromessenger: BrowserType.WECHAT,\r\n            wechat: BrowserType.WECHAT,\r\n            weixin: BrowserType.WECHAT,\r\n            trident: BrowserType.IE,\r\n            edge: BrowserType.EDGE,\r\n            '360 aphone': BrowserType.BROWSER_360,\r\n            mxbrowser: BrowserType.MAXTHON,\r\n            'opr/': BrowserType.OPERA,\r\n            ubrowser: BrowserType.UC,\r\n            huaweibrowser: BrowserType.HUAWEI,\r\n        };\r\n\r\n        this.browserType = typeMap[browserType] || browserType;\r\n\r\n        // init browserVersion\r\n        this.browserVersion = '';\r\n        const versionReg1 = /(mqqbrowser|micromessenger|qqbrowser|sogou|qzone|liebao|maxthon|uc|ucbs|360 aphone|360|baiduboxapp|baidu|maxthon|mxbrowser|miui(?:.hybrid)?)(mobile)?(browser)?\\/?([\\d.]+)/i;\r\n        const versionReg2 = /(qq|chrome|safari|firefox|trident|opera|opr\\/|oupeng)(mobile)?(browser)?\\/?([\\d.]+)/i;\r\n        let tmp = versionReg1.exec(ua);\r\n        if (!tmp) {\r\n            tmp = versionReg2.exec(ua);\r\n        }\r\n        this.browserVersion = tmp ? tmp[4] : '';\r\n\r\n        this.isXR = false;\r\n\r\n        // init capability\r\n        const _tmpCanvas1 = document.createElement('canvas');\r\n        const supportCanvas = TEST ? false : !!_tmpCanvas1.getContext('2d');\r\n        let supportWebGL = false;\r\n        if (TEST) {\r\n            supportWebGL = false;\r\n        } else if (window.WebGLRenderingContext) {\r\n            supportWebGL = true;\r\n        }\r\n        let supportWebp;\r\n        try {\r\n            supportWebp = TEST ? false : _tmpCanvas1.toDataURL('image/webp').startsWith('data:image/webp');\r\n        } catch (e) {\r\n            supportWebp  = false;\r\n        }\r\n        if (this.os === OS.IOS) {\r\n            // if we're on iOS all major browsers will identify as BrowserType.SAFARI but Chrome and Firefox DO NOT have the\r\n            // version in the browser identifier, using \"applewebkit\" solves this issue for all browsers on iOS\r\n            const result = / applewebkit\\/(\\d+)/.exec(ua)?.[1];\r\n            if (typeof result === 'string') {\r\n                if (Number.parseInt(result) >= 604) {\r\n                    // safari 14+ support webp, but canvas.toDataURL is not supported by default\r\n                    supportWebp = true;\r\n                }\r\n            }\r\n        } else if (this.browserType === BrowserType.SAFARI) {\r\n            //non-ios safari (desktop)\r\n            const result = / version\\/(\\d+)/.exec(ua)?.[1];\r\n            if (typeof result === 'string') {\r\n                if (Number.parseInt(result) >= 14) {\r\n                    // safari 14+ support webp, but canvas.toDataURL is not supported by default\r\n                    supportWebp = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        const supportTouch = (document.documentElement.ontouchstart !== undefined || document.ontouchstart !== undefined || EDITOR);\r\n        const supportMouse = document.documentElement.onmouseup !== undefined || EDITOR;\r\n        // NOTE: xr is not totally supported on web\r\n        const supportXR = typeof (navigator as any).xr !== 'undefined';\r\n        // refer https://stackoverflow.com/questions/47879864/how-can-i-check-if-a-browser-supports-webassembly\r\n        const supportWasm = ((): boolean => {\r\n            // NOTE: safari on iOS 15.4 and MacOS 15.4 has some wasm memory issue, can not use wasm for bullet\r\n            const isSafari_15_4 = (this.os === OS.IOS || this.os === OS.OSX) && /(OS 15_4)|(Version\\/15.4)/.test(window.navigator.userAgent);\r\n            if (isSafari_15_4) {\r\n                return false;\r\n            }\r\n            try {\r\n                if (typeof WebAssembly === 'object'\r\n                    && typeof WebAssembly.instantiate === 'function') {\r\n                    const module = new WebAssembly.Module(new Uint8Array([0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00]));\r\n                    if (module instanceof WebAssembly.Module) {\r\n                        return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n            return false;\r\n        })();\r\n        this._featureMap = {\r\n            [Feature.WEBP]: supportWebp,\r\n            [Feature.IMAGE_BITMAP]: false,      // Initialize in Promise\r\n            [Feature.WEB_VIEW]: true,\r\n            [Feature.VIDEO_PLAYER]: true,\r\n            [Feature.SAFE_AREA]: false,\r\n            [Feature.HPE]: false,\r\n\r\n            [Feature.INPUT_TOUCH]: supportTouch,\r\n            [Feature.EVENT_KEYBOARD]: document.documentElement.onkeyup !== undefined || EDITOR,\r\n            [Feature.EVENT_MOUSE]: supportMouse,\r\n            [Feature.EVENT_TOUCH]: supportTouch || supportMouse,\r\n            [Feature.EVENT_ACCELEROMETER]: (window.DeviceMotionEvent !== undefined || window.DeviceOrientationEvent !== undefined),\r\n            // NOTE: webkitGetGamepads is not standard web interface\r\n            [Feature.EVENT_GAMEPAD]: (navigator.getGamepads !== undefined || (navigator as any).webkitGetGamepads !== undefined || supportXR),\r\n            [Feature.EVENT_HANDLE]: EDITOR || PREVIEW,\r\n            [Feature.EVENT_HMD]: supportXR,\r\n            [Feature.EVENT_HANDHELD]: supportXR,\r\n            [Feature.WASM]: supportWasm,\r\n        };\r\n\r\n        this._initPromise.push(this._supportsImageBitmapPromise());\r\n\r\n        this._registerEvent();\r\n    }\r\n\r\n    private _supportsImageBitmapPromise (): Promise<void> {\r\n        if (!TEST && typeof createImageBitmap !== 'undefined' && typeof Blob !== 'undefined') {\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = canvas.height = 2;\r\n            const promise = createImageBitmap(canvas);\r\n            if (promise instanceof Promise) {\r\n                return promise.then((imageBitmap) => {\r\n                    if (imageBitmap && imageBitmap.close) {\r\n                        this._setFeature(Feature.IMAGE_BITMAP, true);\r\n                        imageBitmap.close();\r\n                    }\r\n                });\r\n            } else if (DEBUG) {\r\n                warn('The return value of createImageBitmap is not Promise.');\r\n            }\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        let hiddenPropName: string;\r\n        if (typeof document.hidden !== 'undefined') {\r\n            hiddenPropName = 'hidden';\r\n        } else if (typeof document.mozHidden !== 'undefined') {\r\n            hiddenPropName = 'mozHidden';\r\n        } else if (typeof document.msHidden !== 'undefined') {\r\n            hiddenPropName = 'msHidden';\r\n        } else if (typeof document.webkitHidden !== 'undefined') {\r\n            hiddenPropName = 'webkitHidden';\r\n        } else {\r\n            hiddenPropName = 'hidden';\r\n        }\r\n\r\n        let hidden = false;\r\n        const onHidden = (): void => {\r\n            if (!hidden) {\r\n                hidden = true;\r\n                this.emit('hide');\r\n            }\r\n        };\r\n        // In order to adapt the most of platforms the onshow API.\r\n        const onShown = (arg0?, arg1?, arg2?, arg3?, arg4?): void => {\r\n            if (hidden) {\r\n                hidden = false;\r\n                this.emit('show', arg0, arg1, arg2, arg3, arg4);\r\n            }\r\n        };\r\n\r\n        if (hiddenPropName) {\r\n            const changeList = [\r\n                'visibilitychange',\r\n                'mozvisibilitychange',\r\n                'msvisibilitychange',\r\n                'webkitvisibilitychange',\r\n                'qbrowserVisibilityChange',\r\n            ];\r\n\r\n            for (let i = 0; i < changeList.length; i++) {\r\n                document.addEventListener(changeList[i], (event) => {\r\n                    let visible = document[hiddenPropName];\r\n                    // NOTE: QQ App need hidden property\r\n                    visible = visible || (event as any).hidden;\r\n                    if (visible) {\r\n                        onHidden();\r\n                    } else {\r\n                        onShown();\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            window.addEventListener('blur', onHidden);\r\n            window.addEventListener('focus', onShown);\r\n        }\r\n\r\n        if (window.navigator.userAgent.indexOf('MicroMessenger') > -1) {\r\n            window.onfocus = onShown;\r\n        }\r\n\r\n        if ('onpageshow' in window && 'onpagehide' in window) {\r\n            window.addEventListener('pagehide', onHidden);\r\n            window.addEventListener('pageshow', onShown);\r\n            // Taobao UIWebKit\r\n            document.addEventListener('pagehide', onHidden);\r\n            document.addEventListener('pageshow', onShown);\r\n        }\r\n    }\r\n\r\n    private _setFeature (feature: Feature, value: boolean): boolean {\r\n        return this._featureMap[feature] = value;\r\n    }\r\n\r\n    public init (): Promise<void[]> {\r\n        return Promise.all(this._initPromise);\r\n    }\r\n\r\n    public hasFeature (feature: Feature): boolean {\r\n        return this._featureMap[feature];\r\n    }\r\n\r\n    public getBatteryLevel (): number {\r\n        if (this._battery) {\r\n            return this._battery.level as number;\r\n        } else {\r\n            if (DEBUG) {\r\n                warn('getBatteryLevel is not supported');\r\n            }\r\n            return 1;\r\n        }\r\n    }\r\n    public triggerGC (): void {\r\n        if (DEBUG) {\r\n            warn('triggerGC is not supported.');\r\n        }\r\n    }\r\n    public openURL (url: string): void {\r\n        window.open(url);\r\n    }\r\n    public now (): number {\r\n        if (Date.now) {\r\n            return Date.now();\r\n        }\r\n\r\n        return +(new Date());\r\n    }\r\n    public restartJSVM (): void {\r\n        if (DEBUG) {\r\n            warn('restartJSVM is not supported.');\r\n        }\r\n    }\r\n\r\n    public exit (): void {\r\n        window.close();\r\n    }\r\n\r\n    public close (): void {\r\n        this.emit('close');\r\n    }\r\n}\r\n\r\nexport const systemInfo = new SystemInfo();\r\n\r\ncheckPalIntegrity<typeof import('pal/system-info')>(withImpl<typeof import('./system-info')>());\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n https://www.cocos.com/\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { EDITOR } from 'internal:constants';\r\nimport type { GCObject } from './gc-object';\r\n\r\ndeclare class FinalizationRegistry {\r\n    constructor (callback: (heldObj: any) => void);\r\n    register (obj: any, heldObj: any, token?: any);\r\n    unregister (token: any);\r\n}\r\n\r\nconst targetSymbol = Symbol('[[target]]');\r\n\r\nclass GarbageCollectionManager {\r\n    private _finalizationRegistry: FinalizationRegistry | null = EDITOR && typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistry(this.finalizationRegistryCallback.bind(this)) : null;\r\n    private _gcObjects: WeakMap<any, GCObject> = new WeakMap();\r\n\r\n    constructor () {}\r\n\r\n    public registerGCObject (gcObject: GCObject): GCObject {\r\n        if (EDITOR && this._finalizationRegistry) {\r\n            const token = {};\r\n            const proxy = new Proxy(gcObject, {\r\n                get (target, property, receiver): unknown {\r\n                    if (property === targetSymbol) {\r\n                        return target;\r\n                    }\r\n                    let val = Reflect.get(target, property);\r\n                    if (typeof val === 'function' && property !== 'constructor') {\r\n                        const original = val;\r\n                        // NOTE: fix error - 'this' implicitly has type 'any' because it does not have a type annotation.\r\n                        val = function newFunc (this: any): unknown {\r\n                            return original.apply(this[targetSymbol], arguments) as unknown;\r\n                        };\r\n                    }\r\n                    return val as unknown;\r\n                },\r\n                set (target, prop, value, receiver): true {\r\n                    target[prop] = value;\r\n                    return true;\r\n                },\r\n            });\r\n            this._gcObjects.set(token, gcObject);\r\n            this._finalizationRegistry.register(proxy, token, token);\r\n            return proxy;\r\n        } else {\r\n            return gcObject;\r\n        }\r\n    }\r\n\r\n    public init (): void {\r\n    }\r\n\r\n    private finalizationRegistryCallback (token: any): void {\r\n        if (!EDITOR) return;\r\n        const gcObject = this._gcObjects.get(token);\r\n        if (gcObject) {\r\n            this._gcObjects.delete(token);\r\n            gcObject.destroy();\r\n        }\r\n        this._finalizationRegistry!.unregister(token);\r\n    }\r\n\r\n    public destroy (): void {\r\n    }\r\n}\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nconst garbageCollectionManager = new GarbageCollectionManager();\r\nexport { garbageCollectionManager };\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n http://www.cocos.com\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { garbageCollectionManager } from './garbage-collection';\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport class GCObject {\r\n    constructor () {\r\n        // eslint-disable-next-line no-constructor-return\r\n        return garbageCollectionManager.registerGCObject(this);\r\n    }\r\n\r\n    public destroy (): void {}\r\n}\r\n"],"names":["expr","message","assertIsTrue","objectOrConstructor","propertyName","enumType","setPropertyEnumTypeOnAttrs","getClassAttrs","array","index","length","value","ccdocument","ccwindow","document","logList","ccLog","console","log","bind","ccWarn","ccError","ccAssert","condition","_len","arguments","optionalParams","Array","_key","formatString","concat","ccDebug","_len2","data","_key2","legacyCC","js","formatStr","apply","warn","error","assert","_len3","_key3","debug","_resetDebugSetting","mode","DebugMode","NONE","ERROR","logToWebPage","msg","game","canvas","logDiv","createElement","setAttribute","height","logDivStyle","style","zIndex","position","top","left","logListStyle","backgroundColor","borderBottom","borderTopWidth","borderLeftWidth","borderRightWidth","borderTopStyle","borderLeftStyle","borderRightStyle","padding","margin","appendChild","parentNode","scrollTop","scrollHeight","_len4","_key4","ERROR_FOR_WEB_PAGE","INFO_FOR_WEB_PAGE","_len5","_key5","_len6","_key6","errorText","Error","_len7","_key7","INFO","_len8","_key8","VERBOSE","vendorDebug","_throw","error_","stack","getTypedFormatter","id","debugInfos","_len9","args","_key9","logFormatter","logID","_len10","_key10","debugFormatter","debugID","_len11","_key11","warnFormatter","warnID","_len12","_key12","errorFormatter","errorID","_len13","_key13","assertFormatter","assertID","_len14","_key14","getError","errorId","_len15","param","_key15","isDisplayStats","profiler","isShowingStats","setDisplayStats","displayStats","showStats","hideStats","exports","INT_MAX","sign","v","max","x","y","log2","r","shift","popCount","countTrailingZeros","c","nextPow2","REVERSE_TABLE","tab","i","s","INT_BITS","mask","n","z","t","MutableForwardIterator","this","_proto","prototype","remove","indexOf","removeAt","splice","fastRemove","fastRemoveAt","push","item","_createClass","key","get","set","removeIf","predicate","findIndex","contains","fillItems","len","objects","cloned","removals","l","type","_step","_iterator","_createForOfIteratorHelperLoose","done","ScalableContainer","_poolHandle","scalableContainerManager","addContainer","destroy","removeContainer","ScalableContainerManager","_pools","_lastShrinkPassed","shrinkTimeSpan","_proto2","pool","tryShrink","update","dt","Pool","_ScalableContainer","ctor","elementsPerBatch","dtor","shrinkThreshold","_this","call","_freePool","_ctor","_dtor","_elementsPerBatch","Math","_shrinkThreshold","_nextAvail","_inheritsLoose","alloc","free","obj","freeArray","objs","freeObjectNumber","objectNumberToShrink","floor","readDtor","IDGenerator","RecyclePool","fn","size","_count","_fn","_data","_initSize","reset","resize","add","idx","last","tmp","compareFn","_compareFn","CachedArray","pop","clear","sort","val","category","random","prefix","getNewId","toString","_class","global","tempCIDGenerator","aliasesTag","Symbol","classNameTag","classIdTag","isNumber","object","Number","isString","String","isEmptyObject","descriptor","undefined","enumerable","writable","configurable","value_","Object","defineProperty","getset","getter","setter","createMap","forceDictMode","map","create","getClassName","objOrCtor","hasOwnProperty","ret","name","arr","str","charAt","exec","constructor","obsolete","obsoleted","newExpr","extractPropName","oldProp","newProp","obsoletes","objName","props","REGEXP_NUM_OR_STR","REGEXP_STR","subst","test","arg","regExpToTest","notReplaceFunction","replace","_step2","_iterator2","shiftArguments","getPropertyDescriptor","pd","getOwnPropertyDescriptor","getPrototypeOf","_copyProp","source","target","addon","mixin","extend","cls","base","p","getSuper","proto","dunderProto","isChildClassOf","subclass","superclass","_i","_Object$keys","keys","_idToClass","_nameToClass","setup","tag","table","allowExist","registered","_setClassId","doSetClassName","setClassName","className","setClassAlias","alias","nameRegistry","idRegistry","ok","classAliases","unregisterClass","constructors","_i2","_constructors","classId","classname","aliases","iAlias","_getClassById","getClassById","getClassByName","_getClassId","getClassId","_0","_1","count","cleanupFunc","_pool","_cleanup","_get","cache","put","_registeredClassNames","_extends","assign","_registeredClassIds","excepts","propertyNames","getOwnPropertyNames","BitMask","lastIndex","isInteger","parseFloat","reverseKey","isBitMask","BitMaskType","getList","BitMaskDef","__bitmask__","isArray","bitList","a","b","hasOwnPropertyProto","Enum","assertIsEnum","updateList","enums","__enums__","isAllInteger","isIntegerValue","parseInt","isEnum","sortList","ValueType","SettingsCategory","clone","equals","Settings","_settings","_override","init","path","overrides","categoryName","overrideSettings","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","JSON","parse","response","onerror","send","querySettings","categorySettings","Category","settings","Orientation","macro","SUPPORT_TEXTURE_FORMATS","KEY","none","back","menu","backspace","enter","ctrl","alt","pause","capslock","escape","space","pageup","pagedown","end","home","up","right","down","select","insert","Delete","d","e","f","g","h","j","k","m","o","q","u","w","num0","num1","num2","num3","num4","num5","num6","num7","num8","num9","numdel","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","numlock","scrolllock","semicolon","equal","comma","dash","period","forwardslash","grave","openbracket","backslash","closebracket","quote","dpadLeft","dpadRight","dpadUp","dpadDown","dpadCenter","RAD","PI","DEG","REPEAT_FOREVER","MAX_VALUE","FLT_EPSILON","ORIENTATION_PORTRAIT","PORTRAIT","ORIENTATION_PORTRAIT_UPSIDE_DOWN","PORTRAIT_UPSIDE_DOWN","ORIENTATION_LANDSCAPE","LANDSCAPE","ORIENTATION_LANDSCAPE_LEFT","LANDSCAPE_LEFT","ORIENTATION_LANDSCAPE_RIGHT","LANDSCAPE_RIGHT","ORIENTATION_AUTO","AUTO","ENABLE_TILEDMAP_CULLING","TOUCH_TIMEOUT","ENABLE_TRANSPARENT_CANVAS","ENABLE_WEBGL_ANTIALIAS","ENABLE_FLOAT_OUTPUT","CLEANUP_IMAGE_CACHE","ENABLE_MULTI_TOUCH","MAX_LABEL_CANVAS_POOL_SIZE","ENABLE_WEBGL_HIGHP_STRUCT_VALUES","BATCHER2D_MEM_INCREMENT","CUSTOM_PIPELINE_NAME","defaultValues","ENGINE","setTimeoutRAF","callback","delay","_globalThis$__globalX","start","performance","now","raf","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","globalThis","__globalXR","isWebXR","setTimeout","handleRAF","BUILTIN_CLASSID_RE","values","charCodeAt","BASE64_VALUES","propertyDefine","sameNameGetSets","diffNameGetSets","define","np","propName","getterFunc","suffix","toUpperCase","slice","gs","pushToMap","pushFront","exists","refNode","otherNode","compareDocumentPosition","node","isDomNode","Node","nodeType","nodeName","callInNextTick","isPlainEmptyObj_DEV","clampf","min_inclusive","max_inclusive","temp","degreesToRadians","angle","radiansToDegrees","misc","funcName","Function","DELIMETER","createAttrsSingle","owner","superAttrs","attrs","createAttrs","superClass","chains","Class","getInheritanceChain","__attrs__","attr","startsWith","setClassAttr","PrimitiveType","defaultValue","CCInteger","Integer","CCFloat","Float","CCBoolean","Boolean","CCString","getTypeChecker_ET","attributeName","mainPropertyName","propInfo","mainPropAttrs","mainPropAttrsType","defaultVal","defaultType","type_lowerCase","toLowerCase","typeCtor","classCtor","mainPropName","defaultDef","getDefault","typename","info","SerializableAttrs","default","serializable","editorOnly","formerlySerializedAs","parseNotify","notify","properties","newKey","oldValue","newValue","canUsedInGet","parseType","_wrapOptions","isGetset","_default","res","_short","getFullFormOfProperty","options","preprocessAttrs","fullForm","PropertyStashInternalFlag","requiringFrames","peek","_RF","module","uuid","script","importMeta","beh","frameInfo","anykey","attributeUtils","CCCLASS_TAG","BITMASK_TAG","pushUnique","appendProp","__props__","defineProp","parseAttributes","defineGetSet","doDefine","baseClass","$super","Component","frame","RF","declareProperties","__values__","filter","prop","CCClass","_sealed","editor","_registerEditorProps","isCCClassOrFastDefined","_isCCClass","fastDefine","serializableFields","Attr","chain","CCObjectFlags","PrimitiveTypes","attributes","propertyNamePrefix","initAttrs","normalizedSerializable","parseSimpleAttribute","expectType","__internalFlags","STANDALONE","IMPLICIT_SERIALIZABLE","range","escapeForJS","stringify","IDENTIFIER_RE","getNewValueTypeCode","clsName","objectsToDestroy","compileDestruct","shouldSkipId","idToSkip","propsToReset","propList","attrKey","func","statement","CCObject","_objFlags","_name","_deferredDestroy","deleteCount","Destroyed","_destroyImmediate","ToDestroy","_destruct","destruct","__destruct__","_onPreDestroy","AllHideMasks","hideFlags","flags","_deserialize","CCObjectFlagsEnum","isCCObject","isValid","strictMode","empty","CallbackInfo","once","check","callbackInfoPool","CallbackList","callbackInfos","isInvoking","containCanceled","removeByCallback","cb","removeByTarget","cancel","cancelAll","purgeCanceled","callbackListPool","CallbacksInvoker","_callbackTable","_offCallback","_proto3","on","hasEventListener","list","infos","removeAll","keyOrTarget","off","_this$_offCallback","emit","arg0","arg1","arg2","arg3","arg4","rootInvoker","_registerOffCallback","Eventify","Eventified","_ref","targetOff","typeOrTarget","callbacksInvokerPrototype","propertyKeys","getOwnPropertySymbols","iPropertyKey","propertyKey","propertyDescriptor","BrowserType","Language","NetworkType","OS","Platform","Feature","EventTarget","AsyncDelegate","_delegates","includes","hasListener","dispatch","_arguments","all","SystemInfo","_EventTarget","_this$_featureMap","_battery","_initPromise","buffer","nav","navigator","ua","userAgent","getBattery","then","battery","networkType","LAN","isNative","isBrowser","isMobile","platform","MOBILE_BROWSER","DESKTOP_BROWSER","isLittleEndian","ArrayBuffer","DataView","setInt16","Int16Array","currLanguage","language","nativeLanguage","browserLanguage","split","ENGLISH","isAndroid","iOS","osVersion","osMajorVersion","uaResult","maxTouchPoints","osName","UNKNOWN","appVersion","WINDOWS","IOS","OSX","LINUX","ANDROID","os","osMainVersion","browserType","browserTypes","typeMap","micromessenger","WECHAT","wechat","weixin","trident","IE","edge","EDGE","BROWSER_360","mxbrowser","MAXTHON","OPERA","ubrowser","UC","huaweibrowser","HUAWEI","browserVersion","isXR","supportWebp","_tmpCanvas1","getContext","TEST","toDataURL","_exec","result","SAFARI","_exec2","supportTouch","documentElement","ontouchstart","EDITOR","supportMouse","onmouseup","supportXR","xr","supportWasm","WebAssembly","instantiate","Module","Uint8Array","Instance","_featureMap","WEBP","IMAGE_BITMAP","WEB_VIEW","VIDEO_PLAYER","SAFE_AREA","HPE","INPUT_TOUCH","EVENT_KEYBOARD","onkeyup","EVENT_MOUSE","EVENT_TOUCH","EVENT_ACCELEROMETER","DeviceMotionEvent","DeviceOrientationEvent","EVENT_GAMEPAD","getGamepads","webkitGetGamepads","EVENT_HANDLE","PREVIEW","EVENT_HMD","EVENT_HANDHELD","WASM","_supportsImageBitmapPromise","_registerEvent","_this2","createImageBitmap","Blob","width","promise","imageBitmap","close","_setFeature","hiddenPropName","_this3","hidden","mozHidden","msHidden","webkitHidden","onHidden","onShown","changeList","addEventListener","event","visible","onfocus","feature","hasFeature","getBatteryLevel","level","triggerGC","openURL","url","Date","restartJSVM","exit","GarbageCollectionManager","_finalizationRegistry","_gcObjects","WeakMap","registerGCObject","gcObject","finalizationRegistryCallback","garbageCollectionManager","GCObject"],"mappings":"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"}