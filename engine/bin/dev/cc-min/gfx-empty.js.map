{"version":3,"file":"gfx-empty.js","sources":["../../../cocos/gfx/empty/empty-descriptor-set.ts","../../../cocos/gfx/empty/empty-buffer.ts","../../../cocos/gfx/empty/empty-command-buffer.ts","../../../cocos/gfx/empty/empty-framebuffer.ts","../../../cocos/gfx/empty/empty-input-assembler.ts","../../../cocos/gfx/empty/empty-descriptor-set-layout.ts","../../../cocos/gfx/empty/empty-pipeline-layout.ts","../../../cocos/gfx/empty/empty-pipeline-state.ts","../../../cocos/gfx/empty/empty-queue.ts","../../../cocos/gfx/empty/empty-render-pass.ts","../../../cocos/gfx/empty/empty-shader.ts","../../../cocos/gfx/empty/empty-texture.ts","../../../cocos/gfx/empty/empty-swapchain.ts","../../../cocos/gfx/empty/empty-device.ts","../../../exports/gfx-empty.ts"],"sourcesContent":["/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DescriptorSet } from '../base/descriptor-set';\r\nimport { DescriptorSetInfo } from '../base/define';\r\n\r\nexport class EmptyDescriptorSet extends DescriptorSet {\r\n    public initialize (info: Readonly<DescriptorSetInfo>): void {\r\n        this._layout = info.layout;\r\n    }\r\n    public destroy (): void {}\r\n    public update (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BufferSource, BufferInfo, BufferViewInfo } from '../base/define';\r\nimport { Buffer } from '../base/buffer';\r\n\r\nexport class EmptyBuffer extends Buffer {\r\n    public initialize (info: Readonly<BufferInfo> | Readonly<BufferViewInfo>): void {\r\n        if ('buffer' in info) { // buffer view\r\n            this._isBufferView = true;\r\n\r\n            const buffer = info.buffer as EmptyBuffer;\r\n\r\n            this._usage = buffer.usage;\r\n            this._memUsage = buffer.memUsage;\r\n            this._size = this._stride = info.range;\r\n            this._count = 1;\r\n            this._flags = buffer.flags;\r\n        } else { // native buffer\r\n            this._usage = info.usage;\r\n            this._memUsage = info.memUsage;\r\n            this._size = info.size;\r\n            this._stride = Math.max(info.stride || this._size, 1);\r\n            this._count = this._size / this._stride;\r\n            this._flags = info.flags;\r\n        }\r\n    }\r\n    public destroy (): void {}\r\n    public resize (size: number): void {}\r\n    public update (buffer: Readonly<BufferSource>, size?: number): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DescriptorSet } from '../base/descriptor-set';\r\nimport { Buffer } from '../base/buffer';\r\nimport { CommandBuffer } from '../base/command-buffer';\r\nimport { Framebuffer } from '../base/framebuffer';\r\nimport { InputAssembler } from '../base/input-assembler';\r\nimport { PipelineState } from '../base/pipeline-state';\r\nimport { Texture } from '../base/texture';\r\nimport { RenderPass } from '../base/render-pass';\r\nimport { GeneralBarrier } from '../base/states/general-barrier';\r\nimport { TextureBarrier } from '../base/states/texture-barrier';\r\nimport { BufferBarrier } from '../base/states/buffer-barrier';\r\nimport { StencilFace, BufferSource, CommandBufferInfo, BufferTextureCopy, Color,\r\n    Rect, Viewport, DrawInfo, TextureBlit, Filter,\r\n} from '../base/define';\r\n\r\nexport class EmptyCommandBuffer extends CommandBuffer {\r\n    public initialize (info: Readonly<CommandBufferInfo>): void {\r\n        this._type = info.type;\r\n        this._queue = info.queue;\r\n    }\r\n    public destroy (): void {}\r\n    public begin (renderPass?: RenderPass, subpass?: number, frameBuffer?: Framebuffer): void {}\r\n    public end (): void {}\r\n    public beginRenderPass (\r\n        renderPass: RenderPass,\r\n        framebuffer: Framebuffer,\r\n        renderArea: Readonly<Rect>,\r\n        clearColors: Readonly<Color[]>,\r\n        clearDepth: number,\r\n        clearStencil: number,\r\n    ): void {}\r\n    public endRenderPass (): void {}\r\n    public bindPipelineState (pipelineState: PipelineState): void {}\r\n    public bindDescriptorSet (set: number, descriptorSet: DescriptorSet, dynamicOffsets?: Readonly<number[]>): void {}\r\n    public bindInputAssembler (inputAssembler: InputAssembler): void {}\r\n    public setViewport (viewport: Readonly<Viewport>): void {}\r\n    public setScissor (scissor: Readonly<Rect>): void {}\r\n    public setLineWidth (lineWidth: number): void {}\r\n    public setDepthBias (depthBiasConstantFactor: number, depthBiasClamp: number, depthBiasSlopeFactor: number): void {}\r\n    public setBlendConstants (blendConstants: Readonly<Color>): void {}\r\n    public setDepthBound (minDepthBounds: number, maxDepthBounds: number): void {}\r\n    public setStencilWriteMask (face: StencilFace, writeMask: number): void {}\r\n    public setStencilCompareMask (face: StencilFace, reference: number, compareMask: number): void {}\r\n    public draw (infoOrAssembler: Readonly<DrawInfo> | Readonly<InputAssembler>): void {}\r\n    public updateBuffer (buffer: Buffer, data: Readonly<BufferSource>, size?: number): void {}\r\n    public copyBuffersToTexture (buffers: Readonly<ArrayBufferView[]>, texture: Texture, regions: Readonly<BufferTextureCopy[]>): void {}\r\n    public execute (cmdBuffs: Readonly<CommandBuffer[]>, count: number): void {}\r\n    public pipelineBarrier (\r\n        GeneralBarrier: Readonly<GeneralBarrier>,\r\n        bufferBarriers?: Readonly<BufferBarrier[]>,\r\n        buffers?: Readonly<Buffer[]>,\r\n        textureBarriers?: Readonly<TextureBarrier[]>,\r\n        textures?: Readonly<Texture[]>,\r\n    ): void {}\r\n    public blitTexture (srcTexture: Readonly<Texture>, dstTexture: Texture, regions: Readonly<TextureBlit []>, filter: Filter): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { FramebufferInfo } from '../base/define';\r\nimport { Framebuffer } from '../base/framebuffer';\r\n\r\nexport class EmptyFramebuffer extends Framebuffer {\r\n    public initialize (info: Readonly<FramebufferInfo>): void {\r\n        this._renderPass = info.renderPass;\r\n        this._colorTextures = info.colorTextures || [];\r\n        this._depthStencilTexture = info.depthStencilTexture || null;\r\n    }\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { InputAssemblerInfo } from '../base/define';\r\nimport { InputAssembler } from '../base/input-assembler';\r\n\r\nexport class EmptyInputAssembler extends InputAssembler {\r\n    public initialize (info: Readonly<InputAssemblerInfo>): void {\r\n        this._attributes = info.attributes;\r\n        this._attributesHash = this.computeAttributesHash();\r\n        this._vertexBuffers = info.vertexBuffers;\r\n\r\n        if (info.indexBuffer) {\r\n            this._indexBuffer = info.indexBuffer;\r\n            this._drawInfo.indexCount = this._indexBuffer.size / this._indexBuffer.stride;\r\n            this._drawInfo.firstIndex = 0;\r\n        } else {\r\n            const vertBuff = this._vertexBuffers[0];\r\n            this._drawInfo.vertexCount = vertBuff.size / vertBuff.stride;\r\n            this._drawInfo.firstVertex = 0;\r\n            this._drawInfo.vertexOffset = 0;\r\n        }\r\n    }\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DescriptorSetLayoutInfo } from '../base/define';\r\nimport { DescriptorSetLayout } from '../base/descriptor-set-layout';\r\n\r\nexport class EmptyDescriptorSetLayout extends DescriptorSetLayout {\r\n    public initialize (info: Readonly<DescriptorSetLayoutInfo>): void {\r\n        Array.prototype.push.apply(this._bindings, info.bindings);\r\n    }\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { PipelineLayout } from '../base/pipeline-layout';\r\nimport { PipelineLayoutInfo } from '../base/define';\r\n\r\nexport class EmptyPipelineLayout extends PipelineLayout {\r\n    public initialize (info: Readonly<PipelineLayoutInfo>): void {\r\n        Array.prototype.push.apply(this._setLayouts, info.setLayouts);\r\n    }\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { PipelineState, PipelineStateInfo } from '../base/pipeline-state';\r\n\r\nexport class EmptyPipelineState extends PipelineState {\r\n    public initialize (info: Readonly<PipelineStateInfo>): void {\r\n        this._primitive = info.primitive;\r\n        this._shader = info.shader;\r\n        this._pipelineLayout = info.pipelineLayout;\r\n        const bs = this._bs;\r\n        if (info.blendState) {\r\n            const bsInfo = info.blendState;\r\n            const { targets } = bsInfo;\r\n            if (targets) {\r\n                targets.forEach((t, i): void => {\r\n                    bs.setTarget(i, t);\r\n                });\r\n            }\r\n\r\n            if (bsInfo.isA2C !== undefined) { bs.isA2C = bsInfo.isA2C; }\r\n            if (bsInfo.isIndepend !== undefined) { bs.isIndepend = bsInfo.isIndepend; }\r\n            if (bsInfo.blendColor !== undefined) { bs.blendColor = bsInfo.blendColor; }\r\n        }\r\n        Object.assign(this._rs, info.rasterizerState);\r\n        Object.assign(this._dss, info.depthStencilState);\r\n        this._is = info.inputState;\r\n        this._renderPass = info.renderPass;\r\n        this._dynamicStates = info.dynamicStates;\r\n    }\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { QueueInfo } from '../base/define';\r\nimport { CommandBuffer } from '../base/command-buffer';\r\nimport { Queue } from '../base/queue';\r\n\r\nexport class EmptyQueue extends Queue {\r\n    public initialize (info: Readonly<QueueInfo>): void {\r\n        this._type = info.type;\r\n    }\r\n    public destroy (): void {}\r\n    public submit (cmdBuffs: Readonly<CommandBuffer[]>): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { RenderPassInfo } from '../base/define';\r\nimport { RenderPass } from '../base/render-pass';\r\n\r\nexport class EmptyRenderPass extends RenderPass {\r\n    public initialize (info: Readonly<RenderPassInfo>): void {\r\n        this._colorInfos = info.colorAttachments;\r\n        this._depthStencilInfo = info.depthStencilAttachment;\r\n        this._subpasses = info.subpasses;\r\n        this._hash = this.computeHash();\r\n    }\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { debug } from '../../core';\r\nimport { ShaderInfo } from '../base/define';\r\nimport { Shader } from '../base/shader';\r\n\r\nexport class EmptyShader extends Shader {\r\n    public initialize (info: Readonly<ShaderInfo>): void {\r\n        debug(`Shader '${info.name}' compilation succeeded.`);\r\n    }\r\n    public destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { TextureInfo, TextureViewInfo, ISwapchainTextureInfo, FormatSurfaceSize, IsPowerOf2 } from '../base/define';\r\nimport { Texture } from '../base/texture';\r\n\r\nexport class EmptyTexture extends Texture {\r\n    public initialize (info: Readonly<TextureInfo> | Readonly<TextureViewInfo>, isSwapchainTexture?: boolean): void {\r\n        let texInfo = info as Readonly<TextureInfo>;\r\n\r\n        if ('texture' in info) {\r\n            texInfo = info.texture.info;\r\n            this._isTextureView = true;\r\n            this._viewInfo.copy(info);\r\n        } else {\r\n            this._viewInfo.texture = this;\r\n            this._viewInfo.type = info.type;\r\n            this._viewInfo.format = info.format;\r\n            this._viewInfo.baseLevel = 0;\r\n            this._viewInfo.levelCount = 1;\r\n            this._viewInfo.baseLayer = 0;\r\n            this._viewInfo.layerCount = 1;\r\n        }\r\n\r\n        this._info.copy(texInfo);\r\n\r\n        this._isPowerOf2 = IsPowerOf2(this._info.width) && IsPowerOf2(this._info.height);\r\n        this._size = FormatSurfaceSize(this._info.format, this.width, this.height,\r\n            this.depth, this._info.levelCount) * this._info.layerCount;\r\n    }\r\n    public destroy (): void {}\r\n\r\n    public getTextureHandle (): number {\r\n        return 0;\r\n    }\r\n\r\n    public resize (width: number, height: number): void {\r\n        this._info.width = width;\r\n        this._info.height = height;\r\n    }\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public initAsSwapchainTexture (info: ISwapchainTextureInfo): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Format, SwapchainInfo, SurfaceTransform } from '../base/define';\r\nimport { Swapchain } from '../base/swapchain';\r\nimport { EmptyTexture } from './empty-texture';\r\n\r\nexport class EmptySwapchain extends Swapchain {\r\n    public initialize (info: Readonly<SwapchainInfo>): void {\r\n        this._colorTexture = new EmptyTexture();\r\n        this._colorTexture.initAsSwapchainTexture({\r\n            swapchain: this,\r\n            format: Format.RGBA8,\r\n            width: info.width,\r\n            height: info.height,\r\n        });\r\n\r\n        this._depthStencilTexture = new EmptyTexture();\r\n        this._depthStencilTexture.initAsSwapchainTexture({\r\n            swapchain: this,\r\n            format: Format.DEPTH_STENCIL,\r\n            width: info.width,\r\n            height: info.height,\r\n        });\r\n    }\r\n    public destroy (): void {}\r\n    public resize (width: number, height: number, surfaceTransform: SurfaceTransform): void {}\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DescriptorSet } from '../base/descriptor-set';\r\nimport { DescriptorSetLayout } from '../base/descriptor-set-layout';\r\nimport { PipelineLayout } from '../base/pipeline-layout';\r\nimport { Buffer } from '../base/buffer';\r\nimport { CommandBuffer } from '../base/command-buffer';\r\nimport { Device } from '../base/device';\r\nimport { Framebuffer } from '../base/framebuffer';\r\nimport { InputAssembler } from '../base/input-assembler';\r\nimport { PipelineState, PipelineStateInfo } from '../base/pipeline-state';\r\nimport { Queue } from '../base/queue';\r\nimport { RenderPass } from '../base/render-pass';\r\nimport { Sampler } from '../base/states/sampler';\r\nimport { Shader } from '../base/shader';\r\nimport { Texture } from '../base/texture';\r\nimport {\r\n    ShaderInfo,\r\n    QueueInfo, CommandBufferInfo, DescriptorSetInfo, DescriptorSetLayoutInfo, FramebufferInfo, InputAssemblerInfo, PipelineLayoutInfo,\r\n    RenderPassInfo, SamplerInfo, TextureInfo, TextureViewInfo, BufferInfo, BufferViewInfo, DeviceInfo, TextureBarrierInfo, GeneralBarrierInfo,\r\n    BufferBarrierInfo, QueueType, API, BufferTextureCopy, SwapchainInfo,\r\n} from '../base/define';\r\nimport { GeneralBarrier } from '../base/states/general-barrier';\r\nimport { TextureBarrier } from '../base/states/texture-barrier';\r\nimport { BufferBarrier } from '../base/states/buffer-barrier';\r\nimport { Swapchain } from '../base/swapchain';\r\nimport { EmptyDescriptorSet } from './empty-descriptor-set';\r\nimport { EmptyBuffer } from './empty-buffer';\r\nimport { EmptyCommandBuffer } from './empty-command-buffer';\r\nimport { EmptyFramebuffer } from './empty-framebuffer';\r\nimport { EmptyInputAssembler } from './empty-input-assembler';\r\nimport { EmptyDescriptorSetLayout } from './empty-descriptor-set-layout';\r\nimport { EmptyPipelineLayout } from './empty-pipeline-layout';\r\nimport { EmptyPipelineState } from './empty-pipeline-state';\r\nimport { EmptyQueue } from './empty-queue';\r\nimport { EmptyRenderPass } from './empty-render-pass';\r\nimport { EmptyShader } from './empty-shader';\r\nimport { EmptySwapchain } from './empty-swapchain';\r\nimport { EmptyTexture } from './empty-texture';\r\nimport { debug, cclegacy } from '../../core';\r\n\r\nexport class EmptyDevice extends Device {\r\n    private _swapchain: EmptySwapchain | null = null;\r\n\r\n    public initialize (info: DeviceInfo): boolean {\r\n        this._gfxAPI = API.UNKNOWN;\r\n\r\n        this._bindingMappingInfo = info.bindingMappingInfo;\r\n\r\n        this._queue = this.createQueue(new QueueInfo(QueueType.GRAPHICS));\r\n        this._cmdBuff = this.createCommandBuffer(new CommandBufferInfo(this._queue));\r\n\r\n        debug('Empty device initialized.');\r\n\r\n        return true;\r\n    }\r\n\r\n    public destroy (): void {\r\n        if (this._queue) {\r\n            this._queue.destroy();\r\n            this._queue = null;\r\n        }\r\n\r\n        if (this._cmdBuff) {\r\n            this._cmdBuff.destroy();\r\n            this._cmdBuff = null;\r\n        }\r\n\r\n        this._swapchain = null;\r\n    }\r\n\r\n    public flushCommands (cmdBuffs: Readonly<CommandBuffer[]>): void {\r\n        // noop\r\n    }\r\n    public acquire (swapchains: Readonly<Swapchain[]>): void {\r\n        // noop\r\n    }\r\n    public present (): void {\r\n        // noop\r\n    }\r\n\r\n    public createCommandBuffer (info: Readonly<CommandBufferInfo>): CommandBuffer {\r\n        const cmdBuff = new EmptyCommandBuffer();\r\n        cmdBuff.initialize(info);\r\n        return cmdBuff;\r\n    }\r\n\r\n    public createSwapchain (info: Readonly<SwapchainInfo>): Swapchain {\r\n        const swapchain = new EmptySwapchain();\r\n        this._swapchain = swapchain;\r\n        swapchain.initialize(info);\r\n        return swapchain;\r\n    }\r\n\r\n    public createBuffer (info: Readonly<BufferInfo> | Readonly<BufferViewInfo>): Buffer {\r\n        const buffer = new EmptyBuffer();\r\n        buffer.initialize(info);\r\n        return buffer;\r\n    }\r\n\r\n    public createTexture (info: Readonly<TextureInfo> | Readonly<TextureViewInfo>): Texture {\r\n        const texture = new EmptyTexture();\r\n        texture.initialize(info);\r\n        return texture;\r\n    }\r\n\r\n    public createDescriptorSet (info: Readonly<DescriptorSetInfo>): DescriptorSet {\r\n        const descriptorSet = new EmptyDescriptorSet();\r\n        descriptorSet.initialize(info);\r\n        return descriptorSet;\r\n    }\r\n\r\n    public createShader (info: Readonly<ShaderInfo>): Shader {\r\n        const shader = new EmptyShader();\r\n        shader.initialize(info);\r\n        return shader;\r\n    }\r\n\r\n    public createInputAssembler (info: Readonly<InputAssemblerInfo>): InputAssembler {\r\n        const inputAssembler = new EmptyInputAssembler();\r\n        inputAssembler.initialize(info);\r\n        return inputAssembler;\r\n    }\r\n\r\n    public createRenderPass (info: Readonly<RenderPassInfo>): RenderPass {\r\n        const renderPass = new EmptyRenderPass();\r\n        renderPass.initialize(info);\r\n        return renderPass;\r\n    }\r\n\r\n    public createFramebuffer (info: Readonly<FramebufferInfo>): Framebuffer {\r\n        const framebuffer = new EmptyFramebuffer();\r\n        framebuffer.initialize(info);\r\n        return framebuffer;\r\n    }\r\n\r\n    public createDescriptorSetLayout (info: Readonly<DescriptorSetLayoutInfo>): DescriptorSetLayout {\r\n        const descriptorSetLayout = new EmptyDescriptorSetLayout();\r\n        descriptorSetLayout.initialize(info);\r\n        return descriptorSetLayout;\r\n    }\r\n\r\n    public createPipelineLayout (info: Readonly<PipelineLayoutInfo>): PipelineLayout {\r\n        const pipelineLayout = new EmptyPipelineLayout();\r\n        pipelineLayout.initialize(info);\r\n        return pipelineLayout;\r\n    }\r\n\r\n    public createPipelineState (info: Readonly<PipelineStateInfo>): PipelineState {\r\n        const pipelineState = new EmptyPipelineState();\r\n        pipelineState.initialize(info);\r\n        return pipelineState;\r\n    }\r\n\r\n    public createQueue (info: Readonly<QueueInfo>): Queue {\r\n        const queue = new EmptyQueue();\r\n        queue.initialize(info);\r\n        return queue;\r\n    }\r\n\r\n    public getSampler (info: Readonly<SamplerInfo>): Sampler {\r\n        const hash = Sampler.computeHash(info);\r\n        if (!this._samplers.has(hash)) {\r\n            this._samplers.set(hash, new Sampler(info, hash));\r\n        }\r\n        return this._samplers.get(hash)!;\r\n    }\r\n\r\n    public getSwapchains (): Readonly<Swapchain[]> {\r\n        return [this._swapchain as Swapchain];\r\n    }\r\n\r\n    public getGeneralBarrier (info: Readonly<GeneralBarrierInfo>): GeneralBarrier {\r\n        const hash = GeneralBarrier.computeHash(info);\r\n        if (!this._generalBarrierss.has(hash)) {\r\n            this._generalBarrierss.set(hash, new GeneralBarrier(info, hash));\r\n        }\r\n        return this._generalBarrierss.get(hash)!;\r\n    }\r\n\r\n    public getTextureBarrier (info: Readonly<TextureBarrierInfo>): TextureBarrier {\r\n        const hash = TextureBarrier.computeHash(info);\r\n        if (!this._textureBarriers.has(hash)) {\r\n            this._textureBarriers.set(hash, new TextureBarrier(info, hash));\r\n        }\r\n        return this._textureBarriers.get(hash)!;\r\n    }\r\n\r\n    public getBufferBarrier (info: Readonly<BufferBarrierInfo>): BufferBarrier {\r\n        const hash = BufferBarrier.computeHash(info);\r\n        if (!this._bufferBarriers.has(hash)) {\r\n            this._bufferBarriers.set(hash, new BufferBarrier(info, hash));\r\n        }\r\n        return this._bufferBarriers.get(hash)!;\r\n    }\r\n\r\n    public copyBuffersToTexture (buffers: Readonly<ArrayBufferView[]>, texture: Texture, regions: Readonly<BufferTextureCopy[]>): void {\r\n        // noop\r\n    }\r\n    public copyTextureToBuffers (texture: Readonly<Texture>, buffers: ArrayBufferView[], regions: Readonly<BufferTextureCopy[]>): void {\r\n        // noop\r\n    }\r\n    public copyTexImagesToTexture (texImages: Readonly<TexImageSource[]>, texture: Texture, regions: Readonly<BufferTextureCopy[]>): void {\r\n        // noop\r\n    }\r\n}\r\n\r\ncclegacy.EmptyDevice = EmptyDevice;\r\n","/*\r\n Copyright (c) 2020 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated engine source code (the \"Software\"), a limited,\r\n worldwide, royalty-free, non-assignable, revocable and non-exclusive license\r\n to use Cocos Creator solely to develop games on your target platforms. You shall\r\n not use Cocos Creator software for developing other software or tools that's\r\n used for developing games. You are not granted to publish, distribute,\r\n sublicense, and/or sell copies of Cocos Creator.\r\n\r\n The software or tools in this License Agreement are licensed, not sold.\r\n Xiamen Yaji Software Co., Ltd. reserves all rights not expressly granted to you.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n */\r\n\r\nimport { EmptyDevice } from '../cocos/gfx/empty/empty-device';\r\nimport { legacyCC } from '../cocos/core/global-exports';\r\n\r\nexport { EmptyDevice };\r\nlegacyCC.EmptyDevice = EmptyDevice;\r\n"],"names":["EmptyDescriptorSet","_DescriptorSet","apply","this","arguments","_inheritsLoose","_proto","prototype","initialize","info","_layout","layout","destroy","update","DescriptorSet","EmptyBuffer","_Buffer","_isBufferView","buffer","_usage","usage","_memUsage","memUsage","_size","_stride","range","_count","_flags","flags","size","Math","max","stride","resize","Buffer","EmptyCommandBuffer","_CommandBuffer","_type","type","_queue","queue","begin","end","beginRenderPass","endRenderPass","bindPipelineState","bindDescriptorSet","bindInputAssembler","setViewport","setScissor","setLineWidth","setDepthBias","setBlendConstants","setDepthBound","setStencilWriteMask","setStencilCompareMask","draw","updateBuffer","copyBuffersToTexture","execute","pipelineBarrier","blitTexture","CommandBuffer","EmptyFramebuffer","_Framebuffer","_renderPass","renderPass","_colorTextures","colorTextures","_depthStencilTexture","depthStencilTexture","Framebuffer","EmptyInputAssembler","_InputAssembler","_attributes","attributes","_attributesHash","computeAttributesHash","_vertexBuffers","vertexBuffers","indexBuffer","_indexBuffer","_drawInfo","indexCount","firstIndex","vertBuff","vertexCount","firstVertex","vertexOffset","InputAssembler","EmptyDescriptorSetLayout","_DescriptorSetLayout","Array","push","_bindings","bindings","DescriptorSetLayout","EmptyPipelineLayout","_PipelineLayout","_setLayouts","setLayouts","PipelineLayout","EmptyPipelineState","_PipelineState","_primitive","primitive","_shader","shader","_pipelineLayout","pipelineLayout","bs","_bs","blendState","bsInfo","targets","forEach","t","i","setTarget","undefined","isA2C","isIndepend","blendColor","Object","assign","_rs","rasterizerState","_dss","depthStencilState","_is","inputState","_dynamicStates","dynamicStates","PipelineState","EmptyQueue","_Queue","submit","Queue","EmptyRenderPass","_RenderPass","_colorInfos","colorAttachments","_depthStencilInfo","depthStencilAttachment","_subpasses","subpasses","_hash","computeHash","RenderPass","EmptyShader","_Shader","debug","name","Shader","EmptyTexture","_Texture","texInfo","texture","_isTextureView","_viewInfo","copy","format","baseLevel","levelCount","baseLayer","layerCount","_info","_isPowerOf2","IsPowerOf2","width","height","FormatSurfaceSize","depth","getTextureHandle","initAsSwapchainTexture","Texture","EmptySwapchain","_Swapchain","_colorTexture","swapchain","Format","RGBA8","DEPTH_STENCIL","Swapchain","EmptyDevice","exports","_Device","_this","_len","length","args","_key","call","concat","_swapchain","_gfxAPI","API","UNKNOWN","_bindingMappingInfo","bindingMappingInfo","createQueue","QueueInfo","QueueType","GRAPHICS","_cmdBuff","createCommandBuffer","CommandBufferInfo","flushCommands","acquire","present","cmdBuff","createSwapchain","createBuffer","createTexture","createDescriptorSet","descriptorSet","createShader","createInputAssembler","inputAssembler","createRenderPass","createFramebuffer","framebuffer","createDescriptorSetLayout","descriptorSetLayout","createPipelineLayout","createPipelineState","pipelineState","getSampler","hash","Sampler","_samplers","has","set","get","getSwapchains","getGeneralBarrier","GeneralBarrier","_generalBarrierss","getTextureBarrier","TextureBarrier","_textureBarriers","getBufferBarrier","BufferBarrier","_bufferBarriers","copyTextureToBuffers","copyTexImagesToTexture","Device","cclegacy","legacyCC"],"mappings":"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"}