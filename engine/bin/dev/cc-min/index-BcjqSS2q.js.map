{"version":3,"file":"index-BcjqSS2q.js","sources":["../../../cocos/core/algorithm/binary-search.ts","../../../cocos/core/utils/x-deprecated.ts","../../../cocos/core/data/serialization-metadata.ts","../../../cocos/core/math/color.ts","../../../cocos/core/data/editor-extras-tag.ts","../../../cocos/core/math/utils.ts","../../../cocos/core/math/vec4.ts","../../../cocos/core/math/vec3.ts","../../../cocos/core/math/mat3.ts","../../../cocos/core/math/quat.ts","../../../cocos/core/math/mat4.ts","../../../cocos/core/math/vec2.ts","../../../cocos/core/math/math-native-ext.ts","../../../cocos/core/math/deprecated.ts","../../../cocos/core/math/size.ts","../../../cocos/core/math/rect.ts","../../../cocos/core/math/math-base.ts","../../../cocos/core/geometry/distance.ts","../../../cocos/core/geometry/enums.ts","../../../cocos/core/geometry/line.ts","../../../cocos/core/geometry/ray.ts","../../../cocos/core/geometry/sphere.ts","../../../cocos/core/geometry/intersect.ts","../../../cocos/core/geometry/deprecated.ts","../../../cocos/core/geometry/plane.ts","../../../cocos/core/geometry/triangle.ts","../../../cocos/core/utils/deprecated-3.6.0.ts","../../../cocos/core/utils/coordinates-converts-utils.ts","../../../pal/screen-adapter/web/screen-adapter.ts","../../../cocos/core/platform/screen.ts","../../../cocos/core/platform/sys.ts","../../../cocos/core/platform/deprecated.ts","../../../cocos/core/platform/visible-rect.ts","../../../cocos/core/geometry/aabb.ts","../../../cocos/core/geometry/capsule.ts","../../../cocos/core/geometry/frustum.ts","../../../cocos/core/geometry/obb.ts","../../../cocos/core/curves/keyframe-curve.ts","../../../cocos/core/curves/real-curve-param.ts","../../../cocos/core/curves/solve-cubic.ts","../../../cocos/core/data/decorators/utils.ts","../../../cocos/core/data/decorators/ccclass.ts","../../../cocos/core/data/decorators/component.ts","../../../cocos/core/data/decorators/property.ts","../../../cocos/core/data/decorators/serializable.ts","../../../cocos/core/data/decorators/editable.ts","../../../cocos/core/data/decorators/type.ts","../../../cocos/core/data/decorators/override.ts","../../../cocos/core/data/editor-extendable.ts","../../../cocos/core/data/utils/compact-value-type-array.ts","../../../cocos/core/data/custom-serializable.ts","../../../cocos/core/algorithm/easing.ts","../../../cocos/core/data/index.ts","../../../cocos/core/curves/easing-method.ts","../../../cocos/core/curves/curve.ts","../../../cocos/core/curves/bezier.ts","../../../cocos/core/curves/quat-curve.ts","../../../cocos/core/curves/gradient.ts","../../../cocos/core/curves/object-curve.ts","../../../cocos/core/geometry/curve.ts","../../../cocos/core/geometry/spline.ts","../../../cocos/core/geometry/spec.ts","../../../cocos/core/geometry/deprecated-3.0.0.ts","../../../cocos/core/system.ts","../../../cocos/core/scheduler.ts","../../../cocos/core/deprecated.ts","../../../cocos/core/deprecated-3.7.0.ts","../../../cocos/core/algorithm/index.ts","../../../cocos/core/index.ts"],"sourcesContent":["/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * Searches the **ascending sorted** array for an element and returns the index of that element.\r\n * @param array The array to search in.\r\n * @param value The value to search.\r\n * @returns The index of the searched element in the sorted array, if found;\r\n * otherwise, returns the complement of the index of the next element greater than the element to be searched or,\r\n * returns the complement of array's length if no element is greater than the element to be searched or the array is empty.\r\n * @engineInternal\r\n */\r\nexport function binarySearch (array: number[], value: number): number {\r\n    return binarySearchEpsilon(array, value, 0);\r\n}\r\n\r\n/**\r\n * Searches the **ascending sorted** number array for an element and returns the index of that element.\r\n * @param array The array to search in.\r\n * @param value The value to search.\r\n * @param EPSILON The epsilon to compare the numbers. Default to `1e-6`.\r\n * @returns The index of the searched element in the sorted array, if found;\r\n * otherwise, returns the complement of the index of the next element greater than the element to be searched or,\r\n * returns the complement of array's length if no element is greater than the element to be searched or the array is empty.\r\n * @engineInternal\r\n */\r\nexport function binarySearchEpsilon (array: Readonly<ArrayLike<number>>, value: number, EPSILON = 1e-6): number {\r\n    let low = 0;\r\n    let high = array.length - 1;\r\n    let middle = high >>> 1;\r\n    for (; low <= high; middle = (low + high) >>> 1) {\r\n        const test = array[middle];\r\n        if (test > (value + EPSILON)) {\r\n            high = middle - 1;\r\n        } else if (test < (value - EPSILON)) {\r\n            low = middle + 1;\r\n        } else {\r\n            return middle;\r\n        }\r\n    }\r\n    return ~low;\r\n}\r\n\r\n/**\r\n * Searches the **ascending sorted** array for an element and returns the index of that element.\r\n * @param array The array to search in.\r\n * @param value The value to search.\r\n * @param lessThan Comparison function object which returns ​true if the first argument is less than the second.\r\n * @returns The index of the searched element in the sorted array, if found;\r\n * otherwise, returns the complement of the index of the next element greater than the searching element or,\r\n * returns the complement of array's length if no element is greater than the searching element or the array is empty.\r\n * @engineInternal\r\n */\r\nexport function binarySearchBy<T, U> (array: T[], value: U, lessThan: (lhs: T, rhs: U) => number): number {\r\n    let low = 0;\r\n    let high = array.length - 1;\r\n    let middle = high >>> 1;\r\n    for (; low <= high; middle = (low + high) >>> 1) {\r\n        const test = array[middle];\r\n        if (lessThan(test, value) < 0) {\r\n            high = middle - 1;\r\n        } else if (lessThan(test, value) > 0) {\r\n            low = middle + 1;\r\n        } else {\r\n            return middle;\r\n        }\r\n    }\r\n    return ~low;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable @typescript-eslint/ban-types */\r\n/* eslint-disable import/no-mutable-exports */\r\n/* eslint-disable func-names */\r\n/* eslint-disable @typescript-eslint/no-unsafe-return */\r\n/* eslint-disable prefer-const */\r\n\r\nimport { DEBUG } from 'internal:constants';\r\nimport { error, errorID, warn, warnID } from '../platform/debug';\r\n\r\nlet defaultLogTimes = 10;\r\n\r\n/**\r\n * @deprecated since v3.6.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport function setDefaultLogTimes (times: number): void {\r\n    if (times > 0) {\r\n        defaultLogTimes = times;\r\n    }\r\n}\r\n\r\ninterface IReplacement {\r\n    /** Deprecated property name. */\r\n    name: string;\r\n    /** Times to print log when accessing deprecated property. */\r\n    logTimes?: number;\r\n    /** New property name. */\r\n    newName?: string;\r\n    /** The object to deprecate this property. */\r\n    target?: object;\r\n    /** The name of the object to deprecate this property. */\r\n    targetName?: string;\r\n    /** New function to access the property. If it is valid, `customSetter` and `customGetter` will be ignored. */\r\n    customFunction?: Function;\r\n    /** New setter. */\r\n    customSetter?: (v: any) => void;\r\n    /** New getter. */\r\n    customGetter?: () => any;\r\n    /** Property description used in warning log. */\r\n    suggest?: string;\r\n}\r\n\r\ninterface IRemoveItem {\r\n    /** Removed property name. */\r\n    name: string;\r\n    /** Times to print log when accessing removed property. */\r\n    logTimes?: number;\r\n    /** Property description used in warning log. */\r\n    suggest?: string;\r\n}\r\n\r\ninterface IMarkItem {\r\n    /** Deprecated property name. */\r\n    name: string;\r\n    /** Times to print log when accessing deprecated property. */\r\n    logTimes?: number;\r\n    /** Property description used in warning log. */\r\n    suggest?: string;\r\n}\r\n\r\n/**\r\n * @deprecated since v3.6.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport let replaceProperty: (owner: object, ownerName: string, properties: IReplacement[]) => void;\r\n\r\n/**\r\n * @deprecated since v3.6.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport let removeProperty: (owner: object, ownerName: string, properties: IRemoveItem[]) => void;\r\n\r\n/**\r\n * @deprecated since v3.6.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport let markAsWarning: (owner: object, ownerName: string, properties: IMarkItem[]) => void;\r\n\r\nlet replacePropertyLog: (n: string, dp: string, n2: string, newp: string, f: Function, id: number, s: string) => void;\r\n\r\nlet markAsWarningLog: (n: string, dp: string, f: Function, id: number, s: string) => void;\r\n\r\nlet removePropertyLog: (n: string, dp: string, f: Function, id: number, s: string) => void;\r\n\r\n// if (DEBUG) {\r\n\r\ninterface IMeessageItem {\r\n    id: Readonly<number>;\r\n    logTimes: Readonly<number>;\r\n    count: number;\r\n}\r\n\r\nlet messageID = 0;\r\nconst messageMap: Map<number, IMeessageItem> = new Map<number, IMeessageItem>();\r\n\r\nreplacePropertyLog = (n: string, dp: string, n2: string, newp: string, f: Function, id: number, s: string): void => {\r\n    const item = messageMap.get(id);\r\n    if (item && item.logTimes > item.count) {\r\n        f(`'%s' is deprecated, please use '%s' instead. ${s}`, `${n}.${dp}`, `${n2}.${newp}`);\r\n        item.count++;\r\n    }\r\n};\r\n\r\nreplaceProperty = (owner: object, ownerName: string, properties: IReplacement[]): void => {\r\n    if (owner == null) return;\r\n\r\n    properties.forEach((item: IReplacement): void => {\r\n        const id = messageID++;\r\n        messageMap.set(id, { id, count: 0, logTimes: item.logTimes !== undefined ? item.logTimes : defaultLogTimes });\r\n        const target = item.target != null ? item.target : owner;\r\n        const newName = item.newName != null ? item.newName : item.name;\r\n        const targetName = item.targetName != null ? item.targetName : ownerName;\r\n        const sameTarget = target === owner;\r\n        const suggest = item.suggest ? `(${item.suggest})` : '';\r\n        if (item.customFunction != null) {\r\n            owner[item.name] = function (this: any): any {\r\n                replacePropertyLog(ownerName, item.name, targetName, newName, warn, id, suggest);\r\n                return item.customFunction!.call(this, ...arguments);\r\n            };\r\n        } else if (item.customSetter != null || item.customGetter != null) {\r\n            const hasSetter = item.customSetter != null;\r\n            const hasGetter = item.customGetter != null;\r\n            if (hasSetter && hasGetter) {\r\n                Object.defineProperty(owner, item.name, {\r\n                    get (this): any {\r\n                        replacePropertyLog(ownerName, item.name, targetName, newName, warn, id, suggest);\r\n                        return item.customGetter!.call(this);\r\n                    },\r\n                    set (this, v: any): void {\r\n                        replacePropertyLog(ownerName, item.name, targetName, newName, warn, id, suggest);\r\n                        item.customSetter!.call(this, v);\r\n                    },\r\n                    enumerable: false,\r\n                });\r\n            } else if (hasSetter) {\r\n                Object.defineProperty(owner, item.name, {\r\n                    set (this, v: any): void {\r\n                        replacePropertyLog(ownerName, item.name, targetName, newName, warn, id, suggest);\r\n                        item.customSetter!.call(this, v);\r\n                    },\r\n                    enumerable: false,\r\n                });\r\n            } else if (hasGetter) {\r\n                Object.defineProperty(owner, item.name, {\r\n                    get (this): any {\r\n                        replacePropertyLog(ownerName, item.name, targetName, newName, warn, id, suggest);\r\n                        return item.customGetter!.call(this);\r\n                    },\r\n                    enumerable: false,\r\n                });\r\n            }\r\n        } else {\r\n            Object.defineProperty(owner, item.name, {\r\n                get (this): any {\r\n                    replacePropertyLog(ownerName, item.name, targetName, newName, warn, id, suggest);\r\n                    return sameTarget ? this[newName] : target[newName];\r\n                },\r\n                set (this, v: any): void {\r\n                    replacePropertyLog(ownerName, item.name, targetName, newName, warn, id, suggest);\r\n                    if (sameTarget) {\r\n                        this[newName] = v;\r\n                    } else {\r\n                        target[newName] = v;\r\n                    }\r\n                },\r\n                enumerable: false,\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\nremovePropertyLog = (n: string, dp: string, f: Function, id: number, s: string): void => {\r\n    const item = messageMap.get(id);\r\n    if (item && item.logTimes > item.count) {\r\n        f(`'%s' has been removed. ${s}`, `${n}.${dp}`);\r\n        item.count++;\r\n    }\r\n};\r\n\r\nremoveProperty = (owner: object, ownerName: string, properties: IRemoveItem[]): void => {\r\n    if (owner == null) return;\r\n\r\n    properties.forEach((item: IRemoveItem): void => {\r\n        const id = messageID++;\r\n        messageMap.set(id, { id, count: 0, logTimes: item.logTimes !== undefined ? item.logTimes : defaultLogTimes });\r\n        const suggest = item.suggest ? `(${item.suggest})` : '';\r\n        Object.defineProperty(owner, item.name, {\r\n            get (this): void {\r\n                return removePropertyLog(ownerName, item.name, error, id, suggest);\r\n            },\r\n            set (this): void {\r\n                removePropertyLog(ownerName, item.name, error, id, suggest);\r\n            },\r\n            enumerable: false,\r\n        });\r\n    });\r\n};\r\n\r\nmarkAsWarningLog = (n: string, dp: string, f: Function, id: number, s: string): void => {\r\n    const item = messageMap.get(id);\r\n    if (item && item.logTimes > item.count) {\r\n        f(`'%s' is deprecated. ${s}`, `${n}.${dp}`);\r\n        item.count++;\r\n    }\r\n};\r\n\r\nmarkAsWarning = (owner: object, ownerName: string, properties: IMarkItem[]): void => {\r\n    if (!DEBUG || owner == null) return;\r\n\r\n    const _defaultGetSet = (d: PropertyDescriptor, n: string, dp: string, f: Function, id: number, s: string): void => {\r\n        if (d.get) {\r\n            const oldGet = d.get;\r\n            d.get = function (this): any {\r\n                markAsWarningLog(n, dp, f, id, s);\r\n                return oldGet.call(this);\r\n            };\r\n        }\r\n        if (d.set) {\r\n            const oldSet = d.set;\r\n            d.set = function (this, v: any): void {\r\n                markAsWarningLog(n, dp, f, id, s);\r\n                oldSet.call(this, v);\r\n            };\r\n        }\r\n        Object.defineProperty(owner, dp, d);\r\n    };\r\n\r\n    properties.forEach((item: IMarkItem): void => {\r\n        const deprecatedProp = item.name;\r\n        const descriptor = Object.getOwnPropertyDescriptor(owner, deprecatedProp);\r\n        if (!descriptor || !descriptor.configurable) { return; }\r\n        const id = messageID++;\r\n        messageMap.set(id, { id, count: 0, logTimes: item.logTimes !== undefined ? item.logTimes : defaultLogTimes });\r\n        const suggest = item.suggest ? `(${item.suggest})` : '';\r\n        if (typeof descriptor.value !== 'undefined') {\r\n            if (typeof descriptor.value === 'function') {\r\n                const oldValue = descriptor.value as Function;\r\n                owner[deprecatedProp] = function (this): any {\r\n                    markAsWarningLog(ownerName, deprecatedProp, warn, id, suggest);\r\n                    return oldValue.call(this, ...arguments);\r\n                };\r\n            } else {\r\n                let oldValue = descriptor.value;\r\n                Object.defineProperty(owner, deprecatedProp, {\r\n                    configurable: true,\r\n                    get (): any {\r\n                        markAsWarningLog(ownerName, deprecatedProp, warn, id, suggest);\r\n                        return oldValue;\r\n                    },\r\n                });\r\n                if (descriptor.writable) {\r\n                    Object.defineProperty(owner, deprecatedProp, {\r\n                        set (value): void {\r\n                            markAsWarningLog(ownerName, deprecatedProp, warn, id, suggest);\r\n                            oldValue = value;\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            _defaultGetSet(descriptor, ownerName, deprecatedProp, warn, id, suggest);\r\n        }\r\n        Object.defineProperty(owner, deprecatedProp, { enumerable: false });\r\n    });\r\n};\r\n\r\n// } else {\r\n//     // for compatible\r\n\r\n//     replaceProperty = () => { };\r\n//     removeProperty = () => { };\r\n//     markAsWarning = () => { };\r\n\r\n//     replacePropertyLog = () => { };\r\n//     removePropertyLog = () => { };\r\n//     markAsWarningLog = () => { };\r\n// }\r\n\r\n/**\r\n * @engineInternal\r\n */\r\ninterface IDeprecateInfo {\r\n    newName?: string;\r\n    since: string;\r\n    removed: boolean,\r\n}\r\n\r\n/**\r\n * @engineInternal\r\n */\r\ninterface TopLevelDeprecateList {\r\n    [name: string]: IDeprecateInfo | undefined;\r\n}\r\n\r\nconst topLevelDeprecateList: TopLevelDeprecateList = {\r\n};\r\n\r\n/**\r\n * This is an internal method to register the deprecate info of module exported binding name.\r\n * DO NOT USE THIS INTERFACE.\r\n *\r\n * @example\r\n * ```ts\r\n * deprecateModuleExportedName({\r\n *     ButtonComponent: {\r\n *         newName: 'Button',\r\n *         since: '1.2.0',\r\n *         removed: false,\r\n *     },\r\n * });\r\n * ```\r\n * @engineInternal\r\n */\r\nexport function deprecateModuleExportedName (deprecateList: TopLevelDeprecateList): void {\r\n    for (let deprecateName in deprecateList) {\r\n        const deprecateInfo = deprecateList[deprecateName];\r\n        topLevelDeprecateList[deprecateName] = deprecateInfo;\r\n    }\r\n}\r\n\r\nfunction _checkObsoleteByName (checkName: string): void {\r\n    const deprecateInfo = topLevelDeprecateList[checkName];\r\n    if (!deprecateInfo) {\r\n        return;\r\n    }\r\n    const { newName, since, removed } = deprecateInfo;\r\n    if (removed) {\r\n        if (newName) {\r\n            errorID(16003, checkName, since, newName);\r\n        } else {\r\n            errorID(16002, checkName, since);\r\n        }\r\n    } else if (newName) {\r\n        warnID(16001, checkName, since, newName);\r\n    } else {\r\n        warnID(16000, checkName, since);\r\n    }\r\n}\r\n\r\n/**\r\n * An internal method to check whether the top level interface is deprecated.\r\n * DO NOT USE THIS INTERFACE.\r\n *\r\n * @example\r\n * ```ts\r\n * // print deprecate info of ButtonComponent and ToggleComponent\r\n * import { ButtonComponent, ToggleComponent } from 'cc';\r\n * ```\r\n * @engineInternal\r\n */\r\nexport function __checkObsolete__ (checkList: string[]): void {\r\n    for (let checkName of checkList) {\r\n        _checkObsoleteByName(checkName);\r\n    }\r\n}\r\n\r\nlet _cachedProxy;\r\n/**\r\n * An internal method to check whether the top level interface is deprecated in namespace.\r\n * DO NOT USE THIS INTERFACE.\r\n *\r\n * @example\r\n * ```ts\r\n * import * as cc from 'cc';\r\n * console.log(cc.ButtonComponent);  // print deprecate info of ButtonComponent\r\n * ```\r\n * @engineInternal\r\n */\r\nexport function __checkObsoleteInNamespace__ (ccNamespace: object): any {\r\n    if (!_cachedProxy) {\r\n        if (typeof Proxy === 'undefined') {\r\n            _cachedProxy = {};\r\n        } else {\r\n            _cachedProxy = new Proxy(ccNamespace, {\r\n                get (target, name, receiver): any {\r\n                    // NOTE: for now we use tsc version 4.3.5, which has not supported symbol as index.\r\n                    _checkObsoleteByName(name as string);\r\n                    return Reflect.get(target, name, receiver);\r\n                },\r\n            });\r\n        }\r\n    }\r\n    return _cachedProxy;\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nconst sMetadataTag = Symbol('cc:SerializationMetadata');\r\n\r\n/**\r\n * @internal DO NOT USE IT IN YOUR CODES.\r\n * @param constructor\r\n * @returns\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function getSerializationMetadata (constructor: Function): SerializationMetadata | undefined {\r\n    return (constructor as MayBeInjected)[sMetadataTag];\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function getOrCreateSerializationMetadata (constructor: Function): SerializationMetadata {\r\n    return (constructor as MayBeInjected)[sMetadataTag] ??= {};\r\n}\r\n\r\n/**\r\n * @internal For internal usage only. DO NOT USE IT IN YOUR CODES.\r\n */\r\nexport interface SerializationMetadata {\r\n    uniquelyReferenced?: boolean;\r\n}\r\n\r\ninterface MayBeInjected {\r\n    [sMetadataTag]?: SerializationMetadata;\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2024 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { IColorLike } from './type-define';\r\nimport { clamp, EPSILON } from './utils';\r\nimport { legacyCC } from '../global-exports';\r\nimport { assertIsTrue } from '../data/utils/asserts';\r\nimport { Vec4 } from './vec4';\r\nimport { Vec3 } from './vec3';\r\nimport { Modifiable } from '../utils/misc';\r\n\r\nconst toFloat = 1 / 255;\r\nconst R_INDEX = 0;\r\nconst G_INDEX = 1;\r\nconst B_INDEX = 2;\r\nconst A_INDEX = 3;\r\n\r\nconst mathAbs = Math.abs;\r\nconst mathMax = Math.max;\r\n\r\nfunction freezeColor (r: number, g: number, b: number, a: number): Readonly<Color> {\r\n    return Object.freeze(new Color(r, g, b, a));\r\n}\r\n\r\n/**\r\n * @en Representation of RGBA colors.<br/>\r\n * Each color component is an integer value with a range from 0 to 255.<br/>\r\n * @zh 通过 Red、Green、Blue 颜色通道表示颜色，并通过 Alpha 通道表示不透明度。<br/>\r\n * 每个通道都为取值范围 [0, 255] 的整数。<br/>\r\n */\r\nexport class Color extends ValueType implements Modifiable {\r\n    public static WHITE = freezeColor(255, 255, 255, 255);\r\n    public static GRAY = freezeColor(127, 127, 127, 255);\r\n    public static BLACK = freezeColor(0, 0, 0, 255);\r\n    public static TRANSPARENT = freezeColor(0, 0, 0, 0);\r\n    public static RED = freezeColor(255, 0, 0, 255);\r\n    public static GREEN = freezeColor(0, 255, 0, 255);\r\n    public static BLUE = freezeColor(0, 0, 255, 255);\r\n    public static CYAN = freezeColor(0, 255, 255, 255);\r\n    public static MAGENTA = freezeColor(255, 0, 255, 255);\r\n    public static YELLOW = freezeColor(255, 255, 0, 255);\r\n\r\n    /**\r\n     * @en Copy content of a color into another and save the results to out color.\r\n     * @zh 获得指定颜色的拷贝\r\n     */\r\n    public static clone<Out extends IColorLike> (a: Out): Color {\r\n        const out = new Color();\r\n        out.r = a.r;\r\n        out.g = a.g;\r\n        out.b = a.b;\r\n        out.a = a.a;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Clone a color and save the results to out color.\r\n     * @zh 复制目标颜色\r\n     */\r\n    public static copy<Out extends IColorLike> (out: Out, a: Out): Out {\r\n        out.r = a.r;\r\n        out.g = a.g;\r\n        out.b = a.b;\r\n        out.a = a.a;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Set the components of a color to the given values and save the results to out color.\r\n     * @zh 设置颜色值\r\n     */\r\n    public static set<Out extends IColorLike> (out: Out, r: number, g: number, b: number, a: number): Out {\r\n        out.r = r;\r\n        out.g = g;\r\n        out.b = b;\r\n        out.a = a;\r\n        return out;\r\n    }\r\n    /**\r\n     * @en Convert linear color from rgb8 0~255 to Vec4 0~1\r\n     * @zh 将当前颜色转换为到 Vec4\r\n     * @returns Vec4 as float color value\r\n     * @example\r\n     * ```\r\n     * const color = Color.YELLOW;\r\n     * color.toVec4();\r\n     * ```\r\n     */\r\n    public static toVec4 (color: Color, out?: Vec4): Vec4 {\r\n        const sourceData = color._data;\r\n        out = out !== undefined ?  out : new Vec4();\r\n        out.x = sourceData[R_INDEX] * toFloat;\r\n        out.y = sourceData[G_INDEX] * toFloat;\r\n        out.z = sourceData[B_INDEX] * toFloat;\r\n        out.w = sourceData[A_INDEX] * toFloat;\r\n        return out;\r\n    }\r\n    /**\r\n     * @en Convert 8bit linear color from Vec4\r\n     * @zh 使用 Vec4 设置 8 bit 颜色\r\n     * @returns 8 Bit srgb value\r\n     * @example\r\n     * ```\r\n     * color.fromVec4(new Vec4(1,1,1,1));\r\n     * ```\r\n     */\r\n    public static fromVec4 (value: Vec4, out?: Color): Color {\r\n        out = out === undefined ? new Color() : out;\r\n        const outData = out._data;\r\n        outData[R_INDEX] = value.x / toFloat;\r\n        outData[G_INDEX] = value.y / toFloat;\r\n        outData[B_INDEX] = value.z / toFloat;\r\n        outData[A_INDEX] = value.w / toFloat;\r\n        return out;\r\n    }\r\n    /**\r\n     * @en Converts the hexadecimal formal color into rgb formal and save the results to out color.\r\n     *   the argument `hex` could be hex-string or hex-number (8-digit or 6-digit).\r\n     *   the hex-string should be like : '#12345678' '#123456', '123456', '12345678'.\r\n     *   the hex-number should be like : 0x12345678, 0x123456 .\r\n     * @zh 从十六进制颜色字符串中读入颜色到 out 中\r\n     *   参数 hex 支持 16进制字符串 或者 16进制数值 (8位数字 或者 6位数字).\r\n     *   16进制字符串的格式应该类似: '#12345678' '#123456', '123456', '12345678'.\r\n     *   16进制数值的格式应该类似:  0x12345678, 0x123456 .\r\n     */\r\n    public static fromHEX<Out extends IColorLike> (out: Out, hex: string | number): Out {\r\n        let hexNumber: number;\r\n        if (typeof hex === 'string') {\r\n            hex = hex[0] === '#' ? hex.substring(1) : hex;\r\n            if (hex.length === 6) {\r\n                hex += 'FF';\r\n            } else if (hex.length === 3) {\r\n                hex = `${hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]}FF`;\r\n            } else if (hex.length === 4) {\r\n                hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\r\n            }\r\n            hexNumber = Number(`0x${hex}`);\r\n        } else {\r\n            if (hex < 0x1000000) {\r\n                hex = (hex << 8) + 0xff;\r\n            }\r\n            hexNumber = hex;\r\n        }\r\n        out.r = hexNumber >>> 24;\r\n        out.g = (hexNumber & 0x00ff0000) >>> 16;\r\n        out.b = (hexNumber & 0x0000ff00) >>> 8;\r\n        out.a = hexNumber & 0x000000ff;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Add two colors by components. And save the results to out color.\r\n     * @zh 逐通道颜色加法\r\n     */\r\n    public static add<Out extends IColorLike> (out: Out, a: Out, b: Out): Out {\r\n        out.r = a.r + b.r;\r\n        out.g = a.g + b.g;\r\n        out.b = a.b + b.b;\r\n        out.a = a.a + b.a;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Subtract each components of color b from each components of color a. And save the results to out color.\r\n     * @zh 逐通道颜色减法\r\n     */\r\n    public static subtract<Out extends IColorLike> (out: Out, a: Out, b: Out): Out {\r\n        out.r = a.r - b.r;\r\n        out.g = a.g - b.g;\r\n        out.b = a.b - b.b;\r\n        out.a = a.a - b.a;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply each components of two colors. And save the results to out color.\r\n     * @zh 逐通道颜色乘法\r\n     */\r\n    public static multiply<Out extends IColorLike> (out: Out, a: Out, b: Out): Out {\r\n        out.r = a.r * b.r;\r\n        out.g = a.g * b.g;\r\n        out.b = a.b * b.b;\r\n        out.a = a.a * b.a;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Divide each components of color a by each components of color b. And save the results to out color.\r\n     * @zh 逐通道颜色除法\r\n     */\r\n    public static divide<Out extends IColorLike> (out: Out, a: Out, b: Out): Out {\r\n        out.r = a.r / b.r;\r\n        out.g = a.g / b.g;\r\n        out.b = a.b / b.b;\r\n        out.a = a.a / b.a;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply all channels in a color with the given scale factor, and save the results to out color.\r\n     * @zh 全通道统一缩放颜色\r\n     */\r\n    public static scale<Out extends IColorLike> (out: Out, a: Out, b: number): Out {\r\n        out.r = a.r * b;\r\n        out.g = a.g * b;\r\n        out.b = a.b * b;\r\n        out.a = a.a * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Performs a linear interpolation between two colors.\r\n     * @zh 逐通道颜色线性插值：A + t * (B - A)\r\n     */\r\n    public static lerp<Out extends IColorLike> (out: Out, from: Out, to: Out, ratio: number): Out {\r\n        const fromR = from.r;\r\n        const fromG = from.g;\r\n        const fromB = from.b;\r\n        const fromA = from.a;\r\n        out.r = fromR + ((to.r - fromR) * ratio);\r\n        out.g = fromG + ((to.g - fromG) * ratio);\r\n        out.b = fromB + ((to.b - fromB) * ratio);\r\n        out.a = fromA + ((to.a - fromA) * ratio);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Convert a color object to a RGBA array, and save the results to out color.\r\n     * @zh 颜色转数组\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static toArray<Out extends IWritableArrayLike<number>> (out: Out, a: IColorLike, ofs = 0): Out {\r\n        const scale = (a instanceof Color || a.a > 1) ? 1 / 255 : 1;\r\n        out[ofs + 0] = a.r * scale;\r\n        out[ofs + 1] = a.g * scale;\r\n        out[ofs + 2] = a.b * scale;\r\n        out[ofs + 3] = a.a * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the given color with RGBA values in an array, and save the results to out color.\r\n     * @zh 数组转颜色\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static fromArray<Out extends IColorLike> (arr: IWritableArrayLike<number>, out: Out, ofs = 0): Out {\r\n        out.r = arr[ofs + 0] * 255;\r\n        out.g = arr[ofs + 1] * 255;\r\n        out.b = arr[ofs + 2] * 255;\r\n        out.a = arr[ofs + 3] * 255;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @zh 从无符号 32 位整数构造颜色，高 8 位为 alpha 通道，次高 8 位为蓝色通道，次低 8 位为绿色通道，低 8 位为红色通道。\r\n     * @en Construct color from a unsigned 32 bit integer, the highest 8 bits is for alpha channel, the second highest 8 bits is for blue channel,\r\n     * the second lowest 8 bits is for green channel, and the lowest 8 bits if for red channel.\r\n     *\r\n     * @param out @en Output color object. @zh 输出的颜色对象。\r\n     * @param uint32 @en The unsigned 32 bit integer @zh 32 位无符号整数\r\n     * @returns @en The `out` object @zh `out` 对象\r\n     */\r\n    public static fromUint32<Out extends IColorLike> (out: Out, uint32: number): Out {\r\n        // Make sure it is an unsigned value.\r\n        uint32 >>>= 0;\r\n\r\n        out.r = uint32 & 0xff;\r\n        out.g = (uint32 >> 8)  & 0xff;\r\n        out.b = (uint32 >> 16) & 0xff;\r\n        out.a = (uint32 >> 24) & 0xff;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @zh 转换当前颜色为无符号 32 位整数, 高 8 位为 alpha 通道，次高 8 位为蓝色通道，次低 8 位为绿色通道，低 8 位为红色通道。\r\n     * @en Convert the current color to a unsigned 32 bit integer, the highest 8 bits is for alpha channel,\r\n     * the second highest 8 bits is for blue channel, the second lowest 8 bits is for green channel, and the lowest 8 bits if for red channel.\r\n     *\r\n     * @param color @en The color. @zh 颜色。\r\n     * @returns @en The converted unsigned 32 bit integer. @zh 32 位无符号整数。\r\n     */\r\n    public static toUint32 (color: IColorLike): number {\r\n        return (color.a << 24 | color.b << 16 | color.g << 8 | color.r) >>> 0;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the two given colors are identical\r\n     * @zh 颜色等价判断\r\n     */\r\n    public static strictEquals<Out extends IColorLike> (a: Out, b: Out): boolean {\r\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the two given colors are approximately equivalent. Difference of each channel is smaller that the epsilon.\r\n     * @zh 排除浮点数误差的颜色近似等价判断\r\n     */\r\n    public static equals<Out extends IColorLike> (a: Out, b: Out, epsilon = EPSILON): boolean {\r\n        const hasInf = mathAbs(a.r) === Infinity || mathAbs(a.g) === Infinity || mathAbs(a.b) === Infinity || mathAbs(a.a) === Infinity;\r\n        return !hasInf && (mathAbs(a.r - b.r) <= epsilon * mathMax(1.0, mathAbs(a.r), mathAbs(b.r))\r\n            && mathAbs(a.g - b.g) <= epsilon * mathMax(1.0, mathAbs(a.g), mathAbs(b.g))\r\n            && mathAbs(a.b - b.b) <= epsilon * mathMax(1.0, mathAbs(a.b), mathAbs(b.b))\r\n            && mathAbs(a.a - b.a) <= epsilon * mathMax(1.0, mathAbs(a.a), mathAbs(b.a)));\r\n    }\r\n\r\n    /**\r\n     * @en Convert the given color to a hex color value. And save the results to out color.\r\n     * @zh 获取指定颜色的整型数据表示\r\n     */\r\n    public static hex<Out extends IColorLike> (a: Out): number {\r\n        return ((a.r * 255) << 24 | (a.g * 255) << 16 | (a.b * 255) << 8 | a.a * 255) >>> 0;\r\n    }\r\n\r\n    private _data = new Uint8ClampedArray(4);\r\n\r\n    /**\r\n     * @en Get or set red channel value.\r\n     * @zh 获取或设置当前颜色的 Red 通道。\r\n     */\r\n    get r (): number {\r\n        return this._data[R_INDEX];\r\n    }\r\n\r\n    set r (red: number) {\r\n        this._data[R_INDEX] = red;\r\n    }\r\n\r\n    /**\r\n     * @en Get or set green channel value.\r\n     * @zh 获取或设置当前颜色的 Green 通道。\r\n     */\r\n    get g (): number {\r\n        return this._data[G_INDEX];\r\n    }\r\n\r\n    set g (green: number) {\r\n        this._data[G_INDEX] = green;\r\n    }\r\n\r\n    /**\r\n     * @en Get or set blue channel value.\r\n     * @zh 获取或设置当前颜色的 Blue 通道。\r\n     */\r\n    get b (): number {\r\n        return this._data[B_INDEX];\r\n    }\r\n\r\n    set b (blue: number) {\r\n        this._data[B_INDEX] = blue;\r\n    }\r\n\r\n    /** @en Get or set alpha channel value.\r\n     * @zh 获取或设置当前颜色的透明度通道。\r\n     */\r\n    get a (): number {\r\n        return this._data[A_INDEX];\r\n    }\r\n\r\n    set a (alpha: number) {\r\n        this._data[A_INDEX] = alpha;\r\n    }\r\n\r\n    // compatibility with vector interfaces\r\n    get x (): number { return this._data[R_INDEX] * toFloat; }\r\n    set x (value: number) { this._data[R_INDEX] = value * 255; }\r\n    get y (): number { return this._data[G_INDEX] * toFloat; }\r\n    set y (value: number) { this._data[G_INDEX] = value * 255; }\r\n    get z (): number { return this._data[B_INDEX] * toFloat; }\r\n    set z (value: number) { this._data[B_INDEX] = value * 255; }\r\n    get w (): number { return this._data[A_INDEX] * toFloat; }\r\n    set w (value: number) { this._data[A_INDEX] = value * 255; }\r\n\r\n    /**\r\n     * @en Construct a same color from the given color\r\n     * @zh 构造与指定颜色相等的颜色。\r\n     * @param other Specified color\r\n     */\r\n    constructor (other: Readonly<Color>);\r\n\r\n    /**\r\n     * @en Construct a color form the hex color string\r\n     * @zh 用十六进制颜色字符串中构造颜色。\r\n     * @param hexString Hexadecimal color string.\r\n     */\r\n\r\n    constructor (hexString: string);\r\n\r\n    /**\r\n     * @en Construct a color\r\n     * @zh 构造具有指定通道的颜色。\r\n     * @param r red component of the color, default value is 0.\r\n     * @param g green component of the color, default value is 0.\r\n     * @param b blue component of the color, default value is 0.\r\n     * @param a alpha component of the color, default value is 255.\r\n     */\r\n    constructor (r?: number, g?: number, b?: number, a?: number);\r\n\r\n    constructor (r?: number | Readonly<Color> | string, g?: number, b?: number, a?: number) {\r\n        super();\r\n        if (typeof r === 'string') {\r\n            this.fromHEX(r);\r\n        } else if (g !== undefined) {\r\n            this.set(r as number, g, b, a);\r\n        } else {\r\n            this.set(r as Readonly<Color>);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clone a new color from the current color.\r\n     * @zh 克隆当前颜色。\r\n     */\r\n    public clone (): Color {\r\n        const ret = new Color();\r\n        ret._data.set(this._data);\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current color is identical with the given color\r\n     * @zh 判断当前颜色是否与指定颜色相等。\r\n     * @param other Specified color\r\n     * @returns Returns `true` when all channels of both colors are equal; otherwise returns `false`.\r\n     */\r\n    public equals (other: Readonly<Color>): boolean {\r\n        const otherColor = other as Color;\r\n        const thisData = this._data;\r\n        // otherColor may not be Color instance if invoked by tween action, so use getter to get property values.\r\n        return other && thisData[R_INDEX] === otherColor.r\r\n                     && thisData[G_INDEX] === otherColor.g\r\n                     && thisData[B_INDEX] === otherColor.b\r\n                     && thisData[A_INDEX] === otherColor.a;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate linear interpolation result between this color and another one with given ratio。\r\n     * @zh 根据指定的插值比率，从当前颜色到目标颜色之间做插值。\r\n     * @param to Target color\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     */\r\n    public lerp (to: Readonly<Color>, ratio: number): Color {\r\n        Color.lerp(this, this, to, ratio);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Convert to string with color information.\r\n     * @zh 返回当前颜色的字符串表示。\r\n     * @returns A string representation of the current color.\r\n     */\r\n    public toString (): string {\r\n        return `rgba(${this.r.toFixed()}, ${this.g.toFixed()}, ${this.b.toFixed()}, ${this.a.toFixed()})`;\r\n    }\r\n\r\n    /**\r\n     * @en Convert color to css format.\r\n     * @zh 将当前颜色转换为 CSS 格式。\r\n     * @param opt \"rgba\", \"rgb\", \"#rgb\" or \"#rrggbb\".\r\n     * @returns CSS format for the current color.\r\n     * @example\r\n     * ```ts\r\n     * let color = cc.Color.BLACK;\r\n     * color.toCSS();          // \"rgba(0,0,0,1.00)\";\r\n     * color.toCSS(\"rgba\");    // \"rgba(0,0,0,1.00)\";\r\n     * color.toCSS(\"rgb\");     // \"rgba(0,0,0)\";\r\n     * color.toCSS(\"#rgb\");    // \"#000\";\r\n     * color.toCSS(\"#rrggbb\"); // \"#000000\";\r\n     * ```\r\n     */\r\n    public toCSS (opt: ('rgba' | 'rgb' | '#rrggbb' | '#rrggbbaa') = 'rgba'): string {\r\n        if (opt === 'rgba') {\r\n            return `rgba(${this.r},${this.g},${this.b},${(this.a * toFloat).toFixed(2)})`;\r\n        } else if (opt === 'rgb') {\r\n            return `rgb(${this.r},${this.g},${this.b})`;\r\n        } else {\r\n            return `#${this.toHEX(opt)}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Converts the hexadecimal formal color into rgb formal and save the results to current color object.\r\n     *   the argument `hex` could be hex-string or hex-number (8-digit or 6-digit).\r\n     *   the hex-string should be like : '#12345678' '#123456', '123456', '12345678'.\r\n     *   the hex-number should be like : 0x12345678, 0x123456 .\r\n     * @zh 从十六进制颜色字符串中读入颜色到 当前color对象中\r\n     *   参数 hex 支持 16进制字符串 或者 16进制数值 (8位数字 或者 6位数字).\r\n     *   16进制字符串的格式应该类似: '#12345678' '#123456', '123456', '12345678'.\r\n     *   16进制数值的格式应该类似:  0x12345678, 0x123456 .\r\n     * @param hex the hex-string or hex-number\r\n     * @returns `this`\r\n     */\r\n    fromHEX (hex: string | number): Color {\r\n        let hexNumber: number;\r\n        if (typeof hex === 'string') {\r\n            hex = hex[0] === '#' ? hex.substring(1) : hex;\r\n            if (hex.length === 6) {\r\n                hex += 'FF';\r\n            } else if (hex.length === 3) {\r\n                hex = `${hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]}FF`;\r\n            } else if (hex.length === 4) {\r\n                hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\r\n            }\r\n            hexNumber = Number(`0x${hex}`);\r\n        } else {\r\n            if (hex < 0x1000000) {\r\n                hex = (hex << 8) + 0xff;\r\n            }\r\n            hexNumber = hex;\r\n        }\r\n        this.r = hexNumber >>> 24;\r\n        this.g = (hexNumber & 0x00ff0000) >>> 16;\r\n        this.b = (hexNumber & 0x0000ff00) >>> 8;\r\n        this.a = hexNumber & 0x000000ff;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en convert Color to HEX color string.\r\n     * @zh 转换当前颜色为十六进制颜色字符串。\r\n     * @param fmt \"#rrggbb\" or \"#rrggbbaa\".\r\n     * - `'#rrggbbaa'` obtains the hexadecimal value of the Red, Green, Blue,\r\n     *   Alpha channels (**two**, high complement 0) and connects them sequentially.\r\n     * - `'#rrggbb'` is similar to `'#rrggbbaa'` but does not include the Alpha channel.\r\n     * @returns the Hex color string\r\n     * @example\r\n     * ```\r\n     * const color = new Color(255, 14, 0, 255);\r\n     * color.toHEX(\"#rgb\");      // \"f00\";\r\n     * color.toHEX(\"#rrggbbaa\"); // \"ff0e00ff\"\r\n     * color.toHEX(\"#rrggbb\");   // \"ff0e00\"\r\n     * ```\r\n     */\r\n    public toHEX (fmt: '#rgb' | '#rrggbb' | '#rrggbbaa' = '#rrggbb'): string {\r\n        const thisData = this._data;\r\n        const prefix = '0';\r\n        // #rrggbb\r\n        const hex = [\r\n            (thisData[R_INDEX] < 16 ? prefix : '') + (thisData[R_INDEX]).toString(16),\r\n            (thisData[G_INDEX] < 16 ? prefix : '') + (thisData[G_INDEX]).toString(16),\r\n            (thisData[B_INDEX] < 16 ? prefix : '') + (thisData[B_INDEX]).toString(16),\r\n        ];\r\n        const i = -1;\r\n        if (fmt === '#rgb') {\r\n            hex[0] = hex[0][0];\r\n            hex[1] = hex[1][0];\r\n            hex[2] = hex[2][0];\r\n        } else if (fmt === '#rrggbbaa') {\r\n            hex.push((thisData[A_INDEX] < 16 ? prefix : '') + (thisData[A_INDEX]).toString(16));\r\n        }\r\n        return hex.join('');\r\n    }\r\n\r\n    /**\r\n     * @en Convert to rgb value.\r\n     * @zh 将当前颜色转换为 RGB 整数值。\r\n     * @returns RGB integer value. Starting from the lowest valid bit, each 8 bits is the value of the Red, Green, and Blue channels respectively.\r\n     * @example\r\n     * ```\r\n     * const color = Color.YELLOW;\r\n     * color.toRGBValue();\r\n     * ```\r\n     */\r\n    public toRGBValue (): number {\r\n        return (this._data[B_INDEX] << 16 | this._data[G_INDEX] << 8 | this._data[R_INDEX]);\r\n    }\r\n\r\n    /**\r\n     * @en Read HSV model color and convert to RGB color.\r\n     * @zh 从 HSV 颜色中读入当前颜色。\r\n     * @param h H value。\r\n     * @param s S value。\r\n     * @param v V value。\r\n     * @returns `this`\r\n     * @example\r\n     * ```\r\n     * const color = Color.YELLOW;\r\n     * color.fromHSV(0, 0, 1); // Color {r: 255, g: 255, b: 255, a: 255};\r\n     * ```\r\n     */\r\n    public fromHSV (h: number, s: number, v: number): Color {\r\n        let r = 0;\r\n        let g = 0;\r\n        let b = 0;\r\n        if (s === 0) {\r\n            r = g = b = v;\r\n        } else if (v === 0) {\r\n            r = g = b = 0;\r\n        } else {\r\n            if (h === 1) { h = 0; }\r\n            h *= 6;\r\n            const i = Math.floor(h);\r\n            const f = h - i;\r\n            const p = v * (1 - s);\r\n            const q = v * (1 - (s * f));\r\n            const t = v * (1 - (s * (1 - f)));\r\n            switch (i) {\r\n            default:\r\n                assertIsTrue(false);\r\n                // eslint-disable-next-line no-fallthrough\r\n            case 0:\r\n                r = v;\r\n                g = t;\r\n                b = p;\r\n                break;\r\n\r\n            case 1:\r\n                r = q;\r\n                g = v;\r\n                b = p;\r\n                break;\r\n\r\n            case 2:\r\n                r = p;\r\n                g = v;\r\n                b = t;\r\n                break;\r\n\r\n            case 3:\r\n                r = p;\r\n                g = q;\r\n                b = v;\r\n                break;\r\n\r\n            case 4:\r\n                r = t;\r\n                g = p;\r\n                b = v;\r\n                break;\r\n\r\n            case 5:\r\n                r = v;\r\n                g = p;\r\n                b = q;\r\n                break;\r\n            }\r\n        }\r\n        const thisData = this._data;\r\n        thisData[R_INDEX] = r * 255;\r\n        thisData[G_INDEX] = g * 255;\r\n        thisData[B_INDEX] = b * 255;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Transform to HSV model color.\r\n     * @zh 转换当前颜色为 HSV 颜色。\r\n     * @returns HSV format color\r\n     * @example\r\n     * ```\r\n     * import { Color } from 'cc';\r\n     * const color = Color.YELLOW;\r\n     * color.toHSV(); // {h: 0.1533864541832669, s: 0.9843137254901961, v: 1}\r\n     * ```\r\n     */\r\n    public toHSV (): { h: number; s: number; v: number; } {\r\n        const r = this._data[R_INDEX] * toFloat;\r\n        const g = this._data[G_INDEX] * toFloat;\r\n        const b = this._data[B_INDEX] * toFloat;\r\n        const hsv = { h: 0, s: 0, v: 0 };\r\n        const max = Math.max(r, g, b);\r\n        const min = Math.min(r, g, b);\r\n        let delta = 0;\r\n        hsv.v = max;\r\n        hsv.s = max ? (max - min) / max : 0;\r\n        if (!hsv.s) { hsv.h = 0; } else {\r\n            delta = max - min;\r\n            if (r === max) {\r\n                hsv.h = (g - b) / delta;\r\n            } else if (g === max) {\r\n                hsv.h = 2 + (b - r) / delta;\r\n            } else {\r\n                hsv.h = 4 + (r - g) / delta;\r\n            }\r\n            hsv.h /= 6;\r\n            if (hsv.h < 0) { hsv.h += 1.0; }\r\n        }\r\n        return hsv;\r\n    }\r\n\r\n    /**\r\n     * @en Set the color.\r\n     * @zh 设置当前颜色使其与指定颜色相等。\r\n     * @param other The specified color.\r\n     * @overload\r\n     * @param [r=0] red component of the color, the range is [0-255]\r\n     * @param [g=0] green component of the color\r\n     * @param [b=0] blue component of the color\r\n     * @param [a=255] alpha component of the color\r\n     * @returns Current color.\r\n     */\r\n    public set(other: Readonly<Color>): Color;\r\n    public set(r?: number, g?: number, b?: number, a?: number): Color;\r\n    public set (r?: number | Readonly<Color>, g?: number, b?: number, a?: number): Color {\r\n        const thisData = this._data;\r\n        if (typeof r === 'object') {\r\n            const other = r as Color;\r\n            if (other._data) {\r\n                // Tween action uses reflection to set color, so other may be just a IColorLike object.\r\n                // So should check _data property.\r\n                thisData.set(other._data);\r\n            } else {\r\n                thisData[R_INDEX] = other.r ?? 0;\r\n                thisData[G_INDEX] = other.g ?? 0;\r\n                thisData[B_INDEX] = other.b ?? 0;\r\n                thisData[A_INDEX] = other.a ?? 255;\r\n            }\r\n        } else {\r\n            thisData[R_INDEX] = r ?? 0;\r\n            thisData[G_INDEX] = g ?? 0;\r\n            thisData[B_INDEX] = b ?? 0;\r\n            thisData[A_INDEX] = a ?? 255;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current color by the specified color.\r\n     * @zh 将当前颜色乘以与指定颜色\r\n     * @param other The specified color.\r\n     */\r\n    public multiply (other: Color): Color {\r\n        const thisData = this._data;\r\n        // FIXME: not sure if other is really Color, so use getter.\r\n        thisData[R_INDEX] *= other.r / 255;\r\n        thisData[G_INDEX] *= other.g / 255;\r\n        thisData[B_INDEX] *= other.b / 255;\r\n        thisData[A_INDEX] *= other.a / 255;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en It is used in tween action. As can not modify this._data directly.\r\n     * @zn 被 tween action 使用。因为不能直接修改 this._data，所以返回用于修改的属性。\r\n     * @returns @en ['r', 'g', 'b', 'a'] @zh ['r', 'g', 'b', 'a']\r\n     */\r\n    public getModifiableProperties (): string[] {\r\n        return ['r', 'g', 'b', 'a'];\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.Color', Color, { r: 0, g: 0, b: 0, a: 255 });\r\nlegacyCC.Color = Color;\r\n\r\nexport function color (other: Color | string): Color;\r\nexport function color (r?: number, g?: number, b?: number, a?: number): Color;\r\n\r\nexport function color (r?: number | Color | string, g?: number, b?: number, a?: number): Color {\r\n    return new Color(r as number, g, b, a);\r\n}\r\n\r\nlegacyCC.color = color;\r\n\r\nexport function srgbToLinear (x: number): number {\r\n    if (x <= 0) return 0;\r\n    else if (x >= 1) return 1;\r\n    else if (x < 0.04045) return x / 12.92;\r\n    else return ((x + 0.055) / 1.055) ** 2.4;\r\n}\r\n\r\nexport function srgb8BitToLinear (x: number): number {\r\n    if ((x | 0) !== x || (x >>> 8) !== 0) { throw new RangeError('Value out of 8-bit range'); }\r\n    return SRGB_8BIT_TO_LINEAR[x];\r\n}\r\n\r\nexport function linearToSrgb (x: number): number {\r\n    if (x <= 0) return 0;\r\n    else if (x >= 1) return 1;\r\n    else if (x < 0.0031308) return x * 12.92;\r\n    else return x ** (1 / 2.4) * 1.055 - 0.055;\r\n}\r\n\r\nexport function linearToSrgb8Bit (x: number): number {\r\n    if (x <= 0) { return 0; }\r\n    const TABLE: Array<number> = SRGB_8BIT_TO_LINEAR;\r\n    if (x >= 1) { return TABLE.length - 1; }\r\n    let y = 0;\r\n    for (let i = TABLE.length >>> 1; i !== 0; i >>>= 1) {\r\n        if (TABLE[y | i] <= x) { y |= i; }\r\n    }\r\n    if (x - TABLE[y] <= TABLE[y + 1] - x) { return y; } else { return y + 1; }\r\n}\r\n\r\n// use table for more consistent conversion between uint8 and float, offline processes only.\r\nlet SRGB_8BIT_TO_LINEAR: Array<number> = [];\r\nfor (let i = 0; i < 256; i++) { SRGB_8BIT_TO_LINEAR.push(srgbToLinear(i / 255.0)); }\r\n\r\nexport function clampVec3 (val: Vec3, min: Vec3, max: Vec3): Vec3 {\r\n    if (min > max) {\r\n        const temp = min;\r\n        min = max;\r\n        max = temp;\r\n    }\r\n    return val < min ? min : val > max ? max : val;\r\n}\r\n\r\nexport function floorVec3 (val: Vec3): Vec3 {\r\n    const temp = val.clone();\r\n    temp.x = Math.floor(val.x);\r\n    temp.y = Math.floor(val.y);\r\n    temp.z = Math.floor(val.z);\r\n    return temp;\r\n}\r\n\r\nexport function stepVec3 (a: Vec3, b: Vec3): Vec3 {\r\n    if (a < b) {\r\n        return b;\r\n    } else {\r\n        return a;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Three channel rgb color pack into four channel rbge format.\r\n * @zh 三通道rgb颜色pack成四通道rbge格式\r\n * @param rgb Vec3\r\n */\r\nexport function packRGBE (rgb: Vec3): Vec4 {\r\n    const maxComp = Math.max(Math.max(rgb.x, rgb.y), rgb.z);\r\n    let e = 128.0;\r\n    if (maxComp > 0.0001) {\r\n        e = Math.log(maxComp) / Math.log(1.1);\r\n        e = Math.ceil(e);\r\n        e = clamp(e + 128.0, 0.0, 255.0);\r\n    }\r\n    // eslint-disable-next-line no-restricted-properties\r\n    const sc = 1.0 / 1.1 ** (e - 128.0);\r\n    const encode = clampVec3(rgb.multiplyScalar(sc), new Vec3(0.0, 0.0, 0.0), new Vec3(1.0, 1.0, 1.0));\r\n    encode.multiplyScalar(255.0);\r\n    const encode_rounded = floorVec3(encode).add(stepVec3(encode.subtract(floorVec3(encode)), new Vec3(0.5, 0.5, 0.5)));\r\n    return new Vec4(encode_rounded.x / 255.0, encode_rounded.y / 255.0, encode_rounded.z / 255.0, e / 255.0);\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * Tag to visit editor extras of an object. Never be concerned about its value, please.\r\n */\r\nexport const editorExtrasTag = '__editorExtras__';\r\n\r\n/**\r\n * Engine classes with this kind of signature are integrated with editor extendability.\r\n * @internal\r\n */\r\nexport interface EditorExtendableObject {\r\n    /**\r\n     * @en\r\n     * The editor extras on this object.\r\n     *\r\n     * BE CAREFUL: this property is currently governed by Cocos Creator Editor.\r\n     * Its definition is not visible and is unknown to both engine code and users codes,\r\n     * they SHALL NOT operate it.\r\n     *\r\n     * You should use the editor extras tag to visit this property.\r\n     * @example\r\n     * ```ts\r\n     * import { editorExtrasTag } from 'cc';\r\n     * node[editorExtrasTag] = {};\r\n     * node[editorExtrasTag].someWhat;\r\n     * ```\r\n     * Even if you know `editorExtrasTag === '__editorExtras__'` in current,\r\n     * don't access the property through that:\r\n     * ```ts\r\n     * node.__editorExtras__ = {}; // Error: might be break in future.\r\n     * ```\r\n     * @zh\r\n     * 此对象的编辑器额外数据。\r\n     *\r\n     * **注意**：此属性目前由 Cocos Creator 编辑器管理。\r\n     * 它的定义不管是对于引擎还是用户代码都是不可见的，也 **不应该** 操作该数据。\r\n     *\r\n     * 你应该仅使用编辑器额外数据标签来访问此数据。\r\n     * @example\r\n     * ```ts\r\n     * import { editorExtrasTag } from 'cc';\r\n     * node[editorExtrasTag] = {};\r\n     * node[editorExtrasTag].someWhat;\r\n     * ```\r\n     * 即使你知道目前 `editorExtrasTag === '__editorExtras__'`，\r\n     * 也不要通过字符串属性来访问：\r\n     * ```ts\r\n     * node.__editorExtras__ = {}; // 错误：在未来可能无法生效\r\n     * ```\r\n     */\r\n    [editorExtrasTag]: unknown;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n// Fix Circular dependency\r\nimport * as bits from './bits';\r\nimport { ValueType } from '../value-types';\r\nimport { IVec3Like } from './type-define';\r\n\r\nconst mathAbs = Math.abs;\r\nconst mathFloor = Math.floor;\r\nconst PI = Math.PI;\r\n\r\nconst _d2r = PI / 180.0;\r\n\r\nconst _r2d = 180.0 / PI;\r\n\r\nlet _random = Math.random;\r\n\r\nexport const HALF_PI = PI * 0.5;\r\nexport const TWO_PI = PI * 2.0;\r\n\r\nexport const EPSILON = 0.000001;\r\n\r\n/**\r\n * @en Tests whether or not the arguments have approximately the same value, within an absolute<br/>\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less<br/>\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n * @zh 在glMatrix的绝对或相对容差范围内，测试参数是否具有近似相同的值。<br/>\r\n * EPSILON(小于等于1.0的值采用绝对公差，大于1.0的值采用相对公差)\r\n * @param a The first number to test.\r\n * @param b The second number to test.\r\n * @return True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals (a: number, b: number): boolean {\r\n    return mathAbs(a - b) <= EPSILON * Math.max(1.0, mathAbs(a), mathAbs(b));\r\n}\r\n\r\n/**\r\n * @en Tests whether or not the arguments have approximately the same value by given maxDiff<br/>\r\n * @zh 通过给定的最大差异，测试参数是否具有近似相同的值。\r\n * @param a The first number to test.\r\n * @param b The second number to test.\r\n * @param maxDiff Maximum difference.\r\n * @return True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function approx (a: number, b: number, maxDiff?: number): boolean {\r\n    maxDiff = maxDiff || EPSILON;\r\n    return mathAbs(a - b) <= maxDiff;\r\n}\r\n\r\n/**\r\n * @en Clamps a value between a minimum float and maximum float value.<br/>\r\n * @zh 返回最小浮点数和最大浮点数之间的一个数值。可以使用 clamp 函数将不断变化的数值限制在范围内。\r\n * @param val\r\n * @param min\r\n * @param max\r\n */\r\nexport function clamp (val: number, min: number, max: number): number {\r\n    if (min > max) {\r\n        const temp = min;\r\n        min = max;\r\n        max = temp;\r\n    }\r\n\r\n    return val < min ? min : val > max ? max : val;\r\n}\r\n\r\n/**\r\n * @en Clamps a value between 0 and 1.<br/>\r\n * @zh 将值限制在0和1之间。\r\n * @param val\r\n */\r\nexport function clamp01 (val: number): number {\r\n    return val < 0 ? 0 : val > 1 ? 1 : val;\r\n}\r\n\r\n/**\r\n * @en Linear interpolation between two numbers\r\n * @zh 两个数之间的线性插值。\r\n * @param from - The starting number.\r\n * @param to - The ending number.\r\n * @param ratio - The interpolation coefficient, t should be in the range [0, 1].\r\n */\r\nexport function lerp (from: number, to: number, ratio: number): number {\r\n    return from + (to - from) * ratio;\r\n}\r\n\r\n/**\r\n * @en Convert Degree To Radian<br/>\r\n * @zh 把角度换算成弧度。\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian (a: number): number {\r\n    return a * _d2r;\r\n}\r\n\r\n/**\r\n * @en Convert Radian To Degree<br/>\r\n * @zh 把弧度换算成角度。\r\n * @param {Number} a Angle in Radian\r\n */\r\nexport function toDegree (a: number): number {\r\n    return a * _r2d;\r\n}\r\n\r\n/**\r\n * @method random\r\n */\r\nexport function random (): number {\r\n    return _random();\r\n}\r\n\r\n/**\r\n * @en Set a custom random number generator, default to Math.random\r\n * @zh 设置自定义随机数生成器，默认为 Math.random\r\n * @param func custom random number generator\r\n */\r\nexport function setRandGenerator<TFunction extends (...any) => number> (func: TFunction): void {\r\n    _random = func;\r\n}\r\n\r\n/**\r\n * @en Returns a floating-point random number between min (inclusive) and max (exclusive).<br/>\r\n * @zh 返回最小(包含)和最大(不包含)之间的浮点随机数。\r\n * @method randomRange\r\n * @param min\r\n * @param max\r\n * @return {Number} The random number.\r\n */\r\nexport function randomRange (min: number, max: number): number {\r\n    return random() * (max - min) + min;\r\n}\r\n\r\n/**\r\n * @en Returns a random integer between min (inclusive) and max (exclusive).<br/>\r\n * @zh 返回最小(包含)和最大(不包含)之间的随机整数。\r\n * @param min\r\n * @param max\r\n * @return The random integer.\r\n */\r\nexport function randomRangeInt (min: number, max: number): number {\r\n    return mathFloor(randomRange(min, max));\r\n}\r\n\r\n/**\r\n * @en\r\n * Linear congruence generator using Hull-Dobell Theorem.\r\n * @zh\r\n * 使用 Hull-Dobell 算法的线性同余生成器构造伪随机数\r\n *\r\n * @param seed The random seed.\r\n * @return The pseudo random.\r\n */\r\nexport function pseudoRandom (seed: number): number {\r\n    seed = (seed * 9301 + 49297) % 233280;\r\n    return seed / 233280.0;\r\n}\r\n\r\n/**\r\n * @en\r\n * Returns a floating-point pseudo-random number between min (inclusive) and max (exclusive).\r\n * @zh\r\n * 返回一个在范围内的浮点伪随机数，注意，不包含边界值\r\n *\r\n * @param seed\r\n * @param min\r\n * @param max\r\n * @return The random number.\r\n */\r\nexport function pseudoRandomRange (seed: number, min: number, max: number): number {\r\n    return pseudoRandom(seed) * (max - min) + min;\r\n}\r\n\r\n/**\r\n * @en Returns a pseudo-random integer between min (inclusive) and max (exclusive).<br/>\r\n * @zh 返回最小(包含)和最大(不包含)之间的浮点伪随机数。\r\n * @param seed\r\n * @param min\r\n * @param max\r\n * @return The random integer.\r\n */\r\nexport function pseudoRandomRangeInt (seed: number, min: number, max: number): number {\r\n    return mathFloor(pseudoRandomRange(seed, min, max));\r\n}\r\n\r\n/**\r\n * @en\r\n * Returns the next power of two for the value.<br/>\r\n * @zh\r\n * 返回下一个最接近的 2 的幂\r\n *\r\n * @param val\r\n * @return The the next power of two.\r\n */\r\nexport function nextPow2 (val: number): number {\r\n    return bits.nextPow2(val);\r\n}\r\n\r\n/**\r\n * @en Returns float remainder for t / length.<br/>\r\n * @zh 返回t / length的浮点余数。\r\n * @param t Time start at 0.\r\n * @param length Time of one cycle.\r\n * @return The Time wrapped in the first cycle.\r\n */\r\nexport function repeat (t: number, length: number): number {\r\n    return t - mathFloor(t / length) * length;\r\n}\r\n\r\n/**\r\n * @en\r\n * Returns time wrapped in ping-pong mode.\r\n * @zh\r\n * 返回乒乓模式下的相对时间\r\n *\r\n * @param t Time start at 0.\r\n * @param length Time of one cycle.\r\n * @return The time wrapped in the first cycle.\r\n */\r\nexport function pingPong (t: number, length: number): number {\r\n    t = repeat(t, length * 2);\r\n    t = length - mathAbs(t - length);\r\n    return t;\r\n}\r\n\r\n/**\r\n * @en Returns ratio of a value within a given range.<br/>\r\n * @zh 返回给定范围内的值的比率。\r\n * @param from Start value.\r\n * @param to End value.\r\n * @param value Given value.\r\n * @return The ratio between [from, to].\r\n */\r\nexport function inverseLerp (from: number, to: number, value: number): number {\r\n    return (value - from) / (to - from);\r\n}\r\n\r\n/**\r\n * @en Compare the absolute values of all components and the component with the largest absolute value will be returned.\r\n * @zh 对所有分量的绝对值进行比较大小，返回绝对值最大的分量。\r\n * @param v vec3 like value\r\n * @returns max absolute component\r\n */\r\nexport function absMaxComponent (v: IVec3Like): number {\r\n    if (mathAbs(v.x) > mathAbs(v.y)) {\r\n        if (mathAbs(v.x) > mathAbs(v.z)) {\r\n            return v.x;\r\n        } else {\r\n            return v.z;\r\n        }\r\n    } else if (mathAbs(v.y) > mathAbs(v.z)) {\r\n        return v.y;\r\n    } else {\r\n        return v.z;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Compare the absolute value of two values and return the value with the largest absolute value\r\n * @zh 对 a b 的绝对值进行比较大小，返回绝对值最大的值。\r\n * @param a number\r\n * @param b number\r\n */\r\nexport function absMax (a: number, b: number): number {\r\n    if (mathAbs(a) > mathAbs(b)) {\r\n        return a;\r\n    } else {\r\n        return b;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Make the attributes of the specified class available to be enumerated\r\n * @zh\r\n * 使指定类的特定属性可被枚举\r\n * @param prototype Inherit the prototype chain of the ValueType class\r\n * @param attrs List of attributes that need to be enumerated\r\n */\r\nexport function enumerableProps (prototype: ValueType, attrs: string[]): void {\r\n    attrs.forEach((key): void => {\r\n        Object.defineProperty(prototype, key, { enumerable: true });\r\n    });\r\n}\r\n\r\n/**\r\n * convert float to half (short)\r\n */\r\n\r\nconst toHalf = (function toHalf () {\r\n    // https://stackoverflow.com/questions/32633585/how-do-you-convert-to-half-floats-in-javascript\r\n    const floatView = new Float32Array(1);\r\n    const int32View = new Int32Array(floatView.buffer);\r\n\r\n    return function toHalf (fval: number): number {\r\n        floatView[0] = fval;\r\n        const fbits = int32View[0];\r\n        const s = (fbits >> 16) & 0x8000; // sign\r\n        const em = fbits & 0x7fffffff; // exp and mantissa\r\n\r\n        let h = (em - (112 << 23) + (1 << 12)) >> 13;\r\n        h = (em < (113 << 23)) ? 0 : h; // denormals-as-zero\r\n\r\n        h = (em >= (143 << 23)) ? 0x7c00 : h; // overflow\r\n\r\n        h = (em > (255 << 23)) ? 0x7e00 : h; // NaN\r\n\r\n        int32View[0] = (s | h); // pack sign and half\r\n\r\n        return int32View[0];\r\n    };\r\n}());\r\n\r\nconst fromHalf = (function fromHalf () {\r\n    const floatView = new Float32Array(1);\r\n    const int32View = new Int32Array(floatView.buffer);\r\n\r\n    return function fromHalf (hval: number /* uint16 */): number {\r\n        const s = (hval >> 15) & 0x00000001; // sign\r\n        const em = hval & 0x00007fff; // exp and mantissa\r\n\r\n        let h = (em << 13); // exponent/mantissa bits\r\n        let fbits = 0;\r\n\r\n        if (h !== 0x7c00) { // // NaN/Inf\r\n            h += (112 << 23); // exp adjust\r\n\r\n            if (em === 0) { // // Denormals-as-zero\r\n                h = (h & 0xfffff) >> 1; // // Mantissa shift\r\n            } else if (em === 0x7fff) { // // Inf/NaN?\r\n                h = 0x7fffffff; // // NaN\r\n            }\r\n        } else {\r\n            h = 0x7f800000; // // +/-Inf\r\n        }\r\n\r\n        fbits = (s << 31) | h; // // Sign | Exponent | Mantissa\r\n        int32View[0] = fbits;\r\n\r\n        return floatView[0];\r\n    };\r\n}());\r\n\r\nexport function floatToHalf (val: number): number {\r\n    return toHalf(val);\r\n}\r\n\r\nexport function halfToFloat (val: number): number {\r\n    return fromHalf(val);\r\n}\r\n","/* eslint-disable @typescript-eslint/no-this-alias */\r\n/*\r\n Copyright (c) 2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { Mat4 } from './mat4';\r\nimport { IMat4Like, IQuatLike, IVec4Like, IColorLike } from './type-define';\r\nimport { clamp, EPSILON, random } from './utils';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nconst abs = Math.abs;\r\nconst max = Math.max;\r\nconst min = Math.min;\r\nconst PI = Math.PI;\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst atan2 = Math.atan2;\r\nconst sqrt = Math.sqrt;\r\nconst ceil = Math.ceil;\r\nconst floor = Math.floor;\r\nconst round = Math.round;\r\n\r\nfunction freezeVec4 (x: number, y: number, z: number, w: number): Readonly<Vec4> {\r\n    return Object.freeze(new Vec4(x, y, z, w));\r\n}\r\n\r\n/**\r\n * @en Representation of four-dimensional vectors.\r\n * @zh 四维向量。\r\n */\r\nexport class Vec4 extends ValueType {\r\n    public static ZERO = freezeVec4(0, 0, 0, 0);\r\n    public static ONE = freezeVec4(1, 1, 1, 1);\r\n    public static NEG_ONE = freezeVec4(-1, -1, -1, -1);\r\n    public static UNIT_X = freezeVec4(1, 0, 0, 0);\r\n    public static UNIT_Y = freezeVec4(0, 1, 0, 0);\r\n    public static UNIT_Z = freezeVec4(0, 0, 1, 0);\r\n    public static UNIT_W = freezeVec4(0, 0, 0, 1);\r\n\r\n    /**\r\n     * @en Obtains a clone of the given vector object\r\n     * @zh 获得指定向量的拷贝\r\n     */\r\n    public static clone <Out extends IVec4Like> (a: Out): Vec4 {\r\n        return new Vec4(a.x, a.y, a.z, a.w);\r\n    }\r\n\r\n    /**\r\n     * @en Copy the target vector and save the results to out vector object\r\n     * @zh 复制目标向量\r\n     */\r\n    public static copy <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        out.x = a.x;\r\n        out.y = a.y;\r\n        out.z = a.z;\r\n        out.w = a.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out vector with the given x, y, z and w values\r\n     * @zh 设置向量值\r\n     */\r\n    public static set <Out extends IVec4Like> (out: Out, x: number, y: number, z: number, w: number): Out {\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en set value from color\r\n     * @zh 从颜色值设置向量\r\n     * @param out\r\n     * @param color\r\n     */\r\n    public static fromColor <Out extends IVec4Like> (out: Out, color: IColorLike): Out {\r\n        out.x = color.r;\r\n        out.y = color.g;\r\n        out.z = color.b;\r\n        out.w = color.a;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en The angle between two vectors\r\n     * @zh 两个向量之间的夹角\r\n     */\r\n    public static angle <Out extends IVec4Like> (a: Out, b: Out): number {\r\n        // use atan2 to get the sign of the angle correctly\r\n        const dx = (a.y * b.z - a.z * b.y);\r\n        const dy = (a.z * b.x - a.x * b.z);\r\n        const dz = (a.x * b.y - a.y * b.x);\r\n\r\n        const dotVal = (a.x * b.x + a.y * b.y + a.z * b.z);\r\n        return atan2(sqrt(dx * dx + dy * dy + dz * dz), dotVal);\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector addition and save the results to out vector object\r\n     * @zh 逐元素向量加法\r\n     */\r\n    public static add <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        out.w = a.w + b.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector subtraction and save the results to out vector object\r\n     * @zh 逐元素向量减法\r\n     */\r\n    public static subtract <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        out.w = a.w - b.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector multiplication and save the results to out vector object\r\n     * @zh 逐元素向量乘法\r\n     */\r\n    public static multiply <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        out.w = a.w * b.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector division and save the results to out vector object\r\n     * @zh 逐元素向量除法\r\n     */\r\n    public static divide <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x / b.x;\r\n        out.y = a.y / b.y;\r\n        out.z = a.z / b.z;\r\n        out.w = a.w / b.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rounds up by elements of the vector and save the results to out vector object\r\n     * @zh 逐元素向量向上取整\r\n     */\r\n    public static ceil <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        out.x = ceil(a.x);\r\n        out.y = ceil(a.y);\r\n        out.z = ceil(a.z);\r\n        out.w = ceil(a.w);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise rounds down of the current vector and save the results to the out vector\r\n     * @zh 逐元素向量向下取整\r\n     */\r\n    public static floor <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        out.x = floor(a.x);\r\n        out.y = floor(a.y);\r\n        out.z = floor(a.z);\r\n        out.w = floor(a.w);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the minimum values by elements of the vector and save the results to the out vector\r\n     * @zh 逐元素向量最小值\r\n     */\r\n    public static min <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = min(a.x, b.x);\r\n        out.y = min(a.y, b.y);\r\n        out.z = min(a.z, b.z);\r\n        out.w = min(a.w, b.w);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the maximum values by elements of the vector and save the results to the out vector\r\n     * @zh 逐元素向量最大值\r\n     */\r\n    public static max <Out extends IVec4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = max(a.x, b.x);\r\n        out.y = max(a.y, b.y);\r\n        out.z = max(a.z, b.z);\r\n        out.w = max(a.w, b.w);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates element-wise round results and save to the out vector\r\n     * @zh 逐元素向量四舍五入取整\r\n     */\r\n    public static round <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        out.x = round(a.x);\r\n        out.y = round(a.y);\r\n        out.z = round(a.z);\r\n        out.w = round(a.w);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector scalar multiplication and save the results to out vector object\r\n     * @zh 向量标量乘法\r\n     */\r\n    public static multiplyScalar <Out extends IVec4Like> (out: Out, a: Out, b: number): Out {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise multiplication and addition with the equation: a + b * scale\r\n     * @zh 逐元素向量乘加: A + B * scale\r\n     */\r\n    public static scaleAndAdd <Out extends IVec4Like> (out: Out, a: Out, b: Out, scale: number): Out {\r\n        out.x = a.x + (b.x * scale);\r\n        out.y = a.y + (b.y * scale);\r\n        out.z = a.z + (b.z * scale);\r\n        out.w = a.w + (b.w * scale);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the euclidean distance of two vectors\r\n     * @zh 求两向量的欧氏距离\r\n     */\r\n    public static distance <Out extends IVec4Like> (a: Out, b: Out): number {\r\n        const x = b.x - a.x;\r\n        const y = b.y - a.y;\r\n        const z = b.z - a.z;\r\n        const w = b.w - a.w;\r\n        return sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared euclidean distance of two vectors\r\n     * @zh 求两向量的欧氏距离平方\r\n     */\r\n    public static squaredDistance <Out extends IVec4Like> (a: Out, b: Out): number {\r\n        const x = b.x - a.x;\r\n        const y = b.y - a.y;\r\n        const z = b.z - a.z;\r\n        const w = b.w - a.w;\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the vector\r\n     * @zh 求向量长度\r\n     */\r\n    public static len <Out extends IVec4Like> (a: Out): number {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        const w = a.w;\r\n        return sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the vector\r\n     * @zh 求向量长度平方\r\n     */\r\n    public static lengthSqr <Out extends IVec4Like> (a: Out): number {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        const w = a.w;\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its negative value\r\n     * @zh 逐元素向量取负\r\n     */\r\n    public static negate <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        out.x = -a.x;\r\n        out.y = -a.y;\r\n        out.z = -a.z;\r\n        out.w = -a.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its inverse value, zero value will become Infinity\r\n     * @zh 逐元素向量取倒数，接近 0 时返回 Infinity\r\n     */\r\n    public static inverse <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        out.x = 1.0 / a.x;\r\n        out.y = 1.0 / a.y;\r\n        out.z = 1.0 / a.z;\r\n        out.w = 1.0 / a.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its inverse value, zero value will remain zero\r\n     * @zh 逐元素向量取倒数，接近 0 时返回 0\r\n     */\r\n    public static inverseSafe <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        const w = a.w;\r\n\r\n        if (abs(x) < EPSILON) {\r\n            out.x = 0;\r\n        } else {\r\n            out.x = 1.0 / x;\r\n        }\r\n\r\n        if (abs(y) < EPSILON) {\r\n            out.y = 0;\r\n        } else {\r\n            out.y = 1.0 / y;\r\n        }\r\n\r\n        if (abs(z) < EPSILON) {\r\n            out.z = 0;\r\n        } else {\r\n            out.z = 1.0 / z;\r\n        }\r\n\r\n        if (abs(w) < EPSILON) {\r\n            out.w = 0;\r\n        } else {\r\n            out.w = 1.0 / w;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the normalized vector to the out vector, returns a zero vector if input is a zero vector.\r\n     * @zh 归一化向量，输入零向量将会返回零向量。\r\n     */\r\n    public static normalize <Out extends IVec4Like> (out: Out, a: Out): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        const w = a.w;\r\n        let len = x * x + y * y + z * z + w * w;\r\n        if (len > 0) {\r\n            len = 1 / sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n            out.z = z * len;\r\n            out.w = w * len;\r\n        } else {\r\n            out.x = 0;\r\n            out.y = 0;\r\n            out.z = 0;\r\n            out.w = 0;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product of the vector\r\n     * @zh 向量点积（数量积）\r\n     */\r\n    public static dot <Out extends IVec4Like> (a: Out, b: Out): number {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the linear interpolation between two vectors with a given ratio\r\n     * @zh 逐元素向量线性插值： A + t * (B - A)\r\n     */\r\n    public static lerp <Out extends IVec4Like> (out: Out, a: Out, b: Out, t: number): Out {\r\n        out.x = a.x + t * (b.x - a.x);\r\n        out.y = a.y + t * (b.y - a.y);\r\n        out.z = a.z + t * (b.z - a.z);\r\n        out.w = a.w + t * (b.w - a.w);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Scales all ell elements of this vector by the specified scalar value\r\n     * @zh 逐元素向量缩放\r\n     */\r\n    public static scale <Out extends IVec4Like> (out: Out, a: Out, b: number): Out {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Generates a uniformly distributed random vector points from center to the surface of the unit sphere\r\n     * @zh 生成一个在单位球体上均匀分布的随机向量\r\n     * @param scale vector length\r\n     */\r\n    public static random <Out extends IVec4Like> (out: Out, scale?: number): Out {\r\n        scale = scale || 1.0;\r\n\r\n        const phi = random() * 2.0 * PI;\r\n        const cosTheta = random() * 2 - 1;\r\n        const sinTheta = sqrt(1 - cosTheta * cosTheta);\r\n\r\n        out.x = sinTheta * cos(phi) * scale;\r\n        out.y = sinTheta * sin(phi) * scale;\r\n        out.z = cosTheta * scale;\r\n        out.w = 0;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector and fourth order matrix multiplication\r\n     * @zh 向量与四维矩阵乘法\r\n     */\r\n    public static transformMat4 <Out extends IVec4Like, MatLike extends IMat4Like> (out: Out, a: Out, m: MatLike): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        const w = a.w;\r\n        out.x = m.m00 * x + m.m04 * y + m.m08 * z + m.m12 * w;\r\n        out.y = m.m01 * x + m.m05 * y + m.m09 * z + m.m13 * w;\r\n        out.z = m.m02 * x + m.m06 * y + m.m10 * z + m.m14 * w;\r\n        out.w = m.m03 * x + m.m07 * y + m.m11 * z + m.m15 * w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transform the vector with the given affine transformation\r\n     * @zh 向量仿射变换\r\n     */\r\n    public static transformAffine<Out extends IVec4Like, VecLike extends IVec4Like, MatLike extends IMat4Like>\r\n    (out: Out, v: VecLike, m: MatLike): Out {\r\n        const x = v.x;\r\n        const y = v.y;\r\n        const z = v.z;\r\n        const w = v.w;\r\n        out.x = m.m00 * x + m.m04 * y + m.m08 * z + m.m12 * w;\r\n        out.y = m.m01 * x + m.m05 * y + m.m09 * z + m.m13 * w;\r\n        out.z = m.m02 * x + m.m06 * y + m.m10 * z + m.m14 * w;\r\n        out.w = v.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector quaternion multiplication\r\n     * @zh 向量四元数乘法\r\n     */\r\n    public static transformQuat <Out extends IVec4Like, QuatLike extends IQuatLike> (out: Out, a: Out, q: QuatLike): Out {\r\n        // qpq^{-1} https://en.wikipedia.org/wiki/Quaternion#Hamilton_product\r\n        const { x, y, z } = a;\r\n\r\n        const _x = q.x;\r\n        const _y = q.y;\r\n        const _z = q.z;\r\n        const _w = q.w;\r\n\r\n        // calculate quat * vec\r\n        const ix = _w * x + _y * z - _z * y;\r\n        const iy = _w * y + _z * x - _x * z;\r\n        const iz = _w * z + _x * y - _y * x;\r\n        const iw = -_x * x - _y * y - _z * z;\r\n\r\n        // calculate result * inverse quat\r\n        out.x = ix * _w + iw * -_x + iy * -_z - iz * -_y;\r\n        out.y = iy * _w + iw * -_y + iz * -_x - ix * -_z;\r\n        out.z = iz * _w + iw * -_z + ix * -_y - iy * -_x;\r\n        out.w = a.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the given vector to an array\r\n     * @zh 向量转数组\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static toArray <Out extends IWritableArrayLike<number>> (out: Out, v: IVec4Like, ofs = 0): Out {\r\n        out[ofs + 0] = v.x;\r\n        out[ofs + 1] = v.y;\r\n        out[ofs + 2] = v.z;\r\n        out[ofs + 3] = v.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the given array to a vector\r\n     * @zh 数组转向量\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static fromArray <Out extends IVec4Like> (out: Out, arr: IWritableArrayLike<number>, ofs = 0): Out {\r\n        out.x = arr[ofs + 0];\r\n        out.y = arr[ofs + 1];\r\n        out.z = arr[ofs + 2];\r\n        out.w = arr[ofs + 3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Check the equality of the two given vectors\r\n     * @zh 向量等价判断\r\n     */\r\n    public static strictEquals <Out extends IVec4Like> (a: Out, b: Out): boolean {\r\n        return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the two given vectors are approximately equivalent\r\n     * @zh 排除浮点数误差的向量近似等价判断\r\n     */\r\n    public static equals <Out extends IVec4Like> (a: Out, b: Out, epsilon = EPSILON): boolean {\r\n        // relative epsilon comparison with small number guard:\r\n        // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\r\n        const inf = Infinity;\r\n        const hasInf =  abs(a.x) === inf\r\n            || abs(a.y) === inf\r\n            || abs(a.z) === inf\r\n            || abs(a.w) === inf\r\n            || abs(b.x) === inf\r\n            || abs(b.y) === inf\r\n            || abs(b.z) === inf\r\n            || abs(b.w) === inf;\r\n        return !hasInf && (abs(a.x - b.x) <= epsilon * max(1.0, abs(a.x), abs(b.x))\r\n            && abs(a.y - b.y) <= epsilon * max(1.0, abs(a.y), abs(b.y))\r\n            && abs(a.z - b.z) <= epsilon * max(1.0, abs(a.z), abs(b.z))\r\n            && abs(a.w - b.w) <= epsilon * max(1.0, abs(a.w), abs(b.w)));\r\n    }\r\n\r\n    /**\r\n     * @en x component.\r\n     * @zh x 分量。\r\n     */\r\n    public declare x: number;\r\n\r\n    /**\r\n     * @en y component.\r\n     * @zh y 分量。\r\n     */\r\n    public declare y: number;\r\n\r\n    /**\r\n     * @en z component.\r\n     * @zh z 分量。\r\n     */\r\n    public declare z: number;\r\n\r\n    /**\r\n     * @en w component.\r\n     * @zh w 分量。\r\n     */\r\n    public declare w: number;\r\n\r\n    constructor (other: Vec4);\r\n\r\n    constructor (x?: number, y?: number, z?: number, w?: number);\r\n\r\n    constructor (x?: number | Vec4, y?: number, z?: number, w?: number) {\r\n        super();\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z;\r\n            this.w = x.w;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n            this.w = w || 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en clone the current Vec4 value.\r\n     * @zh 克隆当前向量。\r\n     */\r\n    public clone (): Vec4 {\r\n        return new Vec4(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    /**\r\n     * @en Set the current vector value with the given vector.\r\n     * @zh 设置当前向量使其与指定向量相等。\r\n     * @param other Specified vector\r\n     * @returns `this`\r\n     */\r\n    public set (other: Vec4): Vec4;\r\n\r\n    /**\r\n     * @en Set the value of each component of the current vector.\r\n     * @zh 设置当前向量的具体分量值。\r\n     * @param x x value\r\n     * @param y y value\r\n     * @param z z value\r\n     * @param w w value\r\n     * @returns `this`\r\n     */\r\n    public set (x?: number, y?: number, z?: number, w?: number): Vec4;\r\n\r\n    public set (x?: number | Vec4, y?: number, z?: number, w?: number): Vec4 {\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z;\r\n            this.w = x.w;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n            this.w = w || 0;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the vector approximately equals another one.\r\n     * @zh 判断当前向量是否在误差范围内与指定向量相等。\r\n     * @param other Specified vector\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public equals (other: Vec4, epsilon = EPSILON): boolean {\r\n        const self = this;\r\n        return (abs(self.x - other.x) <= epsilon * max(1.0, abs(self.x), abs(other.x))\r\n            && abs(self.y - other.y) <= epsilon * max(1.0, abs(self.y), abs(other.y))\r\n            && abs(self.z - other.z) <= epsilon * max(1.0, abs(self.z), abs(other.z))\r\n            && abs(self.w - other.w) <= epsilon * max(1.0, abs(self.w), abs(other.w)));\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the vector approximately equals another one.\r\n     * @zh 判断当前向量是否在误差范围内与指定分量的向量相等。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @param w The w value of specified vector\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public equals4f (x: number, y: number, z: number, w: number, epsilon = EPSILON): boolean {\r\n        const self = this;\r\n        return (abs(self.x - x) <= epsilon * max(1.0, abs(self.x), abs(x))\r\n            && abs(self.y - y) <= epsilon * max(1.0, abs(self.y), abs(y))\r\n            && abs(self.z - z) <= epsilon * max(1.0, abs(self.z), abs(z))\r\n            && abs(self.w - w) <= epsilon * max(1.0, abs(self.w), abs(w)));\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current vector strictly equals another Vec4.\r\n     * @zh 判断当前向量是否与指定向量相等。\r\n     * @param other specified vector\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public strictEquals (other: Vec4): boolean {\r\n        return this.x === other.x && this.y === other.y && this.z === other.z && this.w === other.w;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current vector strictly equals another Vec4.\r\n     * @zh 判断当前向量是否与指定分量的向量相等。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @param w The w value of specified vector\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public strictEquals4f (x: number, y: number, z: number, w: number): boolean {\r\n        return this.x === x && this.y === y && this.z === z && this.w === w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate linear interpolation result between this vector and another one with given ratio.\r\n     * @zh 根据指定的插值比率，从当前向量到目标向量之间做插值。\r\n     * @param to Target vector\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     */\r\n    public lerp (to: Vec4, ratio: number): Vec4 {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const z = self.z;\r\n        const w = self.w;\r\n        self.x = x + ratio * (to.x - x);\r\n        self.y = y + ratio * (to.y - y);\r\n        self.z = z + ratio * (to.z - z);\r\n        self.w = w + ratio * (to.w - w);\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Return the information of the vector in string\r\n     * @zh 返回当前向量的字符串表示。\r\n     * @returns The string with vector information\r\n     */\r\n    public toString (): string {\r\n        return `(${this.x}, ${this.y}, ${this.z}, ${this.w})`;\r\n    }\r\n\r\n    /**\r\n     * @en Clamp the vector between minInclusive and maxInclusive.\r\n     * @zh 设置当前向量的值，使其各个分量都处于指定的范围内。\r\n     * @param minInclusive Minimum value allowed\r\n     * @param maxInclusive Maximum value allowed\r\n     * @returns `this`\r\n     */\r\n    public clampf (minInclusive: Vec4, maxInclusive: Vec4): Vec4 {\r\n        const self = this;\r\n        self.x = clamp(self.x, minInclusive.x, maxInclusive.x);\r\n        self.y = clamp(self.y, minInclusive.y, maxInclusive.y);\r\n        self.z = clamp(self.z, minInclusive.z, maxInclusive.z);\r\n        self.w = clamp(self.w, minInclusive.w, maxInclusive.w);\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current vector with another one and return this\r\n     * @zh 向量加法。将当前向量与指定向量的相加\r\n     * @param other specified vector\r\n     */\r\n    public add (other: Vec4): Vec4 {\r\n        const self = this;\r\n        self.x += other.x;\r\n        self.y += other.y;\r\n        self.z += other.z;\r\n        self.w += other.w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current vector with another one and return this\r\n     * @zh 向量加法。将当前向量与指定分量的向量相加\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @param w The w value of specified vector\r\n     */\r\n    public add4f (x: number, y: number, z: number, w: number): Vec4 {\r\n        const self = this;\r\n        self.x += x;\r\n        self.y += y;\r\n        self.z += z;\r\n        self.w += w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts one vector from this, and returns this.\r\n     * @zh 向量减法。将当前向量减去指定向量\r\n     * @param other specified vector\r\n     */\r\n    public subtract (other: Vec4): Vec4 {\r\n        const self = this;\r\n        self.x -= other.x;\r\n        self.y -= other.y;\r\n        self.z -= other.z;\r\n        self.w -= other.w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts one vector from this, and returns this.\r\n     * @zh 向量减法。将当前向量减去指定分量的向量\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @param w The w value of specified vector\r\n     */\r\n    public subtract4f (x: number, y: number, z: number, w: number): Vec4 {\r\n        const self = this;\r\n        self.x -= x;\r\n        self.y -= y;\r\n        self.z -= z;\r\n        self.w -= w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with a number, and returns this.\r\n     * @zh 向量数乘。将当前向量数乘指定标量\r\n     * @param scalar scalar number\r\n     */\r\n    public multiplyScalar (scalar: number): Vec4 {\r\n        const self = this;\r\n        self.x *= scalar;\r\n        self.y *= scalar;\r\n        self.z *= scalar;\r\n        self.w *= scalar;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with another one and return this\r\n     * @zh 向量乘法。将当前向量乘以指定向量\r\n     * @param other specified vector\r\n     */\r\n    public multiply (other: Vec4): Vec4 {\r\n        const self = this;\r\n        self.x *= other.x;\r\n        self.y *= other.y;\r\n        self.z *= other.z;\r\n        self.w *= other.w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with another one and return this\r\n     * @zh 向量乘法。将当前向量与指定分量的向量相乘的结果赋值给当前向量。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @param w The w value of specified vector\r\n     */\r\n    public multiply4f (x: number, y: number, z: number, w: number): Vec4 {\r\n        const self = this;\r\n        self.x *= x;\r\n        self.y *= y;\r\n        self.z *= z;\r\n        self.w *= w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wisely divides this vector with another one, and return this.\r\n     * @zh 向量逐元素相除。将当前向量与指定分量的向量相除的结果赋值给当前向量。\r\n     * @param other specified vector\r\n     */\r\n    public divide (other: Vec4): Vec4 {\r\n        const self = this;\r\n        self.x /= other.x;\r\n        self.y /= other.y;\r\n        self.z /= other.z;\r\n        self.w /= other.w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wisely divides this vector with another one, and return this.\r\n     * @zh 向量逐元素相除。将当前向量与指定分量的向量相除的结果赋值给当前向量。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @param w The w value of specified vector\r\n     */\r\n    public divide4f (x: number, y: number, z: number, w: number): Vec4 {\r\n        const self = this;\r\n        self.x /= x;\r\n        self.y /= y;\r\n        self.z /= z;\r\n        self.w /= w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each component of this vector with its negative value\r\n     * @zh 将当前向量的各个分量取反\r\n     */\r\n    public negative (): Vec4 {\r\n        const self = this;\r\n        self.x = -self.x;\r\n        self.y = -self.y;\r\n        self.z = -self.z;\r\n        self.w = -self.w;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product with another vector\r\n     * @zh 向量点乘。\r\n     * @param other specified vector\r\n     * @returns 当前向量与指定向量点乘的结果。\r\n     */\r\n    public dot (vector: Vec4): number {\r\n        const self = this;\r\n        return self.x * vector.x + self.y * vector.y + self.z * vector.z + self.w * vector.w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the cross product with another vector.\r\n     * @zh 向量叉乘。视当前向量和指定向量为三维向量（舍弃 w 分量），将当前向量左叉乘指定向量\r\n     * @param other specified vector\r\n     *\r\n     * @deprecated since v3.8 cross product only defined in 3D space, use [[Vec3.cross]] instead.\r\n     */\r\n    public cross (vector: Vec4): Vec4 {\r\n        const self = this;\r\n        const { x: ax, y: ay, z: az } = self;\r\n        const { x: bx, y: by, z: bz } = vector;\r\n\r\n        self.x = ay * bz - az * by;\r\n        self.y = az * bx - ax * bz;\r\n        self.z = ax * by - ay * bx;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the length of this vector.\r\n     * @zh 计算向量的长度（模）。\r\n     * @returns Length of vector\r\n     */\r\n    public length (): number {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const z = self.z;\r\n        const w = self.w;\r\n        return sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the squared length of this vector.\r\n     * @zh 计算向量长度（模）的平方。\r\n     * @returns the squared length of this vector\r\n     */\r\n    public lengthSqr (): number {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const z = self.z;\r\n        const w = self.w;\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * @en Normalize the current vector.\r\n     * @zh 将当前向量归一化\r\n     */\r\n    public normalize (): Vec4 {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const z = self.z;\r\n        const w = self.w;\r\n        let len = x * x + y * y + z * z + w * w;\r\n        if (len > 0) {\r\n            len = 1 / sqrt(len);\r\n            self.x = x * len;\r\n            self.y = y * len;\r\n            self.z = z * len;\r\n            self.w = w * len;\r\n        }\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Scales the current vector by a scalar number.\r\n     * @zh 向量数乘。\r\n     */\r\n    public scale (scalar: number): Vec4 {\r\n        const self = this;\r\n        self.x *= scalar;\r\n        self.y *= scalar;\r\n        self.z *= scalar;\r\n        self.w *= scalar;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Transforms the vec4 with a mat4\r\n     * @zh 应用四维矩阵变换到当前矩阵\r\n     * @param matrix matrix to transform with\r\n     */\r\n    public transformMat4 (matrix: Mat4): Vec4 {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const z = self.z;\r\n        const w = self.w;\r\n        self.x = matrix.m00 * x + matrix.m04 * y + matrix.m08 * z + matrix.m12 * w;\r\n        self.y = matrix.m01 * x + matrix.m05 * y + matrix.m09 * z + matrix.m13 * w;\r\n        self.z = matrix.m02 * x + matrix.m06 * y + matrix.m10 * z + matrix.m14 * w;\r\n        self.w = matrix.m03 * x + matrix.m07 * y + matrix.m11 * z + matrix.m15 * w;\r\n        return self;\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.Vec4', Vec4, { x: 0, y: 0, z: 0, w: 0 });\r\nlegacyCC.Vec4 = Vec4;\r\n\r\nexport function v4 (other: Vec4): Vec4;\r\nexport function v4 (x?: number, y?: number, z?: number, w?: number): Vec4;\r\n\r\nexport function v4 (x?: number | Vec4, y?: number, z?: number, w?: number): Vec4 {\r\n    return new Vec4(x as number, y, z, w);\r\n}\r\n\r\nlegacyCC.v4 = v4;\r\n","/* eslint-disable @typescript-eslint/no-this-alias */\r\n/*\r\n Copyright (c) 2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport type { Vec2 }  from './vec2';\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { Mat4 } from './mat4';\r\nimport { IMat3Like, IMat4Like, IQuatLike, IVec3Like } from './type-define';\r\nimport { clamp, EPSILON, lerp, random } from './utils';\r\nimport { legacyCC } from '../global-exports';\r\nimport { warnID } from '../platform/debug';\r\n\r\nconst abs = Math.abs;\r\nconst max = Math.max;\r\nconst min = Math.min;\r\nconst PI = Math.PI;\r\nconst acos = Math.acos;\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst sqrt = Math.sqrt;\r\nconst ceil = Math.ceil;\r\nconst floor = Math.floor;\r\nconst round = Math.round;\r\n\r\nfunction freezeVec3 (x: number, y: number, z: number): Readonly<Vec3> {\r\n    return Object.freeze(new Vec3(x, y, z));\r\n}\r\n\r\n/**\r\n * @en Representation of 3D vectors and points.\r\n * @zh 三维向量。\r\n */\r\nexport class Vec3 extends ValueType {\r\n    public static UNIT_X = freezeVec3(1, 0, 0);\r\n    public static UNIT_Y = freezeVec3(0, 1, 0);\r\n    public static UNIT_Z = freezeVec3(0, 0, 1);\r\n    public static RIGHT = freezeVec3(1, 0, 0);\r\n    public static UP = freezeVec3(0, 1, 0);\r\n    public static FORWARD = freezeVec3(0, 0, -1); // we use -z for view-dir\r\n    public static ZERO = freezeVec3(0, 0, 0);\r\n    public static ONE = freezeVec3(1, 1, 1);\r\n    public static NEG_ONE = freezeVec3(-1, -1, -1);\r\n\r\n    /**\r\n     * @en return a Vec3 object with x = 0, y = 0, z = 0.\r\n     * @zh 将目标赋值为零向量\r\n     */\r\n    public static zero<Out extends IVec3Like> (out: Out): Out {\r\n        out.x = 0;\r\n        out.y = 0;\r\n        out.z = 0;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Obtains a clone of the given vector object\r\n     * @zh 获得指定向量的拷贝\r\n     */\r\n    public static clone <Out extends IVec3Like> (a: Out): Vec3 {\r\n        return new Vec3(a.x, a.y, a.z);\r\n    }\r\n\r\n    /**\r\n     * @en Copy the target vector and save the results to out vector object\r\n     * @zh 复制目标向量\r\n     */\r\n    public static copy<Out extends IVec3Like, Vec3Like extends IVec3Like> (out: Out, a: Vec3Like): Out {\r\n        out.x = a.x;\r\n        out.y = a.y;\r\n        out.z = a.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out vector with the given x, y and z values\r\n     * @zh 设置向量值\r\n     */\r\n    public static set<Out extends IVec3Like> (out: Out, x: number, y: number, z: number): Out {\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector addition and save the results to out vector object\r\n     * @zh 逐元素向量加法\r\n     */\r\n    public static add<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector subtraction and save the results to out vector object\r\n     * @zh 逐元素向量减法\r\n     */\r\n    public static subtract<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector multiplication and save the results to out vector object\r\n     * @zh 逐元素向量乘法 (分量积)\r\n     */\r\n    public static multiply<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector division and save the results to out vector object\r\n     * @zh 逐元素向量除法\r\n     */\r\n    public static divide<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        out.x = a.x / b.x;\r\n        out.y = a.y / b.y;\r\n        out.z = a.z / b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rounds up by elements of the vector and save the results to out vector object\r\n     * @zh 逐元素向量向上取整\r\n     */\r\n    public static ceil<Out extends IVec3Like> (out: Out, a: IVec3Like): Out {\r\n        out.x = ceil(a.x);\r\n        out.y = ceil(a.y);\r\n        out.z = ceil(a.z);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise rounds down of the current vector and save the results to the out vector\r\n     * @zh 逐元素向量向下取整\r\n     */\r\n    public static floor<Out extends IVec3Like> (out: Out, a: IVec3Like): Out {\r\n        out.x = floor(a.x);\r\n        out.y = floor(a.y);\r\n        out.z = floor(a.z);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates element-wise minimum values and save to the out vector\r\n     * @zh 逐元素向量最小值\r\n     */\r\n    public static min<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        out.x = min(a.x, b.x);\r\n        out.y = min(a.y, b.y);\r\n        out.z = min(a.z, b.z);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates element-wise maximum values and save to the out vector\r\n     * @zh 逐元素向量最大值\r\n     */\r\n    public static max<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        out.x = max(a.x, b.x);\r\n        out.y = max(a.y, b.y);\r\n        out.z = max(a.z, b.z);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates element-wise round results and save to the out vector\r\n     * @zh 逐元素向量四舍五入取整\r\n     */\r\n    public static round<Out extends IVec3Like> (out: Out, a: IVec3Like): Out {\r\n        out.x = round(a.x);\r\n        out.y = round(a.y);\r\n        out.z = round(a.z);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector scalar multiplication and save the results to out vector object\r\n     * @zh 向量标量乘法\r\n     */\r\n    public static multiplyScalar<Out extends IVec3Like, Vec3Like extends IVec3Like > (out: Out, a: Vec3Like, b: number): Out {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise multiplication and addition with the equation: a + b * scale\r\n     * @zh 逐元素向量乘加: A + B * scale\r\n     */\r\n    public static scaleAndAdd<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like, scale: number): Out {\r\n        out.x = a.x + b.x * scale;\r\n        out.y = a.y + b.y * scale;\r\n        out.z = a.z + b.z * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the euclidean distance of two vectors\r\n     * @zh 求两向量的欧氏距离\r\n     */\r\n    public static distance (a: IVec3Like, b: IVec3Like): number {\r\n        const x = b.x - a.x;\r\n        const y = b.y - a.y;\r\n        const z = b.z - a.z;\r\n        return sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared euclidean distance of two vectors\r\n     * @zh 求两向量的欧氏距离平方\r\n     */\r\n    public static squaredDistance (a: IVec3Like, b: IVec3Like): number {\r\n        const x = b.x - a.x;\r\n        const y = b.y - a.y;\r\n        const z = b.z - a.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the vector\r\n     * @zh 求向量长度\r\n     */\r\n    public static len (a: IVec3Like): number {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        return sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the vector\r\n     * @zh 求向量长度平方\r\n     */\r\n    public static lengthSqr (a: IVec3Like): number {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its negative value\r\n     * @zh 逐元素向量取负\r\n     */\r\n    public static negate<Out extends IVec3Like> (out: Out, a: IVec3Like): Out {\r\n        out.x = -a.x;\r\n        out.y = -a.y;\r\n        out.z = -a.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its inverse value, zero value will become Infinity\r\n     * @zh 逐元素向量取倒数，接近 0 时返回 Infinity\r\n     */\r\n    public static invert<Out extends IVec3Like> (out: Out, a: IVec3Like): Out {\r\n        out.x = 1.0 / a.x;\r\n        out.y = 1.0 / a.y;\r\n        out.z = 1.0 / a.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its inverse value, zero value will remain zero\r\n     * @zh 逐元素向量取倒数，接近 0 时返回 0\r\n     */\r\n    public static invertSafe<Out extends IVec3Like> (out: Out, a: IVec3Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n\r\n        if (abs(x) < EPSILON) {\r\n            out.x = 0;\r\n        } else {\r\n            out.x = 1.0 / x;\r\n        }\r\n\r\n        if (abs(y) < EPSILON) {\r\n            out.y = 0;\r\n        } else {\r\n            out.y = 1.0 / y;\r\n        }\r\n\r\n        if (abs(z) < EPSILON) {\r\n            out.z = 0;\r\n        } else {\r\n            out.z = 1.0 / z;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the normalized vector to the out vector, returns a zero vector if input is a zero vector.\r\n     * @zh 归一化向量，输入零向量将会返回零向量。\r\n     */\r\n    public static normalize<Out extends IVec3Like> (out: Out, a: IVec3Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n\r\n        let len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n            out.z = z * len;\r\n        } else {\r\n            out.x = 0;\r\n            out.y = 0;\r\n            out.z = 0;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product of the vector\r\n     * @zh 向量点积（数量积）\r\n     */\r\n    public static dot <Out extends IVec3Like> (a: Out, b: IVec3Like): number {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the cross product of the vector\r\n     * @zh 向量叉积（向量积）\r\n     */\r\n    public static cross<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        const { x: ax, y: ay, z: az } = a;\r\n        const { x: bx, y: by, z: bz } = b;\r\n        out.x = ay * bz - az * by;\r\n        out.y = az * bx - ax * bz;\r\n        out.z = ax * by - ay * bx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the linear interpolation between two vectors with a given ratio: A + t * (B - A)\r\n     * @zh 逐元素向量线性插值： A + t * (B - A)\r\n     */\r\n    public static lerp<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like, t: number): Out {\r\n        out.x = a.x + t * (b.x - a.x);\r\n        out.y = a.y + t * (b.y - a.y);\r\n        out.z = a.z + t * (b.z - a.z);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @zh 球面线性插值。多用于插值两个方向向量。\r\n     * @en Spherical linear interpolation. Commonly used in interpolation between directional vectors.\r\n     * @param out @zh 输出向量。 @en Output vector.\r\n     * @param from @zh 起点向量。 @en Start vector.\r\n     * @param to @zh 终点向量。 @en Destination vector.\r\n     * @param t @zh 插值参数。@en Interpolation parameter.\r\n     * @returns `out`\r\n     * @description\r\n     * @zh\r\n     * - 如果 `from`、`to` 中任何一个接近零向量，则结果就是 `from` 到 `to` 线性插值的结果；\r\n     *\r\n     * - 否则，如果 `from`、`to` 方向刚好接近相反，\r\n     * 则结果向量是满足以下条件的一个向量：结果向量和两个输入向量的夹角之比是 `t`，其长度是 `from` 到 `to` 的长度线性插值的结果；\r\n     *\r\n     * - 否则，结果是从标准化后的 `from` 到 标准化后的 `to`\r\n     * 进行球面线性插值的结果乘以 `from` 到 `to` 的长度线性插值后的长度。\r\n     * @en\r\n     * - If either `from` or `to` is close to zero vector,\r\n     * the result would be the (non-spherical) linear interpolation result from `from` to `to`.\r\n     *\r\n     * - Otherwise, if `from` and `to` have almost opposite directions,\r\n     * the result would be such a vector so that:\r\n     * The angle ratio between result vector and input vectors is `t`,\r\n     * the length of result vector is the linear interpolation of lengths from `from` to `to`.\r\n     *\r\n     * - Otherwise, the result would be the spherical linear interpolation result\r\n     * from normalized `from` to normalized `to`,\r\n     * then scaled by linear interpolation of lengths from `from` to `to`.\r\n     */\r\n    public static slerp = ((): <Out extends IVec3Like>(out: Out, from: Readonly<IVec3Like>, to: Readonly<IVec3Like>, t: number) => Out => {\r\n        const cacheV1 = new Vec3();\r\n        const cacheV2 = new Vec3();\r\n        const cacheV3 = new Vec3();\r\n        return <Out extends IVec3Like> (out: Out, from: Readonly<IVec3Like>, to: Readonly<IVec3Like>, t: number): Out => {\r\n            const EPSILON = 1e-5;\r\n            const lenFrom = Vec3.len(from);\r\n            const lenTo = Vec3.len(to);\r\n            if (lenFrom < EPSILON || lenTo < EPSILON) {\r\n                return Vec3.lerp(out, from, to, t);\r\n            }\r\n            const lenLerped = lerp(lenFrom, lenTo, t);\r\n            const dot = Vec3.dot(from, to) / (lenFrom * lenTo);\r\n            if (dot > 1.0 - EPSILON) {\r\n                // If the directions are almost same, slerp should be close to lerp.\r\n                return Vec3.lerp(out, from, to, t);\r\n            } else if (dot < -1.0 + EPSILON) {\r\n                // If the directions are almost opposite,\r\n                // every vector that orthonormal to the directions can be the rotation axis.\r\n                const fromNormalized = Vec3.multiplyScalar(cacheV1, from, 1.0 / lenFrom);\r\n                const axis = Vec3.generateOrthogonal(cacheV2, fromNormalized);\r\n                const angle = PI * t;\r\n                rotateAxisAngle(cacheV3, fromNormalized, axis, angle);\r\n                Vec3.multiplyScalar(out, cacheV3, lenLerped);\r\n                return out;\r\n            } else {\r\n                // Do not have to clamp. We done it before.\r\n                const dotClamped = dot;\r\n                const theta = acos(dotClamped) * t;\r\n                const fromNormalized = Vec3.multiplyScalar(cacheV1, from, 1.0 / lenFrom);\r\n                const toNormalized = Vec3.multiplyScalar(cacheV2, to, 1.0 / lenTo);\r\n                Vec3.scaleAndAdd(cacheV3, toNormalized, fromNormalized, -dotClamped);\r\n                Vec3.normalize(cacheV3, cacheV3);\r\n                Vec3.multiplyScalar(cacheV3, cacheV3, sin(theta));\r\n                Vec3.scaleAndAdd(cacheV3, cacheV3, fromNormalized, cos(theta));\r\n                Vec3.multiplyScalar(out, cacheV3, lenLerped);\r\n                return out;\r\n            }\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * @en Generates a uniformly distributed random vector points from center to the surface of the unit sphere\r\n     * @zh 生成一个在单位球体上均匀分布的随机向量\r\n     * @param scale vector length\r\n     */\r\n    public static random<Out extends IVec3Like> (out: Out, scale?: number): Out {\r\n        scale = scale || 1.0;\r\n\r\n        const phi = random() * 2.0 * PI;\r\n        const cosTheta = random() * 2 - 1;\r\n        const sinTheta = sqrt(1 - cosTheta * cosTheta);\r\n\r\n        out.x = sinTheta * cos(phi) * scale;\r\n        out.y = sinTheta * sin(phi) * scale;\r\n        out.z = cosTheta * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector and fourth order matrix multiplication, will complete the vector with a fourth value as one\r\n     * @zh 向量与四维矩阵乘法，默认向量第四位为 1。\r\n     */\r\n    public static transformMat4 <Out extends IVec3Like> (out: Out, a: IVec3Like, m: IMat4Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        let rhw = m.m03 * x + m.m07 * y + m.m11 * z + m.m15;\r\n        rhw = rhw ? 1 / rhw : 1;\r\n        out.x = (m.m00 * x + m.m04 * y + m.m08 * z + m.m12) * rhw;\r\n        out.y = (m.m01 * x + m.m05 * y + m.m09 * z + m.m13) * rhw;\r\n        out.z = (m.m02 * x + m.m06 * y + m.m10 * z + m.m14) * rhw;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector and fourth order matrix multiplication, will complete the vector with a fourth element as one\r\n     * @zh 向量与四维矩阵乘法，默认向量第四位为 0。\r\n     */\r\n    public static transformMat4Normal<Out extends IVec3Like> (out: Out, a: IVec3Like, m: IMat4Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        let rhw = m.m03 * x + m.m07 * y + m.m11 * z;\r\n        rhw = rhw ? 1 / rhw : 1;\r\n        out.x = (m.m00 * x + m.m04 * y + m.m08 * z) * rhw;\r\n        out.y = (m.m01 * x + m.m05 * y + m.m09 * z) * rhw;\r\n        out.z = (m.m02 * x + m.m06 * y + m.m10 * z) * rhw;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector and third order matrix multiplication\r\n     * @zh 向量与三维矩阵乘法\r\n     */\r\n    public static transformMat3<Out extends IVec3Like> (out: Out, a: IVec3Like, m: IMat3Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        const z = a.z;\r\n        out.x = x * m.m00 + y * m.m03 + z * m.m06;\r\n        out.y = x * m.m01 + y * m.m04 + z * m.m07;\r\n        out.z = x * m.m02 + y * m.m05 + z * m.m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Affine transformation vector\r\n     * @zh 向量仿射变换\r\n     */\r\n    public static transformAffine<Out extends IVec3Like> (out: Out, v: IVec3Like, m: IMat4Like): Out {\r\n        const x = v.x;\r\n        const y = v.y;\r\n        const z = v.z;\r\n        out.x = m.m00 * x + m.m04 * y + m.m08 * z + m.m12;\r\n        out.y = m.m01 * x + m.m05 * y + m.m09 * z + m.m13;\r\n        out.z = m.m02 * x + m.m06 * y + m.m10 * z + m.m14;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector quaternion multiplication: q*a*q^{-1}.\r\n     * @zh 向量四元数乘法：q*a*q^{-1}。\r\n     */\r\n    public static transformQuat<Out extends IVec3Like> (out: Out, a: IVec3Like, q: IQuatLike): Out {\r\n        // benchmarks: http://jsperf.com/quaternion-transform-Vec3-implementations\r\n\r\n        // calculate quat * vec\r\n        const ix = q.w * a.x + q.y * a.z - q.z * a.y;\r\n        const iy = q.w * a.y + q.z * a.x - q.x * a.z;\r\n        const iz = q.w * a.z + q.x * a.y - q.y * a.x;\r\n        const iw = -q.x * a.x - q.y * a.y - q.z * a.z;\r\n\r\n        // calculate result * inverse quat\r\n        out.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\r\n        out.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\r\n        out.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transforms the current vector with given scale, rotation and translation in order\r\n     * @zh 以缩放 -> 旋转 -> 平移顺序变换向量\r\n     */\r\n    public static transformRTS<Out extends IVec3Like> (out: Out, a: IVec3Like, r: IQuatLike, t: IVec3Like, s: IVec3Like): Out {\r\n        const x = a.x * s.x;\r\n        const y = a.y * s.y;\r\n        const z = a.z * s.z;\r\n        const ix = r.w * x + r.y * z - r.z * y;\r\n        const iy = r.w * y + r.z * x - r.x * z;\r\n        const iz = r.w * z + r.x * y - r.y * x;\r\n        const iw = -r.x * x - r.y * y - r.z * z;\r\n        out.x = ix * r.w + iw * -r.x + iy * -r.z - iz * -r.y + t.x;\r\n        out.y = iy * r.w + iw * -r.y + iz * -r.x - ix * -r.z + t.y;\r\n        out.z = iz * r.w + iw * -r.z + ix * -r.y - iy * -r.x + t.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transforms the current vector with given scale, rotation and translation in reverse order\r\n     * @zh 以平移 -> 旋转 -> 缩放顺序逆变换向量\r\n     */\r\n    public static transformInverseRTS<Out extends IVec3Like> (out: Out, a: IVec3Like, r: IQuatLike, t: IVec3Like, s: IVec3Like): Out {\r\n        const x = a.x - t.x;\r\n        const y = a.y - t.y;\r\n        const z = a.z - t.z;\r\n        const ix = r.w * x - r.y * z + r.z * y;\r\n        const iy = r.w * y - r.z * x + r.x * z;\r\n        const iz = r.w * z - r.x * y + r.y * x;\r\n        const iw = r.x * x + r.y * y + r.z * z;\r\n        out.x = (ix * r.w + iw * r.x + iy * r.z - iz * r.y) / s.x;\r\n        out.y = (iy * r.w + iw * r.y + iz * r.x - ix * r.z) / s.y;\r\n        out.z = (iz * r.w + iw * r.z + ix * r.y - iy * r.x) / s.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the vector with specified angle around X axis\r\n     * @zh 绕 X 轴旋转向量指定弧度\r\n     * @param v rotation vector\r\n     * @param o center of rotation\r\n     * @param a radiance of rotation\r\n     */\r\n    public static rotateX<Out extends IVec3Like> (out: Out, v: IVec3Like, o: IVec3Like, a: number): Out {\r\n        // Translate point to the origin\r\n        const x = v.x - o.x;\r\n        const y = v.y - o.y;\r\n        const z = v.z - o.z;\r\n\r\n        // perform rotation\r\n        const c = cos(a);\r\n        const s = sin(a);\r\n        const rx = x;\r\n        const ry = y * c - z * s;\r\n        const rz = y * s + z * c;\r\n\r\n        // translate to correct position\r\n        out.x = rx + o.x;\r\n        out.y = ry + o.y;\r\n        out.z = rz + o.z;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the vector with specified angle around Y axis\r\n     * @zh 绕 Y 轴旋转向量指定弧度\r\n     * @param v rotation vector\r\n     * @param o center of rotation\r\n     * @param a radiance of rotation\r\n     */\r\n    public static rotateY<Out extends IVec3Like> (out: Out, v: IVec3Like, o: IVec3Like, a: number): Out {\r\n        // Translate point to the origin\r\n        const x = v.x - o.x;\r\n        const y = v.y - o.y;\r\n        const z = v.z - o.z;\r\n\r\n        // perform rotation\r\n        const c = cos(a);\r\n        const s = sin(a);\r\n        const rx = z * s + x * c;\r\n        const ry = y;\r\n        const rz = z * c - x * s;\r\n\r\n        // translate to correct position\r\n        out.x = rx + o.x;\r\n        out.y = ry + o.y;\r\n        out.z = rz + o.z;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the vector with specified angle around Z axis\r\n     * @zh 绕 Z 轴旋转向量指定弧度\r\n     * @param v rotation vector\r\n     * @param o center of rotation\r\n     * @param a radiance of rotation\r\n     */\r\n    public static rotateZ<Out extends IVec3Like> (out: Out, v: IVec3Like, o: IVec3Like, a: number): Out {\r\n        // Translate point to the origin\r\n        const x = v.x - o.x;\r\n        const y = v.y - o.y;\r\n        const z = v.z - o.z;\r\n\r\n        // perform rotation\r\n        const c = cos(a);\r\n        const s = sin(a);\r\n        const rx = x * c - y * s;\r\n        const ry = x * s + y * c;\r\n        const rz = z;\r\n\r\n        // translate to correct position\r\n        out.x = rx + o.x;\r\n        out.y = ry + o.y;\r\n        out.z = rz + o.z;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the vector with specified angle around any n axis\r\n     * @zh 绕任意 n 轴旋转向量指定弧度\r\n     * @param v rotation vector\r\n     * @param o center of rotation\r\n     * @param n axis of rotation\r\n     * @param a radiance of rotation\r\n     */\r\n    public static rotateN<Out extends IVec3Like> (out: Out, v: IVec3Like, o: IVec3Like, n: IVec3Like, a: number): Out {\r\n        // Translate point to the origin\r\n        const x = v.x - o.x;\r\n        const y = v.y - o.y;\r\n        const z = v.z - o.z;\r\n\r\n        // perform rotation\r\n        const nx = n.x;\r\n        const ny = n.y;\r\n        const nz = n.z;\r\n\r\n        const c = cos(a);\r\n        const s = sin(a);\r\n        const rx = x * (nx * nx * (1.0 - c) + c) + y * (nx * ny * (1.0 - c) - nz * s) + z * (nx * nz * (1.0 - c) + ny * s);\r\n        const ry = x * (nx * ny * (1.0 - c) + nz * s) + y * (ny * ny * (1.0 - c) + c) + z * (ny * nz * (1.0 - c) - nx * s);\r\n        const rz = x * (nx * nz * (1.0 - c) - ny * s) + y * (ny * nz * (1.0 - c) + nx * s) + z * (nz * nz * (1.0 - c) + c);\r\n\r\n        // translate to correct position\r\n        out.x = rx + o.x;\r\n        out.y = ry + o.y;\r\n        out.z = rz + o.z;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the given vector to an array\r\n     * @zh 向量转数组\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static toArray <Out extends IWritableArrayLike<number>> (out: Out, v: IVec3Like, ofs = 0): Out {\r\n        out[ofs + 0] = v.x;\r\n        out[ofs + 1] = v.y;\r\n        out[ofs + 2] = v.z;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the given array to a vector\r\n     * @zh 数组转向量\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static fromArray <Out extends IVec3Like> (out: Out, arr: IWritableArrayLike<number>, ofs = 0): Out {\r\n        out.x = arr[ofs + 0];\r\n        out.y = arr[ofs + 1];\r\n        out.z = arr[ofs + 2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Check the equality of the two given vectors\r\n     * @zh 向量等价判断\r\n     */\r\n    public static strictEquals (a: IVec3Like, b: IVec3Like): boolean {\r\n        return a.x === b.x && a.y === b.y && a.z === b.z;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the two given vectors are approximately equivalent\r\n     * @zh 排除浮点数误差的向量近似等价判断\r\n     */\r\n    public static equals (a: IVec3Like, b: IVec3Like, epsilon = EPSILON): boolean {\r\n        const { x: a0, y: a1, z: a2 } = a;\r\n        const { x: b0, y: b1, z: b2 } = b;\r\n        return (\r\n            abs(a0 - b0) <= epsilon * max(1.0, abs(a0), abs(b0))\r\n                && abs(a1 - b1) <= epsilon * max(1.0, abs(a1), abs(b1))\r\n                && abs(a2 - b2) <= epsilon * max(1.0, abs(a2), abs(b2))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the radian angle between two vectors\r\n     * @zh 求两向量夹角弧度\r\n     */\r\n    public static angle (a: IVec3Like, b: IVec3Like): number {\r\n        const magSqr1 = a.x * a.x + a.y * a.y + a.z * a.z;\r\n        const magSqr2 = b.x * b.x + b.y * b.y + b.z * b.z;\r\n\r\n        if (magSqr1 === 0 || magSqr2 === 0) {\r\n            return 0.0;\r\n        }\r\n\r\n        const dot = a.x * b.x + a.y * b.y + a.z * b.z;\r\n        let cosine = dot / (sqrt(magSqr1 * magSqr2));\r\n        cosine = clamp(cosine, -1.0, 1.0);\r\n        return acos(cosine);\r\n    }\r\n\r\n    /**\r\n     * @zh 计算 `a`、`b` 两向量之间的有符号夹角。\r\n     *\r\n     * 不妨假设 `a`、`b` 是钟表上的两根指针，其中 `a` 指向 12 点整，`normal` 是任何从钟表正面指出的向量。\r\n     * 当 `b` **逆时针** 从 12 点走到 6 点的过程中，它们的角度变化范围为 (0°, 180°)；\r\n     * 当 `b` **顺时针** 从 12 点走到 6 点的过程中，它们的角度变化范围为 (0°, -180°)。\r\n     *\r\n     * 反之，如果 `normal` 是任何从钟表反面指出的向量，两种范围将对调。\r\n     *\r\n     * @en Calculates the signed angle between the two vectors `a`, `b`.\r\n     *\r\n     * Suppose that `a` and `b` are two hands on a clock, where pointing at 12 o'clock,\r\n     * and `normal` is arbitrary vector pointing out from the dial side of the clock.\r\n     * As `b` goes counterclockwise from 12 o'clock to 6 o'clock, their angle varies in the range (0°, 180°);\r\n     * As `b` goes clockwise from 12 o'clock to 6 o'clock, their angle varies in the range (0°, -180°).\r\n     *\r\n     * Instead, if `normal` is arbitrary vector pointing out from the opposite side of the clock,\r\n     * the two ranges would swap.\r\n     *\r\n     * @param a @zh 向量 `a`。 @en The vector `a`.\r\n     * @param b @zh 向量 `b`。 @en The vector `b`.\r\n     * @param normal @zh 参考向量。 @en The reference vector.\r\n     * @returns @zh 向量 `a` 和 `b` 之间的有符号夹角。 @en The signed angle between `a`, `b`.\r\n     */\r\n    public static signedAngle = (() => {\r\n        const cacheCross = new Vec3();\r\n        return (a: Readonly<IVec3Like>, b: Readonly<IVec3Like>, normal: Readonly<IVec3Like>): number => {\r\n            const angle = Vec3.angle(a, b);\r\n            const cross = Vec3.cross(cacheCross, a, b);\r\n            const dot = Vec3.dot(cross, normal);\r\n            return dot < 0 ? -angle : angle;\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * @en Calculates the projection vector on the specified plane\r\n     * @zh 计算向量在指定平面上的投影\r\n     * @param a projection vector\r\n     * @param n the normal line of specified plane\r\n     */\r\n    public static projectOnPlane<Out extends IVec3Like> (out: Out, a: IVec3Like, n: IVec3Like): Out {\r\n        return Vec3.subtract(out, a, Vec3.project(out, a, n));\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the projection on the specified vector\r\n     * @zh 计算向量在指定向量上的投影\r\n     * @param a projection vector\r\n     * @param b target vector\r\n     */\r\n    public static project<Out extends IVec3Like> (out: Out, a: IVec3Like, b: IVec3Like): Out {\r\n        const sqrLen = Vec3.lengthSqr(b);\r\n        if (sqrLen < 0.000001) {\r\n            return Vec3.set(out, 0, 0, 0);\r\n        } else {\r\n            return Vec3.multiplyScalar(out, b, Vec3.dot(a, b) / sqrLen);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Calculates a new position from current to target no more than `maxStep` distance.\r\n     * @zh 计算一个新位置从当前位置移动不超过 `maxStep` 距离到目标位置。\r\n     * @param current current position\r\n     * @param target target position\r\n     * @param maxStep maximum moving distance\r\n     */\r\n    public static moveTowards<Out extends IVec3Like> (out: Out, current: IVec3Like, target: IVec3Like, maxStep: number): Out {\r\n        const deltaX = target.x - current.x;\r\n        const deltaY = target.y - current.y;\r\n        const deltaZ = target.z - current.z;\r\n\r\n        const distanceSqr = deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ;\r\n        if (distanceSqr === 0 || (maxStep >= 0 && distanceSqr < maxStep * maxStep)) {\r\n            out.x = target.x;\r\n            out.y = target.y;\r\n            out.z = target.z;\r\n            return out;\r\n        }\r\n\r\n        const distance = sqrt(distanceSqr);\r\n        const scale = maxStep / distance;\r\n        out.x = current.x + deltaX * scale;\r\n        out.y = current.y + deltaY * scale;\r\n        out.z = current.z + deltaZ * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @zh 生成指定向量的一个正交单位向量。如果指定的向量 **精确地** 是零向量，则返回 **精确的** 零向量。\r\n     * @en Generates an unit vector orthogonal to specified vector.\r\n     * If the specified vector is **strictly** zero vector, the result is **strict** zero vector.\r\n     * @param out @zh 生成的向量。@en The generated vector.\r\n     * @param n @zh 输入向量。该向量 **不必** 是标准化的。 @en The input vector. **Need not** to be normalized.\r\n     * @returns `out`\r\n     */\r\n    public static generateOrthogonal<Out extends IVec3Like> (out: Out, n: Readonly<IVec3Like>): Out {\r\n        const { x, y, z } = n;\r\n        // 1. Drop the component with minimal magnitude.\r\n        // 2. Negate one of the remain components.\r\n        // 3. Swap the remain components.\r\n        const absX = abs(x);\r\n        const absY = abs(y);\r\n        const absZ = abs(z);\r\n        if (absX < absY && absX < absZ) {\r\n            Vec3.set(out, 0.0, z, -y);\r\n        } else if (absY < absZ) {\r\n            Vec3.set(out, z, 0.0, -x);\r\n        } else {\r\n            Vec3.set(out, y, -x, 0.0);\r\n        }\r\n        return Vec3.normalize(out, out);\r\n    }\r\n\r\n    /**\r\n     * @en x component.\r\n     * @zh x 分量。\r\n     */\r\n    public declare x: number;\r\n\r\n    /**\r\n     * @en y component.\r\n     * @zh y 分量。\r\n     */\r\n    public declare y: number;\r\n\r\n    /**\r\n     * @en z component.\r\n     * @zh z 分量。\r\n     */\r\n    public declare z: number;\r\n\r\n    constructor (v: Vec3);\r\n\r\n    constructor (x?: number, y?: number, z?: number);\r\n\r\n    constructor (x?: number | Vec3, y?: number, z?: number) {\r\n        super();\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en clone a Vec3 value\r\n     * @zh 克隆当前向量。\r\n     */\r\n    public clone (): Vec3 {\r\n        return new Vec3(this.x, this.y, this.z);\r\n    }\r\n\r\n    /**\r\n     * @en Set the current vector value with the given vector.\r\n     * @zh 设置当前向量使其与指定向量相等。\r\n     * @param other Specified vector\r\n     * @returns `this`\r\n     */\r\n    public set (other: Vec3): Vec3;\r\n\r\n    /**\r\n     * @en Set the value of each component of the current vector.\r\n     * @zh 设置当前向量的具体分量值。\r\n     * @param x x value\r\n     * @param y y value\r\n     * @param z z value\r\n     * @returns `this`\r\n     */\r\n    public set (x?: number, y?: number, z?: number): Vec3;\r\n\r\n    public set (x?: number | Vec3, y?: number, z?: number): Vec3 {\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the vector approximately equals another one.\r\n     * @zh 判断当前向量是否在误差范围内与指定向量相等。\r\n     * @param other Specified vector\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public equals (other: Vec3, epsilon = EPSILON): boolean {\r\n        return (\r\n            abs(this.x - other.x) <= epsilon\r\n            && abs(this.y - other.y) <= epsilon\r\n            && abs(this.z - other.z) <= epsilon\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the vector approximately equals another one.\r\n     * @zh 判断当前向量是否在误差范围内与指定分量的向量相等。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public equals3f (x: number, y: number, z: number, epsilon = EPSILON): boolean {\r\n        return (\r\n            abs(this.x - x) <= epsilon\r\n            && abs(this.y - y) <= epsilon\r\n            && abs(this.z - z) <= epsilon\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current vector strictly equals another Vec3.\r\n     * @zh 判断当前向量是否与指定向量相等。\r\n     * @param other specified vector\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public strictEquals (other: Vec3): boolean {\r\n        return this.x === other.x && this.y === other.y && this.z === other.z;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current vector strictly equals another Vec3.\r\n     * @zh 判断当前向量是否与指定分量的向量相等。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     * @returns Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public strictEquals3f (x: number, y: number, z: number): boolean {\r\n        return this.x === x && this.y === y && this.z === z;\r\n    }\r\n\r\n    /**\r\n     * @en Transform to string with vector information.\r\n     * @zh 返回当前向量的字符串表示。\r\n     * @returns The string with vector information\r\n     */\r\n    public toString (): string {\r\n        return `(${this.x}, ${this.y}, ${this.z})`;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate linear interpolation result between this vector and another one with given ratio.\r\n     * @zh 根据指定的插值比率，从当前向量到目标向量之间做插值。\r\n     * @param to Target vector\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     */\r\n    public lerp (to: Vec3, ratio: number): Vec3 {\r\n        this.x += ratio * (to.x - this.x);\r\n        this.y += ratio * (to.y - this.y);\r\n        this.z += ratio * (to.z - this.z);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current vector with another one and return this\r\n     * @zh 向量加法。将当前向量与指定向量的相加\r\n     * @param other specified vector\r\n     */\r\n    public add (other: Vec3): Vec3 {\r\n        this.x += other.x;\r\n        this.y += other.y;\r\n        this.z += other.z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current vector with another one and return this\r\n     * @zh 向量加法。将当前向量与指定分量的向量相加\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     */\r\n    public add3f (x: number, y: number, z: number): Vec3 {\r\n        this.x += x;\r\n        this.y += y;\r\n        this.z += z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts one vector from this, and returns this.\r\n     * @zh 向量减法。将当前向量减去指定向量的结果。\r\n     * @param other specified vector\r\n     */\r\n    public subtract (other: Vec3): Vec3 {\r\n        this.x -= other.x;\r\n        this.y -= other.y;\r\n        this.z -= other.z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts one vector from this, and returns this.\r\n     * @zh 向量减法。将当前向量减去指定分量的向量\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     */\r\n    public subtract3f (x: number, y: number, z: number): Vec3 {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        this.z -= z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with a number, and returns this.\r\n     * @zh 向量数乘。将当前向量数乘指定标量\r\n     * @param scalar scalar number\r\n     */\r\n    public multiplyScalar (scalar: number): Vec3 {\r\n        if (typeof scalar === 'object') {\r\n            warnID(16357);\r\n        }\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        this.z *= scalar;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with another one and return this\r\n     * @zh 向量乘法。将当前向量乘以与指定向量的结果赋值给当前向量。\r\n     * @param other specified vector\r\n     */\r\n    public multiply (other: Vec3): Vec3 {\r\n        if (typeof other !== 'object') {\r\n            warnID(16358);\r\n        }\r\n        this.x *= other.x;\r\n        this.y *= other.y;\r\n        this.z *= other.z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with another one and return this\r\n     * @zh 向量乘法。将当前向量与指定分量的向量相乘的结果赋值给当前向量。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     */\r\n    public multiply3f (x: number, y: number, z: number): Vec3 {\r\n        this.x *= x;\r\n        this.y *= y;\r\n        this.z *= z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wisely divides this vector with another one, and return this.\r\n     * @zh 向量逐元素相除。将当前向量与指定分量的向量相除的结果赋值给当前向量。\r\n     * @param other specified vector\r\n     */\r\n    public divide (other: Vec3): Vec3 {\r\n        this.x /= other.x;\r\n        this.y /= other.y;\r\n        this.z /= other.z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wisely divides this vector with another one, and return this.\r\n     * @zh 向量逐元素相除。将当前向量与指定分量的向量相除的结果赋值给当前向量。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param z The z value of specified vector\r\n     */\r\n    public divide3f (x: number, y: number, z: number): Vec3 {\r\n        this.x /= x;\r\n        this.y /= y;\r\n        this.z /= z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each component of this vector with its negative value\r\n     * @zh 将当前向量的各个分量取反\r\n     */\r\n    public negative (): Vec3 {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        this.z = -this.z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Clamp the vector between minInclusive and maxInclusive.\r\n     * @zh 设置当前向量的值，使其各个分量都处于指定的范围内。\r\n     * @param minInclusive Minimum value allowed\r\n     * @param maxInclusive Maximum value allowed\r\n     * @returns `this`\r\n     */\r\n    public clampf (minInclusive: Vec3, maxInclusive: Vec3): Vec3 {\r\n        this.x = clamp(this.x, minInclusive.x, maxInclusive.x);\r\n        this.y = clamp(this.y, minInclusive.y, maxInclusive.y);\r\n        this.z = clamp(this.z, minInclusive.z, maxInclusive.z);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product with another vector\r\n     * @zh 向量点乘。\r\n     * @param other specified vector\r\n     * @returns The result of calculates the dot product with another vector\r\n     */\r\n    public dot (other: Vec3): number {\r\n        return this.x * other.x + this.y * other.y + this.z * other.z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the cross product with another vector.\r\n     * @zh 向量叉乘。将当前向量左叉乘指定向量\r\n     * @param other specified vector\r\n     */\r\n    public cross (other: Vec3): Vec3 {\r\n        const { x: ax, y: ay, z: az } = this;\r\n        const { x: bx, y: by, z: bz } = other;\r\n\r\n        this.x = ay * bz - az * by;\r\n        this.y = az * bx - ax * bz;\r\n        this.z = ax * by - ay * bx;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the length of this vector.\r\n     * @zh 计算向量的长度（模）。\r\n     * @returns Length of vector\r\n     */\r\n    public length (): number {\r\n        const self = this;\r\n        return sqrt(self.x * self.x + self.y * self.y + self.z * self.z);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the squared length of this vector.\r\n     * @zh 计算向量长度（模）的平方。\r\n     * @returns the squared length of this vector\r\n     */\r\n    public lengthSqr (): number {\r\n        const self = this;\r\n        return self.x * self.x + self.y * self.y + self.z * self.z;\r\n    }\r\n\r\n    /**\r\n     * @en Normalize the current vector.\r\n     * @zh 将当前向量归一化\r\n     */\r\n    public normalize (): Vec3 {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const z = self.z;\r\n\r\n        let len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / sqrt(len);\r\n            self.x = x * len;\r\n            self.y = y * len;\r\n            self.z = z * len;\r\n        }\r\n\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Transforms the vec3 with a mat4. 4th vector component is implicitly '1'\r\n     * @zh 将当前向量视为 w 分量为 1 的四维向量，应用四维矩阵变换到当前矩阵\r\n     * @param matrix matrix to transform with\r\n     */\r\n    public transformMat4 (matrix: Mat4): Vec3 {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const z = self.z;\r\n        let rhw = matrix.m03 * x + matrix.m07 * y + matrix.m11 * z + matrix.m15;\r\n        rhw = rhw ? 1 / rhw : 1;\r\n        self.x = (matrix.m00 * x + matrix.m04 * y + matrix.m08 * z + matrix.m12) * rhw;\r\n        self.y = (matrix.m01 * x + matrix.m05 * y + matrix.m09 * z + matrix.m13) * rhw;\r\n        self.z = (matrix.m02 * x + matrix.m06 * y + matrix.m10 * z + matrix.m14) * rhw;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the current Vec3 object to a Vec2 object by adding a z-component of 0.\r\n     * @zh 将当前的Vec3对象转换为一个z分量为0的Vec3对象。\r\n     * @returns Vec2 @en A new Vec2 object created from the current Vec3 object with z-component ignored.\r\n     * @zh 从当前的Vec3对象创建一个新的Vec2对象，丢弃z分量。\r\n     */\r\n    public toVec2 (): Vec2 {\r\n        // eslint-disable-next-line\r\n        return new legacyCC.Vec2(this.x, this.y);\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.Vec3', Vec3, { x: 0, y: 0, z: 0 });\r\nlegacyCC.Vec3 = Vec3;\r\n\r\nexport function v3 (other: Vec3): Vec3;\r\nexport function v3 (x?: number, y?: number, z?: number): Vec3;\r\n\r\nexport function v3 (x?: number | Vec3, y?: number, z?: number): Vec3 {\r\n    return new Vec3(x as number | undefined, y, z);\r\n}\r\n\r\n/**\r\n * Rotates `input` around `axis` for `angle` radians.\r\n */\r\nconst rotateAxisAngle = ((): (out: Vec3, input: Readonly<Vec3>, axis: Readonly<Vec3>, angle: number) => Vec3 => {\r\n    // TODO: can this cause v8 hidden class problem?\r\n    const cacheQ = { x: 0.0, y: 0.0, z: 0.0, w: 0.0 };\r\n    return (out: Vec3, input: Readonly<Vec3>, axis: Readonly<Vec3>, angle: number): Vec3 => {\r\n        // This should be equivalent to `Quat.fromAxisAngle(cacheQ, axis, angle)`.\r\n        // Here we duplicate the code to avoid circular reference.\r\n\r\n        const rad = angle * 0.5;\r\n        const s = sin(rad);\r\n        cacheQ.x = s * axis.x;\r\n        cacheQ.y = s * axis.y;\r\n        cacheQ.z = s * axis.z;\r\n        cacheQ.w = cos(rad);\r\n\r\n        Vec3.transformQuat(out, input, cacheQ);\r\n        return out;\r\n    };\r\n})();\r\n\r\nlegacyCC.v3 = v3;\r\n","/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n/* eslint-disable function-paren-newline */\r\n/* eslint-disable function-call-argument-newline */\r\n/* eslint-disable @typescript-eslint/no-this-alias */\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { Quat } from './quat';\r\nimport { IMat3Like, IMat4Like, IQuatLike, IVec2Like, IVec3Like } from './type-define';\r\nimport { EPSILON, HALF_PI } from './utils';\r\nimport { Vec3 } from './vec3';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nconst abs = Math.abs;\r\nconst max = Math.max;\r\n\r\n/**\r\n * @en Mathematical 3x3 matrix.\r\n * @zh 表示三维（3x3）矩阵。\r\n */\r\n\r\nexport class Mat3 extends ValueType {\r\n    public static IDENTITY = Object.freeze(new Mat3());\r\n\r\n    /**\r\n     * @en Clone a matrix and save the results to out matrix\r\n     * @zh 获得指定矩阵的拷贝\r\n     */\r\n    public static clone <Out extends IMat3Like> (a: Out): Mat3 {\r\n        return new Mat3(\r\n            a.m00, a.m01, a.m02,\r\n            a.m03, a.m04, a.m05,\r\n            a.m06, a.m07, a.m08,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Copy content of a matrix into another and save the results to out matrix\r\n     * @zh 复制目标矩阵\r\n     */\r\n    public static copy <Out extends IMat3Like> (out: Out, a: Out): Out {\r\n        out.m00 = a.m00;\r\n        out.m01 = a.m01;\r\n        out.m02 = a.m02;\r\n        out.m03 = a.m03;\r\n        out.m04 = a.m04;\r\n        out.m05 = a.m05;\r\n        out.m06 = a.m06;\r\n        out.m07 = a.m07;\r\n        out.m08 = a.m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the elements of a matrix with the given values and save the results to out matrix\r\n     * @zh 设置矩阵值\r\n     */\r\n    public static set <Out extends IMat3Like>  (\r\n        out: Out,\r\n        m00: number, m01: number, m02: number,\r\n        m03: number, m04: number, m05: number,\r\n        m06: number, m07: number, m08: number,\r\n    ): Out {\r\n        out.m00 = m00; out.m01 = m01; out.m02 = m02;\r\n        out.m03 = m03; out.m04 = m04; out.m05 = m05;\r\n        out.m06 = m06; out.m07 = m07; out.m08 = m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Reset the out matrix to an identity matrix\r\n     * @zh 将目标赋值为单位矩阵\r\n     */\r\n    public static identity <Out extends IMat3Like> (out: Out): Out {\r\n        out.m00 = 1;\r\n        out.m01 = 0;\r\n        out.m02 = 0;\r\n        out.m03 = 0;\r\n        out.m04 = 1;\r\n        out.m05 = 0;\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transposes a matrix and save the results to out matrix\r\n     * @zh 转置矩阵\r\n     */\r\n    public static transpose <Out extends IMat3Like> (out: Out, a: Out): Out {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            const a01 = a.m01;\r\n            const a02 = a.m02;\r\n            const a12 = a.m05;\r\n            out.m01 = a.m03;\r\n            out.m02 = a.m06;\r\n            out.m03 = a01;\r\n            out.m05 = a.m07;\r\n            out.m06 = a02;\r\n            out.m07 = a12;\r\n        } else {\r\n            out.m00 = a.m00;\r\n            out.m01 = a.m03;\r\n            out.m02 = a.m06;\r\n            out.m03 = a.m01;\r\n            out.m04 = a.m04;\r\n            out.m05 = a.m07;\r\n            out.m06 = a.m02;\r\n            out.m07 = a.m05;\r\n            out.m08 = a.m08;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Inverts a matrix. When matrix is not invertible the matrix will be set to zeros.\r\n     * @zh 矩阵求逆，注意，在矩阵不可逆时，会返回一个全为 0 的矩阵。\r\n     */\r\n    public static invert <Out extends IMat3Like> (out: Out, a: Out): Out {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02;\r\n        const a10 = a.m03; const a11 = a.m04; const a12 = a.m05;\r\n        const a20 = a.m06; const a21 = a.m07; const a22 = a.m08;\r\n\r\n        const b01 = a22 * a11 - a12 * a21;\r\n        const b11 = -a22 * a10 + a12 * a20;\r\n        const b21 = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (det === 0) {\r\n            Mat3.set(out, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n            return out;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out.m00 = b01 * det;\r\n        out.m01 = (-a22 * a01 + a02 * a21) * det;\r\n        out.m02 = (a12 * a01 - a02 * a11) * det;\r\n        out.m03 = b11 * det;\r\n        out.m04 = (a22 * a00 - a02 * a20) * det;\r\n        out.m05 = (-a12 * a00 + a02 * a10) * det;\r\n        out.m06 = b21 * det;\r\n        out.m07 = (-a21 * a00 + a01 * a20) * det;\r\n        out.m08 = (a11 * a00 - a01 * a10) * det;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the determinant of a matrix\r\n     * @zh 矩阵行列式\r\n     */\r\n    public static determinant <Out extends IMat3Like> (a: Out): number {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02;\r\n        const a10 = a.m03; const a11 = a.m04; const a12 = a.m05;\r\n        const a20 = a.m06; const a21 = a.m07; const a22 = a.m08;\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * @en Multiply two matrices explicitly and save the results to out matrix: a * b\r\n     * @zh 矩阵乘法：a * b\r\n     */\r\n    public static multiply <Out extends IMat3Like> (out: Out, a: Out, b: Out): Out {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02;\r\n        const a10 = a.m03; const a11 = a.m04; const a12 = a.m05;\r\n        const a20 = a.m06; const a21 = a.m07; const a22 = a.m08;\r\n\r\n        const b00 = b.m00; const b01 = b.m01; const b02 = b.m02;\r\n        const b10 = b.m03; const b11 = b.m04; const b12 = b.m05;\r\n        const b20 = b.m06; const b21 = b.m07; const b22 = b.m08;\r\n\r\n        out.m00 = b00 * a00 + b01 * a10 + b02 * a20;\r\n        out.m01 = b00 * a01 + b01 * a11 + b02 * a21;\r\n        out.m02 = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n        out.m03 = b10 * a00 + b11 * a10 + b12 * a20;\r\n        out.m04 = b10 * a01 + b11 * a11 + b12 * a21;\r\n        out.m05 = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n        out.m06 = b20 * a00 + b21 * a10 + b22 * a20;\r\n        out.m07 = b20 * a01 + b21 * a11 + b22 * a21;\r\n        out.m08 = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Take the first third order of the fourth order matrix and multiply by the third order matrix: a * b\r\n     * @zh 取四阶矩阵的前三阶，与三阶矩阵相乘：a * b\r\n     */\r\n    public static multiplyMat4 <Out extends IMat3Like> (out: Out, a: Out, b: IMat4Like): Out {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02;\r\n        const a10 = a.m03; const a11 = a.m04; const a12 = a.m05;\r\n        const a20 = a.m06; const a21 = a.m07; const a22 = a.m08;\r\n\r\n        const b00 = b.m00; const b01 = b.m01; const b02 = b.m02;\r\n        const b10 = b.m04; const b11 = b.m05; const b12 = b.m06;\r\n        const b20 = b.m08; const b21 = b.m09; const b22 = b.m10;\r\n\r\n        out.m00 = b00 * a00 + b01 * a10 + b02 * a20;\r\n        out.m01 = b00 * a01 + b01 * a11 + b02 * a21;\r\n        out.m02 = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n        out.m03 = b10 * a00 + b11 * a10 + b12 * a20;\r\n        out.m04 = b10 * a01 + b11 * a11 + b12 * a21;\r\n        out.m05 = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n        out.m06 = b20 * a00 + b21 * a10 + b22 * a20;\r\n        out.m07 = b20 * a01 + b21 * a11 + b22 * a21;\r\n        out.m08 = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply a matrix with a translation vector given by a translation offset, first translate, then transform：a * T(v).\r\n     * @zh 在给定矩阵变换基础上加入位移变换，先位移，再变换，即a * T(v)。\r\n     */\r\n    /**\r\n     * @deprecated since v3.8.0, the function name is misleading, please use translate instead.\r\n     */\r\n    public static transform <Out extends IMat3Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): void {\r\n        this.translate(out, a, v);\r\n    }\r\n\r\n    /**\r\n     * @en Multiply a matrix with a translation vector given by a translation offset, first translate, then transform：a * T(v).\r\n     * @zh 在给定矩阵变换基础上加入位移变换，先位移，再变换，即a * T(v)。\r\n     */\r\n    public static translate <Out extends IMat3Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02;\r\n        const a10 = a.m03; const a11 = a.m04; const a12 = a.m05;\r\n        const a20 = a.m06; const a21 = a.m07; const a22 = a.m08;\r\n        const x = v.x; const y = v.y;\r\n\r\n        out.m00 = a00;\r\n        out.m01 = a01;\r\n        out.m02 = a02;\r\n\r\n        out.m03 = a10;\r\n        out.m04 = a11;\r\n        out.m05 = a12;\r\n\r\n        out.m06 = x * a00 + y * a10 + a20;\r\n        out.m07 = x * a01 + y * a11 + a21;\r\n        out.m08 = x * a02 + y * a12 + a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply a matrix with a scale matrix given by a scale vector and save the results to out matrix, first scale, then transform：a * S(v).\r\n     * @zh 在给定矩阵变换基础上加入新缩放变换，先缩放，再变换，即a * S(v)。\r\n     */\r\n    public static scale <Out extends IMat3Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out {\r\n        const x = v.x; const y = v.y;\r\n\r\n        out.m00 = x * a.m00;\r\n        out.m01 = x * a.m01;\r\n        out.m02 = x * a.m02;\r\n\r\n        out.m03 = y * a.m03;\r\n        out.m04 = y * a.m04;\r\n        out.m05 = y * a.m05;\r\n\r\n        out.m06 = a.m06;\r\n        out.m07 = a.m07;\r\n        out.m08 = a.m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the transform by the given angle and save the results into the out matrix, first rotate, then transform：a * R(rad).\r\n     * @zh 在给定矩阵变换基础上加入新旋转变换，先旋转，再变换，即a * R(rad)。\r\n     * @param rad radian of rotation\r\n     */\r\n    public static rotate <Out extends IMat3Like> (out: Out, a: Out, rad: number): Out {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02;\r\n        const a10 = a.m03; const a11 = a.m04; const a12 = a.m05;\r\n        const a20 = a.m06; const a21 = a.m07; const a22 = a.m08;\r\n\r\n        const s = Math.sin(rad);\r\n        const c = Math.cos(rad);\r\n\r\n        out.m00 = c * a00 + s * a10;\r\n        out.m01 = c * a01 + s * a11;\r\n        out.m02 = c * a02 + s * a12;\r\n\r\n        out.m03 = c * a10 - s * a00;\r\n        out.m04 = c * a11 - s * a01;\r\n        out.m05 = c * a12 - s * a02;\r\n\r\n        out.m06 = a20;\r\n        out.m07 = a21;\r\n        out.m08 = a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Copies the first third order matrix of a fourth order matrix to the out third order matrix\r\n     * @zh 取四阶矩阵的前三阶\r\n     */\r\n    public static fromMat4 <Out extends IMat3Like> (out: Out, a: IMat4Like): Out {\r\n        out.m00 = a.m00;\r\n        out.m01 = a.m01;\r\n        out.m02 = a.m02;\r\n        out.m03 = a.m04;\r\n        out.m04 = a.m05;\r\n        out.m05 = a.m06;\r\n        out.m06 = a.m08;\r\n        out.m07 = a.m09;\r\n        out.m08 = a.m10;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets a third order matrix with view direction and up direction. Then save the results to out matrix\r\n     * @zh 根据视口前方向和上方向计算矩阵\r\n     * @param view The view direction, it`s must be normalized.\r\n     * @param up The view up direction, it`s must be normalized, default value is (0, 1, 0).\r\n     */\r\n    public static fromViewUp <Out extends IMat3Like, VecLike extends IVec3Like> (out: Out, view: VecLike, up?: Vec3): Out {\r\n        if (Vec3.lengthSqr(view) < EPSILON * EPSILON) {\r\n            Mat3.identity(out);\r\n            return out;\r\n        }\r\n\r\n        up = up || Vec3.UNIT_Y;\r\n        Vec3.normalize(v3_1, Vec3.cross(v3_1, up, view));\r\n\r\n        if (Vec3.lengthSqr(v3_1) < EPSILON * EPSILON) {\r\n            Mat3.identity(out);\r\n            return out;\r\n        }\r\n\r\n        Vec3.cross(v3_2, view, v3_1);\r\n        Mat3.set(\r\n            out,\r\n            v3_1.x, v3_1.y, v3_1.z,\r\n            v3_2.x, v3_2.y, v3_2.z,\r\n            view.x, view.y, view.z,\r\n        );\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the given matrix with a translation vector and save the results to out matrix\r\n     * @zh 计算位移矩阵\r\n     */\r\n    public static fromTranslation <Out extends IMat3Like, VecLike extends IVec2Like> (out: Out, v: VecLike): Out {\r\n        out.m00 = 1;\r\n        out.m01 = 0;\r\n        out.m02 = 0;\r\n        out.m03 = 0;\r\n        out.m04 = 1;\r\n        out.m05 = 0;\r\n        out.m06 = v.x;\r\n        out.m07 = v.y;\r\n        out.m08 = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the given matrix with a scale vector and save the results to out matrix\r\n     * @zh 计算缩放矩阵\r\n     */\r\n    public static fromScaling <Out extends IMat3Like, VecLike extends IVec2Like> (out: Out, v: VecLike): Out {\r\n        out.m00 = v.x;\r\n        out.m01 = 0;\r\n        out.m02 = 0;\r\n\r\n        out.m03 = 0;\r\n        out.m04 = v.y;\r\n        out.m05 = 0;\r\n\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the given matrix with a given angle and save the results to out matrix\r\n     * @zh 计算旋转矩阵\r\n     */\r\n    public static fromRotation <Out extends IMat3Like> (out: Out, rad: number): Out {\r\n        const s = Math.sin(rad); const c = Math.cos(rad);\r\n\r\n        out.m00 = c;\r\n        out.m01 = s;\r\n        out.m02 = 0;\r\n\r\n        out.m03 = -s;\r\n        out.m04 = c;\r\n        out.m05 = 0;\r\n\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the given matrix with the given quaternion and save the results to out matrix\r\n     * @zh 根据四元数旋转信息计算矩阵\r\n     */\r\n    public static fromQuat <Out extends IMat3Like> (out: Out, q: IQuatLike): Out {\r\n        const x = q.x; const y = q.y; const z = q.z; const w = q.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        const xx = x * x2;\r\n        const yx = y * x2;\r\n        const yy = y * y2;\r\n        const zx = z * x2;\r\n        const zy = z * y2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n\r\n        out.m00 = 1 - yy - zz;\r\n        out.m03 = yx - wz;\r\n        out.m06 = zx + wy;\r\n\r\n        out.m01 = yx + wz;\r\n        out.m04 = 1 - xx - zz;\r\n        out.m07 = zy - wx;\r\n\r\n        out.m02 = zx - wy;\r\n        out.m05 = zy + wx;\r\n        out.m08 = 1 - xx - yy;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.8.0, this function is too complicated, and should be split into several functions.\r\n     */\r\n    /**\r\n     * @en Calculates the upper-left 3x3 matrix of a 4x4 matrix's inverse transpose\r\n     * @zh 计算指定四维矩阵的逆转置三维矩阵\r\n     */\r\n    public static inverseTransposeMat4 <Out extends IMat3Like> (out: Out, a: IMat4Like): Out | null {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02; const a03 = a.m03;\r\n        const a10 = a.m04; const a11 = a.m05; const a12 = a.m06; const a13 = a.m07;\r\n        const a20 = a.m08; const a21 = a.m09; const a22 = a.m10; const a23 = a.m11;\r\n        const a30 = a.m12; const a31 = a.m13; const a32 = a.m14; const a33 = a.m15;\r\n\r\n        const b00 = a00 * a11 - a01 * a10;\r\n        const b01 = a00 * a12 - a02 * a10;\r\n        const b02 = a00 * a13 - a03 * a10;\r\n        const b03 = a01 * a12 - a02 * a11;\r\n        const b04 = a01 * a13 - a03 * a11;\r\n        const b05 = a02 * a13 - a03 * a12;\r\n        const b06 = a20 * a31 - a21 * a30;\r\n        const b07 = a20 * a32 - a22 * a30;\r\n        const b08 = a20 * a33 - a23 * a30;\r\n        const b09 = a21 * a32 - a22 * a31;\r\n        const b10 = a21 * a33 - a23 * a31;\r\n        const b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out.m00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out.m01 = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out.m02 = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out.m03 = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out.m04 = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out.m05 = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out.m06 = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out.m07 = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out.m08 = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transform a matrix object to a flat array\r\n     * @zh 矩阵转数组\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static toArray <Out extends IWritableArrayLike<number>> (out: Out, m: IMat3Like, ofs = 0): Out {\r\n        out[ofs + 0] = m.m00;\r\n        out[ofs + 1] = m.m01;\r\n        out[ofs + 2] = m.m02;\r\n        out[ofs + 3] = m.m03;\r\n        out[ofs + 4] = m.m04;\r\n        out[ofs + 5] = m.m05;\r\n        out[ofs + 6] = m.m06;\r\n        out[ofs + 7] = m.m07;\r\n        out[ofs + 8] = m.m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Generates or sets a matrix with a flat array\r\n     * @zh 数组转矩阵\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static fromArray <Out extends IMat3Like> (out: Out, arr: IWritableArrayLike<number>, ofs = 0): Out {\r\n        out.m00 = arr[ofs + 0];\r\n        out.m01 = arr[ofs + 1];\r\n        out.m02 = arr[ofs + 2];\r\n        out.m03 = arr[ofs + 3];\r\n        out.m04 = arr[ofs + 4];\r\n        out.m05 = arr[ofs + 5];\r\n        out.m06 = arr[ofs + 6];\r\n        out.m07 = arr[ofs + 7];\r\n        out.m08 = arr[ofs + 8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Adds two matrices and save the results to out matrix\r\n     * @zh 逐元素矩阵加法\r\n     */\r\n    public static add <Out extends IMat3Like> (out: Out, a: Out, b: Out): Out {\r\n        out.m00 = a.m00 + b.m00;\r\n        out.m01 = a.m01 + b.m01;\r\n        out.m02 = a.m02 + b.m02;\r\n        out.m03 = a.m03 + b.m03;\r\n        out.m04 = a.m04 + b.m04;\r\n        out.m05 = a.m05 + b.m05;\r\n        out.m06 = a.m06 + b.m06;\r\n        out.m07 = a.m07 + b.m07;\r\n        out.m08 = a.m08 + b.m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts matrix b from matrix a and save the results to out matrix\r\n     * @zh 逐元素矩阵减法\r\n     */\r\n    public static subtract <Out extends IMat3Like> (out: Out, a: Out, b: Out): Out {\r\n        out.m00 = a.m00 - b.m00;\r\n        out.m01 = a.m01 - b.m01;\r\n        out.m02 = a.m02 - b.m02;\r\n        out.m03 = a.m03 - b.m03;\r\n        out.m04 = a.m04 - b.m04;\r\n        out.m05 = a.m05 - b.m05;\r\n        out.m06 = a.m06 - b.m06;\r\n        out.m07 = a.m07 - b.m07;\r\n        out.m08 = a.m08 - b.m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply each element of a matrix by a scalar number and save the results to out matrix\r\n     * @zh 矩阵标量乘法\r\n     */\r\n    public static multiplyScalar <Out extends IMat3Like> (out: Out, a: Out, b: number): Out {\r\n        out.m00 = a.m00 * b;\r\n        out.m01 = a.m01 * b;\r\n        out.m02 = a.m02 * b;\r\n        out.m03 = a.m03 * b;\r\n        out.m04 = a.m04 * b;\r\n        out.m05 = a.m05 * b;\r\n        out.m06 = a.m06 * b;\r\n        out.m07 = a.m07 * b;\r\n        out.m08 = a.m08 * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Adds two matrices after multiplying each element of the second operand by a scalar number. And save the results to out matrix.\r\n     * @zh 逐元素矩阵标量乘加: A + B * scale\r\n     */\r\n    public static multiplyScalarAndAdd <Out extends IMat3Like> (out: Out, a: Out, b: Out, scale: number): Out {\r\n        out.m00 = b.m00 * scale + a.m00;\r\n        out.m01 = b.m01 * scale + a.m01;\r\n        out.m02 = b.m02 * scale + a.m02;\r\n        out.m03 = b.m03 * scale + a.m03;\r\n        out.m04 = b.m04 * scale + a.m04;\r\n        out.m05 = b.m05 * scale + a.m05;\r\n        out.m06 = b.m06 * scale + a.m06;\r\n        out.m07 = b.m07 * scale + a.m07;\r\n        out.m08 = b.m08 * scale + a.m08;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are equal.\r\n     * @zh 矩阵等价判断\r\n     */\r\n    public static strictEquals <Out extends IMat3Like> (a: Out, b: Out): boolean {\r\n        return a.m00 === b.m00 && a.m01 === b.m01 && a.m02 === b.m02\r\n            && a.m03 === b.m03 && a.m04 === b.m04 && a.m05 === b.m05\r\n            && a.m06 === b.m06 && a.m07 === b.m07 && a.m08 === b.m08;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are approximately equal.\r\n     * @zh 排除浮点数误差的矩阵近似等价判断\r\n     */\r\n    public static equals <Out extends IMat3Like> (a: Out, b: Out, epsilon = EPSILON): boolean {\r\n        return (\r\n            abs(a.m00 - b.m00) <= epsilon * max(1.0, abs(a.m00), abs(b.m00))\r\n            && abs(a.m01 - b.m01) <= epsilon * max(1.0, abs(a.m01), abs(b.m01))\r\n            && abs(a.m02 - b.m02) <= epsilon * max(1.0, abs(a.m02), abs(b.m02))\r\n            && abs(a.m03 - b.m03) <= epsilon * max(1.0, abs(a.m03), abs(b.m03))\r\n            && abs(a.m04 - b.m04) <= epsilon * max(1.0, abs(a.m04), abs(b.m04))\r\n            && abs(a.m05 - b.m05) <= epsilon * max(1.0, abs(a.m05), abs(b.m05))\r\n            && abs(a.m06 - b.m06) <= epsilon * max(1.0, abs(a.m06), abs(b.m06))\r\n            && abs(a.m07 - b.m07) <= epsilon * max(1.0, abs(a.m07), abs(b.m07))\r\n            && abs(a.m08 - b.m08) <= epsilon * max(1.0, abs(a.m08), abs(b.m08))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Convert Matrix to euler angle, resulting angle y, z in the range of [-PI, PI],\r\n     *  x in the range of [-PI/2, PI/2], the rotation order is YXZ, first rotate around Y, then around X, and finally around Z.\r\n     * @zh 将矩阵转换成欧拉角, 返回角度 y,z 在 [-PI, PI] 区间内, x 在 [-PI/2, PI/2] 区间内，旋转顺序为 YXZ，即先绕Y旋转，再绕X，最后绕Z旋转。\r\n     */\r\n    public static toEuler<InType extends IMat3Like, VecLike extends IVec3Like> (matrix: InType,  v: VecLike): boolean {\r\n        //a[col][row]\r\n        const a00 = matrix.m00; const a01 = matrix.m01; const a02 = matrix.m02;\r\n        const a10 = matrix.m03; const a11 = matrix.m04; const a12 = matrix.m05;\r\n        const a20 = matrix.m06; const a21 = matrix.m07; const a22 = matrix.m08;\r\n\r\n        // from http://www.geometrictools.com/Documentation/EulerAngles.pdf\r\n        // YXZ order\r\n        if (a21 < 0.999) {\r\n            if (a21 > -0.999) {\r\n                v.x = Math.asin(-a21);\r\n                v.y = Math.atan2(a20, a22);\r\n                v.z = Math.atan2(a01, a11);\r\n                return true;\r\n            } else {\r\n                // Not unique.  YA - ZA = atan2(r01,r00)\r\n                v.x = HALF_PI;\r\n                v.y = Math.atan2(a10, a00);\r\n                v.z = 0.0;\r\n                return false;\r\n            }\r\n        } else {\r\n            // Not unique.  YA + ZA = atan2(-r01,r00)\r\n            v.x = -HALF_PI;\r\n            v.y = Math.atan2(-a10, a00);\r\n            v.z = 0.0;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * matrix layout\r\n     * |m00  m03  m06|\r\n     * |m01  m04  m07|\r\n     * |m02  m05  m08|\r\n     */\r\n\r\n    /**\r\n     * @en Value at column 0 row 0 of the matrix.\r\n     * @zh 矩阵第 0 列第 0 行的元素。\r\n     */\r\n    public declare m00: number;\r\n\r\n    /**\r\n     * @en Value at column 0 row 1 of the matrix.\r\n     * @zh 矩阵第 0 列第 1 行的元素。\r\n     */\r\n    public declare m01: number;\r\n\r\n    /**\r\n     * @en Value at column 0 row 2 of the matrix.\r\n     * @zh 矩阵第 0 列第 2 行的元素。\r\n     */\r\n    public declare m02: number;\r\n\r\n    /**\r\n     * @en Value at column 1 row 0 of the matrix.\r\n     * @zh 矩阵第 1 列第 0 行的元素。\r\n     */\r\n    public declare m03: number;\r\n\r\n    /**\r\n     * @en Value at column 1 row 1 of the matrix.\r\n     * @zh 矩阵第 1 列第 1 行的元素。\r\n     */\r\n    public declare m04: number;\r\n\r\n    /**\r\n     * @en Value at column 1 row 2 of the matrix.\r\n     * @zh 矩阵第 1 列第 2 行的元素。\r\n     */\r\n    public declare m05: number;\r\n\r\n    /**\r\n     * @en Value at column 2 row 0 of the matrix.\r\n     * @zh 矩阵第 2 列第 0 行的元素。\r\n     */\r\n    public declare m06: number;\r\n\r\n    /**\r\n     * @en Value at column 2 row 1 of the matrix.\r\n     * @zh 矩阵第 2 列第 1 行的元素。\r\n     */\r\n    public declare m07: number;\r\n\r\n    /**\r\n     * @en Value at column 2 row 2 of the matrix.\r\n     * @zh 矩阵第 2 列第 2 行的元素。\r\n     */\r\n    public declare m08: number;\r\n\r\n    constructor (other: Mat3);\r\n\r\n    constructor (\r\n        m00?: number, m01?: number, m02?: number,\r\n        m03?: number, m04?: number, m05?: number,\r\n        m06?: number, m07?: number, m08?: number);\r\n\r\n    constructor (\r\n        m00: number | Mat3 = 1, m01 = 0, m02 = 0,\r\n        m03 = 0, m04 = 1, m05 = 0,\r\n        m06 = 0, m07 = 0, m08 = 1,\r\n    ) {\r\n        super();\r\n        const self = this;\r\n        if (typeof m00 === 'object') {\r\n            self.m00 = m00.m00; self.m01 = m00.m01; self.m02 = m00.m02;\r\n            self.m03 = m00.m03; self.m04 = m00.m04; self.m05 = m00.m05;\r\n            self.m06 = m00.m06; self.m07 = m00.m07; self.m08 = m00.m08;\r\n        } else {\r\n            self.m00 = m00; self.m01 = m01; self.m02 = m02;\r\n            self.m03 = m03; self.m04 = m04; self.m05 = m05;\r\n            self.m06 = m06; self.m07 = m07; self.m08 = m08;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clone a new matrix from the current matrix.\r\n     * @zh 克隆当前矩阵。\r\n     */\r\n    public clone (): Mat3 {\r\n        return new Mat3(this);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the matrix with another one's value.\r\n     * @zh 设置当前矩阵使其与指定矩阵相等。\r\n     * @param other Specified matrix\r\n     * @return this\r\n     */\r\n    public set (other: Mat3): Mat3;\r\n\r\n    /**\r\n     * @en Set the matrix with values of all elements\r\n     * @zh 设置当前矩阵指定元素值。\r\n     * @return this\r\n     */\r\n    public set (m00?: number, m01?: number, m02?: number,\r\n        m03?: number, m04?: number, m05?: number,\r\n        m06?: number, m07?: number, m08?: number): Mat3;\r\n\r\n    public set (m00: number | Mat3 = 1, m01 = 0, m02 = 0,\r\n        m03 = 0, m04 = 1, m05 = 0,\r\n        m06 = 0, m07 = 0, m08 = 1): Mat3 {\r\n        const self = this;\r\n        if (typeof m00 === 'object') {\r\n            self.m00 = m00.m00; self.m01 = m00.m01; self.m02 = m00.m02;\r\n            self.m03 = m00.m03; self.m04 = m00.m04; self.m05 = m00.m05;\r\n            self.m06 = m00.m06; self.m07 = m00.m07; self.m08 = m00.m08;\r\n        } else {\r\n            self.m00 = m00; self.m01 = m01; self.m02 = m02;\r\n            self.m03 = m03; self.m04 = m04; self.m05 = m05;\r\n            self.m06 = m06; self.m07 = m07; self.m08 = m08;\r\n        }\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are approximately equal.\r\n     * @zh 判断当前矩阵是否在误差范围内与指定矩阵相等。\r\n     * @param other Comparative matrix\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @return Returns `true' when the elements of both matrices are equal; otherwise returns `false'.\r\n     */\r\n    public equals (other: Mat3, epsilon = EPSILON): boolean {\r\n        return Mat3.equals(this, other, epsilon);\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are equal.\r\n     * @zh 判断当前矩阵是否与指定矩阵相等。\r\n     * @param other Comparative matrix\r\n     * @return Returns `true' when the elements of both matrices are equal; otherwise returns `false'.\r\n     */\r\n    public strictEquals (other: Mat3): boolean {\r\n        return Mat3.strictEquals(this, other);\r\n    }\r\n\r\n    /**\r\n     * @en Returns a string representation of a matrix.\r\n     * @zh 返回当前矩阵的字符串表示。\r\n     * @return The string representation of this matrix\r\n     */\r\n    public toString (): string {\r\n        const t = this;\r\n        return `[\\n${\r\n            t.m00}, ${t.m01}, ${t.m02},\\n${\r\n            t.m03}, ${t.m04}, ${t.m05},\\n${\r\n            t.m06}, ${t.m07}, ${t.m08}\\n`\r\n            + `]`;\r\n    }\r\n\r\n    /**\r\n     * @en set the current matrix to an identity matrix.\r\n     * @zh 将当前矩阵设为单位矩阵。\r\n     * @return `this`\r\n     */\r\n    public identity (): Mat3 {\r\n        return Mat3.identity(this);\r\n    }\r\n\r\n    /**\r\n     * @en Transposes the current matrix.\r\n     * @zh 计算当前矩阵的转置矩阵。\r\n     */\r\n    public transpose (): Mat3 {\r\n        const self = this;\r\n        const a01 = self.m01; const a02 = self.m02; const a12 = self.m05;\r\n        self.m01 = self.m03;\r\n        self.m02 = self.m06;\r\n        self.m03 = a01;\r\n        self.m05 = self.m07;\r\n        self.m06 = a02;\r\n        self.m07 = a12;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Inverts the current matrix. When matrix is not invertible the matrix will be set to zeros.\r\n     * @zh 计算当前矩阵的逆矩阵。注意，在矩阵不可逆时，会返回一个全为 0 的矩阵。\r\n     */\r\n    public invert (): Mat3 {\r\n        return Mat3.invert(this, this);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the determinant of the current matrix.\r\n     * @zh 计算当前矩阵的行列式。\r\n     * @return 当前矩阵的行列式。\r\n     */\r\n    public determinant (): number {\r\n        return Mat3.determinant(this);\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current matrix and another matrix to the current matrix.\r\n     * @zh 矩阵加法。将当前矩阵与指定矩阵的相加，结果返回给当前矩阵。\r\n     * @param mat the second operand\r\n     */\r\n    public add (mat: Mat3): Mat3 {\r\n        const self = this;\r\n        self.m00 += mat.m00;\r\n        self.m01 += mat.m01;\r\n        self.m02 += mat.m02;\r\n        self.m03 += mat.m03;\r\n        self.m04 += mat.m04;\r\n        self.m05 += mat.m05;\r\n        self.m06 += mat.m06;\r\n        self.m07 += mat.m07;\r\n        self.m08 += mat.m08;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts another matrix from the current matrix.\r\n     * @zh 计算矩阵减法。将当前矩阵减去指定矩阵的结果赋值给当前矩阵。\r\n     * @param mat the second operand\r\n     */\r\n    public subtract (mat: Mat3): Mat3 {\r\n        const self = this;\r\n        self.m00 -= mat.m00;\r\n        self.m01 -= mat.m01;\r\n        self.m02 -= mat.m02;\r\n        self.m03 -= mat.m03;\r\n        self.m04 -= mat.m04;\r\n        self.m05 -= mat.m05;\r\n        self.m06 -= mat.m06;\r\n        self.m07 -= mat.m07;\r\n        self.m08 -= mat.m08;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply the current matrix with another matrix.\r\n     * @zh 矩阵乘法。将当前矩阵左乘指定矩阵的结果赋值给当前矩阵。\r\n     * @param mat the second operand\r\n     */\r\n    public multiply (mat: Mat3): Mat3 {\r\n        return Mat3.multiply(this, this, mat);\r\n    }\r\n\r\n    /**\r\n     * @en Multiply each element of the current matrix by a scalar number.\r\n     * @zh 矩阵数乘。将当前矩阵与指定标量的数乘结果赋值给当前矩阵。\r\n     * @param scalar amount to scale the matrix's elements by\r\n     */\r\n    public multiplyScalar (scalar: number): Mat3 {\r\n        const self = this;\r\n        self.m00 *= scalar;\r\n        self.m01 *= scalar;\r\n        self.m02 *= scalar;\r\n        self.m03 *= scalar;\r\n        self.m04 *= scalar;\r\n        self.m05 *= scalar;\r\n        self.m06 *= scalar;\r\n        self.m07 *= scalar;\r\n        self.m08 *= scalar;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply the current matrix with a scale matrix given by a scale vector, that is M * S(vec).\r\n     * @zh 将当前矩阵左乘缩放矩阵的结果赋值给当前矩阵，缩放矩阵由各个轴的缩放给出，即M * S(vec)。\r\n     * @param vec vector to scale by\r\n     */\r\n    public scale (vec: Vec3): Mat3 {\r\n        const x = vec.x;\r\n        const y = vec.y;\r\n        const self = this;\r\n\r\n        self.m00 *= x;\r\n        self.m01 *= x;\r\n        self.m02 *= x;\r\n\r\n        self.m03 *= y;\r\n        self.m04 *= y;\r\n        self.m05 *= y;\r\n\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the current matrix by the given angle, that is M * R(rad).\r\n     * @zh 将当前矩阵左乘旋转矩阵的结果赋值给当前矩阵，旋转矩阵由旋转轴和旋转角度给出，即M * R(rad)。\r\n     * @param rad radian of rotation\r\n     */\r\n    public rotate (rad: number): Mat3 {\r\n        const self = this;\r\n        const a00 = self.m00; const a01 = self.m01; const a02 = self.m02;\r\n        const a10 = self.m03; const a11 = self.m04; const a12 = self.m05;\r\n        const a20 = self.m06; const a21 = self.m07; const a22 = self.m08;\r\n\r\n        const s = Math.sin(rad);\r\n        const c = Math.cos(rad);\r\n\r\n        self.m00 = c * a00 + s * a10;\r\n        self.m01 = c * a01 + s * a11;\r\n        self.m02 = c * a02 + s * a12;\r\n\r\n        self.m03 = c * a10 - s * a00;\r\n        self.m04 = c * a11 - s * a01;\r\n        self.m05 = c * a12 - s * a02;\r\n\r\n        self.m06 = a20;\r\n        self.m07 = a21;\r\n        self.m08 = a22;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Resets the current matrix from the given quaternion.\r\n     * @zh 重置当前矩阵的值，使其表示指定四元数表示的旋转变换。\r\n     * @param q The quaternion.\r\n     * @returns this\r\n     */\r\n    public fromQuat (q: Quat): Mat3 {\r\n        const x = q.x; const y = q.y; const z = q.z; const w = q.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        const xx = x * x2;\r\n        const yx = y * x2;\r\n        const yy = y * y2;\r\n        const zx = z * x2;\r\n        const zy = z * y2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n\r\n        const self = this;\r\n\r\n        self.m00 = 1 - yy - zz;\r\n        self.m03 = yx - wz;\r\n        self.m06 = zx + wy;\r\n\r\n        self.m01 = yx + wz;\r\n        self.m04 = 1 - xx - zz;\r\n        self.m07 = zy - wx;\r\n\r\n        self.m02 = zx - wy;\r\n        self.m05 = zy + wx;\r\n        self.m08 = 1 - xx - yy;\r\n        return self;\r\n    }\r\n}\r\n\r\nconst v3_1 = new Vec3();\r\nconst v3_2 = new Vec3();\r\n\r\nCCClass.fastDefine('cc.Mat3', Mat3, {\r\n    m00: 1,\r\n    m01: 0,\r\n    m02: 0,\r\n    m03: 0,\r\n    m04: 1,\r\n    m05: 0,\r\n    m06: 0,\r\n    m07: 0,\r\n    m08: 1,\r\n});\r\nlegacyCC.Mat3 = Mat3;\r\n","/* eslint-disable @typescript-eslint/no-this-alias */\r\n/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable function-call-argument-newline */\r\n/* eslint-disable function-paren-newline */\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { Mat3 } from './mat3';\r\nimport { IQuatLike, IVec3Like } from './type-define';\r\nimport { EPSILON, toDegree } from './utils';\r\nimport { Vec3 } from './vec3';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nconst abs = Math.abs;\r\nconst max = Math.max;\r\nconst min = Math.min;\r\nconst PI = Math.PI;\r\nconst acos = Math.acos;\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst sqrt = Math.sqrt;\r\nconst atan2 = Math.atan2;\r\nconst asin = Math.asin;\r\nconst sign = Math.sign;\r\n\r\n/**\r\n * @en quaternion\r\n * @zh 四元数\r\n */\r\nexport class Quat extends ValueType {\r\n    public static IDENTITY = Object.freeze(new Quat());\r\n\r\n    /**\r\n     * @en Obtain a copy of the given quaternion\r\n     * @zh 获得指定四元数的拷贝\r\n     */\r\n    public static clone<Out extends IQuatLike> (a: Out): Quat {\r\n        return new Quat(a.x, a.y, a.z, a.w);\r\n    }\r\n\r\n    /**\r\n     * @en Copy the given quaternion to the out quaternion\r\n     * @zh 复制目标四元数\r\n     */\r\n    public static copy<Out extends IQuatLike, QuatLike extends IQuatLike> (out: Out, a: QuatLike): Out {\r\n        out.x = a.x;\r\n        out.y = a.y;\r\n        out.z = a.z;\r\n        out.w = a.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion with values of each component\r\n     * @zh 设置四元数值\r\n     */\r\n    public static set<Out extends IQuatLike> (out: Out, x: number, y: number, z: number, w: number): Out {\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion to an identity quaternion\r\n     * @zh 将目标赋值为单位四元数\r\n     */\r\n    public static identity<Out extends IQuatLike> (out: Out): Out {\r\n        out.x = 0;\r\n        out.y = 0;\r\n        out.z = 0;\r\n        out.w = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion with the shortest path orientation between two vectors, considering both vectors normalized\r\n     * @zh 设置四元数为两向量间的最短路径旋转，默认两向量都已归一化\r\n     */\r\n    public static rotationTo<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, a: VecLike, b: VecLike): Out {\r\n        const dot = Vec3.dot(a, b);\r\n        if (dot < -0.999999) {\r\n            Vec3.cross(v3_1, Vec3.UNIT_X, a);\r\n            if (v3_1.length() < 0.000001) {\r\n                Vec3.cross(v3_1, Vec3.UNIT_Y, a);\r\n            }\r\n            Vec3.normalize(v3_1, v3_1);\r\n            Quat.fromAxisAngle(out, v3_1, PI);\r\n            return out;\r\n        } else if (dot > 0.999999) {\r\n            out.x = 0;\r\n            out.y = 0;\r\n            out.z = 0;\r\n            out.w = 1;\r\n            return out;\r\n        } else {\r\n            Vec3.cross(v3_1, a, b);\r\n            out.x = v3_1.x;\r\n            out.y = v3_1.y;\r\n            out.z = v3_1.z;\r\n            out.w = 1 + dot;\r\n            return Quat.normalize(out, out);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets the rotation axis and the arc of rotation from the quaternion\r\n     * @zh 获取四元数的旋转轴和旋转弧度\r\n     * @param outAxis output axis\r\n     * @param q input quaternion\r\n     * @return radian of rotation\r\n     */\r\n    public static getAxisAngle<Out extends IQuatLike, VecLike extends IVec3Like> (outAxis: VecLike, q: Out): number {\r\n        const rad = acos(q.w) * 2.0;\r\n        const s = sin(rad / 2.0);\r\n        if (s !== 0.0) {\r\n            outAxis.x = q.x / s;\r\n            outAxis.y = q.y / s;\r\n            outAxis.z = q.z / s;\r\n        } else {\r\n            // If s is zero, return any axis (no rotation - axis does not matter)\r\n            outAxis.x = 1;\r\n            outAxis.y = 0;\r\n            outAxis.z = 0;\r\n        }\r\n        return rad;\r\n    }\r\n\r\n    /**\r\n     * @en Quaternion multiplication and save the results to out quaternion, that is a * b.\r\n     * @zh 四元数乘法，即a * b。\r\n     */\r\n    public static multiply<Out extends IQuatLike, QuatLike_1 extends IQuatLike, QuatLike_2 extends IQuatLike> (\r\n        out: Out,\r\n        a: QuatLike_1,\r\n        b: QuatLike_2,\r\n    ): Out {\r\n        const x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\r\n        const y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\r\n        const z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\r\n        const w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Quaternion scalar multiplication and save the results to out quaternion\r\n     * @zh 四元数标量乘法\r\n     */\r\n    public static multiplyScalar<Out extends IQuatLike> (out: Out, a: Out, b: number): Out {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Quaternion multiplication and addition: A + B * scale\r\n     * @zh 四元数乘加：A + B * scale\r\n     */\r\n    public static scaleAndAdd<Out extends IQuatLike> (out: Out, a: Out, b: Out, scale: number): Out {\r\n        out.x = a.x + b.x * scale;\r\n        out.y = a.y + b.y * scale;\r\n        out.z = a.z + b.z * scale;\r\n        out.w = a.w + b.w * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion to represent a radian rotation around x axis\r\n     * @zh 绕 X 轴旋转指定四元数\r\n     * @param rad radian of rotation\r\n     */\r\n    public static rotateX<Out extends IQuatLike> (out: Out, a: Out, rad: number): Out {\r\n        rad *= 0.5;\r\n\r\n        const bx = sin(rad);\r\n        const bw = cos(rad);\r\n        const { x, y, z, w } = a;\r\n\r\n        out.x = x * bw + w * bx;\r\n        out.y = y * bw + z * bx;\r\n        out.z = z * bw - y * bx;\r\n        out.w = w * bw - x * bx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion to represent a radian rotation around y axis\r\n     * @zh 绕 Y 轴旋转指定四元数\r\n     * @param rad radian of rotation\r\n     */\r\n    public static rotateY<Out extends IQuatLike> (out: Out, a: Out, rad: number): Out {\r\n        rad *= 0.5;\r\n\r\n        const by = sin(rad);\r\n        const bw = cos(rad);\r\n        const { x, y, z, w } = a;\r\n\r\n        out.x = x * bw - z * by;\r\n        out.y = y * bw + w * by;\r\n        out.z = z * bw + x * by;\r\n        out.w = w * bw - y * by;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion to represent a radian rotation around z axis\r\n     * @zh 绕 Z 轴旋转指定四元数\r\n     * @param rad radian of rotation\r\n     */\r\n    public static rotateZ<Out extends IQuatLike> (out: Out, a: Out, rad: number): Out {\r\n        rad *= 0.5;\r\n\r\n        const bz = sin(rad);\r\n        const bw = cos(rad);\r\n        const { x, y, z, w } = a;\r\n\r\n        out.x = x * bw + y * bz;\r\n        out.y = y * bw - x * bz;\r\n        out.z = z * bw + w * bz;\r\n        out.w = w * bw - z * bz;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion to represent a radian rotation around a given rotation axis in world space\r\n     * @zh 绕世界空间下指定轴旋转四元数\r\n     * @param axis axis of rotation, normalized by default\r\n     * @param rad radian of rotation\r\n     */\r\n    public static rotateAround<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, rot: Out, axis: VecLike, rad: number): Out {\r\n        // get inv-axis (local to rot)\r\n        Quat.invert(qt_1, rot);\r\n        Vec3.transformQuat(v3_1, axis, qt_1);\r\n        // rotate by inv-axis\r\n        Quat.fromAxisAngle(qt_1, v3_1, rad);\r\n        Quat.multiply(out, rot, qt_1);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out quaternion to represent a radian rotation around a given rotation axis in local space\r\n     * @zh 绕本地空间下指定轴旋转四元数\r\n     * @param axis axis of rotation\r\n     * @param rad radian of rotation\r\n     */\r\n    public static rotateAroundLocal<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, rot: Out, axis: VecLike, rad: number): Out {\r\n        Quat.fromAxisAngle(qt_1, axis, rad);\r\n        Quat.multiply(out, rot, qt_1);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the w component with xyz components, considering the given quaternion normalized\r\n     * @zh 根据 xyz 分量计算 w 分量，默认已归一化\r\n     */\r\n    public static calculateW<Out extends IQuatLike> (out: Out, a: Out): Out {\r\n        out.x = a.x;\r\n        out.y = a.y;\r\n        out.z = a.z;\r\n        out.w = sqrt(abs(1.0 - a.x * a.x - a.y * a.y - a.z * a.z));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Quaternion dot product (scalar product)\r\n     * @zh 四元数点积（数量积）\r\n     */\r\n    public static dot<Out extends IQuatLike> (a: Out, b: Out): number {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\r\n    }\r\n\r\n    /**\r\n     * @en Element by element linear interpolation: A + t * (B - A)\r\n     * @zh 逐元素线性插值： A + t * (B - A)\r\n     */\r\n    public static lerp<Out extends IQuatLike> (out: Out, a: Out, b: Out, t: number): Out {\r\n        out.x = a.x + t * (b.x - a.x);\r\n        out.y = a.y + t * (b.y - a.y);\r\n        out.z = a.z + t * (b.z - a.z);\r\n        out.w = a.w + t * (b.w - a.w);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Spherical quaternion interpolation\r\n     * @zh 四元数球面插值\r\n     */\r\n    public static slerp<Out extends IQuatLike, QuatLike_1 extends IQuatLike, QuatLike_2 extends IQuatLike>\r\n    (out: Out, a: QuatLike_1, b: QuatLike_2, t: number): Out {\r\n        // benchmarks:\r\n        //    http://jsperf.com/quaternion-slerp-implementations\r\n\r\n        let scale0 = 0;\r\n        let scale1 = 0;\r\n        let bx = b.x;\r\n        let by = b.y;\r\n        let bz = b.z;\r\n        let bw = b.w;\r\n\r\n        // calc cosine\r\n        let cosom = a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\r\n        // adjust signs (if necessary)\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp)\r\n            const omega = acos(cosom);\r\n            const sinom = sin(omega);\r\n            scale0 = sin((1.0 - t) * omega) / sinom;\r\n            scale1 = sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close\r\n            //  ... so we can do a linear interpolation\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values\r\n        out.x = scale0 * a.x + scale1 * bx;\r\n        out.y = scale0 * a.y + scale1 * by;\r\n        out.z = scale0 * a.z + scale1 * bz;\r\n        out.w = scale0 * a.w + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Spherical quaternion interpolation with two control points\r\n     * @zh 带两个控制点的四元数球面插值\r\n     * @param out the receiving quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param c the third operand\r\n     * @param d the fourth operand\r\n     * @param t interpolation amount, in the range [0-1], between the two inputs\r\n     * @returns out\r\n     */\r\n    public static sqlerp<Out extends IQuatLike> (out: Out, a: Out, b: Out, c: Out, d: Out, t: number): Out {\r\n        Quat.slerp(qt_1, a, d, t);\r\n        Quat.slerp(qt_2, b, c, t);\r\n        Quat.slerp(out, qt_1, qt_2, 2 * t * (1 - t));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the inverse of the given quaternion to out quaternion\r\n     * @zh 四元数求逆\r\n     */\r\n    public static invert<Out extends IQuatLike, QuatLike extends IQuatLike> (out: Out, a: QuatLike): Out {\r\n        const dot = a.x * a.x + a.y * a.y + a.z * a.z + a.w * a.w;\r\n        const invDot = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n        out.x = -a.x * invDot;\r\n        out.y = -a.y * invDot;\r\n        out.z = -a.z * invDot;\r\n        out.w = a.w * invDot;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Conjugating a quaternion, it's equivalent to the inverse of the unit quaternion, but more efficient\r\n     * @zh 求共轭四元数，对单位四元数与求逆等价，但更高效\r\n     */\r\n    public static conjugate<Out extends IQuatLike> (out: Out, a: Out): Out {\r\n        out.x = -a.x;\r\n        out.y = -a.y;\r\n        out.z = -a.z;\r\n        out.w = a.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the quaternion\r\n     * @zh 求四元数长度\r\n     */\r\n    public static len<Out extends IQuatLike> (a: Out): number {\r\n        return sqrt(a.x * a.x + a.y * a.y + a.z * a.z + a.w * a.w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the quaternion\r\n     * @zh 求四元数长度平方\r\n     */\r\n    public static lengthSqr<Out extends IQuatLike> (a: Out): number {\r\n        return a.x * a.x + a.y * a.y + a.z * a.z + a.w * a.w;\r\n    }\r\n\r\n    /**\r\n     * @en Normalize the given quaternion, returns a zero quaternion if input is a zero quaternion.\r\n     * @zh 归一化四元数，输入零四元数将会返回零四元数。\r\n     */\r\n    public static normalize<Out extends IQuatLike> (out: Out, a: Out): Out {\r\n        let len = a.x * a.x + a.y * a.y + a.z * a.z + a.w * a.w;\r\n        if (len > 0) {\r\n            len = 1 / sqrt(len);\r\n            out.x = a.x * len;\r\n            out.y = a.y * len;\r\n            out.z = a.z * len;\r\n            out.w = a.w * len;\r\n        } else {\r\n            out.x = 0;\r\n            out.y = 0;\r\n            out.z = 0;\r\n            out.w = 0;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculated the quaternion represents the given coordinates, considering all given vectors are normalized and mutually perpendicular\r\n     * @zh 根据本地坐标轴朝向计算四元数，默认三向量都已归一化且相互垂直\r\n     */\r\n    public static fromAxes<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, xAxis: VecLike, yAxis: VecLike, zAxis: VecLike): Out {\r\n        Mat3.set(\r\n            m3_1,\r\n            xAxis.x, xAxis.y, xAxis.z,\r\n            yAxis.x, yAxis.y, yAxis.z,\r\n            zAxis.x, zAxis.y, zAxis.z,\r\n        );\r\n        return Quat.normalize(out, Quat.fromMat3(out, m3_1));\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the quaternion with the up direction and the direction of the viewport\r\n     * @zh 根据视口的前方向和上方向计算四元数\r\n     * @param view The view direction, it`s must be normalized.\r\n     * @param up The view up direction, it`s must be normalized, default value is (0, 1, 0).\r\n     */\r\n    public static fromViewUp<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, view: VecLike, up?: Vec3): Out {\r\n        Mat3.fromViewUp(m3_1, view, up);\r\n        return Quat.normalize(out, Quat.fromMat3(out, m3_1));\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the quaternion from a given rotary shaft and a radian rotation around it.\r\n     * @zh 根据旋转轴和旋转弧度计算四元数\r\n     */\r\n    public static fromAxisAngle<Out extends IQuatLike, VecLike extends IVec3Like> (out: Out, axis: VecLike, rad: number): Out {\r\n        rad *= 0.5;\r\n        const s = sin(rad);\r\n        out.x = s * axis.x;\r\n        out.y = s * axis.y;\r\n        out.z = s * axis.z;\r\n        out.w = cos(rad);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the quaternion with the three-dimensional transform matrix, considering no scale included in the matrix\r\n     * @zh 根据三维矩阵信息计算四元数，默认输入矩阵不含有缩放信息\r\n     */\r\n    public static fromMat3<Out extends IQuatLike> (out: Out, m: Mat3): Out {\r\n        const {\r\n            m00, m01, m02, //colum 0\r\n            m03: m10, m04: m11, m05: m12, //colum 1\r\n            m06: m20, m07: m21, m08: m22, //colum 2\r\n        } = m;\r\n\r\n        const fourXSquaredMinus1 = m00 - m11 - m22;\r\n        const fourYSquaredMinus1 = m11 - m00 - m22;\r\n        const fourZSquaredMinus1 = m22 - m00 - m11;\r\n        const fourWSquaredMinus1 = m00 + m11 + m22;\r\n\r\n        let biggestIndex = 0;\r\n        let fourBiggestSquaredMinus1 = fourWSquaredMinus1;\r\n        if (fourXSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourXSquaredMinus1;\r\n            biggestIndex = 1;\r\n        }\r\n        if (fourYSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourYSquaredMinus1;\r\n            biggestIndex = 2;\r\n        }\r\n        if (fourZSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourZSquaredMinus1;\r\n            biggestIndex = 3;\r\n        }\r\n\r\n        const biggestVal = sqrt(fourBiggestSquaredMinus1 + 1) * 0.5;\r\n        const mult = 0.25 / biggestVal;\r\n        switch (biggestIndex) {\r\n        case 0:\r\n            out.w =  biggestVal;\r\n            out.x = (m12 - m21) * mult;\r\n            out.y = (m20 - m02) * mult;\r\n            out.z = (m01 - m10) * mult;\r\n            break;\r\n        case 1:\r\n            out.w =  (m12 - m21) * mult;\r\n            out.x = biggestVal;\r\n            out.y = (m01 + m10) * mult;\r\n            out.z = (m20 + m02) * mult;\r\n            break;\r\n        case 2:\r\n            out.w = (m20 - m02) * mult;\r\n            out.x = (m01 + m10) * mult;\r\n            out.y = biggestVal;\r\n            out.z = (m12 + m21) * mult;\r\n            break;\r\n        case 3:\r\n            out.w = (m01 - m10) * mult;\r\n            out.x = (m20 + m02) * mult;\r\n            out.y = (m12 + m21) * mult;\r\n            out.z = biggestVal;\r\n            break;\r\n        default:\r\n            out.w = 1;\r\n            out.x = 0;\r\n            out.y = 0;\r\n            out.z = 0;\r\n            break;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the quaternion with Euler angles, the rotation order is YZX, first rotate around Y, then around Z, and finally around X.\r\n     * @zh 根据欧拉角信息计算四元数，旋转顺序为 YZX，即先绕Y旋转，再绕Z，最后绕X旋转。\r\n     */\r\n    public static fromEuler<Out extends IQuatLike> (out: Out, x: number, y: number, z: number): Out {\r\n        x *= halfToRad;\r\n        y *= halfToRad;\r\n        z *= halfToRad;\r\n\r\n        const sx = sin(x);\r\n        const cx = cos(x);\r\n        const sy = sin(y);\r\n        const cy = cos(y);\r\n        const sz = sin(z);\r\n        const cz = cos(z);\r\n\r\n        out.x = sx * cy * cz + cx * sy * sz;\r\n        out.y = cx * sy * cz + sx * cy * sz;\r\n        out.z = cx * cy * sz - sx * sy * cz;\r\n        out.w = cx * cy * cz - sx * sy * sz;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the quaternion with given 2D angle (0, 0, z).\r\n     * @zh 根据 2D 角度（0, 0, z）计算四元数\r\n     *\r\n     * @param out Output quaternion\r\n     * @param z Angle to rotate around Z axis in degrees.\r\n     */\r\n    public static fromAngleZ<Out extends IQuatLike> (out: Out, z: number): Out {\r\n        z *= halfToRad;\r\n        out.x = out.y = 0;\r\n        out.z = sin(z);\r\n        out.w = cos(z);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en This returns the X-axis vector of the quaternion\r\n     * @zh 返回定义此四元数的坐标系 X 轴向量\r\n     */\r\n    public static toAxisX (out: IVec3Like, q: IQuatLike): IVec3Like {\r\n        const fy = 2.0 * q.y;\r\n        const fz = 2.0 * q.z;\r\n        out.x = 1.0 - fy * q.y - fz * q.z;\r\n        out.y = fy * q.x + fz * q.w;\r\n        out.z = fz * q.x - fy * q.w;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en This returns the Y-axis vector of the quaternion\r\n     * @zh 返回定义此四元数的坐标系 Y 轴向量\r\n     */\r\n    public static toAxisY (out: IVec3Like, q: IQuatLike): IVec3Like {\r\n        const fx = 2.0 * q.x;\r\n        const fy = 2.0 * q.y;\r\n        const fz = 2.0 * q.z;\r\n        out.x = fy * q.x - fz * q.w;\r\n        out.y = 1.0 - fx * q.x - fz * q.z;\r\n        out.z = fz * q.y + fx * q.w;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en This returns the Z-axis vector of the quaternion\r\n     * @zh 返回定义此四元数的坐标系 Z 轴向量\r\n     */\r\n    public static toAxisZ (out: IVec3Like, q: IQuatLike): IVec3Like {\r\n        const fx = 2.0 * q.x;\r\n        const fy = 2.0 * q.y;\r\n        const fz = 2.0 * q.z;\r\n        out.x = fz * q.x + fy * q.w;\r\n        out.y = fz * q.y - fx * q.w;\r\n        out.z = 1.0 - fx * q.x - fy * q.y;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the quaternion to angles, result angle x, y in the range of [-180, 180], z in the range of [-90, 90] interval,\r\n     * the rotation order is YZX, first rotate around Y, then around Z, and finally around X\r\n     * @zh 根据四元数计算欧拉角，返回角度 x, y 在 [-180, 180] 区间内, z 默认在 [-90, 90] 区间内，旋转顺序为 YZX，即先绕Y旋转，再绕Z，最后绕X旋转。\r\n     * @param outerZ change z value range to [-180, -90] U [90, 180]\r\n     */\r\n    public static toEuler (out: IVec3Like, q: IQuatLike, outerZ?: boolean): IVec3Like {\r\n        const { x, y, z, w } = q;\r\n        let bank = 0;\r\n        let heading = 0;\r\n        let attitude = 0;\r\n        const test = x * y + z * w;\r\n        if (test > 0.499999) {\r\n            bank = 0; // default to zero\r\n            heading = toDegree(2 * atan2(x, w));\r\n            attitude = 90;\r\n        } else if (test < -0.499999) {\r\n            bank = 0; // default to zero\r\n            heading = -toDegree(2 * atan2(x, w));\r\n            attitude = -90;\r\n        } else {\r\n            const sqx = x * x;\r\n            const sqy = y * y;\r\n            const sqz = z * z;\r\n            bank = toDegree(atan2(2 * x * w - 2 * y * z, 1 - 2 * sqx - 2 * sqz));\r\n            heading = toDegree(atan2(2 * y * w - 2 * x * z, 1 - 2 * sqy - 2 * sqz));\r\n            attitude = toDegree(asin(2 * test));\r\n            if (outerZ) {\r\n                bank = -180 * sign(bank + 1e-6) + bank;\r\n                heading = -180 * sign(heading + 1e-6) + heading;\r\n                attitude = 180 * sign(attitude + 1e-6) - attitude;\r\n            }\r\n        }\r\n        out.x = bank; out.y = heading; out.z = attitude;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the quaternion to euler angles, result angle y, z in the range of [-180, 180], x in the range of [-90, 90],\r\n     * the rotation order is YXZ, first rotate around Y, then around X, and finally around Z.\r\n     * @zh 根据四元数计算欧拉角，返回角度 yz 在 [-180, 180], x 在 [-90, 90]，旋转顺序为 YXZ，即先绕Y旋转，再绕X，最后绕Z旋转。\r\n     */\r\n    public static toEulerInYXZOrder (out: Vec3, q: IQuatLike): void {\r\n        Mat3.fromQuat(m3_1, q);\r\n        Mat3.toEuler(m3_1, out);\r\n        out.x = toDegree(out.x);\r\n        out.y = toDegree(out.y);\r\n        out.z = toDegree(out.z);\r\n    }\r\n\r\n    /**\r\n     * @en Converts quaternion to an array\r\n     * @zh 四元数转数组\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static toArray<Out extends IWritableArrayLike<number>> (out: Out, q: IQuatLike, ofs = 0): Out {\r\n        out[ofs + 0] = q.x;\r\n        out[ofs + 1] = q.y;\r\n        out[ofs + 2] = q.z;\r\n        out[ofs + 3] = q.w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Array to a quaternion\r\n     * @zh 数组转四元数\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static fromArray (out: IQuatLike, arr: IWritableArrayLike<number>, ofs = 0): IQuatLike {\r\n        out.x = arr[ofs + 0];\r\n        out.y = arr[ofs + 1];\r\n        out.z = arr[ofs + 2];\r\n        out.w = arr[ofs + 3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether two quaternions are equal\r\n     * @zh 四元数等价判断\r\n     */\r\n    public static strictEquals (a: IQuatLike, b: IQuatLike): boolean {\r\n        return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether two quaternions are approximately equal\r\n     * @zh 排除浮点数误差的四元数近似等价判断\r\n     */\r\n    public static equals (a: IQuatLike, b: IQuatLike, epsilon = EPSILON): boolean {\r\n        return (abs(a.x - b.x) <= epsilon * max(1.0, abs(a.x), abs(b.x))\r\n            && abs(a.y - b.y) <= epsilon * max(1.0, abs(a.y), abs(b.y))\r\n            && abs(a.z - b.z) <= epsilon * max(1.0, abs(a.z), abs(b.z))\r\n            && abs(a.w - b.w) <= epsilon * max(1.0, abs(a.w), abs(b.w)));\r\n    }\r\n\r\n    /**\r\n     * @en Gets the angular distance between two unit quaternions\r\n     * @zh 获取两个单位四元数的夹角\r\n     * @param a The first unit quaternion\r\n     * @param b The second unit quaternion\r\n     * @returns Angle between the two quaternions in radians\r\n     */\r\n    public static angle (a: IQuatLike, b: IQuatLike): number {\r\n        const dot = min(abs(Quat.dot(a, b)), 1.0);\r\n        return acos(dot) * 2.0;\r\n    }\r\n\r\n    /**\r\n     * @en Rotate a `from` unit quaternion towards `to` unit quaternion\r\n     * @zh 将一个起始单位四元数旋转到一个目标单位四元数\r\n     * @param from The first unit quaternion\r\n     * @param to The second unit quaternion\r\n     * @param maxStep The maximum angle of rotation in degrees\r\n     * @returns new unit quaternion generated during rotation\r\n     */\r\n    public static rotateTowards (out: IQuatLike, from: IQuatLike, to: IQuatLike, maxStep: number): IQuatLike {\r\n        const angle = Quat.angle(from, to);\r\n        if (angle === 0) {\r\n            out.x = to.x;\r\n            out.y = to.y;\r\n            out.z = to.z;\r\n            out.w = to.w;\r\n            return out;\r\n        }\r\n\r\n        const t = min(maxStep / toDegree(angle), 1.0);\r\n        return Quat.slerp(out, from, to, t);\r\n    }\r\n\r\n    /**\r\n     * @en x component.\r\n     * @zh x 分量。\r\n     */\r\n    public declare x: number;\r\n\r\n    /**\r\n     * @en y component.\r\n     * @zh y 分量。\r\n     */\r\n    public declare y: number;\r\n\r\n    /**\r\n     * @en z component.\r\n     * @zh z 分量。\r\n     */\r\n    public declare z: number;\r\n\r\n    /**\r\n     * @en w component.\r\n     * @zh w 分量。\r\n     */\r\n    public declare w: number;\r\n\r\n    constructor (other: Quat);\r\n\r\n    constructor (x?: number, y?: number, z?: number, w?: number);\r\n\r\n    constructor (x?: number | IQuatLike, y?: number, z?: number, w?: number) {\r\n        super();\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z;\r\n            this.w = x.w;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n            this.w = w ?? 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en clone the current Quat\r\n     * @zh 克隆当前四元数。\r\n     */\r\n    public clone (): Quat {\r\n        return new Quat(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    /**\r\n     * @en Set values with another quaternion\r\n     * @zh 设置当前四元数使其与指定四元数相等。\r\n     * @param other Specified quaternion\r\n     * @returns `this`\r\n     */\r\n    public set (other: Quat): Quat;\r\n\r\n    /**\r\n     * @en Set the value of each component of the current quaternion\r\n     * @zh 设置当前四元数指定元素值。\r\n     * @returns `this`\r\n     */\r\n    public set (x?: number, y?: number, z?: number, w?: number): Quat;\r\n\r\n    public set (x?: number | Quat, y?: number, z?: number, w?: number): Quat {\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z;\r\n            this.w = x.w;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n            this.w = w ?? 1;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the quaternion approximately equals another one\r\n     * @zh 判断当前四元数是否在误差范围内与指定向量相等。\r\n     * @param other Comparative quaternion\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @returns Returns `true' when the components of the two quaternions are equal within the specified error range; otherwise, returns `false'.\r\n     */\r\n    public equals (other: Quat, epsilon = EPSILON): boolean {\r\n        return Quat.equals(this, other, epsilon);\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current quaternion strictly equals other quaternion\r\n     * @zh 判断当前四元数是否与指定四元数相等。\r\n     * @param other Comparative quaternion\r\n     * @returns Returns `true' when the components of the two quaternions are equal within the specified error range; otherwise, returns `false'.\r\n     */\r\n    public strictEquals (other: Quat): boolean {\r\n        return other && this.x === other.x && this.y === other.y && this.z === other.z && this.w === other.w;\r\n    }\r\n\r\n    /**\r\n     * @en Convert quaternion to Euler angles\r\n     * @zh 将当前四元数转化为欧拉角（x-y-z）并赋值给输出向量。\r\n     * @param out the output vector\r\n     */\r\n    public getEulerAngles (out: Vec3): IVec3Like {\r\n        return Quat.toEuler(out, this);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the linear interpolation result between this quaternion and another one with given ratio\r\n     * @zh 根据指定的插值比率，从当前四元数到目标四元数之间做线性插值。\r\n     * @param to The target quaternion\r\n     * @param ratio The interpolation coefficient. The range is [0,1].\r\n     */\r\n    public lerp (to: Quat, ratio: number): Quat {\r\n        const self = this;\r\n        self.x += ratio * (to.x - self.x);\r\n        self.y += ratio * (to.y - self.y);\r\n        self.z += ratio * (to.z - self.z);\r\n        self.w += ratio * (to.w - self.w);\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the spherical interpolation result between this quaternion and another one with the given ratio\r\n     * @zh 根据指定的插值比率，从当前四元数到目标四元数之间做球面插值。\r\n     * @param to The target quaternion\r\n     * @param ratio The interpolation coefficient. The range is [0,1].\r\n     */\r\n    public slerp (to: Quat, ratio: number): Quat {\r\n        return Quat.slerp(this, this, to, ratio);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the quaternion\r\n     * @zh 求四元数长度\r\n     */\r\n    public length (): number {\r\n        const self = this;\r\n        const { x, y, z, w } = self;\r\n        return sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the quaternion\r\n     * @zh 求四元数长度平方\r\n     */\r\n    public lengthSqr (): number {\r\n        const self = this;\r\n        const { x, y, z, w } = self;\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * @en Return the information of the quaternion in string.\r\n     * @zh 返回当前四元数的字符串表示。\r\n     */\r\n    public toString (): string {\r\n        return `(${this.x}, ${this.y}, ${this.z}, ${this.w})`;\r\n    }\r\n}\r\n\r\nconst qt_1 = new Quat();\r\nconst qt_2 = new Quat();\r\nconst v3_1 = new Vec3();\r\nconst m3_1 = new Mat3();\r\nconst halfToRad = 0.5 * PI / 180.0;\r\n\r\nCCClass.fastDefine('cc.Quat', Quat, { x: 0, y: 0, z: 0, w: 1 });\r\nlegacyCC.Quat = Quat;\r\n\r\nexport function quat (other: Quat): Quat;\r\nexport function quat (x?: number, y?: number, z?: number, w?: number): Quat;\r\n\r\nexport function quat (x: number | Quat = 0, y = 0, z = 0, w = 1): Quat {\r\n    return new Quat(x as number, y, z, w);\r\n}\r\n\r\nlegacyCC.quat = quat;\r\n","/* eslint-disable @typescript-eslint/no-this-alias */\r\n/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable function-paren-newline */\r\n/* eslint-disable function-call-argument-newline */\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { Mat3 } from './mat3';\r\nimport { Quat } from './quat';\r\nimport { IMat4Like, IVec3Like } from './type-define';\r\nimport { EPSILON } from './utils';\r\nimport { Vec3 } from './vec3';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nconst objectFreeze = Object.freeze;\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport const preTransforms = objectFreeze([\r\n    objectFreeze([1, 0, 0, 1]), // SurfaceTransform.IDENTITY\r\n    objectFreeze([0, 1, -1, 0]), // SurfaceTransform.ROTATE_90\r\n    objectFreeze([-1, 0, 0, -1]), // SurfaceTransform.ROTATE_180\r\n    objectFreeze([0, -1, 1, 0]), // SurfaceTransform.ROTATE_270\r\n]);\r\n\r\n/**\r\n * @en Mathematical 4x4 matrix.\r\n * @zh 表示四维（4x4）矩阵。\r\n */\r\n\r\nconst abs = Math.abs;\r\nconst max = Math.max;\r\nconst sqrt = Math.sqrt;\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst tan = Math.tan;\r\n\r\nexport class Mat4 extends ValueType {\r\n    public static IDENTITY = Object.freeze(new Mat4());\r\n\r\n    /**\r\n     * @en Clone a matrix and save the results to out matrix\r\n     * @zh 获得指定矩阵的拷贝\r\n     */\r\n    public static clone (a: IMat4Like): Mat4 {\r\n        return new Mat4(\r\n            a.m00, a.m01, a.m02, a.m03,\r\n            a.m04, a.m05, a.m06, a.m07,\r\n            a.m08, a.m09, a.m10, a.m11,\r\n            a.m12, a.m13, a.m14, a.m15,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Copy a matrix into the out matrix\r\n     * @zh 复制目标矩阵\r\n     */\r\n    public static copy<Out extends IMat4Like> (out: Out, a: Out): Out {\r\n        out.m00 = a.m00;\r\n        out.m01 = a.m01;\r\n        out.m02 = a.m02;\r\n        out.m03 = a.m03;\r\n        out.m04 = a.m04;\r\n        out.m05 = a.m05;\r\n        out.m06 = a.m06;\r\n        out.m07 = a.m07;\r\n        out.m08 = a.m08;\r\n        out.m09 = a.m09;\r\n        out.m10 = a.m10;\r\n        out.m11 = a.m11;\r\n        out.m12 = a.m12;\r\n        out.m13 = a.m13;\r\n        out.m14 = a.m14;\r\n        out.m15 = a.m15;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets a matrix with the given values and save the results to out matrix\r\n     * @zh 设置矩阵值\r\n     *\r\n     * @param out The receive matrix\r\n     * @param m00 Component in column 0, row 0 position (index 0)\r\n     * @param m01 Component in column 0, row 1 position (index 1)\r\n     * @param m02 Component in column 0, row 2 position (index 2)\r\n     * @param m03 Component in column 0, row 3 position (index 3)\r\n     * @param m10 Component in column 1, row 0 position (index 4)\r\n     * @param m11 Component in column 1, row 1 position (index 5)\r\n     * @param m12 Component in column 1, row 2 position (index 6)\r\n     * @param m13 Component in column 1, row 3 position (index 7)\r\n     * @param m20 Component in column 2, row 0 position (index 8)\r\n     * @param m21 Component in column 2, row 1 position (index 9)\r\n     * @param m22 Component in column 2, row 2 position (index 10)\r\n     * @param m23 Component in column 2, row 3 position (index 11)\r\n     * @param m30 Component in column 3, row 0 position (index 12)\r\n     * @param m31 Component in column 3, row 1 position (index 13)\r\n     * @param m32 Component in column 3, row 2 position (index 14)\r\n     * @param m33 Component in column 3, row 3 position (index 15)\r\n     * @returns The receive matrix\r\n     */\r\n    public static set<Out extends IMat4Like> (\r\n        out: Out,\r\n        m00: number, m01: number, m02: number, m03: number,\r\n        m10: number, m11: number, m12: number, m13: number,\r\n        m20: number, m21: number, m22: number, m23: number,\r\n        m30: number, m31: number, m32: number, m33: number,\r\n    ): Out {\r\n        out.m00 = m00; out.m01 = m01; out.m02 = m02; out.m03 = m03;\r\n        out.m04 = m10; out.m05 = m11; out.m06 = m12; out.m07 = m13;\r\n        out.m08 = m20; out.m09 = m21; out.m10 = m22; out.m11 = m23;\r\n        out.m12 = m30; out.m13 = m31; out.m14 = m32; out.m15 = m33;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en return an identity matrix.\r\n     * @zh 将目标赋值为单位矩阵\r\n     */\r\n    public static identity<Out extends IMat4Like> (out: Out): Out {\r\n        out.m00 = 1;\r\n        out.m01 = 0;\r\n        out.m02 = 0;\r\n        out.m03 = 0;\r\n        out.m04 = 0;\r\n        out.m05 = 1;\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = 0;\r\n        out.m09 = 0;\r\n        out.m10 = 1;\r\n        out.m11 = 0;\r\n        out.m12 = 0;\r\n        out.m13 = 0;\r\n        out.m14 = 0;\r\n        out.m15 = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en return an zero matrix.\r\n     * @zh 将目标赋值为0矩阵\r\n     */\r\n    public static zero<Out extends IMat4Like> (out: Out): Out {\r\n        out.m00 = 0;\r\n        out.m01 = 0;\r\n        out.m02 = 0;\r\n        out.m03 = 0;\r\n        out.m04 = 0;\r\n        out.m05 = 0;\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = 0;\r\n        out.m09 = 0;\r\n        out.m10 = 0;\r\n        out.m11 = 0;\r\n        out.m12 = 0;\r\n        out.m13 = 0;\r\n        out.m14 = 0;\r\n        out.m15 = 0;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transposes a matrix and save the results to out matrix\r\n     * @zh 转置矩阵\r\n     */\r\n    public static transpose<Out extends IMat4Like> (out: Out, a: Out): Out {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            const a01 = a.m01; const a02 = a.m02; const a03 = a.m03; const a12 = a.m06; const a13 = a.m07; const a23 = a.m11;\r\n            out.m01 = a.m04;\r\n            out.m02 = a.m08;\r\n            out.m03 = a.m12;\r\n            out.m04 = a01;\r\n            out.m06 = a.m09;\r\n            out.m07 = a.m13;\r\n            out.m08 = a02;\r\n            out.m09 = a12;\r\n            out.m11 = a.m14;\r\n            out.m12 = a03;\r\n            out.m13 = a13;\r\n            out.m14 = a23;\r\n        } else {\r\n            out.m00 = a.m00;\r\n            out.m01 = a.m04;\r\n            out.m02 = a.m08;\r\n            out.m03 = a.m12;\r\n            out.m04 = a.m01;\r\n            out.m05 = a.m05;\r\n            out.m06 = a.m09;\r\n            out.m07 = a.m13;\r\n            out.m08 = a.m02;\r\n            out.m09 = a.m06;\r\n            out.m10 = a.m10;\r\n            out.m11 = a.m14;\r\n            out.m12 = a.m03;\r\n            out.m13 = a.m07;\r\n            out.m14 = a.m11;\r\n            out.m15 = a.m15;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Inverts a matrix. When matrix is not invertible the matrix will be set to zeros.\r\n     * @zh 矩阵求逆，注意，在矩阵不可逆时，会返回一个全为 0 的矩阵。\r\n     */\r\n    public static invert<Out extends IMat4Like> (out: Out, a: Out): Out {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02; const a03 = a.m03;\r\n        const a10 = a.m04; const a11 = a.m05; const a12 = a.m06; const a13 = a.m07;\r\n        const a20 = a.m08; const a21 = a.m09; const a22 = a.m10; const a23 = a.m11;\r\n        const a30 = a.m12; const a31 = a.m13; const a32 = a.m14; const a33 = a.m15;\r\n\r\n        const b00 = a00 * a11 - a01 * a10;\r\n        const b01 = a00 * a12 - a02 * a10;\r\n        const b02 = a00 * a13 - a03 * a10;\r\n        const b03 = a01 * a12 - a02 * a11;\r\n        const b04 = a01 * a13 - a03 * a11;\r\n        const b05 = a02 * a13 - a03 * a12;\r\n        const b06 = a20 * a31 - a21 * a30;\r\n        const b07 = a20 * a32 - a22 * a30;\r\n        const b08 = a20 * a33 - a23 * a30;\r\n        const b09 = a21 * a32 - a22 * a31;\r\n        const b10 = a21 * a33 - a23 * a31;\r\n        const b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (det === 0) {\r\n            return Mat4.zero(out);\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        // calculate factors\r\n        out.m00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out.m01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out.m02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out.m03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out.m04 = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out.m05 = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out.m06 = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out.m07 = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out.m08 = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out.m09 = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out.m10 = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out.m11 = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out.m12 = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out.m13 = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out.m14 = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out.m15 = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the determinant of a matrix\r\n     * @zh 矩阵行列式\r\n     */\r\n    public static determinant<InType extends IMat4Like> (a: InType): number {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02; const a03 = a.m03;\r\n        const a10 = a.m04; const a11 = a.m05; const a12 = a.m06; const a13 = a.m07;\r\n        const a20 = a.m08; const a21 = a.m09; const a22 = a.m10; const a23 = a.m11;\r\n        const a30 = a.m12; const a31 = a.m13; const a32 = a.m14; const a33 = a.m15;\r\n\r\n        const b00 = a00 * a11 - a01 * a10;\r\n        const b01 = a00 * a12 - a02 * a10;\r\n        const b02 = a00 * a13 - a03 * a10;\r\n        const b03 = a01 * a12 - a02 * a11;\r\n        const b04 = a01 * a13 - a03 * a11;\r\n        const b05 = a02 * a13 - a03 * a12;\r\n        const b06 = a20 * a31 - a21 * a30;\r\n        const b07 = a20 * a32 - a22 * a30;\r\n        const b08 = a20 * a33 - a23 * a30;\r\n        const b09 = a21 * a32 - a22 * a31;\r\n        const b10 = a21 * a33 - a23 * a31;\r\n        const b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply two matrices and save the results to out matrix, (out = a * b)\r\n     * @zh 矩阵乘法 (out = a * b)\r\n     *\r\n     * @param out The out matrix\r\n     * @param a The first operand\r\n     * @param b The second operand\r\n     * @returns out matrix\r\n     */\r\n    public static multiply<Out extends IMat4Like> (out: Out, a: Out, b: Out): Out {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02; const a03 = a.m03;\r\n        const a10 = a.m04; const a11 = a.m05; const a12 = a.m06; const a13 = a.m07;\r\n        const a20 = a.m08; const a21 = a.m09; const a22 = a.m10; const a23 = a.m11;\r\n        const a30 = a.m12; const a31 = a.m13; const a32 = a.m14; const a33 = a.m15;\r\n\r\n        // Cache only the current line of the second matrix\r\n        let b0 = b.m00; let b1 = b.m01; let b2 = b.m02; let b3 = b.m03;\r\n        out.m00 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out.m01 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out.m02 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out.m03 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b.m04; b1 = b.m05; b2 = b.m06; b3 = b.m07;\r\n        out.m04 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out.m05 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out.m06 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out.m07 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b.m08; b1 = b.m09; b2 = b.m10; b3 = b.m11;\r\n        out.m08 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out.m09 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out.m10 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out.m11 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b.m12; b1 = b.m13; b2 = b.m14; b3 = b.m15;\r\n        out.m12 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out.m13 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out.m14 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out.m15 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Translate a matrix with the given vector and save results to the out matrix, the translate is applied before the matrix, i.e. (out = a * T)\r\n     * @zh 在给定矩阵变换基础上加入平移变换，并将结果保存到 out 矩阵中，平移变换将应用在矩阵变换之前，即 (out = a * T)\r\n     *\r\n     * @param out The out matrix\r\n     * @param a The matrix to translate\r\n     * @param v The vector to translate with\r\n     */\r\n    public static transform<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out {\r\n        const x = v.x; const y = v.y; const z = v.z;\r\n        if (a === out) {\r\n            out.m12 = a.m00 * x + a.m04 * y + a.m08 * z + a.m12;\r\n            out.m13 = a.m01 * x + a.m05 * y + a.m09 * z + a.m13;\r\n            out.m14 = a.m02 * x + a.m06 * y + a.m10 * z + a.m14;\r\n            out.m15 = a.m03 * x + a.m07 * y + a.m11 * z + a.m15;\r\n        } else {\r\n            const a00 = a.m00; const a01 = a.m01; const a02 = a.m02; const a03 = a.m03;\r\n            const a10 = a.m04; const a11 = a.m05; const a12 = a.m06; const a13 = a.m07;\r\n            const a20 = a.m08; const a21 = a.m09; const a22 = a.m10; const a23 = a.m11;\r\n\r\n            out.m00 = a00; out.m01 = a01; out.m02 = a02; out.m03 = a03;\r\n            out.m04 = a10; out.m05 = a11; out.m06 = a12; out.m07 = a13;\r\n            out.m08 = a20; out.m09 = a21; out.m10 = a22; out.m11 = a23;\r\n\r\n            out.m12 = a00 * x + a10 * y + a20 * z + a.m12;\r\n            out.m13 = a01 * x + a11 * y + a21 * z + a.m13;\r\n            out.m14 = a02 * x + a12 * y + a22 * z + a.m14;\r\n            out.m15 = a03 * x + a13 * y + a23 * z + a.m15;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transform a matrix with the given translation vector and save results to the out matrix,\r\n     * the translate is applied after the transformation, i.e. (out = T * a)\r\n     * @zh 在给定矩阵变换基础上加入新位移变换，平移变换在变换之后应用，即 (out = T * a)\r\n     *\r\n     * @param out The out matrix\r\n     * @param a The matrix to translate\r\n     * @param v The vector to translate with\r\n     * @deprecated Since 3.8.0, please use [[transform]] instead\r\n     */\r\n    public static translate<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out {\r\n        if (a === out) {\r\n            out.m12 += v.x;\r\n            out.m13 += v.y;\r\n            out.m14 += v.z;\r\n        } else {\r\n            out.m00 = a.m00; out.m01 = a.m01; out.m02 = a.m02; out.m03 = a.m03;\r\n            out.m04 = a.m04; out.m05 = a.m05; out.m06 = a.m06; out.m07 = a.m07;\r\n            out.m08 = a.m08; out.m09 = a.m09; out.m10 = a.m10; out.m11 = a.m11;\r\n            out.m12 = a.m12 + v.x;\r\n            out.m13 = a.m13 + v.y;\r\n            out.m14 = a.m14 + v.z;\r\n            out.m15 = a.m15;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply a matrix with a scale matrix given by a scale vector and save the results into the out matrix,\r\n     * the scale is applied before the matrix, i.e. (out = a * S)\r\n     * @zh 在给定矩阵变换基础上加入新缩放变换，并将结果保存到 out 矩阵中，缩放变换将应用在矩阵变换之前，即 (out = a * S)\r\n     */\r\n    public static scale<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, v: VecLike): Out {\r\n        const x = v.x; const y = v.y; const z = v.z;\r\n        out.m00 = a.m00 * x;\r\n        out.m01 = a.m01 * x;\r\n        out.m02 = a.m02 * x;\r\n        out.m03 = a.m03 * x;\r\n        out.m04 = a.m04 * y;\r\n        out.m05 = a.m05 * y;\r\n        out.m06 = a.m06 * y;\r\n        out.m07 = a.m07 * y;\r\n        out.m08 = a.m08 * z;\r\n        out.m09 = a.m09 * z;\r\n        out.m10 = a.m10 * z;\r\n        out.m11 = a.m11 * z;\r\n        out.m12 = a.m12;\r\n        out.m13 = a.m13;\r\n        out.m14 = a.m14;\r\n        out.m15 = a.m15;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the transform by the given angle and save the results into the out matrix, the rotate is applied before\r\n     * the matrix, i.e. (out = a * R)\r\n     * @zh 在给定矩阵变换基础上加入新旋转变换, 并将结果保存到 out 矩阵中，旋转变换将应用在矩阵变换之前，即 (out = a * R)\r\n     * @param rad Angle of rotation (in radians)\r\n     * @param axis axis of rotation\r\n     */\r\n    public static rotate<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, a: Out, rad: number, axis: VecLike): Out | null {\r\n        let x = axis.x; let y = axis.y; let z = axis.z;\r\n\r\n        let len = sqrt(x * x + y * y + z * z);\r\n\r\n        if (abs(len) < EPSILON) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        // ref: https://en.wikipedia.org/wiki/Rotation_matrix#Axis_and_angle\r\n\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        const t = 1 - c;\r\n\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02; const a03 = a.m03;\r\n        const a10 = a.m04; const a11 = a.m05; const a12 = a.m06; const a13 = a.m07;\r\n        const a20 = a.m08; const a21 = a.m09; const a22 = a.m10; const a23 = a.m11;\r\n\r\n        // Construct the elements of the rotation matrix\r\n        const b00 = x * x * t + c; const b01 = y * x * t + z * s; const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s; const b11 = y * y * t + c; const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s; const b21 = y * z * t - x * s; const b22 = z * z * t + c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out.m00 = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out.m01 = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out.m02 = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out.m03 = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out.m04 = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out.m05 = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out.m06 = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out.m07 = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out.m08 = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out.m09 = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out.m10 = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out.m11 = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n        // If the source and destination differ, copy the unchanged last row\r\n        if (a !== out) {\r\n            out.m12 = a.m12;\r\n            out.m13 = a.m13;\r\n            out.m14 = a.m14;\r\n            out.m15 = a.m15;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transform a matrix with a given angle around X axis and save the results to the out matrix, the rotate is applied\r\n     * before the matrix, i.e. (out = a * R)\r\n     * @zh 在给定矩阵变换基础上加入绕 X 轴的旋转变换, 并将结果保存到 out 矩阵中，旋转变换将应用在矩阵变换之前，即 (out = a * R)\r\n     * @param rad Angle of rotation (in radians)\r\n     */\r\n    public static rotateX<Out extends IMat4Like> (out: Out, a: Out, rad: number): Out {\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        const a10 = a.m04;\r\n        const a11 = a.m05;\r\n        const a12 = a.m06;\r\n        const a13 = a.m07;\r\n        const a20 = a.m08;\r\n        const a21 = a.m09;\r\n        const a22 = a.m10;\r\n        const a23 = a.m11;\r\n\r\n        if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n            out.m00 = a.m00;\r\n            out.m01 = a.m01;\r\n            out.m02 = a.m02;\r\n            out.m03 = a.m03;\r\n            out.m12 = a.m12;\r\n            out.m13 = a.m13;\r\n            out.m14 = a.m14;\r\n            out.m15 = a.m15;\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out.m04 = a10 * c + a20 * s;\r\n        out.m05 = a11 * c + a21 * s;\r\n        out.m06 = a12 * c + a22 * s;\r\n        out.m07 = a13 * c + a23 * s;\r\n        out.m08 = a20 * c - a10 * s;\r\n        out.m09 = a21 * c - a11 * s;\r\n        out.m10 = a22 * c - a12 * s;\r\n        out.m11 = a23 * c - a13 * s;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transform a matrix with a given angle around Y axis and save the results to the out matrix\r\n     * @zh 在给定矩阵变换基础上加入绕 Y 轴的旋转变换\r\n     * @param rad Angle of rotation (in radians)\r\n     */\r\n    public static rotateY<Out extends IMat4Like> (out: Out, a: Out, rad: number): Out {\r\n        // ref: https://en.wikipedia.org/wiki/Rotation_matrix#Axis_and_angle\r\n\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        const a00 = a.m00;\r\n        const a01 = a.m01;\r\n        const a02 = a.m02;\r\n        const a03 = a.m03;\r\n        const a20 = a.m08;\r\n        const a21 = a.m09;\r\n        const a22 = a.m10;\r\n        const a23 = a.m11;\r\n\r\n        if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n            out.m04 = a.m04;\r\n            out.m05 = a.m05;\r\n            out.m06 = a.m06;\r\n            out.m07 = a.m07;\r\n            out.m12 = a.m12;\r\n            out.m13 = a.m13;\r\n            out.m14 = a.m14;\r\n            out.m15 = a.m15;\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out.m00 = a00 * c - a20 * s;\r\n        out.m01 = a01 * c - a21 * s;\r\n        out.m02 = a02 * c - a22 * s;\r\n        out.m03 = a03 * c - a23 * s;\r\n        out.m08 = a00 * s + a20 * c;\r\n        out.m09 = a01 * s + a21 * c;\r\n        out.m10 = a02 * s + a22 * c;\r\n        out.m11 = a03 * s + a23 * c;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transform a matrix with a given angle around Z axis and save the results to the out matrix\r\n     * @zh 在给定矩阵变换基础上加入绕 Z 轴的旋转变换\r\n     * @param rad Angle of rotation (in radians)\r\n     */\r\n    public static rotateZ<Out extends IMat4Like> (out: Out, a: Out, rad: number): Out {\r\n        // ref: https://en.wikipedia.org/wiki/Rotation_matrix#Axis_and_angle\r\n\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        const a00 = a.m00;\r\n        const a01 = a.m01;\r\n        const a02 = a.m02;\r\n        const a03 = a.m03;\r\n        const a10 = a.m04;\r\n        const a11 = a.m05;\r\n        const a12 = a.m06;\r\n        const a13 = a.m07;\r\n\r\n        // If the source and destination differ, copy the unchanged last row\r\n        if (a !== out) {\r\n            out.m08 = a.m08;\r\n            out.m09 = a.m09;\r\n            out.m10 = a.m10;\r\n            out.m11 = a.m11;\r\n            out.m12 = a.m12;\r\n            out.m13 = a.m13;\r\n            out.m14 = a.m14;\r\n            out.m15 = a.m15;\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out.m00 = a00 * c + a10 * s;\r\n        out.m01 = a01 * c + a11 * s;\r\n        out.m02 = a02 * c + a12 * s;\r\n        out.m03 = a03 * c + a13 * s;\r\n        out.m04 = a10 * c - a00 * s;\r\n        out.m05 = a11 * c - a01 * s;\r\n        out.m06 = a12 * c - a02 * s;\r\n        out.m07 = a13 * c - a03 * s;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out matrix with a translation vector\r\n     * @zh 计算位移矩阵\r\n     */\r\n    public static fromTranslation<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, v: VecLike): Out {\r\n        Mat4.identity(out);\r\n        out.m12 = v.x;\r\n        out.m13 = v.y;\r\n        out.m14 = v.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out matrix with a scale vector\r\n     * @zh 计算缩放矩阵\r\n     */\r\n    public static fromScaling<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, v: VecLike): Out {\r\n        Mat4.identity(out);\r\n        out.m00 = v.x;\r\n        out.m05 = v.y;\r\n        out.m10 = v.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out matrix with rotation angle\r\n     * @zh 计算旋转矩阵\r\n     */\r\n    public static fromRotation<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, rad: number, axis: VecLike): Out | null {\r\n        let x = axis.x; let y = axis.y; let z = axis.z;\r\n        let len = sqrt(x * x + y * y + z * z);\r\n\r\n        if (abs(len) < EPSILON) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        const t = 1 - c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out.m00 = x * x * t + c;\r\n        out.m01 = y * x * t + z * s;\r\n        out.m02 = z * x * t - y * s;\r\n        out.m03 = 0;\r\n        out.m04 = x * y * t - z * s;\r\n        out.m05 = y * y * t + c;\r\n        out.m06 = z * y * t + x * s;\r\n        out.m07 = 0;\r\n        out.m08 = x * z * t + y * s;\r\n        out.m09 = y * z * t - x * s;\r\n        out.m10 = z * z * t + c;\r\n        out.m11 = 0;\r\n        out.m12 = 0;\r\n        out.m13 = 0;\r\n        out.m14 = 0;\r\n        out.m15 = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the matrix representing a rotation around the X axis\r\n     * @zh 计算绕 X 轴的旋转矩阵\r\n     */\r\n    public static fromXRotation<Out extends IMat4Like> (out: Out, rad: number): Out {\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        Mat4.identity(out);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out.m05 = c;\r\n        out.m06 = s;\r\n        out.m09 = -s;\r\n        out.m10 = c;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the matrix representing a rotation around the Y axis\r\n     * @zh 计算绕 Y 轴的旋转矩阵\r\n     */\r\n    public static fromYRotation<Out extends IMat4Like> (out: Out, rad: number): Out {\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        Mat4.identity(out);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out.m00 = c;\r\n        out.m02 = -s;\r\n        out.m08 = s;\r\n        out.m10 = c;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the matrix representing a rotation around the Z axis\r\n     * @zh 计算绕 Z 轴的旋转矩阵\r\n     */\r\n    public static fromZRotation<Out extends IMat4Like> (out: Out, rad: number): Out {\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        Mat4.identity(out);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out.m00 = c;\r\n        out.m01 = s;\r\n        out.m04 = -s;\r\n        out.m05 = c;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the transform representing the combination of a rotation and a translation, and stores the result in out.\r\n     * The order is rotation then translation.\r\n     * @zh 根据旋转和位移信息计算矩阵\r\n     */\r\n    public static fromRT<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike): Out {\r\n        const x = q.x; const y = q.y; const z = q.z; const w = q.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        // ref: https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation#Conversion_to_and_from_the_matrix_representation\r\n\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n\r\n        out.m00 = 1 - (yy + zz);\r\n        out.m01 = xy + wz;\r\n        out.m02 = xz - wy;\r\n        out.m03 = 0;\r\n        out.m04 = xy - wz;\r\n        out.m05 = 1 - (xx + zz);\r\n        out.m06 = yz + wx;\r\n        out.m07 = 0;\r\n        out.m08 = xz + wy;\r\n        out.m09 = yz - wx;\r\n        out.m10 = 1 - (xx + yy);\r\n        out.m11 = 0;\r\n        out.m12 = v.x;\r\n        out.m13 = v.y;\r\n        out.m14 = v.z;\r\n        out.m15 = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Extracts the translation from the matrix, assuming it's composed in order of scale, rotation, translation\r\n     * @zh 提取矩阵的位移信息, 默认矩阵中的变换以 S->R->T 的顺序应用\r\n     */\r\n    public static getTranslation<InType extends IMat4Like, VecLike extends IVec3Like> (out: VecLike, mat: InType): VecLike {\r\n        out.x = mat.m12;\r\n        out.y = mat.m13;\r\n        out.z = mat.m14;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Extracts the scale vector from the matrix, assuming it's composed in order of scale, rotation, translation\r\n     * @zh 提取矩阵的缩放信息, 默认矩阵中的变换以 S->R->T 的顺序应用\r\n     */\r\n    public static getScaling<InType extends IMat4Like, VecLike extends IVec3Like> (out: VecLike, mat: InType): VecLike {\r\n        const m00 = m3_1.m00 = mat.m00;\r\n        const m01 = m3_1.m01 = mat.m01;\r\n        const m02 = m3_1.m02 = mat.m02;\r\n        const m04 = m3_1.m03 = mat.m04;\r\n        const m05 = m3_1.m04 = mat.m05;\r\n        const m06 = m3_1.m05 = mat.m06;\r\n        const m08 = m3_1.m06 = mat.m08;\r\n        const m09 = m3_1.m07 = mat.m09;\r\n        const m10 = m3_1.m08 = mat.m10;\r\n        out.x = sqrt(m00 * m00 + m01 * m01 + m02 * m02);\r\n        out.y = sqrt(m04 * m04 + m05 * m05 + m06 * m06);\r\n        out.z = sqrt(m08 * m08 + m09 * m09 + m10 * m10);\r\n        // account for refections\r\n        if (Mat3.determinant(m3_1) < 0) { out.x *= -1; }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Extracts the rotation from the matrix, assuming it's composed in order of scale, rotation, translation\r\n     * @zh 提取矩阵的旋转信息, 默认输入矩阵不含有缩放信息，如考虑缩放应使用 `toRTS` 函数。\r\n     */\r\n    public static getRotation<InType extends IMat4Like> (out: Quat, mat: InType): Quat {\r\n        const trace = mat.m00 + mat.m05 + mat.m10;\r\n        let S = 0;\r\n\r\n        if (trace > 0) {\r\n            S = sqrt(trace + 1.0) * 2;\r\n            out.w = 0.25 * S;\r\n            out.x = (mat.m06 - mat.m09) / S;\r\n            out.y = (mat.m08 - mat.m02) / S;\r\n            out.z = (mat.m01 - mat.m04) / S;\r\n        } else if ((mat.m00 > mat.m05) && (mat.m00 > mat.m10)) {\r\n            S = sqrt(1.0 + mat.m00 - mat.m05 - mat.m10) * 2;\r\n            out.w = (mat.m06 - mat.m09) / S;\r\n            out.x = 0.25 * S;\r\n            out.y = (mat.m01 + mat.m04) / S;\r\n            out.z = (mat.m08 + mat.m02) / S;\r\n        } else if (mat.m05 > mat.m10) {\r\n            S = sqrt(1.0 + mat.m05 - mat.m00 - mat.m10) * 2;\r\n            out.w = (mat.m08 - mat.m02) / S;\r\n            out.x = (mat.m01 + mat.m04) / S;\r\n            out.y = 0.25 * S;\r\n            out.z = (mat.m06 + mat.m09) / S;\r\n        } else {\r\n            S = sqrt(1.0 + mat.m10 - mat.m00 - mat.m05) * 2;\r\n            out.w = (mat.m01 - mat.m04) / S;\r\n            out.x = (mat.m08 + mat.m02) / S;\r\n            out.y = (mat.m06 + mat.m09) / S;\r\n            out.z = 0.25 * S;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Extracts the scale, rotation and translation from the matrix, assuming it's composed in order of scale, rotation, translation\r\n     * @zh 提取旋转、位移、缩放信息， 默认矩阵中的变换以 S->R->T 的顺序应用\r\n     *\r\n     * @param m The input transform matrix\r\n     * @param q The corresponding rotation quat\r\n     * @param v The corresponding translate vector\r\n     * @param s The corresponding scaling vector\r\n     *\r\n     * @deprecated Since 3.8.0, please use toSRT instead\r\n     */\r\n    public static toRTS<InType extends IMat4Like, VecLike extends IVec3Like> (m: InType, q: Quat | null, v: VecLike | null, s: VecLike | null): void {\r\n        Mat4.toSRT(m, q, v, s);\r\n    }\r\n\r\n    /**\r\n     * @en Extracts the scale, rotation and translation from the matrix, assuming it's composed in order of scale, rotation, translation\r\n     * @zh 提取旋转、位移、缩放信息， 默认矩阵中的变换以 S->R->T 的顺序应用\r\n     *\r\n     * @param m The input transform matrix\r\n     * @param q The corresponding rotation quat\r\n     * @param v The corresponding translate vector\r\n     * @param s The corresponding scaling vector\r\n     */\r\n    public static toSRT<InType extends IMat4Like, VecLike extends IVec3Like> (m: InType, q: Quat | null, v: VecLike | null, s: VecLike | null): void {\r\n        // Translation\r\n        if (v) {\r\n            Vec3.set(v, m.m12, m.m13, m.m14);\r\n        }\r\n\r\n        // Scale\r\n        const sx = Vec3.set(v3_1, m.m00, m.m01, m.m02).length();\r\n        const sy = Vec3.set(v3_1, m.m04, m.m05, m.m06).length();\r\n        const sz = Vec3.set(v3_1, m.m08, m.m09, m.m10).length();\r\n        if (s) {\r\n            s.x = sx;\r\n            s.y = sy;\r\n            s.z = sz;\r\n        }\r\n\r\n        // Scale too close to zero, can't decompose rotation.\r\n        if (sx === 0 || sy === 0 || sz === 0) {\r\n            if (q) {\r\n                Quat.identity(q);\r\n            }\r\n            return;\r\n        }\r\n\r\n        m3_1.m00 = m.m00 / sx;\r\n        m3_1.m01 = m.m01 / sx;\r\n        m3_1.m02 = m.m02 / sx;\r\n\r\n        m3_1.m03 = m.m04 / sy;\r\n        m3_1.m04 = m.m05 / sy;\r\n        m3_1.m05 = m.m06 / sy;\r\n\r\n        m3_1.m06 = m.m08 / sz;\r\n        m3_1.m07 = m.m09 / sz;\r\n        m3_1.m08 = m.m10 / sz;\r\n\r\n        const det = Mat3.determinant(m3_1);\r\n        if (s) {\r\n            if (det < 0) {\r\n                s.x *= -1;\r\n            }\r\n        }\r\n\r\n        if (q) {\r\n            if (det < 0) {\r\n                m3_1.m00 *= -1;\r\n                m3_1.m01 *= -1;\r\n                m3_1.m02 *= -1;\r\n            }\r\n            Quat.fromMat3(q, m3_1); // already normalized\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Convert Matrix to euler angle, resulting angle y, z in the range of [-PI, PI],\r\n     *  x in the range of [-PI/2, PI/2], the rotation order is YXZ.\r\n     * @zh 将矩阵转换为欧拉角，结果角度 y, z 在 [-PI, PI] 范围内，x 在 [-PI/2, PI/2] 区间内，旋转顺序为 YXZ.\r\n     */\r\n    public static toEuler<InType extends IMat4Like, VecLike extends IVec3Like> (m: InType, v: VecLike): boolean {\r\n        Mat3.set(\r\n            m3_1,\r\n            m.m00, m.m01, m.m02,\r\n            m.m04, m.m05, m.m06,\r\n            m.m08, m.m09, m.m10,\r\n        );\r\n        return Mat3.toEuler(m3_1, v);\r\n    }\r\n\r\n    /**\r\n     * @en Compose a matrix from scale, rotation and translation, applied in order.\r\n     * @zh 根据旋转、位移、缩放信息计算矩阵，以 S->R->T 的顺序应用\r\n     * @deprecated Since 3.8.0, please use [[fromSRT]] instead.\r\n     */\r\n    public static fromRTS<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike, s: VecLike): Out {\r\n        return Mat4.fromSRT(out, q, v, s);\r\n    }\r\n\r\n    /**\r\n     * @en Compose a matrix from scale, rotation and translation, applied in order.\r\n     * @zh 根据旋转、位移、缩放信息计算矩阵，以 S->R->T 的顺序应用\r\n     * @param out The receiving matrix\r\n     * @param q Rotation quaternion\r\n     * @param v Translation vector\r\n     * @param s Scaling vector\r\n     * @returns The receiving matrix\r\n     */\r\n    public static fromSRT<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike, s: VecLike): Out {\r\n        const { x, y, z, w } = q;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n        const sx = s.x;\r\n        const sy = s.y;\r\n        const sz = s.z;\r\n\r\n        out.m00 = (1 - (yy + zz)) * sx;\r\n        out.m01 = (xy + wz) * sx;\r\n        out.m02 = (xz - wy) * sx;\r\n        out.m03 = 0;\r\n        out.m04 = (xy - wz) * sy;\r\n        out.m05 = (1 - (xx + zz)) * sy;\r\n        out.m06 = (yz + wx) * sy;\r\n        out.m07 = 0;\r\n        out.m08 = (xz + wy) * sz;\r\n        out.m09 = (yz - wx) * sz;\r\n        out.m10 = (1 - (xx + yy)) * sz;\r\n        out.m11 = 0;\r\n        out.m12 = v.x;\r\n        out.m13 = v.y;\r\n        out.m14 = v.z;\r\n        out.m15 = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Compose a matrix from scale, rotation and translation, applied in order, from a given origin\r\n     * @zh 根据指定的旋转、位移、缩放及变换中心信息计算矩阵，以 S->R->T 的顺序应用\r\n     * @param q Rotation quaternion\r\n     * @param v Translation vector\r\n     * @param s Scaling vector\r\n     * @param o transformation Center\r\n     * @deprecated Please use [[fromSRTOrigin]] instead.\r\n     */\r\n    public static fromRTSOrigin<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike, s: VecLike, o: VecLike): Out {\r\n        return Mat4.fromSRTOrigin(out, q, v, s, o);\r\n    }\r\n\r\n    /**\r\n     * @en Compose a matrix from scale, rotation and translation, applied in order, from a given origin\r\n     * @zh 根据指定的旋转、位移、缩放及变换中心信息计算矩阵，以 O^{-1}->S->R->O->T 的顺序应用\r\n     * @param out The receiving matrix\r\n     * @param q Rotation quaternion\r\n     * @param v Translation vector\r\n     * @param s Scaling vector\r\n     * @param o transformation Center\r\n     * @returns The receiving matrix\r\n     */\r\n    public static fromSRTOrigin<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, q: Quat, v: VecLike, s: VecLike, o: VecLike): Out {\r\n        const x = q.x; const y = q.y; const z = q.z; const w = q.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n\r\n        const sx = s.x;\r\n        const sy = s.y;\r\n        const sz = s.z;\r\n\r\n        const ox = o.x;\r\n        const oy = o.y;\r\n        const oz = o.z;\r\n\r\n        out.m00 = (1 - (yy + zz)) * sx;\r\n        out.m01 = (xy + wz) * sx;\r\n        out.m02 = (xz - wy) * sx;\r\n        out.m03 = 0;\r\n        out.m04 = (xy - wz) * sy;\r\n        out.m05 = (1 - (xx + zz)) * sy;\r\n        out.m06 = (yz + wx) * sy;\r\n        out.m07 = 0;\r\n        out.m08 = (xz + wy) * sz;\r\n        out.m09 = (yz - wx) * sz;\r\n        out.m10 = (1 - (xx + yy)) * sz;\r\n        out.m11 = 0;\r\n        out.m12 = v.x + ox - (out.m00 * ox + out.m04 * oy + out.m08 * oz);\r\n        out.m13 = v.y + oy - (out.m01 * ox + out.m05 * oy + out.m09 * oz);\r\n        out.m14 = v.z + oz - (out.m02 * ox + out.m06 * oy + out.m10 * oz);\r\n        out.m15 = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out matrix with the given quaternion\r\n     * @zh 根据指定的旋转信息计算矩阵\r\n     */\r\n    public static fromQuat<Out extends IMat4Like> (out: Out, q: Quat): Out {\r\n        const x = q.x; const y = q.y; const z = q.z; const w = q.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        const xx = x * x2;\r\n        const yx = y * x2;\r\n        const yy = y * y2;\r\n        const zx = z * x2;\r\n        const zy = z * y2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n\r\n        out.m00 = 1 - yy - zz;\r\n        out.m01 = yx + wz;\r\n        out.m02 = zx - wy;\r\n        out.m03 = 0;\r\n\r\n        out.m04 = yx - wz;\r\n        out.m05 = 1 - xx - zz;\r\n        out.m06 = zy + wx;\r\n        out.m07 = 0;\r\n\r\n        out.m08 = zx + wy;\r\n        out.m09 = zy - wx;\r\n        out.m10 = 1 - xx - yy;\r\n        out.m11 = 0;\r\n\r\n        out.m12 = 0;\r\n        out.m13 = 0;\r\n        out.m14 = 0;\r\n        out.m15 = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the matrix representing the given frustum\r\n     * @zh 根据指定的视锥体信息计算矩阵\r\n     * @param out The receiving matrix.\r\n     * @param left The X coordinate of the left side of the near projection plane in view space.\r\n     * @param right The X coordinate of the right side of the near projection plane in view space.\r\n     * @param bottom The Y coordinate of the bottom side of the near projection plane in view space.\r\n     * @param top The Y coordinate of the top side of the near projection plane in view space.\r\n     * @param near Z distance to the near plane from the origin in view space.\r\n     * @param far Z distance to the far plane from the origin in view space.\r\n     *\r\n     * @return The receiving matrix.\r\n     */\r\n    public static frustum<Out extends IMat4Like> (\r\n        out: Out,\r\n        left: number,\r\n        right: number,\r\n        bottom: number,\r\n        top: number,\r\n        near: number,\r\n        far: number,\r\n    ): Out {\r\n        const rl = 1 / (right - left);\r\n        const tb = 1 / (top - bottom);\r\n        const nf = 1 / (near - far);\r\n\r\n        out.m00 = (near * 2) * rl;\r\n        out.m01 = 0;\r\n        out.m02 = 0;\r\n        out.m03 = 0;\r\n        out.m04 = 0;\r\n        out.m05 = (near * 2) * tb;\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = (right + left) * rl;\r\n        out.m09 = (top + bottom) * tb;\r\n        out.m10 = (far + near) * nf;\r\n        out.m11 = -1;\r\n        out.m12 = 0;\r\n        out.m13 = 0;\r\n        out.m14 = (far * near * 2) * nf;\r\n        out.m15 = 0;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates perspective projection matrix\r\n     * @zh 计算透视投影矩阵\r\n     * @param out The receiving matrix.\r\n     * @param fovy Vertical field-of-view in degrees.\r\n     * @param aspect Aspect ratio\r\n     * @param near Near depth clipping plane value.\r\n     * @param far Far depth clipping plane value.\r\n     * @param isFOVY Whether the fovy is based on the vertical field-of-view.\r\n     * @param minClipZ The minimum value of the near clipping plane, e.g. -1 for OpenGL, 0 for Vulkan and Metal.\r\n     * @param projectionSignY The sign of the Y axis of the projection matrix, which is used to flip the Y axis.\r\n     * @param orientation The orientation of the projection matrix, which is used to rotate the projection matrix.\r\n     *\r\n     * @return The receiving matrix.\r\n     */\r\n    public static perspective<Out extends IMat4Like> (\r\n        out: Out, fov: number, aspect: number, near: number, far: number,\r\n        isFOVY = true, minClipZ = -1, projectionSignY = 1, orientation = 0,\r\n    ): Out {\r\n        const f = 1.0 / tan(fov / 2);\r\n        const nf = 1 / (near - far);\r\n\r\n        const x = isFOVY ? f / aspect : f;\r\n        const y = (isFOVY ? f : f * aspect) * projectionSignY;\r\n        const preTransform = preTransforms[orientation];\r\n\r\n        out.m00 = x * preTransform[0];\r\n        out.m01 = x * preTransform[1];\r\n        out.m02 = 0;\r\n        out.m03 = 0;\r\n        out.m04 = y * preTransform[2];\r\n        out.m05 = y * preTransform[3];\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = 0;\r\n        out.m09 = 0;\r\n        out.m10 = (far - minClipZ * near) * nf;\r\n        out.m11 = -1;\r\n        out.m12 = 0;\r\n        out.m13 = 0;\r\n        out.m14 = far * near * nf * (1 - minClipZ);\r\n        out.m15 = 0;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates orthogonal projection matrix\r\n     * @zh 计算正交投影矩阵\r\n     * @param out The receiving matrix.\r\n     * @param left Left-side x-coordinate.\r\n     * @param right Right-side x-coordinate.\r\n     * @param bottom Bottom y-coordinate.\r\n     * @param top Top y-coordinate.\r\n     * @param near Near depth clipping plane value.\r\n     * @param far Far depth clipping plane value.\r\n     * @param minClipZ The minimum value of the near clipping plane, e.g. -1 for OpenGL, 0 for Vulkan and Metal.\r\n     * @param projectionSignY The sign of the Y axis of the projection matrix, which is used to flip the Y axis.\r\n     * @param orientation The orientation of the projection matrix, which is used to rotate the projection matrix.\r\n     *\r\n     * @return The receiving matrix.\r\n     */\r\n    public static ortho<Out extends IMat4Like> (\r\n        out: Out, left: number, right: number, bottom: number, top: number, near: number, far: number,\r\n        minClipZ = -1, projectionSignY = 1, orientation = 0,\r\n    ): Out {\r\n        const lr = 1 / (left - right);\r\n        const bt = 1 / (bottom - top) * projectionSignY;\r\n        const nf = 1 / (near - far);\r\n\r\n        const x = -2 * lr;\r\n        const y = -2 * bt;\r\n        const dx = (left + right) * lr;\r\n        const dy = (top + bottom) * bt;\r\n        const preTransform = preTransforms[orientation];\r\n\r\n        out.m00 = x * preTransform[0];\r\n        out.m01 = x * preTransform[1];\r\n        out.m02 = 0;\r\n        out.m03 = 0;\r\n        out.m04 = y * preTransform[2];\r\n        out.m05 = y * preTransform[3];\r\n        out.m06 = 0;\r\n        out.m07 = 0;\r\n        out.m08 = 0;\r\n        out.m09 = 0;\r\n        out.m10 = nf * (1 - minClipZ);\r\n        out.m11 = 0;\r\n        out.m12 = dx * preTransform[0] + dy * preTransform[2];\r\n        out.m13 = dx * preTransform[1] + dy * preTransform[3];\r\n        out.m14 = (near - minClipZ * far) * nf;\r\n        out.m15 = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Calculates the matrix with the view point information, given by eye position, target center and the up vector.\r\n     * Note that center to eye vector can't be zero or parallel to the up vector\r\n     * @zh\r\n     * 计算视图矩阵，给定眼睛位置、目标中心和上向量。注意，中心到眼睛向量不能为零或与上向量平行。\r\n     * @out The receiving matrix.\r\n     * @param eye The source point.\r\n     * @param center The target point.\r\n     * @param up The vector describing the up direction.\r\n     * @return The receiving matrix.\r\n     */\r\n    public static lookAt<Out extends IMat4Like, VecLike extends IVec3Like> (out: Out, eye: VecLike, center: VecLike, up: VecLike): Out {\r\n        const eyex = eye.x;\r\n        const eyey = eye.y;\r\n        const eyez = eye.z;\r\n        const upx = up.x;\r\n        const upy = up.y;\r\n        const upz = up.z;\r\n        const centerx = center.x;\r\n        const centery = center.y;\r\n        const centerz = center.z;\r\n\r\n        let z0 = eyex - centerx;\r\n        let z1 = eyey - centery;\r\n        let z2 = eyez - centerz;\r\n\r\n        let len = 1 / sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n        z0 *= len;\r\n        z1 *= len;\r\n        z2 *= len;\r\n\r\n        let x0 = upy * z2 - upz * z1;\r\n        let x1 = upz * z0 - upx * z2;\r\n        let x2 = upx * z1 - upy * z0;\r\n        len = 1 / sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n        x0 *= len;\r\n        x1 *= len;\r\n        x2 *= len;\r\n\r\n        const y0 = z1 * x2 - z2 * x1;\r\n        const y1 = z2 * x0 - z0 * x2;\r\n        const y2 = z0 * x1 - z1 * x0;\r\n\r\n        out.m00 = x0;\r\n        out.m01 = y0;\r\n        out.m02 = z0;\r\n        out.m03 = 0;\r\n        out.m04 = x1;\r\n        out.m05 = y1;\r\n        out.m06 = z1;\r\n        out.m07 = 0;\r\n        out.m08 = x2;\r\n        out.m09 = y2;\r\n        out.m10 = z2;\r\n        out.m11 = 0;\r\n        out.m12 = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n        out.m13 = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n        out.m14 = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n        out.m15 = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the inverse transpose of a matrix and save the results to out matrix\r\n     * @zh 计算逆转置矩阵\r\n     *\r\n     * @deprecated This function is too complicated, and should be split into several functions.\r\n     */\r\n    public static inverseTranspose<Out extends IMat4Like> (out: Out, a: Out): Out | null {\r\n        const a00 = a.m00; const a01 = a.m01; const a02 = a.m02; const a03 = a.m03;\r\n        const a10 = a.m04; const a11 = a.m05; const a12 = a.m06; const a13 = a.m07;\r\n        const a20 = a.m08; const a21 = a.m09; const a22 = a.m10; const a23 = a.m11;\r\n        const a30 = a.m12; const a31 = a.m13; const a32 = a.m14; const a33 = a.m15;\r\n\r\n        const b00 = a00 * a11 - a01 * a10;\r\n        const b01 = a00 * a12 - a02 * a10;\r\n        const b02 = a00 * a13 - a03 * a10;\r\n        const b03 = a01 * a12 - a02 * a11;\r\n        const b04 = a01 * a13 - a03 * a11;\r\n        const b05 = a02 * a13 - a03 * a12;\r\n        const b06 = a20 * a31 - a21 * a30;\r\n        const b07 = a20 * a32 - a22 * a30;\r\n        const b08 = a20 * a33 - a23 * a30;\r\n        const b09 = a21 * a32 - a22 * a31;\r\n        const b10 = a21 * a33 - a23 * a31;\r\n        const b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out.m00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out.m01 = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out.m02 = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out.m03 = 0;\r\n\r\n        out.m04 = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out.m05 = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out.m06 = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out.m07 = 0;\r\n\r\n        out.m08 = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out.m09 = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out.m10 = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out.m11 = 0;\r\n\r\n        out.m12 = 0;\r\n        out.m13 = 0;\r\n        out.m14 = 0;\r\n        out.m15 = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Transform a matrix object to a flat array\r\n     * @zh 矩阵转数组\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static toArray<Out extends IWritableArrayLike<number>> (out: Out, m: IMat4Like, ofs = 0): Out {\r\n        out[ofs + 0] = m.m00;\r\n        out[ofs + 1] = m.m01;\r\n        out[ofs + 2] = m.m02;\r\n        out[ofs + 3] = m.m03;\r\n        out[ofs + 4] = m.m04;\r\n        out[ofs + 5] = m.m05;\r\n        out[ofs + 6] = m.m06;\r\n        out[ofs + 7] = m.m07;\r\n        out[ofs + 8] = m.m08;\r\n        out[ofs + 9] = m.m09;\r\n        out[ofs + 10] = m.m10;\r\n        out[ofs + 11] = m.m11;\r\n        out[ofs + 12] = m.m12;\r\n        out[ofs + 13] = m.m13;\r\n        out[ofs + 14] = m.m14;\r\n        out[ofs + 15] = m.m15;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Generates or sets a matrix with a flat array\r\n     * @zh 数组转矩阵\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static fromArray<Out extends IMat4Like> (out: Out, arr: IWritableArrayLike<number>, ofs = 0): Out {\r\n        out.m00 = arr[ofs + 0];\r\n        out.m01 = arr[ofs + 1];\r\n        out.m02 = arr[ofs + 2];\r\n        out.m03 = arr[ofs + 3];\r\n        out.m04 = arr[ofs + 4];\r\n        out.m05 = arr[ofs + 5];\r\n        out.m06 = arr[ofs + 6];\r\n        out.m07 = arr[ofs + 7];\r\n        out.m08 = arr[ofs + 8];\r\n        out.m09 = arr[ofs + 9];\r\n        out.m10 = arr[ofs + 10];\r\n        out.m11 = arr[ofs + 11];\r\n        out.m12 = arr[ofs + 12];\r\n        out.m13 = arr[ofs + 13];\r\n        out.m14 = arr[ofs + 14];\r\n        out.m15 = arr[ofs + 15];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Adds two matrices and save the results to out matrix\r\n     * @zh 逐元素矩阵加法\r\n     */\r\n    public static add<Out extends IMat4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.m00 = a.m00 + b.m00;\r\n        out.m01 = a.m01 + b.m01;\r\n        out.m02 = a.m02 + b.m02;\r\n        out.m03 = a.m03 + b.m03;\r\n        out.m04 = a.m04 + b.m04;\r\n        out.m05 = a.m05 + b.m05;\r\n        out.m06 = a.m06 + b.m06;\r\n        out.m07 = a.m07 + b.m07;\r\n        out.m08 = a.m08 + b.m08;\r\n        out.m09 = a.m09 + b.m09;\r\n        out.m10 = a.m10 + b.m10;\r\n        out.m11 = a.m11 + b.m11;\r\n        out.m12 = a.m12 + b.m12;\r\n        out.m13 = a.m13 + b.m13;\r\n        out.m14 = a.m14 + b.m14;\r\n        out.m15 = a.m15 + b.m15;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts matrix b from matrix a and save the results to out matrix\r\n     * @zh 逐元素矩阵减法\r\n     */\r\n    public static subtract<Out extends IMat4Like> (out: Out, a: Out, b: Out): Out {\r\n        out.m00 = a.m00 - b.m00;\r\n        out.m01 = a.m01 - b.m01;\r\n        out.m02 = a.m02 - b.m02;\r\n        out.m03 = a.m03 - b.m03;\r\n        out.m04 = a.m04 - b.m04;\r\n        out.m05 = a.m05 - b.m05;\r\n        out.m06 = a.m06 - b.m06;\r\n        out.m07 = a.m07 - b.m07;\r\n        out.m08 = a.m08 - b.m08;\r\n        out.m09 = a.m09 - b.m09;\r\n        out.m10 = a.m10 - b.m10;\r\n        out.m11 = a.m11 - b.m11;\r\n        out.m12 = a.m12 - b.m12;\r\n        out.m13 = a.m13 - b.m13;\r\n        out.m14 = a.m14 - b.m14;\r\n        out.m15 = a.m15 - b.m15;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply each element of a matrix by a scalar number and save the results to out matrix\r\n     * @zh 矩阵标量乘法\r\n     */\r\n    public static multiplyScalar<Out extends IMat4Like> (out: Out, a: Out, b: number): Out {\r\n        out.m00 = a.m00 * b;\r\n        out.m01 = a.m01 * b;\r\n        out.m02 = a.m02 * b;\r\n        out.m03 = a.m03 * b;\r\n        out.m04 = a.m04 * b;\r\n        out.m05 = a.m05 * b;\r\n        out.m06 = a.m06 * b;\r\n        out.m07 = a.m07 * b;\r\n        out.m08 = a.m08 * b;\r\n        out.m09 = a.m09 * b;\r\n        out.m10 = a.m10 * b;\r\n        out.m11 = a.m11 * b;\r\n        out.m12 = a.m12 * b;\r\n        out.m13 = a.m13 * b;\r\n        out.m14 = a.m14 * b;\r\n        out.m15 = a.m15 * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Adds two matrices after multiplying each element of the second operand by a scalar number. And save the results to out matrix.\r\n     * @zh 逐元素矩阵标量乘加: A + B * scale\r\n     */\r\n    public static multiplyScalarAndAdd<Out extends IMat4Like> (out: Out, a: Out, b: Out, scale: number): Out {\r\n        out.m00 = a.m00 + (b.m00 * scale);\r\n        out.m01 = a.m01 + (b.m01 * scale);\r\n        out.m02 = a.m02 + (b.m02 * scale);\r\n        out.m03 = a.m03 + (b.m03 * scale);\r\n        out.m04 = a.m04 + (b.m04 * scale);\r\n        out.m05 = a.m05 + (b.m05 * scale);\r\n        out.m06 = a.m06 + (b.m06 * scale);\r\n        out.m07 = a.m07 + (b.m07 * scale);\r\n        out.m08 = a.m08 + (b.m08 * scale);\r\n        out.m09 = a.m09 + (b.m09 * scale);\r\n        out.m10 = a.m10 + (b.m10 * scale);\r\n        out.m11 = a.m11 + (b.m11 * scale);\r\n        out.m12 = a.m12 + (b.m12 * scale);\r\n        out.m13 = a.m13 + (b.m13 * scale);\r\n        out.m14 = a.m14 + (b.m14 * scale);\r\n        out.m15 = a.m15 + (b.m15 * scale);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are equal.\r\n     * @zh 矩阵等价判断\r\n     */\r\n    public static strictEquals<InType extends IMat4Like> (a: InType, b: InType): boolean {\r\n        return a.m00 === b.m00 && a.m01 === b.m01 && a.m02 === b.m02 && a.m03 === b.m03\r\n            && a.m04 === b.m04 && a.m05 === b.m05 && a.m06 === b.m06 && a.m07 === b.m07\r\n            && a.m08 === b.m08 && a.m09 === b.m09 && a.m10 === b.m10 && a.m11 === b.m11\r\n            && a.m12 === b.m12 && a.m13 === b.m13 && a.m14 === b.m14 && a.m15 === b.m15;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are approximately equal.\r\n     * @zh 排除浮点数误差的矩阵近似等价判断\r\n     *\r\n     * @param a The first matrix to be compared.\r\n     * @param b The second matrix to be compared.\r\n     * @param epsilon The tolerance value.\r\n     * @return\r\n     */\r\n    public static equals<InType extends IMat4Like> (a: InType, b: InType, epsilon = EPSILON): boolean {\r\n        // TAOCP vol.2, 3rd ed., s.4.2.4, p.213-225\r\n        // defines a 'close enough' relationship between u and v that scales for magnitude\r\n        return (\r\n            abs(a.m00 - b.m00) <= epsilon * max(1.0, abs(a.m00), abs(b.m00))\r\n            && abs(a.m01 - b.m01) <= epsilon * max(1.0, abs(a.m01), abs(b.m01))\r\n            && abs(a.m02 - b.m02) <= epsilon * max(1.0, abs(a.m02), abs(b.m02))\r\n            && abs(a.m03 - b.m03) <= epsilon * max(1.0, abs(a.m03), abs(b.m03))\r\n            && abs(a.m04 - b.m04) <= epsilon * max(1.0, abs(a.m04), abs(b.m04))\r\n            && abs(a.m05 - b.m05) <= epsilon * max(1.0, abs(a.m05), abs(b.m05))\r\n            && abs(a.m06 - b.m06) <= epsilon * max(1.0, abs(a.m06), abs(b.m06))\r\n            && abs(a.m07 - b.m07) <= epsilon * max(1.0, abs(a.m07), abs(b.m07))\r\n            && abs(a.m08 - b.m08) <= epsilon * max(1.0, abs(a.m08), abs(b.m08))\r\n            && abs(a.m09 - b.m09) <= epsilon * max(1.0, abs(a.m09), abs(b.m09))\r\n            && abs(a.m10 - b.m10) <= epsilon * max(1.0, abs(a.m10), abs(b.m10))\r\n            && abs(a.m11 - b.m11) <= epsilon * max(1.0, abs(a.m11), abs(b.m11))\r\n            && abs(a.m12 - b.m12) <= epsilon * max(1.0, abs(a.m12), abs(b.m12))\r\n            && abs(a.m13 - b.m13) <= epsilon * max(1.0, abs(a.m13), abs(b.m13))\r\n            && abs(a.m14 - b.m14) <= epsilon * max(1.0, abs(a.m14), abs(b.m14))\r\n            && abs(a.m15 - b.m15) <= epsilon * max(1.0, abs(a.m15), abs(b.m15))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * matrix layout\r\n     * |m00  m04  m08 m12|\r\n     * |m01  m05  m09 m13|\r\n     * |m02  m06  m10 m14|\r\n     * |m03  m07  m11 m15|\r\n     */\r\n\r\n    /**\r\n     * @en Value at column 0 row 0 of the matrix.\r\n     * @zh 矩阵第 0 列第 0 行的元素。\r\n     */\r\n    public declare m00: number;\r\n\r\n    /**\r\n     * @en Value at column 0 row 1 of the matrix.\r\n     * @zh 矩阵第 0 列第 1 行的元素。\r\n     */\r\n    public declare m01: number;\r\n\r\n    /**\r\n     * @en Value at column 0 row 2 of the matrix.\r\n     * @zh 矩阵第 0 列第 2 行的元素。\r\n     */\r\n    public declare m02: number;\r\n\r\n    /**\r\n     * @en Value at column 0 row 3 of the matrix.\r\n     * @zh 矩阵第 0 列第 3 行的元素。\r\n     */\r\n    public declare m03: number;\r\n\r\n    /**\r\n     * @en Value at column 1 row 0 of the matrix.\r\n     * @zh 矩阵第 1 列第 0 行的元素。\r\n     */\r\n    public declare m04: number;\r\n\r\n    /**\r\n     * @en Value at column 1 row 1 of the matrix.\r\n     * @zh 矩阵第 1 列第 1 行的元素。\r\n     */\r\n    public declare m05: number;\r\n\r\n    /**\r\n     * @en Value at column 1 row 2 of the matrix.\r\n     * @zh 矩阵第 1 列第 2 行的元素。\r\n     */\r\n    public declare m06: number;\r\n\r\n    /**\r\n     * @en Value at column 1 row 3 of the matrix.\r\n     * @zh 矩阵第 1 列第 3 行的元素。\r\n     */\r\n    public declare m07: number;\r\n\r\n    /**\r\n     * @en Value at column 2 row 0 of the matrix.\r\n     * @zh 矩阵第 2 列第 0 行的元素。\r\n     */\r\n    public declare m08: number;\r\n\r\n    /**\r\n     * @en Value at column 2 row 1 of the matrix.\r\n     * @zh 矩阵第 2 列第 1 行的元素。\r\n     */\r\n    public declare m09: number;\r\n\r\n    /**\r\n     * @en Value at column 2 row 2 of the matrix.\r\n     * @zh 矩阵第 2 列第 2 行的元素。\r\n     */\r\n    public declare m10: number;\r\n\r\n    /**\r\n     * @en Value at column 2 row 3 of the matrix.\r\n     * @zh 矩阵第 2 列第 3 行的元素。\r\n     */\r\n    public declare m11: number;\r\n\r\n    /**\r\n     * @en Value at column 3 row 0 of the matrix.\r\n     * @zh 矩阵第 3 列第 0 行的元素。\r\n     */\r\n    public declare m12: number;\r\n\r\n    /**\r\n     * @en Value at column 3 row 1 of the matrix.\r\n     * @zh 矩阵第 3 列第 1 行的元素。\r\n     */\r\n    public declare m13: number;\r\n\r\n    /**\r\n     * @en Value at column 3 row 2 of the matrix.\r\n     * @zh 矩阵第 3 列第 2 行的元素。\r\n     */\r\n    public declare m14: number;\r\n\r\n    /**\r\n     * @en Value at column 3 row 3 of the matrix.\r\n     * @zh 矩阵第 3 列第 3 行的元素。\r\n     */\r\n    public declare m15: number;\r\n\r\n    constructor(other: Mat4);\r\n\r\n    constructor(\r\n        m00?: number, m01?: number, m02?: number, m03?: number,\r\n        m04?: number, m05?: number, m06?: number, m07?: number,\r\n        m08?: number, m09?: number, m10?: number, m11?: number,\r\n        m12?: number, m13?: number, m14?: number, m15?: number);\r\n\r\n    constructor (\r\n        m00: Mat4 | number = 1, m01 = 0, m02 = 0, m03 = 0,\r\n        m04 = 0, m05 = 1, m06 = 0, m07 = 0,\r\n        m08 = 0, m09 = 0, m10 = 1, m11 = 0,\r\n        m12 = 0, m13 = 0, m14 = 0, m15 = 1,\r\n    ) {\r\n        super();\r\n        const self = this;\r\n        if (typeof m00 === 'object') {\r\n            self.m00 = m00.m00; this.m01 = m00.m01; this.m02 = m00.m02; this.m03 = m00.m03;\r\n            self.m04 = m00.m04; this.m05 = m00.m05; this.m06 = m00.m06; this.m07 = m00.m07;\r\n            self.m08 = m00.m08; this.m09 = m00.m09; this.m10 = m00.m10; this.m11 = m00.m11;\r\n            self.m12 = m00.m12; this.m13 = m00.m13; this.m14 = m00.m14; this.m15 = m00.m15;\r\n        } else {\r\n            self.m00 = m00; this.m01 = m01; this.m02 = m02; this.m03 = m03;\r\n            self.m04 = m04; this.m05 = m05; this.m06 = m06; this.m07 = m07;\r\n            self.m08 = m08; this.m09 = m09; this.m10 = m10; this.m11 = m11;\r\n            self.m12 = m12; this.m13 = m13; this.m14 = m14; this.m15 = m15;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clone a new matrix from the current matrix.\r\n     * @zh 克隆当前矩阵。\r\n     */\r\n    public clone (): Mat4 {\r\n        return new Mat4(\r\n            this.m00, this.m01, this.m02, this.m03,\r\n            this.m04, this.m05, this.m06, this.m07,\r\n            this.m08, this.m09, this.m10, this.m11,\r\n            this.m12, this.m13, this.m14, this.m15,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Sets the matrix with another one's value.\r\n     * @zh 设置当前矩阵使其与指定矩阵相等。\r\n     * @param other Specified matrix.\r\n     * @return this\r\n     */\r\n    public set(other: Mat4): Mat4;\r\n\r\n    /**\r\n     * @en Set the matrix with values of all elements\r\n     * @zh 设置当前矩阵指定元素值。\r\n     *\r\n     * @return this\r\n     */\r\n    public set(\r\n        m00?: number, m01?: number, m02?: number, m03?: number,\r\n        m04?: number, m05?: number, m06?: number, m07?: number,\r\n        m08?: number, m09?: number, m10?: number, m11?: number,\r\n        m12?: number, m13?: number, m14?: number, m15?: number): Mat4;\r\n\r\n    public set (m00: Mat4 | number = 1, m01 = 0, m02 = 0, m03 = 0,\r\n        m04 = 0, m05 = 1, m06 = 0, m07 = 0,\r\n        m08 = 0, m09 = 0, m10 = 1, m11 = 0,\r\n        m12 = 0, m13 = 0, m14 = 0, m15 = 1): Mat4 {\r\n        const self = this;\r\n        if (typeof m00 === 'object') {\r\n            self.m01 = m00.m01; self.m02 = m00.m02; self.m03 = m00.m03; self.m04 = m00.m04;\r\n            self.m05 = m00.m05; self.m06 = m00.m06; self.m07 = m00.m07; self.m08 = m00.m08;\r\n            self.m09 = m00.m09; self.m10 = m00.m10; self.m11 = m00.m11; self.m12 = m00.m12;\r\n            self.m13 = m00.m13; self.m14 = m00.m14; self.m15 = m00.m15; self.m00 = m00.m00;\r\n        } else {\r\n            self.m01 = m01; self.m02 = m02; self.m03 = m03; self.m04 = m04;\r\n            self.m05 = m05; self.m06 = m06; self.m07 = m07; self.m08 = m08;\r\n            self.m09 = m09; self.m10 = m10; self.m11 = m11; self.m12 = m12;\r\n            self.m13 = m13; self.m14 = m14; self.m15 = m15; self.m00 = m00;\r\n        }\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are approximately equal.\r\n     * @zh 判断当前矩阵是否在误差范围内与指定矩阵相等。\r\n     * @param other Comparative matrix\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @return Returns `true' when the elements of both matrices are equal; otherwise returns `false'.\r\n     */\r\n    public equals (other: Mat4, epsilon = EPSILON): boolean {\r\n        const inf = Infinity;\r\n        const self = this;\r\n        const m00 = self.m00;\r\n        const m01 = self.m01;\r\n        const m02 = self.m02;\r\n        const m03 = self.m03;\r\n        const m04 = self.m04;\r\n        const m05 = self.m05;\r\n        const m06 = self.m06;\r\n        const m07 = self.m07;\r\n        const m08 = self.m08;\r\n        const m09 = self.m09;\r\n        const m10 = self.m10;\r\n        const m11 = self.m11;\r\n        const m12 = self.m12;\r\n        const m13 = self.m13;\r\n        const m14 = self.m14;\r\n        const m15 = self.m15;\r\n\r\n        const hasInf = abs(m00) === inf\r\n        || abs(m01) === inf\r\n        || abs(m02) === inf\r\n        || abs(m03) === inf\r\n        || abs(m04) === inf\r\n        || abs(m05) === inf\r\n        || abs(m06) === inf\r\n        || abs(m07) === inf\r\n        || abs(m08) === inf\r\n        || abs(m09) === inf\r\n        || abs(m10) === inf\r\n        || abs(m11) === inf\r\n        || abs(m12) === inf\r\n        || abs(m13) === inf\r\n        || abs(m14) === inf\r\n        || abs(m15) === inf;\r\n\r\n        return (!hasInf\r\n            && abs(m00 - other.m00) <= epsilon * max(1.0, abs(m00), abs(other.m00))\r\n            && abs(m01 - other.m01) <= epsilon * max(1.0, abs(m01), abs(other.m01))\r\n            && abs(m02 - other.m02) <= epsilon * max(1.0, abs(m02), abs(other.m02))\r\n            && abs(m03 - other.m03) <= epsilon * max(1.0, abs(m03), abs(other.m03))\r\n            && abs(m04 - other.m04) <= epsilon * max(1.0, abs(m04), abs(other.m04))\r\n            && abs(m05 - other.m05) <= epsilon * max(1.0, abs(m05), abs(other.m05))\r\n            && abs(m06 - other.m06) <= epsilon * max(1.0, abs(m06), abs(other.m06))\r\n            && abs(m07 - other.m07) <= epsilon * max(1.0, abs(m07), abs(other.m07))\r\n            && abs(m08 - other.m08) <= epsilon * max(1.0, abs(m08), abs(other.m08))\r\n            && abs(m09 - other.m09) <= epsilon * max(1.0, abs(m09), abs(other.m09))\r\n            && abs(m10 - other.m10) <= epsilon * max(1.0, abs(m10), abs(other.m10))\r\n            && abs(m11 - other.m11) <= epsilon * max(1.0, abs(m11), abs(other.m11))\r\n            && abs(m12 - other.m12) <= epsilon * max(1.0, abs(m12), abs(other.m12))\r\n            && abs(m13 - other.m13) <= epsilon * max(1.0, abs(m13), abs(other.m13))\r\n            && abs(m14 - other.m14) <= epsilon * max(1.0, abs(m14), abs(other.m14))\r\n            && abs(m15 - other.m15) <= epsilon * max(1.0, abs(m15), abs(other.m15))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the specified matrices are equal.\r\n     * @zh 判断当前矩阵是否与指定矩阵相等。\r\n     * @param other Comparative matrix\r\n     * @return Returns `true' when the elements of both matrices are equal; otherwise returns `false'.\r\n     */\r\n    public strictEquals (other: Mat4): boolean {\r\n        const self = this;\r\n        return self.m00 === other.m00 && self.m01 === other.m01 && self.m02 === other.m02 && self.m03 === other.m03\r\n            && self.m04 === other.m04 && self.m05 === other.m05 && self.m06 === other.m06 && self.m07 === other.m07\r\n            && self.m08 === other.m08 && self.m09 === other.m09 && self.m10 === other.m10 && self.m11 === other.m11\r\n            && self.m12 === other.m12 && self.m13 === other.m13 && self.m14 === other.m14 && self.m15 === other.m15;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a string representation of a matrix.\r\n     * @zh 返回当前矩阵的字符串表示。\r\n     * @return 当前矩阵的字符串表示。\r\n     */\r\n    public toString (): string {\r\n        const t = this;\r\n        return `[\\n${\r\n            t.m00}, ${t.m01}, ${t.m02}, ${t.m03},\\n${\r\n            t.m04}, ${t.m05}, ${t.m06}, ${t.m07},\\n${\r\n            t.m08}, ${t.m09}, ${t.m10}, ${t.m11},\\n${\r\n            t.m12}, ${t.m13}, ${t.m14}, ${t.m15}\\n`\r\n            + ']';\r\n    }\r\n\r\n    /**\r\n     * @en set the current matrix to an identity matrix.\r\n     * @zh 将当前矩阵设为单位矩阵。\r\n     * @return `this`\r\n     */\r\n    public identity (): Mat4 {\r\n        return Mat4.identity(this);\r\n    }\r\n\r\n    /**\r\n     * @en set the current matrix to an zero matrix.\r\n     * @zh 将当前矩阵设为 0矩阵。\r\n     * @return `this`\r\n     */\r\n    public zero (): Mat4 {\r\n        return Mat4.zero(this);\r\n    }\r\n\r\n    /**\r\n     * @en Transposes the current matrix.\r\n     * @zh 计算当前矩阵的转置矩阵。\r\n     */\r\n    public transpose (): Mat4 {\r\n        const self = this;\r\n        const a01 = self.m01; const a02 = self.m02; const a03 = self.m03;\r\n        const a12 = self.m06; const a13 = self.m07; const a23 = self.m11;\r\n        self.m01 = self.m04;\r\n        self.m02 = self.m08;\r\n        self.m03 = self.m12;\r\n        self.m04 = a01;\r\n        self.m06 = self.m09;\r\n        self.m07 = self.m13;\r\n        self.m08 = a02;\r\n        self.m09 = a12;\r\n        self.m11 = self.m14;\r\n        self.m12 = a03;\r\n        self.m13 = a13;\r\n        self.m14 = a23;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Inverts the current matrix. When matrix is not invertible the matrix will be set to zeros.\r\n     * @zh 计算当前矩阵的逆矩阵。注意，在矩阵不可逆时，会返回一个全为 0 的矩阵。\r\n     */\r\n    public invert (): Mat4 {\r\n        const self = this;\r\n        const a00 = self.m00; const a01 = self.m01; const a02 = self.m02; const a03 = self.m03;\r\n        const a10 = self.m04; const a11 = self.m05; const a12 = self.m06; const a13 = self.m07;\r\n        const a20 = self.m08; const a21 = self.m09; const a22 = self.m10; const a23 = self.m11;\r\n        const a30 = self.m12; const a31 = self.m13; const a32 = self.m14; const a33 = self.m15;\r\n\r\n        const b00 = a00 * a11 - a01 * a10;\r\n        const b01 = a00 * a12 - a02 * a10;\r\n        const b02 = a00 * a13 - a03 * a10;\r\n        const b03 = a01 * a12 - a02 * a11;\r\n        const b04 = a01 * a13 - a03 * a11;\r\n        const b05 = a02 * a13 - a03 * a12;\r\n        const b06 = a20 * a31 - a21 * a30;\r\n        const b07 = a20 * a32 - a22 * a30;\r\n        const b08 = a20 * a33 - a23 * a30;\r\n        const b09 = a21 * a32 - a22 * a31;\r\n        const b10 = a21 * a33 - a23 * a31;\r\n        const b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (det === 0) {\r\n            self.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n            return self;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        self.m00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        self.m01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        self.m02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        self.m03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        self.m04 = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        self.m05 = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        self.m06 = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        self.m07 = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        self.m08 = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        self.m09 = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        self.m10 = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        self.m11 = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        self.m12 = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        self.m13 = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        self.m14 = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        self.m15 = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the determinant of the current matrix.\r\n     * @zh 计算当前矩阵的行列式。\r\n     * @return 当前矩阵的行列式。\r\n     */\r\n    public determinant (): number {\r\n        const self = this;\r\n        const a00 = self.m00; const a01 = self.m01; const a02 = self.m02; const a03 = self.m03;\r\n        const a10 = self.m04; const a11 = self.m05; const a12 = self.m06; const a13 = self.m07;\r\n        const a20 = self.m08; const a21 = self.m09; const a22 = self.m10; const a23 = self.m11;\r\n        const a30 = self.m12; const a31 = self.m13; const a32 = self.m14; const a33 = self.m15;\r\n\r\n        const b00 = a00 * a11 - a01 * a10;\r\n        const b01 = a00 * a12 - a02 * a10;\r\n        const b02 = a00 * a13 - a03 * a10;\r\n        const b03 = a01 * a12 - a02 * a11;\r\n        const b04 = a01 * a13 - a03 * a11;\r\n        const b05 = a02 * a13 - a03 * a12;\r\n        const b06 = a20 * a31 - a21 * a30;\r\n        const b07 = a20 * a32 - a22 * a30;\r\n        const b08 = a20 * a33 - a23 * a30;\r\n        const b09 = a21 * a32 - a22 * a31;\r\n        const b10 = a21 * a33 - a23 * a31;\r\n        const b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current matrix and another matrix to the current matrix.\r\n     * @zh 矩阵加法。将当前矩阵与指定矩阵的相加，结果返回给当前矩阵。\r\n     * @param mat the second operand\r\n     */\r\n    public add (mat: Mat4): Mat4 {\r\n        const self = this;\r\n        self.m00 += mat.m00;\r\n        self.m01 += mat.m01;\r\n        self.m02 += mat.m02;\r\n        self.m03 += mat.m03;\r\n        self.m04 += mat.m04;\r\n        self.m05 += mat.m05;\r\n        self.m06 += mat.m06;\r\n        self.m07 += mat.m07;\r\n        self.m08 += mat.m08;\r\n        self.m09 += mat.m09;\r\n        self.m10 += mat.m10;\r\n        self.m11 += mat.m11;\r\n        self.m12 += mat.m12;\r\n        self.m13 += mat.m13;\r\n        self.m14 += mat.m14;\r\n        self.m15 += mat.m15;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts another matrix from the current matrix.\r\n     * @zh 计算矩阵减法。将当前矩阵减去指定矩阵的结果赋值给当前矩阵。\r\n     * @param mat the second operand\r\n     */\r\n    public subtract (mat: Mat4): Mat4 {\r\n        const self = this;\r\n        self.m00 -= mat.m00;\r\n        self.m01 -= mat.m01;\r\n        self.m02 -= mat.m02;\r\n        self.m03 -= mat.m03;\r\n        self.m04 -= mat.m04;\r\n        self.m05 -= mat.m05;\r\n        self.m06 -= mat.m06;\r\n        self.m07 -= mat.m07;\r\n        self.m08 -= mat.m08;\r\n        self.m09 -= mat.m09;\r\n        self.m10 -= mat.m10;\r\n        self.m11 -= mat.m11;\r\n        self.m12 -= mat.m12;\r\n        self.m13 -= mat.m13;\r\n        self.m14 -= mat.m14;\r\n        self.m15 -= mat.m15;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply the current matrix with another matrix.\r\n     * @zh 矩阵乘法。将当前矩阵左乘指定矩阵的结果赋值给当前矩阵。\r\n     * @param mat the second operand\r\n     */\r\n    public multiply (mat: Mat4): Mat4 {\r\n        return Mat4.multiply(this, this, mat);\r\n    }\r\n\r\n    /**\r\n     * @en Multiply each element of the current matrix by a scalar number.\r\n     * @zh 矩阵数乘。将当前矩阵与指定标量的数乘结果赋值给当前矩阵。\r\n     * @param scalar amount to scale the matrix's elements by\r\n     */\r\n    public multiplyScalar (scalar: number): Mat4 {\r\n        const self = this;\r\n        self.m00 *= scalar;\r\n        self.m01 *= scalar;\r\n        self.m02 *= scalar;\r\n        self.m03 *= scalar;\r\n        self.m04 *= scalar;\r\n        self.m05 *= scalar;\r\n        self.m06 *= scalar;\r\n        self.m07 *= scalar;\r\n        self.m08 *= scalar;\r\n        self.m09 *= scalar;\r\n        self.m10 *= scalar;\r\n        self.m11 *= scalar;\r\n        self.m12 *= scalar;\r\n        self.m13 *= scalar;\r\n        self.m14 *= scalar;\r\n        self.m15 *= scalar;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Translate the current matrix by the given vector\r\n     * @zh 将当前矩阵左乘位移矩阵的结果赋值给当前矩阵，位移矩阵由各个轴的位移给出。\r\n     * @param vec vector to translate by\r\n     *\r\n     * @deprecated since v3.0, please use [[transform]] instead\r\n     */\r\n    public translate (vec: Vec3): Mat4 {\r\n        this.m12 += vec.x;\r\n        this.m13 += vec.y;\r\n        this.m14 += vec.z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Translate the current matrix by the given vector\r\n     * @zh 将当前矩阵左乘位移矩阵的结果赋值给当前矩阵，位移矩阵由各个轴的位移给出。\r\n     * @param vec vector to translate by\r\n     */\r\n    public transform (vec: Vec3): Mat4 {\r\n        const { x, y, z } = vec;\r\n        const self = this;\r\n        const a00 = self.m00; const a01 = self.m01; const a02 = self.m02; const a03 = self.m03;\r\n        const a10 = self.m04; const a11 = self.m05; const a12 = self.m06; const a13 = self.m07;\r\n        const a20 = self.m08; const a21 = self.m09; const a22 = self.m10; const a23 = self.m11;\r\n\r\n        self.m12 = a00 * x + a10 * y + a20 * z + self.m12;\r\n        self.m13 = a01 * x + a11 * y + a21 * z + self.m13;\r\n        self.m14 = a02 * x + a12 * y + a22 * z + self.m14;\r\n        self.m15 = a03 * x + a13 * y + a23 * z + self.m15;\r\n\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply the current matrix with a scale vector.\r\n     * @zh 将当前矩阵左乘缩放矩阵的结果赋值给当前矩阵，缩放矩阵由各个轴的缩放给出。\r\n     * @param vec vector to scale by\r\n     */\r\n    public scale (vec: Vec3): Mat4 {\r\n        const { x, y, z } = vec;\r\n        const self = this;\r\n        self.m00 *= x;\r\n        self.m01 *= x;\r\n        self.m02 *= x;\r\n        self.m03 *= x;\r\n        self.m04 *= y;\r\n        self.m05 *= y;\r\n        self.m06 *= y;\r\n        self.m07 *= y;\r\n        self.m08 *= z;\r\n        self.m09 *= z;\r\n        self.m10 *= z;\r\n        self.m11 *= z;\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the current matrix by the given angle around the given axis\r\n     * @zh 将当前矩阵左乘旋转矩阵的结果赋值给当前矩阵，旋转矩阵由旋转轴和旋转角度给出。\r\n     * @param rad Angle of rotation (in radians)\r\n     * @param axis Axis of rotation\r\n     */\r\n    public rotate (rad: number, axis: Vec3): Mat4 | null {\r\n        let x = axis.x; let y = axis.y; let z = axis.z;\r\n\r\n        let len = sqrt(x * x + y * y + z * z);\r\n\r\n        if (abs(len) < EPSILON) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        const s = sin(rad);\r\n        const c = cos(rad);\r\n        const t = 1 - c;\r\n\r\n        const self = this;\r\n        const a00 = self.m00; const a01 = self.m01; const a02 = self.m02; const a03 = self.m03;\r\n        const a10 = self.m04; const a11 = self.m05; const a12 = self.m06; const a13 = self.m07;\r\n        const a20 = self.m08; const a21 = self.m09; const a22 = self.m10; const a23 = self.m11;\r\n\r\n        // Construct the elements of the rotation matrix\r\n        const b00 = x * x * t + c; const b01 = y * x * t + z * s; const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s; const b11 = y * y * t + c; const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s; const b21 = y * z * t - x * s; const b22 = z * z * t + c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        self.m00 = a00 * b00 + a10 * b01 + a20 * b02;\r\n        self.m01 = a01 * b00 + a11 * b01 + a21 * b02;\r\n        self.m02 = a02 * b00 + a12 * b01 + a22 * b02;\r\n        self.m03 = a03 * b00 + a13 * b01 + a23 * b02;\r\n        self.m04 = a00 * b10 + a10 * b11 + a20 * b12;\r\n        self.m05 = a01 * b10 + a11 * b11 + a21 * b12;\r\n        self.m06 = a02 * b10 + a12 * b11 + a22 * b12;\r\n        self.m07 = a03 * b10 + a13 * b11 + a23 * b12;\r\n        self.m08 = a00 * b20 + a10 * b21 + a20 * b22;\r\n        self.m09 = a01 * b20 + a11 * b21 + a21 * b22;\r\n        self.m10 = a02 * b20 + a12 * b21 + a22 * b22;\r\n        self.m11 = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the translation vector component of a transformation matrix.\r\n     * @zh 从当前矩阵中计算出位移变换的部分，并以各个轴上位移的形式赋值给输出向量。\r\n     * @param out Vector to receive translation component.\r\n     */\r\n    public getTranslation (out: Vec3): Vec3 {\r\n        out.x = this.m12;\r\n        out.y = this.m13;\r\n        out.z = this.m14;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the scale factor component of a transformation matrix\r\n     * @zh 从当前矩阵中计算出缩放变换的部分，并以各个轴上缩放的形式赋值给输出向量。\r\n     * @param out Vector to receive scale component\r\n     */\r\n    public getScale (out: Vec3): Vec3 {\r\n        const self = this;\r\n        const m00 = m3_1.m00 = self.m00;\r\n        const m01 = m3_1.m01 = self.m01;\r\n        const m02 = m3_1.m02 = self.m02;\r\n        const m04 = m3_1.m03 = self.m04;\r\n        const m05 = m3_1.m04 = self.m05;\r\n        const m06 = m3_1.m05 = self.m06;\r\n        const m08 = m3_1.m06 = self.m08;\r\n        const m09 = m3_1.m07 = self.m09;\r\n        const m10 = m3_1.m08 = self.m10;\r\n        out.x = sqrt(m00 * m00 + m01 * m01 + m02 * m02);\r\n        out.y = sqrt(m04 * m04 + m05 * m05 + m06 * m06);\r\n        out.z = sqrt(m08 * m08 + m09 * m09 + m10 * m10);\r\n        // account for reflections\r\n        if (Mat3.determinant(m3_1) < 0) { out.x *= -1; }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the rotation factor component of a transformation matrix\r\n     * @zh 从当前矩阵中计算出旋转变换的部分，并以四元数的形式赋值给输出四元数。\r\n     * @param out Vector to receive rotation component\r\n     */\r\n    public getRotation (out: Quat): Quat {\r\n        const self = this;\r\n        // Extract rotation matrix first\r\n        const sx = Vec3.set(v3_1, self.m00, self.m01, self.m02).length();\r\n        const sy = Vec3.set(v3_1, self.m04, self.m05, self.m06).length();\r\n        const sz = Vec3.set(v3_1, self.m08, self.m09, self.m10).length();\r\n        m3_1.m00 = self.m00 / sx;\r\n        m3_1.m01 = self.m01 / sx;\r\n        m3_1.m02 = self.m02 / sx;\r\n        m3_1.m03 = self.m04 / sy;\r\n        m3_1.m04 = self.m05 / sy;\r\n        m3_1.m05 = self.m06 / sy;\r\n        m3_1.m06 = self.m08 / sz;\r\n        m3_1.m07 = self.m09 / sz;\r\n        m3_1.m08 = self.m10 / sz;\r\n        const det = Mat3.determinant(m3_1);\r\n        if (det < 0) {\r\n            m3_1.m00 *= -1;\r\n            m3_1.m01 *= -1;\r\n            m3_1.m02 *= -1;\r\n        }\r\n\r\n        return Quat.fromMat3(out, m3_1);\r\n    }\r\n\r\n    /**\r\n     * @en Resets the matrix values by the given rotation quaternion, translation vector and scale vector\r\n     * @zh 重置当前矩阵的值，使其表示指定的旋转、缩放、位移依次组合的变换。\r\n     * @param q Rotation quaternion\r\n     * @param v Translation vector\r\n     * @param s Scaling vector\r\n     * @return `this`\r\n     *\r\n     * @deprecated Since 3.8.0, please use [[fromSRT]] instead\r\n     */\r\n    public fromRTS (q: Quat, v: Vec3, s: Vec3): Mat4 {\r\n        return Mat4.fromSRT(this, q, v, s);\r\n    }\r\n\r\n    /**\r\n     * @en Resets the matrix values by the given rotation quaternion, translation vector and scale vector\r\n     * @zh 重置当前矩阵的值，使其表示指定的旋转、缩放、位移依次组合的变换。\r\n     * @param q Rotation quaternion\r\n     * @param v Translation vector\r\n     * @param s Scaling vector\r\n     * @return `this`\r\n     */\r\n    public fromSRT (q: Quat, v: Vec3, s: Vec3): Mat4 {\r\n        return Mat4.fromSRT(this, q, v, s);\r\n    }\r\n\r\n    /**\r\n     * @en Resets the current matrix from the given quaternion.\r\n     * @zh 重置当前矩阵的值，使其表示指定四元数表示的旋转变换。\r\n     * @param q Rotation quaternion\r\n     * @return `this`\r\n     */\r\n    public fromQuat (q: Quat): Mat4 {\r\n        return Mat4.fromQuat(this, q);\r\n    }\r\n}\r\n\r\nconst v3_1 = new Vec3();\r\nconst m3_1 = new Mat3();\r\n\r\nCCClass.fastDefine('cc.Mat4', Mat4, {\r\n    m00: 1,\r\n    m01: 0,\r\n    m02: 0,\r\n    m03: 0,\r\n    m04: 0,\r\n    m05: 1,\r\n    m06: 0,\r\n    m07: 0,\r\n    m08: 0,\r\n    m09: 0,\r\n    m10: 1,\r\n    m11: 0,\r\n    m12: 0,\r\n    m13: 0,\r\n    m14: 0,\r\n    m15: 1,\r\n});\r\nlegacyCC.Mat4 = Mat4;\r\n\r\nexport function mat4(other: Mat4): Mat4;\r\nexport function mat4(\r\n    m00?: number, m01?: number, m02?: number, m03?: number,\r\n    m10?: number, m11?: number, m12?: number, m13?: number,\r\n    m20?: number, m21?: number, m22?: number, m23?: number,\r\n    m30?: number, m31?: number, m32?: number, m33?: number): Mat4;\r\n\r\nexport function mat4 (\r\n    m00?: Mat4 | number, m01?: number, m02?: number, m03?: number,\r\n    m10?: number, m11?: number, m12?: number, m13?: number,\r\n    m20?: number, m21?: number, m22?: number, m23?: number,\r\n    m30?: number, m31?: number, m32?: number, m33?: number,\r\n): Mat4 {\r\n    return new Mat4(m00 as number, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\r\n}\r\n\r\nlegacyCC.mat4 = mat4;\r\n","/* eslint-disable @typescript-eslint/no-this-alias */\r\n/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { Mat4 } from './mat4';\r\nimport { IMat3Like, IMat4Like, IVec2Like } from './type-define';\r\nimport { clamp, EPSILON, random } from './utils';\r\n\r\nimport { Vec3 } from './vec3';\r\nimport { legacyCC } from '../global-exports';\r\nimport { warnID } from '../platform/debug';\r\n\r\nconst abs = Math.abs;\r\nconst max = Math.max;\r\nconst min = Math.min;\r\nconst PI = Math.PI;\r\nconst acos = Math.acos;\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst sqrt = Math.sqrt;\r\nconst atan2 = Math.atan2;\r\nconst ceil = Math.ceil;\r\nconst floor = Math.floor;\r\nconst round = Math.round;\r\n\r\nfunction freezeVec2 (x: number, y: number): Readonly<Vec2> {\r\n    return Object.freeze(new Vec2(x, y));\r\n}\r\n\r\n/**\r\n * @en Representation of 2D vectors and points.\r\n * @zh 二维向量。\r\n */\r\nexport class Vec2 extends ValueType {\r\n    public static ZERO = freezeVec2(0, 0);\r\n    public static ONE = freezeVec2(1, 1);\r\n    public static NEG_ONE = freezeVec2(-1, -1);\r\n    public static UNIT_X = freezeVec2(1, 0);\r\n    public static UNIT_Y = freezeVec2(0, 1);\r\n\r\n    /**\r\n     * @en Obtains a clone of the given vector object\r\n     * @zh 获得指定向量的拷贝\r\n     */\r\n    public static clone <Out extends IVec2Like> (a: Out): Vec2 {\r\n        return new Vec2(a.x, a.y);\r\n    }\r\n\r\n    /**\r\n     * @en Copy the target vector and save the results to out vector object\r\n     * @zh 复制目标向量\r\n     */\r\n    public static copy <Out extends IVec2Like> (out: Out, a: Out): Out {\r\n        out.x = a.x;\r\n        out.y = a.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the out vector with the given x and y values\r\n     * @zh 设置向量值\r\n     */\r\n    public static set <Out extends IVec2Like> (out: Out, x: number, y: number): Out {\r\n        out.x = x;\r\n        out.y = y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector addition and save the results to out vector object\r\n     * @zh 逐元素向量加法\r\n     */\r\n    public static add <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector subtraction and save the results to out vector object\r\n     * @zh 逐元素向量减法\r\n     */\r\n    public static subtract <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector multiplication and save the results to out vector object\r\n     * @zh 逐元素向量乘法\r\n     */\r\n    public static multiply <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise vector division and save the results to out vector object\r\n     * @zh 逐元素向量除法\r\n     */\r\n    public static divide <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = a.x / b.x;\r\n        out.y = a.y / b.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Rounds up by elements of the vector and save the results to out vector object\r\n     * @zh 逐元素向量向上取整\r\n     */\r\n    public static ceil <Out extends IVec2Like> (out: Out, a: Out): Out {\r\n        out.x = ceil(a.x);\r\n        out.y = ceil(a.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise rounds down of the current vector and save the results to the out vector\r\n     * @zh 逐元素向量向下取整\r\n     */\r\n    public static floor <Out extends IVec2Like> (out: Out, a: Out): Out {\r\n        out.x = floor(a.x);\r\n        out.y = floor(a.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates element-wise minimum values and save to the out vector\r\n     * @zh 逐元素向量最小值\r\n     */\r\n    public static min <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = min(a.x, b.x);\r\n        out.y = min(a.y, b.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates element-wise maximum values and save to the out vector\r\n     * @zh 逐元素向量最大值\r\n     */\r\n    public static max <Out extends IVec2Like> (out: Out, a: Out, b: Out): Out {\r\n        out.x = max(a.x, b.x);\r\n        out.y = max(a.y, b.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates element-wise round results and save to the out vector\r\n     * @zh 逐元素向量四舍五入取整\r\n     */\r\n    public static round <Out extends IVec2Like> (out: Out, a: Out): Out {\r\n        out.x = round(a.x);\r\n        out.y = round(a.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector scalar multiplication and save the results to out vector object\r\n     * @zh 向量标量乘法\r\n     */\r\n    public static multiplyScalar <Out extends IVec2Like> (out: Out, a: Out, b: number): Out {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wise multiplication and addition with the equation: a + b * scale\r\n     * @zh 逐元素向量乘加: A + B * scale\r\n     */\r\n    public static scaleAndAdd <Out extends IVec2Like> (out: Out, a: Out, b: Out, scale: number): Out {\r\n        out.x = a.x + (b.x * scale);\r\n        out.y = a.y + (b.y * scale);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the euclidean distance of two vectors\r\n     * @zh 求两向量的欧氏距离\r\n     */\r\n    public static distance <Out extends IVec2Like> (a: Out, b: Out): number {\r\n        const x = b.x - a.x;\r\n        const y = b.y - a.y;\r\n        return sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared euclidean distance of two vectors\r\n     * @zh 求两向量的欧氏距离平方\r\n     */\r\n    public static squaredDistance <Out extends IVec2Like> (a: Out, b: Out): number {\r\n        const x = b.x - a.x;\r\n        const y = b.y - a.y;\r\n        return x * x + y * y;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the vector\r\n     * @zh 求向量长度\r\n     */\r\n    public static len <Out extends IVec2Like> (a: Out): number {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        return sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the vector\r\n     * @zh 求向量长度平方\r\n     */\r\n    public static lengthSqr <Out extends IVec2Like> (a: Out): number {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        return x * x + y * y;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its negative value\r\n     * @zh 逐元素向量取负\r\n     */\r\n    public static negate <Out extends IVec2Like> (out: Out, a: Out): Out {\r\n        out.x = -a.x;\r\n        out.y = -a.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its inverse value, zero value will become Infinity\r\n     * @zh 逐元素向量取倒数，接近 0 时返回 Infinity\r\n     */\r\n    public static inverse <Out extends IVec2Like> (out: Out, a: Out): Out {\r\n        out.x = 1.0 / a.x;\r\n        out.y = 1.0 / a.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each element to its inverse value, zero value will remain zero\r\n     * @zh 逐元素向量取倒数，接近 0 时返回 0\r\n     */\r\n    public static inverseSafe <Out extends IVec2Like> (out: Out, a: Out): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n\r\n        if (abs(x) < EPSILON) {\r\n            out.x = 0;\r\n        } else {\r\n            out.x = 1.0 / x;\r\n        }\r\n\r\n        if (abs(y) < EPSILON) {\r\n            out.y = 0;\r\n        } else {\r\n            out.y = 1.0 / y;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the normalized vector to the out vector, returns a zero vector if input is a zero vector.\r\n     * @zh 归一化向量，输入零向量将会返回零向量。\r\n     */\r\n    public static normalize <Out extends IVec2Like, Vec2Like extends IVec2Like> (out: Out, a: Vec2Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        let len = x * x + y * y;\r\n        if (len > 0) {\r\n            len = 1 / sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n        } else {\r\n            out.x = 0;\r\n            out.y = 0;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product of the vector\r\n     * @zh 向量点积（数量积）\r\n     */\r\n    public static dot <Out extends IVec2Like> (a: Out, b: Out): number {\r\n        return a.x * b.x + a.y * b.y;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the cross product of the vector\r\n     * @zh 向量叉积（向量积），注意二维向量的叉积为与 Z 轴平行的三维向量\r\n     * @override (a:Vec2, b:Vec2) => number\r\n     * @override [deprecated] (out:Vec3, a:Vec2, b:Vec2) => Vec3\r\n     */\r\n    public static cross (a: IVec2Like, b: IVec2Like): number;\r\n\r\n    /**\r\n     * @deprecated Consider use another overrides please.\r\n     */\r\n    public static cross <Out extends IVec2Like> (out: Vec3, a: Out, b: Out): Vec3;\r\n\r\n    public static cross (out: IVec2Like | Vec3, a: IVec2Like, b?: IVec2Like): number | Vec3 {\r\n        if (out instanceof Vec3) {\r\n            out.x = out.y = 0;\r\n            out.z = a.x * b!.y - a.y * b!.x;\r\n            return out;\r\n        } else {\r\n            return out.x * a.y - out.y * a.x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the linear interpolation between two vectors with a given ratio: A + t * (B - A)\r\n     * @zh 逐元素向量线性插值： A + t * (B - A)\r\n     */\r\n    public static lerp <Out extends IVec2Like> (out: Out, a: Out, b: Out, t: number): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        out.x = x + t * (b.x - x);\r\n        out.y = y + t * (b.y - y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Generates a uniformly distributed random vector points from center to the surface of the unit sphere\r\n     * @zh 生成一个在单位圆上均匀分布的随机向量\r\n     * @param scale vector length\r\n     */\r\n    public static random <Out extends IVec2Like> (out: Out, scale?: number): Out {\r\n        scale = scale || 1.0;\r\n        const r = random() * 2.0 * PI;\r\n        out.x = cos(r) * scale;\r\n        out.y = sin(r) * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector and third order matrix multiplication, will complete the vector with a third value as one\r\n     * @zh 向量与三维矩阵乘法，默认向量第三位为 1。\r\n     */\r\n    public static transformMat3 <Out extends IVec2Like, MatLike extends IMat3Like> (out: Out, a: Out, m: IMat3Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        out.x = m.m00 * x + m.m03 * y + m.m06;\r\n        out.y = m.m01 * x + m.m04 * y + m.m07;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Vector and third order matrix multiplication, will complete the vector with a third and a fourth element as one\r\n     * @zh 向量与四维矩阵乘法，默认向量第三位为 0，第四位为 1。\r\n     */\r\n    public static transformMat4 <Out extends IVec2Like, MatLike extends IMat4Like> (out: Out, a: Out, m: IMat4Like): Out {\r\n        const x = a.x;\r\n        const y = a.y;\r\n        out.x = m.m00 * x + m.m04 * y + m.m12;\r\n        out.y = m.m01 * x + m.m05 * y + m.m13;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the string representation of the given vector\r\n     * @zh 返回向量的字符串表示\r\n     */\r\n    public static str <Out extends IVec2Like> (a: Out): string {\r\n        return `Vec2(${a.x}, ${a.y})`;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the given vector to an array\r\n     * @zh 向量转数组\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static toArray <Out extends IWritableArrayLike<number>> (out: Out, v: IVec2Like, ofs = 0): Out {\r\n        out[ofs + 0] = v.x;\r\n        out[ofs + 1] = v.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the given array to a vector\r\n     * @zh 数组转向量\r\n     * @param ofs Array Start Offset\r\n     */\r\n    public static fromArray <Out extends IVec2Like> (out: Out, arr: IWritableArrayLike<number>, ofs = 0): Out {\r\n        out.x = arr[ofs + 0];\r\n        out.y = arr[ofs + 1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Check the equality of the two given vectors\r\n     * @zh 向量等价判断\r\n     */\r\n    public static strictEquals <Out extends IVec2Like> (a: Out, b: Out): boolean {\r\n        return a.x === b.x && a.y === b.y;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the two given vectors are approximately equivalent\r\n     * @zh 排除浮点数误差的向量近似等价判断\r\n     */\r\n    public static equals <Out extends IVec2Like> (a: Out, b: Out,  epsilon = EPSILON): boolean {\r\n        return (\r\n            abs(a.x - b.x) <= epsilon * max(1.0, abs(a.x), abs(b.x))\r\n            && abs(a.y - b.y) <= epsilon * max(1.0, abs(a.y), abs(b.y))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the radian angle between two vectors, returns zero if either vector is a zero vector.\r\n     * @zh 求两向量夹角弧度，任意一个向量是零向量则返回零。\r\n     */\r\n    public static angle <Out extends IVec2Like> (a: Out, b: Out): number {\r\n        const magSqr1 = a.x * a.x + a.y * a.y;\r\n        const magSqr2 = b.x * b.x + b.y * b.y;\r\n\r\n        if (magSqr1 === 0 || magSqr2 === 0) {\r\n            return 0.0;\r\n        }\r\n\r\n        const dot = a.x * b.x + a.y * b.y;\r\n        let cosine = dot / (sqrt(magSqr1 * magSqr2));\r\n        cosine = clamp(cosine, -1.0, 1.0);\r\n        return acos(cosine);\r\n    }\r\n\r\n    /**\r\n     * @en x component.\r\n     * @zh x 分量。\r\n     */\r\n    public declare x: number;\r\n\r\n    /**\r\n     * @en y component.\r\n     * @zh y 分量。\r\n     */\r\n    public declare y: number;\r\n\r\n    constructor (other: Vec2);\r\n\r\n    constructor (x?: number, y?: number);\r\n\r\n    constructor (x?: number | Vec2, y?: number) {\r\n        super();\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en clone a Vec2 value\r\n     * @zh 克隆当前向量。\r\n     */\r\n    public clone (): Vec2 {\r\n        return new Vec2(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * @en Set the current vector value with the given vector.\r\n     * @zh 设置当前向量使其与指定向量相等。\r\n     * @param other Specified vector\r\n     * @return `this`\r\n     */\r\n    public set (other: Vec2): Vec2;\r\n\r\n    /**\r\n     * @en Set the value of each component of the current vector.\r\n     * @zh 设置当前向量的具体分量值。\r\n     * @param x x value\r\n     * @param y y value\r\n     * @return `this`\r\n     */\r\n    public set (x?: number, y?: number): Vec2;\r\n\r\n    public set (x?: number | Vec2, y?: number): Vec2 {\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the vector approximately equals another one.\r\n     * @zh 判断当前向量是否在误差范围内与指定向量相等。\r\n     * @param other Specified vector\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @return Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public equals (other: Vec2, epsilon = EPSILON): boolean {\r\n        return Vec2.equals(this, other, epsilon);\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the vector approximately equals another one.\r\n     * @zh 判断当前向量是否在误差范围内与指定分量的向量相等。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @param epsilon The error allowed. It`s should be a non-negative number.\r\n     * @return Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public equals2f (x: number, y: number, epsilon = EPSILON): boolean {\r\n        return (\r\n            abs(this.x - x) <= epsilon * max(1.0, abs(this.x), abs(x))\r\n                && abs(this.y - y) <= epsilon * max(1.0, abs(this.y), abs(y))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current vector strictly equals another Vec2.\r\n     * @zh 判断当前向量是否与指定向量相等。\r\n     * @param other specified vector\r\n     * @return Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public strictEquals (other: Vec2): boolean {\r\n        return other && this.x === other.x && this.y === other.y;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current vector strictly equals another Vec2.\r\n     * @zh 判断当前向量是否与指定分量的向量相等。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     * @return Returns `true` when the components of both vectors are equal within the specified range of error; otherwise it returns `false`.\r\n     */\r\n    public strictEquals2f (x: number, y: number): boolean {\r\n        return this.x === x && this.y === y;\r\n    }\r\n\r\n    /**\r\n     * @en Transform to string with vector information.\r\n     * @zh 返回当前向量的字符串表示。\r\n     * @returns The string with vector information\r\n     */\r\n    public toString (): string {\r\n        return `(${this.x}, ${this.y})`;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate linear interpolation result between this vector and another one with given ratio.\r\n     * @zh 根据指定的插值比率，从当前向量到目标向量之间做插值。\r\n     * @param to Target vector\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     */\r\n    public lerp (to: Vec2, ratio: number): Vec2 {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        this.x = x + ratio * (to.x - x);\r\n        this.y = y + ratio * (to.y - y);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Clamp the vector between minInclusive and maxInclusive.\r\n     * @zh 设置当前向量的值，使其各个分量都处于指定的范围内。\r\n     * @param minInclusive Minimum value allowed\r\n     * @param maxInclusive Maximum value allowed\r\n     * @return `this`\r\n     */\r\n    public clampf (minInclusive: Vec2, maxInclusive: Vec2): Vec2 {\r\n        this.x = clamp(this.x, minInclusive.x, maxInclusive.x);\r\n        this.y = clamp(this.y, minInclusive.y, maxInclusive.y);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current vector with another one and return this\r\n     * @zh 向量加法。将当前向量与指定向量的相加\r\n     * @param other specified vector\r\n     */\r\n    public add (other: Vec2): Vec2 {\r\n        this.x += other.x;\r\n        this.y += other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Adds the current vector with another one and return this\r\n     * @zh 向量加法。将当前向量与指定分量的向量相加\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     */\r\n    public add2f (x: number, y: number): Vec2 {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts one vector from this, and returns this.\r\n     * @zh 向量减法。将当前向量减去指定向量\r\n     * @param other specified vector\r\n     */\r\n    public subtract (other: Vec2): Vec2 {\r\n        this.x -= other.x;\r\n        this.y -= other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts one vector from this, and returns this.\r\n     * @zh 向量减法。将当前向量减去指定分量的向量\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     */\r\n    public subtract2f (x: number, y: number): Vec2 {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with a number, and returns this.\r\n     * @zh 向量数乘。将当前向量数乘指定标量\r\n     * @param scalar scalar number\r\n     */\r\n    public multiplyScalar (scalar: number): Vec2 {\r\n        if (typeof scalar === 'object') {\r\n            warnID(16359);\r\n        }\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with another one and return this\r\n     * @zh 向量乘法。将当前向量乘以与指定向量的结果赋值给当前向量。\r\n     * @param other specified vector\r\n     */\r\n    public multiply (other: Vec2): Vec2 {\r\n        if (typeof other !== 'object') {\r\n            warnID(16360);\r\n        }\r\n        this.x *= other.x;\r\n        this.y *= other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the current vector with another one and return this\r\n     * @zh 向量乘法。将当前向量与指定分量的向量相乘的结果赋值给当前向量。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     */\r\n    public multiply2f (x: number, y: number): Vec2 {\r\n        this.x *= x;\r\n        this.y *= y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wisely divides this vector with another one, and return this.\r\n     * @zh 向量逐元素相除。将当前向量与指定分量的向量相除的结果赋值给当前向量。\r\n     * @param other specified vector\r\n     */\r\n    public divide (other: Vec2): Vec2 {\r\n        this.x /= other.x;\r\n        this.y /= other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Element-wisely divides this vector with another one, and return this.\r\n     * @zh 向量逐元素相除。将当前向量与指定分量的向量相除的结果赋值给当前向量。\r\n     * @param x The x value of specified vector\r\n     * @param y The y value of specified vector\r\n     */\r\n    public divide2f (x: number, y: number): Vec2 {\r\n        this.x /= x;\r\n        this.y /= y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Sets each component of this vector with its negative value\r\n     * @zh 将当前向量的各个分量取反\r\n     */\r\n    public negative (): Vec2 {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product with another vector\r\n     * @zh 向量点乘。\r\n     * @param other specified vector\r\n     * @return The result of calculates the dot product with another vector\r\n     */\r\n    public dot (other: Vec2): number {\r\n        return this.x * other.x + this.y * other.y;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the cross product with another vector.\r\n     * @zh 向量叉乘。\r\n     * @param other specified vector\r\n     * @return `out`\r\n     */\r\n    public cross (other: Vec2): number {\r\n        return this.x * other.y - this.y * other.x;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the length of this vector.\r\n     * @zh 计算向量的长度（模）。\r\n     * @return Length of vector\r\n     */\r\n    public length (): number {\r\n        return sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the squared length of this vector.\r\n     * @zh 计算向量长度（模）的平方。\r\n     * @return the squared length of this vector\r\n     */\r\n    public lengthSqr (): number {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n\r\n    /**\r\n     * @en Normalize the current vector.\r\n     * @zh 将当前向量归一化。\r\n     */\r\n    public normalize (): Vec2 {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        let len = x * x + y * y;\r\n        if (len > 0) {\r\n            len = 1 / sqrt(len);\r\n            self.x *= len;\r\n            self.y *= len;\r\n        }\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates radian angle between two vectors, returns zero if either vector is a zero vector.\r\n     * @zh 获取当前向量和指定向量之间的弧度，任意一个向量是零向量则返回零。\r\n     * @param other specified vector.\r\n     * @return The angle between the current vector and the specified vector.\r\n     */\r\n    public angle (other: Vec2): number {\r\n        const magSqr1 = this.lengthSqr();\r\n        const magSqr2 = other.lengthSqr();\r\n\r\n        if (magSqr1 === 0 || magSqr2 === 0) {\r\n            return 0.0;\r\n        }\r\n\r\n        const dot = this.dot(other);\r\n        let cosine = dot / (sqrt(magSqr1 * magSqr2));\r\n        cosine = clamp(cosine, -1.0, 1.0);\r\n        return acos(cosine);\r\n    }\r\n\r\n    /**\r\n     * @en Get angle in radian between this and vector with direction.\r\n     * @zh 获取当前向量和指定向量之间的有符号弧度。<br/>\r\n     * 有符号弧度的取值范围为 (-PI, PI]，当前向量可以通过逆时针旋转有符号角度与指定向量同向。<br/>\r\n     * @param other specified vector\r\n     * @return The signed angle between the current vector and the specified vector (in radians);\r\n     * if there is a zero vector in the current vector and the specified vector, 0 is returned.\r\n     */\r\n    public signAngle (other: Vec2): number {\r\n        // θ = atan(tan(θ))\r\n        //   = atan(sin(θ) / cos(θ))\r\n        //   = atan2(sin(θ), cos(θ))\r\n        //   = atan2(|a|·|b|·sin(θ), |a|·|b|·cos(θ))\r\n        //   = atan2(cross(a, b), dot(a, b))\r\n        const cross = this.cross(other);\r\n        const dot = this.dot(other);\r\n        return atan2(cross, dot);\r\n    }\r\n\r\n    /**\r\n     * @en Rotates the current vector by an angle in radian value. Counterclockwise is the positive direction.\r\n     * @zh 将当前向量进行旋转，逆时针为正方向。\r\n     * @param radians radians of rotation.\r\n     */\r\n    public rotate (radians: number): Vec2 {\r\n        const x = this.x;\r\n        const y = this.y;\r\n\r\n        const s = sin(radians);\r\n        const c = cos(radians);\r\n        this.x = c * x - s * y;\r\n        this.y = s * x + c * y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Projects the current vector on another one\r\n     * @zh 计算当前向量在指定向量上的投影向量。\r\n     * @param other specified vector\r\n     */\r\n    public project (other: Vec2): Vec2 {\r\n        const scalar = this.dot(other) / other.dot(other);\r\n        this.x = other.x * scalar;\r\n        this.y = other.y * scalar;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Transforms the vec2 with a mat4. 3rd vector component is implicitly '0', 4th vector component is implicitly '1'\r\n     * @zh 将当前向量视为 z 分量为 0、w 分量为 1 的四维向量，<br/>\r\n     * 应用四维矩阵变换到当前矩阵<br/>\r\n     * @param matrix matrix to transform with\r\n     */\r\n    public transformMat4 (matrix: Mat4): Vec2 {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        this.x = matrix.m00 * x + matrix.m04 * y + matrix.m12;\r\n        this.y = matrix.m01 * x + matrix.m05 * y + matrix.m13;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the current Vec2 object to a Vec3 object by adding a z-component of 0.\r\n     * @zh 将当前的Vec2对象转换为一个z分量为0的Vec3对象。\r\n     * @returns Vec3 @en A new Vec3 object created from the current Vec2 object with z-component set to 0.\r\n     * @zh 从当前的Vec2对象创建一个新的Vec3对象，其中z分量设置为0。\r\n     */\r\n    public toVec3 (): Vec3 {\r\n        return new Vec3(this.x, this.y, 0);\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.Vec2', Vec2, { x: 0, y: 0 });\r\nlegacyCC.Vec2 = Vec2;\r\n\r\nexport function v2 (other: Vec2): Vec2;\r\nexport function v2 (x?: number, y?: number): Vec2;\r\n\r\nexport function v2 (x?: number | Vec2, y?: number): Vec2 {\r\n    return new Vec2(x as number, y);\r\n}\r\n\r\nlegacyCC.v2 = v2;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n http://www.cocos.com\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { NATIVE } from 'internal:constants';\r\nimport { Mat4 } from './mat4';\r\nimport { Mat3 } from './mat3';\r\nimport { Vec3 } from './vec3';\r\nimport { Vec2 } from './vec2';\r\nimport { Vec4 } from './vec4';\r\nimport { Quat } from './quat';\r\nimport { Color } from './color';\r\n\r\nexport enum MathType {\r\n    VEC2 = 0,\r\n    VEC3,\r\n    VEC4,\r\n    QUATERNION,\r\n    MAT3,\r\n    MAT4,\r\n    SIZE,\r\n    RECT,\r\n    COLOR,\r\n}\r\n\r\nif (NATIVE) {\r\n    const defineAttr = (proto: any, name: string, offset: number): void => {\r\n        Object.defineProperty(proto, name, {\r\n            configurable: true,\r\n            enumerable: true,\r\n            get (): any {\r\n                return this._data()[offset];\r\n            },\r\n            set (v: number): void {\r\n                this._data()[offset] = v;\r\n            },\r\n        });\r\n    };\r\n\r\n    const extendType = (proto: any, parentProto: any, typ: MathType): void => {\r\n        proto._data = function _data (): Float32Array {\r\n            if (!this.__data) {\r\n                this.__data = new Float32Array(this.underlyingData() as ArrayBuffer); // underlyingData is a JSB method.\r\n            }\r\n            return this.__data as Float32Array;\r\n        };\r\n        Object.setPrototypeOf(proto, parentProto as object);\r\n        Object.defineProperty(proto, 'type', { configurable: true, enumerable: true, writable: false, value: typ });\r\n    };\r\n\r\n    const inheritCCClass = (ctor: Constructor, parentCtor: Constructor): void => {\r\n        for (const attrName of ['__cid__', '__classname__']) {\r\n            Object.defineProperty(ctor.prototype, attrName, {\r\n                value: parentCtor.prototype[attrName],\r\n                writable: false,\r\n                enumerable: false,\r\n                configurable: true,\r\n            });\r\n        }\r\n        for (const staticKey of ['__attrs__', '__props__', '__values__']) {\r\n            ctor[staticKey] = parentCtor[staticKey];\r\n        }\r\n    };\r\n\r\n    extendType(jsb.Mat4.prototype, Mat4.prototype, MathType.MAT4);\r\n\r\n    for (let i = 0; i < 16; i++) {\r\n        const numb = `0${i}`;\r\n        defineAttr(jsb.Mat4.prototype, `m${numb.substring(numb.length - 2)}`, i);\r\n    }\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        const numb = `0${i}`;\r\n        defineAttr(jsb.Mat3.prototype, `m${numb.substring(numb.length - 2)}`, i);\r\n    }\r\n    extendType(jsb.Mat3.prototype, Mat3.prototype, MathType.MAT3);\r\n\r\n    defineAttr(jsb.Vec2.prototype, 'x', 0);\r\n    defineAttr(jsb.Vec2.prototype, 'y', 1);\r\n    extendType(jsb.Vec2.prototype, Vec2.prototype, MathType.VEC2);\r\n\r\n    defineAttr(jsb.Vec3.prototype, 'x', 0);\r\n    defineAttr(jsb.Vec3.prototype, 'y', 1);\r\n    defineAttr(jsb.Vec3.prototype, 'z', 2);\r\n\r\n    extendType(jsb.Vec3.prototype, Vec3.prototype, MathType.VEC3);\r\n\r\n    defineAttr(jsb.Vec4.prototype, 'x', 0);\r\n    defineAttr(jsb.Vec4.prototype, 'y', 1);\r\n    defineAttr(jsb.Vec4.prototype, 'z', 2);\r\n    defineAttr(jsb.Vec4.prototype, 'w', 3);\r\n\r\n    extendType(jsb.Vec4.prototype, Vec4.prototype, MathType.VEC4);\r\n\r\n    defineAttr(jsb.Quat.prototype, 'x', 0);\r\n    defineAttr(jsb.Quat.prototype, 'y', 1);\r\n    defineAttr(jsb.Quat.prototype, 'z', 2);\r\n    defineAttr(jsb.Quat.prototype, 'w', 3);\r\n\r\n    extendType(jsb.Quat.prototype, Quat.prototype, MathType.QUATERNION);\r\n\r\n    Object.setPrototypeOf(jsb.Color.prototype, Color.prototype);\r\n    Object.defineProperty(jsb.Color.prototype, 'type', { configurable: true, enumerable: true, writable: false, value: MathType.COLOR });\r\n\r\n    inheritCCClass(jsb.Vec4, Vec4);\r\n    inheritCCClass(jsb.Vec3, Vec3);\r\n    inheritCCClass(jsb.Vec2, Vec2);\r\n    inheritCCClass(jsb.Mat4, Mat4);\r\n    inheritCCClass(jsb.Mat3, Mat3);\r\n    inheritCCClass(jsb.Color, Color);\r\n    inheritCCClass(jsb.Quat, Quat);\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { removeProperty, replaceProperty } from '../utils/x-deprecated';\r\nimport { Color } from './color';\r\nimport { Mat3 } from './mat3';\r\nimport { Mat4 } from './mat4';\r\nimport { Quat } from './quat';\r\nimport { Vec2 } from './vec2';\r\nimport { Vec3 } from './vec3';\r\nimport { Vec4 } from './vec4';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nreplaceProperty(Vec2, 'Vec2', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'div',\r\n        newName: 'divide',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'dist',\r\n        newName: 'distance',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'sqrDist',\r\n        newName: 'squaredDistance',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'mag',\r\n        newName: 'len',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'sqrMag',\r\n        newName: 'lengthSqr',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Vec2,\r\n        targetName: 'Vec2',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Vec2.prototype, 'Vec2', [\r\n    {\r\n        name: 'mag',\r\n        newName: 'length',\r\n        target: Vec2.prototype,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'magSqr',\r\n        newName: 'lengthSqr',\r\n        target: Vec2.prototype,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Vec2.prototype,\r\n        targetName: 'Vec2',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Vec2.prototype,\r\n        targetName: 'Vec2',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Vec3, 'Vec3', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'div',\r\n        newName: 'divide',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'dist',\r\n        newName: 'distance',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'sqrDist',\r\n        newName: 'squaredDistance',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'mag',\r\n        newName: 'len',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'sqrMag',\r\n        newName: 'lengthSqr',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Vec3,\r\n        targetName: 'Vec3',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Vec3.prototype, 'Vec3', [\r\n    {\r\n        name: 'mag',\r\n        newName: 'length',\r\n        target: Vec3.prototype,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'magSqr',\r\n        newName: 'lengthSqr',\r\n        target: Vec3.prototype,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Vec3.prototype,\r\n        targetName: 'Vec3',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Vec3.prototype,\r\n        targetName: 'Vec3',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Vec4, 'Vec4', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'div',\r\n        newName: 'divide',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'dist',\r\n        newName: 'distance',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'sqrDist',\r\n        newName: 'squaredDistance',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'mag',\r\n        newName: 'len',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'sqrMag',\r\n        newName: 'lengthSqr',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Vec4,\r\n        targetName: 'Vec4',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Vec4.prototype, 'Vec4', [\r\n    {\r\n        name: 'mag',\r\n        newName: 'length',\r\n        target: Vec4.prototype,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'magSqr',\r\n        newName: 'lengthSqr',\r\n        target: Vec4.prototype,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Vec4.prototype,\r\n        targetName: 'Vec4',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Vec4.prototype,\r\n        targetName: 'Vec4',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Quat, 'Quat', [\r\n    {\r\n        name: 'mag',\r\n        newName: 'len',\r\n        target: Quat,\r\n        targetName: 'Quat',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Quat,\r\n        targetName: 'Quat',\r\n    },\r\n    {\r\n        name: 'sqrMag',\r\n        newName: 'lengthSqr',\r\n        target: Quat,\r\n        targetName: 'Quat',\r\n    },\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Quat,\r\n        targetName: 'Quat',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Quat,\r\n        targetName: 'Quat',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Quat.prototype, 'Quat', [\r\n    {\r\n        name: 'scale',\r\n        newName: 'multiplyScalar',\r\n        target: Quat.prototype,\r\n        targetName: 'Quat',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Quat.prototype,\r\n        targetName: 'Quat',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Color, 'Color', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Color,\r\n        targetName: 'Color',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Color,\r\n        targetName: 'Color',\r\n    },\r\n    {\r\n        name: 'div',\r\n        newName: 'divide',\r\n        target: Color,\r\n        targetName: 'Color',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Color,\r\n        targetName: 'Color',\r\n    },\r\n    {\r\n        name: 'fromHex',\r\n        newName: 'fromHEX',\r\n        customFunction (...args: any): any {\r\n            const arg1 = args[1].toString(16);\r\n            return legacyCC.Color.fromHEX(args[0], arg1);\r\n        },\r\n    },\r\n]);\r\n\r\nreplaceProperty(Mat3, 'Mat3', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Mat3,\r\n        targetName: 'Mat3',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Mat3,\r\n        targetName: 'Mat3',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Mat3,\r\n        targetName: 'Mat3',\r\n    },\r\n    {\r\n        name: 'transfrom',\r\n        newName: 'transform',\r\n        target: Mat3,\r\n        targetName: 'Mat3',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Mat3.prototype, 'Mat3', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Mat3.prototype,\r\n        targetName: 'Mat3',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Mat3.prototype,\r\n        targetName: 'Mat3',\r\n    },\r\n    {\r\n        name: 'mulScalar',\r\n        newName: 'multiplyScalar',\r\n        target: Mat3.prototype,\r\n        targetName: 'Mat3',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Mat3.prototype,\r\n        targetName: 'Mat3',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Mat4, 'Mat4', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Mat4,\r\n        targetName: 'Mat4',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Mat4,\r\n        targetName: 'Mat4',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Mat4,\r\n        targetName: 'Mat4',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Mat4.prototype, 'Mat4', [\r\n    {\r\n        name: 'sub',\r\n        newName: 'subtract',\r\n        target: Mat4.prototype,\r\n        targetName: 'Mat4',\r\n    },\r\n    {\r\n        name: 'mul',\r\n        newName: 'multiply',\r\n        target: Mat4.prototype,\r\n        targetName: 'Mat4',\r\n    },\r\n    {\r\n        name: 'mulScalar',\r\n        newName: 'multiplyScalar',\r\n        target: Mat4.prototype,\r\n        targetName: 'Mat4',\r\n    },\r\n    {\r\n        name: 'exactEquals',\r\n        newName: 'strictEquals',\r\n        target: Mat4.prototype,\r\n        targetName: 'Mat4',\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { ISizeLike } from './type-define';\r\nimport { legacyCC } from '../global-exports';\r\n\r\n/**\r\n * @en Two dimensional size type representing the width and height.\r\n * @zh 二维尺寸。\r\n */\r\nexport class Size extends ValueType {\r\n    public static ZERO = Object.freeze(new Size(0, 0));\r\n    public static ONE = Object.freeze(new Size(1, 1));\r\n\r\n    /**\r\n     * @en Calculate the interpolation result between this size and another one with given ratio\r\n     * @zh 根据指定的插值比率，从当前尺寸到目标尺寸之间做插值。\r\n     * @param out Output Size.\r\n     * @param from Original Size.\r\n     * @param to Target Size.\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     * @return A vector consisting of linear interpolation of the width and height of the current size\r\n     *         to the width and height of the target size at a specified interpolation ratio, respectively.\r\n     */\r\n    public static lerp <Out extends ISizeLike> (out: Out, from: Out, to: Out, ratio: number): Out {\r\n        out.width = from.width + (to.width - from.width) * ratio;\r\n        out.height = from.height + (to.height - from.height) * ratio;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether `Size` a is equal to `Size` b.\r\n     * @zh 判断两个尺寸是否相等。\r\n     * @param a Size a.\r\n     * @param b Size b.\r\n     * @returns Returns `true' when both dimensions are equal in width and height; otherwise returns `false'.\r\n     */\r\n    public static equals <InType extends ISizeLike> (a: InType, b: InType): boolean {\r\n        return a.width === b.width\r\n                && a.height === b.height;\r\n    }\r\n\r\n    // compatibility with vector interfaces\r\n    set x (val) { this.width = val; }\r\n    get x (): number { return this.width; }\r\n    set y (val) { this.height = val; }\r\n    get y (): number { return this.height; }\r\n\r\n    public declare width: number;\r\n\r\n    public declare height: number;\r\n\r\n    /**\r\n     * @en Constructor a size from another one.\r\n     * @zh 构造与指定尺寸相等的尺寸。\r\n     * @param other Specified Size.\r\n     */\r\n    constructor (other: Size);\r\n\r\n    /**\r\n     * @en Constructor a size with specified values.\r\n     * @zh 构造具有指定宽度和高度的尺寸。\r\n     * @param width width of the Size, default value is 0.\r\n     * @param height height of the Size, default value is 0.\r\n     */\r\n    constructor (width?: number, height?: number);\r\n\r\n    constructor (width?: Size | number, height?: number) {\r\n        super();\r\n        if (typeof width === 'object') {\r\n            this.width = width.width;\r\n            this.height = width.height;\r\n        } else {\r\n            this.width = width || 0;\r\n            this.height = height || 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en clone the current `Size`.\r\n     * @zh 克隆当前尺寸。\r\n     */\r\n    public clone (): Size {\r\n        return new Size(this.width, this.height);\r\n    }\r\n\r\n    /**\r\n     * @en Set values with another `Size`.\r\n     * @zh 设置当前尺寸使其与指定的尺寸相等。\r\n     * @param other Specified Size.\r\n     * @returns `this`\r\n     */\r\n    public set (other: Size): any;\r\n\r\n    /**\r\n     * @en Set the value of each component of the current `Size`.\r\n     * @zh 设置当前尺寸的具体参数。\r\n     * @param width Specified width\r\n     * @param height Specified height\r\n     * @returns `this`\r\n     */\r\n    public set (width?: number, height?: number): any;\r\n\r\n    public set (width?: Size | number, height?: number): any {\r\n        if (typeof width === 'object') {\r\n            this.height = width.height;\r\n            this.width = width.width;\r\n        } else {\r\n            this.width = width || 0;\r\n            this.height = height || 0;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current `Size` equals another one.\r\n     * @zh 判断当前尺寸是否与指定尺寸的相等。\r\n     * @param other Specified Size\r\n     * @returns Returns `true' when both dimensions are equal in width and height; otherwise returns `false'.\r\n     */\r\n    public equals (other: Size): boolean {\r\n        return this.width === other.width\r\n            && this.height === other.height;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the interpolation result between this size and another one with given ratio\r\n     * @zh 根据指定的插值比率，从当前尺寸到目标尺寸之间做插值。\r\n     * @param to Target Size.\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     */\r\n    public lerp (to: Size, ratio: number): Size {\r\n        this.width += (to.width - this.width) * ratio;\r\n        this.height += (to.height - this.height) * ratio;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Return the information of the current size in string\r\n     * @zh 返回当前尺寸的字符串表示。\r\n     * @returns The information of the current size in string\r\n     */\r\n    public toString (): string {\r\n        return `(${this.width}, ${this.height})`;\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.Size', Size, { width: 0, height: 0 });\r\n\r\n/**\r\n * @en Constructs a `Size` object.\r\n * @zh 等价于 `new Size(other)`。\r\n * @param other Specified Size.\r\n * @returns `new Size(other)`\r\n */\r\nexport function size (other: Size): Size;\r\n\r\n/**\r\n * @en Constructs a `Size` object.\r\n * @zh 等价于 `new Size(x, y)`。\r\n * @param width Specified width\r\n * @param height Specified height\r\n * @returns `new Size(w, h)`\r\n */\r\nexport function size (width?: number, height?: number): Size;\r\n\r\nexport function size (width: Size | number = 0, height = 0): Size {\r\n    return new Size(width as number, height);\r\n}\r\n\r\nlegacyCC.size = size;\r\n\r\nlegacyCC.Size = Size;\r\n","/* eslint-disable @typescript-eslint/no-this-alias */\r\n/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { Mat4 } from './mat4';\r\nimport { Size } from './size';\r\nimport { IRectLike, IVec2Like } from './type-define';\r\nimport { Vec2 } from './vec2';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nconst max = Math.max;\r\nconst min = Math.min;\r\n\r\n/**\r\n * @en\r\n * A 2D rectangle defined by x, y position at the bottom-left corner and width, height.\r\n * All points inside the rectangle are greater than or equal to the minimum point and less than or equal to the maximum point.\r\n * The width is defined as xMax - xMin and the height is defined as yMax - yMin.\r\n * @zh\r\n * 该类表示一个二维矩形，由其左下角的 x、y 坐标以及宽度和高度组成。\r\n * 矩形内的所有点都大于等于矩形的最小点 (xMin, yMin) 并且小于等于矩形的最大点 (xMax, yMax)。\r\n * 矩形的宽度定义为 xMax - xMin；高度定义为 yMax - yMin。\r\n */\r\nexport class Rect extends ValueType {\r\n    /**\r\n     * @en Creates a rectangle from two coordinate values.\r\n     * @zh 由任意两个点创建一个矩形，目标矩形即是这两个点各向 x、y 轴作线所得到的矩形。\r\n     * @param v1 Specified point 1.\r\n     * @param v2 Specified point 2.\r\n     * @returns Target rectangle.\r\n     */\r\n    public static fromMinMax <Out extends IRectLike, VecLike extends IVec2Like> (out: Out, v1: VecLike, v2: VecLike): Out {\r\n        const minX = min(v1.x, v2.x);\r\n        const minY = min(v1.y, v2.y);\r\n        const maxX = max(v1.x, v2.x);\r\n        const maxY = max(v1.y, v2.y);\r\n        out.x = minX;\r\n        out.y = minY;\r\n        out.width = maxX - minX;\r\n        out.height = maxY - minY;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the interpolation result between this rect and another one with given ratio\r\n     * @zh 根据指定的插值比率，从当前矩形到目标矩形之间做插值。\r\n     * @param out Output rect.\r\n     * @param from Original rect.\r\n     * @param to Target rect.\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     */\r\n    public static lerp <Out extends IRectLike> (out: Out, from: Out, to: Out, ratio: number): Out {\r\n        const x = from.x;\r\n        const y = from.y;\r\n        const w = from.width;\r\n        const h = from.height;\r\n        out.x = x + (to.x - x) * ratio;\r\n        out.y = y + (to.y - y) * ratio;\r\n        out.width = w + (to.width - w) * ratio;\r\n        out.height = h + (to.height - h) * ratio;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the overlapping portion of 2 rectangles.\r\n     * @zh 计算当前矩形与指定矩形重叠部分的矩形，将其赋值给输出矩形。\r\n     * @param out Output Rect.\r\n     * @param one One of the specify Rect.\r\n     * @param other Another of the specify Rect.\r\n     */\r\n    public static intersection <Out extends IRectLike> (out: Out, one: Out, other: Out): Out {\r\n        const axMin = one.x;\r\n        const ayMin = one.y;\r\n        const axMax = one.x + one.width;\r\n        const ayMax = one.y + one.height;\r\n        const bxMin = other.x;\r\n        const byMin = other.y;\r\n        const bxMax = other.x + other.width;\r\n        const byMax = other.y + other.height;\r\n        out.x = max(axMin, bxMin);\r\n        out.y = max(ayMin, byMin);\r\n        out.width = min(axMax, bxMax) - out.x;\r\n        out.height = min(ayMax, byMax) - out.y;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the smallest rectangle that contains the current rect and the given rect.\r\n     * @zh 创建同时包含当前矩形和指定矩形的最小矩形，将其赋值给输出矩形。\r\n     * @param out Output Rect.\r\n     * @param one One of the specify Rect.\r\n     * @param other Another of the specify Rect.\r\n     */\r\n    public static union <Out extends IRectLike> (out: Out, one: Out, other: Out): Out {\r\n        const x = one.x;\r\n        const y = one.y;\r\n        const w = one.width;\r\n        const h = one.height;\r\n        const bx = other.x;\r\n        const by = other.y;\r\n        const bw = other.width;\r\n        const bh = other.height;\r\n        out.x = min(x, bx);\r\n        out.y = min(y, by);\r\n        out.width = max(x + w, bx + bw) - out.x;\r\n        out.height = max(y + h, by + bh) - out.y;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether rect a is equal to rect b.\r\n     * @zh 判断两个矩形是否相等。\r\n     * @param a The first rect to be compared.\r\n     * @param b The second rect to be compared.\r\n     * @returns Returns `true' when the minimum and maximum values of both rectangles are equal, respectively; otherwise, returns `false'.\r\n     */\r\n    public static equals <InType extends IRectLike> (a: InType, b: InType): boolean {\r\n        return a.x === b.x\r\n                && a.y === b.y\r\n                && a.width === b.width\r\n                && a.height === b.height;\r\n    }\r\n\r\n    /**\r\n     * @en The minimum x value.\r\n     * @zh 获取或设置矩形在 x 轴上的最小值。\r\n     */\r\n    get xMin (): number {\r\n        return this.x;\r\n    }\r\n\r\n    set xMin (value) {\r\n        this.width += this.x - value;\r\n        this.x = value;\r\n    }\r\n\r\n    /**\r\n     * @en The minimum y value.\r\n     * @zh 获取或设置矩形在 y 轴上的最小值。\r\n     */\r\n    get yMin (): number {\r\n        return this.y;\r\n    }\r\n\r\n    set yMin (value) {\r\n        this.height += this.y - value;\r\n        this.y = value;\r\n    }\r\n\r\n    /**\r\n     * @en The maximum x value.\r\n     * @zh 获取或设置矩形在 x 轴上的最大值。\r\n     */\r\n    get xMax (): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    set xMax (value) {\r\n        this.width = value - this.x;\r\n    }\r\n\r\n    /**\r\n     * @en The maximum y value.\r\n     * @zh 获取或设置矩形在 y 轴上的最大值。\r\n     */\r\n    get yMax (): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    set yMax (value) {\r\n        this.height = value - this.y;\r\n    }\r\n\r\n    /**\r\n     * @en The position of the center of the rectangle.\r\n     * @zh 获取或设置矩形中心点的坐标。\r\n     */\r\n    get center (): Vec2 {\r\n        return new Vec2(\r\n            this.x + this.width * 0.5,\r\n            this.y + this.height * 0.5,\r\n        );\r\n    }\r\n\r\n    set center (value) {\r\n        this.x = value.x - this.width * 0.5;\r\n        this.y = value.y - this.height * 0.5;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a new [[Vec2]] object representing the position of the rectangle\r\n     * @zh 获取或设置矩形的 x 和 y 坐标。\r\n     */\r\n    get origin (): Vec2 {\r\n        return new Vec2(this.x, this.y);\r\n    }\r\n\r\n    set origin (value) {\r\n        this.x = value.x;\r\n        this.y = value.y;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a new [[Size]] object represents the width and height of the rectangle\r\n     * @zh 获取或设置矩形的尺寸。\r\n     */\r\n    get size (): Size {\r\n        return new Size(this.width, this.height);\r\n    }\r\n\r\n    set size (value) {\r\n        this.width = value.width;\r\n        this.height = value.height;\r\n    }\r\n\r\n    // compatibility with vector interfaces\r\n    set z (val) { this.width = val; }\r\n    get z (): number { return this.width; }\r\n    set w (val) { this.height = val; }\r\n    get w (): number { return this.height; }\r\n\r\n    /**\r\n     * @en The minimum x value.\r\n     * @zh 矩形最小点的 x 坐标。\r\n     */\r\n    public declare x: number;\r\n\r\n    /**\r\n     * @en The minimum y value.\r\n     * @zh 矩形最小点的 y 坐标。\r\n     */\r\n    public declare y: number;\r\n\r\n    /**\r\n     * @en The width of the Rect.\r\n     * @zh 矩形的宽度。\r\n     */\r\n    public declare width: number;\r\n\r\n    /**\r\n     * @en The height of the Rect.\r\n     * @zh 矩形的高度。\r\n     */\r\n    public declare height: number;\r\n\r\n    /**\r\n     * @en Constructs a Rect from another one.\r\n     * @zh 构造与指定矩形相等的矩形。\r\n     * @param other Specified Rect.\r\n     */\r\n    constructor (other: Rect);\r\n\r\n    /**\r\n     * @en Constructs a Rect with specified values.\r\n     * @zh 构造具有指定的最小值和尺寸的矩形。\r\n     * @param x The minimum X coordinate of the rectangle.\r\n     * @param y The minimum Y coordinate of the rectangle.\r\n     * @param width The width of the rectangle, measured from the X position.\r\n     * @param height The height of the rectangle, measured from the Y position.\r\n     */\r\n    constructor (x?: number, y?: number, width?: number, height?: number);\r\n\r\n    constructor (x?: Rect | number, y?: number, width?: number, height?: number) {\r\n        super();\r\n        if (typeof x === 'object') {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.width = x.width;\r\n            this.height = x.height;\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.width = width || 0;\r\n            this.height = height || 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en clone the current Rect.\r\n     * @zh 克隆当前矩形。\r\n     */\r\n    public clone (): Rect {\r\n        return new Rect(this.x, this.y, this.width, this.height);\r\n    }\r\n\r\n    /**\r\n     * @en Set values with another Rect.\r\n     * @zh 设置当前矩形使其与指定矩形相等。\r\n     * @param other Specified Rect.\r\n     * @returns `this`\r\n     */\r\n    public set (other: Rect): any;\r\n\r\n    /**\r\n     * @en Set the value of each component of the current Rect.\r\n     * @zh 设置当前矩形使其与指定参数的矩形相等。\r\n     * @param x The x parameter of the specified rectangle\r\n     * @param y The y parameter of the specified rectangle\r\n     * @param width The width parameter of the specified rectangle\r\n     * @param height The height parameter of the specified rectangle\r\n     * @returns `this`\r\n     */\r\n    public set (x?: number, y?: number, width?: number, height?: number): any;\r\n\r\n    public set (x?: Rect | number, y?: number, width?: number, height?: number): any {\r\n        const self = this;\r\n        if (typeof x === 'object') {\r\n            self.x = x.x;\r\n            self.y = x.y;\r\n            self.width = x.width;\r\n            self.height = x.height;\r\n        } else {\r\n            self.x = x || 0;\r\n            self.y = y || 0;\r\n            self.width = width || 0;\r\n            self.height = height || 0;\r\n        }\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current Rect equals another one.\r\n     * @zh 判断当前矩形是否与指定矩形相等。\r\n     * @param other Specified rectangles.\r\n     * @returns Returns `true' when the minimum and maximum values of both rectangles are equal, respectively; otherwise, returns `false'.\r\n     */\r\n    public equals (other: Rect): boolean {\r\n        const self = this;\r\n        return self.x === other.x\r\n            && self.y === other.y\r\n            && self.width === other.width\r\n            && self.height === other.height;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the interpolation result between this Rect and another one with given ratio.\r\n     * @zh 根据指定的插值比率，从当前矩形到目标矩形之间做插值。\r\n     * @param to Target Rect.\r\n     * @param ratio The interpolation coefficient.The range is [0,1].\r\n     */\r\n    public lerp (to: Rect, ratio: number): Rect {\r\n        const self = this;\r\n        const x = self.x;\r\n        const y = self.y;\r\n        const w = self.width;\r\n        const h = self.height;\r\n        self.x = x + (to.x - x) * ratio;\r\n        self.y = y + (to.y - y) * ratio;\r\n        self.width = w + (to.width - w) * ratio;\r\n        self.height = h + (to.height - h) * ratio;\r\n\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en Return the information of the current rect in string\r\n     * @zh 返回当前矩形的字符串表示。\r\n     * @returns The information of the current rect in string\r\n     */\r\n    public toString (): string {\r\n        const self = this;\r\n        return `(${self.x}, ${self.y}, ${self.width}, ${self.height})`;\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current rectangle intersects with the given one.\r\n     * @zh 判断当前矩形是否与指定矩形相交。\r\n     * @param other Specified rectangles.\r\n     * @returns If intersected, return `true', otherwise return `false'.\r\n     */\r\n    public intersects (other: Rect): boolean {\r\n        const self = this;\r\n        const maxax = self.x + self.width;\r\n        const maxay = self.y + self.height;\r\n        const maxbx = other.x + other.width;\r\n        const maxby = other.y + other.height;\r\n        return !(maxax < other.x || maxbx < self.x || maxay < other.y || maxby < self.y);\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the current rect contains the given point.\r\n     * @zh 判断当前矩形是否包含指定的点。\r\n     * @param point Specified point.\r\n     * @returns The specified point is included in the rectangle and returns `true', otherwise it returns `false'.\r\n     */\r\n    public contains (point: Vec2): boolean {\r\n        const self = this;\r\n        return (self.x <= point.x\r\n                && self.x + self.width >= point.x\r\n                && self.y <= point.y\r\n                && self.y + self.height >= point.y);\r\n    }\r\n\r\n    /**\r\n     * @en Returns true if the other rect entirely inside this rectangle.\r\n     * @zh 判断当前矩形是否包含指定矩形。\r\n     * @param other Specified rectangles.\r\n     * @returns Returns `true' if all the points of the specified rectangle are included in the current rectangle, `false' otherwise.\r\n     */\r\n    public containsRect (other: Rect): boolean {\r\n        const self = this;\r\n        return (self.x <= other.x\r\n                && self.x + self.width >= other.x + other.width\r\n                && self.y <= other.y\r\n                && self.y + self.height >= other.y + other.height);\r\n    }\r\n\r\n    /**\r\n     * @en Apply matrix4 to the rect.\r\n     * @zh\r\n     * 应用矩阵变换到当前矩形：\r\n     * 应用矩阵变换到当前矩形的最小点得到新的最小点，\r\n     * 将当前矩形的尺寸视为二维向量应用矩阵变换得到新的尺寸；\r\n     * 并将如此构成的新矩形。\r\n     * @param matrix The matrix4\r\n     */\r\n    public transformMat4 (mat: Mat4): Rect {\r\n        const self = this;\r\n        const ol = self.x;\r\n        const ob = self.y;\r\n        const or = ol + self.width;\r\n        const ot = ob + self.height;\r\n        const lbx = mat.m00 * ol + mat.m04 * ob + mat.m12;\r\n        const lby = mat.m01 * ol + mat.m05 * ob + mat.m13;\r\n        const rbx = mat.m00 * or + mat.m04 * ob + mat.m12;\r\n        const rby = mat.m01 * or + mat.m05 * ob + mat.m13;\r\n        const ltx = mat.m00 * ol + mat.m04 * ot + mat.m12;\r\n        const lty = mat.m01 * ol + mat.m05 * ot + mat.m13;\r\n        const rtx = mat.m00 * or + mat.m04 * ot + mat.m12;\r\n        const rty = mat.m01 * or + mat.m05 * ot + mat.m13;\r\n\r\n        const minX = min(lbx, rbx, ltx, rtx);\r\n        const maxX = max(lbx, rbx, ltx, rtx);\r\n        const minY = min(lby, rby, lty, rty);\r\n        const maxY = max(lby, rby, lty, rty);\r\n\r\n        self.x = minX;\r\n        self.y = minY;\r\n        self.width = maxX - minX;\r\n        self.height = maxY - minY;\r\n\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Applies a matrix transformation to the current rectangle and outputs the result to the four vertices.\r\n     * @zh\r\n     * 应用矩阵变换到当前矩形，并将结果输出到四个顶点上。\r\n     *\r\n     * @param mat The mat4 to apply\r\n     * @param out_lb The left bottom point\r\n     * @param out_lt The left top point\r\n     * @param out_rb The right bottom point\r\n     * @param out_rt The right top point\r\n     */\r\n    public transformMat4ToPoints (mat: Mat4, out_lb: Vec2, out_lt: Vec2, out_rt: Vec2, out_rb: Vec2): void {\r\n        const self = this;\r\n        const ol = self.x;\r\n        const ob = self.y;\r\n        const or = ol + self.width;\r\n        const ot = ob + self.height;\r\n        out_lb.x = mat.m00 * ol + mat.m04 * ob + mat.m12;\r\n        out_lb.y = mat.m01 * ol + mat.m05 * ob + mat.m13;\r\n        out_rb.x = mat.m00 * or + mat.m04 * ob + mat.m12;\r\n        out_rb.y = mat.m01 * or + mat.m05 * ob + mat.m13;\r\n        out_lt.x = mat.m00 * ol + mat.m04 * ot + mat.m12;\r\n        out_lt.y = mat.m01 * ol + mat.m05 * ot + mat.m13;\r\n        out_rt.x = mat.m00 * or + mat.m04 * ot + mat.m12;\r\n        out_rt.y = mat.m01 * or + mat.m05 * ot + mat.m13;\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.Rect', Rect, { x: 0, y: 0, width: 0, height: 0 });\r\n\r\nlegacyCC.Rect = Rect;\r\n\r\n/**\r\n * @en The convenient method to create a new Rect.\r\n * @zh 构造与指定矩形相等的矩形。等价于 `new Rect(rect)`。\r\n * @param rect Specified Rect.\r\n * @returns `new Rect(rect)`\r\n */\r\nexport function rect (rect: Rect): Rect;\r\n\r\n/**\r\n * @en The convenient method to create a new Rect.\r\n * @zh 构造具有指定的最小值和尺寸的矩形，等价于`new Rect(x, y, width, height)`。\r\n * @param x The minimum X coordinate of the rectangle.\r\n * @param y The minimum Y coordinate of the rectangle.\r\n * @param width The width of the rectangle, measured from the X position.\r\n * @param height The height of the rectangle, measured from the Y position.\r\n * @returns `new Rect(x, y, width, height)`\r\n */\r\nexport function rect (x?: number, y?: number, width?: number, height?: number): Rect;\r\n\r\nexport function rect (x: Rect | number = 0, y = 0, width = 0, height = 0): Rect {\r\n    return new Rect(x as number, y, width, height);\r\n}\r\n\r\nlegacyCC.rect = rect;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport { ValueType } from '../value-types/value-type';\r\nimport { FloatArray } from './type-define';\r\n\r\nexport const MATH_FLOAT_ARRAY = JSB ? Float32Array : Float64Array;\r\n\r\nexport class MathBase extends ValueType {\r\n    public static createFloatArray (size: number): Float64Array | Float32Array {\r\n        return new MATH_FLOAT_ARRAY(size);\r\n    }\r\n\r\n    /**\r\n     * @en Get the internal array data.\r\n     * @zh 获取内部 array 数据。\r\n     */\r\n    public get array (): FloatArray  {\r\n        return this._array;\r\n    }\r\n\r\n    protected declare _array: FloatArray;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3 } from '../math';\r\nimport { AABB } from './aabb';\r\nimport { OBB } from './obb';\r\nimport { Plane } from './plane';\r\n\r\nconst X = new Vec3();\r\nconst Y = new Vec3();\r\nconst Z = new Vec3();\r\nconst d = new Vec3();\r\nconst min = new Vec3();\r\nconst max = new Vec3();\r\nconst u = new Array(3);\r\nconst e = new Array(3);\r\n\r\n/**\r\n * @en\r\n * Calculates the distance between a point and a plane.\r\n * @zh\r\n * 计算点和平面之间的距离。\r\n * @param point @en The target point. @zh 目标点。\r\n * @param plane @en The target plane. @zh 目标平面。\r\n * @returns @en The distance between the point and the plane. @zh 点和平面之间的距离。\r\n */\r\nexport function point_plane (point: Vec3, plane_: Plane): number {\r\n    return Vec3.dot(plane_.n, point) - plane_.d;\r\n}\r\n\r\n/**\r\n * @en\r\n * Calculates the closest point on a plane to a given point.\r\n * @zh\r\n * 计算平面上最接近给定点的点。\r\n * @param out @en The closest point. @zh 最近点。\r\n * @param point @en The given point. @zh 给定点。\r\n * @param plane @en The target plane. @zh 平面。\r\n * @returns @en The result of the closest point, same as the `out` parameter. @zh 存储最近点的向量，与 `out` 参数为同一个对象。\r\n */\r\nexport function pt_point_plane (out: Vec3, point: Vec3, plane_: Plane): Vec3 {\r\n    const t = point_plane(point, plane_);\r\n    return Vec3.subtract(out, point, Vec3.multiplyScalar(out, plane_.n, t));\r\n}\r\n\r\n/**\r\n * @en\r\n * Calculates the closest point on an AABB to a given point.\r\n * @zh\r\n * 计算 AABB 上最接近给定点的点。\r\n * @param out @en The closest point. @zh 最近点。\r\n * @param point @en The given point @zh 给定点。\r\n * @param aabb @en The target AABB to calculate. @zh 参与计算的 AABB 实例。\r\n * @returns @en The result of the closest point, same as the `out` parameter. @zh 存储最近点的向量，与 `out` 参数为同一个对象。\r\n */\r\nexport function pt_point_aabb (out: Vec3, point: Vec3, aabb_: AABB): Vec3 {\r\n    Vec3.copy(out, point);\r\n    Vec3.subtract(min, aabb_.center, aabb_.halfExtents);\r\n    Vec3.add(max, aabb_.center, aabb_.halfExtents);\r\n\r\n    out.x = (out.x < min.x) ? min.x : out.x;\r\n    out.y = (out.y < min.y) ? min.y : out.y;\r\n    out.z = (out.z < min.z) ? min.z : out.z;\r\n\r\n    out.x = (out.x > max.x) ? max.x : out.x;\r\n    out.y = (out.y > max.y) ? max.y : out.y;\r\n    out.z = (out.z > max.z) ? max.z : out.z;\r\n    return out;\r\n}\r\n\r\n/**\r\n * @en\r\n * Calculates the closest point on an OBB to a given point.\r\n * @zh\r\n * 计算 OBB 上最接近给定点的点。\r\n * @param out @en The closest point. @zh 最近点。\r\n * @param point @en The given point. @zh 给定点。\r\n * @param obb @en The target OBB to calculate. @zh 参与计算的 OBB 实例。\r\n * @returns @en The result of the closest point, same as the `out` parameter. @zh 存储最近点的向量，与 `out` 参数为同一个对象。\r\n */\r\nexport function pt_point_obb (out: Vec3, point: Vec3, obb_: OBB): Vec3 {\r\n    Vec3.set(X, obb_.orientation.m00, obb_.orientation.m01, obb_.orientation.m02);\r\n    Vec3.set(Y, obb_.orientation.m03, obb_.orientation.m04, obb_.orientation.m05);\r\n    Vec3.set(Z, obb_.orientation.m06, obb_.orientation.m07, obb_.orientation.m08);\r\n\r\n    u[0] = X;\r\n    u[1] = Y;\r\n    u[2] = Z;\r\n    e[0] = obb_.halfExtents.x;\r\n    e[1] = obb_.halfExtents.y;\r\n    e[2] = obb_.halfExtents.z;\r\n\r\n    Vec3.subtract(d, point, obb_.center);\r\n\r\n    // Start result at center of obb; make steps from there\r\n    Vec3.set(out, obb_.center.x, obb_.center.y, obb_.center.z);\r\n\r\n    // For each OBB axis...\r\n    for (let i = 0; i < 3; i++) {\r\n        // ...project d onto that axis to get the distance\r\n        // along the axis of d from the obb center\r\n        let dist = Vec3.dot(d, u[i]);\r\n\r\n        // if distance farther than the obb extents, clamp to the obb\r\n        if (dist > e[i]) {\r\n            dist = e[i];\r\n        }\r\n        if (dist < -e[i]) {\r\n            dist = -e[i];\r\n        }\r\n\r\n        // Step that distance along the axis to get world coordinate\r\n        out.x += dist * u[i].x;\r\n        out.y += dist * u[i].y;\r\n        out.z += dist * u[i].z;\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * @en\r\n * Calculates the closest point on the line, which is from A to B, to the given point.\r\n * @zh\r\n * 计算给定点距离线段 AB 上最近的一点。\r\n * @param out @en The closest point. @zh 最近点。\r\n * @param point @en The given point. @zh 给定点\r\n * @param linePointA @en Point A on the line. @zh 线上的某点 A。\r\n * @param linePointB @en Point B on the line. @zh 线上的某点 B。\r\n */\r\nexport function pt_point_line (out: Vec3, point: Vec3, linePointA: Vec3, linePointB: Vec3): void {\r\n    Vec3.subtract(X, linePointA, linePointB);\r\n    const dir = X.clone();\r\n    const dirSquaredLength = Vec3.lengthSqr(dir);\r\n\r\n    if (dirSquaredLength === 0) {\r\n        // The point is at the segment start.\r\n        Vec3.copy(out, linePointA);\r\n    } else {\r\n        // Calculate the projection of the point onto the line extending through the segment.\r\n        Vec3.subtract(X, point, linePointA);\r\n        const t = Vec3.dot(X, dir) / dirSquaredLength;\r\n\r\n        if (t < 0) {\r\n            // The point projects beyond the segment start.\r\n            Vec3.copy(out, linePointA);\r\n        } else if (t > 1) {\r\n            // The point projects beyond the segment end.\r\n            Vec3.copy(out, linePointB);\r\n        } else {\r\n            // The point projects between the start and end of the segment.\r\n            Vec3.scaleAndAdd(out, linePointA, dir, t);\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * 几何工具模块\r\n * @module geometry\r\n */\r\n\r\n/**\r\n * @en\r\n * The enum type of basic geometry.\r\n * @zh\r\n * 形状的类型值。\r\n */\r\nexport enum ShapeType {\r\n    SHAPE_RAY = (1 << 0),\r\n    SHAPE_LINE = (1 << 1),\r\n    SHAPE_SPHERE = (1 << 2),\r\n    SHAPE_AABB = (1 << 3),\r\n    SHAPE_OBB = (1 << 4),\r\n    SHAPE_PLANE = (1 << 5),\r\n    SHAPE_TRIANGLE = (1 << 6),\r\n    SHAPE_FRUSTUM = (1 << 7),\r\n    SHAPE_FRUSTUM_ACCURATE = (1 << 8),\r\n    SHAPE_CAPSULE = (1 << 9),\r\n    SHAPE_SPLINE = (1 << 10),\r\n}\r\n\r\nexport default ShapeType;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3 } from '../math';\r\nimport { ShapeType } from './enums';\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: Line.\r\n * @zh\r\n * 基础几何：直线。\r\n */\r\nexport class Line {\r\n    /**\r\n     * @en\r\n     * Creates a new line.\r\n     * @zh\r\n     * 创建一条新的直线。\r\n     * @param sx @en The x coordinate of the start position. @zh 起点的 x 坐标。\r\n     * @param sy @en The y coordinate of the start position. @zh 起点的 y 坐标。\r\n     * @param sz @en The z coordinate of the start position. @zh 起点的 z 坐标。\r\n     * @param ex @en The x coordinate of the end position. @zh 终点的 x 坐标。\r\n     * @param ey @en The y coordinate of the end position. @zh 终点的 y 坐标。\r\n     * @param ez @en the z coordinate of the end position. @zh 终点的 z 坐标。\r\n     * @returns @en The created line. @zh 创建的直线。\r\n     */\r\n    public static create (sx: number, sy: number, sz: number, ex: number, ey: number, ez: number): Line {\r\n        return new Line(sx, sy, sz, ex, ey, ez);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a new Line initialized with values from an existing Line.\r\n     * @zh\r\n     * 克隆一条新的直线。\r\n     * @param a @en The line to clone from. @zh 克隆的来源 Line 对象。\r\n     * @returns @en The cloned line. @zh 克隆出的新 Line 对象。\r\n     */\r\n    public static clone (a: Line): Line {\r\n        return new Line(\r\n            a.s.x,\r\n            a.s.y,\r\n            a.s.z,\r\n            a.e.x,\r\n            a.e.y,\r\n            a.e.z,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from one Line to another.\r\n     * @zh\r\n     * 复制一条直线的值到另一条直线中。\r\n     * @param out @en The output line to store the copied data. @zh 用来存储拷贝数据的 Line 对象。\r\n     * @param a @en The line to copy from. @zh 从这个 Line 对象拷贝信息。\r\n     * @returns @en The `out` parameter. @zh 传入的 `out` 对象。\r\n     */\r\n    public static copy (out: Line, a: Line): Line {\r\n        Vec3.copy(out.s, a.s);\r\n        Vec3.copy(out.e, a.e);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a line from two points.\r\n     * @zh\r\n     * 用两个点创建一条直线。\r\n     * @param out @en The output line. @zh 接受新数据的 Line 对象。\r\n     * @param start @en The start point. @zh 起点。\r\n     * @param end @en The end point. @zh 终点。\r\n     * @returns @en The `out` parameter. @zh 传入的 out 对象。\r\n     */\r\n    public static fromPoints (out: Line, start: Vec3, end: Vec3): Line {\r\n        Vec3.copy(out.s, start);\r\n        Vec3.copy(out.e, end);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the start point and the end point of a line with the given values.\r\n     * @zh\r\n     * 将给定线段的起点和终点设置为给定值。\r\n     * @param out @en The output line to set properties. to @zh 接受新数据的 Line 对象。\r\n     * @param sx @en The x coordinate of the start position. @zh 起点的 x 坐标。\r\n     * @param sy @en The y coordinate of the start position. @zh 起点的 y 坐标。\r\n     * @param sz @en The z coordinate of the start position. @zh 起点的 z 坐标。\r\n     * @param ex @en The x coordinate of the end position. @zh 终点的 x 坐标。\r\n     * @param ey @en The y coordinate of the end position. @zh 终点的 y 坐标。\r\n     * @param ez @en the z coordinate of the end position. @zh 终点的 z 坐标。\r\n     * @returns @en The `out` parameter. @zh 传入的 `out` 对象。\r\n     */\r\n    public static set (out: Line, sx: number, sy: number, sz: number, ex: number, ey: number, ez: number): Line {\r\n        out.s.x = sx;\r\n        out.s.y = sy;\r\n        out.s.z = sz;\r\n        out.e.x = ex;\r\n        out.e.y = ey;\r\n        out.e.z = ez;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the given line.\r\n     * @zh 计算线的长度。\r\n     * @param a @en The line to calculate length. @zh 用于计算长度的线段。\r\n     * @returns @en The length of the given line. @zh 线段的长度。\r\n     */\r\n    public static len (a: Line): number {\r\n        return Vec3.distance(a.s, a.e);\r\n    }\r\n\r\n    /**\r\n     * @en The start point.\r\n     * @zh 起点。\r\n     */\r\n    public s: Vec3;\r\n\r\n    /**\r\n     * @en The end point.\r\n     * @zh 终点。\r\n     */\r\n    public e: Vec3;\r\n\r\n    /**\r\n     * @en Gets the type of the shape. Always returns `ShapeType.SHAPE_LINE`.\r\n     * @zh 获取形状的类型，总是返回 `ShapeType.SHAPE_LINE`。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    private readonly _type: number;\r\n\r\n    /**\r\n     * @en Constructs a line.\r\n     * @zh 构造一条线。\r\n     * @param sx @en The x coordinate of the start position. @zh 起点的 x 坐标。\r\n     * @param sy @en The y coordinate of the start position. @zh 起点的 y 坐标。\r\n     * @param sz @en The z coordinate of the start position. @zh 起点的 z 坐标。\r\n     * @param ex @en The x coordinate of the end position. @zh 终点的 x 坐标。\r\n     * @param ey @en The y coordinate of the end position. @zh 终点的 y 坐标。\r\n     * @param ez @en the z coordinate of the end position. @zh 终点的 z 坐标。\r\n     */\r\n    constructor (sx = 0, sy = 0, sz = 0, ex = 0, ey = 0, ez = -1) {\r\n        this._type = ShapeType.SHAPE_LINE;\r\n        this.s = new Vec3(sx, sy, sz);\r\n        this.e = new Vec3(ex, ey, ez);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the line.\r\n     * @zh 计算线段的长度。\r\n     * @returns @en The length of the line. @zh 线段的长度。\r\n     */\r\n    public length (): number {\r\n        return Vec3.distance(this.s, this.e);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3 } from '../math';\r\nimport { ShapeType } from './enums';\r\nimport { IVec3Like } from '../math/type-define';\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: Ray.\r\n * @zh\r\n * 基础几何：射线。\r\n */\r\n\r\nexport class Ray {\r\n    /**\r\n     * @en\r\n     * Creates a new ray.\r\n     * @zh\r\n     * 创建一条射线。\r\n     * @param {number} ox @en The x component of start point. @zh 起点的 x 部分。\r\n     * @param {number} oy @en The y component of start point. @zh 起点的 y 部分。\r\n     * @param {number} oz @en The z component of start point. @zh 起点的 z 部分。\r\n     * @param {number} dx @en The x component of direction point. @zh 方向的 x 部分。\r\n     * @param {number} dy @en The y component of direction point. @zh 方向的 y 部分。\r\n     * @param {number} dz @en The z component of direction point. @zh 方向的 z 部分。\r\n     * @returns {Ray} @en The created ray object. @zh 新创建的射线。\r\n     */\r\n    public static create (ox = 0, oy = 0, oz = 0, dx = 0, dy = 0, dz = 1): Ray {\r\n        return new Ray(ox, oy, oz, dx, dy, dz);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a new ray initialized with the values from an existing ray.\r\n     * @zh\r\n     * 从一条射线克隆出一条新的射线。\r\n     * @param a @en The Ray object to be cloned from. @zh 克隆的目标。\r\n     * @returns @en The cloned Ray object. @zh 克隆出的新对象。\r\n     */\r\n    public static clone (a: Ray): Ray {\r\n        return new Ray(\r\n            a.o.x,\r\n            a.o.y,\r\n            a.o.z,\r\n            a.d.x,\r\n            a.d.y,\r\n            a.d.z,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from one ray to another.\r\n     * @zh\r\n     * 复制一个 Ray 的值到另一个 Ray 中。\r\n     * @param out @en The Ray object to copy to. @zh 接受操作的射线。\r\n     * @param a @en The Ray object to copy from. @zh 被复制的射线。\r\n     * @returns @en The Ray object to copy to, same as the `out` parameter. @zh 接受操作的射线，与 `out` 参数相同。\r\n     */\r\n    public static copy (out: Ray, a: Ray): Ray {\r\n        Vec3.copy(out.o, a.o);\r\n        Vec3.copy(out.d, a.d);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a ray from two points.\r\n     * @zh\r\n     * 用两个点创建一条射线。\r\n     * @param out @en The Ray object. @zh 接受操作的射线。\r\n     * @param origin @en The start point of the ray. @zh 射线的起点。\r\n     * @param target @en The target point on the ray. @zh 射线上的一点。\r\n     * @returns @en The Ray object, same as the `out` parameter. @zh 接受操作的射线，与 `out` 参数相同。\r\n     */\r\n    public static fromPoints (out: Ray, origin: Vec3, target: Vec3): Ray {\r\n        Vec3.copy(out.o, origin);\r\n        Vec3.normalize(out.d, Vec3.subtract(out.d, target, origin));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the components of a ray to the given values.\r\n     * @zh\r\n     * 将给定射线的属性设置为给定的值。\r\n     * @param out @en The Ray object to be modified @zh 接受操作的射线。\r\n     * @param ox @en The x component of start point. @zh 起点的 x 部分。\r\n     * @param oy @en The y component of start point. @zh 起点的 y 部分。\r\n     * @param oz @en The z component of start point. @zh 起点的 z 部分。\r\n     * @param dx @en The x component of direction point. @zh 方向的 x 部分。\r\n     * @param dy @en The y component of direction point. @zh 方向的 y 部分。\r\n     * @param dz @en The z component of direction point. @zh 方向的 z 部分。\r\n     * @returns @en The Ray object, same as the `out` parameter. @zh 接受操作的射线，与 `out` 相同。\r\n     */\r\n    public static set (out: Ray, ox: number, oy: number, oz: number, dx: number, dy: number, dz: number): Ray {\r\n        out.o.x = ox;\r\n        out.o.y = oy;\r\n        out.o.z = oz;\r\n        out.d.x = dx;\r\n        out.d.y = dy;\r\n        out.d.z = dz;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The origin of the ray.\r\n     * @zh\r\n     * 起点。\r\n     */\r\n    public declare o: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * The direction of the ray.\r\n     * @zh\r\n     * 方向。\r\n     */\r\n    public declare d: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * Gets the type of the ray, its value is `ShapeType.SHAPE_RAY`.\r\n     * @zh\r\n     * 获取形状的类型，其值为`ShapeType.SHAPE_RAY`。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    protected readonly _type: number = ShapeType.SHAPE_RAY;\r\n\r\n    /**\r\n     * @en\r\n     * Constructs a ray.\r\n     * @zh\r\n     * 构造一条射线。\r\n     * @param ox @en The x component of start point. @zh 起点的 x 部分。\r\n     * @param oy @en The y component of start point. @zh 起点的 y 部分。\r\n     * @param oz @en The z component of start point. @zh 起点的 z 部分。\r\n     * @param dx @en The x component of direction point. @zh 方向的 x 部分。\r\n     * @param dy @en The y component of direction point. @zh 方向的 y 部分。\r\n     * @param dz @en The z component of direction point. @zh 方向的 z 部分。\r\n     */\r\n    constructor (\r\n        ox = 0,\r\n        oy = 0,\r\n        oz = 0,\r\n        dx = 0,\r\n        dy = 0,\r\n        dz = -1,\r\n    ) {\r\n        this.o = new Vec3(ox, oy, oz);\r\n        this.d = new Vec3(dx, dy, dz);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Calculates a point on the ray with the specific distance from the origin point.\r\n     * @zh\r\n     * 根据给定的距离计算出射线上的一点。\r\n     * @param out @en Another point on the ray. @zh 射线上的另一点。\r\n     * @param distance @en The given distance. @zh 给定的距离。\r\n     */\r\n    public computeHit (out: IVec3Like, distance: number): void {\r\n        Vec3.normalize(out, this.d);\r\n        Vec3.scaleAndAdd(out, this.o, out, distance);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Mat4, Quat, Vec3 } from '../math';\r\nimport { ShapeType } from './enums';\r\nimport { AABB } from './aabb';\r\n\r\nconst _v3_tmp = new Vec3();\r\nconst _offset = new Vec3();\r\nconst _min = new Vec3();\r\nconst _max = new Vec3();\r\nfunction maxComponent (v: Vec3): number { return Math.max(Math.max(v.x, v.y), v.z); }\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: Sphere.\r\n * @zh\r\n * 基础几何：球。\r\n */\r\n\r\nexport class Sphere {\r\n    /**\r\n     * @en\r\n     * Creates a new sphere instance.\r\n     * @zh\r\n     * 创建一个新的球实例。\r\n     * @param cx @en The X-Coordinate of the center point relative to the origin.  @zh 相对于原点的中心点的 X 坐标。\r\n     * @param cy @en The Y-Coordinate of the center point relative to the origin.  @zh 相对于原点的中心点的 Y 坐标。\r\n     * @param cz @en The Z-Coordinate of the center point relative to the origin.  @zh 相对于原点的中心点的 Z 坐标。\r\n     * @param r @en The radius of the sphere. @zh 球体的半径\r\n     * @returns @en A new sphere instance. @zh 一个新的球实例。\r\n     */\r\n    public static create (cx: number, cy: number, cz: number, r: number): Sphere {\r\n        return new Sphere(cx, cy, cz, r);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clones a sphere instance.\r\n     * @zh\r\n     * 克隆一个新的球实例。\r\n     * @param p @en The sphere object to clone from. @zh 克隆的目标。\r\n     * @returns @en The sphere object to clone to. @zh 克隆出的实例。\r\n     */\r\n    public static clone (p: Sphere): Sphere {\r\n        return new Sphere(p.center.x, p.center.y, p.center.z, p.radius);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from one sphere to another.\r\n     * @zh\r\n     * 复制一个球的值到另一个球中。\r\n     * @param out @en The sphere object to copy to. @zh 接受操作的球实例。\r\n     * @param a @en The sphere object to copy from. @zh 被复制的球实例。\r\n     * @returns @en The sphere object to copy to. @zh 接受操作的球实例。\r\n     */\r\n    public static copy (out: Sphere, p: Sphere): Sphere {\r\n        Vec3.copy(out.center, p.center);\r\n        out.radius = p.radius;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a new sphere instance from two points.\r\n     * @zh\r\n     * 从两个点创建一个新的球实例。\r\n     * @param out - @en The sphere created from the two points. @zh 接受操作的球实例。\r\n     * @param minPos - @en The lower point of the sphere. @zh 球的较小点。\r\n     * @param maxPos - @en The upper point of the sphere. @zh 球的较大点。\r\n     * @returns @en The created sphere, same as the `out` parameter. @zh 接受操作的球实例，与 `out` 参数相同。\r\n     */\r\n    public static fromPoints (out: Sphere, minPos: Vec3, maxPos: Vec3): Sphere {\r\n        Vec3.multiplyScalar(out.center, Vec3.add(_v3_tmp, minPos, maxPos), 0.5);\r\n        out.radius = Vec3.subtract(_v3_tmp, maxPos, minPos).length() * 0.5;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the components of a sphere to the given values\r\n     * @zh\r\n     * 将球体的属性设置为给定的值。\r\n     * @param out @en The sphere to set values to. @zh 接受操作的球实例。\r\n     * @param cx @en The X-Coordinate of the center point which relative to the origin.  @zh 相对于原点的中心点的 X 坐标。\r\n     * @param cy @en The Y-Coordinate of the center point which relative to the origin.  @zh 相对于原点的中心点的 Y 坐标。\r\n     * @param cz @en The Z-Coordinate of the center point which relative to the origin.  @zh 相对于原点的中心点的 Z 坐标。\r\n     * @param r @en The radius of the sphere. @zh 要设置的球的半径。\r\n     * @returns @en The sphere to set values to, same as the `out` parameter. @zh 接受操作的实例，与 `out` 相同。\r\n     * @function\r\n     */\r\n    public static set (out: Sphere, cx: number, cy: number, cz: number, r: number): Sphere {\r\n        out.center.x = cx;\r\n        out.center.y = cy;\r\n        out.center.z = cz;\r\n        out.radius = r;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The center of this sphere.\r\n     * @zh\r\n     * 当前球在本地坐标中的中心点。\r\n     */\r\n    protected declare _center: Vec3;\r\n    get center (): Vec3 {\r\n        return this._center;\r\n    }\r\n\r\n    set center (val: Vec3) {\r\n        this._center = val;\r\n    }\r\n\r\n    private declare _radius: number;\r\n\r\n    /**\r\n      * @en\r\n      * The radius of this sphere.\r\n      * @zh\r\n      * 当前球的半径。\r\n      */\r\n    get radius (): number {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius (val: number) {\r\n        this._radius = val;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the type of the shape, always returns `ShapeType.SHAPE_SPHERE`.\r\n     * @zh\r\n     * 获取球的类型，固定返回 `ShapeType.SHAPE_SPHERE`。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    protected readonly _type: number = ShapeType.SHAPE_SPHERE;\r\n\r\n    /**\r\n     * @en\r\n     * Constructs a sphere instance.\r\n     * @zh\r\n     * 构造一个球。\r\n     * @param cx @en The X-Coordinate of the sphere. @zh 该球的世界坐标的 X 坐标。\r\n     * @param cy @en The Y-Coordinate of the sphere. @zh 该球的世界坐标的 Y 坐标。\r\n     * @param cz @en The Z-Coordinate of the sphere. @zh 该球的世界坐标的 Z 坐标。\r\n     * @param r @en The radius of the sphere. @zh 球的半径。\r\n     */\r\n    constructor (cx = 0, cy = 0, cz = 0, r = 1) {\r\n        this._center = new Vec3(cx, cy, cz);\r\n        this._radius = r;\r\n    }\r\n\r\n    public destroy (): void {\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clones a sphere instance.\r\n     * @zh\r\n     * 克隆一个球实例。\r\n     * @returns @en The cloned sphere instance. @zh 克隆的球实例。\r\n     */\r\n    public clone (): Sphere {\r\n        return Sphere.clone(this);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from a sphere to the current sphere.\r\n     * @zh\r\n     * 复制一个球的值到当前球实例中。\r\n     * @param a @en The sphere to copy from. @zh 拷贝的目标。\r\n     */\r\n    public copy (a: Sphere): Sphere {\r\n        return Sphere.copy(this, a);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the bounding points of this sphere.\r\n     * @zh\r\n     * 获取此球体的边界点。\r\n     * @param minPos @en The point with maximum coordinates of the sphere. @zh 当前球实例的最小点。\r\n     * @param maxPos @en The point with minimum coordinates of the sphere. @zh 当前球实例的最大点。\r\n     */\r\n    public getBoundary (minPos: Vec3, maxPos: Vec3): void {\r\n        Vec3.set(minPos, this.center.x - this.radius, this.center.y - this.radius, this.center.z - this.radius);\r\n        Vec3.set(maxPos, this.center.x + this.radius, this.center.y + this.radius, this.center.z + this.radius);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transforms this sphere by a 4x4 matrix and RTS and stores to the `out` parameter.\r\n     * @zh\r\n     * 用一个 4x4 矩阵和一组 RTS 变换此球体，并将结果存储在 `out` 参数中。\r\n     * @param m @en The 4x4 transform matrix. @zh 4x4 变换矩阵。\r\n     * @param pos @en The position part of the transform. @zh 变换的位置部分。\r\n     * @param rot @en The rotation part of the transform. @zh 变换的旋转部分。\r\n     * @param scale @en The scale part of the transform. @zh 变换的缩放部分。\r\n     * @param out @en The sphere which the transform will be applied to. @zh 变换的目标。\r\n     */\r\n    public transform (m: Mat4, pos: Vec3, rot: Quat, scale: Vec3, out: Sphere): void {\r\n        Vec3.transformMat4(out.center, this.center, m);\r\n        out.radius = this.radius * maxComponent(scale);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transforms this sphere by a 4x4 matrix and a quaternion, stores the result to the `out` parameter.\r\n     * @zh\r\n     * 使用一个 4x4 矩阵和一个四元数变换此球体，并将结果存储在 `out` 参数中。\r\n     * @param m @en The 4x4 transform matrix. @zh 4x4 变换矩阵。\r\n     * @param rot @en The rotation part of the transform. @zh 变换的旋转部分。\r\n     * @param out @en The sphere which the transform will be applied to. @zh 变换的目标。\r\n     */\r\n    public translateAndRotate (m: Mat4, rot: Quat, out: Sphere): void {\r\n        Vec3.transformMat4(out.center, this.center, m);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scales this sphere and stores the result to the `out` parameter.\r\n     * @zh\r\n     * 对当前球实例进行缩放处理，并将结果存储在 `out` 参数中。\r\n     * @param scale @en The scale value. @zh 缩放值。\r\n     * @param out @en The sphere which the scale will be applied to. @zh 缩放的目标。\r\n     */\r\n    public setScale (scale: Vec3, out: Sphere): void {\r\n        out.radius = this.radius * maxComponent(scale);\r\n    }\r\n\r\n    /**\r\n     * @en Merges a point to this sphere.\r\n     * @zh 合并一个点到当前球实例中。\r\n     * @param point @en The point to be merged to this sphere. @zh 要合并到当前球实例的点。\r\n     */\r\n    public mergePoint (point: Vec3): void {\r\n        // if sphere.radius Less than 0,\r\n        // Set this point as anchor,\r\n        // And set radius to 0.\r\n        if (this.radius < 0.0) {\r\n            this.center.set(point);\r\n            this.radius = 0.0;\r\n        }\r\n\r\n        Vec3.subtract(_offset, point, this.center);\r\n        const dist = _offset.length();\r\n\r\n        if (dist > this.radius) {\r\n            const half = (dist - this.radius) * 0.5;\r\n            this.radius += half;\r\n            Vec3.multiplyScalar(_offset, _offset, half / dist);\r\n            Vec3.add(this.center, this.center, _offset);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Merges some points to this sphere.\r\n     * @zh 合并一些点到当前球实例中。\r\n     * @param points @en The points to be merged to this sphere. @zh 要合并到当前球实例的点列表。\r\n     */\r\n    public mergePoints (points: Vec3[]): void {\r\n        const length = points.length;\r\n        if (length < 1) return;\r\n\r\n        // Init Invalid Sphere\r\n        this.radius = -1.0;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            this.mergePoint(points[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Merges a AABB to this sphere.\r\n     * @zh 合并一个 AABB 到当前球实例中。\r\n     * @param a @en The AABB instance to be merged to this sphere. @zh 要合并到当前球实例的 AABB 实例。\r\n     */\r\n    public mergeAABB (a: AABB): void {\r\n        a.getBoundary(_min, _max);\r\n\r\n        this.mergePoint(_min);\r\n        this.mergePoint(_max);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EPSILON, Mat3, v3, Vec3 } from '../math';\r\nimport { AABB } from './aabb';\r\nimport { Capsule } from './capsule';\r\nimport * as distance from './distance';\r\nimport { ShapeType } from './enums';\r\nimport { Frustum } from './frustum';\r\nimport { Line } from './line';\r\nimport { OBB } from './obb';\r\nimport { Plane } from './plane';\r\nimport { Ray } from './ray';\r\nimport { Sphere } from './sphere';\r\nimport { Triangle } from './triangle';\r\nimport { IVec3Like } from '../math/type-define';\r\nimport type { RenderingSubMesh }  from '../../asset/assets';\r\nimport type { IRaySubMeshOptions, IRayModelOptions, IRayMeshOptions } from './spec';\r\nimport type { Model } from '../../render-scene/scene';\r\nimport type { Mesh } from '../../3d';\r\n\r\nconst vec3SquaredDistance = Vec3.squaredDistance;\r\nconst vec3Subtract = Vec3.subtract;\r\nconst vec3Dot = Vec3.dot;\r\nconst vec3Set = Vec3.set;\r\nconst vec3Cross = Vec3.cross;\r\nconst vec3MultiplyScalar = Vec3.multiplyScalar;\r\nconst vec3Copy = Vec3.copy;\r\nconst vec3Add = Vec3.add;\r\nconst vec3ScaleAndAdd = Vec3.scaleAndAdd;\r\nconst mathMax = Math.max;\r\nconst mathMin = Math.min;\r\nconst mathAbs = Math.abs;\r\n\r\n/**\r\n * @en\r\n * ray-plane intersect detect.\r\n * @zh\r\n * 射线与平面的相交性检测。\r\n * @param ray @zh 要测试的射线。 @en The ray to test.\r\n * @param plane @zh 要测试的平面。 @en The plane to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst rayPlane = (function () {\r\n    return function (ray: Ray, plane: Plane): number {\r\n        const denom = vec3Dot(ray.d, plane.n);\r\n        if (mathAbs(denom) < Number.EPSILON) { return 0; }\r\n        const d = distance.point_plane(ray.o, plane);\r\n        const t = -d / denom;\r\n        if (t < 0) { return 0; }\r\n        return t;\r\n    };\r\n}());\r\n\r\n// based on http://fileadmin.cs.lth.se/cs/Personal/Tomas_Akenine-Moller/raytri/\r\n/**\r\n * @en\r\n * ray-triangle intersect detect.\r\n * @zh\r\n * 射线与三角形的相交性检测。\r\n * @param ray @zh 要测试的射线。 @en The ray to test.\r\n * @param triangle @zh 用来测试三角形。 @en The triangle to test.\r\n * @param doubleSided @zh 要测试的三角形是否为双面。 @en Indicates whether the triangle to test is double sided.\r\n * @returns @zh 0 或 非 0，0 表示没有相交。@en 0 or not 0, 0 indicates there is no intersection.\r\n */\r\nconst rayTriangle = (function (): (ray: Ray, triangle: Triangle, doubleSided?: boolean) => number {\r\n    const ab = v3();\r\n    const ac = v3();\r\n    const pvec = v3();\r\n    const tvec = v3();\r\n    const qvec = v3();\r\n\r\n    return function (ray: Ray, triangle: Triangle, doubleSided?: boolean): number {\r\n        vec3Subtract(ab, triangle.b, triangle.a);\r\n        vec3Subtract(ac, triangle.c, triangle.a);\r\n\r\n        vec3Cross(pvec, ray.d, ac);\r\n        const det = vec3Dot(ab, pvec);\r\n\r\n        // 1. det < eps && det > -eps && doubleSided\r\n        // 2. det < eps && !doubleSided\r\n        // if true, the ray is parallel to the triangle plane\r\n        if (det < Number.EPSILON && (!doubleSided || det > -Number.EPSILON)) { return 0; }\r\n\r\n        const inv_det = 1 / det;\r\n\r\n        vec3Subtract(tvec, ray.o, triangle.a);\r\n        const u = vec3Dot(tvec, pvec) * inv_det;\r\n        // enlargeCoeff 1.0, compare uvLimits, if true, the ray is outside the triangle\r\n        if (u < 0 || u > 1) { return 0; }\r\n\r\n        vec3Cross(qvec, tvec, ab);\r\n        const v = vec3Dot(ray.d, qvec) * inv_det;\r\n        // if true, the ray is outside the triangle\r\n        if (v < 0 || u + v > 1) { return 0; }\r\n\r\n        const t = vec3Dot(ac, qvec) * inv_det;\r\n        return t < 0 ? 0 : t;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * ray-sphere intersect detect.\r\n * @zh\r\n * 射线和球的相交性检测。\r\n * @param ray @zh 要测试的射线。 @en The ray to test.\r\n * @param sphere @zh 要测试的球。 @en The sphere to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst raySphere = (function (): (ray: Ray, sphere: Sphere) => number {\r\n    const e = v3();\r\n    return function (ray: Ray, sphere: Sphere): number {\r\n        const r = sphere.radius;\r\n        const c = sphere.center;\r\n        const o = ray.o;\r\n        const d = ray.d;\r\n        const rSq = r * r;\r\n        vec3Subtract(e, c, o);\r\n        const eSq = e.lengthSqr();\r\n\r\n        const aLength = vec3Dot(e, d); // assume ray direction already normalized\r\n        const fSq = rSq - (eSq - aLength * aLength);\r\n        if (fSq < 0) { return 0; }\r\n\r\n        const f = Math.sqrt(fSq);\r\n        const t = eSq < rSq ? aLength + f : aLength - f;\r\n        if (t < 0) { return 0; }\r\n        return t;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * ray-aabb intersect detect.\r\n * @zh\r\n * 射线和轴对齐包围盒的相交性检测。\r\n * @param ray @zh 要测试的射线。 @en The ray to test.\r\n * @param aabb @zh 要测试的 AABB。 @en The aabb to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst rayAABB = (function (): (ray: Ray, aabb: AABB) => number {\r\n    const min = v3();\r\n    const max = v3();\r\n    return function (ray: Ray, aabb: AABB): number {\r\n        vec3Subtract(min, aabb.center, aabb.halfExtents);\r\n        vec3Add(max, aabb.center, aabb.halfExtents);\r\n        return rayAABB2(ray, min, max);\r\n    };\r\n}());\r\n\r\nfunction rayAABB2 (ray: Ray, min: IVec3Like, max: IVec3Like): number {\r\n    const o = ray.o; const d = ray.d;\r\n    const ix = 1 / d.x; const iy = 1 / d.y; const iz = 1 / d.z;\r\n    const t1 = (min.x - o.x) * ix;\r\n    const t2 = (max.x - o.x) * ix;\r\n    const t3 = (min.y - o.y) * iy;\r\n    const t4 = (max.y - o.y) * iy;\r\n    const t5 = (min.z - o.z) * iz;\r\n    const t6 = (max.z - o.z) * iz;\r\n    const tmin = mathMax(mathMax(mathMin(t1, t2), mathMin(t3, t4)), mathMin(t5, t6));\r\n    const tmax = mathMin(mathMin(mathMax(t1, t2), mathMax(t3, t4)), mathMax(t5, t6));\r\n    if (tmax < 0 || tmin > tmax) { return 0; }\r\n    return tmin > 0 ? tmin : tmax; // ray origin inside aabb\r\n}\r\n\r\n/**\r\n * @en\r\n * ray-obb intersect detect.\r\n * @zh\r\n * 射线和 OBB 的相交性检测。\r\n * @param ray @zh 要测试的射线。 @en The ray to test.\r\n * @param obb @zh 要测试的 OBB。 @en The OBB to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst rayOBB = (function (): (ray: Ray, obb: OBB) => number {\r\n    let center = v3();\r\n    let o = v3();\r\n    let d = v3();\r\n    const X = v3();\r\n    const Y = v3();\r\n    const Z = v3();\r\n    const p = v3();\r\n    const size = new Array<number>(3);\r\n    const f = new Array<number>(3);\r\n    const e = new Array<number>(3);\r\n    const t = new Array<number>(6);\r\n\r\n    return function (ray: Ray, obb: OBB): number {\r\n        const halfExtents = obb.halfExtents;\r\n        const orientation = obb.orientation;\r\n\r\n        size[0] = halfExtents.x;\r\n        size[1] = halfExtents.y;\r\n        size[2] = halfExtents.z;\r\n        center = obb.center;\r\n        o = ray.o;\r\n        d = ray.d;\r\n\r\n        vec3Set(X, orientation.m00, orientation.m01, orientation.m02);\r\n        vec3Set(Y, orientation.m03, orientation.m04, orientation.m05);\r\n        vec3Set(Z, orientation.m06, orientation.m07, orientation.m08);\r\n        vec3Subtract(p, center, o);\r\n\r\n        // The cos values of the ray on the X, Y, Z\r\n        f[0] = vec3Dot(X, d);\r\n        f[1] = vec3Dot(Y, d);\r\n        f[2] = vec3Dot(Z, d);\r\n\r\n        // The projection length of P on X, Y, Z\r\n        e[0] = vec3Dot(X, p);\r\n        e[1] = vec3Dot(Y, p);\r\n        e[2] = vec3Dot(Z, p);\r\n\r\n        for (let i = 0; i < 3; ++i) {\r\n            if (f[i] === 0) {\r\n                if (-e[i] - size[i] > 0 || -e[i] + size[i] < 0) {\r\n                    return 0;\r\n                }\r\n                // Avoid div by 0!\r\n                f[i] = 0.0000001;\r\n            }\r\n            // min\r\n            t[i * 2 + 0] = (e[i] + size[i]) / f[i];\r\n            // max\r\n            t[i * 2 + 1] = (e[i] - size[i]) / f[i];\r\n        }\r\n        const tmin = mathMax(\r\n            mathMax(\r\n                mathMin(t[0], t[1]),\r\n                mathMin(t[2], t[3]),\r\n            ),\r\n            mathMin(t[4], t[5]),\r\n        );\r\n        const tmax = mathMin(\r\n            mathMin(\r\n                mathMax(t[0], t[1]),\r\n                mathMax(t[2], t[3]),\r\n            ),\r\n            mathMax(t[4], t[5]),\r\n        );\r\n        if (tmax < 0 || tmin > tmax) {\r\n            return 0;\r\n        }\r\n\r\n        return tmin > 0 ? tmin : tmax; // ray origin inside aabb\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * ray-capsule intersect detect.\r\n * @zh\r\n * 射线和胶囊体的相交性检测。\r\n * @param ray @zh 要测试的射线。 @en The ray to test.\r\n * @param capsule @zh 要测试的胶囊体。 @en The capsule to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst rayCapsule = (function (): (ray: Ray, capsule: Capsule) => number {\r\n    const v3_0 = v3();\r\n    const v3_1 = v3();\r\n    const v3_2 = v3();\r\n    const v3_3 = v3();\r\n    const v3_4 = v3();\r\n    const v3_5 = v3();\r\n    const v3_6 = v3();\r\n    const sphere_0 = new Sphere();\r\n    return function (ray: Ray, capsule: Capsule): number {\r\n        const A = capsule.ellipseCenter0;\r\n        const B = capsule.ellipseCenter1;\r\n        const BA = vec3Subtract(v3_1, B, A);\r\n        if (BA.length() < EPSILON) {\r\n            // deduce to sphere\r\n            sphere_0.radius = capsule.radius;\r\n            sphere_0.center.set(capsule.ellipseCenter0);\r\n            return intersect.raySphere(ray, sphere_0);\r\n        }\r\n\r\n        const O = ray.o;\r\n        const OA = vec3Subtract(v3_2, O, A);\r\n        const vRayNorm = Vec3.normalize(v3_0, ray.d);\r\n        const VxBA = vec3Cross(v3_3, vRayNorm, BA);\r\n        const a = VxBA.lengthSqr();\r\n        if (a === 0) {\r\n            sphere_0.radius = capsule.radius;\r\n            const BO = vec3Subtract(v3_4, B, O);\r\n            if (OA.lengthSqr() < BO.lengthSqr()) {\r\n                sphere_0.center.set(A);\r\n            } else {\r\n                sphere_0.center.set(B);\r\n            }\r\n            return intersect.raySphere(ray, sphere_0);\r\n        }\r\n\r\n        const OAxBA = vec3Cross(v3_4, OA, BA);\r\n        const ab2 = BA.lengthSqr();\r\n        const b = 2 * vec3Dot(VxBA, OAxBA);\r\n        const radiusSqr = capsule.radius * capsule.radius;\r\n        const c = OAxBA.lengthSqr() - (radiusSqr * ab2);\r\n        const d = b * b - 4 * a * c;\r\n\r\n        if (d < 0) { return 0; }\r\n\r\n        const t = (-b - Math.sqrt(d)) / (2 * a);\r\n        if (t < 0) {\r\n            sphere_0.radius = capsule.radius;\r\n            const BO = vec3Subtract(v3_5, B, O);\r\n            if (OA.lengthSqr() < BO.lengthSqr()) {\r\n                sphere_0.center.set(capsule.ellipseCenter0);\r\n            } else {\r\n                sphere_0.center.set(capsule.ellipseCenter1);\r\n            }\r\n            return intersect.raySphere(ray, sphere_0);\r\n        } else {\r\n            // Limit intersection between the bounds of the cylinder's end caps.\r\n            const iPos = vec3ScaleAndAdd(v3_5, ray.o, vRayNorm, t);\r\n            const iPosLen = vec3Subtract(v3_6, iPos, A);\r\n            const tLimit = vec3Dot(iPosLen, BA) / ab2;\r\n\r\n            if (tLimit >= 0 && tLimit <= 1) {\r\n                return t;\r\n            } else if (tLimit < 0) {\r\n                sphere_0.radius = capsule.radius;\r\n                sphere_0.center.set(capsule.ellipseCenter0);\r\n                return intersect.raySphere(ray, sphere_0);\r\n            } else if (tLimit > 1) {\r\n                sphere_0.radius = capsule.radius;\r\n                sphere_0.center.set(capsule.ellipseCenter1);\r\n                return intersect.raySphere(ray, sphere_0);\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * line-plane intersect detect.\r\n * @zh\r\n * 线段与平面的相交性检测。\r\n * @param line @zh 要测试的线段。 @en The line to test.\r\n * @param plane @zh 要测试的平面。 @en The plane to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst linePlane = (function (): (line: Line, plane: Plane) => number {\r\n    const ab = v3();\r\n\r\n    return function (line: Line, plane: Plane): number {\r\n        vec3Subtract(ab, line.e, line.s);\r\n        const t = -distance.point_plane(line.s, plane) / vec3Dot(ab, plane.n);\r\n        if (t < 0 || t > 1) { return 0; }\r\n        return t;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * line-triangle intersect detect.\r\n * @zh\r\n * 线段与三角形的相交性检测。\r\n * @param line @zh 线段 @en The line to test.\r\n * @param triangle @zh 三角形 @en The triangle to test.\r\n * @param outPt @zh 可选，相交点 @en Optional out param, indicates the intersection point.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst lineTriangle = (function (): (line: Line, triangle: Triangle, outPt?: Vec3) => number {\r\n    const ab = v3();\r\n    const ac = v3();\r\n    const qp = v3();\r\n    const ap = v3();\r\n    const n = v3();\r\n    const e = v3();\r\n\r\n    return function (line: Line, triangle: Triangle, outPt?: Vec3): number {\r\n        vec3Subtract(ab, triangle.b, triangle.a);\r\n        vec3Subtract(ac, triangle.c, triangle.a);\r\n        vec3Subtract(qp, line.s, line.e);\r\n\r\n        vec3Cross(n, ab, ac);\r\n        const det = vec3Dot(qp, n);\r\n\r\n        if (det <= 0.0) {\r\n            return 0;\r\n        }\r\n\r\n        vec3Subtract(ap, line.s, triangle.a);\r\n        const t = vec3Dot(ap, n);\r\n        if (t < 0 || t > det) {\r\n            return 0;\r\n        }\r\n\r\n        vec3Cross(e, qp, ap);\r\n        let v = vec3Dot(ac, e);\r\n        if (v < 0 || v > det) {\r\n            return 0;\r\n        }\r\n\r\n        let w = -vec3Dot(ab, e);\r\n        if (w < 0.0 || v + w > det) {\r\n            return 0;\r\n        }\r\n\r\n        if (outPt) {\r\n            const invDet = 1.0 / det;\r\n            v *= invDet;\r\n            w *= invDet;\r\n            const u = 1.0 - v - w;\r\n\r\n            // outPt = u*a + v*d + w*c;\r\n            vec3Set(\r\n                outPt,\r\n                triangle.a.x * u + triangle.b.x * v + triangle.c.x * w,\r\n                triangle.a.y * u + triangle.b.y * v + triangle.c.y * w,\r\n                triangle.a.z * u + triangle.b.z * v + triangle.c.z * w,\r\n            );\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}());\r\n\r\nconst r_t = new Ray();\r\n/**\r\n * @en\r\n * line-aabb intersect detect.\r\n * @zh\r\n * 线段与轴对齐包围盒的相交性检测\r\n * @param line @zh 线段 @en The line to test\r\n * @param aabb @zh 轴对齐包围盒 @en The aabb to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nfunction lineAABB (line: Line, aabb: AABB): number {\r\n    r_t.o.set(line.s);\r\n    vec3Subtract(r_t.d, line.e, line.s);\r\n    r_t.d.normalize();\r\n    const min = rayAABB(r_t, aabb);\r\n    const len = line.length();\r\n    if (min <= len) {\r\n        return min;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * line-obb intersect detect.\r\n * @zh\r\n * 线段与OBB的相交性检测。\r\n * @param line @zh 线段 @en The line to test.\r\n * @param obb @zh OBB @en The OBB to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nfunction lineOBB (line: Line, obb: OBB): number {\r\n    r_t.o.set(line.s);\r\n    vec3Subtract(r_t.d, line.e, line.s);\r\n    r_t.d.normalize();\r\n    const min = rayOBB(r_t, obb);\r\n    const len = line.length();\r\n    if (min <= len) {\r\n        return min;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * line-sphere intersect detect.\r\n * @zh\r\n * 线段与球的相交性检测\r\n * @param line @zh 线段 @en The line to test\r\n * @param sphere @zh 球 @en The sphere to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nfunction lineSphere (line: Line, sphere: Sphere): number {\r\n    r_t.o.set(line.s);\r\n    vec3Subtract(r_t.d, line.e, line.s);\r\n    r_t.d.normalize();\r\n    const min = raySphere(r_t, sphere);\r\n    const len = line.length();\r\n    if (min <= len) {\r\n        return min;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * aabb-aabb intersect detect.\r\n * @zh\r\n * 轴对齐包围盒和轴对齐包围盒的相交性检测。\r\n * @param aabb1 @zh 轴对齐包围盒1 @en aabb 1 to test\r\n * @param aabb2 @zh 轴对齐包围盒2 @en aabb 2 to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst aabbWithAABB = (function (): (aabb1: AABB, aabb2: AABB) => boolean {\r\n    const aMin = v3();\r\n    const aMax = v3();\r\n    const bMin = v3();\r\n    const bMax = v3();\r\n    return function (aabb1: AABB, aabb2: AABB): boolean {\r\n        vec3Subtract(aMin, aabb1.center, aabb1.halfExtents);\r\n        vec3Add(aMax, aabb1.center, aabb1.halfExtents);\r\n        vec3Subtract(bMin, aabb2.center, aabb2.halfExtents);\r\n        vec3Add(bMax, aabb2.center, aabb2.halfExtents);\r\n        return (aMin.x <= bMax.x && aMax.x >= bMin.x)\r\n            && (aMin.y <= bMax.y && aMax.y >= bMin.y)\r\n            && (aMin.z <= bMax.z && aMax.z >= bMin.z);\r\n    };\r\n}());\r\n\r\nfunction getAABBVertices (min: Vec3, max: Vec3, out: Vec3[]): void {\r\n    vec3Set(out[0], min.x, max.y, max.z);\r\n    vec3Set(out[1], min.x, max.y, min.z);\r\n    vec3Set(out[2], min.x, min.y, max.z);\r\n    vec3Set(out[3], min.x, min.y, min.z);\r\n    vec3Set(out[4], max.x, max.y, max.z);\r\n    vec3Set(out[5], max.x, max.y, min.z);\r\n    vec3Set(out[6], max.x, min.y, max.z);\r\n    vec3Set(out[7], max.x, min.y, min.z);\r\n}\r\n\r\nfunction getOBBVertices (c: Vec3, e: Vec3, a1: Vec3, a2: Vec3, a3: Vec3, out: Vec3[]): void {\r\n    vec3Set(\r\n        out[0],\r\n        c.x + a1.x * e.x + a2.x * e.y + a3.x * e.z,\r\n        c.y + a1.y * e.x + a2.y * e.y + a3.y * e.z,\r\n        c.z + a1.z * e.x + a2.z * e.y + a3.z * e.z,\r\n    );\r\n    vec3Set(\r\n        out[1],\r\n        c.x - a1.x * e.x + a2.x * e.y + a3.x * e.z,\r\n        c.y - a1.y * e.x + a2.y * e.y + a3.y * e.z,\r\n        c.z - a1.z * e.x + a2.z * e.y + a3.z * e.z,\r\n    );\r\n    vec3Set(\r\n        out[2],\r\n        c.x + a1.x * e.x - a2.x * e.y + a3.x * e.z,\r\n        c.y + a1.y * e.x - a2.y * e.y + a3.y * e.z,\r\n        c.z + a1.z * e.x - a2.z * e.y + a3.z * e.z,\r\n    );\r\n    vec3Set(\r\n        out[3],\r\n        c.x + a1.x * e.x + a2.x * e.y - a3.x * e.z,\r\n        c.y + a1.y * e.x + a2.y * e.y - a3.y * e.z,\r\n        c.z + a1.z * e.x + a2.z * e.y - a3.z * e.z,\r\n    );\r\n    vec3Set(\r\n        out[4],\r\n        c.x - a1.x * e.x - a2.x * e.y - a3.x * e.z,\r\n        c.y - a1.y * e.x - a2.y * e.y - a3.y * e.z,\r\n        c.z - a1.z * e.x - a2.z * e.y - a3.z * e.z,\r\n    );\r\n    vec3Set(\r\n        out[5],\r\n        c.x + a1.x * e.x - a2.x * e.y - a3.x * e.z,\r\n        c.y + a1.y * e.x - a2.y * e.y - a3.y * e.z,\r\n        c.z + a1.z * e.x - a2.z * e.y - a3.z * e.z,\r\n    );\r\n    vec3Set(\r\n        out[6],\r\n        c.x - a1.x * e.x + a2.x * e.y - a3.x * e.z,\r\n        c.y - a1.y * e.x + a2.y * e.y - a3.y * e.z,\r\n        c.z - a1.z * e.x + a2.z * e.y - a3.z * e.z,\r\n    );\r\n    vec3Set(\r\n        out[7],\r\n        c.x - a1.x * e.x - a2.x * e.y + a3.x * e.z,\r\n        c.y - a1.y * e.x - a2.y * e.y + a3.y * e.z,\r\n        c.z - a1.z * e.x - a2.z * e.y + a3.z * e.z,\r\n    );\r\n}\r\n\r\nfunction getInterval (vertices: IVec3Like[], axis: Vec3): number[] {\r\n    let min = vec3Dot(axis, vertices[0]);\r\n    let max = min;\r\n    for (let i = 1; i < 8; ++i) {\r\n        const projection = vec3Dot(axis, vertices[i]);\r\n        min = (projection < min) ? projection : min;\r\n        max = (projection > max) ? projection : max;\r\n    }\r\n    return [min, max];\r\n}\r\n\r\n/**\r\n * @en\r\n * aabb-obb intersect detect.\r\n * @zh\r\n * 轴对齐包围盒和OBB的相交性检测。\r\n * @param aabb @zh 轴对齐包围盒 @en The aabb to test\r\n * @param obb @zh OBB @en The OBB to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst aabbWithOBB = (function (): (aabb: AABB, obb: OBB) => number {\r\n    const test = new Array<Vec3>(15);\r\n    for (let i = 0; i < 15; i++) {\r\n        test[i] = v3();\r\n    }\r\n    const vertices = new Array<Vec3>(8);\r\n    const vertices2 = new Array<Vec3>(8);\r\n    for (let i = 0; i < 8; i++) {\r\n        vertices[i] = v3();\r\n        vertices2[i] = v3();\r\n    }\r\n    const min = v3();\r\n    const max = v3();\r\n    return function (aabb: AABB, obb: OBB): number {\r\n        const orientation = obb.orientation;\r\n        vec3Set(test[0], 1, 0, 0);\r\n        vec3Set(test[1], 0, 1, 0);\r\n        vec3Set(test[2], 0, 0, 1);\r\n        vec3Set(test[3], orientation.m00, orientation.m01, orientation.m02);\r\n        vec3Set(test[4], orientation.m03, orientation.m04, orientation.m05);\r\n        vec3Set(test[5], orientation.m06, orientation.m07, orientation.m08);\r\n\r\n        for (let i = 0; i < 3; ++i) { // Fill out rest of axis\r\n            vec3Cross(test[6 + i * 3 + 0], test[i], test[3]);\r\n            vec3Cross(test[6 + i * 3 + 1], test[i], test[4]);\r\n            vec3Cross(test[6 + i * 3 + 1], test[i], test[5]);\r\n        }\r\n\r\n        vec3Subtract(min, aabb.center, aabb.halfExtents);\r\n        vec3Add(max, aabb.center, aabb.halfExtents);\r\n        getAABBVertices(min, max, vertices);\r\n        getOBBVertices(obb.center, obb.halfExtents, test[3], test[4], test[5], vertices2);\r\n\r\n        for (let j = 0; j < 15; ++j) {\r\n            const a = getInterval(vertices, test[j]);\r\n            const b = getInterval(vertices2, test[j]);\r\n            if (b[0] > a[1] || a[0] > b[1]) {\r\n                return 0; // Seperating axis found\r\n            }\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * aabb-plane intersect detect.\r\n * @zh\r\n * 轴对齐包围盒和平面的相交性检测。\r\n * @param aabb @zh 轴对齐包围盒 @en The aabb to test\r\n * @param plane @zh 平面 @en The plane to test\r\n * @returns @zh 检测结果, 包含为 -1, 不包含为 0, 相交为 1 @en Test result, inside(back) = -1, outside(front) = 0, intersect = 1\r\n */\r\nconst aabbPlane = function (aabb: AABB, plane: Plane): number {\r\n    const aabbHalfExtents = aabb.halfExtents;\r\n    const planeN = plane.n;\r\n    const r = aabbHalfExtents.x * mathAbs(planeN.x)\r\n        + aabbHalfExtents.y * mathAbs(planeN.y)\r\n        + aabbHalfExtents.z * mathAbs(planeN.z);\r\n    const dot = vec3Dot(planeN, aabb.center);\r\n    if (dot + r < plane.d) { return -1; } else if (dot - r > plane.d) { return 0; }\r\n    return 1;\r\n};\r\n\r\n/**\r\n * @en\r\n * aabb-frustum intersect detect, faster but has false positive corner cases.\r\n * @zh\r\n * 轴对齐包围盒和锥台相交性检测，速度快，但有错误情况。\r\n * @param aabb @zh 轴对齐包围盒 @en The aabb to test\r\n * @param frustum @zh 锥台 @en The frustum to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst aabbFrustum = function (aabb: AABB, frustum: Readonly<Frustum>): number {\r\n    const frustumPlanes = frustum.planes;\r\n    for (let i = 0; i < frustumPlanes.length; i++) {\r\n        // frustum plane normal points to the inside\r\n        if (aabbPlane(aabb, frustumPlanes[i]) === -1) {\r\n            return 0;\r\n        }\r\n    } // completely outside\r\n    return 1;\r\n};\r\n\r\n/**\r\n * @en\r\n * aabb-frustum intersect detect, faster but false while frustum is completely inside the aabb.\r\n * @zh\r\n * 轴对齐包围盒和锥台的相交性检测。速度快，但是当锥台完全在aabb中时就会判断出错。\r\n * @param {AABB} aabb 轴对齐包围盒\r\n * @param {Frustum} frustum 锥台\r\n * @returns {number} aabb completely inside the frustum = 1, otherwise = 0\r\n */\r\nconst aabbFrustumCompletelyInside = function (aabb: AABB, frustum: Readonly<Frustum>): number {\r\n    const frustumPlanes = frustum.planes;\r\n    for (let i = 0; i < frustumPlanes.length; i++) {\r\n        // frustum plane normal points to the inside\r\n        if (aabbPlane(aabb, frustumPlanes[i]) !== 0) {\r\n            return 0;\r\n        }\r\n    } // completely inside\r\n    return 1;\r\n};\r\n\r\n// https://cesium.com/blog/2017/02/02/tighter-frustum-culling-and-why-you-may-want-to-disregard-it/\r\n/**\r\n * @en\r\n * aabb-frustum intersect, handles most of the false positives correctly.\r\n * @zh\r\n * 轴对齐包围盒和锥台相交性检测，正确处理大多数错误情况。\r\n * @param aabb @zh 轴对齐包围盒 @en The aabb to test\r\n * @param frustum @zh 锥台 @en The frustum to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst aabbFrustumAccurate = (function (): (aabb: AABB, frustum: Frustum) => number {\r\n    const tmp = new Array(8);\r\n    let out1 = 0;\r\n    let out2 = 0;\r\n    for (let i = 0; i < tmp.length; i++) {\r\n        tmp[i] = v3();\r\n    }\r\n    return function (aabb: AABB, frustum: Frustum): number {\r\n        const frustumVertices = frustum.vertices;\r\n        const aabbHalfExtents = aabb.halfExtents;\r\n        let result = 0;\r\n        let intersects = false;\r\n        // 1. aabb inside/outside frustum test\r\n        for (let i = 0; i < frustum.planes.length; i++) {\r\n            result = aabbPlane(aabb, frustum.planes[i]);\r\n            // frustum plane normal points to the inside\r\n            if (result === -1) return 0; // completely outside\r\n            else if (result === 1) { intersects = true; }\r\n        }\r\n        if (!intersects) { return 1; } // completely inside\r\n        // in case of false positives\r\n        // 2. frustum inside/outside aabb test\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            vec3Subtract(tmp[i], frustumVertices[i], aabb.center);\r\n        }\r\n        out1 = 0;\r\n        out2 = 0;\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            if (tmp[i].x > aabbHalfExtents.x) { out1++; } else if (tmp[i].x < -aabbHalfExtents.x) { out2++; }\r\n        }\r\n        if (out1 === frustumVertices.length || out2 === frustumVertices.length) { return 0; }\r\n        out1 = 0; out2 = 0;\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            if (tmp[i].y > aabbHalfExtents.y) { out1++; } else if (tmp[i].y < -aabbHalfExtents.y) { out2++; }\r\n        }\r\n        if (out1 === frustumVertices.length || out2 === frustumVertices.length) { return 0; }\r\n        out1 = 0; out2 = 0;\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            if (tmp[i].z > aabbHalfExtents.z) { out1++; } else if (tmp[i].z < -aabbHalfExtents.z) { out2++; }\r\n        }\r\n        if (out1 === frustumVertices.length || out2 === frustumVertices.length) { return 0; }\r\n        return 1;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * Checks whether the OBB contains the point.\r\n * @zh\r\n * OBB 和点的相交性检测。\r\n * @param obb @zh 参与测试的 OBB。 @en The OBB to test.\r\n * @param point @zh 参与测试的点。 @en The point to test.\r\n * @returns @zh 是否相交 @en The value indicates if there is an intersection.\r\n */\r\nconst obbPoint = (function (): (obb: OBB, point: Vec3) => boolean {\r\n    const tmp = v3();\r\n    const m3 = new Mat3();\r\n    const lessThan = function (a: Vec3, b: Vec3): boolean { return mathAbs(a.x) < b.x && mathAbs(a.y) < b.y && mathAbs(a.z) < b.z; };\r\n    return function (obb: OBB, point: Vec3): boolean {\r\n        vec3Subtract(tmp, point, obb.center);\r\n        Vec3.transformMat3(tmp, tmp, Mat3.transpose(m3, obb.orientation));\r\n        return lessThan(tmp, obb.halfExtents);\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * obb-plane intersect detect.\r\n * @zh\r\n * OBB 和平面的相交性检测。\r\n * @param obb @zh OBB @en The OBB to test\r\n * @param plane @zh 平面 @en The plane to test\r\n * @returns @zh 检测结果, 包含为 -1, 不包含为 0, 相交为 1 @en Test result, inside(back) = -1, outside(front) = 0, intersect = 1\r\n */\r\nconst obbPlane = (function (): (obb: OBB, plane: Plane) => number {\r\n    const absDot = function (n: Vec3, x: number, y: number, z: number): number {\r\n        return mathAbs(n.x * x + n.y * y + n.z * z);\r\n    };\r\n    return function (obb: OBB, plane: Plane): number {\r\n        const obbOrientation = obb.orientation;\r\n        const obbHalfExtents = obb.halfExtents;\r\n        const planeN = plane.n;\r\n        const planeD = plane.d;\r\n        // Real-Time Collision Detection, Christer Ericson, p. 163.\r\n        const r = obbHalfExtents.x * absDot(planeN, obbOrientation.m00, obbOrientation.m01, obbOrientation.m02)\r\n            + obbHalfExtents.y * absDot(planeN, obbOrientation.m03, obbOrientation.m04, obbOrientation.m05)\r\n            + obbHalfExtents.z * absDot(planeN, obbOrientation.m06, obbOrientation.m07, obbOrientation.m08);\r\n\r\n        const dot = vec3Dot(planeN, obb.center);\r\n        if (dot + r < planeD) { return -1; } else if (dot - r > planeD) { return 0; }\r\n        return 1;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * OBB-frustum intersect, faster but has false positive corner cases.\r\n * @zh\r\n * OBB 和锥台相交性检测，速度快，但有错误情况。\r\n * @param obb @zh OBB @en The OBB to test.\r\n * @param frustum @zh 锥台 @en The frustum to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst obbFrustum = function (obb: OBB, frustum: Frustum): number {\r\n    const frustumPlanes = frustum.planes;\r\n    for (let i = 0; i < frustumPlanes.length; i++) {\r\n        // frustum plane normal points to the inside\r\n        if (obbPlane(obb, frustumPlanes[i]) === -1) {\r\n            return 0;\r\n        }\r\n    } // completely outside\r\n    return 1;\r\n};\r\n\r\n// https://cesium.com/blog/2017/02/02/tighter-frustum-culling-and-why-you-may-want-to-disregard-it/\r\n/**\r\n * @en\r\n * obb-frustum intersect, handles most of the false positives correctly.\r\n * @zh\r\n * OBB 和锥台相交性检测，正确处理大多数错误情况。\r\n * @param obb @zh OBB @en The OBB to test\r\n * @param frustum @zh 锥台 @en The frustum to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst obbFrustumAccurate = (function (): (obb: OBB, frustum: Frustum) => number {\r\n    const tmp = new Array<Vec3>(8);\r\n    let dist = 0; let out1 = 0; let out2 = 0;\r\n    for (let i = 0; i < tmp.length; i++) {\r\n        tmp[i] = v3();\r\n    }\r\n    const dot = function (n: Vec3, x: number, y: number, z: number): number {\r\n        return n.x * x + n.y * y + n.z * z;\r\n    };\r\n    return function (obb: OBB, frustum: Frustum): number {\r\n        const obbOrientation = obb.orientation;\r\n        const obbHalfExtents = obb.halfExtents;\r\n        const frustumVertices = frustum.vertices;\r\n        const frustumPlanes = frustum.planes;\r\n        let result = 0;\r\n        let intersects = false;\r\n        // 1. obb inside/outside frustum test\r\n        for (let i = 0; i < frustumPlanes.length; i++) {\r\n            result = obbPlane(obb, frustumPlanes[i]);\r\n            // frustum plane normal points to the inside\r\n            if (result === -1) return 0; // completely outside\r\n            else if (result === 1) { intersects = true; }\r\n        }\r\n        if (!intersects) { return 1; } // completely inside\r\n        // in case of false positives\r\n        // 2. frustum inside/outside obb test\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            vec3Subtract(tmp[i], frustumVertices[i], obb.center);\r\n        }\r\n        out1 = 0, out2 = 0;\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            dist = dot(tmp[i], obbOrientation.m00, obbOrientation.m01, obbOrientation.m02);\r\n            if (dist > obbHalfExtents.x) { out1++; } else if (dist < -obbHalfExtents.x) { out2++; }\r\n        }\r\n        if (out1 === frustumVertices.length || out2 === frustumVertices.length) { return 0; }\r\n        out1 = 0; out2 = 0;\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            dist = dot(tmp[i], obbOrientation.m03, obbOrientation.m04, obbOrientation.m05);\r\n            if (dist > obbHalfExtents.y) { out1++; } else if (dist < -obbHalfExtents.y) { out2++; }\r\n        }\r\n        if (out1 === frustumVertices.length || out2 === frustumVertices.length) { return 0; }\r\n        out1 = 0; out2 = 0;\r\n        for (let i = 0; i < frustumVertices.length; i++) {\r\n            dist = dot(tmp[i], obbOrientation.m06, obbOrientation.m07, obbOrientation.m08);\r\n            if (dist > obbHalfExtents.z) { out1++; } else if (dist < -obbHalfExtents.z) { out2++; }\r\n        }\r\n        if (out1 === frustumVertices.length || out2 === frustumVertices.length) { return 0; }\r\n        return 1;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * obb-obb intersect detect.\r\n * @zh\r\n * OBB 和OBB的相交性检测。\r\n * @param obb1 @zh OBB1 @en Obb 1 to test\r\n * @param obb2 @zh OBB2 @en Obb 2 to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst obbWithOBB = (function (): (obb1: OBB, obb2: OBB) => number {\r\n    const test = new Array<Vec3>(15);\r\n    for (let i = 0; i < 15; i++) {\r\n        test[i] = v3();\r\n    }\r\n\r\n    const vertices = new Array<Vec3>(8);\r\n    const vertices2 = new Array<Vec3>(8);\r\n    for (let i = 0; i < 8; i++) {\r\n        vertices[i] = v3();\r\n        vertices2[i] = v3();\r\n    }\r\n\r\n    return function (obb1: OBB, obb2: OBB): number {\r\n        const obb1Orientation = obb1.orientation;\r\n        const obb2Orientation = obb2.orientation;\r\n        vec3Set(test[0], obb1Orientation.m00, obb1Orientation.m01, obb1Orientation.m02);\r\n        vec3Set(test[1], obb1Orientation.m03, obb1Orientation.m04, obb1Orientation.m05);\r\n        vec3Set(test[2], obb1Orientation.m06, obb1Orientation.m07, obb1Orientation.m08);\r\n\r\n        vec3Set(test[3], obb2Orientation.m00, obb2Orientation.m01, obb2Orientation.m02);\r\n        vec3Set(test[4], obb2Orientation.m03, obb2Orientation.m04, obb2Orientation.m05);\r\n        vec3Set(test[5], obb2Orientation.m06, obb2Orientation.m07, obb2Orientation.m08);\r\n\r\n        for (let i = 0; i < 3; ++i) { // Fill out rest of axis\r\n            vec3Cross(test[6 + i * 3 + 0], test[i], test[3]);\r\n            vec3Cross(test[6 + i * 3 + 1], test[i], test[4]);\r\n            vec3Cross(test[6 + i * 3 + 2], test[i], test[5]);\r\n        }\r\n\r\n        getOBBVertices(obb1.center, obb1.halfExtents, test[0], test[1], test[2], vertices);\r\n        getOBBVertices(obb2.center, obb2.halfExtents, test[3], test[4], test[5], vertices2);\r\n\r\n        for (let i = 0; i < 15; ++i) {\r\n            const a = getInterval(vertices, test[i]);\r\n            const b = getInterval(vertices2, test[i]);\r\n            if (b[0] > a[1] || a[0] > b[1]) {\r\n                return 0; // Seperating axis found\r\n            }\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}());\r\n\r\n// https://github.com/diku-dk/bvh-tvcg18/blob/1fd3348c17bc8cf3da0b4ae60fdb8f2aa90a6ff0/FOUNDATION/GEOMETRY/GEOMETRY/include/overlap/geometry_overlap_obb_capsule.h\r\n/**\r\n * @en\r\n * OBB-capsule intersect detect.\r\n * @zh\r\n * OBB 和胶囊体的相交性检测。\r\n * @param obb @zh OBB @en The OBB to test.\r\n * @param capsule @zh 胶囊体 @en The capsule to test.\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.\r\n */\r\nconst obbCapsule = (function (): (obb: OBB, capsule: Capsule) => boolean | 1 | 0 {\r\n    const sphere_0 = new Sphere();\r\n    const v3_0 = v3();\r\n    const v3_1 = v3();\r\n    const v3_2 = v3();\r\n    const v3_verts8 = new Array<Vec3>(8);\r\n    for (let i = 0; i < 8; i++) { v3_verts8[i] = v3(); }\r\n    const v3_axis8 = new Array<Vec3>(8);\r\n    for (let i = 0; i < 8; i++) { v3_axis8[i] = v3(); }\r\n    return function (obb: OBB, capsule: Capsule): boolean | 1 | 0 {\r\n        const capsuleEllipseCenter0 = capsule.ellipseCenter0;\r\n        const capsuleEllipseCenter1 = capsule.ellipseCenter1;\r\n        const capsuleRadius = capsule.radius;\r\n        const h = vec3SquaredDistance(capsuleEllipseCenter0, capsuleEllipseCenter1);\r\n        if (h === 0) {\r\n            sphere_0.radius = capsule.radius;\r\n            sphere_0.center.set(capsuleEllipseCenter0);\r\n            return intersect.sphereOBB(sphere_0, obb);\r\n        } else {\r\n            const orientation = obb.orientation;\r\n            v3_0.x = orientation.m00;\r\n            v3_0.y = orientation.m01;\r\n            v3_0.z = orientation.m02;\r\n            v3_1.x = orientation.m03;\r\n            v3_1.y = orientation.m04;\r\n            v3_1.z = orientation.m05;\r\n            v3_2.x = orientation.m06;\r\n            v3_2.y = orientation.m07;\r\n            v3_2.z = orientation.m08;\r\n            getOBBVertices(obb.center, obb.halfExtents, v3_0, v3_1, v3_2, v3_verts8);\r\n\r\n            const axes = v3_axis8;\r\n            const a0 = vec3Copy(axes[0], v3_0);\r\n            const a1 = vec3Copy(axes[1], v3_1);\r\n            const a2 = vec3Copy(axes[2], v3_2);\r\n            const C = vec3Subtract(axes[3], capsule.center, obb.center);\r\n            C.normalize();\r\n            const B = vec3Subtract(axes[4], capsuleEllipseCenter0, capsuleEllipseCenter1);\r\n            B.normalize();\r\n            vec3Cross(axes[5], a0, B);\r\n            vec3Cross(axes[6], a1, B);\r\n            vec3Cross(axes[7], a2, B);\r\n\r\n            for (let i = 0; i < 8; ++i) {\r\n                const a = getInterval(v3_verts8, axes[i]);\r\n                const d0 = vec3Dot(axes[i], capsuleEllipseCenter0);\r\n                const d1 = vec3Dot(axes[i], capsuleEllipseCenter1);\r\n                const max_d = mathMax(d0, d1);\r\n                const min_d = mathMin(d0, d1);\r\n                const d_min = min_d - capsuleRadius;\r\n                const d_max = max_d + capsuleRadius;\r\n                if (d_min > a[1] || a[0] > d_max) {\r\n                    return 0; // Seperating axis found\r\n                }\r\n            }\r\n            return 1;\r\n        }\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * sphere-plane intersect, not necessarily faster than obb-plane,due to the length calculation of the\r\n * plane normal to factor out the unnomalized plane distance.\r\n * @zh\r\n * 球与平面的相交性检测。\r\n * @param sphere @zh 球 @en The sphere to test\r\n * @param plane @zh 平面 @en The plane to test\r\n * @returns @zh 检测结果, 包含为 -1, 不包含为 0, 相交为 1 @en Test result, inside(back) = -1, outside(front) = 0, intersect = 1\r\n */\r\nconst spherePlane = function (sphere: Sphere, plane: Plane): number {\r\n    const dot = vec3Dot(plane.n, sphere.center);\r\n    const r = sphere.radius * plane.n.length();\r\n    if (dot + r < plane.d) { return -1; } else if (dot - r > plane.d) { return 0; }\r\n    return 1;\r\n};\r\n\r\n/**\r\n * @en\r\n * sphere-frustum intersect, faster but has false positive corner cases.\r\n * @zh\r\n * 球和锥台的相交性检测，速度快，但有错误情况。\r\n * @param sphere @zh 球 @en The sphere to test\r\n * @param frustum @zh 锥台 @en The frustum to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst sphereFrustum = function (sphere: Sphere, frustum: Frustum): number {\r\n    const frustumPlanes = frustum.planes;\r\n    for (let i = 0; i < frustumPlanes.length; i++) {\r\n        // frustum plane normal points to the inside\r\n        if (spherePlane(sphere, frustumPlanes[i]) === -1) {\r\n            return 0;\r\n        }\r\n    } // completely outside\r\n    return 1;\r\n};\r\n\r\n// https://stackoverflow.com/questions/20912692/view-frustum-culling-corner-cases\r\n/**\r\n * @en\r\n * sphere-frustum intersect, handles the false positives correctly.\r\n * @zh\r\n * 球和锥台的相交性检测，正确处理大多数错误情况。\r\n * @param sphere @zh 球 @en The sphere to test\r\n * @param frustum @zh 锥台 @en The frustum to test\r\n * @returns @zh 如果没有相交，返回 0 ，否则返回非 0。 @en zero if no intersection, otherwise returns a non-zero value.no intersection\r\n */\r\nconst sphereFrustumAccurate = (function (): (sphere: Sphere, frustum: Frustum) => number {\r\n    const pt = v3();\r\n    const map = [1, -1, 1, -1, 1, -1];\r\n    return function (sphere: Sphere, frustum: Frustum): number {\r\n        for (let i = 0; i < 6; i++) {\r\n            const plane = frustum.planes[i];\r\n            const r = sphere.radius;\r\n            const c = sphere.center;\r\n            const n = plane.n;\r\n            const d = plane.d;\r\n            const dot = vec3Dot(n, c);\r\n            // frustum plane normal points to the inside\r\n            if (dot + r < d) return 0; // completely outside\r\n            else if (dot - r > d) { continue; }\r\n            // in case of false positives\r\n            // has false negatives, still working on it\r\n            vec3Add(pt, c, vec3MultiplyScalar(pt, n, r));\r\n            for (let j = 0; j < 6; j++) {\r\n                if (j === i || j === i + map[i]) { continue; }\r\n                const test = frustum.planes[j];\r\n                if (vec3Dot(test.n, pt) < test.d) { return 0; }\r\n            }\r\n        }\r\n        return 1;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * sphere-sphere intersect detect.\r\n * @zh\r\n * 球和球的相交性检测。\r\n * @param sphere0 @zh 球 0 @en The sphere A to test\r\n * @param sphere1 @zh 球 1 @en The sphere B to test\r\n * @returns @zh 是否发生碰撞 @en true or false which indicates if there is an intersection\r\n */\r\nconst sphereWithSphere = function (sphere0: Sphere, sphere1: Sphere): boolean {\r\n    const r = sphere0.radius + sphere1.radius;\r\n    return vec3SquaredDistance(sphere0.center, sphere1.center) < r * r;\r\n};\r\n\r\n/**\r\n * @en\r\n * sphere-aabb intersect detect.\r\n * @zh\r\n * 球和轴对齐包围盒的相交性检测。\r\n * @param sphere @zh 球 @en The sphere to test\r\n * @param aabb @zh 轴对齐包围盒 @en The aabb to test\r\n * @returns @zh 是否发生碰撞 @en true or false which indicates if there is an intersection\r\n */\r\nconst sphereAABB = (function (): (sphere: Sphere, aabb: AABB) => boolean {\r\n    const pt = v3();\r\n    return function (sphere: Sphere, aabb: AABB): boolean {\r\n        const sphereRadius = sphere.radius;\r\n        distance.pt_point_aabb(pt, sphere.center, aabb);\r\n        return vec3SquaredDistance(sphere.center, pt) < sphereRadius * sphereRadius;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * sphere-OBB intersect detect.\r\n * @zh\r\n * 球和 OBB 的相交性检测。\r\n * @param sphere @zh 参与测试的球。 @en The sphere to test.\r\n * @param obb @zh 参与测试的 OBB。 @en The OBB to test.\r\n * @returns @zh 是否发生碰撞。 @en true or false which indicates if there is an intersection.\r\n */\r\nconst sphereOBB = (function (): (sphere: Sphere, obb: OBB) => boolean {\r\n    const pt = v3();\r\n    return function (sphere: Sphere, obb: OBB): boolean {\r\n        const sphereRadius = sphere.radius;\r\n        distance.pt_point_obb(pt, sphere.center, obb);\r\n        return vec3SquaredDistance(sphere.center, pt) < sphereRadius * sphereRadius;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * sphere-capsule intersect detect.\r\n * @zh\r\n * 球和胶囊体的相交性检测。\r\n * @param sphere @zh 参与测试的球。 @en The sphere to test.\r\n * @param capsule @zh 参与测试的胶囊体。 @en The capsule to test.\r\n * @returns @zh 是否发生碰撞。 @en true or false which indicates if there is an intersection.\r\n */\r\nconst sphereCapsule = (function (): (sphere: Sphere, capsule: Capsule) => boolean {\r\n    const v3_0 = v3();\r\n    const v3_1 = v3();\r\n    return function (sphere: Sphere, capsule: Capsule): boolean {\r\n        const capsuleEllipseCenter0 = capsule.ellipseCenter0;\r\n        const capsuleEllipseCenter1 = capsule.ellipseCenter1;\r\n        const sphereCenter = sphere.center;\r\n        const r = sphere.radius + capsule.radius;\r\n        const squaredR = r * r;\r\n        const h = vec3SquaredDistance(capsuleEllipseCenter0, capsuleEllipseCenter1);\r\n        if (h === 0) {\r\n            return vec3SquaredDistance(sphereCenter, capsule.center) < squaredR;\r\n        } else {\r\n            vec3Subtract(v3_0, sphereCenter, capsuleEllipseCenter0);\r\n            vec3Subtract(v3_1, capsuleEllipseCenter1, capsuleEllipseCenter0);\r\n            const t = vec3Dot(v3_0, v3_1) / h;\r\n            if (t < 0) {\r\n                return vec3SquaredDistance(sphereCenter, capsuleEllipseCenter0) < squaredR;\r\n            } else if (t > 1) {\r\n                return vec3SquaredDistance(sphereCenter, capsuleEllipseCenter1) < squaredR;\r\n            } else {\r\n                vec3ScaleAndAdd(v3_0, capsuleEllipseCenter0, v3_1, t);\r\n                return vec3SquaredDistance(sphereCenter, v3_0) < squaredR;\r\n            }\r\n        }\r\n    };\r\n}());\r\n\r\n// http://www.geomalgorithms.com/a07-_distance.html\r\n/**\r\n * @en\r\n * capsule-capsule intersect detect.\r\n * @zh\r\n * 胶囊体和胶囊体的相交性检测。\r\n * @param capsuleA @zh 要测试的胶囊体 A。 @en The capsule A to test.\r\n * @param capsuleB @zh 要测试的胶囊体 B。 @en The capsule B to test.\r\n * @returns @zh 如果相交，返回 true，否则返回 false。 @en true if there is an intersection, otherwise returns false.\r\n */\r\nconst capsuleWithCapsule = (function (): (capsuleA: Capsule, capsuleB: Capsule) => boolean {\r\n    const v3_0 = v3();\r\n    const v3_1 = v3();\r\n    const v3_2 = v3();\r\n    const v3_3 = v3();\r\n    const v3_4 = v3();\r\n    const v3_5 = v3();\r\n    return function capsuleWithCapsule (capsuleA: Capsule, capsuleB: Capsule): boolean {\r\n        const capsuleAEllipseCenter0 = capsuleA.ellipseCenter0;\r\n        const capsuleAEllipseCenter1 = capsuleA.ellipseCenter1;\r\n        const capsuleBEllipseCenter1 = capsuleB.ellipseCenter1;\r\n        const capsuleBEllipseCenter0 = capsuleB.ellipseCenter0;\r\n        const u = vec3Subtract(v3_0, capsuleAEllipseCenter1, capsuleAEllipseCenter0);\r\n        const v = vec3Subtract(v3_1, capsuleBEllipseCenter1, capsuleBEllipseCenter0);\r\n        const w = vec3Subtract(v3_2, capsuleAEllipseCenter0, capsuleBEllipseCenter0);\r\n        const a = vec3Dot(u, u);         // always >= 0\r\n        const b = vec3Dot(u, v);\r\n        const c = vec3Dot(v, v);         // always >= 0\r\n        const d = vec3Dot(u, w);\r\n        const e = vec3Dot(v, w);\r\n        const D = a * c - b * b;        // always >= 0\r\n        let sN: number;\r\n        let sD = D;       // sc = sN / sD, default sD = D >= 0\r\n        let tN: number;\r\n        let tD = D;       // tc = tN / tD, default tD = D >= 0\r\n\r\n        // compute the line parameters of the two closest points\r\n        if (D < EPSILON) { // the lines are almost parallel\r\n            sN = 0.0;         // force using point P0 on segment S1\r\n            sD = 1.0;         // to prevent possible division by 0.0 later\r\n            tN = e;\r\n            tD = c;\r\n        } else {                 // get the closest points on the infinite lines\r\n            sN = (b * e - c * d);\r\n            tN = (a * e - b * d);\r\n            if (sN < 0.0) {        // sc < 0 => the s=0 edge is visible\r\n                sN = 0.0;\r\n                tN = e;\r\n                tD = c;\r\n            } else if (sN > sD) {  // sc > 1  => the s=1 edge is visible\r\n                sN = sD;\r\n                tN = e + b;\r\n                tD = c;\r\n            }\r\n        }\r\n\r\n        if (tN < 0.0) {            // tc < 0 => the t=0 edge is visible\r\n            tN = 0.0;\r\n            // recompute sc for this edge\r\n            if (-d < 0.0) {\r\n                sN = 0.0;\r\n            } else if (-d > a) {\r\n                sN = sD;\r\n            } else {\r\n                sN = -d;\r\n                sD = a;\r\n            }\r\n        } else if (tN > tD) {      // tc > 1  => the t=1 edge is visible\r\n            tN = tD;\r\n            // recompute sc for this edge\r\n            if ((-d + b) < 0.0) {\r\n                sN = 0;\r\n            } else if ((-d + b) > a) {\r\n                sN = sD;\r\n            } else {\r\n                sN = (-d + b);\r\n                sD = a;\r\n            }\r\n        }\r\n        // finally do the division to get sc and tc\r\n        const sc = (mathAbs(sN) < EPSILON ? 0.0 : sN / sD);\r\n        const tc = (mathAbs(tN) < EPSILON ? 0.0 : tN / tD);\r\n\r\n        // get the difference of the two closest points\r\n        const dP = v3_3;\r\n        dP.set(w);\r\n        dP.add(vec3MultiplyScalar(v3_4, u, sc));\r\n        dP.subtract(vec3MultiplyScalar(v3_5, v, tc));\r\n        const radius = capsuleA.radius + capsuleB.radius;\r\n        return dP.lengthSqr() < radius * radius;\r\n    };\r\n}());\r\n\r\n/**\r\n * @en\r\n * Algorithm of intersect detect for basic geometry.\r\n * @zh\r\n * 基础几何的相交性检测算法。\r\n */\r\nconst intersect = {\r\n    raySphere,\r\n    rayAABB,\r\n    rayOBB,\r\n    rayPlane,\r\n    rayTriangle,\r\n    rayCapsule,\r\n\r\n    // As these functions depends on upper modules, so move the implementation to misc/intersect.ts.\r\n    // These functions are defined here to keep compatibility, they will be override in misc/intersect.ts.\r\n    raySubMesh: null as unknown as (ray: Ray, submesh: RenderingSubMesh, options?: IRaySubMeshOptions) => number,\r\n    rayMesh: null as unknown as (ray: Ray, mesh: Mesh, options?: IRayMeshOptions) => number,\r\n    rayModel: null as unknown as (r: Ray, model: Model, options?: IRayModelOptions) => number,\r\n\r\n    lineSphere,\r\n    lineAABB,\r\n    lineOBB,\r\n    linePlane,\r\n    lineTriangle,\r\n\r\n    sphereWithSphere,\r\n    sphereAABB,\r\n    sphereOBB,\r\n    spherePlane,\r\n    sphereFrustum,\r\n    sphereFrustumAccurate,\r\n    sphereCapsule,\r\n\r\n    aabbWithAABB,\r\n    aabbWithOBB,\r\n    aabbPlane,\r\n    aabbFrustum,\r\n    aabbFrustumAccurate,\r\n\r\n    obbWithOBB,\r\n    obbPlane,\r\n    obbFrustum,\r\n    obbFrustumAccurate,\r\n    obbPoint,\r\n    obbCapsule,\r\n    aabbFrustumCompletelyInside,\r\n\r\n    capsuleWithCapsule,\r\n\r\n    /**\r\n     * @en Check intersection between two geometries, it accept all basic geometry types in [[geometry]] module.\r\n     * @zh 两个几何体的相交性检测，可填入 [[geometry]] 模块中的基础几何形状。\r\n     * @param g1 @en The first geometry. @zh 第一个几何体。\r\n     * @param g2 @en The second geometry. @zh 第二个几何体。\r\n     * @param outPt @en A 3d point to store the intersection point result, only part of the geometries support this.\r\n     *              @zh 可选，用于保存相交点的输出对象。（注：仅部分形状的检测带有这个返回值）\r\n     */\r\n    resolve (g1: any, g2: any, outPt = null): number {\r\n        const type1 = g1._type;\r\n        const type2 = g2._type;\r\n        const resolver = this[type1 | type2] as (...args: any) => number;\r\n        return type1 < type2 ? resolver(g1, g2, outPt) : resolver(g2, g1, outPt);\r\n    },\r\n};\r\n\r\nintersect[ShapeType.SHAPE_RAY | ShapeType.SHAPE_SPHERE] = raySphere;\r\nintersect[ShapeType.SHAPE_RAY | ShapeType.SHAPE_AABB] = rayAABB;\r\nintersect[ShapeType.SHAPE_RAY | ShapeType.SHAPE_OBB] = rayOBB;\r\nintersect[ShapeType.SHAPE_RAY | ShapeType.SHAPE_PLANE] = rayPlane;\r\nintersect[ShapeType.SHAPE_RAY | ShapeType.SHAPE_TRIANGLE] = rayTriangle;\r\nintersect[ShapeType.SHAPE_RAY | ShapeType.SHAPE_CAPSULE] = rayCapsule;\r\n\r\nintersect[ShapeType.SHAPE_LINE | ShapeType.SHAPE_SPHERE] = lineSphere;\r\nintersect[ShapeType.SHAPE_LINE | ShapeType.SHAPE_AABB] = lineAABB;\r\nintersect[ShapeType.SHAPE_LINE | ShapeType.SHAPE_OBB] = lineOBB;\r\nintersect[ShapeType.SHAPE_LINE | ShapeType.SHAPE_PLANE] = linePlane;\r\nintersect[ShapeType.SHAPE_LINE | ShapeType.SHAPE_TRIANGLE] = lineTriangle;\r\n\r\nintersect[ShapeType.SHAPE_SPHERE] = sphereWithSphere;\r\nintersect[ShapeType.SHAPE_SPHERE | ShapeType.SHAPE_AABB] = sphereAABB;\r\nintersect[ShapeType.SHAPE_SPHERE | ShapeType.SHAPE_OBB] = sphereOBB;\r\nintersect[ShapeType.SHAPE_SPHERE | ShapeType.SHAPE_PLANE] = spherePlane;\r\nintersect[ShapeType.SHAPE_SPHERE | ShapeType.SHAPE_FRUSTUM] = sphereFrustum;\r\nintersect[ShapeType.SHAPE_SPHERE | ShapeType.SHAPE_FRUSTUM_ACCURATE] = sphereFrustumAccurate;\r\nintersect[ShapeType.SHAPE_SPHERE | ShapeType.SHAPE_CAPSULE] = sphereCapsule;\r\n\r\nintersect[ShapeType.SHAPE_AABB] = aabbWithAABB;\r\nintersect[ShapeType.SHAPE_AABB | ShapeType.SHAPE_OBB] = aabbWithOBB;\r\nintersect[ShapeType.SHAPE_AABB | ShapeType.SHAPE_PLANE] = aabbPlane;\r\nintersect[ShapeType.SHAPE_AABB | ShapeType.SHAPE_FRUSTUM] = aabbFrustum;\r\nintersect[ShapeType.SHAPE_AABB | ShapeType.SHAPE_FRUSTUM_ACCURATE] = aabbFrustumAccurate;\r\n\r\nintersect[ShapeType.SHAPE_OBB] = obbWithOBB;\r\nintersect[ShapeType.SHAPE_OBB | ShapeType.SHAPE_PLANE] = obbPlane;\r\nintersect[ShapeType.SHAPE_OBB | ShapeType.SHAPE_FRUSTUM] = obbFrustum;\r\nintersect[ShapeType.SHAPE_OBB | ShapeType.SHAPE_FRUSTUM_ACCURATE] = obbFrustumAccurate;\r\nintersect[ShapeType.SHAPE_OBB | ShapeType.SHAPE_CAPSULE] = obbCapsule;\r\n\r\nintersect[ShapeType.SHAPE_CAPSULE] = capsuleWithCapsule;\r\n\r\nexport default intersect;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { replaceProperty, removeProperty } from '../utils/x-deprecated';\r\nimport { Line } from './line';\r\nimport intersect from './intersect';\r\n\r\nreplaceProperty(Line.prototype, 'line', [\r\n    {\r\n        name: 'mag',\r\n        newName: 'len',\r\n    },\r\n    {\r\n        name: 'magnitude',\r\n        newName: 'len',\r\n    },\r\n]);\r\n\r\nremoveProperty(intersect, 'intersect', [\r\n    {\r\n        name: 'line_quad',\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { mat4, Mat4, v4, Vec3, Vec4 } from '../math';\r\nimport { ShapeType } from './enums';\r\n\r\nconst v1 = new Vec3(0, 0, 0);\r\nconst v2 = new Vec3(0, 0, 0);\r\nconst temp_mat = mat4();\r\nconst temp_vec4 = v4();\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: Plane.\r\n * Plane Equation: a*x + b*y + c*z - d = 0.\r\n * @zh\r\n * 基础几何：平面。\r\n * 平面方程: a*x + b*y + c*z - d = 0。\r\n */\r\n\r\nexport class Plane {\r\n    /**\r\n     * @en\r\n     * Creates a new plane.\r\n     * @zh\r\n     * 创建一个新的平面。\r\n     * @param nx @en The x component of normal vector. @zh 法向量的 x 部分。\r\n     * @param ny @en The y component of normal vector. @zh 法向量的 y 部分。\r\n     * @param nz @en The z component of normal vector. @zh 法向量的 z 部分。\r\n     * @param d  @en The distance between normal vector and the origin. @zh 与原点的距离。\r\n     * @returns @en The created plane object. @zh 新创建的平面。\r\n     */\r\n    public static create (nx: number, ny: number, nz: number, d: number): Plane {\r\n        return new Plane(nx, ny, nz, d);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clones a new plane.\r\n     * @zh\r\n     * 克隆一个新的平面。\r\n     * @param p @en The Plane object to be cloned from. @zh 克隆的来源平面对象。\r\n     * @returns @en The cloned Plane object @zh 克隆出的平面对象。\r\n     */\r\n    public static clone (p: Plane): Plane {\r\n        return new Plane(p.n.x, p.n.y, p.n.z, p.d);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from one plane to another.\r\n     * @zh\r\n     * 复制一个平面的值到另一个。\r\n     * @param out @en The object to be operated on. @zh 接受操作的对象。\r\n     * @param p @en The source of replication. @zh 复制的来源。\r\n     * @returns @en The object to be operated on. @zh 接受操作的对象。\r\n     */\r\n    public static copy (out: Plane, p: Plane): Plane {\r\n        Vec3.copy(out.n, p.n);\r\n        out.d = p.d;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a plane from three points\r\n     * @zh\r\n     * 用三个点创建一个平面。\r\n     * @param out @en The Plane object to be operated on. @zh 接受操作的对象。\r\n     * @param a @en The point a. @zh 点 a。\r\n     * @param b @en The point b. @zh 点 b。\r\n     * @param c @en The point c. @zh 点 c。\r\n     * @returns @en The Plane object to be operated on, same as `out` parameter. @zh 接受操作的对象，与 `out` 相同。\r\n     */\r\n    public static fromPoints (out: Plane, a: Vec3, b: Vec3, c: Vec3): Plane {\r\n        Vec3.subtract(v1, b, a);\r\n        Vec3.subtract(v2, c, a);\r\n\r\n        Vec3.normalize(out.n, Vec3.cross(out.n, v1, v2));\r\n        out.d = Vec3.dot(out.n, a);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the components of a plane to the given values.\r\n     * @zh\r\n     * 将给定平面的属性设置为给定值。\r\n     * @param out @en The Plane object to be operated on. @zh 接受操作的对象。\r\n     * @param nx @en The x component of normal vector. @zh 法向量量的 x 部分。\r\n     * @param ny @en The y component of normal vector. @zh 法向量的 y 部分。\r\n     * @param nz @en The z component of normal vector. @zh 法向量的 z 部分。\r\n     * @param d  @en The distance between normal vector and the origin. @zh 与原点的距离。\r\n     * @returns @en The object to be operated on, same as the `out` parameter. @zh 接受操作的对象，与 `out` 参数相同。\r\n     */\r\n    public static set (out: Plane, nx: number, ny: number, nz: number, d: number): Plane {\r\n        out.n.x = nx;\r\n        out.n.y = ny;\r\n        out.n.z = nz;\r\n        out.d = d;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates plane from normal and point.\r\n     * @zh\r\n     * 用一条法线和一个点创建平面。\r\n     * @param out @en The object to be operated on. @zh 接受操作的对象。\r\n     * @param normal @en The normal of the plane. @zh 平面的法线。\r\n     * @param point @en A point in the plane. @zh 平面上的一点。\r\n     * @returns @en The object to be operated on, same as the `out` parameter. @zh 接受操作的对象，与 `out` 参数相同。\r\n     */\r\n    public static fromNormalAndPoint (out: Plane, normal: Vec3, point: Vec3): Plane {\r\n        Vec3.copy(out.n, normal);\r\n        out.d = Vec3.dot(normal, point);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Normalizes a plane.\r\n     * @zh\r\n     * 归一化一个平面。\r\n     * @param out @en The object to be operated on. @zh 接受操作的对象。\r\n     * @param a @en Source data for the operation. @zh 操作的源数据。\r\n     * @returns @en The object to be operated on, sames as the `out` parameter. @zh 接受操作的对象，与 `out` 相同。\r\n     */\r\n    public static normalize (out: Plane, a: Plane): Plane {\r\n        const len = a.n.length();\r\n        Vec3.normalize(out.n, a.n);\r\n        if (len > 0) {\r\n            out.d = a.d / len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The normal of the plane.\r\n     * @zh\r\n     * 法线向量。\r\n     */\r\n    public declare n: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * The distance from the origin to the plane.\r\n     * @zh\r\n     * 原点到平面的距离。\r\n     */\r\n    public declare d: number;\r\n\r\n    /**\r\n     * @en\r\n     * Gets the type of the Plane, its value is `ShapeType.SHAPE_PLANE`.\r\n     * @zh\r\n     * 获取形状的类型，值为 `ShapeType.SHAPE_PLANE`。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    // compatibility with vector interfaces\r\n    set x (val) { this.n.x = val; }\r\n    get x (): number { return this.n.x; }\r\n    set y (val) { this.n.y = val; }\r\n    get y (): number { return this.n.y; }\r\n    set z (val) { this.n.z = val; }\r\n    get z (): number { return this.n.z; }\r\n    set w (val) { this.d = val; }\r\n    get w (): number { return this.d; }\r\n\r\n    protected declare readonly _type: number;\r\n\r\n    /**\r\n     * @en\r\n     * Constructs a plane.\r\n     * @zh\r\n     * 构造一个平面。\r\n     * @param nx @en The x component of normal vector. @zh 法向量的 x 部分。\r\n     * @param ny @en The y component of normal vector. @zh 法向量的 y 部分。\r\n     * @param nz @en The z component of normal vector. @zh 法向量的 z 部分。\r\n     * @param d @en The distance between normal vector and the origin. @zh 与原点的距离。\r\n     */\r\n    constructor (nx = 0, ny = 1, nz = 0, d = 0) {\r\n        this._type = ShapeType.SHAPE_PLANE;\r\n        this.n = new Vec3(nx, ny, nz);\r\n        this.d = d;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transforms this plane by a 4x4 matrix.\r\n     * @zh\r\n     * 使用一个 4x4 矩阵变换此平面。\r\n     * @param mat @en The 4x4 matrix for transformation @zh 用于变换的 4x4 矩阵。\r\n     */\r\n    public transform (mat: Mat4): void {\r\n        Mat4.invert(temp_mat, mat);\r\n        Mat4.transpose(temp_mat, temp_mat);\r\n        Vec4.set(temp_vec4, this.n.x, this.n.y, this.n.z, -this.d);\r\n        Vec4.transformMat4(temp_vec4, temp_vec4, temp_mat);\r\n        Vec3.set(this.n, temp_vec4.x, temp_vec4.y, temp_vec4.z);\r\n        this.d = -temp_vec4.w;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3 } from '../math';\r\nimport { ShapeType } from './enums';\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: Triangle.\r\n * @zh\r\n * 基础几何：三角形。\r\n */\r\n\r\nexport class Triangle {\r\n    /**\r\n     * @en\r\n     * Creates a new triangle instance.\r\n     * @zh\r\n     * 创建一个新的三角形。\r\n     * @param ax @en The x component of point a @zh a 点的 x 部分。\r\n     * @param ay @en The y component of point a @zh a 点的 y 部分。\r\n     * @param az @en The z component of point a @zh a 点的 z 部分。\r\n     * @param bx @en The x component of point b @zh b 点的 x 部分。\r\n     * @param by @en The y component of point b @zh b 点的 y 部分。\r\n     * @param bz @en The z component of point b @zh b 点的 z 部分。\r\n     * @param cx @en The x component of point c @zh c 点的 x 部分。\r\n     * @param cy @en The y component of point c @zh c 点的 y 部分。\r\n     * @param cz @en The z component of point c @zh c 点的 z 部分。\r\n     * @returns @en The created Triangle instance. @zh 创建出的三角形实例。\r\n     */\r\n    public static create (\r\n        ax = 1,\r\n        ay = 0,\r\n        az = 0,\r\n        bx = 0,\r\n        by = 0,\r\n        bz = 0,\r\n        cx = 0,\r\n        cy = 0,\r\n        cz = 1,\r\n    ): Triangle {\r\n        return new Triangle(ax, ay, az, bx, by, bz, cx, cy, cz);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clones a triangle instance.\r\n     * @zh\r\n     * 克隆一个新的三角形。\r\n     * @param t @en The Triangle object to be cloned from. @zh 克隆的目标。\r\n     * @returns @en The cloned triangle instance. @zh 克隆出的新对象。\r\n     */\r\n    public static clone (t: Triangle): Triangle {\r\n        return new Triangle(\r\n            t.a.x,\r\n            t.a.y,\r\n            t.a.z,\r\n            t.b.x,\r\n            t.b.y,\r\n            t.b.z,\r\n            t.c.x,\r\n            t.c.y,\r\n            t.c.z,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from one triangle to another.\r\n     * @zh\r\n     * 复制一个三角形的值到另一个三角形中。\r\n     * @param out @en The target Triangle object to be copied to. @zh 接受操作的三角形。\r\n     * @param t @en A Triangle object to be copied from. @zh 被复制的三角形。\r\n     * @returns @en The target Triangle object to be copied to, same as the `out` parameter. @zh 接受操作的三角形，与 `out` 参数相同。\r\n     */\r\n    public static copy (out: Triangle, t: Triangle): Triangle {\r\n        Vec3.copy(out.a, t.a);\r\n        Vec3.copy(out.b, t.b);\r\n        Vec3.copy(out.c, t.c);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a triangle instance from three points.\r\n     * @zh\r\n     * 用三个点创建一个三角形。\r\n     * @param out @en The Triangle object to be modified. @zh 接受操作的三角形。\r\n     * @param a @en The point value to set out.a. @zh a 点。\r\n     * @param b @en The point value to set out.b. @zh b 点。\r\n     * @param c @en The point value to set out.c. @zh c 点。\r\n     * @returns @en The Triangle object to be modified， same as the `out` parameter. @zh 接受操作的三角形，与 `out` 参数相同。\r\n     */\r\n    public static fromPoints (out: Triangle, a: Vec3, b: Vec3, c: Vec3): Triangle {\r\n        Vec3.copy(out.a, a);\r\n        Vec3.copy(out.b, b);\r\n        Vec3.copy(out.c, c);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the components of a triangle to the given values.\r\n     * @zh\r\n     * 将给定三角形的属性设置为给定值。\r\n     * @param out @en The Triangle object to be set. @zh 接受操作的三角形。\r\n     * @param ax @en The value to set out.a.x. @zh a 点的 x 部分。\r\n     * @param ay @en The value to set out.a.y. @zh a 点的 y 部分。\r\n     * @param az @en The value to set out.a.z. @zh a 点的 z 部分。\r\n     * @param bx @en The value to set out.b.x. @zh b 点的 x 部分。\r\n     * @param by @en The value to set out.b.y. @zh b 点的 y 部分。\r\n     * @param bz @en The value to set out.b.z. @zh b 点的 z 部分。\r\n     * @param cx @en The value to set out.c.x. @zh c 点的 x 部分。\r\n     * @param cy @en The value to set out.c.y. @zh c 点的 y 部分。\r\n     * @param cz @en The value to set out.c.z. @zh c 点的 z 部分。\r\n     * @returns @en The Triangle object to be set, same as the `out` parameter. @zh 接受操作的三角形，与 `out` 参数相同。\r\n     */\r\n    public static set (\r\n        out: Triangle,\r\n        ax: number,\r\n        ay: number,\r\n        az: number,\r\n        bx: number,\r\n        by: number,\r\n        bz: number,\r\n        cx: number,\r\n        cy: number,\r\n        cz: number,\r\n    ): Triangle {\r\n        out.a.x = ax;\r\n        out.a.y = ay;\r\n        out.a.z = az;\r\n\r\n        out.b.x = bx;\r\n        out.b.y = by;\r\n        out.b.z = bz;\r\n\r\n        out.c.x = cx;\r\n        out.c.y = cy;\r\n        out.c.z = cz;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Point a.\r\n     * @zh\r\n     * 点 a。\r\n     */\r\n    public declare a: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * Point b.\r\n     * @zh\r\n     * 点 b。\r\n     */\r\n    public declare b: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * Point c.\r\n     * @zh\r\n     * 点 c。\r\n     */\r\n    public declare c: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * Gets the type of the triangle, always returns `ShapeType.SHAPE_TRIANGLE`.\r\n     * @zh\r\n     * 获取此三角形的类型，固定返回 `ShapeType.SHAPE_TRIANGLE`。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    protected readonly _type: number = ShapeType.SHAPE_TRIANGLE;\r\n\r\n    /**\r\n     * @en\r\n     * Constructs a triangle.\r\n     * @zh\r\n     * 构造一个三角形。\r\n     * @param ax @en x component of point a. @zh a 点的 x 部分。\r\n     * @param ay @en y component of point a. @zh a 点的 y 部分。\r\n     * @param az @en z component of point a. @zh a 点的 z 部分。\r\n     * @param bx @en x component of point b. @zh b 点的 x 部分。\r\n     * @param by @en y component of point b. @zh b 点的 y 部分。\r\n     * @param bz @en z component of point b. @zh b 点的 z 部分。\r\n     * @param cx @en x component of point c. @zh c 点的 x 部分。\r\n     * @param cy @en y component of point c. @zh c 点的 y 部分。\r\n     * @param cz @en z component of point c. @zh c 点的 z 部分。\r\n     */\r\n    constructor (\r\n        ax = 0,\r\n        ay = 0,\r\n        az = 0,\r\n        bx = 1,\r\n        by = 0,\r\n        bz = 0,\r\n        cx = 0,\r\n        cy = 1,\r\n        cz = 0,\r\n    ) {\r\n        this.a = new Vec3(ax, ay, az);\r\n        this.b = new Vec3(bx, by, bz);\r\n        this.c = new Vec3(cx, cy, cz);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { deprecateModuleExportedName } from './x-deprecated';\r\n\r\ndeprecateModuleExportedName({\r\n    replaceProperty: {\r\n        since: '3.6.0',\r\n        removed: false,\r\n    },\r\n    removeProperty: {\r\n        since: '3.6.0',\r\n        removed: false,\r\n    },\r\n    markAsWarning: {\r\n        since: '3.6.0',\r\n        removed: false,\r\n    },\r\n    setDefaultLogTimes: {\r\n        since: '3.6.0',\r\n        removed: false,\r\n    },\r\n});\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Camera } from '../../misc/camera-component';\r\nimport { Vec3 } from '../math';\r\nimport { Node } from '../../scene-graph';\r\nimport { replaceProperty } from './x-deprecated';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nconst _vec3 = new Vec3();\r\n\r\n/**\r\n * @en\r\n * Conversion of non-UI nodes to UI Node (Local) Space coordinate system.\r\n * @zh\r\n * 非 UI 节点转换到 UI 节点(局部) 空间坐标系。\r\n * @deprecated since Cocos Creator 3D v1.2, please use [[Camera.convertToUINode]]\r\n * @param mainCamera @en The main camera @zh 主相机\r\n * @param wpos @en The world space location. @zh 世界空间位置。\r\n * @param uiNode @en The UI node. @zh UI 节点。\r\n * @param out @en The output local position in UI @zh 返回 UI 节点局部坐标。\r\n */\r\nexport function WorldNode3DToLocalNodeUI (mainCamera: Camera, wpos: Vec3, uiNode: Node, out?: Vec3): Vec3 {\r\n    if (!out) {\r\n        out = new Vec3();\r\n    }\r\n\r\n    mainCamera.convertToUINode(wpos, uiNode, out);\r\n    const pos = uiNode.position;\r\n    out.add(pos);\r\n    return out;\r\n}\r\n\r\n/**\r\n * @en\r\n * Conversion of non-UI nodes to UI Node (World) Space coordinate system.\r\n * @zh\r\n * 非 UI 节点转换到 UI 节点(世界)空间坐标系。\r\n * @deprecated since Cocos Creator 3D v1.2, please use [[Camera.convertToUINode]]\r\n * @param mainCamera @en The main camera @zh 主相机\r\n * @param wpos @en The world space location. @zh 世界空间位置。\r\n * @param out @en The output world position in UI @zh 返回 UI 空间世界坐标。\r\n */\r\nexport function WorldNode3DToWorldNodeUI (mainCamera: Camera, wpos: Vec3, out?: Vec3): Vec3 {\r\n    if (!out) {\r\n        out = new Vec3();\r\n    }\r\n\r\n    mainCamera.worldToScreen(wpos, out);\r\n    out.x /= legacyCC.view.getScaleX();\r\n    out.y /= legacyCC.view.getScaleY();\r\n    return out;\r\n}\r\n\r\n/**\r\n * @en It will be removed in v1.2. Please use [[Camera.convertToUINode]]。\r\n * @zh 将在 v1.2 移除，请使用 Camera 的 `convertToUINode`。\r\n * @deprecated since Cocos Creator 3D v1.2\r\n */\r\nconst convertUtils = {\r\n    WorldNode3DToLocalNodeUI,\r\n    WorldNode3DToWorldNodeUI,\r\n};\r\n\r\nexport { convertUtils };\r\nlegacyCC.pipelineUtils = convertUtils;\r\n\r\nreplaceProperty(legacyCC.pipelineUtils, 'cc.pipelineUtils', [\r\n    {\r\n        name: 'WorldNode3DToLocalNodeUI',\r\n        newName: 'convertToUINode',\r\n        targetName: 'cc.Camera.prototype',\r\n        customFunction (...args: any[]): any {\r\n            const camera = args[0] as Camera;\r\n            const out = args[3] || _vec3;\r\n            camera.convertToUINode(args[1], args[2], out);\r\n            out.add(args[2].position);\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n            return args[3] || out.clone();\r\n        },\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { ConfigOrientation, IScreenOptions, SafeAreaEdge } from 'pal/screen-adapter';\r\nimport { systemInfo } from 'pal/system-info';\r\nimport { warnID } from '../../../cocos/core/platform/debug';\r\nimport { EventTarget } from '../../../cocos/core/event/event-target';\r\nimport { Size } from '../../../cocos/core/math';\r\nimport { Orientation } from '../enum-type';\r\nimport legacyCC from '../../../predefine';\r\nimport { checkPalIntegrity, withImpl } from '../../integrity-check';\r\nimport { OS } from '../../system-info/enum-type';\r\n\r\ninterface ICachedStyle {\r\n    width: string;\r\n    height: string;\r\n}\r\n\r\nconst EVENT_TIMEOUT = EDITOR ? 5 : 200;\r\nconst orientationMap: Record<ConfigOrientation, Orientation> = {\r\n    auto: Orientation.AUTO,\r\n    landscape: Orientation.LANDSCAPE,\r\n    portrait: Orientation.PORTRAIT,\r\n};\r\n\r\n/**\r\n * On Web platform, the game window may points to different type of window.\r\n */\r\nenum WindowType {\r\n    /**\r\n     * Unknown window type.\r\n     */\r\n    Unknown,\r\n    /**\r\n     * A SubFrame in BrowserWindow.\r\n     * Need to set the frame size from an external editor option.\r\n     * Should only dispatch 'resize' event when the frame size changed.\r\n     * Setting window size is supported.\r\n     */\r\n    SubFrame,\r\n    /**\r\n     * The window size is determined by the size of BrowserWindow.\r\n     * Should dispatch 'resize' event when the BrowserWindow size changed.\r\n     * Setting window size is NOT supported.\r\n     */\r\n    BrowserWindow,\r\n    /**\r\n     * The window size is equal to the size of screen.\r\n     * Should dispatch 'resize' event when enter / exit fullscreen or screen resize.\r\n     * Setting window size is NOT supported.\r\n     */\r\n    Fullscreen,\r\n}\r\n\r\ninterface IScreenFunctionName {\r\n    requestFullscreen: string,\r\n    exitFullscreen: string,\r\n    fullscreenchange: string,\r\n    fullscreenEnabled: string,\r\n    fullscreenElement: string,\r\n    fullscreenerror: string,\r\n}\r\n\r\nclass ScreenAdapter extends EventTarget {\r\n    public isFrameRotated = false;\r\n    public handleResizeEvent = true;\r\n\r\n    public get supportFullScreen (): boolean {\r\n        return this._supportFullScreen;\r\n    }\r\n    public get isFullScreen (): boolean {\r\n        if (!this._supportFullScreen) {\r\n            return false;\r\n        }\r\n        return !!document[this._fn.fullscreenElement];\r\n    }\r\n\r\n    public get devicePixelRatio (): number {\r\n        // TODO: remove the down sampling operation in DPR after supporting resolutionScale\r\n        return Math.min(window.devicePixelRatio ?? 1, 2);\r\n    }\r\n\r\n    public get windowSize (): Size {\r\n        const result = this._windowSizeInCssPixels;\r\n        const dpr = this.devicePixelRatio;\r\n        result.width *= dpr;\r\n        result.height *= dpr;\r\n        return result;\r\n    }\r\n    public set windowSize (size: Size) {\r\n        if (this._windowType !== WindowType.SubFrame) {\r\n            warnID(9202);\r\n            return;\r\n        }\r\n        this._resizeFrame(this._convertToSizeInCssPixels(size));\r\n    }\r\n\r\n    public get resolution (): Size {\r\n        const windowSize = this.windowSize;\r\n        const resolutionScale = this.resolutionScale;\r\n        return new Size(windowSize.width * resolutionScale, windowSize.height * resolutionScale);\r\n    }\r\n    public get resolutionScale (): number {\r\n        return this._resolutionScale;\r\n    }\r\n    public set resolutionScale (v: number) {\r\n        if (v === this._resolutionScale) {\r\n            return;\r\n        }\r\n        this._resolutionScale = v;\r\n        this._cbToUpdateFrameBuffer?.();\r\n    }\r\n\r\n    public get orientation (): Orientation {\r\n        return this._orientation;\r\n    }\r\n    public set orientation (value: Orientation) {\r\n        if (this._orientation === value) {\r\n            return;\r\n        }\r\n        this._orientation = value;\r\n        this._updateFrame();\r\n    }\r\n\r\n    private _updateFrame (): void {\r\n        this._updateFrameState();\r\n        this._resizeFrame();\r\n    }\r\n\r\n    public get safeAreaEdge (): SafeAreaEdge {\r\n        const dpr = this.devicePixelRatio;\r\n        const _top = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--safe-top') || '0') * dpr;\r\n        const _bottom = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--safe-bottom') || '0') * dpr;\r\n        const _left = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--safe-left') || '0') * dpr;\r\n        const _right = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--safe-right') || '0') * dpr;\r\n\r\n        return {\r\n            top: _top,\r\n            bottom: _bottom,\r\n            left: _left,\r\n            right: _right,\r\n        };\r\n    }\r\n    public get isProportionalToFrame (): boolean {\r\n        return this._isProportionalToFrame;\r\n    }\r\n    public set isProportionalToFrame (v: boolean) {\r\n        if (this._isProportionalToFrame === v) {\r\n            return;\r\n        }\r\n        this._isProportionalToFrame = v;\r\n        this._updateContainer();\r\n    }\r\n\r\n    private _gameFrame?: HTMLDivElement;\r\n    private _gameContainer?: HTMLDivElement;\r\n    private _gameCanvas?: HTMLCanvasElement;\r\n    private _isProportionalToFrame = false;\r\n    private _cachedFrameStyle: ICachedStyle = { width: '0px', height: '0px' };\r\n    private _cachedContainerStyle: ICachedStyle = { width: '0px', height: '0px' };\r\n    private _cbToUpdateFrameBuffer?: () => void;\r\n    private _supportFullScreen = false;\r\n    private _touchEventName: string;\r\n    private _onFullscreenChange?: () => void;\r\n    private _onFullscreenError?: () => void;\r\n    // We need to set timeout to handle screen event.\r\n    private _orientationChangeTimeoutId = -1;\r\n    private _cachedFrameSize = new Size(0, 0); // cache before enter fullscreen.\r\n    private _exactFitScreen = false;\r\n    private _isHeadlessMode = false;\r\n    private _fn = {} as IScreenFunctionName;\r\n    // Function mapping for cross browser support\r\n    private _fnGroup = [\r\n        [\r\n            'requestFullscreen',\r\n            'exitFullscreen',\r\n            'fullscreenchange',\r\n            'fullscreenEnabled',\r\n            'fullscreenElement',\r\n            'fullscreenerror',\r\n        ],\r\n        [\r\n            'requestFullScreen',\r\n            'exitFullScreen',\r\n            'fullScreenchange',\r\n            'fullScreenEnabled',\r\n            'fullScreenElement',\r\n            'fullscreenerror',\r\n        ],\r\n        [\r\n            'webkitRequestFullScreen',\r\n            'webkitCancelFullScreen',\r\n            'webkitfullscreenchange',\r\n            'webkitIsFullScreen',\r\n            'webkitCurrentFullScreenElement',\r\n            'webkitfullscreenerror',\r\n        ],\r\n        [\r\n            'mozRequestFullScreen',\r\n            'mozCancelFullScreen',\r\n            'mozfullscreenchange',\r\n            'mozFullScreen',\r\n            'mozFullScreenElement',\r\n            'mozfullscreenerror',\r\n        ],\r\n        [\r\n            'msRequestFullscreen',\r\n            'msExitFullscreen',\r\n            'MSFullscreenChange',\r\n            'msFullscreenEnabled',\r\n            'msFullscreenElement',\r\n            'msfullscreenerror',\r\n        ],\r\n    ];\r\n    private get _windowSizeInCssPixels (): Size {\r\n        if (TEST) {\r\n            return new Size(window.innerWidth, window.innerHeight);\r\n        }\r\n        if (this.isProportionalToFrame) {\r\n            if (!this._gameContainer) {\r\n                warnID(9201);\r\n                return new Size(0, 0);\r\n            }\r\n            return new Size(this._gameContainer.clientWidth, this._gameContainer.clientHeight);\r\n        }\r\n        let fullscreenTarget;\r\n        let width: number;\r\n        let height: number;\r\n        switch (this._windowType) {\r\n        case WindowType.SubFrame:\r\n            if (!this._gameFrame) {\r\n                warnID(9201);\r\n                return new Size(0, 0);\r\n            }\r\n            return new Size(this._gameFrame.clientWidth, this._gameFrame.clientHeight);\r\n        case WindowType.Fullscreen:\r\n            fullscreenTarget = this._getFullscreenTarget()!;\r\n            width = this.isFrameRotated ? fullscreenTarget.clientHeight : fullscreenTarget.clientWidth;\r\n            height = this.isFrameRotated ? fullscreenTarget.clientWidth : fullscreenTarget.clientHeight;\r\n            return new Size(width, height);\r\n        case WindowType.BrowserWindow:\r\n            width = this.isFrameRotated ? window.innerHeight : window.innerWidth;\r\n            height = this.isFrameRotated ? window.innerWidth : window.innerHeight;\r\n            return new Size(width, height);\r\n        case WindowType.Unknown:\r\n        default:\r\n            return new Size(1, 1);\r\n        }\r\n    }\r\n    private get _windowType (): WindowType {\r\n        if (this._isHeadlessMode) {\r\n            return WindowType.Unknown;\r\n        }\r\n        if (this.isFullScreen) {\r\n            return WindowType.Fullscreen;\r\n        }\r\n        if (!this._gameFrame) {\r\n            warnID(9201);\r\n            return WindowType.Unknown;\r\n        }\r\n        if (this._exactFitScreen) {\r\n            // Note: It doesn't work well to determine whether the frame exact fits the screen.\r\n            // Need to specify the attribute from Editor.\r\n            return WindowType.BrowserWindow;\r\n        }\r\n        return WindowType.SubFrame;\r\n    }\r\n    private _resolutionScale = 1;\r\n    private _orientation = Orientation.AUTO;//The orientation set by user.\r\n    private _orientationDevice = Orientation.AUTO;//Store the device's orientation.\r\n\r\n    constructor () {\r\n        super();\r\n        // TODO: need to access frame from 'pal/launcher' module\r\n        this._gameFrame = document.getElementById('GameDiv') as HTMLDivElement;\r\n        this._gameContainer = document.getElementById('Cocos3dGameContainer') as HTMLDivElement;\r\n        this._gameCanvas = document.getElementById('GameCanvas') as HTMLCanvasElement;\r\n        // Compability with old preview or build template in Editor.\r\n        if (!TEST && !EDITOR) {\r\n            if (!this._gameFrame) {\r\n                this._gameFrame = document.createElement<'div'>('div');\r\n                this._gameFrame.setAttribute('id', 'GameDiv');\r\n                this._gameCanvas?.parentNode?.insertBefore(this._gameFrame, this._gameCanvas);\r\n                this._gameFrame.appendChild(this._gameCanvas);\r\n            }\r\n            if (!this._gameContainer) {\r\n                this._gameContainer = document.createElement<'div'>('div');\r\n                this._gameContainer.setAttribute('id', 'Cocos3dGameContainer');\r\n                this._gameCanvas?.parentNode?.insertBefore(this._gameContainer, this._gameCanvas);\r\n                this._gameContainer.appendChild(this._gameCanvas);\r\n            }\r\n        }\r\n\r\n        let fnList: Array<string>;\r\n        const fnGroup = this._fnGroup;\r\n        for (let i = 0; i < fnGroup.length; i++) {\r\n            fnList = fnGroup[i];\r\n            // detect event support\r\n            if (typeof document[fnList[1]] !== 'undefined') {\r\n                for (let i = 0; i < fnList.length; i++) {\r\n                    this._fn[fnGroup[0][i]] = fnList[i];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        this._supportFullScreen = (this._fn.requestFullscreen !== undefined);\r\n        this._touchEventName = ('ontouchstart' in window) ? 'touchend' : 'mousedown';\r\n        this._registerEvent();\r\n    }\r\n\r\n    public init (options: IScreenOptions, cbToRebuildFrameBuffer: () => void): void {\r\n        this._cbToUpdateFrameBuffer = cbToRebuildFrameBuffer;\r\n        this.orientation = orientationMap[options.configOrientation];\r\n        this._exactFitScreen = options.exactFitScreen;\r\n        this._isHeadlessMode = options.isHeadlessMode;\r\n        this._resizeFrame();\r\n    }\r\n\r\n    public requestFullScreen (): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.isFullScreen) {\r\n                resolve();\r\n                return;\r\n            }\r\n            this._cachedFrameSize = this.windowSize;\r\n            this._doRequestFullScreen().then(() => {\r\n                resolve();\r\n            }).catch(() => {\r\n                const fullscreenTarget = this._getFullscreenTarget();\r\n                if (!fullscreenTarget) {\r\n                    reject(new Error('Cannot access fullscreen target'));\r\n                    return;\r\n                }\r\n                fullscreenTarget.addEventListener(this._touchEventName, () => {\r\n                    this._doRequestFullScreen().then(() => {\r\n                        resolve();\r\n                    }).catch(reject);\r\n                }, { once: true, capture: true });\r\n            });\r\n        });\r\n    }\r\n    public exitFullScreen (): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            const requestPromise = document[this._fn.exitFullscreen]();\r\n            if (window.Promise && requestPromise instanceof Promise) {\r\n                requestPromise.then(() => {\r\n                    this.windowSize = this._cachedFrameSize;\r\n                    resolve();\r\n                }).catch(reject);\r\n                return;\r\n            }\r\n            this.windowSize = this._cachedFrameSize;\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        document.addEventListener(this._fn.fullscreenerror, (): void => {\r\n            this._onFullscreenError?.();\r\n        });\r\n\r\n        window.addEventListener('resize', (): void => {\r\n            // if (!this.handleResizeEvent) {\r\n            //     return;\r\n            // }\r\n            this._updateFrame();\r\n        });\r\n\r\n        const notifyOrientationChange = (orientation): void => {\r\n            if (orientation === this._orientationDevice) {\r\n                return;\r\n            }\r\n            this._orientationDevice = orientation;\r\n            this._updateFrame();\r\n            this.emit('orientation-change', orientation);\r\n        };\r\n\r\n        const getOrientation = (): Orientation => {\r\n            let tmpOrientation = Orientation.PORTRAIT;\r\n            switch (window.orientation) {\r\n            case 0:\r\n                tmpOrientation = Orientation.PORTRAIT;\r\n                break;\r\n            case 90:\r\n                // Handle landscape orientation, top side facing to the right\r\n                tmpOrientation = Orientation.LANDSCAPE_RIGHT;\r\n                break;\r\n            case -90:\r\n                // Handle landscape orientation, top side facing to the left\r\n                tmpOrientation = Orientation.LANDSCAPE_LEFT;\r\n                break;\r\n            case 180:\r\n                tmpOrientation = Orientation.PORTRAIT_UPSIDE_DOWN;\r\n                break;\r\n            default:\r\n                tmpOrientation = this._orientationDevice;\r\n                break;\r\n            }\r\n            return tmpOrientation;\r\n        };\r\n        /*After receive orientation-change event, window.innerWidth & innerHeight may not change immediately,\r\n        so we delay EVENT_TIMEOUT to handle orientation-change.*/\r\n        let handleOrientationChange;\r\n        const orientationChangeCallback = (): void => {\r\n            if (this._orientationChangeTimeoutId !== -1) {\r\n                clearTimeout(this._orientationChangeTimeoutId);\r\n            }\r\n            this._orientationChangeTimeoutId = setTimeout((): void => {\r\n                handleOrientationChange();\r\n            }, EVENT_TIMEOUT);\r\n        };\r\n        if (typeof window.matchMedia === 'function') {\r\n            const updateDPRChangeListener = (): void => {\r\n                const dpr = window.devicePixelRatio;\r\n                // NOTE: some browsers especially on iPhone doesn't support MediaQueryList\r\n                const mediaQueryResolution = window.matchMedia(`(resolution: ${dpr}dppx)`);\r\n                if (mediaQueryResolution.addEventListener) {\r\n                    mediaQueryResolution.addEventListener('change', (): void => {\r\n                        this.emit('window-resize', this.windowSize.width, this.windowSize.height);\r\n                        updateDPRChangeListener();\r\n                    }, { once: true });\r\n                } else if (mediaQueryResolution.addListener) {\r\n                    mediaQueryResolution.addListener((): void => {\r\n                        this.emit('window-resize', this.windowSize.width, this.windowSize.height);\r\n                    });\r\n                }\r\n            };\r\n            updateDPRChangeListener();\r\n\r\n            const mediaQueryPortrait = window.matchMedia('(orientation: portrait)');\r\n            const mediaQueryLandscape = window.matchMedia('(orientation: landscape)');\r\n            // eslint-disable-next-line no-restricted-globals\r\n            const hasScreeOrientation = screen.orientation;\r\n            handleOrientationChange = (): void => {\r\n                let tmpOrientation: Orientation = this._orientationDevice;\r\n                if (mediaQueryPortrait.matches) {\r\n                    tmpOrientation = Orientation.PORTRAIT;\r\n                    if (hasScreeOrientation) {\r\n                        // eslint-disable-next-line no-restricted-globals\r\n                        const orientationType = screen.orientation.type;\r\n                        if (orientationType === 'portrait-primary') {\r\n                            tmpOrientation = Orientation.PORTRAIT;\r\n                        } else {\r\n                            tmpOrientation = Orientation.PORTRAIT_UPSIDE_DOWN;\r\n                        }\r\n                    }\r\n                } else if (mediaQueryLandscape.matches) {\r\n                    tmpOrientation = Orientation.LANDSCAPE;\r\n                    if (hasScreeOrientation) {\r\n                        // eslint-disable-next-line no-restricted-globals\r\n                        const orientationType = screen.orientation.type;\r\n                        if (orientationType === 'landscape-primary') {\r\n                            tmpOrientation = Orientation.LANDSCAPE_LEFT;\r\n                        } else {\r\n                            tmpOrientation = Orientation.LANDSCAPE_RIGHT;\r\n                        }\r\n                    }\r\n                }\r\n                notifyOrientationChange(tmpOrientation);\r\n            };\r\n            if (mediaQueryPortrait.addEventListener) {\r\n                mediaQueryPortrait.addEventListener('change', orientationChangeCallback);\r\n                mediaQueryLandscape.addEventListener('change', orientationChangeCallback);\r\n            } else if (mediaQueryPortrait.addListener) {\r\n                mediaQueryPortrait.addListener(orientationChangeCallback);\r\n                mediaQueryLandscape.addListener(orientationChangeCallback);\r\n            }\r\n        } else {\r\n            handleOrientationChange = (): void => {\r\n                const tmpOrientation = getOrientation();\r\n                notifyOrientationChange(tmpOrientation);\r\n            };\r\n            window.addEventListener('orientationchange', orientationChangeCallback);\r\n        }\r\n        document.addEventListener(this._fn.fullscreenchange, () => {\r\n            this._onFullscreenChange?.();\r\n            this.emit('fullscreen-change', this.windowSize.width, this.windowSize.height);\r\n        });\r\n    }\r\n    private _convertToSizeInCssPixels (size: Size): Size {\r\n        const clonedSize = size.clone();\r\n        const dpr = this.devicePixelRatio;\r\n        clonedSize.width /= dpr;\r\n        clonedSize.height /= dpr;\r\n        return clonedSize;\r\n    }\r\n\r\n    /**\r\n     * The frame size may be from screen size or an external editor options by setting screen.windowSize.\r\n     * @param sizeInCssPixels you need to specify this size when the windowType is SubFrame.\r\n     */\r\n    private _resizeFrame (sizeInCssPixels?: Size): void {\r\n        if (!this._gameFrame) {\r\n            return;\r\n        }\r\n        // Center align the canvas\r\n        this._gameFrame.style.display = 'flex';\r\n        this._gameFrame.style['justify-content'] = 'center';\r\n        this._gameFrame.style['align-items'] = 'center';\r\n        if (this._windowType === WindowType.SubFrame) {\r\n            if (!sizeInCssPixels) {\r\n                this._updateContainer();\r\n                return;\r\n            }\r\n            this._gameFrame.style.width = `${sizeInCssPixels.width}px`;\r\n            this._gameFrame.style.height = `${sizeInCssPixels.height}px`;\r\n        } else {\r\n            const winWidth = window.innerWidth;\r\n            let winHeight = window.innerHeight;\r\n            //On certain android devices, window.innerHeight may not account for the height of the virtual keyboard, so dynamic calculation is necessary.\r\n            const inputHeight = document.body.scrollHeight - winHeight;\r\n            if (systemInfo.os === OS.ANDROID && winHeight < inputHeight) {\r\n                winHeight += inputHeight;\r\n            }\r\n            if (this.isFrameRotated) {\r\n                this._gameFrame.style['-webkit-transform'] = 'rotate(90deg)';\r\n                this._gameFrame.style.transform = 'rotate(90deg)';\r\n                this._gameFrame.style['-webkit-transform-origin'] = '0px 0px 0px';\r\n                this._gameFrame.style.transformOrigin = '0px 0px 0px';\r\n                this._gameFrame.style.margin = `0 0 0 ${winWidth}px`;\r\n                this._gameFrame.style.width = `${winHeight}px`;\r\n                this._gameFrame.style.height = `${winWidth}px`;\r\n            } else {\r\n                this._gameFrame.style['-webkit-transform'] = 'rotate(0deg)';\r\n                this._gameFrame.style.transform = 'rotate(0deg)';\r\n                // TODO\r\n                // this._gameFrame.style['-webkit-transform-origin'] = '0px 0px 0px';\r\n                // this._gameFrame.style.transformOrigin = '0px 0px 0px';\r\n                this._gameFrame.style.margin = '0px auto';\r\n                this._gameFrame.style.width = `${winWidth}px`;\r\n                this._gameFrame.style.height = `${winHeight}px`;\r\n            }\r\n        }\r\n\r\n        this._updateContainer();\r\n    }\r\n\r\n    private _getFullscreenTarget (): HTMLElement | undefined {\r\n        const windowType = this._windowType;\r\n        if (windowType === WindowType.Fullscreen) {\r\n            return document[this._fn.fullscreenElement] as HTMLElement;\r\n        }\r\n        if (windowType === WindowType.SubFrame) {\r\n            return this._gameFrame;\r\n        }\r\n        // On web mobile, the transform of game frame doesn't work when it's on fullscreen.\r\n        // So we need to make the body fullscreen.\r\n        return document.body;\r\n    }\r\n    private _doRequestFullScreen (): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this._supportFullScreen) {\r\n                reject(new Error('fullscreen is not supported'));\r\n                return;\r\n            }\r\n            const fullscreenTarget = this._getFullscreenTarget();\r\n            if (!fullscreenTarget) {\r\n                reject(new Error('Cannot access fullscreen target'));\r\n                return;\r\n            }\r\n            this._onFullscreenChange = undefined;\r\n            this._onFullscreenError = undefined;\r\n            const requestPromise = fullscreenTarget[this._fn.requestFullscreen]() as Promise<void> | undefined;\r\n            if (window.Promise && requestPromise instanceof Promise) {\r\n                requestPromise.then(resolve).catch(reject);\r\n            } else {\r\n                this._onFullscreenChange = resolve;\r\n                this._onFullscreenError = reject;\r\n            }\r\n        });\r\n    }\r\n    private _updateFrameState (): void {\r\n        const orientation = this.orientation;\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const isBrowserLandscape = width > height;\r\n        this.isFrameRotated = systemInfo.isMobile\r\n            && ((isBrowserLandscape && orientation === Orientation.PORTRAIT)\r\n             || (!isBrowserLandscape && orientation === Orientation.LANDSCAPE));\r\n    }\r\n    private _updateContainer (): void {\r\n        if (!this._gameContainer) {\r\n            warnID(9201);\r\n            return;\r\n        }\r\n        if (this.isProportionalToFrame) {\r\n            if (!this._gameFrame) {\r\n                warnID(9201);\r\n                return;\r\n            }\r\n            // TODO: access designedResolution from Launcher module.\r\n            const designedResolution = legacyCC.view.getDesignResolutionSize() as Size;\r\n            const frame = this._gameFrame;\r\n            const frameW = frame.clientWidth;\r\n            const frameH = frame.clientHeight;\r\n            const designW = designedResolution.width;\r\n            const designH = designedResolution.height;\r\n            const scaleX = frameW / designW;\r\n            const scaleY = frameH / designH;\r\n            const containerStyle = this._gameContainer.style;\r\n            let containerW: number;\r\n            let containerH: number;\r\n\r\n            if (scaleX < scaleY) {\r\n                containerW = frameW;\r\n                containerH = designH * scaleX;\r\n            } else {\r\n                containerW = designW * scaleY;\r\n                containerH = frameH;\r\n            }\r\n            // Set window size on game container\r\n            containerStyle.width = `${containerW}px`;\r\n            containerStyle.height = `${containerH}px`;\r\n        } else {\r\n            const containerStyle = this._gameContainer.style;\r\n            // game container exact fit game frame.\r\n            containerStyle.width = '100%';\r\n            containerStyle.height = '100%';\r\n        }\r\n\r\n        // Cache Test\r\n        if (this._gameFrame\r\n            && (this._cachedFrameStyle.width !== this._gameFrame.style.width\r\n            || this._cachedFrameStyle.height !== this._gameFrame.style.height\r\n            || this._cachedContainerStyle.width !== this._gameContainer.style.width\r\n            || this._cachedContainerStyle.height !== this._gameContainer.style.height)) {\r\n            this.emit('window-resize', this.windowSize.width, this.windowSize.height);\r\n\r\n            // Update Cache\r\n            this._cachedFrameStyle.width = this._gameFrame.style.width;\r\n            this._cachedFrameStyle.height = this._gameFrame.style.height;\r\n            this._cachedContainerStyle.width = this._gameContainer.style.width;\r\n            this._cachedContainerStyle.height = this._gameContainer.style.height;\r\n        }\r\n    }\r\n}\r\n\r\nexport const screenAdapter = new ScreenAdapter();\r\n\r\ncheckPalIntegrity<typeof import('pal/screen-adapter')>(withImpl<typeof import('./screen-adapter')>());\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { legacyCC } from '../global-exports';\r\nimport { Size } from '../math';\r\nimport { settings, SettingsCategory } from '../settings';\r\nimport { error, warn, warnID } from './debug';\r\nimport { PalScreenEvent } from '../../../pal/screen-adapter/enum-type';\r\n/**\r\n * @en The screen API provides an easy way to do some screen managing stuff.\r\n * @zh screen 单例对象提供简单的方法来做屏幕管理相关的工作。\r\n */\r\nexport class Screen {\r\n    /**\r\n     * @internal\r\n     */\r\n    public init (): void {\r\n        const exactFitScreen = settings.querySettings(SettingsCategory.SCREEN, 'exactFitScreen') ?? true;\r\n        const orientation = settings.querySettings(SettingsCategory.SCREEN, 'orientation') ?? 'auto';\r\n        const isHeadlessMode = settings.querySettings(SettingsCategory.RENDERING, 'renderMode') === 3;\r\n        screenAdapter.init({ exactFitScreen, configOrientation: orientation, isHeadlessMode }, (): void => {\r\n            const director = legacyCC.director;\r\n            if (!director.root?.pipeline) {\r\n                warnID(1220);\r\n                return;\r\n            }\r\n            director.root.pipeline.shadingScale = screenAdapter.resolutionScale;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en the ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device\r\n     * NOTE: For performance reasons, the engine will limit the maximum value of DPR on some platforms.\r\n     * This property returns the DPR after the engine limit.\r\n     * @zh 当前显示设备的物理像素分辨率与 CSS 像素分辨率之比。\r\n     * 注意：出于性能考虑，引擎在一些平台会限制 DPR 的最高值，这个属性返回的是引擎限制后的 DPR。\r\n     */\r\n    public get devicePixelRatio (): number {\r\n        return screenAdapter.devicePixelRatio;\r\n    }\r\n\r\n    /**\r\n     * @en Get and set the size of current window in physical pixels.\r\n     * NOTE:\r\n     * - Setting window size is only supported on Web platform for now.\r\n     * - On Web platform, if the ContainerStrategy is PROPORTIONAL_TO_FRAME, we set windowSize on game frame,\r\n     *    and get windowSize from the game container after adaptation.\r\n     * @zh 获取和设置当前窗口的物理像素尺寸。\r\n     * 注意\r\n     * - 设置窗口尺寸目前只在 Web 平台上支持。\r\n     * - Web 平台上，如果 ContainerStrategy 为 PROPORTIONAL_TO_FRAME, 则设置 windowSize 作用于 game frame, 而从适配之后 game container 尺寸获取 windowSize.\r\n     */\r\n    public get windowSize (): Size {\r\n        return screenAdapter.windowSize;\r\n    }\r\n    public set windowSize (size: Size) {\r\n        screenAdapter.windowSize = size;\r\n    }\r\n\r\n    /**\r\n     * @en Get the current resolution of game.\r\n     * This is a readonly property.\r\n     * @zh 获取当前游戏的分辨率。\r\n     * 这是一个只读属性。\r\n     *\r\n     * @readonly\r\n     */\r\n    public get resolution (): Size {\r\n        return screenAdapter.resolution;\r\n    }\r\n\r\n    // /**\r\n    //  * @en Get and set the resolution scale of screen, which will affect the quality of the rendering.\r\n    //  * Note: if this value is set too high, the rendering performance of GPU will be reduced, this value is 1 by default.\r\n    //  * @zh 获取和设置屏幕的分辨率缩放比，这将会影响最终渲染的质量。\r\n    //  * 注意：如果这个值设置的太高，会降低 GPU 的渲染性能，该值默认为 1。\r\n    //  */\r\n    // public get resolutionScale () {\r\n    //     return screenAdapter.resolutionScale;\r\n    // }\r\n    // public set resolutionScale (v: number) {\r\n    //     screenAdapter.resolutionScale = v;\r\n    // }\r\n\r\n    /**\r\n     * @en Whether it supports full screen.\r\n     * @zh 是否支持全屏。\r\n     * @returns {Boolean}\r\n     */\r\n    public get supportsFullScreen (): boolean {\r\n        return screenAdapter.supportFullScreen;\r\n    }\r\n\r\n    /**\r\n     * @en Return true if it's in full screen state now.\r\n     * @zh 当前是否处在全屏状态下。\r\n     * @returns {boolean}\r\n     */\r\n    public fullScreen (): boolean {\r\n        return screenAdapter.isFullScreen;\r\n    }\r\n\r\n    /**\r\n     * @en Request to enter full screen mode with the given element.\r\n     * Many browsers forbid to enter full screen mode without an user intended interaction.\r\n     * If failed to request fullscreen, another attempt will be made to request fullscreen the next time a user interaction occurs.\r\n     * @zh 尝试使当前节点进入全屏模式，很多浏览器不允许程序触发这样的行为，必须在一个用户交互回调中才会生效。\r\n     * 如果进入全屏失败，会在下一次用户发生交互时，再次尝试进入全屏。\r\n     * @param element @zh 请求全屏状态的html元素。 @en The element to request full screen state.\r\n     * @param onFullScreenChange @zh 全屏状态改变的回调函数。 @en callback function when full screen state changed.\r\n     * @param onFullScreenError @zh 全屏错误的回调函数。 @en callback function when full screen error.\r\n     * @return {Promise|undefined}\r\n     * @deprecated since v3.3, please use `screen.requestFullScreen(): Promise<void>` instead.\r\n     */\r\n    public requestFullScreen (element: HTMLElement, onFullScreenChange?: (this: Document, ev: any) => any, onFullScreenError?: (this: Document, ev: any) => any): Promise<any> | undefined;\r\n    /**\r\n     * @en Request to enter full screen mode.\r\n     * Many browsers forbid to enter full screen mode without an user intended interaction.\r\n     * If failed to request fullscreen, another attempt will be made to request fullscreen the next time a user interaction occurs.\r\n     * @zh 尝试使当前屏幕进入全屏模式，很多浏览器不允许程序触发这样的行为，必须在一个用户交互回调中才会生效。\r\n     * 如果进入全屏失败，会在下一次用户发生交互时，再次尝试进入全屏。\r\n     * @param element @zh 请求全屏状态的html元素。 @en The element to request full screen state.\r\n     * @param onFullScreenChange @zh 全屏状态改变的回调函数。 @en callback function when full screen state changed.\r\n     * @param onFullScreenError @zh 全屏错误的回调函数。 @en callback function when full screen error.\r\n     * @return {Promise}\r\n     */\r\n    public requestFullScreen (): Promise<void>;\r\n    public requestFullScreen (element?: HTMLElement, onFullScreenChange?: (this: Document, ev?: any) => any, onFullScreenError?: (this: Document, ev?: any) => any): Promise<any> {\r\n        if (arguments.length > 0) {\r\n            warnID(1400, 'screen.requestFullScreen(element, onFullScreenChange?, onFullScreenError?)', 'screen.requestFullScreen(): Promise');\r\n        }\r\n        return screenAdapter.requestFullScreen().then((): void => {\r\n            onFullScreenChange?.call(document);  // this case is only used on Web platforms, which is deprecated since v3.3.0\r\n        }).catch((err): void => {\r\n            error(err);\r\n            onFullScreenError?.call(document);  // this case is only used on Web platforms, which is deprecated since v3.3.0\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en Exit the full mode.\r\n     * @zh 退出全屏模式。\r\n     * @return {Promise}\r\n     */\r\n    public exitFullScreen (): Promise<any> {\r\n        return screenAdapter.exitFullScreen();\r\n    }\r\n\r\n    /**\r\n     * @en Automatically request full screen during the next touch/click event.\r\n     * @zh 自动监听触摸、鼠标事件并在下一次事件触发时尝试进入全屏模式。\r\n     * @param element @zh 请求全屏状态的html元素。 @en The element to request full screen state.\r\n     * @param onFullScreenChange @zh 全屏状态改变的回调函数。 @en callback function when full screen state changed.\r\n     *\r\n     * @deprecated since v3.3, please use screen.requestFullScreen() instead.\r\n     */\r\n    public autoFullScreen (element: HTMLElement, onFullScreenChange: (this: Document, ev: any) => any): void {\r\n        this.requestFullScreen(element, onFullScreenChange)?.catch((e): void => { warn(e); });\r\n    }\r\n\r\n    /**\r\n     * @param element\r\n     * @deprecated since v3.3\r\n     */\r\n    public disableAutoFullScreen (element): void {\r\n        // DO NOTHING\r\n    }\r\n\r\n    // TODO: to support registering fullscreen change\r\n    /**\r\n     * @en\r\n     * Register screen event callback.\r\n     * @zh\r\n     * 注册screen事件回调。\r\n     */\r\n    public on (type: PalScreenEvent, callback: (...args: any) => void, target?: any): void {\r\n        screenAdapter.on(type, callback, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register a callback of a specific screen event type once.\r\n     * @zh\r\n     * 注册单次的screen事件回调。\r\n     */\r\n    public once (type: PalScreenEvent, callback: (...args: any) => void, target?: any): void {\r\n        screenAdapter.once(type, callback, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Unregister screen event callback.\r\n     * @zh\r\n     * 取消注册screen事件回调。\r\n     */\r\n    public off (type: PalScreenEvent, callback?: (...args: any) => void, target?: any): void {\r\n        screenAdapter.off(type, callback, target);\r\n    }\r\n}\r\n\r\nconst screen = new Screen();\r\n\r\nlegacyCC.screen = screen;\r\n\r\nexport { screen };\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BYTEDANCE, WECHAT, WECHAT_MINI_PROGRAM } from 'internal:constants';\r\n\r\nimport { systemInfo } from 'pal/system-info';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { legacyCC } from '../global-exports';\r\nimport { Rect } from '../math/rect';\r\nimport { Vec2 } from '../math/vec2';\r\nimport { warnID, log } from './debug';\r\nimport { NetworkType, Language, OS, Platform, BrowserType, Feature } from '../../../pal/system-info/enum-type';\r\nimport { screen } from './screen';\r\nimport { macro } from './macro';\r\nimport type { View } from '../../ui/view';\r\n\r\n// TODO: the type Storage conflicts with the one on OH platform.\r\ntype Storage = any;\r\n\r\nexport declare namespace sys {\r\n    /**\r\n     * @en\r\n     * Platform related feature enum type.\r\n     * @zh\r\n     * 平台相关的特性枚举类型。\r\n     */\r\n    export type Feature = EnumAlias<typeof Feature>;\r\n}\r\n\r\n/**\r\n * @en A set of system related variables.\r\n * @zh 一系列系统相关环境变量。\r\n */\r\nexport const sys = {\r\n    Feature,\r\n\r\n    /**\r\n     * @en\r\n     * Returns if the specified platform related feature is supported.\r\n     * @zh\r\n     * 返回指定的平台相关的特性是否支持。\r\n     * @param feature @zh 系统的特性。 @en Feature of the system.\r\n     */\r\n    hasFeature (feature: sys.Feature): boolean {\r\n        return systemInfo.hasFeature(feature);\r\n    },\r\n\r\n    /**\r\n     * @en\r\n     * Network type enumeration.\r\n     * @zh\r\n     * 网络类型枚举。\r\n     */\r\n    NetworkType,\r\n\r\n    /**\r\n     * @en\r\n     * LanguageCode type enumeration.\r\n     * @zh\r\n     * 语言码类型枚举。\r\n     */\r\n    Language,\r\n\r\n    /**\r\n     * @en\r\n     * OS type enumeration.\r\n     * @zh\r\n     * 操作系统类型枚举。\r\n     */\r\n    OS,\r\n\r\n    /**\r\n     * @en\r\n     * Platform type enumeration.\r\n     * @zh\r\n     * 平台类型枚举。\r\n     */\r\n    Platform,\r\n\r\n    /**\r\n     * @en\r\n     * Browser type enumeration.\r\n     * @zh\r\n     * 浏览器类型枚举。\r\n     */\r\n    BrowserType,\r\n\r\n    /**\r\n     * @en Whether the running platform is native app.\r\n     * @zh 指示运行平台是否是原生平台。\r\n     */\r\n    isNative: systemInfo.isNative,\r\n\r\n    /**\r\n     * @en Whether the running platform is browser.\r\n     * @zh 指示运行平台是否是浏览器。\r\n     */\r\n    isBrowser: systemInfo.isBrowser,\r\n\r\n    /**\r\n     * @en Indicate whether the current running context is a mobile system.\r\n     * @zh 指示当前运行平台是否是移动端平台。\r\n     */\r\n    isMobile: systemInfo.isMobile,\r\n\r\n    /**\r\n     * @en Whether the endianness of current platform is little endian.\r\n     * @zh 当前平台字节顺序是否是小端序。\r\n     */\r\n    isLittleEndian: systemInfo.isLittleEndian,\r\n\r\n    /**\r\n     * @en The running platform.\r\n     * @zh 当前运行平台或环境。\r\n     */\r\n    platform: systemInfo.platform,\r\n\r\n    /**\r\n     * @en Indicate the current language of the running system.\r\n     * @zh 指示当前运行环境的语言。\r\n     */\r\n    language: systemInfo.language,\r\n\r\n    /**\r\n     * @en\r\n     * Get current language iso 639-1 code.\r\n     * Examples of valid language codes include \"zh-tw\", \"en\", \"en-us\", \"fr\", \"fr-fr\", \"es-es\", etc.\r\n     * The actual value totally depends on results provided by destination platform.\r\n     * @zh\r\n     * 指示当前运行环境的语言\r\n     * 获取当前的语言iso 639-1代码。\r\n     * 有效的语言代码包括 \"zh-tw\"、\"en\"、\"en-us\"、\"fr\"、\"fr-fr\"、\"es-es \"等。\r\n     * 实际值完全取决于目的地平台提供的结果。\r\n     */\r\n    languageCode: systemInfo.nativeLanguage,\r\n\r\n    /**\r\n     * @en Indicate the running os name.\r\n     * @zh 指示当前运行系统。\r\n     */\r\n    os: systemInfo.os,\r\n\r\n    /**\r\n     * @en Indicate the running os version string.\r\n     * @zh 指示当前运行系统版本字符串。\r\n     */\r\n    osVersion: systemInfo.osVersion,\r\n\r\n    /**\r\n     * @en Indicate the running os main version.\r\n     * @zh 指示当前系统主版本。\r\n     */\r\n    osMainVersion: systemInfo.osMainVersion,\r\n\r\n    /**\r\n     * @en Indicate the running browser type.\r\n     * @zh 指示当前运行的浏览器类型。\r\n     */\r\n    browserType: systemInfo.browserType,\r\n\r\n    /**\r\n     * @en Indicate the running browser version.\r\n     * @zh 指示当前运行的浏览器版本。\r\n     */\r\n    browserVersion: systemInfo.browserVersion,\r\n\r\n    /**\r\n     * @en Whether the running platform is xr app.\r\n     * @zh 指示运行平台是否是XR平台。\r\n     */\r\n    isXR: systemInfo.isXR,\r\n\r\n    /**\r\n     * @en Indicate the real pixel resolution of the whole game window.\r\n     * @zh 指示游戏窗口的像素分辨率。\r\n     *\r\n     * @deprecated since v3.4.0, please use screen.windowSize instead.\r\n     */\r\n    windowPixelResolution: screen.windowSize,\r\n\r\n    /**\r\n     * @en The capabilities of the current platform.\r\n     * @zh 当前平台的功能可用性。\r\n     *\r\n     * @deprecated since v3.4.0, please use sys.hasFeature() instead.\r\n     */\r\n    capabilities: {\r\n        canvas: true,\r\n        opengl: true,\r\n        webp: systemInfo.hasFeature(Feature.WEBP),\r\n        imageBitmap: systemInfo.hasFeature(Feature.IMAGE_BITMAP),\r\n        touches: systemInfo.hasFeature(Feature.INPUT_TOUCH),\r\n        mouse: systemInfo.hasFeature(Feature.EVENT_MOUSE),\r\n        keyboard: systemInfo.hasFeature(Feature.EVENT_KEYBOARD),\r\n        accelerometer: systemInfo.hasFeature(Feature.EVENT_ACCELEROMETER),\r\n    },\r\n\r\n    /**\r\n     * @en It is a local storage component based on HTML5 localStorage API, on web platform, it's equal to window.localStorage.\r\n     * @zh HTML5 标准中的 localStorage 的本地存储功能，在 Web 端等价于 window.localStorage。\r\n     */\r\n    localStorage: {} as Storage,\r\n\r\n    /**\r\n     * @en Get the network type of current device, return `sys.NetworkType.LAN` if failure.\r\n     * @zh 获取当前设备的网络类型, 如果网络类型无法获取，默认将返回 `sys.NetworkType.LAN`。\r\n     * @return @zh 返回 LAN 或 WWAN。 @en LAN or WWAN.\r\n     */\r\n    getNetworkType (): NetworkType {\r\n        return systemInfo.networkType;\r\n    },\r\n\r\n    /**\r\n     * @en Get the battery level of current device, return 1.0 if failure.\r\n     * @zh 获取当前设备的电池电量，如果电量无法获取，默认将返回 1。\r\n     * @return - 0.0 ~ 1.0\r\n     */\r\n    getBatteryLevel (): number {\r\n        return systemInfo.getBatteryLevel();\r\n    },\r\n\r\n    /**\r\n     * @en Forces the garbage collection, only available in native platforms.\r\n     * @zh 强制进行 JS 内存垃圾回收，尽在原生平台有效。\r\n     */\r\n    garbageCollect (): void {\r\n        systemInfo.triggerGC();\r\n    },\r\n\r\n    /**\r\n     * @en Check whether an object is valid,\r\n     * In web engine, it will return true if the object exist\r\n     * In native engine, it will return true if the JS object and the correspond native object are both valid\r\n     * @zh 检查一个对象是否非空或在原生平台有效，\r\n     * 在 Web 平台，只要对象非空或非 Undefined 就会返回 true，在原生平台，我们会检查当前 JS 对象和其绑定的原生对象是否都有效。\r\n     * @param obj @zh 校验的对象。@en The object to be checked.\r\n     */\r\n    isObjectValid (obj: any): boolean {\r\n        if (obj === null || obj === undefined) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    __isWebIOS14OrIPadOS14Env: false,\r\n\r\n    /**\r\n     * @en Dump systemInfo informations.\r\n     * @zh 在控制台打印当前的主要系统信息。\r\n     */\r\n    dump (): void {\r\n        let str = '';\r\n        str += `isMobile : ${this.isMobile}\\r\\n`;\r\n        str += `language : ${this.language}\\r\\n`;\r\n        str += `browserType : ${this.browserType}\\r\\n`;\r\n        str += `browserVersion : ${this.browserVersion}\\r\\n`;\r\n        str += `supports webp: ${sys.hasFeature(Feature.WEBP)}\\r\\n`;\r\n        str += `supports bitmap: ${sys.hasFeature(Feature.IMAGE_BITMAP)}\\r\\n`;\r\n        str += `supports touches: ${sys.hasFeature(Feature.INPUT_TOUCH)}\\r\\n`;\r\n        str += `supports mouse: ${sys.hasFeature(Feature.EVENT_MOUSE)}\\r\\n`;\r\n        str += `supports keyboard: ${sys.hasFeature(Feature.EVENT_KEYBOARD)}\\r\\n`;\r\n        str += `supports accelerometer: ${sys.hasFeature(Feature.EVENT_ACCELEROMETER)}\\r\\n`;\r\n        str += `os : ${this.os}\\r\\n`;\r\n        str += `osVersion : ${this.osVersion}\\r\\n`;\r\n        str += `platform : ${this.platform}\\r\\n`;\r\n        str += `Using ${legacyCC.game.renderType === legacyCC.game.RENDER_TYPE_WEBGL ? 'WEBGL' : 'CANVAS'} renderer.\\r\\n`;\r\n        log(str);\r\n    },\r\n\r\n    /**\r\n     * @en Try to open a url in browser, may not work in some platforms.\r\n     * @zh 尝试打开一个 web 页面，并非在所有平台都有效。\r\n     * @param url @zh 访问的链接。 @en Visited links.\r\n     */\r\n    openURL (url: string): void {\r\n        systemInfo.openURL(url);\r\n    },\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    init (): Promise<void> {\r\n        return Promise.resolve()\r\n            .then((): any => systemInfo.init())\r\n            .then((): void => {\r\n                try {\r\n                    let localStorage: Storage = sys.localStorage = window.localStorage;\r\n                    localStorage.setItem('storage', '');\r\n                    localStorage.removeItem('storage');\r\n                    localStorage = null;\r\n                } catch (e) {\r\n                    const warn = function warn (...args: any): any {\r\n                        warnID(5200);\r\n                    };\r\n                    this.localStorage = {\r\n                        getItem: warn,\r\n                        setItem: warn,\r\n                        clear: warn,\r\n                        removeItem: warn,\r\n                        key: warn,\r\n                        length: 0,\r\n                    };\r\n                }\r\n\r\n                if (WECHAT || WECHAT_MINI_PROGRAM || BYTEDANCE) {\r\n                    this.__isWebIOS14OrIPadOS14Env = (sys.os === OS.IOS || sys.os === OS.OSX) && GameGlobal?.isIOSHighPerformanceMode\r\n            && /(OS 1((4\\.[0-9])|(5\\.[0-3])))|(Version\\/1((4\\.[0-9])|(5\\.[0-3])))/.test(window.navigator.userAgent);\r\n                } else {\r\n                    this.__isWebIOS14OrIPadOS14Env = (sys.os === OS.IOS || sys.os === OS.OSX) && systemInfo.isBrowser\r\n            && /(OS 14)|(Version\\/14)/.test(window.navigator.userAgent);\r\n                }\r\n            });\r\n    },\r\n\r\n    /**\r\n     * @en Get the current time in milliseconds.\r\n     * @zh 获取当前时间（毫秒为单位）。\r\n     */\r\n    now (): number {\r\n        return systemInfo.now();\r\n    },\r\n\r\n    /**\r\n     * @en Restart the JS VM, only available in native platforms.\r\n     * @zh 重启JS虚拟机，仅仅在原生平台有效。\r\n     * @private\r\n     */\r\n    restartVM (): void {\r\n        systemInfo.restartJSVM();\r\n    },\r\n\r\n    /**\r\n     * @en\r\n     * Returns the safe area of the screen (in design resolution) based on the game view coordinate system.\r\n     * If the screen is not notched, this method returns a Rect of the same size as visibleSize by default.\r\n     * Currently supports Android, iOS and WeChat, ByteDance Mini Game platform.\r\n     * @zh\r\n     * 返回基于游戏视图坐标系的手机屏幕安全区域（设计分辨率为单位），如果不是异形屏将默认返回一个和 visibleSize 一样大的 Rect。\r\n     * 目前支持安卓、iOS 原生平台和微信、字节小游戏平台。\r\n     * @method getSafeAreaRect\r\n     * @param [symmetric=true] @zh 基于屏幕对称的 Rect。 @en Rect that is symmetric based on the screen.\r\n     * @return {Rect}\r\n     */\r\n    getSafeAreaRect (symmetric: boolean = true): Rect {\r\n        const locView: View = legacyCC.view;\r\n        const edge = screenAdapter.safeAreaEdge;\r\n        if (symmetric) {\r\n            if (screenAdapter.orientation === macro.ORIENTATION_PORTRAIT) {\r\n                if (edge.top < edge.bottom) {\r\n                    edge.top = edge.bottom;\r\n                } else {\r\n                    edge.bottom = edge.top;\r\n                }\r\n            } else if (edge.left < edge.right) {\r\n                edge.left = edge.right;\r\n            } else {\r\n                edge.right = edge.left;\r\n            }\r\n        }\r\n        const windowSize = screenAdapter.windowSize;\r\n\r\n        // Get leftBottom and rightTop point in screen coordinates system.\r\n        const leftBottom = new Vec2(edge.left, edge.bottom);\r\n        const rightTop = new Vec2(windowSize.width - edge.right, windowSize.height - edge.top);\r\n\r\n        // Convert view point to UI coordinate system.\r\n        locView._convertToUISpace(leftBottom);\r\n        locView._convertToUISpace(rightTop);\r\n\r\n        const x = leftBottom.x;\r\n        const y = leftBottom.y;\r\n        const width = rightTop.x - leftBottom.x;\r\n        const height = rightTop.y - leftBottom.y;\r\n        return new Rect(x, y, width, height);\r\n    },\r\n};\r\n\r\nlegacyCC.sys = sys;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { markAsWarning, removeProperty, replaceProperty } from '../utils';\r\nimport { sys } from './sys';\r\nimport { legacyCC } from '../global-exports';\r\nimport { screen } from './screen';\r\n\r\nmarkAsWarning(legacyCC, 'cc', [\r\n    {\r\n        name: 'winSize',\r\n        suggest: 'please use view.getVisibleSize() instead.',\r\n    },\r\n]);\r\n// #endregion deprecation on view\r\n// deprecate capabilities field\r\nmarkAsWarning(sys, 'sys', [\r\n    {\r\n        name: 'capabilities',\r\n        suggest: 'please use sys.hasFeature() method instead.',\r\n    },\r\n]);\r\n\r\n// deprecate languageCode field\r\nreplaceProperty(\r\n    sys,\r\n    'sys',\r\n    ['UNKNOWN', 'ENGLISH', 'CHINESE', 'FRENCH', 'ITALIAN',\r\n        'GERMAN', 'SPANISH', 'DUTCH', 'RUSSIAN', 'KOREAN',\r\n        'JAPANESE', 'HUNGARIAN', 'PORTUGUESE', 'ARABIC', 'NORWEGIAN',\r\n        'POLISH', 'TURKISH', 'UKRAINIAN', 'ROMANIAN', 'BULGARIAN'].map((item) => ({\r\n        name: `LANGUAGE_${item}`,\r\n        newName: item,\r\n        target: sys.Language,\r\n        targetName: 'sys.Language',\r\n    })),\r\n);\r\n\r\n// deprecate os field\r\nreplaceProperty(\r\n    sys,\r\n    'sys',\r\n    ['UNKNOWN', 'IOS', 'ANDROID', 'WINDOWS', 'LINUX', 'OSX'].map((item) => ({\r\n        name: `OS_${item}`,\r\n        newName: item,\r\n        target: sys.OS,\r\n        targetName: 'sys.OS',\r\n    })),\r\n);\r\n\r\n// deprecate browserType field\r\nreplaceProperty(\r\n    sys,\r\n    'sys',\r\n    ['UNKNOWN', 'WECHAT', 'ANDROID', 'IE', 'EDGE', 'QQ', 'MOBILE_QQ',\r\n        'UC', 'UCBS', 'BAIDU_APP', 'BAIDU', 'MAXTHON', 'OPERA',\r\n        'OUPENG', 'MIUI', 'FIREFOX', 'SAFARI', 'CHROME', 'LIEBAO',\r\n        'QZONE', 'SOUGOU', 'HUAWEI'].map((item) => ({\r\n        name: `BROWSER_TYPE_${item}`,\r\n        newName: item,\r\n        target: sys.BrowserType,\r\n        targetName: 'sys.BrowserType',\r\n    })),\r\n);\r\nreplaceProperty(sys, 'sys', [\r\n    {\r\n        name: 'BROWSER_TYPE_360',\r\n        newName: 'BROWSER_360',\r\n        target: sys.BrowserType,\r\n        targetName: 'sys.BrowserType',\r\n    },\r\n]);\r\n\r\n// deprecate platform field\r\nreplaceProperty(\r\n    sys,\r\n    'sys',\r\n    ['UNKNOWN', 'EDITOR_PAGE', 'EDITOR_CORE', 'MOBILE_BROWSER', 'DESKTOP_BROWSER', 'WIN32', 'MACOS', 'IOS', 'ANDROID', 'OHOS',\r\n        'WECHAT_GAME', 'XIAOMI_QUICK_GAME', 'ALIPAY_MINI_GAME', 'BYTEDANCE_MINI_GAME',\r\n        'OPPO_MINI_GAME', 'VIVO_MINI_GAME', 'HUAWEI_QUICK_GAME'].map((item) => ({\r\n        name: item,\r\n        target: sys.Platform,\r\n        targetName: 'sys.Platform',\r\n    })),\r\n);\r\n\r\n// remove platform field\r\nreplaceProperty(sys, 'sys', [\r\n    {\r\n        name: 'IPHONE',\r\n        newName: 'IOS',\r\n        target: sys.Platform,\r\n        targetName: 'sys.Platform',\r\n    },\r\n    {\r\n        name: 'IPAD',\r\n        newName: 'IOS',\r\n        target: sys.Platform,\r\n        targetName: 'sys.Platform',\r\n    },\r\n]);\r\nremoveProperty(\r\n    sys,\r\n    'sys',\r\n    ['LINUX', 'BLACKBERRY', 'NACL', 'EMSCRIPTEN', 'TIZEN',\r\n        'WINRT', 'WP8', 'QQ_PLAY', 'FB_PLAYABLE_ADS'].map((item) => ({\r\n        name: item,\r\n    })),\r\n);\r\nreplaceProperty(sys, 'sys', [\r\n    {\r\n        name: 'windowPixelResolution',\r\n        target: screen,\r\n        targetName: 'screen',\r\n        newName: 'windowSize',\r\n    },\r\n]);\r\n\r\n// deprecate screen API\r\nmarkAsWarning(screen, 'screen', [\r\n    {\r\n        name: 'autoFullScreen',\r\n        suggest: 'please use screen.requestFullScreen() instead.',\r\n    },\r\n    {\r\n        name: 'disableAutoFullScreen',\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Rect } from '../math';\r\nimport { legacyCC } from '../global-exports';\r\n\r\n/**\r\n * @zh `visibleRect` is a singleton object which defines the actual visible rect of the current view.\r\n * @en `visibleRect` 是一个定义当前视图的实际可见矩形的单例对象。\r\n * @engineInternal\r\n */\r\nexport const visibleRect = {\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕左上方坐标。\r\n     * @en Top left coordinate of the screen related to the game scene.\r\n     */\r\n    topLeft: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕右上方坐标。\r\n     * @en Top right coordinate of the screen related to the game scene.\r\n     */\r\n    topRight: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕上方中心坐标。\r\n     * @en Top center coordinate of the screen related to the game scene.\r\n     */\r\n    top: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕左下坐标。\r\n     * @en Bottom left coordinate of the screen related to the game scene.\r\n     */\r\n    bottomLeft: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕右下坐标。\r\n     * @en Bottom right coordinate of the screen related to the game scene.\r\n     */\r\n    bottomRight: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕下方中心坐标。\r\n     * @en Bottom center coordinate of the screen related to the game scene.\r\n     */\r\n    bottom: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕中心坐标。\r\n     * @en Center coordinate of the screen related to the game scene.\r\n     */\r\n    center: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕左边中心坐标。\r\n     * @en Left center coordinate of the screen related to the game scene.\r\n     */\r\n    left: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 与游戏场景有关的屏幕右边中心坐标。\r\n     * @en Right center coordinate of the screen related to the game scene.\r\n     */\r\n    right: legacyCC.v2(0, 0),\r\n\r\n    /**\r\n     * @zh 屏幕宽度。\r\n     * @en Width of the screen.\r\n     */\r\n    width: 0,\r\n\r\n    /**\r\n     * @zh 屏幕高度。\r\n     * @en Height of the screen.\r\n     */\r\n    height: 0,\r\n\r\n    /**\r\n     * @zh 初始化函数。\r\n     * @en Initialization function.\r\n     * @param visibleRect_ @zh 当前视图的实际可见区域。@en The actual visible area of the current view.\r\n     * @NOTE: @zh 必须是有效的区域。例如区域大小不能为负数。@en It must be a valid region. For example, the region size cannot be negative.\r\n     */\r\n    init (visibleRect_: Rect): void {\r\n        const w = this.width = visibleRect_.width;\r\n        const h = this.height = visibleRect_.height;\r\n        const l = visibleRect_.x;\r\n        const b = visibleRect_.y;\r\n        const t = b + h;\r\n        const r = l + w;\r\n\r\n        // top\r\n        this.topLeft.x = l;\r\n        this.topLeft.y = t;\r\n        this.topRight.x = r;\r\n        this.topRight.y = t;\r\n        this.top.x = l + w / 2;\r\n        this.top.y = t;\r\n\r\n        // bottom\r\n        this.bottomLeft.x = l;\r\n        this.bottomLeft.y = b;\r\n        this.bottomRight.x = r;\r\n        this.bottomRight.y = b;\r\n        this.bottom.x = l + w / 2;\r\n        this.bottom.y = b;\r\n\r\n        // center\r\n        this.center.x = l + w / 2;\r\n        this.center.y = b + h / 2;\r\n\r\n        // left\r\n        this.left.x = l;\r\n        this.left.y = b + h / 2;\r\n\r\n        // right\r\n        this.right.x = r;\r\n        this.right.y = b + h / 2;\r\n    },\r\n};\r\n\r\nlegacyCC.visibleRect = visibleRect;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG } from 'internal:constants';\r\nimport { Mat3, Mat4, Quat, Vec3 } from '../math';\r\nimport { ShapeType } from './enums';\r\nimport { IVec3, IVec3Like } from '../math/type-define';\r\nimport { Sphere } from './sphere';\r\nimport { Frustum } from './frustum';\r\nimport { warn } from '../platform';\r\n\r\nconst _v3_tmp = new Vec3();\r\nconst _v3_tmp2 = new Vec3();\r\nconst _v3_tmp3 = new Vec3();\r\nconst _v3_tmp4 = new Vec3();\r\nconst _m3_tmp = new Mat3();\r\n\r\nconst mathAbs = Math.abs;\r\n\r\n// https://zeuxcg.org/2010/10/17/aabb-from-obb-with-component-wise-abs/\r\nconst transform_extent_m4 = (out: Vec3, extent: Vec3, m4: Mat4 | Readonly<Mat4>): void => {\r\n    _m3_tmp.m00 = mathAbs(m4.m00); _m3_tmp.m01 = mathAbs(m4.m01); _m3_tmp.m02 = mathAbs(m4.m02);\r\n    _m3_tmp.m03 = mathAbs(m4.m04); _m3_tmp.m04 = mathAbs(m4.m05); _m3_tmp.m05 = mathAbs(m4.m06);\r\n    _m3_tmp.m06 = mathAbs(m4.m08); _m3_tmp.m07 = mathAbs(m4.m09); _m3_tmp.m08 = mathAbs(m4.m10);\r\n    Vec3.transformMat3(out, extent, _m3_tmp);\r\n};\r\n\r\n/**\r\n  * @en\r\n  * Basic Geometry: Axis-aligned bounding box, using center and half extents structure.\r\n  * It's a fairly computationally and memory efficient way of checking whether two 3D objects might be touching.\r\n  * @zh\r\n  * 基础几何：轴对齐包围盒，使用中心点和半长宽高的结构。\r\n  * 这是检查两个 3D 对象是否相交的一种在计算和内存上效率都相当高的方法。\r\n  */\r\n\r\nexport class AABB {\r\n    /**\r\n      * @en\r\n      * Creates a new AABB instance.\r\n      * @zh\r\n      * 创建一个新的 AABB 实例。\r\n      * @param px @zh AABB 原点的 X 坐标。 @en The x coordinate of the origin of the AABB.\r\n      * @param py @zh AABB 原点的 Y 坐标。 @en The y coordinate of the origin of the AABB.\r\n      * @param pz @zh AABB 原点的 Z 坐标。 @en The z coordinate of the origin of the AABB.\r\n      * @param hw @zh AABB 宽度的一半。 @en Half the width of the AABB.\r\n      * @param hh @zh AABB 高度的一半。 @en Half the height of the AABB.\r\n      * @param hl @zh AABB 长度的一半。 @en Half the length of the AABB.\r\n      * @returns @zh 返回新创建的 AABB 实例。 @en A new instance of AABB.\r\n      */\r\n    public static create (px?: number, py?: number, pz?: number, hw?: number, hh?: number, hl?: number): AABB {\r\n        return new AABB(px, py, pz, hw, hh, hl);\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Clones an AABB, which will create a new AABB instance with the same value as the input parameter `a`. Note that each time `clone` is invoked,\r\n      * a new AABB object will be created, so use `copy` method whenever it could to reduce GC pressure.\r\n      * @zh\r\n      * 克隆一个 AABB，其会创建出一个值跟输入参数`a`一样的 AABB 实例。注意，每次调用 `clone` 都会创建出新实例，尽可能使用 `copy` 方法以减小 GC 压力。\r\n      * @param a @zh 克隆的目标。 @en The target object to be cloned.\r\n      * @returns @zh 克隆出的 AABB 实例。@en The cloned AABB instance.\r\n      * @deprecated since v3.8.4. Please use the corresponding instance method instead.\r\n      */\r\n    public static clone (a: AABB | Readonly<AABB>): AABB {\r\n        // Put it in debug mode to reduce package size.\r\n        if (DEBUG) {\r\n            warn('The static method AABB.clone has been deprecated. Please use the corresponding instance method instead.');\r\n        }\r\n\r\n        return new AABB(\r\n            a.center.x,\r\n            a.center.y,\r\n            a.center.z,\r\n            a.halfExtents.x,\r\n            a.halfExtents.y,\r\n            a.halfExtents.z,\r\n        );\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Copies the values from one AABB to another, the process will not generate temporary objects.\r\n      * @zh\r\n      * 将一个 AABB 的值复制到另一个 AABB 中，此过程将不会产生临时对象。\r\n      * @param out @zh 接受操作的 AABB。 @en The output AABB which is the copy destination.\r\n      * @param a @zh 被复制的 AABB，此为只读参数。 @en The source object of the copy operation, it's readonly.\r\n      * @returns @zh 接受操作的 AABB `out` 的引用。 @en The reference to the first parameter `out`.\r\n      * @deprecated since v3.8.4. Please use the corresponding instance method instead.\r\n      */\r\n    public static copy (out: AABB, a: AABB | Readonly<AABB>): AABB {\r\n        // Put it in debug mode to reduce package size.\r\n        if (DEBUG) {\r\n            warn('The static method AABB.copy has been deprecated. Please use the corresponding instance method instead.');\r\n        }\r\n\r\n        Vec3.copy(out.center, a.center);\r\n        Vec3.copy(out.halfExtents, a.halfExtents);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Constructs a new AABB from two corner points.\r\n      * @zh\r\n      * 从两个点创建一个新的 AABB。\r\n      * @param out @zh 接受操作的 AABB。 @en The output AABB.\r\n      * @param minPos @zh AABB 的最小点。 @en Minimum point of the AABB.\r\n      * @param maxPos @zh AABB 的最大点。 @en Maximum point of the AABB.\r\n      * @returns @zh 接受操作的 AABB `out` 的引用。 @en The reference to the first parameter `out`.\r\n      */\r\n    public static fromPoints (out: AABB, minPos: IVec3, maxPos: IVec3): AABB {\r\n        Vec3.add(_v3_tmp, maxPos, minPos);\r\n        Vec3.subtract(_v3_tmp2, maxPos, minPos);\r\n        Vec3.multiplyScalar(out.center, _v3_tmp, 0.5);\r\n        Vec3.multiplyScalar(out.halfExtents, _v3_tmp2, 0.5);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Sets the components of a AABB to the given values.\r\n      * @zh\r\n      * 将 AABB 的属性设置为给定的值。\r\n      * @param @zh out 接受操作的 AABB。 @en The output AABB to set.\r\n      * @param px @zh - AABB 原点的 X 坐标。 @en The x coordinate of the origin of the AABB.\r\n      * @param py @zh - AABB 原点的 Y 坐标。 @en The y coordinate of the origin of the AABB.\r\n      * @param pz @zh - AABB 原点的 Z 坐标。 @en The z coordinate of the origin of the AABB.\r\n      * @param hw @zh - AABB 宽度的一半。 @en Half the width of the AABB.\r\n      * @param hh @zh - AABB 高度的一半。 @en Half the height of the AABB.\r\n      * @param hl @zh - AABB 长度的一半。 @en Half the length of the AABB.\r\n      * @returns @zh 接受操作的 AABB `out` 的引用。 @en The reference fo the first parameter `out`.\r\n      */\r\n    public static set (out: AABB, px: number, py: number, pz: number, hw: number, hh: number, hl: number): AABB {\r\n        out.center.set(px, py, pz);\r\n        out.halfExtents.set(hw, hh, hl);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Merges two AABB instances into one.\r\n      * @zh\r\n      * 合并两个 AABB 到一个目标 AABB 中。\r\n      * @param out @zh 接受操作的目标 AABB。 @en The output AABB to storage the merge result.\r\n      * @param a @zh 第一个输入的 AABB，当其与 out 参数不同的时候，此函数内部不会修改其值。\r\n      *          @en The first AABB to be merged, its value will not be modified if `a` is not equal to the `out` parameter.\r\n      * @param b @zh 第二个输入的 AABB，当其与 out 参数不同的时候，此函数内部不会修改其值。\r\n      *          @en The second AABB to be merged, its value will not be modified if `b` is not equal to the `out` parameter.\r\n      * @returns @zh 接受操作的 AABB `out` 的引用。 @en The reference to the first parameter `out`.\r\n      */\r\n    public static merge (out: AABB, a: AABB | Readonly<AABB>, b: AABB | Readonly<AABB>): AABB {\r\n        Vec3.subtract(_v3_tmp, a.center, a.halfExtents);\r\n        Vec3.subtract(_v3_tmp2, b.center, b.halfExtents);\r\n        Vec3.add(_v3_tmp3, a.center, a.halfExtents);\r\n        Vec3.add(_v3_tmp4, b.center, b.halfExtents);\r\n        Vec3.max(_v3_tmp4, _v3_tmp3, _v3_tmp4);\r\n        Vec3.min(_v3_tmp3, _v3_tmp, _v3_tmp2);\r\n        return AABB.fromPoints(out, _v3_tmp3, _v3_tmp4);\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Converts an AABB to a bounding sphere.\r\n      * @zh\r\n      * 包围盒转包围球\r\n      * @param out @zh 接受操作的包围球。 @en The output bounding sphere.\r\n      * @param a @zh 输入的 AABB，只读参数。 @en The input AABB，it's readonly.\r\n      * @returns @zh 接受操作的包围球 `out` 的引用. @en The reference to the first parameter `out`.\r\n      */\r\n    public static toBoundingSphere (out: Sphere, a: AABB | Readonly<AABB>): Sphere {\r\n        out.center.set(a.center);\r\n        out.radius = a.halfExtents.length();\r\n        return out;\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Transforms an AABB by a 4x4 matrix and stores the result to the `out` parameter.\r\n      * @zh\r\n      * 使用一个 4 乘 4 矩阵变换一个 AABB 并将结果存储于 out 参数中。\r\n      * @param out @zh 接受操作的 AABB。 @en The output AABB to store the result.\r\n      * @param a @zh 输入的源 AABB，如果其与 out 参数不是同一个对象，那么 a 将不会被此函数修改。\r\n      *          @en The input AABB, if it's different with the `out` parameter, then `a` will not be changed by this function.\r\n      * @param matrix @zh 矩阵。 @en The transformation matrix.\r\n      * @returns @zh 接受操作的 AABB `out` 的引用。 @en The reference of the first parameter `out`.\r\n      */\r\n    public static transform (out: AABB, a: AABB | Readonly<AABB>, matrix: Mat4 | Readonly<Mat4>): AABB {\r\n        Vec3.transformMat4(out.center, a.center, matrix);\r\n        transform_extent_m4(out.halfExtents, a.halfExtents, matrix);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * The center point of this AABB.\r\n      * @zh\r\n      * 本地坐标的中心点。\r\n      */\r\n    public center: Vec3;\r\n\r\n    /**\r\n      * @en\r\n      * Half the size of this AABB.\r\n      * @zh\r\n      * 长宽高的一半。\r\n      */\r\n    public halfExtents: Vec3;\r\n\r\n    /**\r\n      * @en\r\n      * Gets the type of this shape.\r\n      * @zh\r\n      * 获取此形状的类型。\r\n      */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    protected readonly _type: number;\r\n    constructor (px = 0, py = 0, pz = 0, hw = 1, hh = 1, hl = 1) {\r\n        this._type = ShapeType.SHAPE_AABB;\r\n\r\n        this.center = new Vec3(px, py, pz);\r\n        this.halfExtents = new Vec3(hw, hh, hl);\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Gets the bounding points of this AABB.\r\n      * @zh\r\n      * 获取此 AABB 的最小点和最大点。\r\n      * @param minPos @zh 存放此 AABB 最小点的向量。 @en The minimum position of the AABB to be stored to.\r\n      * @param maxPos @zh 存放此 AABB 最大点的向量。 @en The maximum position of the AABB to be stored to.\r\n      */\r\n    public getBoundary (minPos: IVec3Like, maxPos: IVec3Like): void {\r\n        Vec3.subtract(minPos, this.center, this.halfExtents);\r\n        Vec3.add(maxPos, this.center, this.halfExtents);\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Transforms this AABB by a 4x4 matrix and stores the result to `out` parameter\r\n      * @zh\r\n      * 使用 4 乘 4 矩阵变换此 AABB 并将结果存储于 `out` 参数中。\r\n      * @param m @zh 变换的矩阵。 @en The transform matrix.\r\n      * @param pos @zh 变换的位置部分。 @en 3d-vector translation.\r\n      * @param rot @zh 变换的旋转部分。 @en Quaternion rotation.\r\n      * @param scale @zh 变换的缩放部分。 @en 3d-vector scale.\r\n      * @param out @zh 存储结果的 AABB。 @en The output AABB.\r\n      */\r\n    public transform (m: Mat4, pos: Vec3 | null, rot: Quat | null, scale: Vec3 | null, out: AABB): void {\r\n        Vec3.transformMat4(out.center, this.center, m);\r\n        transform_extent_m4(out.halfExtents, this.halfExtents, m);\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Clones this AABB, which will create a new AABB instance with the same value as this AABB. Note that each time `clone` is invoked,\r\n      * a new AABB object will be created, so use `copy` method whenever it could to reduce GC pressure.\r\n      * @zh\r\n      * 克隆一个 AABB，其会创建出一个值跟当前 AABB 一样的实例。注意，每次调用 `clone` 都会创建出新实例，尽可能使用 `copy` 方法以减小 GC 压力。\r\n      * @returns @zh 克隆出的 AABB 实例 @en The cloned AABB instance.\r\n      */\r\n    public clone (): AABB {\r\n        const center = this.center;\r\n        const halfExtents = this.halfExtents;\r\n        return new AABB(\r\n            center.x,\r\n            center.y,\r\n            center.z,\r\n            halfExtents.x,\r\n            halfExtents.y,\r\n            halfExtents.z,\r\n        );\r\n    }\r\n\r\n    /**\r\n      * @en\r\n      * Copies the values from one AABB to this AABB, the process will not generate temporary objects.\r\n      * @zh\r\n      * 将一个 AABB 的值复制到当前 AABB 中，此过程将不会产生临时对象。\r\n      * @param a @zh 被复制的 AABB，此为只读参数。 @en The source object of the copy operation, it's readonly.\r\n      * @returns @zh 当前 AABB 的引用。 @en The reference of this AABB.\r\n      */\r\n    public copy (a: AABB | Readonly<AABB>): AABB {\r\n        Vec3.copy(this.center, a.center);\r\n        Vec3.copy(this.halfExtents, a.halfExtents);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n      * @en Merges a point to this AABB.\r\n      * @zh 合并一个顶点到当前 AABB 中。\r\n      * @param point @zh 3D 世界中某一个位置的顶点。 @en A point in 3D space.\r\n      */\r\n    public mergePoint (point: IVec3): void {\r\n        // _v3_tmp is min pos\r\n        // _v3_tmp2 is max pos\r\n        this.getBoundary(_v3_tmp, _v3_tmp2);\r\n        if (point.x < _v3_tmp.x) { _v3_tmp.x = point.x; }\r\n        if (point.y < _v3_tmp.y) { _v3_tmp.y = point.y; }\r\n        if (point.z < _v3_tmp.z) { _v3_tmp.z = point.z; }\r\n        if (point.x > _v3_tmp2.x) { _v3_tmp2.x = point.x; }\r\n        if (point.y > _v3_tmp2.y) { _v3_tmp2.y = point.y; }\r\n        if (point.z > _v3_tmp2.z) { _v3_tmp2.z = point.z; }\r\n\r\n        // _v3_tmp3 is center pos\r\n        Vec3.add(_v3_tmp3, _v3_tmp, _v3_tmp2);\r\n        this.center.set(Vec3.multiplyScalar(_v3_tmp3, _v3_tmp3, 0.5));\r\n        this.halfExtents.set(_v3_tmp2.x - _v3_tmp3.x, _v3_tmp2.y - _v3_tmp3.y, _v3_tmp2.z - _v3_tmp3.z);\r\n    }\r\n\r\n    /**\r\n      * @en Merges some points to this AABB.\r\n      * @zh 合并一系列顶点到当前 AABB 中。\r\n      * @param points @zh 3D 世界中的顶点列表。 @en A list of points in 3D space.\r\n      */\r\n    public mergePoints (points: IVec3[]): void {\r\n        if (points.length < 1) { return; }\r\n        for (let i = 0; i < points.length; i++) {\r\n            this.mergePoint(points[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n      * @en Merges all points in a frustum to this AABB.\r\n      * @zh 合并一个截头锥体的所有顶点到此 AABB 中。\r\n      * @param frustum @zh 输入的截头锥体 @en The frustum object.\r\n      */\r\n    public mergeFrustum (frustum: Frustum | Readonly<Frustum>): void {\r\n        this.mergePoints(frustum.vertices);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3, Quat, Mat4, absMaxComponent } from '../math';\r\nimport { ShapeType } from './enums';\r\nimport { IVec3Like, IQuatLike } from '../math/type-define';\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: capsule.\r\n * @zh\r\n * 基础几何，胶囊体。\r\n */\r\nexport class Capsule {\r\n    /**\r\n     * @en\r\n     * Gets the type of this Capsule, always returns `ShapeType.SHAPE_CAPSULE`.\r\n     * @zh\r\n     * 获取此形状的类型，值固定为 `ShapeType.SHAPE_CAPSULE`。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    protected readonly _type: number;\r\n\r\n    /**\r\n     * @en\r\n     * The radius of the sphere in this capsule.\r\n     * @zh\r\n     * 胶囊体球部的半径。\r\n     */\r\n    radius: number;\r\n\r\n    /**\r\n     * @en\r\n     * The distance between the center point of the capsule and the center of the sphere.\r\n     * @zh\r\n     * 胶囊体中心点和球部圆心的距离。\r\n     */\r\n    halfHeight: number;\r\n\r\n    /**\r\n     * @en\r\n     * The local orientation of this capsule [0,1,2] => [x,y,z].\r\n     * @zh\r\n     * 胶囊体的本地朝向，映射关系 [0,1,2] => [x,y,z]。\r\n     */\r\n    axis: number;\r\n\r\n    /**\r\n     * @en\r\n     * The origin of the capsule.\r\n     * @zh\r\n     * 胶囊体的原点。\r\n     */\r\n    readonly center: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * The rotation of the capsule.\r\n     * @zh\r\n     * 胶囊体的旋转。\r\n     */\r\n    readonly rotation: Quat;\r\n\r\n    /**\r\n     * @internal\r\n     * cache, local center of ellipse\r\n     **/\r\n    readonly ellipseCenter0: Vec3;\r\n    /**\r\n     * @internal\r\n     */\r\n    readonly ellipseCenter1: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * Constructs a Capsule instance.\r\n     * @zh\r\n     * 构造一个胶囊体实例。\r\n     * @param radius @en The radius of the sphere in this capsule. @zh 胶囊体球部的半径。\r\n     * @param halfHeight @en The distance between the center point of the capsule and the center of the sphere. @zh 胶囊体中心点和球部圆心的距离。\r\n     * @param axis @en The local orientation of this capsule [0,1,2] => [x,y,z]. @zh 胶囊体的本地朝向，映射关系 [0,1,2] => [x,y,z]。\r\n     */\r\n    constructor (radius = 0.5, halfHeight = 0.5, axis = 1) {\r\n        this._type = ShapeType.SHAPE_CAPSULE;\r\n        this.radius = radius;\r\n        this.halfHeight = halfHeight;\r\n        this.axis = axis;\r\n\r\n        this.center = new Vec3();\r\n        this.rotation = new Quat();\r\n\r\n        this.ellipseCenter0 = new Vec3(0, halfHeight, 0);\r\n        this.ellipseCenter1 = new Vec3(0, -halfHeight, 0);\r\n        this.updateCache();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transforms this capsule by a 4x4 matrix and RTS.\r\n     * @zh\r\n     * 使用 4x4 矩阵和 RTS 变换此胶囊体。\r\n     */\r\n    transform (m: Mat4, pos: IVec3Like, rot: IQuatLike, scale: IVec3Like, out: Capsule): void {\r\n        const ws = scale;\r\n        const s = absMaxComponent(ws as Vec3);\r\n        out.radius = this.radius * Math.abs(s);\r\n\r\n        const halfTotalWorldHeight = (this.halfHeight + this.radius) * Math.abs(ws.y);\r\n        let halfWorldHeight = halfTotalWorldHeight - out.radius;\r\n        if (halfWorldHeight < 0) halfWorldHeight = 0;\r\n        out.halfHeight = halfWorldHeight;\r\n\r\n        Vec3.transformMat4(out.center, this.center, m);\r\n        Quat.multiply(out.rotation, this.rotation, rot);\r\n        out.updateCache();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Updates the cache.\r\n     * @zh\r\n     * 更新缓存。\r\n     */\r\n    updateCache (): void {\r\n        this.updateLocalCenter();\r\n        Vec3.transformQuat(this.ellipseCenter0, this.ellipseCenter0, this.rotation);\r\n        Vec3.transformQuat(this.ellipseCenter1, this.ellipseCenter1, this.rotation);\r\n        this.ellipseCenter0.add(this.center);\r\n        this.ellipseCenter1.add(this.center);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Updates the center points.\r\n     * @zh\r\n     * 更新中心点信息。\r\n     */\r\n    updateLocalCenter (): void {\r\n        const halfHeight = this.halfHeight;\r\n        const axis = this.axis;\r\n        switch (axis) {\r\n        case 0:\r\n            this.ellipseCenter0.set(halfHeight, 0, 0);\r\n            this.ellipseCenter1.set(-halfHeight, 0, 0);\r\n            break;\r\n        case 1:\r\n            this.ellipseCenter0.set(0, halfHeight, 0);\r\n            this.ellipseCenter1.set(0, -halfHeight, 0);\r\n            break;\r\n        case 2:\r\n            this.ellipseCenter0.set(0, 0, halfHeight);\r\n            this.ellipseCenter1.set(0, 0, -halfHeight);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Mat4, v3, Vec3 } from '../math';\r\nimport { ShapeType } from './enums';\r\nimport { Plane } from './plane';\r\nimport { AABB } from './aabb';\r\n\r\nconst _v = new Array<Vec3>(8);\r\n_v[0] = v3(1, 1, 1);\r\n_v[1] = v3(-1, 1, 1);\r\n_v[2] = v3(-1, -1, 1);\r\n_v[3] = v3(1, -1, 1);\r\n_v[4] = v3(1, 1, -1);\r\n_v[5] = v3(-1, 1, -1);\r\n_v[6] = v3(-1, -1, -1);\r\n_v[7] = v3(1, -1, -1);\r\n\r\nconst _nearTemp = v3();\r\nconst _farTemp = v3();\r\nconst _temp_v3 = v3();\r\n\r\nconst planeFromPoints = Plane.fromPoints;\r\nconst vec3Set = Vec3.set;\r\nconst vec3TransformMat4 = Vec3.transformMat4;\r\n/**\r\n * @en\r\n * Basic Geometry: frustum.\r\n * @zh\r\n * 基础几何：视锥体。\r\n */\r\nexport class Frustum {\r\n    /**\r\n     * @en Creates an orthographic frustum.\r\n     * @zh 创建一个正交视锥体。\r\n     * @param out @en The result orthographic frustum. @zh 输出的正交视锥体。\r\n     * @param width @en The width of the frustum. @zh 正交视锥体的宽度。\r\n     * @param height @en The height of the frustum. @zh 正交视锥体的高度。\r\n     * @param near @en The near plane of the frustum. @zh 正交视锥体的近平面值。\r\n     * @param far @en The far plane of the frustum. @zh 正交视锥体的远平面值。\r\n     * @param transform @en The transform matrix of the frustum. @zh 正交视锥体的变换矩阵。\r\n     * @returns @en The result frustum, same as the `out` parameter. @zh 存储结果的视锥体，与 `out` 参数为同一个对象。\r\n     */\r\n    public static createOrthographic (out: Frustum, width: number, height: number, near: number, far: number, transform: Mat4): void {\r\n        const halfWidth = width / 2;\r\n        const halfHeight = height / 2;\r\n        vec3Set(_temp_v3, halfWidth, halfHeight, -near);\r\n        vec3TransformMat4(out.vertices[0], _temp_v3, transform);\r\n        vec3Set(_temp_v3, -halfWidth, halfHeight, -near);\r\n        vec3TransformMat4(out.vertices[1], _temp_v3, transform);\r\n        vec3Set(_temp_v3, -halfWidth, -halfHeight, -near);\r\n        vec3TransformMat4(out.vertices[2], _temp_v3, transform);\r\n        vec3Set(_temp_v3, halfWidth, -halfHeight, -near);\r\n        vec3TransformMat4(out.vertices[3], _temp_v3, transform);\r\n        vec3Set(_temp_v3, halfWidth, halfHeight, -far);\r\n        vec3TransformMat4(out.vertices[4], _temp_v3, transform);\r\n        vec3Set(_temp_v3, -halfWidth, halfHeight, -far);\r\n        vec3TransformMat4(out.vertices[5], _temp_v3, transform);\r\n        vec3Set(_temp_v3, -halfWidth, -halfHeight, -far);\r\n        vec3TransformMat4(out.vertices[6], _temp_v3, transform);\r\n        vec3Set(_temp_v3, halfWidth, -halfHeight, -far);\r\n        vec3TransformMat4(out.vertices[7], _temp_v3, transform);\r\n\r\n        out.updatePlanes();\r\n    }\r\n\r\n    /**\r\n     * @en Creates an orthographic frustum.\r\n     * @zh 创建一个正交视锥体。\r\n     * @param out @en The result orthographic frustum. @zh 输出的正交视锥体。\r\n     * @param width @en The width of the frustum. @zh 正交视锥体的宽度。\r\n     * @param height @en The height of the frustum. @zh 正交视锥体的高度。\r\n     * @param near @en The near plane of the frustum. @zh 正交视锥体的近平面值。\r\n     * @param far @en The far plane of the frustum. @zh 正交视锥体的远平面值。\r\n     * @param transform @en The transform matrix of the frustum. @zh 正交视锥体的变换矩阵。\r\n     * @returns @en The result frustum, same as the `out` parameter. @zh 存储结果的视锥体，与 `out` 参数为同一个对象。\r\n     *\r\n     * @deprecated since v3.8.0, please use [[createOrthographic]] instead.\r\n     */\r\n    public static createOrtho (out: Frustum, width: number, height: number, near: number, far: number, transform: Mat4): void {\r\n        return Frustum.createOrthographic(out, width, height, near, far, transform);\r\n    }\r\n\r\n    /**\r\n     * @en Creates a perspective frustum.\r\n     * @zh 创建一个透视视锥体。\r\n     * @param aspect @en The aspect ratio of the camera. @zh 相机视图的长宽比。\r\n     * @param fov @en The field of view of the camera. @zh 相机的视角大小。\r\n     * @param near @en The near plane of the frustum. @zh 视锥体的近平面值。\r\n     * @param far @en The far plane of the frustum. @zh 视锥体的远平面值。\r\n     * @param transform @en The transform matrix. @zh 变换矩阵。\r\n     * @returns @en The result frustum, same as the `out` parameter. @zh 存储结果的视锥体，与 `out` 参数为同一个对象。\r\n     */\r\n    public static createPerspective (out: Frustum, aspect: number, fov: number, near: number, far: number, transform: Mat4): void {\r\n        const h = Math.tan(fov * 0.5);\r\n        const w = h * aspect;\r\n        _nearTemp.set(near * w,  near * h, near);\r\n        _farTemp.set(far * w, far * h, far);\r\n\r\n        const vertexes = out.vertices;\r\n        // startHalfWidth startHalfHeight\r\n        _temp_v3.set(_nearTemp.x, _nearTemp.y, -_nearTemp.z);\r\n        vec3TransformMat4(vertexes[0], _temp_v3, transform);\r\n        _temp_v3.set(-_nearTemp.x, _nearTemp.y, -_nearTemp.z);\r\n        vec3TransformMat4(vertexes[1], _temp_v3, transform);\r\n        _temp_v3.set(-_nearTemp.x, -_nearTemp.y, -_nearTemp.z);\r\n        vec3TransformMat4(vertexes[2], _temp_v3, transform);\r\n        _temp_v3.set(_nearTemp.x, -_nearTemp.y, -_nearTemp.z);\r\n        vec3TransformMat4(vertexes[3], _temp_v3, transform);\r\n\r\n        // endHalfWidth, endHalfHeight\r\n        _temp_v3.set(_farTemp.x, _farTemp.y, -_farTemp.z);\r\n        vec3TransformMat4(vertexes[4], _temp_v3, transform);\r\n        _temp_v3.set(-_farTemp.x, _farTemp.y, -_farTemp.z);\r\n        vec3TransformMat4(vertexes[5], _temp_v3, transform);\r\n        _temp_v3.set(-_farTemp.x, -_farTemp.y, -_farTemp.z);\r\n        vec3TransformMat4(vertexes[6], _temp_v3, transform);\r\n        _temp_v3.set(_farTemp.x, -_farTemp.y, -_farTemp.z);\r\n        vec3TransformMat4(vertexes[7], _temp_v3, transform);\r\n\r\n        out.updatePlanes();\r\n    }\r\n\r\n    /**\r\n     * @en Creates a frustum from an AABB instance.\r\n     * @zh 根据一个 AABB 实例创建一个视锥体。\r\n     * @param out @en The result frustum. @zh 输出的视锥体对象。\r\n     * @param aabb @en The AABB to create the result frustum. @zh 用于创建视锥体 AABB。\r\n     * @returns @en The result frustum, same as the `out` parameter. @zh 存储结果的视锥体，与 `out` 参数为同一个对象。\r\n     *\r\n     * @deprecated since v3.8.0, please use [[createOrthographic]] instead.\r\n     */\r\n    public static createFromAABB (out: Frustum, aabb: AABB | Readonly<AABB>): Frustum {\r\n        const vec3_min = new Vec3(); const vec3_max = new Vec3();\r\n        Vec3.subtract(vec3_min, aabb.center, aabb.halfExtents);\r\n        Vec3.add(vec3_max, aabb.center, aabb.halfExtents);\r\n\r\n        const vertices = out.vertices;\r\n\r\n        vertices[0].set(vec3_max.x, vec3_max.y, -vec3_min.z);\r\n        vertices[1].set(vec3_min.x, vec3_max.y, -vec3_min.z);\r\n        vertices[2].set(vec3_min.x, vec3_min.y, -vec3_min.z);\r\n        vertices[3].set(vec3_max.x, vec3_min.y, -vec3_min.z);\r\n        vertices[4].set(vec3_max.x, vec3_max.y, -vec3_max.z);\r\n        vertices[5].set(vec3_min.x, vec3_max.y, -vec3_max.z);\r\n        vertices[6].set(vec3_min.x, vec3_min.y, -vec3_max.z);\r\n        vertices[7].set(vec3_max.x, vec3_min.y, -vec3_max.z);\r\n\r\n        out.updatePlanes();\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates a split frustum.\r\n     * @zh 计算出一个分割的视锥体。\r\n     * @param start @en The split start position. @zh 分割开始位置。\r\n     * @param end @en The split end position. @zh 分割末尾位置。\r\n     * @param aspect @en The aspect ratio of the camera. @zh 相机视图的长宽比。\r\n     * @param fov @en The field of view of the camera. @zh 相机的视角大小。\r\n     * @param m @en The transform matrix. @zh 变换矩阵。\r\n     *\r\n     * @deprecated since v3.8.0, please use [[createPerspective]] instead.\r\n     */\r\n    public split (start: number, end: number, aspect: number, fov: number, m: Mat4): void {\r\n        return Frustum.createPerspective(this, aspect, fov, start, end, m);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a new frustum.\r\n     * @zh\r\n     * 创建一个新的视椎体。\r\n     * @returns @en An empty frustum. @zh 一个空视椎体。\r\n     */\r\n    public static create (): Frustum {\r\n        return new Frustum();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clones a frustum.\r\n     * @zh\r\n     * 克隆一个视椎体。\r\n     * @param f @en The frustum to clone from. @zh 用于克隆的视椎体。\r\n     * @return @en The cloned frustum. @zh 克隆出的新视椎体。\r\n     */\r\n    public static clone (f: Frustum): Frustum {\r\n        return Frustum.copy(new Frustum(), f);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from one frustum to another.\r\n     * @zh\r\n     * 从一个视锥体拷贝到另一个视锥体。\r\n     * @param out @en The result frustum @zh 用于存储拷贝数据的截锥体\r\n     * @param f @en The frustum to copy from @zh 用于克隆的截锥体\r\n     * @returns @en The result frustum, same as the `out` parameter. @zh 存储结果的视锥体，与 `out` 参数为同一个对象。\r\n     */\r\n    public static copy (out: Frustum, f: Readonly<Frustum>): Frustum {\r\n        out._type = f.type;\r\n        for (let i = 0; i < 6; ++i) {\r\n            Plane.copy(out.planes[i], f.planes[i]);\r\n        }\r\n        for (let i = 0; i < 8; ++i) {\r\n            Vec3.copy(out.vertices[i], f.vertices[i]);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets whether to use accurate intersection testing function on this frustum.\r\n     * @zh\r\n     * 设置是否在此截锥体上使用精确的相交测试函数。\r\n     *\r\n     * @deprecated since v3.8.0 no need to set accurate flag since it doesn't affect the calculation at all.\r\n     */\r\n    set accurate (b: boolean) {\r\n        this._type = b ? ShapeType.SHAPE_FRUSTUM_ACCURATE : ShapeType.SHAPE_FRUSTUM;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the type of the shape. The value may be `ShapeType.SHAPE_FRUSTUM_ACCURATE` or `ShapeType.SHAPE_FRUSTUM`.\r\n     * @zh\r\n     * 获取形状的类型。值可能为 `ShapeType.SHAPE_FRUSTUM_ACCURATE` 或 `ShapeType.SHAPE_FRUSTUM`。\r\n     * @readonly\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The 6 planes of the frustum.\r\n     * @zh\r\n     * 视椎体的 6 个面。\r\n     */\r\n    public planes: Plane[];\r\n\r\n    /**\r\n     * @en\r\n     * The 8 vertices of the frustum.\r\n     * @zh\r\n     * 视椎体的 8 个顶点。\r\n     */\r\n    public vertices: Vec3[];\r\n\r\n    protected _type: number;\r\n\r\n    constructor () {\r\n        this._type = ShapeType.SHAPE_FRUSTUM;\r\n        this.planes = new Array(6);\r\n        for (let i = 0; i < 6; ++i) {\r\n            this.planes[i] = Plane.create(0, 0, 0, 0);\r\n        }\r\n        this.vertices = new Array(8);\r\n        for (let i = 0; i < 8; ++i) {\r\n            this.vertices[i] = new Vec3();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Updates the frustum information according to the given transform matrix.\r\n     * Note that the resulting planes are not normalized under normal mode.\r\n     * @zh\r\n     * 根据给定的变换矩阵更新截锥体信息，注意得到的平面不是在标准模式下归一化的。\r\n     * @param m @en The view-projection matrix. @zh 视图投影矩阵。\r\n     * @param inv @en The inverse view-projection matrix. @zh 视图投影逆矩阵。\r\n     */\r\n    public update (m: Mat4, inv: Mat4): void {\r\n        const planes = this.planes;\r\n        // RTR4, ch. 22.14.1, p. 983\r\n        // extract frustum planes from view-proj matrix.\r\n\r\n        // left plane\r\n        vec3Set(planes[0].n, m.m03 + m.m00, m.m07 + m.m04, m.m11 + m.m08);\r\n        planes[0].d = -(m.m15 + m.m12);\r\n        // right plane\r\n        vec3Set(planes[1].n, m.m03 - m.m00, m.m07 - m.m04, m.m11 - m.m08);\r\n        planes[1].d = -(m.m15 - m.m12);\r\n        // bottom plane\r\n        vec3Set(planes[2].n, m.m03 + m.m01, m.m07 + m.m05, m.m11 + m.m09);\r\n        planes[2].d = -(m.m15 + m.m13);\r\n        // top plane\r\n        vec3Set(planes[3].n, m.m03 - m.m01, m.m07 - m.m05, m.m11 - m.m09);\r\n        planes[3].d = -(m.m15 - m.m13);\r\n        // near plane\r\n        vec3Set(planes[4].n, m.m03 + m.m02, m.m07 + m.m06, m.m11 + m.m10);\r\n        planes[4].d = -(m.m15 + m.m14);\r\n        // far plane\r\n        vec3Set(planes[5].n, m.m03 - m.m02, m.m07 - m.m06, m.m11 - m.m10);\r\n        planes[5].d = -(m.m15 - m.m14);\r\n\r\n        // normalize planes\r\n        for (let i = 0; i < 6; i++) {\r\n            const pl = planes[i];\r\n            const invDist = 1 / pl.n.length();\r\n            Vec3.multiplyScalar(pl.n, pl.n, invDist);\r\n            pl.d *= invDist;\r\n        }\r\n\r\n        // update frustum vertices\r\n        for (let i = 0; i < 8; i++) {\r\n            vec3TransformMat4(this.vertices[i], _v[i], inv);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transforms this frustum.\r\n     * @zh\r\n     * 变换此视锥体。\r\n     * @param mat @en The transform matrix. @zh 变换矩阵。\r\n     */\r\n    public transform (mat: Mat4): void {\r\n        for (let i = 0; i < 8; i++) {\r\n            vec3TransformMat4(this.vertices[i], this.vertices[i], mat);\r\n        }\r\n        this.updatePlanes();\r\n    }\r\n\r\n    /**\r\n     * @en Makes the frustum empty, all vertices will be zero values.\r\n     * @zh 置空此视锥体，所有顶点将被赋值为 0。\r\n     */\r\n    public zero (): void {\r\n        // reset to initial state\r\n        for (let i = 0; i < 8; i++) {\r\n            this.vertices[i].set(0.0, 0.0, 0.0);\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            Plane.set(this.planes[i], 0, 0, 0, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Updates all six planes of the frustum.\r\n     * @zh 更新视锥体的所有面数据。\r\n     */\r\n    public updatePlanes (): void {\r\n        const planes = this.planes;\r\n        const vertices = this.vertices;\r\n        // left plane\r\n        planeFromPoints(planes[0], vertices[1], vertices[6], vertices[5]);\r\n        // right plane\r\n        planeFromPoints(planes[1], vertices[3], vertices[4], vertices[7]);\r\n        // bottom plane\r\n        planeFromPoints(planes[2], vertices[6], vertices[3], vertices[7]);\r\n        // top plane\r\n        planeFromPoints(planes[3], vertices[0], vertices[5], vertices[4]);\r\n        // near plane\r\n        planeFromPoints(planes[4], vertices[2], vertices[0], vertices[3]);\r\n        // far plane\r\n        planeFromPoints(planes[5], vertices[7], vertices[5], vertices[6]);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Mat3, Mat4, Quat, Vec3 } from '../math';\r\nimport { ShapeType } from './enums';\r\n\r\nconst _v3_tmp = new Vec3();\r\nconst _v3_tmp2 = new Vec3();\r\nconst _m3_tmp = new Mat3();\r\n\r\nconst mathAbs = Math.abs;\r\n\r\n// https://zeuxcg.org/2010/10/17/aabb-from-obb-with-component-wise-abs/\r\nconst transform_extent_m3 = (out: Vec3, extent: Vec3, m3: Mat3): void => {\r\n    _m3_tmp.m00 = mathAbs(m3.m00); _m3_tmp.m01 = mathAbs(m3.m01); _m3_tmp.m02 = mathAbs(m3.m02);\r\n    _m3_tmp.m03 = mathAbs(m3.m03); _m3_tmp.m04 = mathAbs(m3.m04); _m3_tmp.m05 = mathAbs(m3.m05);\r\n    _m3_tmp.m06 = mathAbs(m3.m06); _m3_tmp.m07 = mathAbs(m3.m07); _m3_tmp.m08 = mathAbs(m3.m08);\r\n    Vec3.transformMat3(out, extent, _m3_tmp);\r\n};\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: Oriented bounding box.\r\n * @zh\r\n * 基础几何：方向包围盒。\r\n */\r\n\r\nexport class OBB {\r\n    /**\r\n     * @en\r\n     * Creates a new OBB instance\r\n     * @zh\r\n     * 创建一个新的 OBB 实例。\r\n     * @param cx @zh 形状的相对于原点的 X 坐标。 @en The x coordinate of origin.\r\n     * @param cy @zh 形状的相对于原点的 Y 坐标。 @en The y coordinate of origin.\r\n     * @param cz @zh 形状的相对于原点的 Z 坐标。 @en The z coordinate of origin.\r\n     * @param hw @zh - OBB 宽度的一半。 @en Half the width of the OBB.\r\n     * @param hh @zh - OBB 高度的一半。 @en Half the height of the OBB.\r\n     * @param hl @zh - OBB 长度的一半。 @en Half the length of the OBB.\r\n     * @param ox_1 @zh 方向矩阵参数，第 1 条轴的 x 分量。 @en The x component of the first axis of the OBB.\r\n     * @param ox_2 @zh 方向矩阵参数，第 2 条轴的 x 分量。 @en The x component of the second axis of the OBB.\r\n     * @param ox_3 @zh 方向矩阵参数，第 3 条轴的 x 分量。 @en The x component of the third axis of the OBB.\r\n     * @param oy_1 @zh 方向矩阵参数，第 1 条轴的 y 分量。 @en The y component of the first axis of the OBB.\r\n     * @param oy_2 @zh 方向矩阵参数，第 2 条轴的 y 分量。 @en The y component of the second axis of the OBB.\r\n     * @param oy_3 @zh 方向矩阵参数，第 3 条轴的 y 分量。 @en The y component of the third axis of the OBB.\r\n     * @param oz_1 @zh 方向矩阵参数，第 1 条轴的 z 分量。 @en The z component of the first axis of the OBB.\r\n     * @param oz_2 @zh 方向矩阵参数，第 2 条轴的 z 分量。 @en The z component of the second axis of the OBB.\r\n     * @param oz_3 @zh 方向矩阵参数，第 3 条轴的 z 分量。 @en The z component of the third axis of the OBB.\r\n     * @returns @zh 返回新创建的 OBB 实例。 @en A new OBB instance.\r\n     */\r\n    public static create (\r\n        cx: number,\r\n        cy: number,\r\n        cz: number,\r\n        hw: number,\r\n        hh: number,\r\n        hl: number,\r\n        ox_1: number,\r\n        ox_2: number,\r\n        ox_3: number,\r\n        oy_1: number,\r\n        oy_2: number,\r\n        oy_3: number,\r\n        oz_1: number,\r\n        oz_2: number,\r\n        oz_3: number,\r\n    ): OBB {\r\n        return new OBB(cx, cy, cz, hw, hh, hl, ox_1, ox_2, ox_3, oy_1, oy_2, oy_3, oz_1, oz_2, oz_3);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clones a new OBB instance.\r\n     * @zh\r\n     * 克隆一个 OBB 实例。\r\n     * @param a @zh 克隆的目标。 @en The input OBB.\r\n     * @returns @zh The cloned OBB instance.  @en 克隆出的新对象。\r\n     */\r\n    public static clone (a: OBB): OBB {\r\n        return new OBB(\r\n            a.center.x,\r\n            a.center.y,\r\n            a.center.z,\r\n            a.halfExtents.x,\r\n            a.halfExtents.y,\r\n            a.halfExtents.z,\r\n            a.orientation.m00,\r\n            a.orientation.m01,\r\n            a.orientation.m02,\r\n            a.orientation.m03,\r\n            a.orientation.m04,\r\n            a.orientation.m05,\r\n            a.orientation.m06,\r\n            a.orientation.m07,\r\n            a.orientation.m08,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values from one OBB to another.\r\n     * @zh\r\n     * 复制一个 OBB 的值到另一个 OBB 中。\r\n     * @param  out @zh 接受操作的 OBB。 @en The output OBB.\r\n     * @param  a @zh 被复制的 OBB。 @en The input OBB.\r\n     * @returns  @zh 接受操作的 OBB，与 `out` 参数相同。 @en The output OBB, same as the `out` parameter.\r\n     */\r\n    public static copy (out: OBB, a: OBB): OBB {\r\n        Vec3.copy(out.center, a.center);\r\n        Vec3.copy(out.halfExtents, a.halfExtents);\r\n        Mat3.copy(out.orientation, a.orientation);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a new OBB from two corner points.\r\n     * @zh\r\n     * 用两个点创建一个新的 OBB。\r\n     * @param out @zh - 接受操作的 OBB。 @en The output OBB.\r\n     * @param minPos @zh - OBB 的最小点。 @en The minimum position of the AABB.\r\n     * @param maxPos @zh - OBB 的最大点。 @en The maximum position of the AABB.\r\n     * @returns  @zh 接受操作的 OBB，与 `out` 参数相同。 @en The output OBB, same as the `out` parameter.\r\n     */\r\n    public static fromPoints (out: OBB, minPos: Vec3, maxPos: Vec3): OBB {\r\n        Vec3.multiplyScalar(out.center, Vec3.add(_v3_tmp, minPos, maxPos), 0.5);\r\n        Vec3.multiplyScalar(out.halfExtents, Vec3.subtract(_v3_tmp2, maxPos, minPos), 0.5);\r\n        Mat3.identity(out.orientation);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the components of an OBB to the given values.\r\n     * @zh\r\n     * 将给定 OBB 的属性设置为给定的值。\r\n     * @param out @zh 目标 OBB @en The output OBB instance.\r\n     * @param cx @zh 形状的相对于原点的 X 坐标。 @en The x coordinate of origin.\r\n     * @param cy @zh 形状的相对于原点的 Y 坐标。 @en The y coordinate of origin.\r\n     * @param cz @zh 形状的相对于原点的 Z 坐标。 @en The z coordinate of origin.\r\n     * @param hw @zh - obb 宽度的一半。 @en Half the width of the OBB.\r\n     * @param hh @zh - obb 高度的一半。 @en Half the height of the OBB.\r\n     * @param hl @zh - obb 长度的一半。 @en Half the length of the OBB.\r\n     * @param ox_1 @zh 方向矩阵参数，第 1 条轴的 x 分量。 @en The x component of the first axis of the OBB.\r\n     * @param ox_2 @zh 方向矩阵参数，第 2 条轴的 x 分量。 @en The x component of the second axis of the OBB.\r\n     * @param ox_3 @zh 方向矩阵参数，第 3 条轴的 x 分量。 @en The x component of the third axis of the OBB.\r\n     * @param oy_1 @zh 方向矩阵参数，第 1 条轴的 y 分量。 @en The y component of the first axis of the OBB.\r\n     * @param oy_2 @zh 方向矩阵参数，第 2 条轴的 y 分量。 @en The y component of the second axis of the OBB.\r\n     * @param oy_3 @zh 方向矩阵参数，第 3 条轴的 y 分量。 @en The y component of the third axis of the OBB.\r\n     * @param oz_1 @zh 方向矩阵参数，第 1 条轴的 z 分量。 @en The z component of the first axis of the OBB.\r\n     * @param oz_2 @zh 方向矩阵参数，第 2 条轴的 z 分量。 @en The z component of the second axis of the OBB.\r\n     * @param oz_3 @zh 方向矩阵参数，第 3 条轴的 z 分量。 @en The z component of the third axis of the OBB.\r\n     * @returns  @zh 接受操作的 OBB，与 `out` 参数相同。 @en The output OBB, same as the `out` parameter.\r\n     */\r\n    public static set (\r\n        out: OBB,\r\n        cx: number,\r\n        cy: number,\r\n        cz: number,\r\n        hw: number,\r\n        hh: number,\r\n        hl: number,\r\n        ox_1: number,\r\n        ox_2: number,\r\n        ox_3: number,\r\n        oy_1: number,\r\n        oy_2: number,\r\n        oy_3: number,\r\n        oz_1: number,\r\n        oz_2: number,\r\n        oz_3: number,\r\n    ): OBB {\r\n        Vec3.set(out.center, cx, cy, cz);\r\n        Vec3.set(out.halfExtents, hw, hh, hl);\r\n        Mat3.set(out.orientation, ox_1, ox_2, ox_3, oy_1, oy_2, oy_3, oz_1, oz_2, oz_3);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The center point of an OBB in local coordinate.\r\n     * @zh\r\n     * 本地坐标的中心点。\r\n     */\r\n    public center: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * Half the distance across the OBB in each local axis.\r\n     * @zh\r\n     * 长宽高的一半。\r\n     */\r\n    public halfExtents: Vec3;\r\n\r\n    /**\r\n     * @en\r\n     * Orientation matrix.\r\n     * @zh\r\n     * 方向矩阵。\r\n     */\r\n    public orientation: Mat3;\r\n\r\n    /**\r\n     * @en\r\n     * Gets the type of the OBB. Always returns `ShapeType.SHAPE_OBB`.\r\n     * @zh\r\n     * 获取形状的类型，固定返回 `ShapeType.SHAPE_OBB`。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    protected readonly _type: number;\r\n\r\n    /**\r\n     * @param cx @zh 形状的相对于原点的 X 坐标。 @en The x coordinate of origin.\r\n     * @param cy @zh 形状的相对于原点的 Y 坐标。 @en The y coordinate of origin.\r\n     * @param cz @zh 形状的相对于原点的 Z 坐标。 @en The z coordinate of origin.\r\n     * @param hw @zh - OBB 宽度的一半。 @en Half the width of the OBB.\r\n     * @param hh @zh - OBB 高度的一半。 @en Half the height of the OBB.\r\n     * @param hl @zh - OBB 长度的一半。 @en Half the length of the OBB.\r\n     * @param ox_1 @zh 方向矩阵参数，第 1 条轴的 x 分量。 @en The x component of the first axis of the OBB.\r\n     * @param ox_2 @zh 方向矩阵参数，第 2 条轴的 x 分量。 @en The x component of the second axis of the OBB.\r\n     * @param ox_3 @zh 方向矩阵参数，第 3 条轴的 x 分量。 @en The x component of the third axis of the OBB.\r\n     * @param oy_1 @zh 方向矩阵参数，第 1 条轴的 y 分量。 @en The y component of the first axis of the OBB.\r\n     * @param oy_2 @zh 方向矩阵参数，第 2 条轴的 y 分量。 @en The y component of the second axis of the OBB.\r\n     * @param oy_3 @zh 方向矩阵参数，第 3 条轴的 y 分量。 @en The y component of the third axis of the OBB.\r\n     * @param oz_1 @zh 方向矩阵参数，第 1 条轴的 z 分量。 @en The z component of the first axis of the OBB.\r\n     * @param oz_2 @zh 方向矩阵参数，第 2 条轴的 z 分量。 @en The z component of the second axis of the OBB.\r\n     * @param oz_3 @zh 方向矩阵参数，第 3 条轴的 z 分量。 @en The z component of the third axis of the OBB.\r\n     */\r\n    constructor (\r\n        cx = 0,\r\n        cy = 0,\r\n        cz = 0,\r\n        hw = 1,\r\n        hh = 1,\r\n        hl = 1,\r\n        ox_1 = 1,\r\n        ox_2 = 0,\r\n        ox_3 = 0,\r\n        oy_1 = 0,\r\n        oy_2 = 1,\r\n        oy_3 = 0,\r\n        oz_1 = 0,\r\n        oz_2 = 0,\r\n        oz_3 = 1,\r\n    ) {\r\n        this._type = ShapeType.SHAPE_OBB;\r\n        this.center = new Vec3(cx, cy, cz);\r\n        this.halfExtents = new Vec3(hw, hh, hl);\r\n        this.orientation = new Mat3(ox_1, ox_2, ox_3, oy_1, oy_2, oy_3, oz_1, oz_2, oz_3);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the bounding points of this OBB instance.\r\n     * @zh\r\n     * 获取此 OBB 的最小点和最大点。\r\n     * @param minPos @zh 此 OBB 的最小点。 @en The out minimum position of the OBB.\r\n     * @param maxPos @zh 此 OBB 的最大点。 @en The out maximum position of the OBB.\r\n     */\r\n    public getBoundary (minPos: Vec3, maxPos: Vec3): void {\r\n        transform_extent_m3(_v3_tmp, this.halfExtents, this.orientation);\r\n        Vec3.subtract(minPos, this.center, _v3_tmp);\r\n        Vec3.add(maxPos, this.center, _v3_tmp);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transforms this OBB and store the result to the `out` parameter.\r\n     * @zh\r\n     * 对当前 OBB 的数据进行变换，并存储结果到 `out` 参数中。\r\n     * @param m @zh 变换的矩阵。 @en The transform matrix\r\n     * @param pos @zh 变换的位置部分。 @en 3d-vector translation.\r\n     * @param rot @zh 变换的旋转部分。 @en Quaternion rotation.\r\n     * @param scale @zh 变换的缩放部分。 @en 3d-vector scale.\r\n     * @param out @zh 变换结果的目标 OBB。 @en The output OBB.\r\n     * @note @zh 此方法不会修改当前 OBB 的数据。 @en This method will not modify the data of current OBB.\r\n     */\r\n    public transform (m: Mat4, pos: Vec3, rot: Quat, scale: Vec3, out: OBB): void {\r\n        Vec3.transformMat4(out.center, this.center, m);\r\n        // parent shape doesn't contain rotations for now\r\n        Mat3.fromQuat(out.orientation, rot);\r\n        Vec3.multiply(out.halfExtents, this.halfExtents, scale);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transforms this OBB by a 4x4 matrix and a quaternion.\r\n     * @zh\r\n     * 根据一个 4x4 矩阵和一个四元数变换此 OBB。\r\n     * @param m @zh 变换的矩阵。 @en The transform matrix.\r\n     * @param rot @zh 变换的旋转部分。 @en The quaternion for rotation.\r\n     * @param out @zh 变换的目标。 @en The output OBB.\r\n     * @note @zh 此方法不会修改当前 OBB 的数据。 @en This method will not modify the data of current OBB.\r\n     */\r\n    public translateAndRotate (m: Mat4, rot: Quat, out: OBB): void {\r\n        Vec3.transformMat4(out.center, this.center, m);\r\n        // parent shape doesn't contain rotations for now\r\n        Mat3.fromQuat(out.orientation, rot);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scales this OBB by a 3d-vector and store the result to the `out` parameter.\r\n     * @zh\r\n     * 根据 3D 向量对此 OBB 的数据进行缩放并将结果存储在 out 参数中。\r\n     * @param scale @zh 缩放值。 @en 3d-vector scale.\r\n     * @param out @zh 缩放的目标。 @en The output OBB.\r\n     * @note @zh 此方法不会修改当前 OBB 的数据。 @en This method will not modify the data of current OBB.\r\n     */\r\n    public setScale (scale: Vec3, out: OBB): void {\r\n        Vec3.multiply(out.halfExtents, this.halfExtents, scale);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { binarySearchEpsilon } from '../algorithm/binary-search';\r\nimport { CCClass } from '../data/class';\r\nimport { assertIsTrue } from '../data/utils/asserts';\r\nimport { approx } from '../math';\r\nimport type { CurveBase } from './curve-base';\r\n\r\ntype KeyFrame<TKeyframeValue> = [number, TKeyframeValue];\r\n\r\n/**\r\n * @en\r\n * Keyframe curve.\r\n * @zh\r\n * 关键帧曲线。\r\n */\r\nexport class KeyframeCurve<TKeyframeValue> implements CurveBase, Iterable<KeyFrame<TKeyframeValue>> {\r\n    /**\r\n     * @en\r\n     * Gets the count of keyframes.\r\n     * @zh\r\n     * 获取关键帧数量。\r\n     */\r\n    get keyFramesCount (): number {\r\n        return this._times.length;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the minimal keyframe time on this curve.\r\n     * @zh\r\n     * 获取此曲线上最小的关键帧时间。\r\n     */\r\n    get rangeMin (): number {\r\n        return this._times[0];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the maximum keyframe time on this curve.\r\n     * @zh\r\n     * 获取此曲线上最大的关键帧时间。\r\n     */\r\n    get rangeMax (): number {\r\n        return this._times[this._values.length - 1];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns an iterator to keyframe pairs.\r\n     * @zh\r\n     * 返回关键帧对的迭代器。\r\n     */\r\n    [Symbol.iterator] (): { next: () => IteratorResult<KeyFrame<TKeyframeValue>> } {\r\n        let index = 0;\r\n        return {\r\n            next: (): IteratorResult<KeyFrame<TKeyframeValue>> => {\r\n                if (index >= this._times.length) {\r\n                    return {\r\n                        done: true,\r\n                        value: undefined,\r\n                    };\r\n                } else {\r\n                    const value: KeyFrame<TKeyframeValue> = [this._times[index], this._values[index]];\r\n                    ++index;\r\n                    return {\r\n                        done: false,\r\n                        value,\r\n                    };\r\n                }\r\n            },\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns an iterator to keyframe pairs.\r\n     * @zh\r\n     * 返回关键帧对的迭代器。\r\n     */\r\n    public keyframes (): Iterable<KeyFrame<TKeyframeValue>> {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns an iterator to keyframe times.\r\n     * @zh\r\n     * 返回关键帧时间的迭代器。\r\n     */\r\n    public times (): Iterable<number> {\r\n        return this._times;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns an iterator to keyframe values.\r\n     * @zh\r\n     * 返回关键帧值的迭代器。\r\n     */\r\n    public values (): Iterable<TKeyframeValue> {\r\n        return this._values;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the time of specified keyframe.\r\n     * @zh\r\n     * 获取指定关键帧上的时间。\r\n     * @param index Index to the keyframe.\r\n     * @returns The keyframe 's time.\r\n     */\r\n    public getKeyframeTime (index: number): number {\r\n        return this._times[index];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the value of specified keyframe.\r\n     * @zh\r\n     * 获取指定关键帧上的值。\r\n     * @param index Index to the keyframe.\r\n     * @returns The keyframe 's value.\r\n     */\r\n    public getKeyframeValue (index: number): TKeyframeValue {\r\n        return this._values[index];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Adds a keyframe into this curve.\r\n     * @zh\r\n     * 添加一个关键帧到此曲线中。\r\n     * @param time Time of the keyframe.\r\n     * @param keyframeValue Value of the keyframe.\r\n     * @returns The index to the new keyframe.\r\n     */\r\n    public addKeyFrame (time: number, keyframeValue: TKeyframeValue): number {\r\n        return this._insertNewKeyframe(time, keyframeValue);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes a keyframe from this curve.\r\n     * @zh\r\n     * 移除此曲线的一个关键帧。\r\n     * @param index Index to the keyframe.\r\n     */\r\n    public removeKeyframe (index: number): void {\r\n        this._times.splice(index, 1);\r\n        this._values.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Searches for the keyframe at specified time.\r\n     * @zh\r\n     * 搜索指定时间上的关键帧。\r\n     * @param time Time to search.\r\n     * @returns Index to the keyframe or negative number if not found.\r\n     */\r\n    public indexOfKeyframe (time: number): number {\r\n        return binarySearchEpsilon(this._times, time);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Updates the time of a keyframe.\r\n     * @zh\r\n     * 更新关键帧的时间。\r\n     * @param index Index to the keyframe.\r\n     * @param time New time.\r\n     */\r\n    public updateTime (index: number, time: number): void {\r\n        const value = this._values[index];\r\n        this.removeKeyframe(index);\r\n        this._insertNewKeyframe(time, value);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Assigns all keyframes.\r\n     * @zh\r\n     * 赋值所有关键帧。\r\n     * @param keyframes An iterable to keyframes. The keyframes should be sorted by their time.\r\n     */\r\n    public assignSorted (keyframes: Iterable<[number, TKeyframeValue]>): void;\r\n\r\n    /**\r\n     * @en\r\n     * Assigns all keyframes.\r\n     * @zh\r\n     * 赋值所有关键帧。\r\n     * @param times Times array. Should be sorted.\r\n     * @param values Values array. Corresponding to each time in `times`.\r\n     */\r\n    public assignSorted (times: readonly number[], values: TKeyframeValue[]): void;\r\n\r\n    public assignSorted (times: Iterable<[number, TKeyframeValue]> | readonly number[], values?: readonly TKeyframeValue[]): void {\r\n        if (values !== undefined) {\r\n            assertIsTrue(Array.isArray(times));\r\n            this.setKeyframes(\r\n                (times as number[]).slice(),\r\n                values.slice(),\r\n            );\r\n        } else {\r\n            const keyframes = Array.from(times as Iterable<[number, TKeyframeValue]>);\r\n            this.setKeyframes(\r\n                keyframes.map(([time]) => time),\r\n                keyframes.map(([, value]) => value),\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes all key frames.\r\n     * @zh\r\n     * 移除所有关键帧。\r\n     */\r\n    public clear (): void {\r\n        this._times.length = 0;\r\n        this._values.length = 0;\r\n    }\r\n\r\n    protected searchKeyframe (time: number): number {\r\n        return binarySearchEpsilon(this._times, time);\r\n    }\r\n\r\n    protected setKeyframes (times: number[], values: TKeyframeValue[]): void {\r\n        assertIsTrue(times.length === values.length);\r\n        assertIsTrue(isSorted(times));\r\n        this._times = times;\r\n        this._values = values;\r\n    }\r\n\r\n    private _insertNewKeyframe (time: number, value: TKeyframeValue): number {\r\n        const times = this._times;\r\n        const values = this._values;\r\n        const nFrames = times.length;\r\n\r\n        const index = binarySearchEpsilon(times, time);\r\n        if (index >= 0) {\r\n            return index;\r\n        }\r\n        const iNext = ~index;\r\n        if (iNext === 0) {\r\n            times.unshift(time);\r\n            values.unshift(value);\r\n        } else if (iNext === nFrames) {\r\n            times.push(time);\r\n            values.push(value);\r\n        } else {\r\n            assertIsTrue(nFrames > 1);\r\n            times.splice(iNext - 1, 0, time);\r\n            values.splice(iNext - 1, 0, value);\r\n        }\r\n        return iNext;\r\n    }\r\n\r\n    /**\r\n     * Times are always sorted and 1-1 correspond to values.\r\n     * @dontmangle\r\n     * NOTE: _times is a serializable property set by `CCClass.fastDefine`,\r\n     * so it should not be mangled while `mangleProtected` is true in `<<ProjectRoot>>/engine-mangle-config.json`.\r\n     */\r\n    protected _times: number[] = [];\r\n    /**\r\n     * @dontmangle\r\n     * NOTE: _values is a serializable property set by `CCClass.fastDefine`,\r\n     * so it should not be mangled while `mangleProtected` is true in `<<ProjectRoot>>/engine-mangle-config.json`.\r\n     */\r\n    protected _values: TKeyframeValue[] = [];\r\n}\r\n\r\nCCClass.fastDefine('cc.KeyframeCurve', KeyframeCurve, {\r\n    _times: [],\r\n    _values: [],\r\n});\r\n\r\nfunction isSorted (values: number[]): boolean {\r\n    return values.every(\r\n        (value, index, array) => index === 0\r\n            || value > array[index - 1] || approx(value, array[index - 1], 1e-6),\r\n    );\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @en\r\n * The method used for interpolation method between value of a keyframe and its next keyframe.\r\n * @zh\r\n * 在某关键帧（前一帧）和其下一帧之间插值时使用的插值方式。\r\n */\r\nexport enum RealInterpolationMode {\r\n    /**\r\n     * @en\r\n     * Perform linear interpolation between previous keyframe value and next keyframe value.\r\n     * @zh\r\n     * 在前一帧和后一帧之间执行线性插值。\r\n     */\r\n    LINEAR,\r\n\r\n    /**\r\n     * @en\r\n     * Always use the value from this keyframe.\r\n     * @zh\r\n     * 永远使用前一帧的值。\r\n     */\r\n    CONSTANT,\r\n\r\n    /**\r\n     * @en\r\n     * Perform cubic(hermite) interpolation between previous keyframe value and next keyframe value.\r\n     * @zh\r\n     * 在前一帧和后一帧之间执行立方插值。\r\n     */\r\n    CUBIC,\r\n}\r\n\r\n/**\r\n * @en\r\n * Specifies how to extrapolate the value\r\n * if input time is underflow(less than the the first frame time) or\r\n * overflow(greater than the last frame time) when evaluating an curve.\r\n * @zh\r\n * 在求值曲线时，指定当输入时间下溢（小于第一帧的时间）或上溢（大于最后一帧的时间）时应该如何推断结果值。\r\n */\r\nexport enum ExtrapolationMode {\r\n    /**\r\n     * @en\r\n     * Compute the result\r\n     * according to the first two frame's linear trend in the case of underflow and\r\n     * according to the last two frame's linear trend in the case of overflow.\r\n     * If there are less than two frames, fallback to `CLAMP`.\r\n     * @zh\r\n     * 下溢时，根据前两帧的线性趋势计算结果；上溢时，根据最后两帧的线性趋势计算结果。\r\n     * 如果曲线帧数小于 2，回退到  `CLAMP`。\r\n     */\r\n    LINEAR,\r\n\r\n    /**\r\n     * @en\r\n     * Use first frame's value in the case of underflow,\r\n     * use last frame's value in the case of overflow.\r\n     * @zh\r\n     * 下溢时，使用第一帧的值；上溢时，使用最后一帧的值。\r\n     */\r\n    CLAMP,\r\n\r\n    /**\r\n     * @en\r\n     * Computes the result as if the curve is infinitely and continuously looped.\r\n     * @zh\r\n     * 求值时将该曲线视作是无限连续循环的。\r\n     */\r\n    LOOP,\r\n\r\n    /**\r\n     * @en\r\n     * Computes the result as if the curve is infinitely and continuously looped in a ping-pong manner.\r\n     * @zh\r\n     * 求值时将该曲线视作是以“乒乓”的形式无限连续循环的。\r\n     */\r\n    PING_PONG,\r\n}\r\n\r\n/**\r\n * @en\r\n * Specifies both side tangent weight mode of a keyframe value.\r\n * @zh\r\n * 指定关键帧两侧的切线权重模式。\r\n */\r\nexport enum TangentWeightMode {\r\n    /**\r\n     * @en\r\n     * Neither side of the keyframe carries tangent weight information.\r\n     * @zh\r\n     * 关键帧的两侧都不携带切线权重信息。\r\n     */\r\n    NONE = 0,\r\n\r\n    /**\r\n     * @en\r\n     * Only left side of the keyframe carries tangent weight information.\r\n     * @zh\r\n     * 仅关键帧的左侧携带切线权重信息。\r\n     */\r\n    LEFT = 1,\r\n\r\n    /**\r\n     * @en\r\n     * Only right side of the keyframe carries tangent weight information.\r\n     * @zh\r\n     * 仅关键帧的右侧携带切线权重信息。\r\n     */\r\n    RIGHT = 2,\r\n\r\n    /**\r\n     * @en\r\n     * Both sides of the keyframe carries tangent weight information.\r\n     * @zh\r\n     * 关键帧的两侧都携带切线权重信息。\r\n     */\r\n    BOTH = 1 | 2,\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n// cSpell:words Cardano's irreducibilis\r\n\r\n/**\r\n * Solve Cubic Equation using Cardano's formula.\r\n * The equation is formed from coeff0 + coeff1 * x + coeff2 * x^2 + coeff3 * x^3 = 0.\r\n * Modified from https://github.com/erich666/GraphicsGems/blob/master/gems/Roots3And4.c .\r\n */\r\nexport function solveCubic (coeff0: number, coeff1: number, coeff2: number, coeff3: number, solutions: [number, number, number]): number {\r\n    // normal form: x^3 + Ax^2 + Bx + C = 0\r\n    const a = coeff2 / coeff3;\r\n    const b = coeff1 / coeff3;\r\n    const c = coeff0 / coeff3;\r\n\r\n    // substitute x = y - A/3 to eliminate quadric term:\r\n    // x^3 +px + q = 0\r\n    const sqrA = a * a;\r\n    const p = 1.0 / 3.0 * (-1.0 / 3 * sqrA + b);\r\n    const q = 1.0 / 2.0 * (2.0 / 27.0 * a * sqrA - 1.0 / 3 * a * b + c);\r\n\r\n    // use Cardano's formula\r\n    const cubicP = p * p * p;\r\n    const d = q * q + cubicP;\r\n\r\n    let nSolutions = 0;\r\n    if (isZero(d)) {\r\n        if (isZero(q)) { // one triple solution\r\n            solutions[0] = 0;\r\n            return 1;\r\n        } else { // one single and one double solution\r\n            const u = Math.cbrt(-q);\r\n            solutions[0] = 2 * u;\r\n            solutions[1] = -u;\r\n            return 2;\r\n        }\r\n    } else if (d < 0) { // Casus irreducibilis: three real solutions\r\n        const phi = 1.0 / 3 * Math.acos(-q / Math.sqrt(-cubicP));\r\n        const t = 2 * Math.sqrt(-p);\r\n\r\n        solutions[0] =   t * Math.cos(phi);\r\n        solutions[1] = -t * Math.cos(phi + Math.PI / 3);\r\n        solutions[2] = -t * Math.cos(phi - Math.PI / 3);\r\n        nSolutions = 3;\r\n    } else { // one real solution\r\n        const sqrtD = Math.sqrt(d);\r\n        const u = Math.cbrt(sqrtD - q);\r\n        const v = -Math.cbrt(sqrtD + q);\r\n        solutions[0] = u + v;\r\n        nSolutions = 1;\r\n    }\r\n\r\n    const sub = 1.0 / 3 * a;\r\n    for (let i = 0; i < nSolutions; ++i) {\r\n        solutions[i] -= sub;\r\n    }\r\n\r\n    return nSolutions;\r\n}\r\n\r\nconst EQN_EPS = 1e-9;\r\n\r\nfunction isZero (x: number): boolean {\r\n    return x > -EQN_EPS && x < EQN_EPS;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV } from 'internal:constants';\r\nimport { CCClass } from '../class';\r\nimport { error } from '../../platform/debug';\r\nimport { getClassName } from '../../utils/js-typed';\r\n\r\nexport type Initializer = () => unknown;\r\n\r\nexport type BabelPropertyDecoratorDescriptor = PropertyDescriptor & { initializer?: Initializer };\r\n\r\n/**\r\n * @en\r\n * The signature is compatible with both the TypeScript legacy decorator and the Babel legacy decorator.\r\n * The third argument is `descriptor` in the Babel case.\r\n * For some engine internally optimized decorators, the third argument is the initializer.\r\n * @zh\r\n * 该签名同时兼容 TypeScript legacy 装饰器以及 Babel legacy 装饰器。\r\n * 第三个参数在 Babel 情况下，会传入 descriptor。对于一些被优化的引擎内部装饰器，会传入 initializer。\r\n */\r\nexport type LegacyPropertyDecorator = (\r\n    target: Record<string, any>, propertyKey: string | symbol, descriptorOrInitializer?: BabelPropertyDecoratorDescriptor | Initializer | null,\r\n) => void;\r\n\r\n/**\r\n * @en\r\n * A class(or property) decorator which does nothing.\r\n * @zh\r\n * 一个什么也不做的类（或属性）装饰器。\r\n */\r\nexport const emptyDecorator: ClassDecorator & LegacyPropertyDecorator = () => {};\r\n\r\n/**\r\n * @en\r\n * A function that ignores all arguments and returns the `emptyDecorator`.\r\n * @zh\r\n * 一个忽略所有参数并且返回 `emptyDecorator` 的函数。\r\n */\r\nexport const emptyDecoratorFn = (): ClassDecorator & LegacyPropertyDecorator => emptyDecorator;\r\n\r\n/**\r\n * @en\r\n * Acts like `emptyDecorator` if called in form of `@x`;\r\n * acts like `emptyDecoratorFn` if called in form of `@x(...args)`.\r\n * @zh\r\n * 当以 `@x` 形式调用时表现如同 `emptyDecorator`，当以 `@x(...args)` 形式调用时表现如同 `emptyDecoratorFn`。\r\n */\r\nexport const emptySmartClassDecorator = makeSmartClassDecorator(() => {});\r\n\r\n/**\r\n * @en\r\n * Make a smart class decorator which can properly handle the following form decorator syntax:\r\n * - `@x`\r\n * - `@x(arg0)`\r\n *\r\n * and forward both the decorated class and the `arg0` (in the first form, `arg0` is forwarded as `undefined`) to\r\n * `decorate`.\r\n * @zh\r\n * 创建一个智能类装饰器，它能正确地处理以下形式的装饰器语法：\r\n * - `@x`\r\n * - `@x(arg0)`\r\n *\r\n * 并且，将被装饰的类和 `arg0`（若是第一种形式，`arg0` 就是 `undefined`）一起转发给 `decorate`。\r\n * @param decorate\r\n */\r\nexport function makeSmartClassDecorator<TArg> (\r\n    decorate: <TFunction extends AnyFunction>(constructor: TFunction, arg?: TArg) => ReturnType<ClassDecorator>,\r\n): ClassDecorator & ((arg?: TArg) => ClassDecorator) {\r\n    return proxyFn;\r\n    function proxyFn(...args: Parameters<ClassDecorator>): ReturnType<ClassDecorator>;\r\n    function proxyFn(arg?: TArg): ClassDecorator;\r\n    function proxyFn (target?: Parameters<ClassDecorator>[0] | TArg): ReturnType<ClassDecorator> {\r\n        if (typeof target === 'function') {\r\n            // If no parameter specified\r\n            return decorate(target);\r\n        } else {\r\n            return function <TFunction extends AnyFunction> (constructor: TFunction): void | Function {\r\n                return decorate(constructor, target);\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nfunction writeEditorClassProperty<TValue> (constructor: AnyFunction, propertyName: string, value: TValue): void {\r\n    const cache = getClassCache(constructor, propertyName);\r\n    if (cache) {\r\n        const proto = getSubDict(cache, 'proto');\r\n        getSubDict(proto, 'editor')[propertyName] = value;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Make a function that accepts an argument value and returns a class decorator.\r\n * The decorator sets the editor property `propertyName`, on the decorated class, into that argument value.\r\n * @zh\r\n * 创建一个函数，该函数接受一个参数值并返回一个类装饰器。\r\n * 该装饰器将被装饰类的编辑器属性 `propertyName` 设置为该参数的值。\r\n * @param propertyName The editor property.\r\n */\r\nexport function makeEditorClassDecoratorFn<TValue> (propertyName: string): (value: TValue) => ClassDecorator {\r\n    return (value: TValue) => <TFunction extends AnyFunction>(constructor: TFunction): void => {\r\n        writeEditorClassProperty(constructor, propertyName, value);\r\n    };\r\n}\r\n\r\n/**\r\n * Make a smart class decorator.\r\n * The smart decorator sets the editor property `propertyName`, on the decorated class, into:\r\n * - `defaultValue` if the decorator is called with `@x` form, or\r\n * - the argument if the decorator is called with an argument, eg, the `@x(arg0)` form.\r\n * @zh\r\n * 创建一个智能类装饰器。\r\n * 该智能类装饰器将根据以下情况来设置被装饰类的编辑器属性 `propertyName`：\r\n * - 如果该装饰器是以 `@x` 形式调用的，该属性将被设置为 `defaultValue`。\r\n * - 如果该装饰器是以一个参数的形式，即 `@x(arg0)` 的形式调用的，该属性将被设置为传入的参数值。\r\n * @param propertyName The editor property.\r\n */\r\nexport function makeSmartEditorClassDecorator<TValue> (propertyName: string, defaultValue: TValue): ClassDecorator & ((arg?: TValue | undefined) => ClassDecorator) {\r\n    return makeSmartClassDecorator<TValue>((constructor, decoratedValue?: TValue): void => {\r\n        writeEditorClassProperty(constructor, propertyName, (defaultValue !== undefined) ? defaultValue : decoratedValue);\r\n    });\r\n}\r\n\r\n// caches for class construction\r\nexport const CACHE_KEY = '__ccclassCache__';\r\n\r\nexport function getClassCache (ctor, decoratorName?): any {\r\n    if (DEV && CCClass._isCCClass(ctor)) {\r\n        error('`@%s` should be used after @ccclass for class \"%s\"', decoratorName, getClassName(ctor));\r\n        return null;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return getSubDict(ctor, CACHE_KEY);\r\n}\r\n\r\nexport function getSubDict<T, TKey extends keyof T> (obj: T, key: TKey): NonNullable<T[TKey]> {\r\n    return obj[key] as NonNullable<T[TKey]> || ((obj[key]) = {} as NonNullable<T[TKey]>);\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV } from 'internal:constants';\r\nimport { getSuper, mixin, getClassName } from '../../utils/js-typed';\r\nimport { CCClass } from '../class';\r\nimport { doValidateMethodWithProps_DEV } from '../utils/preprocess-class';\r\nimport { CACHE_KEY, makeSmartClassDecorator } from './utils';\r\n\r\n/**\r\n * @en Declare a standard class as a CCClass, please refer to the [document](https://docs.cocos.com/creator3d/manual/en/scripting/ccclass.html)\r\n * @zh 将标准写法的类声明为 CC 类，具体用法请参阅[类型定义](https://docs.cocos.com/creator3d/manual/zh/scripting/ccclass.html)。\r\n * @param name - The class name used for serialization.\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass} = _decorator;\r\n *\r\n * // define a CCClass, omit the name\r\n *  @ccclass\r\n * class NewScript extends Component {\r\n *     // ...\r\n * }\r\n *\r\n * // define a CCClass with a name\r\n *  @ccclass('LoginData')\r\n * class LoginData {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const ccclass: ((name?: string) => ClassDecorator) & ClassDecorator = makeSmartClassDecorator<string>((constructor, name) => {\r\n    let base = getSuper(constructor);\r\n    if (base === Object) {\r\n        base = null;\r\n    }\r\n\r\n    const proto = {\r\n        name,\r\n        extends: base,\r\n        ctor: constructor,\r\n    };\r\n    const cache = constructor[CACHE_KEY];\r\n    if (cache) {\r\n        const decoratedProto = cache.proto;\r\n        if (decoratedProto) {\r\n            // decoratedProto.properties = createProperties(ctor, decoratedProto.properties);\r\n            mixin(proto, decoratedProto);\r\n        }\r\n        constructor[CACHE_KEY] = undefined;\r\n    }\r\n\r\n    const res = CCClass(proto);\r\n\r\n    // validate methods\r\n    if (DEV) {\r\n        const propNames = Object.getOwnPropertyNames(constructor.prototype);\r\n        for (let i = 0; i < propNames.length; ++i) {\r\n            const prop = propNames[i];\r\n            if (prop !== 'constructor') {\r\n                const desc = Object.getOwnPropertyDescriptor(constructor.prototype, prop);\r\n                const func = desc && desc.value;\r\n                if (typeof func === 'function') {\r\n                    doValidateMethodWithProps_DEV(func, prop, getClassName(constructor), constructor, base);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return res;\r\n});\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV } from 'internal:constants';\r\nimport { CCClass } from '../class';\r\nimport { makeEditorClassDecoratorFn, makeSmartEditorClassDecorator, emptySmartClassDecorator } from './utils';\r\n\r\n/**\r\n * @en Declare that the current component relies on another type of component.\r\n * If the required component doesn't exist, the engine will create a new empty instance of the required component and add it to the node.\r\n * @zh 为声明为 CCClass 的组件添加依赖的其它组件。当组件添加到节点上时，如果依赖的组件不存在，引擎将会自动将依赖组件添加到同一个节点，防止脚本出错。该设置在运行时同样有效。\r\n * @param requiredComponent The required component type\r\n * @example\r\n * ```ts\r\n * import {_decorator, Sprite, Component} from cc;\r\n * import {ccclass, requireComponent} from _decorator;\r\n *\r\n * @ccclass\r\n * @requireComponent(Sprite)\r\n * class SpriteCtrl extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const requireComponent: (requiredComponent: Function | Function[]) => ClassDecorator = makeEditorClassDecoratorFn('requireComponent');\r\n\r\n/**\r\n * @en Set the component priority, it decides at which order the life cycle functions of components will be invoked. Smaller priority gets invoked before larger priority.\r\n * This will affect `onLoad`, `onEnable`, `start`, `update` and `lateUpdate`, but `onDisable` and `onDestroy` won't be affected.\r\n * @zh 设置脚本生命周期方法调用的优先级。优先级小于 0 的组件将会优先执行，优先级大于 0 的组件将会延后执行。优先级仅会影响 onLoad, onEnable, start, update 和 lateUpdate，而 onDisable 和 onDestroy 不受影响。\r\n * @param priority - The execution order of life cycle methods for Component. Smaller priority gets invoked before larger priority.\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, executionOrder} = _decorator;\r\n *\r\n * @ccclass\r\n * @executionOrder(1)\r\n * class CameraCtrl extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const executionOrder: (priority: number) => ClassDecorator = makeEditorClassDecoratorFn('executionOrder');\r\n\r\n/**\r\n * @en Forbid adds multiple instances of the component to the same node.\r\n * @zh 防止多个相同类型（或子类型）的组件被添加到同一个节点。\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, disallowMultiple} = _decorator;\r\n *\r\n * @ccclass\r\n * @disallowMultiple\r\n * class CameraCtrl extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const disallowMultiple: ClassDecorator & ((yes?: boolean) => ClassDecorator) =    DEV ? makeSmartEditorClassDecorator('disallowMultiple', true) : emptySmartClassDecorator;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV, EDITOR, JSB, TEST } from 'internal:constants';\r\nimport { CCString, CCInteger, CCFloat, CCBoolean } from '../utils/attribute';\r\nimport { IExposedAttributes } from '../utils/attribute-defines';\r\nimport { LegacyPropertyDecorator, getSubDict, getClassCache, BabelPropertyDecoratorDescriptor, Initializer } from './utils';\r\nimport { warnID, errorID } from '../../platform/debug';\r\nimport { getFullFormOfProperty } from '../utils/preprocess-class';\r\nimport { ClassStash, PropertyStash, PropertyStashInternalFlag } from '../class-stash';\r\nimport { getClassName, mixin } from '../../utils/js-typed';\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type SimplePropertyType = Function | string | typeof CCString | typeof CCInteger | typeof CCBoolean;\r\n\r\nexport type PropertyType = SimplePropertyType | SimplePropertyType[];\r\n\r\n/**\r\n * @zh CCClass 属性选项。\r\n * @en CCClass property options\r\n */\r\nexport type IPropertyOptions = IExposedAttributes\r\n\r\n/**\r\n * @en Declare as a CCClass property with options\r\n * @zh 声明属性为 CCClass 属性。\r\n * @param options property options\r\n */\r\nexport function property (options?: IPropertyOptions): LegacyPropertyDecorator;\r\n\r\n/**\r\n * @en Declare as a CCClass property with the property type\r\n * @zh 标注属性为 cc 属性。<br/>\r\n * 等价于`@property({type})`。\r\n * @param type A [[ccclass]] type or a [[ValueType]]\r\n */\r\nexport function property (type: PropertyType): LegacyPropertyDecorator;\r\n\r\n/**\r\n * @en Declare as a CCClass property\r\n * @zh 标注属性为 cc 属性。<br/>\r\n * 等价于`@property()`。\r\n */\r\nexport function property (...args: Parameters<LegacyPropertyDecorator>): void;\r\n\r\nexport function property (\r\n    target?: Parameters<LegacyPropertyDecorator>[0] | PropertyType,\r\n    propertyKey?: Parameters<LegacyPropertyDecorator>[1],\r\n    descriptorOrInitializer?: Parameters<LegacyPropertyDecorator>[2],\r\n): LegacyPropertyDecorator | undefined {\r\n    let options: IPropertyOptions | PropertyType | null = null;\r\n    function normalized (\r\n        target: Parameters<LegacyPropertyDecorator>[0],\r\n        propertyKey: Parameters<LegacyPropertyDecorator>[1],\r\n        descriptorOrInitializer: Parameters<LegacyPropertyDecorator>[2],\r\n    ): void {\r\n        const classStash = getOrCreateClassStash(target);\r\n        const propertyStash = getOrCreateEmptyPropertyStash(\r\n            target,\r\n            propertyKey,\r\n        );\r\n        const classConstructor = target.constructor as new () => unknown;\r\n        mergePropertyOptions(\r\n            classStash,\r\n            propertyStash,\r\n            classConstructor,\r\n            propertyKey,\r\n            options,\r\n            descriptorOrInitializer,\r\n        );\r\n    }\r\n\r\n    if (target === undefined) {\r\n        // @property() => LegacyPropertyDecorator\r\n        return property({\r\n            type: undefined,\r\n        });\r\n    } else if (typeof propertyKey === 'undefined') {\r\n        // @property(options) => LegacyPropertyDescriptor\r\n        // @property(type) => LegacyPropertyDescriptor\r\n        options = target;\r\n        return normalized;\r\n    } else {\r\n        // @property\r\n        normalized(target as Parameters<LegacyPropertyDecorator>[0], propertyKey, descriptorOrInitializer);\r\n        return undefined;\r\n    }\r\n}\r\n\r\nfunction getDefaultFromInitializer (initializer: Initializer): unknown {\r\n    let value: unknown;\r\n    try {\r\n        value = initializer();\r\n    } catch (e) {\r\n        // just lazy initialize by CCClass\r\n        return initializer;\r\n    }\r\n    if (typeof value !== 'object' || value === null) {\r\n        // string boolean number function undefined null\r\n        return value;\r\n    } else {\r\n        // The default attribute will not be used in the ES6 constructor actually,\r\n        // so we don't need to simplify into `{}` or `[]` or vec2 completely.\r\n        return initializer;\r\n    }\r\n}\r\n\r\nfunction extractActualDefaultValues (classConstructor: new () => unknown): unknown {\r\n    let dummyObj: unknown;\r\n    try {\r\n        // eslint-disable-next-line new-cap\r\n        dummyObj = new classConstructor();\r\n    } catch (e) {\r\n        if (DEV) {\r\n            // NOTE: here we use unknown e as a string, or sometheing supports toString() method.\r\n            warnID(3652, getClassName(classConstructor), e as string);\r\n        }\r\n        return {};\r\n    }\r\n    return dummyObj;\r\n}\r\n\r\nfunction getOrCreateClassStash (target: Parameters<LegacyPropertyDecorator>[0]): ClassStash {\r\n    const cache = getClassCache(target.constructor) as ClassStash;\r\n    return cache;\r\n}\r\n\r\nfunction getOrCreateEmptyPropertyStash (\r\n    target: Parameters<LegacyPropertyDecorator>[0],\r\n    propertyKey: Parameters<LegacyPropertyDecorator>[1],\r\n): PropertyStash {\r\n    const classStash = getClassCache(target.constructor) as ClassStash;\r\n    const ccclassProto = getSubDict(classStash, 'proto');\r\n    const properties = getSubDict(ccclassProto, 'properties');\r\n    const propertyStash = properties[(propertyKey as string)] ??= {} as PropertyStash;\r\n    return propertyStash;\r\n}\r\n\r\nexport function getOrCreatePropertyStash (\r\n    target: Parameters<LegacyPropertyDecorator>[0],\r\n    propertyKey: Parameters<LegacyPropertyDecorator>[1],\r\n    descriptorOrInitializer?: Parameters<LegacyPropertyDecorator>[2],\r\n): PropertyStash {\r\n    const classStash = getClassCache(target.constructor) as ClassStash;\r\n    const ccclassProto = getSubDict(classStash, 'proto');\r\n    const properties = getSubDict(ccclassProto, 'properties');\r\n    const propertyStash = properties[(propertyKey as string)] ??= {} as PropertyStash;\r\n    propertyStash.__internalFlags |= PropertyStashInternalFlag.STANDALONE;\r\n    if (descriptorOrInitializer && typeof descriptorOrInitializer !== 'function' && (descriptorOrInitializer.get || descriptorOrInitializer.set)) {\r\n        if (descriptorOrInitializer.get) {\r\n            propertyStash.get = descriptorOrInitializer.get;\r\n        }\r\n        if (descriptorOrInitializer.set) {\r\n            propertyStash.set = descriptorOrInitializer.set;\r\n        }\r\n    } else {\r\n        setDefaultValue(\r\n            classStash,\r\n            propertyStash,\r\n            target.constructor as new () => unknown,\r\n            propertyKey,\r\n            descriptorOrInitializer,\r\n        );\r\n    }\r\n    return propertyStash;\r\n}\r\n\r\nfunction mergePropertyOptions (\r\n    cache: ClassStash,\r\n    propertyStash: PropertyStash,\r\n    ctor: new () => unknown,\r\n    propertyKey: Parameters<LegacyPropertyDecorator>[1],\r\n    options,\r\n    descriptorOrInitializer: Parameters<LegacyPropertyDecorator>[2] | undefined,\r\n): void {\r\n    let fullOptions;\r\n    const isGetset = descriptorOrInitializer && typeof descriptorOrInitializer !== 'function'\r\n        && (descriptorOrInitializer.get || descriptorOrInitializer.set);\r\n    if (options) {\r\n        fullOptions = getFullFormOfProperty(options, isGetset);\r\n    }\r\n    const propertyRecord: PropertyStash = mixin(propertyStash, fullOptions || options || {}) as PropertyStash;\r\n\r\n    if (isGetset) {\r\n        // typescript or babel\r\n        if (DEV && options && ((fullOptions || options).get || (fullOptions || options).set)) {\r\n            const errorProps = getSubDict(cache, 'errorProps');\r\n            if (!errorProps[(propertyKey as string)]) {\r\n                errorProps[(propertyKey as string)] = true;\r\n                warnID(3655, propertyKey as string, getClassName(ctor), propertyKey as string, propertyKey as string);\r\n            }\r\n        }\r\n        if ((descriptorOrInitializer as BabelPropertyDecoratorDescriptor).get) {\r\n            propertyRecord.get = (descriptorOrInitializer as BabelPropertyDecoratorDescriptor).get;\r\n        }\r\n        if ((descriptorOrInitializer as BabelPropertyDecoratorDescriptor).set) {\r\n            propertyRecord.set = (descriptorOrInitializer as BabelPropertyDecoratorDescriptor).set;\r\n        }\r\n    } else { // Target property is non-accessor\r\n        if (DEV && (propertyRecord.get || propertyRecord.set)) {\r\n            // Specify \"accessor options\" for non-accessor property is forbidden.\r\n            errorID(3655, propertyKey as string, getClassName(ctor), propertyKey  as string, propertyKey  as string);\r\n            return;\r\n        }\r\n\r\n        setDefaultValue(\r\n            cache,\r\n            propertyRecord,\r\n            ctor,\r\n            propertyKey,\r\n            descriptorOrInitializer,\r\n        );\r\n\r\n        if ((EDITOR && !window.Build) || TEST) {\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (!fullOptions && options && options.hasOwnProperty('default')) {\r\n                warnID(3653, propertyKey as string, getClassName(ctor));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction setDefaultValue<T> (\r\n    classStash: ClassStash,\r\n    propertyStash: PropertyStash,\r\n    classConstructor: new () => T,\r\n    propertyKey: PropertyKey,\r\n    descriptorOrInitializer: BabelPropertyDecoratorDescriptor | Initializer | undefined | null,\r\n): void {\r\n    if (descriptorOrInitializer !== undefined) {\r\n        if (typeof descriptorOrInitializer === 'function') {\r\n            propertyStash.default = getDefaultFromInitializer(descriptorOrInitializer);\r\n        } else if (descriptorOrInitializer === null) {\r\n            // For some decorated properties we haven't specified the default value, then the initializer should be null.\r\n            // We fall back to the behavior of v3.6.3, where we don't specify the default value automatically.\r\n            // propertyStash.default = undefined;\r\n        } else if (descriptorOrInitializer.initializer) {\r\n            // In the case of Babel, if an initializer is given for a class field.\r\n            // That initializer is passed to `descriptor.initializer`.\r\n            propertyStash.default = getDefaultFromInitializer(descriptorOrInitializer.initializer);\r\n        }\r\n    } else {\r\n        // In the case of TypeScript, we can not directly capture the initializer.\r\n        // We have to be hacking to extract the value.\r\n        // We should fall back to the TypeScript case only when `descriptorOrInitializer` is undefined.\r\n        const actualDefaultValues = classStash.default || (classStash.default = extractActualDefaultValues(classConstructor));\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if ((actualDefaultValues as any).hasOwnProperty(propertyKey)) {\r\n            propertyStash.default = (actualDefaultValues as any)[propertyKey];\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { emptyDecorator, LegacyPropertyDecorator } from './utils';\r\nimport { getOrCreatePropertyStash } from './property';\r\nimport { PropertyStash, PropertyStashInternalFlag } from '../class-stash';\r\nimport { getOrCreateSerializationMetadata } from '../serialization-metadata';\r\n\r\n/**\r\n * True if the serialization feature is enabled in the current environment.\r\n * @engineInternal\r\n */\r\nconst WITH_SERIALIZATION = EDITOR || TEST;\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport const serializable: LegacyPropertyDecorator = (target, propertyKey, descriptorOrInitializer) => {\r\n    const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n    setImplicitSerializable(propertyStash);\r\n};\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport function formerlySerializedAs (name: string): LegacyPropertyDecorator {\r\n    return (target, propertyKey, descriptorOrInitializer): void => {\r\n        const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n        propertyStash.formerlySerializedAs = name;\r\n        setImplicitSerializable(propertyStash);\r\n    };\r\n}\r\n\r\n/**\r\n * @en\r\n * Marks the property as editor only.\r\n * @zh\r\n * 设置该属性仅在编辑器中生效。\r\n */\r\nexport const editorOnly: LegacyPropertyDecorator = (target, propertyKey, descriptorOrInitializer) => {\r\n    const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n    propertyStash.editorOnly = true;\r\n    setImplicitSerializable(propertyStash);\r\n};\r\n\r\nfunction setImplicitSerializable (propertyStash: PropertyStash): void {\r\n    propertyStash.__internalFlags |= PropertyStashInternalFlag.IMPLICIT_SERIALIZABLE;\r\n}\r\n\r\n/**\r\n * @en\r\n * Marks the target class as \"uniquely referenced\" which means, in the aspect of serialization,\r\n * no more than one object should reference the same instance of that class.\r\n * When serializing references to objects of such class,\r\n * they're treated as different objects even if they point to actually the same.\r\n * While deserializing, these two references would point two distinct objects.\r\n * For example:\r\n * ```ts\r\n * import { _decorator } from 'cc';\r\n * @_decorator.ccclass\r\n * @_decorator.uniquelyReferenced\r\n * class Foo { }\r\n *\r\n * @_decorator.ccclass\r\n * class Bar {\r\n *   @_decorator.property\r\n *   public foo = new Foo();\r\n * }\r\n *\r\n * const bar1 = new Bar();\r\n * const bar2 = new Bar();\r\n * bar2.foo = bar1.foo; // Programmatically let them reference to the same\r\n * ```\r\n * `bar1` and `bar2` reference to the same `Foo` object.\r\n * However, after deserializing, `bar1.foo === bar2.foo` always evaluates to `false`.\r\n * @zh\r\n * 将目标类标记为“被唯一引用”的，其意味着就序列化而言，不会有多个对象引用该类的同一实例。\r\n * 当序列化到该类的对象引用时，即使它们明面上指向同一对象，也会被当作是不同对象；\r\n * 而当反序列化后，这两个引用将指向截然不同的两个对象。\r\n * 例如：\r\n * ```ts\r\n * import { _decorator } from 'cc';\r\n * @_decorator.ccclass\r\n * @_decorator.uniquelyReferenced\r\n * class Foo { }\r\n *\r\n * @_decorator.ccclass\r\n * class Bar {\r\n *   @_decorator.property\r\n *   public foo = new Foo();\r\n * }\r\n *\r\n * const bar1 = new Bar();\r\n * const bar2 = new Bar();\r\n * bar2.foo = bar1.foo; // 由程序逻辑让它们引用同一个对象\r\n * ```\r\n * `bar1` 和 `bar2` 引用同一个 `Foo` 对象。\r\n * 但在反序列化之后，`bar1.foo === bar2.foo` 永不成立。\r\n */\r\nexport const uniquelyReferenced: ClassDecorator = !WITH_SERIALIZATION\r\n    ? emptyDecorator\r\n    // eslint-disable-next-line func-names, @typescript-eslint/ban-types\r\n    : function uniquelyReferenced<TFunction extends Function> (constructor: TFunction): void {\r\n        const metadata = getOrCreateSerializationMetadata(constructor);\r\n        metadata.uniquelyReferenced = true;\r\n    };\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV } from 'internal:constants';\r\nimport { IExposedAttributes } from '../utils/attribute-defines';\r\nimport { getOrCreatePropertyStash } from './property';\r\nimport { PropertyStash, PropertyStashInternalFlag } from '../class-stash';\r\n\r\nimport { LegacyPropertyDecorator, emptyDecorator, makeSmartEditorClassDecorator, makeEditorClassDecoratorFn, emptySmartClassDecorator, emptyDecoratorFn } from './utils';\r\n\r\n/**\r\n * @en Makes a CCClass that inherits from component execute in edit mode.<br/>\r\n * By default, all components are only executed in play mode,<br/>\r\n * which means they will not have their callback functions executed while the Editor is in edit mode.<br/>\r\n * @zh 允许继承自 Component 的 CCClass 在编辑器里执行。<br/>\r\n * 默认情况下，所有 Component 都只会在运行时才会执行，也就是说它们的生命周期回调不会在编辑器里触发。\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, executeInEditMode} = _decorator;\r\n *\r\n *  @ccclass\r\n *  @executeInEditMode\r\n * class NewScript extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const executeInEditMode: ClassDecorator & ((yes?: boolean) => ClassDecorator) =    DEV ? makeSmartEditorClassDecorator('executeInEditMode', true) : emptySmartClassDecorator;\r\n\r\n/**\r\n * @en Add the current component to the specific menu path in `Add Component` selector of the inspector panel\r\n * @zh 将当前组件添加到组件菜单中，方便用户查找。例如 \"Rendering/CameraCtrl\"。\r\n * @param path - The path is the menu represented like a pathname. For example, the menu could be \"Rendering/CameraCtrl\".\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, menu} = _decorator;\r\n *\r\n * @ccclass\r\n * @menu(\"Rendering/CameraCtrl\")\r\n * class NewScript extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const menu: (path: string) => ClassDecorator =    DEV ? makeEditorClassDecoratorFn('menu') : emptyDecoratorFn;\r\n\r\n/**\r\n * @en When [[_decorator.executeInEditMode]] is set,\r\n * This decorator will make the editor run in high FPS mode when a node with the component is focused\r\n * @zh 当指定了 [[_decorator.executeInEditMode]] 以后，playOnFocus 可以在选中当前组件所在的节点时，提高编辑器的场景刷新频率到 60 FPS，否则场景就只会在必要的时候进行重绘。\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, playOnFocus, executeInEditMode} = _decorator;\r\n *\r\n * @ccclass\r\n * @executeInEditMode\r\n * @playOnFocus\r\n * class CameraCtrl extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const playOnFocus: ClassDecorator & ((yes?: boolean) => ClassDecorator) =    DEV ? makeSmartEditorClassDecorator<boolean>('playOnFocus', true) : emptySmartClassDecorator;\r\n\r\n/**\r\n * @en Use a customized inspector page in the **inspector**\r\n * @zh 自定义当前组件在 **属性检查器** 中渲染时所用的 UI 页面描述。\r\n * @param url The URL of the page definition in js\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, inspector} = _decorator;\r\n *\r\n * @ccclass\r\n * @inspector(\"packages://inspector/inspectors/comps/camera-ctrl.js\")\r\n * class NewScript extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const inspector: (url: string) => ClassDecorator =    DEV ? makeEditorClassDecoratorFn('inspector') : emptyDecoratorFn;\r\n\r\n/**\r\n * @en Define the icon of the component.\r\n * @zh 自定义当前组件在编辑器中显示的图标 url。\r\n * @param url\r\n * @private\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, icon} = _decorator;\r\n *\r\n *  @ccclass\r\n *  @icon(\"xxxx.png\")\r\n * class NewScript extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const icon: (url: string) => ClassDecorator =    DEV ? makeEditorClassDecoratorFn('icon') : emptyDecoratorFn;\r\n\r\n/**\r\n * @en Define the help documentation URL,\r\n * if given, the component section in the **Inspector** will have a help documentation icon refers to the web page given.\r\n * @zh 指定当前组件的帮助文档的 url，设置过后，在 **属性检查器** 中就会出现一个帮助图标，用户点击将打开指定的网页。\r\n * @param url The URL of the help documentation\r\n * @example\r\n * ```ts\r\n * import { _decorator, Component } from 'cc';\r\n * const {ccclass, help} = _decorator;\r\n *\r\n * @ccclass\r\n * @help(\"app://docs/html/components/spine.html\")\r\n * class NewScript extends Component {\r\n *     // ...\r\n * }\r\n * ```\r\n */\r\nexport const help: (url: string) => ClassDecorator = DEV ? makeEditorClassDecoratorFn('help') : emptyDecoratorFn;\r\n\r\n/**\r\n * @en\r\n * Enables the editor interoperability of the property.\r\n * @zh\r\n * 允许该属性与编辑器交互。\r\n * @engineInternal\r\n */\r\nexport const editable: LegacyPropertyDecorator = !DEV\r\n    ? emptyDecorator\r\n    : (target, propertyKey, descriptorOrInitializer): void => {\r\n        const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n        setImplicitVisible(propertyStash);\r\n    };\r\n\r\n/**\r\n * @en\r\n * Sets the condition to show the property.\r\n * @zh\r\n * 设置在编辑器展示该属性的条件。\r\n * @param condition 展示条件，当返回 `true` 时展示；否则不展示。\r\n * @engineInternal\r\n */\r\nexport const visible: (condition: boolean | (() => boolean)) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('visible');\r\n\r\n/**\r\n * @en\r\n * Sets the property to be read-only in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中仅是可读的。\r\n */\r\nexport const readOnly: LegacyPropertyDecorator = !DEV\r\n    ? emptyDecorator\r\n    : setPropertyStashWithImplicitVisible('readonly', true);\r\n\r\n/**\r\n * @en\r\n * Sets the display name of the property in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中的显示名称。\r\n * @param text 显示名称。\r\n * @engineInternal\r\n */\r\nexport const displayName: (text: string) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('displayName');\r\n\r\n/**\r\n * @en\r\n * Sets the tooltip content of the property in editor.\r\n * @zh\r\n * 设置该属性在编辑器中的工具提示内容。\r\n * @param text 工具提示。\r\n * @engineInternal\r\n */\r\nexport const tooltip: (text: string) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashWithImplicitI18n('tooltip');\r\n\r\n/**\r\n * @en\r\n * Sets the group where this property is organized into, on property inspector.\r\n * @zh\r\n * 设置在属性检查器上该属性所属的分类标签。\r\n * @param options 分组的配置。\r\n */\r\nexport const group: (options: NonNullable<IExposedAttributes['group']>) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('group');\r\n\r\n/**\r\n * @en\r\n * Sets the allowed range of the property in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中允许设置的范围。\r\n * @param values 范围。\r\n * @engineInternal\r\n */\r\nexport const range: (values: [number, number, number] | [number, number]) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('range');\r\n\r\n/**\r\n * @en\r\n * Sets the allowed min value of the property in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中允许的最小值。\r\n * @param value 最小值。\r\n */\r\nexport const rangeMin: (value: number | (() => number)) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('min');\r\n\r\n/**\r\n * @en\r\n * Sets the allowed max value of the property in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中允许的最大值。\r\n * @param value 最大值。\r\n */\r\nexport const rangeMax: (value: number | (() => number)) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('max');\r\n\r\n/**\r\n * @en\r\n * Sets the step of the property in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中的步进值。\r\n * @param value 步进值。\r\n * @engineInternal\r\n */\r\nexport const rangeStep: (value: number) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('step');\r\n\r\n/**\r\n * @en\r\n * Enable a slider to be given to coordinate the property in the editor.\r\n * @zh\r\n * 允许在编辑器中提供滑动条来调节值\r\n * @engineInternal\r\n */\r\nexport const slide: LegacyPropertyDecorator = !DEV\r\n    ? emptyDecorator\r\n    : setPropertyStashWithImplicitVisible('slide', true);\r\n\r\n/**\r\n * @en\r\n * Sets the display order of the property in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中的显示顺序。\r\n * @param order 显示顺序。\r\n * @engineInternal\r\n */\r\nexport const displayOrder: (order: number) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('displayOrder');\r\n\r\n/**\r\n * @en\r\n * Sets the unit of the property in the editor.\r\n * @zh\r\n * 设置该属性在编辑器中的计量单位。\r\n * @param name 计量单位的名称。\r\n */\r\nexport const unit: (name: string) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecoratorFn\r\n    : setPropertyStashVar1WithImplicitVisible('unit');\r\n\r\n/**\r\n * @en\r\n * Sets to convert the value into radian before feeding it to the property in the editor.\r\n * @zh\r\n * 设置在编辑器中赋值该属性前将值先转换为弧度制。\r\n */\r\nexport const radian: LegacyPropertyDecorator = !DEV\r\n    ? emptyDecorator\r\n    : setPropertyStashWithImplicitVisible('radian', true);\r\n\r\n/**\r\n * @en\r\n * Enable multi-line display of the property in editor.\r\n * @zh\r\n * 允许在编辑器中对该属性进行多行显示。\r\n */\r\nexport const multiline: LegacyPropertyDecorator = !DEV\r\n    ? emptyDecorator\r\n    : setPropertyStashWithImplicitVisible('multiline', true);\r\n\r\n/**\r\n * @en\r\n * Sets the property so that it does not interop with the animation parts in the editor.\r\n * @zh\r\n * 设置该属性不参与编辑器中动画相关的交互。\r\n * @engineInternal\r\n */\r\nexport const disallowAnimation: LegacyPropertyDecorator = !DEV\r\n    ? emptyDecorator\r\n    : (target, propertyKey, descriptorOrInitializer): void => {\r\n        const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n        propertyStash.animatable = false;\r\n    };\r\n\r\n/**\r\n *\r\n * @engineInternal\r\n */\r\nexport const radioGroup: (val: NonNullable<PropertyStash['radioGroup']>) => LegacyPropertyDecorator = !DEV\r\n    ? emptyDecorator\r\n    : setPropertyStashVar1WithImplicitVisible('radioGroup');\r\n\r\nfunction setPropertyStashWithImplicitVisible<TKey extends keyof PropertyStash> (\r\n    key: TKey,\r\n    value: NonNullable<PropertyStash[TKey]>,\r\n): LegacyPropertyDecorator {\r\n    return (target, propertyKey, descriptorOrInitializer): void => {\r\n        const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n        propertyStash[key] = value;\r\n        setImplicitVisible(propertyStash);\r\n    };\r\n}\r\n\r\nfunction setPropertyStashVar1WithImplicitVisible<TKey extends keyof PropertyStash> (\r\n    key: TKey,\r\n) {\r\n    return (value: NonNullable<PropertyStash[TKey]>): LegacyPropertyDecorator => (target, propertyKey, descriptorOrInitializer): void => {\r\n        const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n        propertyStash[key] = value;\r\n        setImplicitVisible(propertyStash);\r\n    };\r\n}\r\n\r\nfunction setImplicitVisible (propertyStash: PropertyStash): void {\r\n    propertyStash.__internalFlags |= PropertyStashInternalFlag.IMPLICIT_VISIBLE;\r\n}\r\n\r\nfunction setPropertyStashWithImplicitI18n<TKey extends keyof PropertyStash> (\r\n    key: TKey,\r\n) {\r\n    return (value: NonNullable<PropertyStash[TKey]>): LegacyPropertyDecorator => (target, propertyKey, descriptorOrInitializer): void => {\r\n        const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n        const prefix = 'i18n:';\r\n        if (value.startsWith(prefix)) {\r\n            const extensionPrefix = 'ENGINE.';\r\n            // TODO: 'i18n:XXX' is a dynamic property inject, which is not defined in interface PropertyStash.\r\n            (propertyStash[key] as string) = `${prefix}${extensionPrefix}${value.substring(prefix.length)}`;\r\n        } else {\r\n            propertyStash[key] = value;\r\n        }\r\n        setImplicitVisible(propertyStash);\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { LegacyPropertyDecorator } from './utils';\r\nimport { property } from './property';\r\nimport { CCString, CCInteger, CCFloat, CCBoolean, PrimitiveType } from '../utils/attribute';\r\n\r\n/**\r\n * @en Declare the property as integer\r\n * @zh 将该属性标记为整数。\r\n */\r\nexport const integer = type(CCInteger);\r\n\r\n/**\r\n * @en Declare the property as float\r\n * @zh 将该属性标记为浮点数。\r\n */\r\nexport const float = type(CCFloat);\r\n\r\n/**\r\n * @en Declare the property as boolean\r\n * @zh 将该属性标记为布尔值。\r\n */\r\nexport const boolean = type(CCBoolean);\r\n\r\n/**\r\n * @en Declare the property as string\r\n * @zh 将该属性标记为字符串。\r\n */\r\nexport const string = type(CCString);\r\n\r\n/**\r\n * @en Declare the property as the given type\r\n * @zh 标记该属性的类型。\r\n * @param type\r\n */\r\nexport function type (type: Function | [Function] | any): LegacyPropertyDecorator;\r\n\r\nexport function type<T> (type: PrimitiveType<T> | [PrimitiveType<T>]): LegacyPropertyDecorator;\r\n\r\nexport function type<T> (type: PrimitiveType<T> | Function | [PrimitiveType<T>] | [Function]): LegacyPropertyDecorator {\r\n    return property({\r\n        type,\r\n    });\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { LegacyPropertyDecorator } from './utils';\r\nimport { getOrCreatePropertyStash } from './property';\r\n\r\n/**\r\n *\r\n * @engineInternal\r\n */\r\nexport const override: LegacyPropertyDecorator = (target, propertyKey, descriptorOrInitializer) => {\r\n    const propertyStash = getOrCreatePropertyStash(target, propertyKey, descriptorOrInitializer);\r\n    propertyStash.override = true;\r\n};\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { ccclass, editorOnly } from 'cc.decorator';\r\nimport { getClassName } from '../utils/js';\r\nimport { EditorExtendableObject, editorExtrasTag } from './editor-extras-tag';\r\nimport { assertIsTrue } from './utils/asserts';\r\n\r\n// Functions and classes exposed from this module are useful to\r\n// make a class to be `EditorExtendableObject`.\r\n//\r\n// These helpers are used internally, don't expose them to the user.\r\n\r\n/**\r\n * Creates a mixin class that inherits from the specific base class and implements the `EditorExtendableObject` interface.\r\n * @param Base The base class.\r\n * @param className Assign an optional cc class name. If the base class is not cc class, this param is required.\r\n * @returns The mixin class.\r\n */\r\nexport function EditorExtendableMixin<T> (Base: new (...args: any[]) => T, className?: string): new (...args: any[]) => EditorExtendableObject {\r\n    return editorExtendableInternal(Base);\r\n}\r\n\r\nclass Empty {}\r\n\r\n/**\r\n * Class which implements the `EditorExtendableObject` interface.\r\n * @engineInternal\r\n */\r\nexport const EditorExtendable = editorExtendableInternal();\r\n\r\nexport type EditorExtendable = InstanceType<typeof EditorExtendable>;\r\n\r\n// Note: Babel does not support decorators on computed property currently.\r\n// So we have to use its literal value below.\r\nassertIsTrue(editorExtrasTag === '__editorExtras__', 'editorExtrasTag needs to be updated.');\r\n\r\ntype ResultType<T> = new (...args: any[]) => (T & EditorExtendableObject);\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction editorExtendableInternal<T> (Base?: (new (...args: any[]) => T), className?: string): new (...args: any[]) => EditorExtendableObject {\r\n    if (!EDITOR) {\r\n        return (Base ?? Empty) as unknown as ResultType<T>;\r\n    }\r\n\r\n    let name: string;\r\n    if (className) {\r\n        name = className;\r\n    } else if (!Base) {\r\n        name = `cc.EditorExtendable`;\r\n    } else {\r\n        const baseName = getClassName(Base);\r\n        if (baseName) {\r\n            name = `cc.EditorExtendable/${baseName}`;\r\n        } else {\r\n            throw new Error(`You should supply a class name to EditorExtendable when mixin with ${Base.name}.`);\r\n        }\r\n    }\r\n\r\n    let EditorExtendable: any;\r\n    if (Base) {\r\n        @ccclass(name)\r\n        class C extends (Base as unknown as any) implements EditorExtendableObject {\r\n            @editorOnly\r\n            public __editorExtras__!: unknown;\r\n        }\r\n\r\n        EditorExtendable = C;\r\n    } else {\r\n        @ccclass(name)\r\n        class C implements EditorExtendableObject {\r\n            @editorOnly\r\n            public __editorExtras__!: unknown;\r\n        }\r\n\r\n        EditorExtendable = C;\r\n    }\r\n\r\n    return EditorExtendable as unknown as ResultType<T>;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { Vec3, Quat, Vec4, Vec2, Mat4 } from '../../math';\r\n\r\nexport enum StorageUnit {\r\n    Uint8, Uint16, Uint32,\r\n    Int8, Int16, Int32,\r\n    Float32, Float64,\r\n}\r\n\r\nexport enum ElementType {\r\n    Scalar,\r\n    Vec2,\r\n    Vec3,\r\n    Vec4,\r\n    Quat,\r\n    Mat4,\r\n}\r\n\r\nconst elementTypeBits = 3;\r\n\r\nexport type StorageUnitElementType = number;\r\n\r\nexport function combineStorageUnitElementType (unit: StorageUnit, elementType: ElementType): number {\r\n    return (elementType << elementTypeBits) + unit;\r\n}\r\n\r\nexport function extractStorageUnitElementType (combined: StorageUnitElementType): {\r\n    storageUnit: number;\r\n    elementType: number;\r\n} {\r\n    return {\r\n        storageUnit: ~(-1 << elementTypeBits) & combined,\r\n        elementType: combined >> elementTypeBits,\r\n    };\r\n}\r\n\r\n/**\r\n * @deprecated Since V3.5.0.\r\n */\r\n@ccclass('cc.CompactValueTypeArray')\r\nexport class CompactValueTypeArray {\r\n    public static StorageUnit = StorageUnit;\r\n\r\n    public static ElementType = ElementType;\r\n\r\n    /**\r\n     * Offset into the buffer, in bytes.\r\n     */\r\n    @serializable\r\n    private _byteOffset = 0;\r\n\r\n    /**\r\n     * Unit count this CVTA occupies.\r\n     */\r\n    @serializable\r\n    private _unitCount = 0;\r\n\r\n    /**\r\n     * Element type this CVTA holds.\r\n     */\r\n    @serializable\r\n    private _unitElement = combineStorageUnitElementType(StorageUnit.Uint8, ElementType.Scalar);\r\n\r\n    /**\r\n     * Element count this CVTA holds.\r\n     */\r\n    @serializable\r\n    private _length = 0;\r\n\r\n    /**\r\n     * Returns the length in bytes that a buffer needs to encode the specified value array in form of CVTA.\r\n     * @param values The value array.\r\n     * @param unit Target element type.\r\n     */\r\n    public static lengthFor (values: any[], elementType: ElementType, unit: StorageUnit): number {\r\n        const elementTraits = getElementTraits(elementType);\r\n        return elementTraits.requiredUnits * values.length * getStorageConstructor(unit).BYTES_PER_ELEMENT;\r\n    }\r\n\r\n    /**\r\n     * Compresses the specified value array in form of CVTA into target buffer.\r\n     * @param values The value array.\r\n     * @param unit Target element type.\r\n     * @param arrayBuffer Target buffer.\r\n     * @param byteOffset Offset into target buffer.\r\n     */\r\n    public static compress (values: any[], elementType: ElementType, unit: StorageUnit, arrayBuffer: ArrayBuffer, byteOffset: number, presumedByteOffset: number): CompactValueTypeArray {\r\n        const elementTraits = getElementTraits(elementType);\r\n        const storageConstructor = getStorageConstructor(unit);\r\n        const unitCount = elementTraits.requiredUnits * values.length;\r\n        const storage = new storageConstructor(arrayBuffer, byteOffset, unitCount);\r\n        for (let i = 0; i < values.length; ++i) {\r\n            elementTraits.compress(storage, i, values[i]);\r\n        }\r\n\r\n        const result = new CompactValueTypeArray();\r\n        result._unitElement = combineStorageUnitElementType(unit, elementType);\r\n        result._byteOffset = presumedByteOffset;\r\n        result._unitCount = unitCount;\r\n        result._length = values.length;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Decompresses this CVTA.\r\n     * @param arrayBuffer The buffer this CVTA stored in.\r\n     */\r\n    public decompress<T> (arrayBuffer: ArrayBuffer): T[] {\r\n        const { storageUnit, elementType } = extractStorageUnitElementType(this._unitElement);\r\n        const elementTraits = getElementTraits(elementType);\r\n        const storageConstructor = getStorageConstructor(storageUnit);\r\n        const storage = new storageConstructor(arrayBuffer, this._byteOffset, this._unitCount);\r\n        const result = new Array<T>(this._length);\r\n        for (let i = 0; i < this._length; ++i) {\r\n            result[i] = elementTraits.decompress(storage, i);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nfunction getElementTraits (elementType: ElementType): CompactTraits {\r\n    return BuiltinElementTypeTraits[elementType];\r\n}\r\n\r\nfunction getStorageConstructor (unit: StorageUnit): TypedArrayConstructor {\r\n    switch (unit) {\r\n    case StorageUnit.Uint8:\r\n        return Uint8Array;\r\n    case StorageUnit.Uint16:\r\n        return Uint16Array;\r\n    case StorageUnit.Uint32:\r\n        return Uint32Array;\r\n    case StorageUnit.Int8:\r\n        return Int8Array;\r\n    case StorageUnit.Int16:\r\n        return Int16Array;\r\n    case StorageUnit.Int32:\r\n        return Int32Array;\r\n    case StorageUnit.Float32:\r\n        return Float32Array;\r\n    case StorageUnit.Float64:\r\n        return Float64Array;\r\n    }\r\n}\r\n\r\ninterface CompactTraits {\r\n    requiredUnits: number;\r\n    compress (storage: CompactValueTypeArrayStorage, index: number, value: any): void;\r\n    decompress (storage: CompactValueTypeArrayStorage, index: number): any;\r\n}\r\n\r\nconst BuiltinElementTypeTraits: Record<ElementType, CompactTraits> = {\r\n    [ElementType.Scalar]: {\r\n        requiredUnits: 1,\r\n        compress (storage: CompactValueTypeArrayStorage, index: number, value: number) {\r\n            storage[index] = value;\r\n        },\r\n        decompress (storage: CompactValueTypeArrayStorage, index: number) {\r\n            return storage[index];\r\n        },\r\n    },\r\n    [ElementType.Vec2]: {\r\n        requiredUnits: 2,\r\n        compress (storage: CompactValueTypeArrayStorage, index: number, value: Vec2) {\r\n            storage[index * 2] = value.x;\r\n            storage[index * 2 + 1] = value.y;\r\n        },\r\n        decompress (storage: CompactValueTypeArrayStorage, index: number) {\r\n            return new Vec3(storage[index * 2], storage[index * 2 + 1]);\r\n        },\r\n    },\r\n    [ElementType.Vec3]: {\r\n        requiredUnits: 3,\r\n        compress (storage: CompactValueTypeArrayStorage, index: number, value: Vec3) {\r\n            storage[index * 3] = value.x;\r\n            storage[index * 3 + 1] = value.y;\r\n            storage[index * 3 + 2] = value.z;\r\n        },\r\n        decompress (storage: CompactValueTypeArrayStorage, index: number) {\r\n            return new Vec3(storage[index * 3], storage[index * 3 + 1], storage[index * 3 + 2]);\r\n        },\r\n    },\r\n    [ElementType.Vec4]: {\r\n        requiredUnits: 4,\r\n        compress (storage: CompactValueTypeArrayStorage, index: number, value: Vec4) {\r\n            storage[index * 4] = value.x;\r\n            storage[index * 4 + 1] = value.y;\r\n            storage[index * 4 + 2] = value.z;\r\n            storage[index * 4 + 3] = value.w;\r\n        },\r\n        decompress (storage: CompactValueTypeArrayStorage, index: number) {\r\n            return new Vec4(storage[index * 4], storage[index * 4 + 1], storage[index * 4 + 2], storage[index * 4 + 3]);\r\n        },\r\n    },\r\n    [ElementType.Quat]: {\r\n        requiredUnits: 4,\r\n        compress (storage: CompactValueTypeArrayStorage, index: number, value: Quat) {\r\n            storage[index * 4] = value.x;\r\n            storage[index * 4 + 1] = value.y;\r\n            storage[index * 4 + 2] = value.z;\r\n            storage[index * 4 + 3] = value.w;\r\n        },\r\n        decompress (storage: CompactValueTypeArrayStorage, index: number) {\r\n            return new Quat(storage[index * 4], storage[index * 4 + 1], storage[index * 4 + 2], storage[index * 4 + 3]);\r\n        },\r\n    },\r\n    [ElementType.Mat4]: {\r\n        requiredUnits: 16,\r\n        compress (storage: CompactValueTypeArrayStorage, index: number, value: Mat4) {\r\n            Mat4.toArray(storage, value, index * 16);\r\n        },\r\n        decompress (storage: CompactValueTypeArrayStorage, index: number) {\r\n            return Mat4.fromArray(new Mat4(), storage, index * 16);\r\n        },\r\n    },\r\n};\r\n\r\ninterface CompactValueTypeArrayStorage {\r\n    readonly length: number;\r\n    [n: number]: number;\r\n}\r\n\r\nexport function isCompactValueTypeArray (value: any): value is CompactValueTypeArray  {\r\n    return value instanceof CompactValueTypeArray;\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { assertIsNonNullable, assertIsTrue } from './utils/asserts';\r\n\r\n/**\r\n * Tag to define the custom serialization method.\r\n * @internal\r\n */\r\nexport const serializeTag = Symbol('[[Serialize]]');\r\n\r\n/**\r\n * Tag to define the custom deserialization method.\r\n * @internal\r\n */\r\nexport const deserializeTag = Symbol('[[Deserialize]]');\r\n\r\nexport interface SerializationInput {\r\n    /**\r\n     * Reads a property from the input.\r\n     * @param name Property name.\r\n     * @returns The property's value, after deserialized.\r\n     */\r\n    readProperty(name: string): unknown;\r\n\r\n    /**\r\n     * Deserializes this object according to the original procedure.\r\n     */\r\n    readThis(): void;\r\n\r\n    /**\r\n      * Deserializes super according to the original procedure.\r\n      */\r\n    readSuper(): void;\r\n}\r\n\r\nexport interface SerializationOutput {\r\n    /**\r\n     * Writes a property into output.\r\n     * @param name Property name.\r\n     * @param value Property value.\r\n     */\r\n    writeProperty(name: string, value: unknown): void;\r\n\r\n    /**\r\n     * Serialize this object according to the original procedure.\r\n     */\r\n    writeThis(): void;\r\n\r\n    /**\r\n     * Serialize super according to the original procedure.\r\n     */\r\n    writeSuper(): void;\r\n}\r\n\r\nexport type SerializationContext = {\r\n    /**\r\n     * The main serializing asset or root node in the scene/prefab passed to the serialization procedure.\r\n     */\r\n    root: unknown;\r\n    /**\r\n     * True if the serialization procedure is targeting CCON.\r\n     */\r\n    toCCON: boolean;\r\n    /**\r\n     * Customized arguments passed to serialization procedure.\r\n     */\r\n    customArguments: Record<PropertyKey, unknown>;\r\n};\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport type DeserializationContext = {\r\n    /**\r\n     * True if the deserialization procedure is deserializing from CCON.\r\n     */\r\n    fromCCON: boolean;\r\n};\r\n\r\nexport interface CustomSerializable {\r\n    [serializeTag](output: SerializationOutput, context: SerializationContext): void;\r\n\r\n    [deserializeTag]?(input: SerializationInput, context: DeserializationContext): void;\r\n}\r\n\r\n/**\r\n * Enables the custom to serialize/deserialize method only if the (de)serialize procedure is targeting CCON.\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const enableIfCCON: MethodDecorator = <T>(\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    _target: Object,\r\n    propertyKey: PropertyKey,\r\n    descriptor: TypedPropertyDescriptor<T>,\r\n): TypedPropertyDescriptor<T> | void => {\r\n    const original = descriptor.value;\r\n    assertIsNonNullable(original);\r\n    if (propertyKey === serializeTag) {\r\n        return {\r\n            ...descriptor,\r\n            value: function wrapSerialize (output: SerializationOutput, context: SerializationContext) {\r\n                if (!context.toCCON) {\r\n                    output.writeThis();\r\n                } else {\r\n                    (original as unknown as CustomSerializable[typeof serializeTag]).call(this, output, context);\r\n                }\r\n            },\r\n        } as unknown as TypedPropertyDescriptor<T>;\r\n    } else {\r\n        assertIsTrue(propertyKey === deserializeTag, '@enableIfCCON should be only applied to custom (de)serialize method');\r\n        return {\r\n            ...descriptor,\r\n            value: function wrapDeserialize (input: SerializationInput, context: DeserializationContext) {\r\n                if (!context.fromCCON) {\r\n                    input.readThis();\r\n                } else {\r\n                    (original as unknown as NonNullable<CustomSerializable[typeof deserializeTag]>).call(this, input, context);\r\n                }\r\n            },\r\n        } as unknown as TypedPropertyDescriptor<T>;\r\n    }\r\n};\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n// Easing functions specify the speed at which an animation progresses at different points within the animation.\r\n\r\n/**\r\n * @en Not any easing effect.\r\n * @zh 没有任何缓动效果。\r\n */\r\nexport function constant (): number {\r\n    return 0;\r\n}\r\n\r\n/**\r\n * @en A linear function, `f(k) = k`. Result correlates to input value one to one.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 线性函数，`f(k) = k`。返回值和输入值一一对应。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function linear (k: number): number {\r\n    return k;\r\n}\r\n\r\n/**\r\n * @en A quadratic function, f(k) = k * k. The interpolation starts slowly, then progressively speeds up until the end,\r\n * at which point it stops abruptly. Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 一个二次方的函数，f(k) = k * k。插值开始时很慢，然后逐渐加快，直到结束，并突然停止。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quadIn (k: number): number {\r\n    return k * k;\r\n}\r\n\r\n/**\r\n * @en A quadratic function, f(k) = k * (2-k). The interpolation starts abruptly and then progressively slows down towards the end. Refer to\r\n * [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 一个二次方的函数，f(k) = k * (2-k)。插值开始时很突然，然后在接近尾声时逐渐减慢。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quadOut (k: number): number {\r\n    return k * (2 - k);\r\n}\r\n\r\n/**\r\n * @en The interpolation starts slowly, speeds up, and then slows down towards the end. Refer to\r\n * [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) graphic feature.\r\n * @zh 插值开始时很慢，接着加快，然后在接近尾声时减慢。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quadInOut (k: number): number {\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return 0.5 * k * k;\r\n    }\r\n    return -0.5 * (--k * (k - 2) - 1);\r\n}\r\n\r\n/**\r\n * @en Starts slowly and accelerates. Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 启动慢，加速快。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function cubicIn (k: number): number {\r\n    return k * k * k;\r\n}\r\n\r\n/**\r\n * @en Starts quickly and decelerates.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 起动迅速，减速慢。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function cubicOut (k: number): number {\r\n    return --k * k * k + 1;\r\n}\r\n\r\n/**\r\n * @en Accelerates the animation at the beginning, and decelerates the animation at the end.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 在开始时加速动画，在结束时减慢动画的速度。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function cubicInOut (k: number): number {\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return 0.5 * k * k * k;\r\n    }\r\n    return 0.5 * ((k -= 2) * k * k + 2);\r\n}\r\n\r\n/**\r\n * @en Starts slowly and accelerates. Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 启动慢，加速快。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quartIn (k: number): number {\r\n    return k * k * k * k;\r\n}\r\n\r\n/**\r\n * @en Starts quickly and decelerates.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 起动迅速，减速慢。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quartOut (k: number): number {\r\n    return 1 - (--k * k * k * k);\r\n}\r\n\r\n/**\r\n * @en Accelerates the animation at the beginning, and decelerates the animation at the end.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 在开始时加速动画，在结束时减慢动画的速度。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quartInOut (k: number): number {\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return 0.5 * k * k * k * k;\r\n    }\r\n    return -0.5 * ((k -= 2) * k * k * k - 2);\r\n}\r\n\r\n/**\r\n * @en Starts slowly and accelerates. Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 启动慢，加速快。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quintIn (k: number): number {\r\n    return k * k * k * k * k;\r\n}\r\n\r\n/**\r\n * @en Starts quickly and decelerates.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 起动迅速，减速慢。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quintOut (k: number): number {\r\n    return --k * k * k * k * k + 1;\r\n}\r\n\r\n/**\r\n * @en Accelerates the animation at the beginning, and decelerates the animation at the end.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 在开始时加速动画，在结束时减慢动画的速度。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function quintInOut (k: number): number {\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return 0.5 * k * k * k * k * k;\r\n    }\r\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n}\r\n\r\n/**\r\n * @en Smoothly accelerates the animation.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 平滑地加速动画。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function sineIn (k: number): number {\r\n    if (k === 1) {\r\n        return 1;\r\n    }\r\n    return 1 - Math.cos(k * Math.PI / 2);\r\n}\r\n\r\n/**\r\n * @en Smoothly decelerates the animation.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 平滑地使动画降速。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function sineOut (k: number): number {\r\n    return Math.sin(k * Math.PI / 2);\r\n}\r\n\r\n/**\r\n * @en Smoothly accelerates the animation at the beginning, and smoothly decelerates the animation at the end.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 在开始时平滑地加速动画，在结束时平滑地减速动画。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function sineInOut (k: number): number {\r\n    return 0.5 * (1 - Math.cos(Math.PI * k));\r\n}\r\n\r\n/**\r\n * @en Starts slowly and accelerates. Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 启动慢，加速快。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function expoIn (k: number): number {\r\n    return k === 0 ? 0 : 1024 ** (k - 1);\r\n}\r\n\r\n/**\r\n * @en Starts quickly and decelerates.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 起动迅速，减速慢。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function expoOut (k: number): number {\r\n    return k === 1 ? 1 : 1 - (2 ** (-10 * k));\r\n}\r\n\r\n/**\r\n * @en Accelerates the animation at the beginning, and decelerates the animation at the end.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 在开始时加速动画，在结束时减慢动画的速度。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function expoInOut (k: number): number {\r\n    if (k === 0) {\r\n        return 0;\r\n    }\r\n    if (k === 1) {\r\n        return 1;\r\n    }\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return 0.5 * 1024 ** (k - 1);\r\n    }\r\n    return 0.5 * (-(2 ** (-10 * (k - 1))) + 2);\r\n}\r\n\r\n/**\r\n * @en Starts slowly and accelerates. Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 启动慢，加速快。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function circIn (k: number): number {\r\n    return 1 - Math.sqrt(1 - k * k);\r\n}\r\n\r\n/**\r\n * @en Starts quickly and decelerates.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 起动迅速，减速慢。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function circOut (k: number): number {\r\n    return Math.sqrt(1 - (--k * k));\r\n}\r\n\r\n/**\r\n * @en Accelerates the animation at the beginning, and decelerates the animation at the end.\r\n * Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 在开始时加速动画，在结束时减慢动画的速度。具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function circInOut (k: number): number {\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n    }\r\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function elasticIn (k: number): number {\r\n    let s;\r\n    let a = 0.1;\r\n    const p = 0.4;\r\n    if (k === 0) {\r\n        return 0;\r\n    }\r\n    if (k === 1) {\r\n        return 1;\r\n    }\r\n    if (!a || a < 1) {\r\n        a = 1;\r\n        s = p / 4;\r\n    } else {\r\n        s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n    }\r\n    return -(a * 2 ** (10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function elasticOut (k: number): number {\r\n    let s;\r\n    let a = 0.1;\r\n    const p = 0.4;\r\n    if (k === 0) {\r\n        return 0;\r\n    }\r\n    if (k === 1) {\r\n        return 1;\r\n    }\r\n    if (!a || a < 1) {\r\n        a = 1;\r\n        s = p / 4;\r\n    } else {\r\n        s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n    }\r\n    return (a * 2 ** (-10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1);\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function elasticInOut (k: number): number {\r\n    let s;\r\n    let a = 0.1;\r\n    const p = 0.4;\r\n    if (k === 0) {\r\n        return 0;\r\n    }\r\n    if (k === 1) {\r\n        return 1;\r\n    }\r\n    if (!a || a < 1) {\r\n        a = 1;\r\n        s = p / 4;\r\n    } else {\r\n        s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n    }\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return -0.5\r\n            * (a * 2 ** (10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n    }\r\n    return a * 2 ** (-10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function backIn (k: number): number {\r\n    if (k === 1) {\r\n        return 1;\r\n    }\r\n    const s = 1.70158;\r\n    return k * k * ((s + 1) * k - s);\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function backOut (k: number): number {\r\n    if (k === 0) {\r\n        return 0;\r\n    }\r\n    const s = 1.70158;\r\n    return --k * k * ((s + 1) * k + s) + 1;\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function backInOut (k: number): number {\r\n    const s = 1.70158 * 1.525;\r\n    k *= 2;\r\n    if (k < 1) {\r\n        return 0.5 * (k * k * ((s + 1) * k - s));\r\n    }\r\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n}\r\n\r\nexport function bounceIn (k: number): number {\r\n    return 1 - bounceOut(1 - k);\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function bounceOut (k: number): number {\r\n    if (k < (1 / 2.75)) {\r\n        return 7.5625 * k * k;\r\n    } else if (k < (2 / 2.75)) {\r\n        return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n    } else if (k < (2.5 / 2.75)) {\r\n        return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n    } else {\r\n        return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function bounceInOut (k: number): number {\r\n    if (k < 0.5) {\r\n        return bounceIn(k * 2) * 0.5;\r\n    }\r\n    return bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function smooth (k: number): number {\r\n    if (k <= 0) {\r\n        return 0;\r\n    }\r\n    if (k >= 1) {\r\n        return 1;\r\n    }\r\n    return k * k * (3 - 2 * k);\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport function fade (k: number): number {\r\n    if (k <= 0) {\r\n        return 0;\r\n    }\r\n    if (k >= 1) {\r\n        return 1;\r\n    }\r\n    return k * k * k * (k * (k * 6 - 15) + 10);\r\n}\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const quadOutIn = _makeOutIn(quadIn, quadOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const cubicOutIn = _makeOutIn(cubicIn, cubicOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const quartOutIn = _makeOutIn(quartIn, quartOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const quintOutIn = _makeOutIn(quintIn, quintOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const sineOutIn = _makeOutIn(sineIn, sineOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const expoOutIn = _makeOutIn(expoIn, expoOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const circOutIn = _makeOutIn(circIn, circOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const elasticOutIn = _makeOutIn(elasticIn, elasticOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const backOutIn = _makeOutIn(backIn, backOut);\r\n\r\n/**\r\n * @en Refer to [this doc](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html) for graphic feature.\r\n * @zh 具体效果可以参考[该文档](https://docs.cocos.com/creator/manual/zh/tween/tween-function.html)。\r\n */\r\nexport const bounceOutIn = _makeOutIn(bounceIn, bounceOut);\r\n\r\nfunction _makeOutIn (fnIn: (k: number) => number, fnOut: (k: number) => number) {\r\n    return (k: number): number => {\r\n        if (k < 0.5) {\r\n            return fnOut(k * 2) / 2;\r\n        }\r\n        return fnIn(2 * k - 1) / 2 + 0.5;\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2018-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport * as _decorator from './class-decorator';\r\nimport { legacyCC } from '../global-exports';\r\n\r\nlegacyCC._decorator = _decorator;\r\nexport { _decorator };\r\nexport { CCClass, isCCClassOrFastDefined } from './class';\r\nexport { CCObject, CCObjectFlags } from './object';\r\nexport { CCInteger, CCFloat, CCBoolean, CCString } from './utils/attribute';\r\nexport { CompactValueTypeArray } from './utils/compact-value-type-array';\r\nexport { editorExtrasTag } from './editor-extras-tag';\r\nexport { deserializeTag, serializeTag } from './custom-serializable';\r\nexport type {\r\n    SerializationInput,\r\n    SerializationOutput,\r\n    SerializationContext,\r\n    CustomSerializable,\r\n} from './custom-serializable';\r\nexport { getSerializationMetadata } from './serialization-metadata';\r\nexport type { SerializationMetadata } from './serialization-metadata';\r\nexport { EditorExtendable } from './editor-extendable';\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport * as easing from '../algorithm/easing';\r\nimport { assertIsTrue } from '../data/utils/asserts';\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport enum EasingMethod {\r\n    LINEAR,\r\n    CONSTANT,\r\n    QUAD_IN,\r\n    QUAD_OUT,\r\n    QUAD_IN_OUT,\r\n    QUAD_OUT_IN,\r\n    CUBIC_IN,\r\n    CUBIC_OUT,\r\n    CUBIC_IN_OUT,\r\n    CUBIC_OUT_IN,\r\n    QUART_IN,\r\n    QUART_OUT,\r\n    QUART_IN_OUT,\r\n    QUART_OUT_IN,\r\n    QUINT_IN,\r\n    QUINT_OUT,\r\n    QUINT_IN_OUT,\r\n    QUINT_OUT_IN,\r\n    SINE_IN,\r\n    SINE_OUT,\r\n    SINE_IN_OUT,\r\n    SINE_OUT_IN,\r\n    EXPO_IN,\r\n    EXPO_OUT,\r\n    EXPO_IN_OUT,\r\n    EXPO_OUT_IN,\r\n    CIRC_IN,\r\n    CIRC_OUT,\r\n    CIRC_IN_OUT,\r\n    CIRC_OUT_IN,\r\n    ELASTIC_IN,\r\n    ELASTIC_OUT,\r\n    ELASTIC_IN_OUT,\r\n    ELASTIC_OUT_IN,\r\n    BACK_IN,\r\n    BACK_OUT,\r\n    BACK_IN_OUT,\r\n    BACK_OUT_IN,\r\n    BOUNCE_IN,\r\n    BOUNCE_OUT,\r\n    BOUNCE_IN_OUT,\r\n    BOUNCE_OUT_IN,\r\n    SMOOTH,\r\n    FADE,\r\n}\r\n\r\ntype EasingMethodFn = (k: number) => number;\r\n\r\nconst easingMethodFnMap: Record<EasingMethod, EasingMethodFn> = {\r\n    [EasingMethod.CONSTANT]: easing.constant,\r\n    [EasingMethod.LINEAR]: easing.linear,\r\n\r\n    [EasingMethod.QUAD_IN]: easing.quadIn,\r\n    [EasingMethod.QUAD_OUT]: easing.quadOut,\r\n    [EasingMethod.QUAD_IN_OUT]: easing.quadInOut,\r\n    [EasingMethod.QUAD_OUT_IN]: easing.quadOutIn,\r\n    [EasingMethod.CUBIC_IN]: easing.cubicIn,\r\n    [EasingMethod.CUBIC_OUT]: easing.cubicOut,\r\n    [EasingMethod.CUBIC_IN_OUT]: easing.cubicInOut,\r\n    [EasingMethod.CUBIC_OUT_IN]: easing.cubicOutIn,\r\n    [EasingMethod.QUART_IN]: easing.quartIn,\r\n    [EasingMethod.QUART_OUT]: easing.quartOut,\r\n    [EasingMethod.QUART_IN_OUT]: easing.quartInOut,\r\n    [EasingMethod.QUART_OUT_IN]: easing.quartOutIn,\r\n    [EasingMethod.QUINT_IN]: easing.quintIn,\r\n    [EasingMethod.QUINT_OUT]: easing.quintOut,\r\n    [EasingMethod.QUINT_IN_OUT]: easing.quintInOut,\r\n    [EasingMethod.QUINT_OUT_IN]: easing.quintOutIn,\r\n    [EasingMethod.SINE_IN]: easing.sineIn,\r\n    [EasingMethod.SINE_OUT]: easing.sineOut,\r\n    [EasingMethod.SINE_IN_OUT]: easing.sineInOut,\r\n    [EasingMethod.SINE_OUT_IN]: easing.sineOutIn,\r\n    [EasingMethod.EXPO_IN]: easing.expoIn,\r\n    [EasingMethod.EXPO_OUT]: easing.expoOut,\r\n    [EasingMethod.EXPO_IN_OUT]: easing.expoInOut,\r\n    [EasingMethod.EXPO_OUT_IN]: easing.expoOutIn,\r\n    [EasingMethod.CIRC_IN]: easing.circIn,\r\n    [EasingMethod.CIRC_OUT]: easing.circOut,\r\n    [EasingMethod.CIRC_IN_OUT]: easing.circInOut,\r\n    [EasingMethod.CIRC_OUT_IN]: easing.circOutIn,\r\n    [EasingMethod.ELASTIC_IN]: easing.elasticIn,\r\n    [EasingMethod.ELASTIC_OUT]: easing.elasticOut,\r\n    [EasingMethod.ELASTIC_IN_OUT]: easing.elasticInOut,\r\n    [EasingMethod.ELASTIC_OUT_IN]: easing.elasticOutIn,\r\n    [EasingMethod.BACK_IN]: easing.backIn,\r\n    [EasingMethod.BACK_OUT]: easing.backOut,\r\n    [EasingMethod.BACK_IN_OUT]: easing.backInOut,\r\n    [EasingMethod.BACK_OUT_IN]: easing.backOutIn,\r\n    [EasingMethod.BOUNCE_IN]: easing.bounceIn,\r\n    [EasingMethod.BOUNCE_OUT]: easing.bounceOut,\r\n    [EasingMethod.BOUNCE_IN_OUT]: easing.bounceInOut,\r\n    [EasingMethod.BOUNCE_OUT_IN]: easing.bounceOutIn,\r\n    [EasingMethod.SMOOTH]: easing.smooth,\r\n    [EasingMethod.FADE]: easing.fade,\r\n};\r\n\r\nexport function getEasingFn (easingMethod: EasingMethod): EasingMethodFn {\r\n    assertIsTrue(easingMethod in easingMethodFnMap);\r\n    return easingMethodFnMap[easingMethod];\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG } from 'internal:constants';\r\nimport { assertIsTrue } from '../data/utils/asserts';\r\nimport { approx, lerp, pingPong, repeat } from '../math';\r\nimport { KeyframeCurve } from './keyframe-curve';\r\nimport { RealInterpolationMode, ExtrapolationMode, TangentWeightMode } from './real-curve-param';\r\nimport { binarySearchEpsilon } from '../algorithm/binary-search';\r\nimport { solveCubic } from './solve-cubic';\r\nimport { EditorExtendable } from '../data/editor-extendable';\r\nimport { CCClass, deserializeTag, editorExtrasTag, SerializationContext, SerializationInput, SerializationOutput, serializeTag } from '../data';\r\nimport { DeserializationContext } from '../data/custom-serializable';\r\nimport { EasingMethod, getEasingFn } from './easing-method';\r\nimport { getOrCreateSerializationMetadata } from '../data/serialization-metadata';\r\nimport { popCount } from '../math/bits';\r\n\r\nexport { RealInterpolationMode, ExtrapolationMode, TangentWeightMode, EasingMethod };\r\n\r\nconst REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_START = 0;\r\nconst REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_MASK = 0xFF << REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_START;\r\n\r\nconst REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_START = 8;\r\nconst REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_MASK = 0xFF << REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_START;\r\n\r\nconst REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_START = 16;\r\nconst REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_MASK = 0xFF << REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_START;\r\n\r\n// The following assertions ensure they're adjacent and non-overlapped.\r\n\r\nassertIsTrue(REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_START\r\n    === REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_START + popCount(REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_MASK));\r\n\r\nassertIsTrue(REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_START\r\n    === REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_START + popCount(REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_MASK));\r\n\r\nconst REAL_KEYFRAME_VALUE_DEFAULT_FLAGS = (RealInterpolationMode.LINEAR << REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_START)\r\n    | (TangentWeightMode.NONE << REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_START)\r\n    | (EasingMethod.LINEAR << REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_START);\r\n\r\n/**\r\n * @en View to a real frame value.\r\n * Note, the view may be invalidated due to keyframe change/add/remove.\r\n * @zh 实数帧值的视图。\r\n * 注意，该视图可能因关键帧的添加、改变、移除而失效。\r\n */\r\nclass RealKeyframeValue extends EditorExtendable {\r\n    constructor () {\r\n        super();\r\n    }\r\n    /**\r\n     * @en\r\n     * When perform interpolation, the interpolation method should be taken\r\n     * when for this keyframe is used as starting keyframe.\r\n     * @zh\r\n     * 在执行插值时，当以此关键帧作为起始关键帧时应当使用的插值方式。\r\n     */\r\n    get interpolationMode (): RealInterpolationMode {\r\n        return (this._flags & REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_MASK) >> REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_START;\r\n    }\r\n\r\n    set interpolationMode (value) {\r\n        this._flags &= ~REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_MASK;\r\n        this._flags |= (value << REAL_KEYFRAME_VALUE_FLAGS_INTERPOLATION_MODE_START);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Tangent weight mode when perform cubic interpolation\r\n     * This field is regarded if current interpolation mode is not cubic.\r\n     * @zh\r\n     * 当执行三次插值时，此关键帧使用的切线权重模式。\r\n     * 若当前的插值模式不是三次插值时，该字段无意义。\r\n     */\r\n    get tangentWeightMode (): TangentWeightMode {\r\n        return (this._flags & REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_MASK) >> REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_START;\r\n    }\r\n\r\n    set tangentWeightMode (value) {\r\n        this._flags &= ~REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_MASK;\r\n        this._flags |= (value << REAL_KEYFRAME_VALUE_FLAGS_TANGENT_WEIGHT_MODE_START);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Value of the keyframe.\r\n     * @zh\r\n     * 该关键帧的值。\r\n     */\r\n    public value = 0.0;\r\n\r\n    /**\r\n     * @en\r\n     * The tangent of this keyframe\r\n     * when it's used as starting point during cubic interpolation.\r\n     * Regarded otherwise.\r\n     * @zh\r\n     * 当此关键帧作为三次插值的起始点时，此关键帧的切线。其他情况下该字段无意义。\r\n     */\r\n    public rightTangent = 0.0;\r\n\r\n    /**\r\n     * @en\r\n     * The tangent weight of this keyframe\r\n     * when it's used as starting point during weighted cubic interpolation.\r\n     * Regarded otherwise.\r\n     * @zh\r\n     * 当此关键帧作为三次插值的起始点时，此关键帧的切线权重。其他情况下该字段无意义。\r\n     */\r\n    public rightTangentWeight = 0.0;\r\n\r\n    /**\r\n     * @en\r\n     * The tangent of this keyframe\r\n     * when it's used as ending point during cubic interpolation.\r\n     * Regarded otherwise.\r\n     * @zh\r\n     * 当此关键帧作为三次插值的目标点时，此关键帧的切线。其他情况下该字段无意义。\r\n     */\r\n    public leftTangent = 0.0;\r\n\r\n    /**\r\n     * @en\r\n     * The tangent weight of this keyframe\r\n     * when it's used as ending point during weighted cubic interpolation.\r\n     * Regarded otherwise.\r\n     * @zh\r\n     * 当此关键帧作为三次插值的目标点时，此关键帧的切线权重。其他情况下该字段无意义。\r\n     */\r\n    public leftTangentWeight = 0.0;\r\n\r\n    /**\r\n     * @deprecated Reserved for backward compatibility. Will be removed in future.\r\n     */\r\n    get easingMethod (): EasingMethod {\r\n        return (this._flags & REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_MASK) >> REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_START;\r\n    }\r\n\r\n    set easingMethod (value) {\r\n        this._flags &= ~REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_MASK;\r\n        this._flags |= (value << REAL_KEYFRAME_VALUE_FLAGS_EASING_METHOD_START);\r\n    }\r\n\r\n    private _flags = REAL_KEYFRAME_VALUE_DEFAULT_FLAGS;\r\n}\r\n\r\nCCClass.fastDefine(\r\n    'cc.RealKeyframeValue',\r\n    RealKeyframeValue,\r\n    {\r\n        interpolationMode: RealInterpolationMode.LINEAR,\r\n        tangentWeightMode: TangentWeightMode.NONE,\r\n        value: 0.0,\r\n        rightTangent: 0.0,\r\n        rightTangentWeight: 0.0,\r\n        leftTangent: 0.0,\r\n        leftTangentWeight: 0.0,\r\n        easingMethod: EasingMethod.LINEAR,\r\n        [editorExtrasTag]: undefined,\r\n    },\r\n);\r\n\r\nCCClass.Attr.setClassAttr(\r\n    RealKeyframeValue,\r\n    editorExtrasTag,\r\n    'editorOnly',\r\n    true,\r\n);\r\n\r\ngetOrCreateSerializationMetadata(RealKeyframeValue).uniquelyReferenced = true;\r\n\r\nexport type { RealKeyframeValue };\r\n\r\n/**\r\n * @en\r\n * The parameter describing a real keyframe value.\r\n * In the case of partial keyframe value,\r\n * each component of the keyframe value is taken from the parameter.\r\n * For unspecified components, default values are taken:\r\n * - Interpolation mode: `InterpolationMode.Linear`\r\n * - Tangent weight mode: `TangentWeightMode.None`\r\n * - Value/Tangents/Tangent weights: `0.0`\r\n * @zh\r\n * 用于描述实数关键帧值的参数。\r\n * 若是部分关键帧的形式，关键帧值的每个分量都是从该参数中取得。\r\n * 对于未指定的分量，使用默认值：\r\n * - 插值模式：`InterpolationMode.Linear`\r\n * - 切线权重模式：`TangentWeightMode.None`\r\n * - 值/切线/切线权重：`0.0`\r\n */\r\ntype RealKeyframeValueParameters = number | Partial<RealKeyframeValue>;\r\n\r\nfunction createRealKeyframeValue (params: RealKeyframeValueParameters): RealKeyframeValue {\r\n    const realKeyframeValue = new RealKeyframeValue();\r\n    if (typeof params === 'number') {\r\n        realKeyframeValue.value = params;\r\n    } else {\r\n        const {\r\n            interpolationMode,\r\n            tangentWeightMode,\r\n            value,\r\n            rightTangent,\r\n            rightTangentWeight,\r\n            leftTangent,\r\n            leftTangentWeight,\r\n            easingMethod,\r\n            [editorExtrasTag]: editorExtras,\r\n        } = params;\r\n        realKeyframeValue.value = value ?? realKeyframeValue.value;\r\n        realKeyframeValue.rightTangent = rightTangent ?? realKeyframeValue.rightTangent;\r\n        realKeyframeValue.rightTangentWeight = rightTangentWeight ?? realKeyframeValue.rightTangentWeight;\r\n        realKeyframeValue.leftTangent = leftTangent ?? realKeyframeValue.leftTangent;\r\n        realKeyframeValue.leftTangentWeight = leftTangentWeight ?? realKeyframeValue.leftTangentWeight;\r\n        realKeyframeValue.interpolationMode = interpolationMode ?? realKeyframeValue.interpolationMode;\r\n        realKeyframeValue.tangentWeightMode = tangentWeightMode ?? realKeyframeValue.tangentWeightMode;\r\n        realKeyframeValue.easingMethod = easingMethod ?? realKeyframeValue.easingMethod;\r\n        if (editorExtras) {\r\n            realKeyframeValue[editorExtrasTag] = editorExtras;\r\n        }\r\n    }\r\n    return realKeyframeValue;\r\n}\r\n\r\n/**\r\n * @en\r\n * Real curve.\r\n *\r\n * The real curve is a kind of keyframe curve.\r\n * When evaluating a real curve:\r\n * - If the input is just the time of a keyframe,\r\n *   keyframe value's numeric value is used as result.\r\n * - Otherwise, if the input is less than the time of the first keyframe or\r\n *   is greater than the time of the last keyframe time, it performs so-called extrapolation.\r\n * - Otherwise, the input falls between two keyframes and then it interpolates between the two keyframes.\r\n *\r\n * Every keyframe may specify an interpolation mode\r\n * to indicates how to perform the interpolation\r\n * from current keyframe to next keyframe.\r\n * Interpolation modes of keyframes may differ from each other.\r\n *\r\n * Real curve allows three interpolation modes: constant, linear and cubic.\r\n * The constant and linear mode is easy.\r\n * In case of cubic interpolation,\r\n * the interpolation algorithm is effectively equivalent to cubic bezier(or cubic hermite) interpolation.\r\n *\r\n * Related quantities related to cubic interpolation are:\r\n * - Keyframe times and numeric values.\r\n * - The tangent and tangent weight of the previous keyframe and next keyframe.\r\n *\r\n * While performing the cubic bezier interpolation,\r\n * The first control point is calculated from right tangent and right tangent weight of previous keyframe,\r\n * the second control point is calculated from left tangent and left tangent weight of next keyframe.\r\n *\r\n * In equivalent bezier representation,\r\n * the tangent is the line slope between sample point and control point\r\n * and the tangent weight is the distance between sample point and control point.\r\n * The tangent weight on either side can be marked as \"not specified\" through tangent weight mode.\r\n * If either side weight is not specified,\r\n * the tangent weight is treated at `sqrt(d_t^2 + (d_t * tangent)^2) * (1 / 3)`\r\n * where `d_t` is the difference between two keyframes 's time and `tangent` is the tangent of that side.\r\n *\r\n * Note, in some cases, tangent/tangent weight/tangent weight mode may be \"meaningless\".\r\n * The meaningless means that value can may not be stored(or serialized).\r\n * @zh\r\n * 实数曲线。\r\n *\r\n * 实数曲线是关键帧曲线的一种。\r\n * 在求值实数曲线时：\r\n * - 若输入正好就是关键帧上的时间，关键帧上的数值就作为结果。\r\n * - 否则，如果输入小于第一个关键帧上的时间或大于最后一个关键帧上的时间，它会进行所谓的外推。\r\n * - 否则，输入落于两帧之间，将通过插值两帧得到结果。\r\n *\r\n * 每个关键帧都可以指定插值模式，\r\n * 以表示从当前帧数值变化到下一帧数值所采用的插值算法，\r\n * 每个关键帧的插值模式都可以是各不相同的。\r\n *\r\n * 实数曲线允许三种插值模式：常量、线性和三次方的（也称立方）。\r\n * 常量和线性模式都比较简单。\r\n * 在三次插值的情况下，插值算法实质上等价于三次贝塞尔（或三次埃尔米特）插值。\r\n *\r\n * 三次插值的相关量有：\r\n * - 关键帧上的时间和数值；\r\n * - 前一关键帧和后一关键帧上的切线和切线权重。\r\n *\r\n * 当两帧之间进行三次贝塞尔曲线插值时，\r\n * 会取前一帧的右切线、右切线权重来计算出第一个控制点，\r\n * 会取后一帧的左切线、左切线权重来计算出第二个控制点。\r\n *\r\n * 在等效的贝塞尔表示中，\r\n * 切线就是样本点和控制点之间的切线斜率，而切线权重就是样本点和控制点之间的距离。\r\n * 任意一端的切线权重都可以通过切线权重模式来标记为“未指定的”。\r\n * 若任意一端的切线权重是未指定的，\r\n * 此端上的切线权重将被视为 `sqrt(d_t^2 + (d_t * tangent)^2) * (1 / 3)`，其中，\r\n * `d_t` 是两帧时间的差，`tangent` 是此端上的切线。\r\n *\r\n * 注意，切线/切线权重/切线权重模式在某些情况下可能是“无意义的”。\r\n * 无意义意味着这些值可能不会被存储或序列化。\r\n */\r\nexport class RealCurve extends KeyframeCurve<RealKeyframeValue> {\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets or sets the pre-extrapolation-mode of this curve.\r\n     * Defaults to `ExtrapolationMode.CLAMP`.\r\n     * @zh\r\n     * 获取或设置此曲线的前向外推模式。\r\n     * 默认为 `ExtrapolationMode.CLAMP`。\r\n     */\r\n    public preExtrapolation: ExtrapolationMode = ExtrapolationMode.CLAMP;\r\n\r\n    /**\r\n     * @en\r\n     * Gets or sets the post-extrapolation-mode of this curve.\r\n     * Defaults to `ExtrapolationMode.CLAMP`.\r\n     * @zh\r\n     * 获取或设置此曲线的后向外推模式。\r\n     * 默认为 `ExtrapolationMode.CLAMP`。\r\n     */\r\n    public postExtrapolation: ExtrapolationMode = ExtrapolationMode.CLAMP;\r\n\r\n    /**\r\n     * @en\r\n     * Evaluates this curve at specified time.\r\n     * @zh\r\n     * 计算此曲线在指定时间上的值。\r\n     * @param time Input time.\r\n     * @returns Result value.\r\n     */\r\n    public evaluate (time: number): number {\r\n        const {\r\n            _times: times,\r\n            _values: values,\r\n        } = this;\r\n\r\n        const nFrames = times.length;\r\n\r\n        if (nFrames === 0) {\r\n            return 0.0;\r\n        }\r\n\r\n        const firstTime = times[0];\r\n        const lastTime = times[nFrames - 1];\r\n        if (time < firstTime) {\r\n            // Underflow\r\n            const { preExtrapolation } = this;\r\n            const preValue = values[0];\r\n            if (preExtrapolation === ExtrapolationMode.CLAMP || nFrames < 2) {\r\n                return preValue.value;\r\n            }\r\n            switch (preExtrapolation) {\r\n            case ExtrapolationMode.LINEAR:\r\n                return linearTrend(firstTime, values[0].value, times[1], values[1].value, time);\r\n            case ExtrapolationMode.LOOP:\r\n                time = wrapRepeat(time, firstTime, lastTime);\r\n                break;\r\n            case ExtrapolationMode.PING_PONG:\r\n                time = wrapPingPong(time, firstTime, lastTime);\r\n                break;\r\n            default:\r\n                return preValue.value;\r\n            }\r\n        } else if (time > lastTime) {\r\n            // Overflow\r\n            const { postExtrapolation } = this;\r\n            const preFrame = values[nFrames - 1];\r\n            if (postExtrapolation === ExtrapolationMode.CLAMP || nFrames < 2) {\r\n                return preFrame.value;\r\n            }\r\n            switch (postExtrapolation) {\r\n            case ExtrapolationMode.LINEAR:\r\n                return linearTrend(lastTime, preFrame.value, times[nFrames - 2], values[nFrames - 2].value, time);\r\n            case ExtrapolationMode.LOOP:\r\n                time = wrapRepeat(time, firstTime, lastTime);\r\n                break;\r\n            case ExtrapolationMode.PING_PONG:\r\n                time = wrapPingPong(time, firstTime, lastTime);\r\n                break;\r\n            default:\r\n                return preFrame.value;\r\n            }\r\n        }\r\n\r\n        const index = binarySearchEpsilon(times, time);\r\n        if (index >= 0) {\r\n            return values[index].value;\r\n        }\r\n\r\n        const iNext = ~index;\r\n        if (DEBUG) {\r\n            assertIsTrue(iNext !== 0 && iNext !== nFrames && nFrames > 1);\r\n        }\r\n\r\n        const iPre = iNext - 1;\r\n        const preTime = times[iPre];\r\n        const preValue = values[iPre];\r\n        const nextTime = times[iNext];\r\n        const nextValue = values[iNext];\r\n        if (DEBUG) {\r\n            assertIsTrue(nextTime > time && time > preTime);\r\n        }\r\n        const dt = nextTime - preTime;\r\n\r\n        const ratio = (time - preTime) / dt;\r\n        return evalBetweenTwoKeyFrames(preTime, preValue, nextTime, nextValue, ratio);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Adds a keyframe into this curve.\r\n     * @zh\r\n     * 添加一个关键帧到此曲线。\r\n     * @param time Time of the keyframe.\r\n     * @param value Value of the keyframe.\r\n     * @returns The index to the new keyframe.\r\n     */\r\n    public addKeyFrame (time: number, value: RealKeyframeValueParameters): number {\r\n        return super.addKeyFrame(time, createRealKeyframeValue(value));\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Assigns all keyframes.\r\n     * @zh\r\n     * 赋值所有关键帧。\r\n     * @param keyframes An iterable to keyframes. The keyframes should be sorted by their time.\r\n     */\r\n    public assignSorted (keyframes: Iterable<[number, RealKeyframeValueParameters]>): void;\r\n\r\n    /**\r\n      * Assigns all keyframes.\r\n      * @param times Times array. Should be sorted.\r\n      * @param values Values array. Corresponding to each time in `times`.\r\n      */\r\n    public assignSorted (times: readonly number[], values: RealKeyframeValueParameters[]): void;\r\n\r\n    public assignSorted (\r\n        times: Iterable<[number, RealKeyframeValueParameters]> | readonly number[],\r\n        values?: readonly RealKeyframeValueParameters[],\r\n    ): void {\r\n        if (values !== undefined) {\r\n            assertIsTrue(Array.isArray(times));\r\n            this.setKeyframes(\r\n                (times as number[]).slice(),\r\n                values.map((value) => createRealKeyframeValue(value)),\r\n            );\r\n        } else {\r\n            const keyframes = Array.from(times as Iterable<[number, Partial<RealKeyframeValue>]>);\r\n            this.setKeyframes(\r\n                keyframes.map(([time]) => time),\r\n                keyframes.map(([, value]) => createRealKeyframeValue(value)),\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns if this curve is constant.\r\n     * @zh\r\n     * 返回此曲线是否是常量曲线。\r\n     * @param tolerance The tolerance.\r\n     * @returns Whether it is constant.\r\n     */\r\n    public isConstant (tolerance: number): boolean {\r\n        if (this._values.length <= 1) {\r\n            return true;\r\n        }\r\n        const firstVal = this._values[0].value;\r\n        return this._values.every((frame): boolean => approx(frame.value, firstVal, tolerance));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [serializeTag] (output: SerializationOutput, context: SerializationContext): void {\r\n        if (!context.toCCON) {\r\n            output.writeThis();\r\n            return;\r\n        }\r\n\r\n        const {\r\n            _times: times,\r\n            _values: keyframeValues,\r\n        } = this;\r\n\r\n        const nKeyframes = times.length;\r\n\r\n        const dataSize = 0\r\n            + OVERFLOW_BYTES + OVERFLOW_BYTES\r\n            + FRAME_COUNT_BYTES\r\n            + TIME_BYTES * nKeyframes\r\n            + REAL_KEY_FRAME_VALUE_MAX_SIZE * nKeyframes;\r\n\r\n        const dataView = new DataView(new ArrayBuffer(dataSize));\r\n        let currentOffset = 0;\r\n\r\n        // Overflow operations\r\n        dataView.setUint8(currentOffset, this.preExtrapolation); currentOffset += OVERFLOW_BYTES;\r\n        dataView.setUint8(currentOffset, this.postExtrapolation); currentOffset += OVERFLOW_BYTES;\r\n\r\n        // Frame count\r\n        dataView.setUint32(currentOffset, nKeyframes, true); currentOffset += FRAME_COUNT_BYTES;\r\n\r\n        // Times\r\n        times.forEach((time, index) => dataView.setFloat32(currentOffset + TIME_BYTES * index, time, true));\r\n        currentOffset += TIME_BYTES * nKeyframes;\r\n\r\n        // Frame values\r\n        for (const keyframeValue of keyframeValues) {\r\n            currentOffset = saveRealKeyFrameValue(dataView, keyframeValue, currentOffset);\r\n        }\r\n\r\n        const bytes = new Uint8Array(dataView.buffer, 0, currentOffset);\r\n        output.writeProperty('bytes', bytes);\r\n\r\n        const keyframeValueEditorExtras = keyframeValues.map((keyframeValue) => keyframeValue[editorExtrasTag]);\r\n        if (keyframeValueEditorExtras.some((extras) => extras !== undefined)) {\r\n            output.writeProperty(`keyframeValueEditorExtras`, keyframeValueEditorExtras);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [deserializeTag] (input: SerializationInput, context: DeserializationContext): void {\r\n        if (!context.fromCCON) {\r\n            input.readThis();\r\n            return;\r\n        }\r\n\r\n        const bytes = input.readProperty('bytes') as Uint8Array;\r\n\r\n        const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\r\n        let currentOffset = 0;\r\n\r\n        // Overflow operations\r\n        this.preExtrapolation = dataView.getUint8(currentOffset); currentOffset += OVERFLOW_BYTES;\r\n        this.postExtrapolation = dataView.getUint8(currentOffset); currentOffset += OVERFLOW_BYTES;\r\n\r\n        // Frame count\r\n        const nKeyframes = dataView.getUint32(currentOffset, true); currentOffset += FRAME_COUNT_BYTES;\r\n\r\n        // Times\r\n        const times = Array.from(\r\n            { length: nKeyframes },\r\n            (_, index) => dataView.getFloat32(currentOffset + TIME_BYTES * index, true),\r\n        );\r\n        currentOffset += TIME_BYTES * nKeyframes;\r\n\r\n        // Frame values\r\n        const keyframeValues = new Array<RealKeyframeValue>(nKeyframes);\r\n        for (let iKeyFrame = 0; iKeyFrame < nKeyframes; ++iKeyFrame) {\r\n            const keyframeValue = createRealKeyframeValue({});\r\n            currentOffset = loadRealKeyFrameValue(dataView, keyframeValue, currentOffset);\r\n            keyframeValues[iKeyFrame] = keyframeValue;\r\n        }\r\n\r\n        assertIsTrue(currentOffset === bytes.byteLength);\r\n\r\n        const keyframeValueEditorExtras = input.readProperty(`keyframeValueEditorExtras`) as unknown[];\r\n        if (keyframeValueEditorExtras) {\r\n            assertIsTrue(keyframeValueEditorExtras.length === nKeyframes);\r\n            keyframeValueEditorExtras.forEach(\r\n                (extras, index) => keyframeValues[index][editorExtrasTag] = extras,\r\n            );\r\n        }\r\n\r\n        this._times = times;\r\n        this._values = keyframeValues;\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.RealCurve', RealCurve, {\r\n    _times: [],\r\n    _values: [],\r\n    preExtrapolation: ExtrapolationMode.CLAMP,\r\n    postExtrapolation: ExtrapolationMode.CLAMP,\r\n});\r\n\r\nconst FLAGS_EASING_METHOD_BITS_START = 8;\r\nconst FLAG_EASING_METHOD_MASK = 0xFF << FLAGS_EASING_METHOD_BITS_START; // 8-16 bits\r\n\r\nenum KeyframeValueFlagMask {\r\n    VALUE = 1 << 0,\r\n    INTERPOLATION_MODE = 1 << 1,\r\n    TANGENT_WEIGHT_MODE = 1 << 2,\r\n    LEFT_TANGENT = 1 << 3,\r\n    LEFT_TANGENT_WEIGHT = 1 << 4,\r\n    RIGHT_TANGENT = 1 << 5,\r\n    RIGHT_TANGENT_WEIGHT = 1 << 6,\r\n}\r\n\r\nconst OVERFLOW_BYTES = 1;\r\nconst FRAME_COUNT_BYTES = 4;\r\nconst TIME_BYTES = 4;\r\nconst KEY_FRAME_VALUE_FLAGS_BYTES = 4;\r\nconst VALUE_BYTES = 4;\r\nconst INTERPOLATION_MODE_BYTES = 1;\r\nconst TANGENT_WEIGHT_MODE_BYTES = 1;\r\nconst LEFT_TANGENT_BYTES = 4;\r\nconst LEFT_TANGENT_WEIGHT_BYTES = 4;\r\nconst RIGHT_TANGENT_BYTES = 4;\r\nconst RIGHT_TANGENT_WEIGHT_BYTES = 4;\r\n\r\nconst {\r\n    interpolationMode: DEFAULT_INTERPOLATION_MODE,\r\n    tangentWeightMode: DEFAULT_TANGENT_WEIGHT_MODE,\r\n    leftTangent: DEFAULT_LEFT_TANGENT,\r\n    leftTangentWeight: DEFAULT_LEFT_TANGENT_WEIGHT,\r\n    rightTangent: DEFAULT_RIGHT_TANGENT,\r\n    rightTangentWeight: DEFAULT_RIGHT_TANGENT_WEIGHT,\r\n} = createRealKeyframeValue({});\r\n\r\nconst REAL_KEY_FRAME_VALUE_MAX_SIZE = KEY_FRAME_VALUE_FLAGS_BYTES\r\n    + VALUE_BYTES\r\n    + INTERPOLATION_MODE_BYTES\r\n    + TANGENT_WEIGHT_MODE_BYTES\r\n    + LEFT_TANGENT_BYTES\r\n    + LEFT_TANGENT_WEIGHT_BYTES\r\n    + RIGHT_TANGENT_BYTES\r\n    + RIGHT_TANGENT_WEIGHT_BYTES\r\n    + 0;\r\n\r\nfunction saveRealKeyFrameValue (dataView: DataView, keyframeValue: RealKeyframeValue, offset: number): number {\r\n    let flags = 0;\r\n\r\n    let currentOffset = offset;\r\n\r\n    const pFlags = currentOffset; // Place holder for flags\r\n    currentOffset += KEY_FRAME_VALUE_FLAGS_BYTES;\r\n\r\n    const {\r\n        value,\r\n        interpolationMode,\r\n        tangentWeightMode,\r\n        rightTangent,\r\n        rightTangentWeight,\r\n        leftTangent,\r\n        leftTangentWeight,\r\n        easingMethod,\r\n    } = keyframeValue;\r\n\r\n    dataView.setFloat32(currentOffset, value, true);\r\n    currentOffset += VALUE_BYTES;\r\n\r\n    if (interpolationMode !== DEFAULT_INTERPOLATION_MODE) {\r\n        flags |= KeyframeValueFlagMask.INTERPOLATION_MODE;\r\n        dataView.setUint8(currentOffset, interpolationMode);\r\n        currentOffset += INTERPOLATION_MODE_BYTES;\r\n    }\r\n\r\n    if (tangentWeightMode !== DEFAULT_TANGENT_WEIGHT_MODE) {\r\n        flags |= KeyframeValueFlagMask.TANGENT_WEIGHT_MODE;\r\n        dataView.setUint8(currentOffset, tangentWeightMode);\r\n        currentOffset += TANGENT_WEIGHT_MODE_BYTES;\r\n    }\r\n\r\n    if (leftTangent !== DEFAULT_LEFT_TANGENT) {\r\n        flags |= KeyframeValueFlagMask.LEFT_TANGENT;\r\n        dataView.setFloat32(currentOffset, leftTangent, true);\r\n        currentOffset += LEFT_TANGENT_BYTES;\r\n    }\r\n\r\n    if (leftTangentWeight !== DEFAULT_LEFT_TANGENT_WEIGHT) {\r\n        flags |= KeyframeValueFlagMask.LEFT_TANGENT_WEIGHT;\r\n        dataView.setFloat32(currentOffset, leftTangentWeight, true);\r\n        currentOffset += LEFT_TANGENT_WEIGHT_BYTES;\r\n    }\r\n\r\n    if (rightTangent !== DEFAULT_RIGHT_TANGENT) {\r\n        flags |= KeyframeValueFlagMask.RIGHT_TANGENT;\r\n        dataView.setFloat32(currentOffset, rightTangent, true);\r\n        currentOffset += RIGHT_TANGENT_BYTES;\r\n    }\r\n\r\n    if (rightTangentWeight !== DEFAULT_RIGHT_TANGENT_WEIGHT) {\r\n        flags |= KeyframeValueFlagMask.RIGHT_TANGENT_WEIGHT;\r\n        dataView.setFloat32(currentOffset, rightTangentWeight, true);\r\n        currentOffset += RIGHT_TANGENT_WEIGHT_BYTES;\r\n    }\r\n\r\n    flags |= (easingMethod << FLAGS_EASING_METHOD_BITS_START);\r\n\r\n    dataView.setUint32(pFlags, flags, true);\r\n\r\n    return currentOffset;\r\n}\r\n\r\nfunction loadRealKeyFrameValue (dataView: DataView, keyframeValue: RealKeyframeValue, offset: number): number {\r\n    let currentOffset = offset;\r\n\r\n    const flags = dataView.getUint32(currentOffset, true);\r\n    currentOffset += KEY_FRAME_VALUE_FLAGS_BYTES;\r\n\r\n    keyframeValue.value = dataView.getFloat32(currentOffset, true);\r\n    currentOffset += VALUE_BYTES;\r\n\r\n    if (flags & KeyframeValueFlagMask.INTERPOLATION_MODE) {\r\n        keyframeValue.interpolationMode = dataView.getUint8(currentOffset);\r\n        currentOffset += INTERPOLATION_MODE_BYTES;\r\n    }\r\n\r\n    if (flags & KeyframeValueFlagMask.TANGENT_WEIGHT_MODE) {\r\n        keyframeValue.tangentWeightMode = dataView.getUint8(currentOffset);\r\n        currentOffset += TANGENT_WEIGHT_MODE_BYTES;\r\n    }\r\n\r\n    if (flags & KeyframeValueFlagMask.LEFT_TANGENT) {\r\n        keyframeValue.leftTangent = dataView.getFloat32(currentOffset, true);\r\n        currentOffset += LEFT_TANGENT_BYTES;\r\n    }\r\n\r\n    if (flags & KeyframeValueFlagMask.LEFT_TANGENT_WEIGHT) {\r\n        keyframeValue.leftTangentWeight = dataView.getFloat32(currentOffset, true);\r\n        currentOffset += LEFT_TANGENT_WEIGHT_BYTES;\r\n    }\r\n\r\n    if (flags & KeyframeValueFlagMask.RIGHT_TANGENT) {\r\n        keyframeValue.rightTangent = dataView.getFloat32(currentOffset, true);\r\n        currentOffset += RIGHT_TANGENT_BYTES;\r\n    }\r\n\r\n    if (flags & KeyframeValueFlagMask.RIGHT_TANGENT_WEIGHT) {\r\n        keyframeValue.rightTangentWeight = dataView.getFloat32(currentOffset, true);\r\n        currentOffset += RIGHT_TANGENT_WEIGHT_BYTES;\r\n    }\r\n\r\n    const easingMethod = ((flags & FLAG_EASING_METHOD_MASK) >> FLAGS_EASING_METHOD_BITS_START) as EasingMethod;\r\n    keyframeValue.easingMethod = easingMethod;\r\n\r\n    return currentOffset;\r\n}\r\n\r\nfunction wrapRepeat (time: number, prevTime: number, nextTime: number): number {\r\n    return prevTime + repeat(time - prevTime, nextTime - prevTime);\r\n}\r\n\r\nfunction wrapPingPong (time: number, prevTime: number, nextTime: number): number {\r\n    return prevTime + pingPong(time - prevTime, nextTime - prevTime);\r\n}\r\n\r\nfunction linearTrend (\r\n    prevTime: number,\r\n    prevValue: number,\r\n    nextTime: number,\r\n    nextValue: number,\r\n    time: number,\r\n): number {\r\n    const slope = (nextValue - prevValue) / (nextTime - prevTime);\r\n    return prevValue + (time - prevTime) * slope;\r\n}\r\n\r\nfunction evalBetweenTwoKeyFrames (\r\n    prevTime: number,\r\n    prevValue: RealKeyframeValue,\r\n    nextTime: number,\r\n    nextValue: RealKeyframeValue,\r\n    ratio: number,\r\n): number {\r\n    const dt = nextTime - prevTime;\r\n    switch (prevValue.interpolationMode) {\r\n    default:\r\n    case RealInterpolationMode.CONSTANT:\r\n        return prevValue.value;\r\n    case RealInterpolationMode.LINEAR: {\r\n        const transformedRatio = prevValue.easingMethod === EasingMethod.LINEAR\r\n            ? ratio\r\n            : getEasingFn(prevValue.easingMethod)(ratio);\r\n        return lerp(prevValue.value, nextValue.value, transformedRatio);\r\n    }\r\n    case RealInterpolationMode.CUBIC: {\r\n        const ONE_THIRD = 1.0 / 3.0;\r\n        const {\r\n            rightTangent: prevTangent,\r\n            rightTangentWeight: prevTangentWeightSpecified,\r\n        } = prevValue;\r\n        const prevTangentWeightEnabled = isRightTangentWeightEnabled(prevValue.tangentWeightMode);\r\n        const {\r\n            leftTangent: nextTangent,\r\n            leftTangentWeight: nextTangentWeightSpecified,\r\n        } = nextValue;\r\n        const nextTangentWeightEnabled = isLeftTangentWeightEnabled(nextValue.tangentWeightMode);\r\n\r\n        if (!prevTangentWeightEnabled && !nextTangentWeightEnabled) {\r\n            // Optimize for the case when both x components of tangents are 1.\r\n            // See below.\r\n            const p1 = prevValue.value + ONE_THIRD * prevTangent * dt;\r\n            const p2 = nextValue.value - ONE_THIRD * nextTangent * dt;\r\n            return bezierInterpolate(prevValue.value, p1, p2, nextValue.value, ratio);\r\n        } else {\r\n            let prevTangentWeight = 0.0;\r\n            if (prevTangentWeightEnabled) {\r\n                prevTangentWeight = prevTangentWeightSpecified;\r\n            } else {\r\n                const x = dt;\r\n                const y = dt * prevTangent;\r\n                prevTangentWeight = Math.sqrt(x * x + y * y) * ONE_THIRD;\r\n            }\r\n            const angle0 = Math.atan(prevTangent);\r\n            const tx0 = Math.cos(angle0) * prevTangentWeight + prevTime;\r\n            const ty0 = Math.sin(angle0) * prevTangentWeight + prevValue.value;\r\n\r\n            let nextTangentWeight = 0.0;\r\n            if (nextTangentWeightEnabled) {\r\n                nextTangentWeight = nextTangentWeightSpecified;\r\n            } else {\r\n                const x = dt;\r\n                const y = dt * nextTangent;\r\n                nextTangentWeight = Math.sqrt(x * x + y * y) * ONE_THIRD;\r\n            }\r\n            const angle1 = Math.atan(nextTangent);\r\n            const tx1 = -Math.cos(angle1) * nextTangentWeight + nextTime;\r\n            const ty1 = -Math.sin(angle1) * nextTangentWeight + nextValue.value;\r\n\r\n            const dx = dt;\r\n            // Hermite to Bezier\r\n            const u0x = (tx0 - prevTime) / dx;\r\n            const u1x = (tx1 - prevTime) / dx;\r\n            const u0y = ty0;\r\n            const u1y = ty1;\r\n            // Converts from Bernstein Basis to Power Basis.\r\n            // Formula: [1, 0, 0, 0; -3, 3, 0, 0; 3, -6, 3, 0; -1, 3, -3, 1] * [p_0; p_1; p_2; p_3]\r\n            // --------------------------------------\r\n            // | Basis | Coeff\r\n            // | t^3   | 3 * p_1 - p_0 - 3 * p_2 + p_3\r\n            // | t^2   | 3 * p_0 - 6 * p_1 + 3 * p_2\r\n            // | t^1   | 3 * p_1 - 3 * p_0\r\n            // | t^0   | p_0\r\n            // --------------------------------------\r\n            // where: p_0 = 0, p_1 = u0x, p_2 = u1x, p_3 = 1\r\n            // Especially, when both tangents are 1, we will have u0x = 1/3 and u1x = 2/3\r\n            // and then: ratio = t, eg. the ratios are\r\n            // 1-1 corresponding to param t. That's why we can do optimization like above.\r\n            const coeff0 = 0.0; // 0\r\n            const coeff1 = 3.0 * u0x; // 1\r\n            const coeff2 = 3.0 * u1x - 6.0 * u0x; // -1\r\n            const coeff3 = 3.0 * (u0x - u1x) + 1.0; // 1\r\n            // Solves the param t from equation X(t) = ratio.\r\n            const solutions = [0.0, 0.0, 0.0] as [number, number, number];\r\n            const nSolutions = solveCubic(coeff0 - ratio, coeff1, coeff2, coeff3, solutions);\r\n            const param = getParamFromCubicSolution(solutions, nSolutions, ratio);\r\n            // Solves Y.\r\n            const y = bezierInterpolate(prevValue.value, u0y, u1y, nextValue.value, param);\r\n            return y;\r\n        }\r\n    }\r\n    }\r\n}\r\n\r\nfunction isLeftTangentWeightEnabled (tangentWeightMode: TangentWeightMode): boolean {\r\n    return (tangentWeightMode & TangentWeightMode.LEFT) !== 0;\r\n}\r\n\r\nfunction isRightTangentWeightEnabled (tangentWeightMode: TangentWeightMode): boolean {\r\n    return (tangentWeightMode & TangentWeightMode.RIGHT) !== 0;\r\n}\r\n\r\nfunction bezierInterpolate (p0: number, p1: number, p2: number, p3: number, t: number): number {\r\n    const u = 1 - t;\r\n    const coeff0 = u * u * u;\r\n    const coeff1 = 3 * u * u * t;\r\n    const coeff2 = 3 * u * t * t;\r\n    const coeff3 = t * t * t;\r\n    return coeff0 * p0 + coeff1 * p1 + coeff2 * p2 + coeff3 * p3;\r\n}\r\n\r\nfunction getParamFromCubicSolution (solutions: readonly [number, number, number], solutionsCount: number, x: number): number {\r\n    let param = x;\r\n    if (solutionsCount === 1) {\r\n        param = solutions[0];\r\n    } else {\r\n        param = -Infinity;\r\n        for (let iSolution = 0; iSolution < solutionsCount; ++iSolution) {\r\n            const solution = solutions[iSolution];\r\n            if (solution >= 0.0 && solution <= 1.0) {\r\n                if (solution > param) {\r\n                    param = solution;\r\n                }\r\n            }\r\n        }\r\n        if (param === -Infinity) {\r\n            param = 0.0;\r\n        }\r\n    }\r\n    return param;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { legacyCC } from '../global-exports';\r\n\r\nexport type BezierControlPoints = [ number, number, number, number ];\r\n\r\nexport function bezier (C1: number, C2: number, C3: number, C4: number, t: number): number {\r\n    const t1 = 1 - t;\r\n    return t1 * (t1 * (C1 + (C2 * 3 - C1) * t) + C3 * 3 * t * t) + C4 * t * t * t;\r\n}\r\nlegacyCC.bezier = bezier;\r\n\r\n// var sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst acos = Math.acos;\r\nconst max = Math.max;\r\n// var atan2 = Math.atan2;\r\nconst pi = Math.PI;\r\nconst tau = 2 * pi;\r\nconst sqrt = Math.sqrt;\r\n\r\nfunction crt (v: number): number {\r\n    if (v < 0) {\r\n        return -((-v) ** (1 / 3));\r\n    } else {\r\n        return v ** (1 / 3);\r\n    }\r\n}\r\n\r\n// Modified from http://jsbin.com/yibipofeqi/1/edit, optimized for animations.\r\n// The origin Cardano's algorithm is based on http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\r\nfunction cardano (curve: BezierControlPoints, x: number): any {\r\n    // align curve with the intersecting line:\r\n    // var line = {p1: {x: x, y: 0}, p2: {x: x, y: 1}};\r\n    // var aligned = align(curve, line);\r\n    /// / and rewrite from [a(1-t)^3 + 3bt(1-t)^2 + 3c(1-t)t^2 + dt^3] form\r\n    //    pa = aligned[0].y,\r\n    //    pb = aligned[1].y,\r\n    //    pc = aligned[2].y,\r\n    //    pd = aligned[3].y;\r\n    /// /// curve = [{x:0, y:1}, {x: curve[0], y: 1-curve[1]}, {x: curve[2], y: 1-curve[3]}, {x:1, y:0}];\r\n    const pa = x - 0;\r\n    const pb = x - curve[0];\r\n    const pc = x - curve[2];\r\n    const pd = x - 1;\r\n\r\n    // to [t^3 + at^2 + bt + c] form:\r\n    const pa3 = pa * 3;\r\n    const pb3 = pb * 3;\r\n    const pc3 = pc * 3;\r\n    const d = (-pa + pb3 - pc3 + pd);\r\n    const rd = 1 / d;\r\n    const r3 = 1 / 3;\r\n    const a = (pa3 - 6 * pb + pc3) * rd;\r\n    const a3 = a * r3;\r\n    const b = (-pa3 + pb3) * rd;\r\n    const c = pa * rd;\r\n    // then, determine p and q:\r\n    const p = (3 * b - a * a) * r3;\r\n    const p3 = p * r3;\r\n    const q = (2 * a * a * a - 9 * a * b + 27 * c) / 27;\r\n    const q2 = q / 2;\r\n    // and determine the discriminant:\r\n    const discriminant = q2 * q2 + p3 * p3 * p3;\r\n    // and some reserved variables\r\n    let u1: number;\r\n    let v1: number;\r\n    let x1: number;\r\n    let x2: number;\r\n    let x3: number;\r\n\r\n    // If the discriminant is negative, use polar coordinates\r\n    // to get around square roots of negative numbers\r\n    if (discriminant < 0) {\r\n        const mp3 = -p * r3;\r\n        const mp33 = mp3 * mp3 * mp3;\r\n        const r = sqrt(mp33);\r\n        // compute cosphi corrected for IEEE float rounding:\r\n        const t = -q / (2 * r);\r\n        const cosphi = t < -1 ? -1 : t > 1 ? 1 : t;\r\n        const phi = acos(cosphi);\r\n        const crtr = crt(r);\r\n        const t1 = 2 * crtr;\r\n        x1 = t1 * cos(phi * r3) - a3;\r\n        x2 = t1 * cos((phi + tau) * r3) - a3;\r\n        x3 = t1 * cos((phi + 2 * tau) * r3) - a3;\r\n\r\n        // choose best percentage\r\n        if (x1 >= 0 && x1 <= 1) {\r\n            if (x2 >= 0 && x2 <= 1) {\r\n                if (x3 >= 0 && x3 <= 1) {\r\n                    return max(x1, x2, x3);\r\n                } else {\r\n                    return max(x1, x2);\r\n                }\r\n            } else if (x3 >= 0 && x3 <= 1) {\r\n                return max(x1, x3);\r\n            } else {\r\n                return x1;\r\n            }\r\n        } else if (x2 >= 0 && x2 <= 1) {\r\n            if (x3 >= 0 && x3 <= 1) {\r\n                return max(x2, x3);\r\n            } else {\r\n                return x2;\r\n            }\r\n        } else {\r\n            return x3;\r\n        }\r\n    } else if (discriminant === 0) {\r\n        u1 = q2 < 0 ? crt(-q2) : -crt(q2);\r\n        x1 = 2 * u1 - a3;\r\n        x2 = -u1 - a3;\r\n\r\n        // choose best percentage\r\n        if (x1 >= 0 && x1 <= 1) {\r\n            if (x2 >= 0 && x2 <= 1) {\r\n                return max(x1, x2);\r\n            } else {\r\n                return x1;\r\n            }\r\n        } else {\r\n            return x2;\r\n        }\r\n    } else {\r\n        // one real root, and two imaginary roots\r\n        const sd = sqrt(discriminant);\r\n        u1 = crt(-q2 + sd);\r\n        v1 = crt(q2 + sd);\r\n        x1 = u1 - v1 - a3;\r\n        return x1;\r\n    }\r\n}\r\n\r\nexport function bezierByTime (controlPoints: BezierControlPoints, x: number): number {\r\n    const percent = cardano(controlPoints, x);    // t\r\n    const p1y = controlPoints[1]; // b\r\n    const p2y = controlPoints[3]; // c\r\n    // return bezier(0, p1y, p2y, 1, percent);\r\n    return ((1 - percent) * (p1y + (p2y - p1y) * percent) * 3 + percent * percent) * percent;\r\n}\r\nlegacyCC.bezierByTime = bezierByTime;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { assertIsTrue } from '../data/utils/asserts';\r\nimport { IQuatLike, pingPong, Quat, repeat } from '../math';\r\nimport { KeyframeCurve } from './keyframe-curve';\r\nimport { EasingMethod, ExtrapolationMode } from './curve';\r\nimport { binarySearchEpsilon } from '../algorithm/binary-search';\r\nimport { ccclass, serializable, uniquelyReferenced } from '../data/decorators';\r\nimport { deserializeTag, SerializationContext, SerializationInput, SerializationOutput, serializeTag } from '../data';\r\nimport { DeserializationContext } from '../data/custom-serializable';\r\nimport { getEasingFn } from './easing-method';\r\nimport { bezierByTime } from './bezier';\r\n\r\n/**\r\n * @en\r\n * The method used for interpolation between values of a quaternion keyframe and its next keyframe.\r\n * @zh\r\n * 在某四元数关键帧（前一帧）和其下一帧之间插值时使用的插值方式。\r\n */\r\nexport enum QuatInterpolationMode {\r\n    /**\r\n     * @en\r\n     * Perform spherical linear interpolation between previous keyframe value and next keyframe value.\r\n     * @zh\r\n     * 在前一帧和后一帧之间执行球面线性插值。\r\n     */\r\n    SLERP,\r\n\r\n    /**\r\n     * @en\r\n     * Always use the value from this keyframe.\r\n     * @zh\r\n     * 永远使用前一帧的值。\r\n     */\r\n    CONSTANT,\r\n\r\n    // #region TODO: Spherical Quadrangle Interpolation\r\n    /**\r\n     * TODO: Spherical Quadrangle Interpolation\r\n     * - https://theory.org/software/qfa/writeup/node12.html\r\n     * - http://digitalrune.github.io/DigitalRune-Documentation/html/58f74cca-83a3-5e9e-6d5d-63b09a723f90.htm\r\n     */\r\n    // SQUAD,\r\n    // #endregion\r\n}\r\n\r\n/**\r\n * View to a quaternion frame value.\r\n * Note, the view may be invalidated due to keyframe change/add/remove.\r\n */\r\n@ccclass('cc.QuatKeyframeValue')\r\n@uniquelyReferenced\r\nclass QuatKeyframeValue {\r\n    /**\r\n     * @en\r\n     * When perform interpolation, the interpolation method should be taken\r\n     * when for this keyframe is used as starting keyframe.\r\n     * @zh\r\n     * 在执行插值时，当以此关键帧作为起始关键帧时应当使用的插值方式。\r\n     */\r\n    @serializable\r\n    public interpolationMode: QuatInterpolationMode = QuatInterpolationMode.SLERP;\r\n\r\n    /**\r\n     * @en\r\n     * Value of the keyframe.\r\n     * @zh\r\n     * 该关键帧的值。\r\n     */\r\n    @serializable\r\n    public value: IQuatLike = Quat.clone(Quat.IDENTITY);\r\n\r\n    /**\r\n     * @internal Reserved for backward compatibility. Will be removed in future.\r\n     */\r\n    @serializable\r\n    public easingMethod: EasingMethod | [number, number, number, number] = EasingMethod.LINEAR;\r\n\r\n    constructor ({\r\n        value,\r\n        interpolationMode,\r\n        easingMethod,\r\n    }:  Partial<QuatKeyframeValue> = {}) {\r\n        // TODO: shall we normalize it?\r\n        this.value = value ? Quat.clone(value) : this.value;\r\n        this.interpolationMode = interpolationMode ?? this.interpolationMode;\r\n        this.easingMethod = easingMethod ?? this.easingMethod;\r\n    }\r\n}\r\n\r\nexport type { QuatKeyframeValue };\r\n\r\n/**\r\n * The parameter describing a real keyframe value.\r\n * In the case of partial keyframe value,\r\n * each component of the keyframe value is taken from the parameter.\r\n * For unspecified components, default values are taken:\r\n * - Interpolation mode: slerp\r\n * - Value: Identity quaternion\r\n * @zh\r\n * 用于描述实数关键帧值的参数。\r\n * 若是部分关键帧的形式，关键帧值的每个分量都是从该参数中取得。\r\n * 对于未指定的分量，使用默认值：\r\n * - 插值模式：球面线性插值\r\n * - 值：单位四元数\r\n */\r\ntype QuatKeyframeValueParameters = Partial<QuatKeyframeValue>;\r\n\r\nfunction createQuatKeyframeValue (params: QuatKeyframeValueParameters): QuatKeyframeValue {\r\n    return new QuatKeyframeValue(params);\r\n}\r\n\r\n/**\r\n * @en\r\n * Quaternion curve.\r\n * @zh\r\n * 四元数曲线\r\n */\r\n@ccclass('cc.QuatCurve')\r\nexport class QuatCurve extends KeyframeCurve<QuatKeyframeValue> {\r\n    constructor () {\r\n        super();\r\n    }\r\n    /**\r\n     * @en\r\n     * Gets or sets the pre-extrapolation-mode of this curve.\r\n     * Defaults to `ExtrapolationMode.CLAMP`.\r\n     * @zh\r\n     * 获取或设置此曲线的前向外推模式。\r\n     * 默认为 `ExtrapolationMode.CLAMP`。\r\n     */\r\n    @serializable\r\n    public preExtrapolation: ExtrapolationMode = ExtrapolationMode.CLAMP;\r\n\r\n    /**\r\n     * @en\r\n     * Gets or sets the post-extrapolation-mode of this curve.\r\n     * Defaults to `ExtrapolationMode.CLAMP`.\r\n     * @zh\r\n     * 获取或设置此曲线的后向外推模式。\r\n     * 默认为 `ExtrapolationMode.CLAMP`。\r\n     */\r\n    @serializable\r\n    public postExtrapolation: ExtrapolationMode = ExtrapolationMode.CLAMP;\r\n\r\n    /**\r\n     * @en\r\n     * Evaluates this curve at specified time.\r\n     * @zh\r\n     * 计算此曲线在指定时间上的值。\r\n     * @param time Input time.\r\n     * @param quat If specified, this value will be filled and returned.\r\n     * Otherwise a new quaternion object will be filled and returned.\r\n     * @returns Result value.\r\n     */\r\n    public evaluate (time: number, quat?: Quat): Quat {\r\n        quat ??= new Quat();\r\n\r\n        const {\r\n            _times: times,\r\n            _values: values,\r\n            postExtrapolation,\r\n            preExtrapolation,\r\n        } = this;\r\n        const nFrames = times.length;\r\n\r\n        if (nFrames === 0) {\r\n            return quat;\r\n        }\r\n\r\n        const firstTime = times[0];\r\n        const lastTime = times[nFrames - 1];\r\n        if (time < firstTime) {\r\n            // Underflow\r\n            const preValue = values[0];\r\n            switch (preExtrapolation) {\r\n            case ExtrapolationMode.LOOP:\r\n                time = firstTime + repeat(time - firstTime, lastTime - firstTime);\r\n                break;\r\n            case ExtrapolationMode.PING_PONG:\r\n                time = firstTime + pingPong(time - firstTime, lastTime - firstTime);\r\n                break;\r\n            case ExtrapolationMode.CLAMP:\r\n            default:\r\n                return Quat.copy(quat, preValue.value);\r\n            }\r\n        } else if (time > lastTime) {\r\n            // Overflow\r\n            const preValue = values[nFrames - 1];\r\n            switch (postExtrapolation) {\r\n            case ExtrapolationMode.LOOP:\r\n                time = firstTime + repeat(time - firstTime, lastTime - firstTime);\r\n                break;\r\n            case ExtrapolationMode.PING_PONG:\r\n                time = firstTime + pingPong(time - firstTime, lastTime - firstTime);\r\n                break;\r\n            case ExtrapolationMode.CLAMP:\r\n            default:\r\n                return Quat.copy(quat, preValue.value);\r\n            }\r\n        }\r\n\r\n        const index = binarySearchEpsilon(times, time);\r\n        if (index >= 0) {\r\n            return Quat.copy(quat, values[index].value);\r\n        }\r\n\r\n        const iNext = ~index;\r\n        assertIsTrue(iNext !== 0 && iNext !== nFrames && nFrames > 1);\r\n\r\n        const iPre = iNext - 1;\r\n        const preTime = times[iPre];\r\n        const preValue = values[iPre];\r\n        const nextTime = times[iNext];\r\n        const nextValue = values[iNext];\r\n        assertIsTrue(nextTime > time && time > preTime);\r\n        const dt = nextTime - preTime;\r\n\r\n        const ratio = (time - preTime) / dt;\r\n        switch (preValue.interpolationMode) {\r\n        default:\r\n        case QuatInterpolationMode.CONSTANT:\r\n            return Quat.copy(quat, preValue.value);\r\n        case QuatInterpolationMode.SLERP: {\r\n            const { easingMethod } = preValue;\r\n            const transformedRatio = easingMethod === EasingMethod.LINEAR\r\n                ? ratio\r\n                : Array.isArray(easingMethod)\r\n                    ? bezierByTime(easingMethod, ratio)\r\n                    : getEasingFn(easingMethod)(ratio);\r\n            return Quat.slerp(quat, preValue.value, nextValue.value, transformedRatio);\r\n        }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a keyframe into this curve.\r\n     * @param time Time of the keyframe.\r\n     * @param value Value of the keyframe.\r\n     * @returns The index to the new keyframe.\r\n     */\r\n    public addKeyFrame (time: number, value: QuatKeyframeValueParameters): number {\r\n        const keyframeValue = new QuatKeyframeValue(value);\r\n        return super.addKeyFrame(time, keyframeValue);\r\n    }\r\n\r\n    /**\r\n     * Assigns all keyframes.\r\n     * @param keyframes An iterable to keyframes. The keyframes should be sorted by their time.\r\n     */\r\n    public assignSorted (keyframes: Iterable<[number, QuatKeyframeValueParameters]>): void;\r\n\r\n    /**\r\n       * Assigns all keyframes.\r\n       * @param times Times array. Should be sorted.\r\n       * @param values Values array. Corresponding to each time in `times`.\r\n       */\r\n    public assignSorted (times: readonly number[], values: QuatKeyframeValueParameters[]): void;\r\n\r\n    public assignSorted (\r\n        times: Iterable<[number, QuatKeyframeValueParameters]> | readonly number[],\r\n        values?: readonly QuatKeyframeValueParameters[],\r\n    ): void {\r\n        if (values !== undefined) {\r\n            assertIsTrue(Array.isArray(times));\r\n            this.setKeyframes(\r\n                (times as number[]).slice(),\r\n                values.map((value) => createQuatKeyframeValue(value)),\r\n            );\r\n        } else {\r\n            const keyframes = Array.from(times as Iterable<[number, QuatKeyframeValueParameters]>);\r\n            this.setKeyframes(\r\n                keyframes.map(([time]) => time),\r\n                keyframes.map(([, value]) => createQuatKeyframeValue(value)),\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [serializeTag] (output: SerializationOutput, context: SerializationContext): void {\r\n        if (!context.toCCON) {\r\n            output.writeThis();\r\n            return;\r\n        }\r\n\r\n        const {\r\n            _times: times,\r\n            _values: keyframeValues,\r\n        } = this;\r\n\r\n        let interpolationModeRepeated = true;\r\n        keyframeValues.forEach((keyframeValue, _index, [firstKeyframeValue]) => {\r\n            // Values are unlikely to be unified.\r\n            if (interpolationModeRepeated\r\n                && keyframeValue.interpolationMode !== firstKeyframeValue.interpolationMode) { interpolationModeRepeated = false; }\r\n        });\r\n\r\n        const nKeyframes = times.length;\r\n\r\n        const nFrames = nKeyframes;\r\n        const interpolationModesSize = INTERPOLATION_MODE_BYTES * (interpolationModeRepeated ? 1 : nFrames);\r\n        const easingMethodsSize = keyframeValues.reduce((result, { easingMethod }) => result += (Array.isArray(easingMethod)\r\n            ? EASING_METHOD_BYTES + (EASING_METHOD_BEZIER_COMPONENT_BYTES * 4)\r\n            : EASING_METHOD_BYTES), 0);\r\n\r\n        let dataSize = 0;\r\n        dataSize += (\r\n            FLAGS_BYTES\r\n            + FRAME_COUNT_BYTES\r\n            + TIME_BYTES * nFrames\r\n            + VALUE_BYTES * 4 * nFrames\r\n            + easingMethodsSize\r\n            + interpolationModesSize\r\n            + 0\r\n        );\r\n\r\n        const dataView = new DataView(new ArrayBuffer(dataSize));\r\n        let P = 0;\r\n\r\n        // Flags\r\n        let flags = 0;\r\n        if (interpolationModeRepeated) { flags |= QuatCurveKeyframeValueFlagMask.INTERPOLATION_MODE; }\r\n        dataView.setUint32(P, flags, true); P += FLAGS_BYTES;\r\n\r\n        // Frame count\r\n        dataView.setUint32(P, nFrames, true); P += FRAME_COUNT_BYTES;\r\n\r\n        // Times\r\n        times.forEach((time, index) => dataView.setFloat32(P + TIME_BYTES * index, time, true));\r\n        P += TIME_BYTES * nFrames;\r\n\r\n        // Values\r\n        keyframeValues.forEach(({ value: { x, y, z, w } }, index) => {\r\n            const pQuat = P + VALUE_BYTES * 4 * index;\r\n            dataView.setFloat32(pQuat + VALUE_BYTES * 0, x, true);\r\n            dataView.setFloat32(pQuat + VALUE_BYTES * 1, y, true);\r\n            dataView.setFloat32(pQuat + VALUE_BYTES * 2, z, true);\r\n            dataView.setFloat32(pQuat + VALUE_BYTES * 3, w, true);\r\n        });\r\n        P += VALUE_BYTES * 4 * nFrames;\r\n\r\n        // Easing methods\r\n        keyframeValues.forEach(({ easingMethod }, index) => {\r\n            if (!Array.isArray(easingMethod)) {\r\n                dataView.setUint8(P, easingMethod);\r\n                ++P;\r\n            } else {\r\n                dataView.setUint8(P, EASING_METHOD_BEZIER_TAG);\r\n                ++P;\r\n                dataView.setFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 0, easingMethod[0], true);\r\n                dataView.setFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 1, easingMethod[1], true);\r\n                dataView.setFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 2, easingMethod[2], true);\r\n                dataView.setFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 3, easingMethod[3], true);\r\n                P += (EASING_METHOD_BEZIER_COMPONENT_BYTES * 4);\r\n            }\r\n        });\r\n\r\n        // Frame values\r\n        const INTERPOLATION_MODES_START = P; P += interpolationModesSize;\r\n        let pInterpolationMode = INTERPOLATION_MODES_START;\r\n        keyframeValues.forEach(({ interpolationMode }) => {\r\n            dataView.setUint8(pInterpolationMode, interpolationMode);\r\n\r\n            if (!interpolationModeRepeated) { pInterpolationMode += INTERPOLATION_MODE_BYTES; }\r\n        });\r\n\r\n        const bytes = new Uint8Array(dataView.buffer);\r\n        output.writeProperty('bytes', bytes);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [deserializeTag] (input: SerializationInput, context: DeserializationContext): void {\r\n        if (!context.fromCCON) {\r\n            input.readThis();\r\n            return;\r\n        }\r\n\r\n        const bytes = input.readProperty('bytes') as Uint8Array;\r\n\r\n        const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\r\n        let P = 0;\r\n\r\n        // Flags\r\n        const flags = dataView.getUint32(P, true); P += FLAGS_BYTES;\r\n        const interpolationModeRepeated = flags & QuatCurveKeyframeValueFlagMask.INTERPOLATION_MODE;\r\n\r\n        // Frame count\r\n        const nFrames = dataView.getUint32(P, true); P += FRAME_COUNT_BYTES;\r\n\r\n        // Times\r\n        const times = Array.from(\r\n            { length: nFrames },\r\n            (_, index) => dataView.getFloat32(P + TIME_BYTES * index, true),\r\n        );\r\n        P += TIME_BYTES * nFrames;\r\n\r\n        // Frame values\r\n        const P_VALUES = P; P += VALUE_BYTES * 4 * nFrames;\r\n        const keyframeValues = Array.from(\r\n            { length: nFrames },\r\n            (_, index) => {\r\n                const pQuat = P_VALUES + VALUE_BYTES * 4 * index;\r\n                const x = dataView.getFloat32(pQuat + VALUE_BYTES * 0, true);\r\n                const y = dataView.getFloat32(pQuat + VALUE_BYTES * 1, true);\r\n                const z = dataView.getFloat32(pQuat + VALUE_BYTES * 2, true);\r\n                const w = dataView.getFloat32(pQuat + VALUE_BYTES * 3, true);\r\n                const easingMethod = dataView.getUint8(P);\r\n                ++P;\r\n                const keyframeValue = createQuatKeyframeValue({\r\n                    value: { x, y, z, w },\r\n                });\r\n                if (easingMethod !== EASING_METHOD_BEZIER_TAG) {\r\n                    keyframeValue.easingMethod = easingMethod as EasingMethod;\r\n                } else {\r\n                    keyframeValue.easingMethod = [\r\n                        dataView.getFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 0, true),\r\n                        dataView.getFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 1, true),\r\n                        dataView.getFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 2, true),\r\n                        dataView.getFloat32(P + EASING_METHOD_BEZIER_COMPONENT_BYTES * 3, true),\r\n                    ];\r\n                    P += EASING_METHOD_BEZIER_COMPONENT_BYTES * 4;\r\n                }\r\n                return keyframeValue;\r\n            },\r\n        );\r\n\r\n        if (interpolationModeRepeated) {\r\n            const interpolationMode = dataView.getUint8(P);\r\n            ++P;\r\n            for (let iKeyframe = 0; iKeyframe < nFrames; ++iKeyframe) {\r\n                keyframeValues[iKeyframe].interpolationMode = interpolationMode;\r\n            }\r\n        } else {\r\n            for (let iKeyframe = 0; iKeyframe < nFrames; ++iKeyframe) {\r\n                const interpolationMode = dataView.getUint8(P + iKeyframe);\r\n                keyframeValues[iKeyframe].interpolationMode = interpolationMode;\r\n            }\r\n            P += nFrames;\r\n        }\r\n\r\n        this._times = times;\r\n        this._values = keyframeValues;\r\n    }\r\n}\r\n\r\nenum QuatCurveKeyframeValueFlagMask {\r\n    INTERPOLATION_MODE = 1 << 0,\r\n}\r\n\r\nconst FLAGS_BYTES = 1;\r\nconst FRAME_COUNT_BYTES = 4;\r\nconst TIME_BYTES = 4;\r\nconst VALUE_BYTES = 4;\r\nconst INTERPOLATION_MODE_BYTES = 1;\r\nconst EASING_METHOD_BYTES = 1;\r\nconst EASING_METHOD_BEZIER_TAG = 255;\r\nconst EASING_METHOD_BEZIER_COMPONENT_BYTES = 4;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../data';\r\nimport { Enum } from '../value-types';\r\nimport { Color, lerp, repeat, EPSILON, approx, random } from '../math';\r\n\r\nenum GradientMode {\r\n    Blend = 0,\r\n    Fixed = 1,\r\n}\r\nEnum(GradientMode);\r\n\r\nexport class ColorKey {\r\n    /**\r\n     * @en Color value.\r\n     * @zh 颜色值。\r\n     */\r\n    public color = Color.WHITE.clone();\r\n\r\n    /**\r\n     * @en Time value.\r\n     * @zh 时间值。\r\n     */\r\n    public time = 0;\r\n}\r\n\r\nCCClass.fastDefine('cc.ColorKey', ColorKey, {\r\n    color: Color.WHITE.clone(),\r\n    time: 0,\r\n});\r\n\r\nCCClass.Attr.setClassAttr(ColorKey, 'color', 'visible', true);\r\nCCClass.Attr.setClassAttr(ColorKey, 'time', 'visible', true);\r\n\r\nexport class AlphaKey {\r\n    /**\r\n     * @en Alpha value.\r\n     * @zh 透明度。\r\n     */\r\n    public alpha = 1;\r\n    /**\r\n     * @en Time.\r\n     * @zh 时间帧。\r\n     */\r\n    public time = 0;\r\n}\r\n\r\nCCClass.fastDefine('cc.AlphaKey', AlphaKey, {\r\n    alpha: 1,\r\n    time: 0,\r\n});\r\n\r\nCCClass.Attr.setClassAttr(AlphaKey, 'alpha', 'visible', true);\r\nCCClass.Attr.setClassAttr(AlphaKey, 'time', 'visible', true);\r\n\r\n/**\r\n * @en Gradient is a component that has a lot of color keys and alpha keys to get the interpolated color value.\r\n * @zh 渐变曲线控件包含了颜色关键帧和透明度关键帧，在关键帧中进行插值渐变返回最终的颜色值。\r\n */\r\nexport class Gradient {\r\n    /**\r\n     * @en\r\n     * There are 2 kind of mode:\r\n     * Blend just interpolate the nearest 2 colors from keys.\r\n     * Fixed get the nearest color from keys without interpolate.\r\n     * @zh\r\n     * 这个控件包含了两种取色模式：\r\n     * 混合模式对取到的最近两个颜色帧进行插值计算。\r\n     * 固定模式直接取最近的颜色帧返回，不进行插值。\r\n     */\r\n    public static Mode = GradientMode;\r\n    /**\r\n     * @en Array of color key.\r\n     * @zh 颜色关键帧列表。\r\n     */\r\n    public colorKeys: ColorKey[] = [];\r\n    /**\r\n     * @en Array of alpha key.\r\n     * @zh 透明度关键帧列表。\r\n     */\r\n    public alphaKeys: AlphaKey[] = [];\r\n    /**\r\n     * @en Blend mode.\r\n     * @zh 混合模式。\r\n     */\r\n    public mode = GradientMode.Blend;\r\n\r\n    /**\r\n     * @en Set color keys array and alpha keys array.\r\n     * @zh 设置颜色和透明度的关键帧列表。\r\n     * @param colorKeys @en Array of color keys @zh 颜色关键帧列表\r\n     * @param alphaKeys @en Array of alpha keys @zh 透明度关键帧列表\r\n     */\r\n    public setKeys (colorKeys: ColorKey[], alphaKeys: AlphaKey[]): void {\r\n        this.colorKeys = colorKeys;\r\n        this.alphaKeys = alphaKeys;\r\n    }\r\n\r\n    /**\r\n     * @en Sort color keys and alpha keys.\r\n     * @zh 对颜色和透明度的关键帧进行排序。\r\n     */\r\n    public sortKeys (): void {\r\n        if (this.colorKeys.length > 1) {\r\n            this.colorKeys.sort((a, b): number => a.time - b.time);\r\n        }\r\n        if (this.alphaKeys.length > 1) {\r\n            this.alphaKeys.sort((a, b): number => a.time - b.time);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Interpolate color and alpha from color and alpha keys.\r\n     * @zh 根据颜色列表插值计算颜色和透明度。\r\n     * @param time @en Normalized time to interpolate. @zh 用于插值的归一化时间。\r\n     * @returns @en Interpolated color value. @zh 插值过后的颜色值。\r\n     *\r\n     * @deprecated since v3.8 please use [[evaluateFast]] instead.\r\n     */\r\n    public evaluate (time: number): Color {\r\n        return this.evaluateFast(new Color(), time);\r\n    }\r\n\r\n    /**\r\n     * @en Interpolate color and alpha from color and alpha keys.\r\n     * @zh 根据颜色列表插值计算颜色和透明度。\r\n     * @param out @en Interpolated color value. @zh 插值过后的颜色值。\r\n     * @param time @en Normalized time to interpolate. @zh 用于插值的归一化时间。\r\n     * @returns @en Interpolated color value. @zh 插值过后的颜色值。\r\n     */\r\n    public evaluateFast (out: Color, time: number): Color {\r\n        this.getRGB(out, time);\r\n        out.a = this.getAlpha(time)!;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Generates a random color and alpha.\r\n     * @zh 随机生成颜色和透明度。\r\n     * @returns @en Randomized color. @zh 随机生成的颜色。\r\n     * @deprecated since v3.8 please use [[getRandomColor]] instead.\r\n     */\r\n    public randomColor (): Color {\r\n        return this.getRandomColor(new Color());\r\n    }\r\n\r\n    /**\r\n     * @en Generates a random color and alpha.\r\n     * @zh 随机生成颜色和透明度。\r\n     * @param out @en Randomized color. @zh 随机生成的颜色。\r\n     * @returns @en Randomized color. @zh 随机生成的颜色。\r\n     */\r\n    public getRandomColor (out: Color): Color {\r\n        const c = this.colorKeys[Math.trunc(random() * this.colorKeys.length)];\r\n        const a = this.alphaKeys[Math.trunc(random() * this.alphaKeys.length)];\r\n        out.set(c.color);\r\n        out.a = a.alpha;\r\n        return out;\r\n    }\r\n\r\n    private getRGB (out: Color, time: number): Color {\r\n        const colorKeys = this.colorKeys;\r\n        const length = colorKeys.length;\r\n        if (length > 1) {\r\n            time = repeat(time, 1.0 + EPSILON);\r\n            for (let i = 1; i < length; ++i) {\r\n                const preTime = colorKeys[i - 1].time;\r\n                const curTime = colorKeys[i].time;\r\n                if (time >= preTime && time < curTime) {\r\n                    if (this.mode === GradientMode.Fixed) {\r\n                        Color.copy(out, colorKeys[i].color);\r\n                        return out;\r\n                    }\r\n                    const factor = (time - preTime) / (curTime - preTime);\r\n                    Color.lerp(out, colorKeys[i - 1].color, colorKeys[i].color, factor);\r\n                    return out;\r\n                }\r\n            }\r\n            const lastIndex = length - 1;\r\n            if (approx(time, colorKeys[lastIndex].time, EPSILON)) {\r\n                Color.copy(out, colorKeys[lastIndex].color);\r\n            } else if (time < colorKeys[0].time) {\r\n                Color.lerp(out, Color.BLACK, colorKeys[0].color, time / colorKeys[0].time);\r\n            } else if (time > colorKeys[lastIndex].time) {\r\n                Color.lerp(out, colorKeys[lastIndex].color, Color.BLACK, (time - colorKeys[lastIndex].time) / (1 - colorKeys[lastIndex].time));\r\n            }\r\n            // warn('something went wrong. can not get gradient color.');\r\n        } else if (length === 1) {\r\n            Color.copy(out, colorKeys[0].color);\r\n        } else {\r\n            Color.copy(out, Color.WHITE);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    private getAlpha (time: number): number {\r\n        const basicAlpha = 0; // default alpha is 0\r\n        const alphaKeys = this.alphaKeys;\r\n        const length = alphaKeys.length;\r\n        if (length > 1) {\r\n            time = repeat(time, 1.0 + EPSILON);\r\n            for (let i = 1; i < length; ++i) {\r\n                const preTime = alphaKeys[i - 1].time;\r\n                const curTime = alphaKeys[i].time;\r\n                if (time >= preTime && time < curTime) {\r\n                    if (this.mode === GradientMode.Fixed) {\r\n                        return alphaKeys[i].alpha;\r\n                    }\r\n                    const factor = (time - preTime) / (curTime - preTime);\r\n                    return lerp(alphaKeys[i - 1].alpha, alphaKeys[i].alpha, factor);\r\n                }\r\n            }\r\n            const lastIndex = length - 1;\r\n            if (approx(time, alphaKeys[lastIndex].time, EPSILON)) {\r\n                return alphaKeys[lastIndex].alpha;\r\n            } else if (time < alphaKeys[0].time) {\r\n                return lerp(basicAlpha, alphaKeys[0].alpha, time / alphaKeys[0].time);\r\n            } else if (time > alphaKeys[lastIndex].time) {\r\n                return lerp(alphaKeys[lastIndex].alpha, basicAlpha, (time - alphaKeys[lastIndex].time) / (1 - alphaKeys[lastIndex].time));\r\n            }\r\n            return 255;\r\n        } else if (length === 1) {\r\n            return alphaKeys[0].alpha;\r\n        } else {\r\n            return 255;\r\n        }\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.Gradient', Gradient, {\r\n    colorKeys: [],\r\n    alphaKeys: [],\r\n    mode: GradientMode.Blend,\r\n});\r\n\r\nCCClass.Attr.setClassAttr(Gradient, 'colorKeys', 'visible', true);\r\nCCClass.Attr.setClassAttr(Gradient, 'alphaKeys', 'visible', true);\r\nCCClass.Attr.setClassAttr(Gradient, 'mode', 'visible', true);\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass } from '../data/decorators';\r\nimport { clamp } from '../math';\r\nimport { KeyframeCurve } from './keyframe-curve';\r\n\r\nexport type ObjectCurveKeyframe<T> = T;\r\n\r\n@ccclass('cc.ObjectCurve')\r\nexport class ObjectCurve<T> extends KeyframeCurve<ObjectCurveKeyframe<T>> {\r\n    public evaluate (time: number): T {\r\n        const iSearch = this.searchKeyframe(time);\r\n        if (iSearch >= 0) {\r\n            return this._values[iSearch];\r\n        }\r\n        const iPrev = clamp((~iSearch) - 1, 0, this._values.length - 1);\r\n        return this._values[iPrev];\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../data/class';\r\nimport { clamp, pingPong, repeat } from '../math/utils';\r\nimport { ExtrapolationMode, RealCurve, RealInterpolationMode } from '../curves';\r\n\r\nconst LOOK_FORWARD = 3;\r\n\r\n/**\r\n * @en\r\n * A key frame in the curve.\r\n * @zh\r\n * 曲线中的一个关键帧。\r\n */\r\nexport class Keyframe {\r\n    /**\r\n     * @en Current frame time.\r\n     * @zh 当前帧时间。\r\n     */\r\n    public time = 0;\r\n\r\n    /**\r\n     * @en Current frame value.\r\n     * @zh 当前帧的值。\r\n     */\r\n    public value = 0;\r\n\r\n    /**\r\n     * @en In tangent value.\r\n     * @zh 左切线。\r\n     */\r\n    public inTangent = 0;\r\n\r\n    /**\r\n     * @en Out tangent value.\r\n     * @zh 右切线。\r\n     */\r\n    public outTangent = 0;\r\n}\r\n\r\nCCClass.fastDefine('cc.Keyframe', Keyframe, {\r\n    time: 0,\r\n    value: 0,\r\n    inTangent: 0,\r\n    outTangent: 0,\r\n});\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport class OptimizedKey {\r\n    public index: number;\r\n    public time: number;\r\n    public endTime: number;\r\n    public coefficient: Float32Array;\r\n    constructor () {\r\n        this.index = -1;\r\n        this.time = 0;\r\n        this.endTime = 0;\r\n        this.coefficient = new Float32Array(4);\r\n    }\r\n\r\n    public evaluate (T: number): number {\r\n        const t = T - this.time;\r\n        return evalOptCurve(t, this.coefficient);\r\n    }\r\n}\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport function evalOptCurve (t: number, coefs: Float32Array | number[]): number {\r\n    return (t * (t * (t * coefs[0] + coefs[1]) + coefs[2])) + coefs[3];\r\n}\r\n\r\n/**\r\n * @en\r\n * Describe a curve in which three times Hermite interpolation is used for each adjacent key frame.\r\n * @zh\r\n * 描述一条曲线，其中每个相邻关键帧采用三次hermite插值计算。\r\n */\r\nexport class AnimationCurve {\r\n    /**\r\n     * @dontmangle\r\n     * NOTE: _curve is a serializable property set by `CCClass.fastDefine`,\r\n     * so it should not be mangled while `mangleProtected` is true in `<<ProjectRoot>>/engine-mangle-config.json`.\r\n     */\r\n    private _curve!: RealCurve;\r\n\r\n    private static defaultKF: Keyframe[] = [{\r\n        time: 0,\r\n        value: 1,\r\n        inTangent: 0,\r\n        outTangent: 0,\r\n    }, {\r\n        time: 1,\r\n        value: 1,\r\n        inTangent: 0,\r\n        outTangent: 0,\r\n    }];\r\n\r\n    /**\r\n     * For internal usage only.\r\n     * @internal\r\n     */\r\n    get _internalCurve (): RealCurve {\r\n        return this._curve;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The key frame of the curve.\r\n     * @zh\r\n     * 曲线的关键帧。\r\n     */\r\n    get keyFrames (): Keyframe[] {\r\n        return Array.from(this._curve.keyframes()).map(([time, value]) => {\r\n            const legacyKeyframe = new Keyframe();\r\n            legacyKeyframe.time = time;\r\n            legacyKeyframe.value = value.value;\r\n            legacyKeyframe.inTangent = value.leftTangent;\r\n            legacyKeyframe.outTangent = value.rightTangent;\r\n            return legacyKeyframe;\r\n        });\r\n    }\r\n\r\n    set keyFrames (value) {\r\n        this._curve.assignSorted(value.map((legacyCurve) => [\r\n            legacyCurve.time,\r\n            {\r\n                interpolationMode: RealInterpolationMode.CUBIC,\r\n                value: legacyCurve.value,\r\n                leftTangent: legacyCurve.inTangent,\r\n                rightTangent: legacyCurve.outTangent,\r\n            },\r\n        ]));\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Loop mode [[AnimationClip.WrapMode]] when the sampling time exceeds the left end.\r\n     * @zh\r\n     * 当采样时间超出左端时采用的循环模式[[AnimationClip.WrapMode]]。\r\n     */\r\n    get preWrapMode (): WrapModeMask {\r\n        return toLegacyWrapMode(this._curve.preExtrapolation);\r\n    }\r\n\r\n    set preWrapMode (value) {\r\n        this._curve.preExtrapolation = fromLegacyWrapMode(value);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Cycle mode [[AnimationClip.WrapMode]] when the sampling time exceeds the right end.\r\n     * @zh\r\n     * 当采样时间超出右端时采用的循环模式[[AnimationClip.WrapMode]]。\r\n     */\r\n    get postWrapMode (): WrapModeMask {\r\n        return toLegacyWrapMode(this._curve.postExtrapolation);\r\n    }\r\n\r\n    set postWrapMode (value) {\r\n        this._curve.postExtrapolation = fromLegacyWrapMode(value);\r\n    }\r\n\r\n    private cachedKey: OptimizedKey;\r\n\r\n    /**\r\n     * @en Construct a curve with key frames\r\n     * @zh 通过关键帧构造一条曲线。\r\n     * @param keyFrames @zh 关键帧 @en Key frames\r\n     */\r\n    constructor (keyFrames: Keyframe[] | null | RealCurve = null) {\r\n        if (keyFrames instanceof RealCurve) {\r\n            this._curve = keyFrames;\r\n        } else {\r\n            const curve = new RealCurve();\r\n            this._curve = curve;\r\n            curve.preExtrapolation = ExtrapolationMode.LOOP;\r\n            curve.postExtrapolation = ExtrapolationMode.CLAMP;\r\n            if (!keyFrames) {\r\n                curve.assignSorted([\r\n                    [0.0, { interpolationMode: RealInterpolationMode.CUBIC, value: 1.0 }],\r\n                    [1.0, { interpolationMode: RealInterpolationMode.CUBIC, value: 1.0 }],\r\n                ]);\r\n            } else {\r\n                curve.assignSorted(keyFrames.map((legacyKeyframe) => [legacyKeyframe.time, {\r\n                    interpolationMode: RealInterpolationMode.CUBIC,\r\n                    value: legacyKeyframe.value,\r\n                    leftTangent: legacyKeyframe.inTangent,\r\n                    rightTangent: legacyKeyframe.outTangent,\r\n                }]));\r\n            }\r\n        }\r\n        this.cachedKey = new OptimizedKey();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a keyframe.\r\n     * @zh\r\n     * 添加一个关键帧。\r\n     * @param keyFrame @en A keyframe. @zh 关键帧。\r\n     */\r\n    public addKey (keyFrame: Keyframe | null): void {\r\n        if (!keyFrame) {\r\n            this._curve.clear();\r\n        } else {\r\n            this._curve.addKeyFrame(keyFrame.time, {\r\n                interpolationMode: RealInterpolationMode.CUBIC,\r\n                value: keyFrame.value,\r\n                leftTangent: keyFrame.inTangent,\r\n                rightTangent: keyFrame.outTangent,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param time\r\n     */\r\n    public evaluate_slow (time: number): number {\r\n        return this._curve.evaluate(time);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Calculate the curve interpolation at a given point in time.\r\n     * @zh\r\n     * 计算给定时间点的曲线插值。\r\n     * @param time @en The time. @zh 时间。\r\n     */\r\n    public evaluate (time: number): number {\r\n        const { cachedKey, _curve: curve } = this;\r\n        const nKeyframes = curve.keyFramesCount;\r\n        const lastKeyframeIndex = nKeyframes - 1;\r\n        let wrappedTime = time;\r\n        const extrapolationMode = time < 0 ? curve.preExtrapolation : curve.postExtrapolation;\r\n        const startTime = curve.getKeyframeTime(0);\r\n        const endTime = curve.getKeyframeTime(lastKeyframeIndex);\r\n        switch (extrapolationMode) {\r\n        case ExtrapolationMode.LOOP:\r\n            wrappedTime = repeat(time - startTime, endTime - startTime) + startTime;\r\n            break;\r\n        case ExtrapolationMode.PING_PONG:\r\n            wrappedTime = pingPong(time - startTime, endTime - startTime) + startTime;\r\n            break;\r\n        case ExtrapolationMode.CLAMP:\r\n        default:\r\n            wrappedTime = clamp(time, startTime, endTime);\r\n            break;\r\n        }\r\n        if (wrappedTime >= cachedKey.time && wrappedTime < cachedKey.endTime) {\r\n            return cachedKey.evaluate(wrappedTime);\r\n        }\r\n        const leftIndex = this.findIndex(cachedKey, wrappedTime);\r\n        const rightIndex = Math.min(leftIndex + 1, lastKeyframeIndex);\r\n        this.calcOptimizedKey(cachedKey, leftIndex, rightIndex);\r\n        return cachedKey.evaluate(wrappedTime);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param optKey\r\n     * @param leftIndex\r\n     * @param rightIndex\r\n     */\r\n    public calcOptimizedKey (optKey: OptimizedKey, leftIndex: number, rightIndex: number): void {\r\n        const lhsTime = this._curve.getKeyframeTime(leftIndex);\r\n        const rhsTime = this._curve.getKeyframeTime(rightIndex);\r\n        const { value: lhsValue, leftTangent: lhsOutTangent } = this._curve.getKeyframeValue(leftIndex);\r\n        const { value: rhsValue, rightTangent: rhsInTangent  } = this._curve.getKeyframeValue(rightIndex);\r\n        optKey.index = leftIndex;\r\n        optKey.time = lhsTime;\r\n        optKey.endTime = rhsTime;\r\n\r\n        const dx = rhsTime - lhsTime;\r\n        const dy = rhsValue - lhsValue;\r\n        const length = 1 / (dx * dx);\r\n        const d1 = lhsOutTangent * dx;\r\n        const d2 = rhsInTangent * dx;\r\n\r\n        optKey.coefficient[0] = (d1 + d2 - dy - dy) * length / dx;\r\n        optKey.coefficient[1] = (dy + dy + dy - d1 - d1 - d2) * length;\r\n        optKey.coefficient[2] = lhsOutTangent;\r\n        optKey.coefficient[3] = lhsValue;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @param optKey\r\n     * @param t\r\n     */\r\n    private findIndex (optKey: OptimizedKey, t: number): number {\r\n        const { _curve: curve } = this;\r\n        const nKeyframes = curve.keyFramesCount;\r\n        const cachedIndex = optKey.index;\r\n        if (cachedIndex !== -1) {\r\n            const cachedTime = curve.getKeyframeTime(cachedIndex);\r\n            if (t > cachedTime) {\r\n                for (let i = 0; i < LOOK_FORWARD; i++) {\r\n                    const currIndex = cachedIndex + i;\r\n                    if (currIndex + 1 < nKeyframes && curve.getKeyframeTime(currIndex + 1) > t) {\r\n                        return currIndex;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = 0; i < LOOK_FORWARD; i++) {\r\n                    const currIndex = cachedIndex - i;\r\n                    if (currIndex >= 0 && curve.getKeyframeTime(currIndex - 1) <= t) {\r\n                        return currIndex - 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let left = 0;\r\n        let right = nKeyframes;\r\n        let mid;\r\n        while (right - left > 1) {\r\n            mid = Math.floor((left + right) / 2);\r\n            if (curve.getKeyframeTime(mid) >= t) {\r\n                right = mid;\r\n            } else {\r\n                left = mid;\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n}\r\n\r\nCCClass.fastDefine('cc.AnimationCurve', AnimationCurve, {\r\n    _curve: null,\r\n});\r\n\r\n/**\r\n * @engineInternal\r\n */\r\nexport enum WrapModeMask {\r\n    Default = 0,\r\n    Normal = 1 << 0,\r\n    Loop = 1 << 1,\r\n    ShouldWrap = 1 << 2,\r\n    Clamp = 1 << 3,\r\n    PingPong = 1 << 4 | 1 << 1 | 1 << 2,  // Loop, ShouldWrap\r\n    Reverse = 1 << 5 | 1 << 2,      // ShouldWrap\r\n}\r\n\r\nfunction fromLegacyWrapMode (legacyWrapMode: WrapModeMask): ExtrapolationMode {\r\n    switch (legacyWrapMode) {\r\n    default:\r\n    case WrapModeMask.Default:\r\n    case WrapModeMask.Normal:\r\n    case WrapModeMask.Clamp: return ExtrapolationMode.CLAMP;\r\n    case WrapModeMask.PingPong: return ExtrapolationMode.PING_PONG;\r\n    case WrapModeMask.Loop: return ExtrapolationMode.LOOP;\r\n    }\r\n}\r\n\r\nfunction toLegacyWrapMode (extrapolationMode: ExtrapolationMode): WrapModeMask {\r\n    switch (extrapolationMode) {\r\n    default:\r\n    case ExtrapolationMode.LINEAR:\r\n    case ExtrapolationMode.CLAMP: return WrapModeMask.Clamp;\r\n    case ExtrapolationMode.PING_PONG: return WrapModeMask.PingPong;\r\n    case ExtrapolationMode.LOOP: return WrapModeMask.Loop;\r\n    }\r\n}\r\n\r\n/**\r\n * Same as but more effective than `new LegacyCurve()._internalCurve`.\r\n * @engineInternal\r\n */\r\nexport function constructLegacyCurveAndConvert (): RealCurve {\r\n    const curve = new RealCurve();\r\n    curve.assignSorted([\r\n        [0.0, { interpolationMode: RealInterpolationMode.CUBIC, value: 1.0 }],\r\n        [1.0, { interpolationMode: RealInterpolationMode.CUBIC, value: 1.0 }],\r\n    ]);\r\n    return curve;\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { clamp, v3, Vec3 } from '../math';\r\nimport { assertID, warnID } from '../platform/debug';\r\nimport { ShapeType } from './enums';\r\nimport { assertsArrayIndex } from '../data/utils/asserts';\r\n\r\nconst vec3MultiplyScalar = Vec3.multiplyScalar;\r\nconst vec3Add = Vec3.add;\r\n\r\nexport enum SplineMode {\r\n    /**\r\n     * @en\r\n     * Broken line:\r\n     * Each knot is connected with a straight line from the beginning to the end to form a curve. At least two knots.\r\n     * @zh\r\n     * 每个结从头到尾用一条直线相连，形成一条曲线。 至少存在两个结点。\r\n     */\r\n    LINEAR = 0,\r\n\r\n    /**\r\n     * @en\r\n     * Piecewise Bezier curve:\r\n     * Every four knots form a curve. Total knots number must be a multiple of 4.\r\n     * Each curve passes only the first and fourth knots, and does not pass through the middle two control knots.\r\n     *\r\n     * If you need a whole continuous curve:\r\n     * (1) Suppose the four knots of the previous curve are A, B, C, D\r\n     * (2) The four knots of the next curve must be D, E, F, G\r\n     * (3) C and E need to be symmetrical about D\r\n     *\r\n     * @zh\r\n     * 分段贝塞尔曲线：\r\n     * 每四个结形成一条曲线。 总节数必须是 4 的倍数。\r\n     * 每条曲线只通过第一个和第四个结点，不通过中间两个控制结点。\r\n     *\r\n     * 如果你需要一条完整的连续曲线：\r\n     * (1) 假设前面曲线的四个结点分别是 A, B, C, D\r\n     * (2) 下一条曲线的四个结点必须是 D, E, F, G\r\n     * (3) C 和 E 需要关于 D 对称\r\n     */\r\n    BEZIER = 1,\r\n\r\n    /**\r\n     * @en\r\n     * Catmull Rom curve:\r\n     * All knots(including start & end knots) form a whole continuous curve. At least two knots.\r\n     * The whole curve passes through all knots.\r\n     *\r\n     * @zh\r\n     * Catmull Rom 曲线：\r\n     * 所有结点（包括起始结点和结束结点）形成一条完整的连续曲线。 至少存在两个结点。\r\n     * 整条曲线穿过所有结点。\r\n     */\r\n    CATMULL_ROM = 2\r\n}\r\n\r\nconst SPLINE_WHOLE_INDEX = 0xffffffff;\r\n\r\nconst _v0 = v3();\r\nconst _v1 = v3();\r\nconst _v2 = v3();\r\nconst _v3 = v3();\r\n\r\n/**\r\n * @en\r\n * Basic Geometry: Spline.\r\n * @zh\r\n * 基础几何：Spline。\r\n */\r\n\r\nexport class Spline {\r\n    private readonly _type: number;\r\n    private declare _mode: SplineMode;\r\n    private _knots: Vec3[] = [];\r\n\r\n    private constructor (mode: SplineMode = SplineMode.CATMULL_ROM, knots: Readonly<Vec3[]> = []) {\r\n        this._type = ShapeType.SHAPE_SPLINE;\r\n        this._mode = mode;\r\n\r\n        for (let i = 0; i < knots.length; i++) {\r\n            this._knots[i] = v3(knots[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Creates a spline instance.\r\n     * @zh\r\n     * 创建一个 Spline 实例。\r\n     * @param mode @en The mode to create the Spline instance. @zh 用于创建 Spline 实例的模式。\r\n     * @param knots @en The knots to create the Spline instance. @zh 用于创建 Spline 实例的结点列表。\r\n     * @returns @en The created Spline instance. @zh 创建出的 Spline 实例。\r\n     */\r\n    public static create (mode: SplineMode, knots: Vec3[] = []): Spline {\r\n        return new Spline(mode, knots);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clones a Spline instance.\r\n     * @zh\r\n     * 克隆一个 Spline 实例。\r\n     * @param s @en The Spline instance to be cloned. @zh 用于克隆的 Spline 实例。\r\n     * @returns @en The cloned Spline instance. @zh 克隆出的 Spline 实例。\r\n     */\r\n    public static clone (s: Spline): Spline {\r\n        return new Spline(s.mode, s.knots);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Copies the values of a Spline instance to another.\r\n     * @zh\r\n     * 拷贝一个 Spline 实例的值到另一个中。\r\n     * @param out @en The target Spline instance to copy to. @zh 拷贝目标 Spline 实例。\r\n     * @param s @en The source Spline instance to copy from. @zh 拷贝源 Spline 实例。\r\n     * @returns @en The target Spline instance to copy to, same as the `out` parameter. @zh 拷贝目标 Spline 实例，值与 `out` 参数相同。\r\n     */\r\n    public static copy (out: Spline, s: Spline): Spline {\r\n        out._mode = s.mode;\r\n        out._knots.length = 0;\r\n\r\n        const knots = s.knots;\r\n        const length = knots.length;\r\n        for (let i = 0; i < length; i++) {\r\n            out._knots[i] = v3(knots[i]);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the type of this Spline instance, always returns `ShapeType.SHAPE_SPLINE`.\r\n     * @zh\r\n     * 获取此 Spline 的类型，固定返回 `ShapeType.SHAPE_SPLINE`\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the mode of this Spline instance.\r\n     * @zh\r\n     * 获取当前 Spline 实例的模式。\r\n     */\r\n    get mode (): SplineMode {\r\n        return this._mode;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets all knots of this Spline instance.\r\n     * @zh\r\n     * 获取当前 Spline 实例的所有结点。\r\n     */\r\n    get knots (): Readonly<Vec3[]> {\r\n        return this._knots;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the mode and knots to this Spline instance.\r\n     * @zh\r\n     * 给当前 Spline 实例设置模式和结点。\r\n     * @param mode @en The mode to be set to this Spline instance. @zh 要设置到当前 Spline 实例的模式。\r\n     * @param knots @en The knots to be set to this spline instance. @zh 要设置到当前 Spline 实例的结点列表。\r\n     */\r\n    public setModeAndKnots (mode: SplineMode, knots: Vec3[]): void {\r\n        this._mode = mode;\r\n        this._knots.length = 0;\r\n\r\n        for (let i = 0; i < knots.length; i++) {\r\n            this._knots[i] = v3(knots[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clears all knots of this Spline instance.\r\n     * @zh\r\n     * 清空当前 Spline 实例的所有结点。\r\n     */\r\n    public clearKnots (): void {\r\n        this._knots.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the knot count of this Spline instance.\r\n     * @zh\r\n     * 获取当前 Spline 实例的结点数量。\r\n     * @returns @en The knot count of this Spline instance. @zh 当前 Spline 实例的结点数量。\r\n     */\r\n    public getKnotCount (): number {\r\n        return this._knots.length;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Adds a knot to this Spline instance.\r\n     * @zh\r\n     * 给当前 Spline 实例添加一个结点。\r\n     * @param knot @en The knot to add to this Spline instance. @zh 要添加到当前 Spline 实例的结点。\r\n     */\r\n    public addKnot (knot: Vec3): void {\r\n        this._knots.push(v3(knot));\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Inserts a knot to the specified position of this Spline instance.\r\n     * @zh\r\n     * 插入一个结点到当前 Spline 实例的指定位置。\r\n     * @param index @en The position of this Spline instance to be inserted. @zh 要插入到此 Spline 实例的位置。\r\n     * @param knot @en The knot to be inserted. @zh 要插入的结点。\r\n     */\r\n    public insertKnot (index: number, knot: Vec3): void {\r\n        const item = v3(knot);\r\n        if (index >= this._knots.length) {\r\n            this._knots.push(item);\r\n            return;\r\n        }\r\n\r\n        this._knots.splice(index, 0, item);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes a knot at the specified position of this Spline instance.\r\n     * @zh\r\n     * 移除当前 Spline 实例的指定位置的一个结点。\r\n     * @param index\r\n     */\r\n    public removeKnot (index: number): void {\r\n        assertsArrayIndex(this._knots, index);\r\n\r\n        this._knots.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets a knot to the specified position of this Spline instance.\r\n     * @zh\r\n     * 为当前 Spline 实例的指定位置设置结点信息。\r\n     * @param index @en The specified position of this Spline instance. @zh 要设置结点的指定位置。\r\n     * @param knot @en The knot to be set to the specified position. @zh 要设置的结点。\r\n     */\r\n    public setKnot (index: number, knot: Vec3): void {\r\n        assertsArrayIndex(this._knots, index);\r\n\r\n        this._knots[index].set(knot);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the knot of the specified position of this Spline instance.\r\n     * @zh\r\n     * 获取当前 Spline 实例指定位置的结点。\r\n     * @param index @en The specified position of this Spline instance. @zh 要设置结点的指定位置。\r\n     * @returns @en The knot of the specified position of this Spline instance. @zh 当前 Spline 实例指定位置的结点。\r\n     */\r\n    public getKnot (index: number): Readonly<Vec3> {\r\n        assertsArrayIndex(this._knots, index);\r\n\r\n        return this._knots[index];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets a point at t with repect to the `index` segment of curve or the whole curve.\r\n     * @zh\r\n     * 获取 t 处相对于某段或整条曲线的点。\r\n     * @param t @en The factor with a range of [0.0, 1.0]. @zh 0.0 到 1.0 的因子。\r\n     * @param index @en The knot index of this Spline instance, default value is the whole curve. @zh 当前 Spline 实例的某个结点索引，默认值为整条曲线。\r\n     * @returns @en The point matches the input `t` factor and `index`. @zh 满足输入 `t` 参数和 `index` 参数的点。\r\n     */\r\n    public getPoint (t: number, index: number = SPLINE_WHOLE_INDEX): Vec3 {\r\n        t = clamp(t, 0.0, 1.0);\r\n\r\n        const segments = this.getSegments();\r\n        if (segments === 0) {\r\n            return v3();\r\n        }\r\n\r\n        if (index === SPLINE_WHOLE_INDEX) {\r\n            const deltaT = 1.0 / segments;\r\n\r\n            index = Math.floor(t / deltaT);\r\n            t     = (t % deltaT) / deltaT;\r\n        }\r\n\r\n        const knots = this._knots;\r\n\r\n        if (index >= segments) {\r\n            return v3(knots[knots.length - 1]);\r\n        }\r\n\r\n        switch (this._mode) {\r\n        case SplineMode.LINEAR:\r\n            return Spline.calcLinear(knots[index], knots[index + 1], t);\r\n        case SplineMode.BEZIER: {\r\n            const start = index * 4;\r\n            return Spline.calcBezier(knots[start], knots[start + 1], knots[start + 2], knots[start + 3], t);\r\n        }\r\n        case SplineMode.CATMULL_ROM: {\r\n            const v0 = index > 0 ? knots[index - 1] : knots[index];\r\n            const v3 = index + 2 < knots.length ? knots[index + 2] : knots[index + 1];\r\n            return Spline.calcCatmullRom(v0, knots[index], knots[index + 1], v3, t);\r\n        }\r\n        default:\r\n            return v3();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets points from 0 to 1 uniformly with repect to the `index` segment of curve or the whole curve.\r\n     * @zh\r\n     * 获取相对与某段或整条曲线上的 n 个数量的点信息。\r\n     * @param num @en The count of points needed. @zh 需要的点的数量。\r\n     * @param index @en The knot index of this Spline instance, default value is the whole curve. @zh 当前 Spline 实例的某个结点索引，默认值为整条曲线。\r\n     * @returns @en The points with `num` size at the `index` segment or the whole curve. @zh 曲线某段或者整条曲线上的 `num` 个点。\r\n     */\r\n    public getPoints (num: number, index: number = SPLINE_WHOLE_INDEX): Vec3[] {\r\n        if (num === 0) {\r\n            return [];\r\n        }\r\n\r\n        if (num === 1) {\r\n            const point = this.getPoint(0.0, index);\r\n            return [point];\r\n        }\r\n\r\n        const points: Vec3[] = [];\r\n        const deltaT = 1.0 / (num - 1.0);\r\n\r\n        for (let i = 0; i < num; i++) {\r\n            const t     = i * deltaT;\r\n            const point = this.getPoint(t, index);\r\n\r\n            points.push(point);\r\n        }\r\n\r\n        return points;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    private getSegments (): number {\r\n        const count = this._knots.length;\r\n        switch (this._mode) {\r\n        case SplineMode.LINEAR:\r\n        case SplineMode.CATMULL_ROM:\r\n            if (count < 2) {\r\n                warnID(14300);\r\n                return 0;\r\n            }\r\n\r\n            return count - 1;\r\n        case SplineMode.BEZIER:\r\n            if (count < 4 || count % 4 !== 0) {\r\n                warnID(14301);\r\n                return 0;\r\n            }\r\n\r\n            return count / 4;\r\n        default:\r\n            assertID(false, 16407);\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    private static calcLinear (v0: Vec3, v1: Vec3, t: number): Vec3 {\r\n        const result = new Vec3();\r\n        vec3MultiplyScalar(_v0, v0, (1.0 - t));\r\n        vec3MultiplyScalar(_v1, v1, t);\r\n        vec3Add(result, _v0, _v1);\r\n\r\n        return result;\r\n    }\r\n\r\n    private static calcBezier (v0: Vec3, v1: Vec3, v2: Vec3, v3: Vec3, t: number): Vec3 {\r\n        const result = new Vec3();\r\n        const s = 1.0 - t;\r\n        vec3MultiplyScalar(_v0, v0, s * s * s);\r\n        vec3MultiplyScalar(_v1, v1, 3.0 * t * s * s);\r\n        vec3MultiplyScalar(_v2, v2, 3.0 * t * t * s);\r\n        vec3MultiplyScalar(_v3, v3, t * t * t);\r\n        vec3Add(_v0, _v0, _v1);\r\n        vec3Add(_v2, _v2, _v3);\r\n        vec3Add(result, _v0, _v2);\r\n\r\n        return result;\r\n    }\r\n    private static calcCatmullRom (v0: Vec3, v1: Vec3, v2: Vec3, v3: Vec3, t: number): Vec3 {\r\n        const result = new Vec3();\r\n        const t2 = t * t;\r\n        const t3 = t2 * t;\r\n        vec3MultiplyScalar(_v0, v0, -0.5 * t3 + t2 - 0.5 * t);\r\n        vec3MultiplyScalar(_v1, v1, 1.5 * t3 - 2.5 * t2 + 1.0);\r\n        vec3MultiplyScalar(_v2, v2, -1.5 * t3 + 2.0 * t2 + 0.5 * t);\r\n        vec3MultiplyScalar(_v3, v3, 0.5 * t3 - 0.5 * t2);\r\n        vec3Add(_v0, _v0, _v1);\r\n        vec3Add(_v2, _v2, _v3);\r\n        vec3Add(result, _v0, _v2);\r\n\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @en\r\n * The raycast mode.\r\n * @zh\r\n * 射线检测模式。\r\n */\r\nexport enum ERaycastMode {\r\n\r\n    /**\r\n     * @en\r\n     * Detects and records all data.\r\n     * @zh\r\n     * 检测并记录所有的数据。\r\n     */\r\n    ALL,\r\n\r\n    /**\r\n     * @en\r\n     * Detects all data, but records only the most recent data.\r\n     * @zh\r\n     * 检测所有，但只记录最近的数据。\r\n     */\r\n    CLOSEST,\r\n\r\n    /**\r\n     * @en\r\n     * Once the test is successful, the test is stopped and the data is recorded only once.\r\n     * @zh\r\n     * 一旦检测成功就停止检测，只会记录一次数据。\r\n     */\r\n    ANY,\r\n}\r\n\r\n/**\r\n * @en\r\n * The storage structure of the raycast results.\r\n * @zh\r\n * 射线检测结果的存储结构。\r\n */\r\nexport interface IRaySubMeshResult {\r\n\r\n    /**\r\n     * @en\r\n     * The distance between the hit point and the ray.\r\n     * @zh\r\n     * 击中点和射线的距离。\r\n     */\r\n    distance: number;\r\n\r\n    /**\r\n     * @en\r\n     * The index of the triangle vertex 0。\r\n     * @zh\r\n     * 三角形顶点0的索引。\r\n     */\r\n    vertexIndex0: number;\r\n\r\n    /**\r\n     * @en\r\n     * The index of the triangle vertex 1。\r\n     * @zh\r\n     * 三角形顶点1的索引\r\n     */\r\n    vertexIndex1: number;\r\n\r\n    /**\r\n     * @en\r\n     * The index of the triangle vertex 2。\r\n     * @zh\r\n     * 三角形顶点2的索引\r\n     */\r\n    vertexIndex2: number;\r\n}\r\n\r\n/**\r\n * @en\r\n * The optional param structure of the `raySubMesh`.\r\n * @zh\r\n * `raySubMesh`的可选参数结构。\r\n */\r\nexport interface IRaySubMeshOptions {\r\n\r\n    /**\r\n     * @en\r\n     * The raycast mode，`ANY` by default.\r\n     * @zh\r\n     * 射线检测模式：[0, 1, 2]=>[`ALL`, `CLOSEST`, `ANY`]\r\n     */\r\n    mode: ERaycastMode;\r\n\r\n    /**\r\n     * @en\r\n     * The maximum distance of the raycast, `Infinity` by default.\r\n     * @zh\r\n     * 射线检测的最大距离，默认为`Infinity`。\r\n     */\r\n    distance: number;\r\n\r\n    /**\r\n     * @en\r\n     * An array used to store the results of a ray detection.\r\n     * @zh\r\n     * 用于存储射线检测结果的数组。\r\n     */\r\n    result?: IRaySubMeshResult[];\r\n\r\n    /**\r\n     * @en\r\n     * Whether to detect the double-sided or not，`false` by default.\r\n     * @zh\r\n     * 是否检测双面，默认为`false`。\r\n     */\r\n    doubleSided?: boolean;\r\n}\r\n\r\n/**\r\n * @en\r\n * The optional param structure of the `rayMesh`.\r\n * @zh\r\n * `rayMesh`的可选参数结构。\r\n */\r\nexport interface IRayMeshOptions extends IRaySubMeshOptions {\r\n\r\n    /**\r\n     * @en\r\n     * The index of the sub mesh.\r\n     * @zh\r\n     * 子网格的索引。\r\n     */\r\n    subIndices?: number[];\r\n}\r\n\r\n/**\r\n * @en\r\n * The optional parameter structure of the `rayModel`.\r\n * @zh\r\n * `rayModel`的可选参数结构。\r\n */\r\nexport type IRayModelOptions = IRayMeshOptions\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { replaceProperty } from '../utils/x-deprecated';\r\n\r\nimport intersect from './intersect';\r\nimport { Line } from './line';\r\nimport { Plane } from './plane';\r\nimport { Ray } from './ray';\r\nimport { Triangle } from './triangle';\r\nimport { Sphere } from './sphere';\r\nimport { AABB } from './aabb';\r\nimport { OBB } from './obb';\r\nimport { Capsule } from './capsule';\r\nimport { Frustum } from './frustum';\r\nimport { warn } from '../platform/debug';\r\n\r\nreplaceProperty(intersect, 'intersect', [\r\n    {\r\n        name: 'ray_aabb',\r\n        newName: 'rayAABB',\r\n    },\r\n    {\r\n        name: 'ray_plane',\r\n        newName: 'rayPlane',\r\n    },\r\n    {\r\n        name: 'ray_triangle',\r\n        newName: 'rayTriangle',\r\n    },\r\n    {\r\n        name: 'ray_sphere',\r\n        newName: 'raySphere',\r\n    },\r\n    {\r\n        name: 'ray_obb',\r\n        newName: 'rayOBB',\r\n    },\r\n    {\r\n        name: 'ray_capsule',\r\n        newName: 'rayCapsule',\r\n    },\r\n    {\r\n        name: 'ray_subMesh',\r\n        newName: 'raySubMesh',\r\n    },\r\n    {\r\n        name: 'ray_mesh',\r\n        newName: 'rayMesh',\r\n    },\r\n    {\r\n        name: 'ray_model',\r\n        newName: 'rayModel',\r\n    },\r\n    {\r\n        name: 'line_plane',\r\n        newName: 'linePlane',\r\n    },\r\n    {\r\n        name: 'line_triangle',\r\n        newName: 'lineTriangle',\r\n    },\r\n    {\r\n        name: 'line_aabb',\r\n        newName: 'lineAABB',\r\n    },\r\n    {\r\n        name: 'line_obb',\r\n        newName: 'lineOBB',\r\n    },\r\n    {\r\n        name: 'line_sphere',\r\n        newName: 'lineSphere',\r\n    },\r\n    {\r\n        name: 'aabb_aabb',\r\n        newName: 'aabbWithAABB',\r\n    },\r\n    {\r\n        name: 'aabb_obb',\r\n        newName: 'aabbWithOBB',\r\n    },\r\n    {\r\n        name: 'aabb_plane',\r\n        newName: 'aabbPlane',\r\n    },\r\n    {\r\n        name: 'aabb_frustum',\r\n        newName: 'aabbFrustum',\r\n    },\r\n    {\r\n        name: 'aabbFrustum_accurate',\r\n        newName: 'aabbFrustumAccurate',\r\n    },\r\n    {\r\n        name: 'obb_point',\r\n        newName: 'obbPoint',\r\n    },\r\n    {\r\n        name: 'obb_plane',\r\n        newName: 'obbPlane',\r\n    },\r\n    {\r\n        name: 'obb_frustum',\r\n        newName: 'obbFrustum',\r\n    },\r\n    {\r\n        name: 'obbFrustum_accurate',\r\n        newName: 'obbFrustumAccurate',\r\n    },\r\n    {\r\n        name: 'obb_obb',\r\n        newName: 'obbWithOBB',\r\n    },\r\n    {\r\n        name: 'obb_capsule',\r\n        newName: 'obbCapsule',\r\n    },\r\n    {\r\n        name: 'sphere_plane',\r\n        newName: 'spherePlane',\r\n    },\r\n    {\r\n        name: 'sphere_frustum',\r\n        newName: 'sphereFrustum',\r\n    },\r\n    {\r\n        name: 'sphereFrustum_accurate',\r\n        newName: 'sphereFrustumAccurate',\r\n    },\r\n    {\r\n        name: 'sphere_sphere',\r\n        newName: 'sphereWithSphere',\r\n    },\r\n    {\r\n        name: 'sphere_aabb',\r\n        newName: 'sphereAABB',\r\n    },\r\n    {\r\n        name: 'sphere_obb',\r\n        newName: 'sphereOBB',\r\n    },\r\n    {\r\n        name: 'sphere_capsule',\r\n        newName: 'sphereCapsule',\r\n    },\r\n    {\r\n        name: 'capsule_capsule',\r\n        newName: 'capsuleWithCapsule',\r\n    },\r\n]);\r\n\r\nfunction deprecatedClassMessage (oldClassName: string, newClassName): void {\r\n    warn(`${oldClassName} is deprecated, please use ${newClassName} instead.`);\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.Line]]\r\n * @zh\r\n * [[geometry.Line]] 别名类\r\n *\r\n * @deprecated Since v3.0, please use Line instead\r\n */\r\nexport class line extends Line {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('line', 'Line');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.Plane]]\r\n *\r\n * @zh\r\n * [[geometry.Plane]] 别名类\r\n *\r\n * @deprecated Since v3.0, please use Plane instead\r\n */\r\nexport class plane extends Plane {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('plane', 'Plane');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.Ray]]\r\n * @zh\r\n * [[geometry.Ray]] 别名类\r\n * @deprecated Since v3.0, please use Ray instead\r\n */\r\nexport class ray extends Ray {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('ray', 'Ray');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.Triangle]]\r\n *\r\n * @zh\r\n * [[geometry.Triangle]] 别名类\r\n * @deprecated Since v3.0, please use Triangle instead\r\n */\r\nexport class triangle extends Triangle {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('triangle', 'Triangle');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.Sphere]]\r\n *\r\n * @zh\r\n * [[geometry.Sphere]] 别名类\r\n * @deprecated Since v3.0, please use Sphere instead\r\n */\r\nexport class sphere extends Sphere {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('sphere', 'Sphere');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.AABB]]\r\n *\r\n * @zh\r\n * [[geometry.AABB]] 别名类\r\n * @deprecated Since v3.0, please use AABB instead\r\n */\r\nexport class aabb extends AABB {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('aabb', 'AABB');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.OBB]]\r\n *\r\n * @zh\r\n * [[geometry.OBB]] 别名类\r\n * @deprecated Since v3.0, please use OBB instead\r\n */\r\nexport class obb extends OBB {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('obb', 'OBB');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.Capsule]]\r\n *\r\n * @zh\r\n * [[geometry.Capsule]] 别名类\r\n * @deprecated Since v3.0, please use Capsule instead\r\n */\r\nexport class capsule extends Capsule {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('capsule', 'Capsule');\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Alias of [[geometry.Frustum]]\r\n *\r\n * @zh\r\n * [[geometry.Frustum]] 别名类\r\n * @deprecated Since v3.0, please use Frustum instead\r\n */\r\nexport class frustum extends Frustum {\r\n    constructor () {\r\n        super();\r\n        deprecatedClassMessage('frustum', 'Frustum');\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ISchedulable } from './scheduler';\r\nimport { Enum } from './value-types/enum';\r\n\r\nexport enum SystemPriority {\r\n    LOW = 0,\r\n    MEDIUM = 100,\r\n    HIGH = 200,\r\n    SCHEDULER = (1 << 31) >>> 0,\r\n}\r\n\r\n/**\r\n * @en Base class for all functional system managed by [[Director]].\r\n * @zh 功能系统的基类，由 [[Director]] 管理。\r\n */\r\nexport class System implements ISchedulable {\r\n    static Priority = Enum({\r\n        LOW: SystemPriority.LOW,\r\n        MEDIUM: SystemPriority.MEDIUM,\r\n        HIGH: SystemPriority.HIGH,\r\n        SCHEDULER: SystemPriority.SCHEDULER,\r\n    });\r\n\r\n    protected _id = '';\r\n    protected _priority = 0;\r\n    protected _executeInEditMode = false;\r\n\r\n    set priority (value: number) {\r\n        this._priority = value;\r\n    }\r\n    get priority (): number {\r\n        return this._priority;\r\n    }\r\n\r\n    set id (id: string) {\r\n        this._id = id;\r\n    }\r\n    get id (): string {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @en Sorting between different systems.\r\n     * @zh 不同系统间排序。\r\n     * @param a System a\r\n     * @param b System b\r\n     */\r\n    public static sortByPriority (a: System, b: System): number {\r\n        if (a._priority < b._priority) {\r\n            return 1;\r\n        } else if (a._priority > b.priority) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Init the system, will be invoked by [[Director]] when registered, should be implemented if needed.\r\n     * @zh 系统初始化函数，会在注册时被 [[Director]] 调用，如果需要的话应该由子类实现\r\n     */\r\n    init (): void {}\r\n    /**\r\n     * @en Update function of the system, it will be invoked between all components update phase and late update phase.\r\n     * @zh 系统的帧更新函数，它会在所有组件的 update 和 lateUpdate 之间被调用\r\n     * @param dt Delta time after the last frame\r\n     */\r\n    update (dt: number): void {}\r\n    /**\r\n     * @en Post update function of the system, it will be invoked after all components late update phase and before the rendering process.\r\n     * @zh 系统的帧后处理函数，它会在所有组件的 lateUpdate 之后以及渲染之前被调用\r\n     * @param dt Delta time after the last frame\r\n     */\r\n    postUpdate (dt: number): void {}\r\n\r\n    destroy (): void {}\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { IDGenerator } from './utils/id-generator';\r\nimport { createMap } from './utils/js';\r\nimport { System, SystemPriority } from './system';\r\nimport { legacyCC } from './global-exports';\r\nimport { errorID, warnID, logID, assertID } from './platform/debug';\r\n\r\nconst MAX_POOL_SIZE = 20;\r\n\r\nconst idGenerator = new IDGenerator('Scheduler');\r\n\r\nexport interface ISchedulable {\r\n    id?: string;\r\n    uuid?: string;\r\n    update? (dt: number): void;\r\n}\r\n\r\n// data structures\r\n/**\r\n * @en A list double-linked list used for \"updates with priority\".\r\n * @zh 用于“优先更新”的列表。\r\n * @class ListEntry\r\n * @mangle\r\n */\r\nclass ListEntry {\r\n    public static get (target: ISchedulable, priority: number, paused: boolean, markedForDeletion: boolean): ListEntry {\r\n        let result = ListEntry._listEntries.pop();\r\n        if (result) {\r\n            result.target = target;\r\n            result.priority = priority;\r\n            result.paused = paused;\r\n            result.markedForDeletion = markedForDeletion;\r\n        } else {\r\n            result = new ListEntry(target, priority, paused, markedForDeletion);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static put (entry: ListEntry): void {\r\n        if (ListEntry._listEntries.length < MAX_POOL_SIZE) {\r\n            entry.target = null;\r\n            ListEntry._listEntries.push(entry);\r\n        }\r\n    }\r\n\r\n    private static _listEntries: ListEntry[] = [];\r\n\r\n    public target: ISchedulable | null;\r\n    public priority: number;\r\n    public paused: boolean;\r\n    public markedForDeletion: boolean;\r\n\r\n    /**\r\n     * @en The constructor of ListEntry.\r\n     * @zh ListEntry 的构造函数。\r\n     * @param target\r\n     * @en Target object, which is ISchedulable type, retained by hashUpdateEntry.\r\n     * @zh 目标对象, 为ISchedulable类型. 被hashUpdateEntry持有。\r\n     * @param priority\r\n     * @en The priority.\r\n     * @zh 优先级。\r\n     * @param paused\r\n     * @en Whether is paused.\r\n     * @zh 是否被暂停。\r\n     * @param markedForDeletion\r\n     * @en Mark for deletion. if true, selector will no longer be called and entry will be removed at end of the next tick.\r\n     * @zh 删除标记, 当为true时, selector 将不再被调用，并且entry将在下一个tick结束时被删除。\r\n     */\r\n    constructor (target: ISchedulable, priority: number, paused: boolean, markedForDeletion: boolean) {\r\n        this.target = target;\r\n        this.priority = priority;\r\n        this.paused = paused;\r\n        this.markedForDeletion = markedForDeletion;\r\n    }\r\n}\r\n\r\n/**\r\n * @en The update entry list.\r\n * @zh 更新条目列表。\r\n * @class HashUpdateEntry\r\n * @param list @en Which list does it belong to. @zh 所属的列表。\r\n * @param entry @en Entry in the list. @zh 所述的条目。\r\n * @param target @en Hash key (retained). @zh 哈希键所对应的目标(被持有的)。\r\n * @param callback @en The callback function. @zh 所回调的函数。\r\n * @mangle\r\n */\r\nclass HashUpdateEntry {\r\n    public static get (list: ListEntry[], entry: ListEntry, target: ISchedulable, callback: AnyFunction | null): HashUpdateEntry {\r\n        let result = HashUpdateEntry._hashUpdateEntries.pop();\r\n        if (result) {\r\n            result.list = list;\r\n            result.entry = entry;\r\n            result.target = target;\r\n            result.callback = callback;\r\n        } else {\r\n            result = new HashUpdateEntry(list, entry, target, callback);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static put (entry: HashUpdateEntry): void {\r\n        if (HashUpdateEntry._hashUpdateEntries.length < MAX_POOL_SIZE) {\r\n            entry.list = entry.entry = entry.target = entry.callback = null;\r\n            HashUpdateEntry._hashUpdateEntries.push(entry);\r\n        }\r\n    }\r\n\r\n    private static _hashUpdateEntries: HashUpdateEntry[] = [];\r\n\r\n    public list: ListEntry[] | null;\r\n    public entry: ListEntry | null;\r\n    public target: ISchedulable | null;\r\n    public callback: AnyFunction | null;\r\n\r\n    constructor (list: ListEntry[], entry: ListEntry, target: ISchedulable, callback: AnyFunction | null) {\r\n        this.list = list;\r\n        this.entry = entry;\r\n        this.target = target;\r\n        this.callback = callback;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Hash Element used for \"selectors with interval\".\r\n * @zh “用于间隔选择”的哈希元素。\r\n * @param timers\r\n * @param target  hash key (retained)\r\n * @param timerIndex\r\n * @param currentTimer\r\n * @param currentTimerSalvaged\r\n * @param paused\r\n * @mangle\r\n */\r\nclass HashTimerEntry {\r\n    public static get (timers: CallbackTimer[] | null, target: ISchedulable, timerIndex: number, currentTimer: CallbackTimer | null, currentTimerSalvaged: boolean, paused: boolean): HashTimerEntry {\r\n        let result = HashTimerEntry._hashTimerEntries.pop();\r\n        if (result) {\r\n            result.timers = timers;\r\n            result.target = target;\r\n            result.timerIndex = timerIndex;\r\n            result.currentTimer = currentTimer;\r\n            result.currentTimerSalvaged = currentTimerSalvaged;\r\n            result.paused = paused;\r\n        } else {\r\n            result = new HashTimerEntry(timers, target, timerIndex, currentTimer, currentTimerSalvaged, paused);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static put (entry: HashTimerEntry): void {\r\n        if (HashTimerEntry._hashTimerEntries.length < MAX_POOL_SIZE) {\r\n            entry.timers = entry.target = entry.currentTimer = null;\r\n            HashTimerEntry._hashTimerEntries.push(entry);\r\n        }\r\n    }\r\n\r\n    private static _hashTimerEntries: HashTimerEntry[] = [];\r\n\r\n    public timers: CallbackTimer[] | null;\r\n    public target: ISchedulable | null;\r\n    public timerIndex: number;\r\n    public currentTimer: CallbackTimer | null;\r\n    public currentTimerSalvaged: boolean;\r\n    public paused: boolean;\r\n\r\n    constructor (timers: CallbackTimer[] | null, target: ISchedulable, timerIndex: number, currentTimer: CallbackTimer | null, currentTimerSalvaged: boolean, paused: boolean) {\r\n        this.timers = timers;\r\n        this.target = target;\r\n        this.timerIndex = timerIndex;\r\n        this.currentTimer = currentTimer;\r\n        this.currentTimerSalvaged = currentTimerSalvaged;\r\n        this.paused = paused;\r\n    }\r\n}\r\n\r\ntype CallbackType = (dt?: number) => void;\r\n\r\n/**\r\n * Light weight timer\r\n * @mangle\r\n */\r\nclass CallbackTimer {\r\n    public static _timers: CallbackTimer[] = [];\r\n    public static get (): CallbackTimer { return CallbackTimer._timers.pop() || new CallbackTimer(); }\r\n    public static put (timer: CallbackTimer): void {\r\n        if (CallbackTimer._timers.length < MAX_POOL_SIZE && !timer._lock) {\r\n            timer._scheduler = timer._target = timer._callback = null;\r\n            CallbackTimer._timers.push(timer);\r\n        }\r\n    }\r\n\r\n    private _lock: boolean;\r\n    private _scheduler: Scheduler | null;\r\n    private _elapsed: number;\r\n    private _runForever: boolean;\r\n    private _useDelay: boolean;\r\n    private _timesExecuted: number;\r\n    private _repeat: number;\r\n    private _delay: number;\r\n    private _interval: number;\r\n    private _target: ISchedulable | null;\r\n    private _callback?: CallbackType | null;\r\n\r\n    constructor () {\r\n        this._lock = false;\r\n        this._scheduler = null;\r\n        this._elapsed = -1;\r\n        this._runForever = false;\r\n        this._useDelay = false;\r\n        this._timesExecuted = 0;\r\n        this._repeat = 0;\r\n        this._delay = 0;\r\n        this._interval = 0;\r\n\r\n        this._target = null;\r\n    }\r\n\r\n    public initWithCallback (scheduler: Scheduler, callback: CallbackType, target: ISchedulable, seconds: number, repeat: number, delay: number): boolean {\r\n        this._lock = false;\r\n        this._scheduler = scheduler;\r\n        this._target = target;\r\n        this._callback = callback;\r\n        this._timesExecuted = 0;\r\n\r\n        this._elapsed = -1;\r\n        this._interval = seconds;\r\n        this._delay = delay;\r\n        this._useDelay = (this._delay > 0);\r\n        this._repeat = repeat;\r\n        this._runForever = (this._repeat === legacyCC.macro.REPEAT_FOREVER);\r\n        return true;\r\n    }\r\n    /**\r\n     * @en get interval for timer in seconds.\r\n     * @zh 获取计时器的时间间隔, 以秒为单位。\r\n     * @returns\r\n     * @en returns interval of timer in seconds.\r\n     * @zh 返回计时器的时间间隔, 以秒为单位。\r\n     */\r\n    public getInterval (): number {\r\n        return this._interval;\r\n    }\r\n    /**\r\n     * @en Set interval in seconds.\r\n     * @zh 以秒为单位设置时间间隔。\r\n     */\r\n    public setInterval (interval: number): void {\r\n        this._interval = interval;\r\n    }\r\n\r\n    /**\r\n     * @en Update function which triggers the timer.\r\n     * @zh 计时更新函数，用来触发计时器。\r\n     * @param dt\r\n     * @en delta time. The unit is seconds.\r\n     * @zh 更新间隔时间, 单位是秒。\r\n     */\r\n    public update (dt: number): void {\r\n        if (this._elapsed === -1) {\r\n            this._elapsed = 0;\r\n            this._timesExecuted = 0;\r\n        } else {\r\n            this._elapsed += dt;\r\n            if (this._runForever && !this._useDelay) { // standard timer usage\r\n                if (this._elapsed >= this._interval) {\r\n                    this.trigger();\r\n                    this._elapsed = 0;\r\n                }\r\n            } else { // advanced usage\r\n                if (this._useDelay) {\r\n                    if (this._elapsed >= this._delay) {\r\n                        this.trigger();\r\n\r\n                        this._elapsed -= this._delay;\r\n                        this._timesExecuted += 1;\r\n                        this._useDelay = false;\r\n                    }\r\n                } else if (this._elapsed >= this._interval) {\r\n                    this.trigger();\r\n\r\n                    this._elapsed = 0;\r\n                    this._timesExecuted += 1;\r\n                }\r\n\r\n                if (this._callback && !this._runForever && this._timesExecuted > this._repeat) {\r\n                    this.cancel();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getCallback (): CallbackType | null | undefined {\r\n        return this._callback;\r\n    }\r\n\r\n    public trigger (): void {\r\n        if (this._target && this._callback) {\r\n            this._lock = true;\r\n            this._callback.call(this._target, this._elapsed);\r\n            this._lock = false;\r\n        }\r\n    }\r\n\r\n    public cancel (): void {\r\n        if (this._scheduler && this._callback && this._target) {\r\n            this._scheduler.unscheduleForTimer(this, this._target);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Scheduler is responsible of triggering the scheduled callbacks.<br>\r\n * You should not use NSTimer. Instead use this class.<br>\r\n * <br>\r\n * There are 2 different types of callbacks (selectors):<br>\r\n *     - update callback: the 'update' callback will be called every frame. You can customize the priority.<br>\r\n *     - custom callback: A custom callback will be called every frame, or with a custom interval of time.<br>\r\n * <br>\r\n * The 'custom selectors' should be avoided when possible. It is faster,<br>\r\n * and consumes less memory to use the 'update callback'. *\r\n * @zh\r\n * Scheduler 是负责触发回调函数的类。<br>\r\n * 通常情况下，建议使用 `director.getScheduler()` 来获取系统定时器。<br>\r\n * 有两种不同类型的定时器：<br>\r\n *     - update 定时器：每一帧都会触发。您可以自定义优先级。<br>\r\n *     - 自定义定时器：自定义定时器可以每一帧或者自定义的时间间隔触发。<br>\r\n * 如果希望每帧都触发，应该使用 update 定时器，使用 update 定时器更快，而且消耗更少的内存。\r\n */\r\nexport class Scheduler extends System {\r\n    public static ID = 'scheduler';\r\n\r\n    private _timeScale: number;\r\n    private _updatesNegList: ListEntry[];\r\n    private _updates0List: ListEntry[];\r\n    private _updatesPosList: ListEntry[];\r\n    private _hashForUpdates: Record<string, HashUpdateEntry>;\r\n    private _hashForTimers: Record<string, HashTimerEntry>;\r\n    private _currentTarget: HashTimerEntry | null;\r\n    private _currentTargetSalvaged: boolean;\r\n    private _updateHashLocked: boolean;\r\n    private _arrayForTimers: HashTimerEntry[];\r\n\r\n    /**\r\n     * @en This method should be called for any target which needs to schedule tasks, and this method should be called before any scheduler API usage.\r\n     * This method will add a `id` property if it doesn't exist.\r\n     * @zh 任何需要用 Scheduler 管理任务的对象主体都应该调用这个方法，并且应该在调用任何 Scheduler API 之前调用这个方法。\r\n     * 这个方法会给对象添加一个 `id` 属性，如果这个属性不存在的话。\r\n     * @param target\r\n     * @en The target to enable, which type is ISchedulable.\r\n     * @zh 所作用的对象。类型为ISchedulable。\r\n     */\r\n    public static enableForTarget (target: ISchedulable): void {\r\n        let found = false;\r\n        if (target.uuid) {\r\n            found = true;\r\n        } else if (target.id) {\r\n            found = true;\r\n        }\r\n        if (!found) {\r\n            target.id = idGenerator.getNewId();\r\n        }\r\n    }\r\n\r\n    constructor () {\r\n        super();\r\n        this._timeScale = 1.0;\r\n        this._updatesNegList = [];  // list of priority < 0\r\n        this._updates0List = [];    // list of priority == 0\r\n        this._updatesPosList = [];  // list of priority > 0\r\n        this._hashForUpdates = createMap(true) as Record<string, HashUpdateEntry>;  // hash used to fetch quickly the list entries for pause, delete, etc\r\n        this._hashForTimers = createMap(true) as Record<string, HashTimerEntry>;   // Used for \"selectors with interval\"\r\n        this._currentTarget = null;\r\n        this._currentTargetSalvaged = false;\r\n        this._updateHashLocked = false; // If true unschedule will not remove anything from a hash. Elements will only be marked for deletion.\r\n\r\n        this._arrayForTimers = [];  // Speed up indexing\r\n        // this._arrayForUpdates = [];   // Speed up indexing\r\n    }\r\n\r\n    // -----------------------public method-------------------------\r\n\r\n    /**\r\n     * @en\r\n     * Modifies the time of all scheduled callbacks.<br>\r\n     * You can use this property to create a 'slow motion' or 'fast forward' effect.<br>\r\n     * Default is 1.0. To create a 'slow motion' effect, use values below 1.0.<br>\r\n     * To create a 'fast forward' effect, use values higher than 1.0.<br>\r\n     * Note：It will affect EVERY scheduled selector / action.\r\n     * @zh\r\n     * 设置时间间隔的缩放比例。<br>\r\n     * 您可以使用这个方法来创建一个 “slow motion（慢动作）” 或 “fast forward（快进）” 的效果。<br>\r\n     * 默认是 1.0。要创建一个 “slow motion（慢动作）” 效果,使用值低于 1.0。<br>\r\n     * 要使用 “fast forward（快进）” 效果，使用值大于 1.0。<br>\r\n     * 注意：它影响该 Scheduler 下管理的所有定时器。\r\n     * @param timeScale\r\n     */\r\n    public setTimeScale (timeScale: number): void {\r\n        this._timeScale = timeScale;\r\n    }\r\n\r\n    /**\r\n     * @en Returns time scale of scheduler.\r\n     * @zh 获取时间间隔的缩放比例。\r\n     */\r\n    public getTimeScale (): number {\r\n        return this._timeScale;\r\n    }\r\n\r\n    /**\r\n     * @en 'update' the scheduler. (You should NEVER call this method, unless you know what you are doing.)\r\n     * @zh update 调度函数。(不应该直接调用这个方法，除非完全了解这么做的结果)\r\n     * @param dt\r\n     * @en delta time. The unit is seconds.\r\n     * @zh 更新间隔时间, 单位是秒。\r\n     */\r\n    public update (dt: number): void {\r\n        this._updateHashLocked = true;\r\n        if (this._timeScale !== 1) {\r\n            dt *= this._timeScale;\r\n        }\r\n\r\n        let i: number;\r\n        let list: ListEntry[];\r\n        let len: number;\r\n        let entry: ListEntry;\r\n\r\n        for (i = 0, list = this._updatesNegList, len = list.length; i < len; i++) {\r\n            entry = list[i];\r\n            if (!entry.paused && !entry.markedForDeletion && entry.target) {\r\n                entry.target.update?.(dt);\r\n            }\r\n        }\r\n\r\n        for (i = 0, list = this._updates0List, len = list.length; i < len; i++) {\r\n            entry = list[i];\r\n            if (!entry.paused && !entry.markedForDeletion && entry.target) {\r\n                entry.target.update?.(dt);\r\n            }\r\n        }\r\n\r\n        for (i = 0, list = this._updatesPosList, len = list.length; i < len; i++) {\r\n            entry = list[i];\r\n            if (!entry.paused && !entry.markedForDeletion && entry.target) {\r\n                entry.target.update?.(dt);\r\n            }\r\n        }\r\n\r\n        // Iterate over all the custom selectors\r\n        let elt: HashTimerEntry;\r\n        const arr = this._arrayForTimers;\r\n        for (i = 0; i < arr.length; i++) {\r\n            elt = arr[i];\r\n            this._currentTarget = elt;\r\n            this._currentTargetSalvaged = false;\r\n\r\n            if (!elt.paused && elt.timers) {\r\n                // The 'timers' array may change while inside this loop\r\n                for (elt.timerIndex = 0; elt.timerIndex < elt.timers.length; ++(elt.timerIndex)) {\r\n                    elt.currentTimer = elt.timers[elt.timerIndex];\r\n                    elt.currentTimerSalvaged = false;\r\n\r\n                    elt.currentTimer.update(dt);\r\n                    elt.currentTimer = null;\r\n                }\r\n            }\r\n\r\n            // only delete currentTarget if no actions were scheduled during the cycle (issue #481)\r\n            if (this._currentTargetSalvaged && this._currentTarget.timers?.length === 0) {\r\n                this._removeHashElement(this._currentTarget);\r\n                --i;\r\n            }\r\n        }\r\n\r\n        // delete all updates that are marked for deletion\r\n        // updates with priority < 0\r\n        for (i = 0, list = this._updatesNegList; i < list.length;) {\r\n            entry = list[i];\r\n            if (entry.markedForDeletion) {\r\n                this._removeUpdateFromHash(entry);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        for (i = 0, list = this._updates0List; i < list.length;) {\r\n            entry = list[i];\r\n            if (entry.markedForDeletion) {\r\n                this._removeUpdateFromHash(entry);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        for (i = 0, list = this._updatesPosList; i < list.length;) {\r\n            entry = list[i];\r\n            if (entry.markedForDeletion) {\r\n                this._removeUpdateFromHash(entry);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        this._updateHashLocked = false;\r\n        this._currentTarget = null;\r\n    }\r\n\r\n    /**\r\n     * @en Specify the callback to schedule a new timer.\r\n     * If the callback function is already scheduled, then only the interval parameter will be updated without re-scheduling it again.\r\n     * @zh 指定回调函数来规划一个新的定时器。\r\n     * 如果回调函数已经被定时器使用，那么只会更新之前定时器的时间间隔参数，不会设置新的定时器。\r\n     * @param callback\r\n     * @en The specified target.\r\n     * @zh 所指定的调用对象。\r\n     * @param target\r\n     * @en The scheduled method will be called every 'interval' seconds.\r\n     * If 'interval' is 0, it will be called every frame, but if so, it recommended to use 'scheduleUpdateForTarget:' instead.\r\n     * @zh 当时间间隔达到指定值时，设置的回调函数将会被调用。\r\n     * 如果 interval 值为 0，那么回调函数每一帧都会被调用，但如果是这样，建议使用 scheduleUpdateForTarget 代替。\r\n     * @param interval\r\n     * @en repeat let the action be repeated repeat + 1 times, use `macro.REPEAT_FOREVER` to let the action run continuously.\r\n     * @zh repeat 值可以让定时器触发 repeat + 1 次，使用 `macro.REPEAT_FOREVER` 可以让定时器一直循环触发。\r\n     * @param repeat\r\n     * @en delay is the amount of time the action will wait before it'll start. Unit: s.\r\n     * @zh delay 值指定延迟时间，定时器会在延迟指定的时间之后开始计时，单位: 秒。\r\n     * @param delay\r\n     * @en If paused is YES, then it won't be called until it is resumed.\r\n     * @zh 如果 paused 值为 true，那么直到 resume 被调用才开始计时。\r\n     * @param paused\r\n     */\r\n    public schedule (callback: CallbackType, target: ISchedulable, interval: number, repeat?: number, delay?: number, paused?: boolean): void;\r\n    /**\r\n     * @en The specified target.\r\n     * @zh 所指定的调用对象。\r\n     * @param target\r\n     * @en Specify the callback to schedule a new timer.\r\n     * If the callback function is already scheduled, then only the interval parameter will be updated without re-scheduling it again.\r\n     * @zh 指定回调函数来规划一个新的定时器。\r\n     * 如果回调函数已经被定时器使用，那么只会更新之前定时器的时间间隔参数，不会设置新的定时器。\r\n     * @param callback\r\n     * @en The scheduled method will be called every 'interval' seconds.\r\n     * If 'interval' is 0, it will be called every frame, but if so, it recommended to use 'scheduleUpdateForTarget:' instead.\r\n     * @zh 当时间间隔达到指定值时，设置的回调函数将会被调用。\r\n     * 如果 interval 值为 0，那么回调函数每一帧都会被调用，但如果是这样，建议使用 scheduleUpdateForTarget 代替。\r\n     * @param interval\r\n     * @en repeat let the action be repeated repeat + 1 times, use `macro.REPEAT_FOREVER` to let the action run continuously.\r\n     * @zh repeat 值可以让定时器触发 repeat + 1 次，使用 `macro.REPEAT_FOREVER` 可以让定时器一直循环触发。\r\n     * @param repeat\r\n     * @en delay is the amount of time the action will wait before it'll start. Unit: s.\r\n     * @zh delay 值指定延迟时间，定时器会在延迟指定的时间之后开始计时，单位: 秒。\r\n     * @param delay\r\n     * @en If paused is YES, then it won't be called until it is resumed.\r\n     * @zh 如果 paused 值为 true，那么直到 resume 被调用才开始计时。\r\n     * @param paused\r\n     *\r\n     * @deprecated since v3.8.0, please use `Scheduler.schedule(callback, target, interval)` instead.\r\n     */\r\n    public schedule (target: ISchedulable, callback: CallbackType, interval: number, repeat?: number, delay?: number, paused?: boolean): void;\r\n    public schedule (callbackTmp: CallbackType | ISchedulable, targetTmp: ISchedulable | CallbackType, interval: number, repeat?: number, delay?: number, paused?: boolean): void {\r\n        let callback: CallbackType;\r\n        let target: ISchedulable;\r\n        if (typeof callbackTmp !== 'function') {\r\n            warnID(1514);\r\n            callback = targetTmp as CallbackType;\r\n            target = callbackTmp;\r\n        } else {\r\n            callback = callbackTmp;\r\n            target = targetTmp as ISchedulable;\r\n        }\r\n        // selector, target, interval, repeat, delay, paused\r\n        // selector, target, interval, paused\r\n        if (arguments.length === 3 || arguments.length === 4 || arguments.length === 5) {\r\n            paused = !!repeat;\r\n            repeat = legacyCC.macro.REPEAT_FOREVER;\r\n            delay = 0;\r\n        }\r\n\r\n        assertID(Boolean(target), 1502);\r\n\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return;\r\n        }\r\n        let element = this._hashForTimers[targetId];\r\n        if (!element) {\r\n            // Is this the 1st element ? Then set the pause level to all the callback_fns of this target\r\n            element = HashTimerEntry.get(null, target, 0, null, false, Boolean(paused));\r\n            this._arrayForTimers.push(element);\r\n            this._hashForTimers[targetId] = element;\r\n        } else if (element.paused !== paused) {\r\n            warnID(1511);\r\n        }\r\n\r\n        let timer: CallbackTimer;\r\n        let i;\r\n        if (element.timers == null) {\r\n            element.timers = [];\r\n        } else {\r\n            for (i = 0; i < element.timers.length; ++i) {\r\n                timer = element.timers[i];\r\n                if (timer && callback === timer.getCallback()) {\r\n                    logID(1507, timer.getInterval(), interval);\r\n                    timer.setInterval(interval);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        timer = CallbackTimer.get();\r\n        timer.initWithCallback(this, callback, target, interval, repeat ?? 0, delay ?? 0);\r\n        element.timers.push(timer);\r\n\r\n        if (this._currentTarget === element && this._currentTargetSalvaged) {\r\n            this._currentTargetSalvaged = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Schedules the update callback for a given target,\r\n     * During every frame after schedule started, the \"update\" function of target will be invoked.\r\n     * @zh\r\n     * 使用指定的优先级为指定的对象设置 update 定时器。<br>\r\n     * update 定时器每一帧都会被触发，触发时自动调用指定对象的 \"update\" 函数。<br>\r\n     * 优先级的值越低，定时器被触发的越早。\r\n     * @param target\r\n     * @en The target bound to the callback. @zh 回调所绑定的目标对象。\r\n     * @param priority\r\n     * @en The priority. @zh 优先级。\r\n     * @param paused\r\n     * @en Whether is paused. @zh 是否被暂停。\r\n     */\r\n    public scheduleUpdate (target: ISchedulable, priority: number, paused: boolean): void {\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return;\r\n        }\r\n        const hashElement = this._hashForUpdates[targetId];\r\n        if (hashElement && hashElement.entry) {\r\n            // check if priority has changed\r\n            if (hashElement.entry.priority !== priority) {\r\n                if (this._updateHashLocked) {\r\n                    logID(1506);\r\n                    hashElement.entry.markedForDeletion = false;\r\n                    hashElement.entry.paused = paused;\r\n                    return;\r\n                } else {\r\n                    // will be added again outside if (hashElement).\r\n                    this.unscheduleUpdate(target);\r\n                }\r\n            } else {\r\n                hashElement.entry.markedForDeletion = false;\r\n                hashElement.entry.paused = paused;\r\n                return;\r\n            }\r\n        }\r\n\r\n        const listElement = ListEntry.get(target, priority, paused, false);\r\n        let ppList: ListEntry[];\r\n\r\n        // most of the updates are going to be 0, that's way there\r\n        // is an special list for updates with priority 0\r\n        if (priority === 0) {\r\n            ppList = this._updates0List;\r\n            this._appendIn(ppList, listElement);\r\n        } else {\r\n            ppList = priority < 0 ? this._updatesNegList : this._updatesPosList;\r\n            this._priorityIn(ppList, listElement, priority);\r\n        }\r\n\r\n        // update hash entry for quick access\r\n        this._hashForUpdates[targetId] = HashUpdateEntry.get(ppList, listElement, target, null);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Unschedule a callback for a callback and a given target.\r\n     * If you want to unschedule the \"update\", use `unscheduleUpdate()`\r\n     * @zh\r\n     * 取消指定对象定时器。\r\n     * 如果需要取消 update 定时器，请使用 unscheduleUpdate()。\r\n     * @param callback @en The callback to be unscheduled @zh 被取消调度的回调。\r\n     * @param target @en The target bound to the callback. @zh 回调所绑定的目标对象。\r\n     */\r\n    public unschedule (callback: AnyFunction, target: ISchedulable): void {\r\n        // callback, target\r\n\r\n        // explicity handle nil arguments when removing an object\r\n        if (!target || !callback) {\r\n            return;\r\n        }\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return;\r\n        }\r\n\r\n        const element = this._hashForTimers[targetId];\r\n        if (element) {\r\n            const timers = element.timers;\r\n            if (!timers) {\r\n                return;\r\n            }\r\n            for (let i = 0, li = timers.length; i < li; i++) {\r\n                const timer = timers[i];\r\n                if (callback === timer.getCallback()) {\r\n                    if ((timer === element.currentTimer) && (!element.currentTimerSalvaged)) {\r\n                        element.currentTimerSalvaged = true;\r\n                    }\r\n                    timers.splice(i, 1);\r\n                    CallbackTimer.put(timer);\r\n                    // update timerIndex in case we are in tick;, looping over the actions\r\n                    if (element.timerIndex >= i) {\r\n                        element.timerIndex--;\r\n                    }\r\n\r\n                    if (timers.length === 0) {\r\n                        if (this._currentTarget === element) {\r\n                            this._currentTargetSalvaged = true;\r\n                        } else {\r\n                            this._removeHashElement(element);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Unschedule a timer. It is invoked by CallbackTimer when a timer is finished.\r\n     * @param timerToUnschedule The timer to be unscheduled.\r\n     * @param target The target of the timer.\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public unscheduleForTimer (timerToUnschedule: CallbackTimer, target: ISchedulable): void {\r\n        const targetId = (target.uuid || target.id) as string;\r\n        const element = this._hashForTimers[targetId];\r\n        const timers = element.timers;\r\n        if (!timers || timers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (let i = timers.length - 1; i >= 0; i--) {\r\n            const timer = timers[i];\r\n            if (timer === timerToUnschedule) {\r\n                timers.splice(i, 1);\r\n                CallbackTimer.put(timer);\r\n\r\n                // update timerIndex in case we are in tick;, looping over the actions\r\n                if (element.timerIndex >= i) {\r\n                    element.timerIndex--;\r\n                }\r\n\r\n                if (timers.length === 0) {\r\n                    this._currentTargetSalvaged = true;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Unschedule the update callback for a given target.\r\n     * @zh 取消指定对象的 update 定时器。\r\n     * @param target The target to be unscheduled.\r\n     */\r\n    public unscheduleUpdate (target: ISchedulable): void {\r\n        if (!target) {\r\n            return;\r\n        }\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return;\r\n        }\r\n\r\n        const element = this._hashForUpdates[targetId];\r\n        if (element?.entry) {\r\n            if (this._updateHashLocked) {\r\n                element.entry.markedForDeletion = true;\r\n            } else {\r\n                this._removeUpdateFromHash(element.entry);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Unschedule all scheduled callbacks for a given target.\r\n     * This also includes the \"update\" callback.\r\n     * @zh 取消指定对象的所有定时器，包括 update 定时器。\r\n     * @param target The target to be unscheduled.\r\n     */\r\n    public unscheduleAllForTarget (target: ISchedulable): void {\r\n        // explicit nullptr handling\r\n        if (!target) {\r\n            return;\r\n        }\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return;\r\n        }\r\n\r\n        // Custom Selectors\r\n        const element = this._hashForTimers[targetId];\r\n        if (element?.timers) {\r\n            const timers = element.timers;\r\n            if (element.currentTimer && timers.indexOf(element.currentTimer) > -1\r\n                && (!element.currentTimerSalvaged)) {\r\n                element.currentTimerSalvaged = true;\r\n            }\r\n            for (let i = 0, l = timers.length; i < l; i++) {\r\n                CallbackTimer.put(timers[i]);\r\n            }\r\n            timers.length = 0;\r\n\r\n            if (this._currentTarget === element) {\r\n                this._currentTargetSalvaged = true;\r\n            } else {\r\n                this._removeHashElement(element);\r\n            }\r\n        }\r\n\r\n        // update selector\r\n        this.unscheduleUpdate(target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Unschedule all scheduled callbacks from all targets including the system callbacks.\r\n     * You should NEVER call this method, unless you know what you are doing.\r\n     * @zh\r\n     * 取消所有对象的所有定时器，包括系统定时器。\r\n     * 不要调用此函数，除非你确定你在做什么。\r\n     */\r\n    public unscheduleAll (): void {\r\n        this.unscheduleAllWithMinPriority(SystemPriority.SCHEDULER);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Unschedule all callbacks from all targets with a minimum priority.\r\n     * You should only call this with `PRIORITY_NON_SYSTEM_MIN` or higher.\r\n     * @zh\r\n     * 取消所有优先级的值大于指定优先级的定时器。\r\n     * 你应该只取消优先级的值大于 PRIORITY_NON_SYSTEM_MIN 的定时器。\r\n     * @param minPriority\r\n     * @en The minimum priority of selector to be unscheduled.\r\n     * Which means, all selectors which priority is higher than minPriority will be unscheduled.\r\n     * @zh 要取消调度的选择器的最低优先级。\r\n     * 这意味着，所有优先级高于 minPriority 的选择器将被取消调度。\r\n     */\r\n    public unscheduleAllWithMinPriority (minPriority: number): void {\r\n        // Custom Selectors\r\n        let i: number;\r\n        let element: HashTimerEntry;\r\n        const arr = this._arrayForTimers;\r\n        for (i = arr.length - 1; i >= 0; i--) {\r\n            element = arr[i];\r\n            if (element.target) {\r\n                this.unscheduleAllForTarget(element.target);\r\n            }\r\n        }\r\n\r\n        // Updates selectors\r\n        let entry: ListEntry;\r\n        let temp_length = 0;\r\n        if (minPriority < 0) {\r\n            for (i = 0; i < this._updatesNegList.length;) {\r\n                temp_length = this._updatesNegList.length;\r\n                entry = this._updatesNegList[i];\r\n                if (entry?.target && entry.priority >= minPriority) {\r\n                    this.unscheduleUpdate(entry.target);\r\n                }\r\n                if (temp_length === this._updatesNegList.length) {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (minPriority <= 0) {\r\n            for (i = 0; i < this._updates0List.length;) {\r\n                temp_length = this._updates0List.length;\r\n                entry = this._updates0List[i];\r\n                if (entry?.target) {\r\n                    this.unscheduleUpdate(entry.target);\r\n                }\r\n                if (temp_length === this._updates0List.length) {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < this._updatesPosList.length;) {\r\n            temp_length = this._updatesPosList.length;\r\n            entry = this._updatesPosList[i];\r\n            if (entry?.target && entry.priority >= minPriority) {\r\n                this.unscheduleUpdate(entry.target);\r\n            }\r\n            if (temp_length === this._updatesPosList.length) {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Checks whether a callback for a given target is scheduled.\r\n     * @zh 检查指定的回调函数和回调对象组合是否存在定时器。\r\n     * @param callback @en The callback to check. @zh 指定检测的回调。\r\n     * @param target @en The target of the callback. @zh 回调的目标对象。\r\n     * @returns @en True if the specified callback is invoked, false if not. @zh 返回true如果指定回调被调用, 否则返回false。\r\n     */\r\n    public isScheduled (callback: AnyFunction, target: ISchedulable): boolean {\r\n        // key, target\r\n        // selector, target\r\n        assertID(Boolean(callback), 1508);\r\n        assertID(Boolean(target), 1509);\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return false;\r\n        }\r\n\r\n        const element = this._hashForTimers[targetId];\r\n\r\n        if (!element) {\r\n            return false;\r\n        }\r\n\r\n        if (element.timers == null) {\r\n            return false;\r\n        } else {\r\n            const timers = element.timers;\r\n\r\n            for (let i = 0; i < timers.length; ++i) {\r\n                const timer =  timers[i];\r\n                if (callback === timer.getCallback()) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pause all selectors from all targets.\r\n     * You should NEVER call this method, unless you know what you are doing.\r\n     * @zh\r\n     * 暂停所有对象的所有定时器。\r\n     * 不要调用这个方法，除非你知道你正在做什么。\r\n     */\r\n    public pauseAllTargets (): ISchedulable[] {\r\n        return this.pauseAllTargetsWithMinPriority(SystemPriority.SCHEDULER);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pause all selectors from all targets with a minimum priority.\r\n     * You should only call this with kCCPriorityNonSystemMin or higher.\r\n     * @zh\r\n     * 暂停所有优先级的值大于指定优先级的定时器。\r\n     * 你应该只暂停优先级的值大于 PRIORITY_NON_SYSTEM_MIN 的定时器。\r\n     * @param minPriority @en the minimum priority. @zn 最小优先级。\r\n     */\r\n    public pauseAllTargetsWithMinPriority (minPriority: number): ISchedulable[] {\r\n        const idsWithSelectors: ISchedulable[] = [];\r\n\r\n        let element: HashTimerEntry;\r\n        const locArrayForTimers = this._arrayForTimers;\r\n        let i;\r\n        let li;\r\n        // Custom Selectors\r\n        for (i = 0, li = locArrayForTimers.length; i < li; i++) {\r\n            element = locArrayForTimers[i];\r\n            if (element?.target) {\r\n                element.paused = true;\r\n                idsWithSelectors.push(element.target);\r\n            }\r\n        }\r\n\r\n        let entry: ListEntry;\r\n        if (minPriority < 0) {\r\n            for (i = 0; i < this._updatesNegList.length; i++) {\r\n                entry = this._updatesNegList[i];\r\n                if (entry?.target) {\r\n                    if (entry.priority >= minPriority) {\r\n                        entry.paused = true;\r\n                        idsWithSelectors.push(entry.target);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (minPriority <= 0) {\r\n            for (i = 0; i < this._updates0List.length; i++) {\r\n                entry = this._updates0List[i];\r\n                if (entry?.target) {\r\n                    entry.paused = true;\r\n                    idsWithSelectors.push(entry.target);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < this._updatesPosList.length; i++) {\r\n            entry = this._updatesPosList[i];\r\n            if (entry?.target) {\r\n                if (entry.priority >= minPriority) {\r\n                    entry.paused = true;\r\n                    idsWithSelectors.push(entry.target);\r\n                }\r\n            }\r\n        }\r\n\r\n        return idsWithSelectors;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Resume selectors on a set of targets.<br/>\r\n     * This can be useful for undoing a call to pauseAllCallbacks.\r\n     * @zh\r\n     * 恢复指定数组中所有对象的定时器。<br/>\r\n     * 这个函数是 pauseAllCallbacks 的逆操作。\r\n     * @param targetsToResume\r\n     */\r\n    public resumeTargets (targetsToResume: ISchedulable[]): void {\r\n        if (!targetsToResume) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < targetsToResume.length; i++) {\r\n            this.resumeTarget(targetsToResume[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pauses the target.<br/>\r\n     * All scheduled selectors/update for a given target won't be 'ticked' until the target is resumed.<br/>\r\n     * If the target is not present, nothing happens.\r\n     * @zh\r\n     * 暂停指定对象的定时器。<br/>\r\n     * 指定对象的所有定时器都会被暂停。<br/>\r\n     * 如果指定的对象没有定时器，什么也不会发生。\r\n     * @param target\r\n     */\r\n    public pauseTarget (target: ISchedulable): void {\r\n        assertID(Boolean(target), 1503);\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return;\r\n        }\r\n\r\n        // customer selectors\r\n        const element = this._hashForTimers[targetId];\r\n        if (element) {\r\n            element.paused = true;\r\n        }\r\n\r\n        // update callback\r\n        const elementUpdate = this._hashForUpdates[targetId];\r\n        if (elementUpdate?.entry) {\r\n            elementUpdate.entry.paused = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Resumes the target.<br/>\r\n     * The 'target' will be unpaused, so all schedule selectors/update will be 'ticked' again.<br/>\r\n     * If the target is not present, nothing happens.\r\n     * @zh\r\n     * 恢复指定对象的所有定时器。<br/>\r\n     * 指定对象的所有定时器将继续工作。<br/>\r\n     * 如果指定的对象没有定时器，什么也不会发生。\r\n     * @param target\r\n     */\r\n    public resumeTarget (target: ISchedulable): void {\r\n        assertID(Boolean(target), 1504);\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return;\r\n        }\r\n\r\n        // custom selectors\r\n        const element = this._hashForTimers[targetId];\r\n        if (element) {\r\n            element.paused = false;\r\n        }\r\n\r\n        // update callback\r\n        const elementUpdate = this._hashForUpdates[targetId];\r\n        if (elementUpdate?.entry) {\r\n            elementUpdate.entry.paused = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether or not the target is paused.\r\n     * @zh 返回指定对象的定时器是否处于暂停状态。\r\n     * @param target\r\n     */\r\n    public isTargetPaused (target: ISchedulable): boolean {\r\n        assertID(Boolean(target), 1505);\r\n        const targetId = target.uuid || target.id;\r\n        if (!targetId) {\r\n            errorID(1510);\r\n            return false;\r\n        }\r\n\r\n        // Custom selectors\r\n        const element = this._hashForTimers[targetId];\r\n        if (element) {\r\n            return element.paused;\r\n        }\r\n        const elementUpdate = this._hashForUpdates[targetId];\r\n        if (elementUpdate?.entry) {\r\n            return elementUpdate.entry.paused;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // -----------------------private method----------------------\r\n    private _removeHashElement (element: HashTimerEntry): void {\r\n        if (!element.target) {\r\n            return;\r\n        }\r\n        const targetId = element.target.uuid || element.target.id;\r\n        if (typeof targetId === 'undefined') {\r\n            return;\r\n        }\r\n        delete this._hashForTimers[targetId];\r\n        const arr = this._arrayForTimers;\r\n        for (let i = 0, l = arr.length; i < l; i++) {\r\n            if (arr[i] === element) {\r\n                arr.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        HashTimerEntry.put(element);\r\n    }\r\n\r\n    private _removeUpdateFromHash (entry: ListEntry): void {\r\n        if (!entry.target) {\r\n            return;\r\n        }\r\n        const targetId = entry.target.uuid || entry.target.id;\r\n        if (typeof targetId === 'undefined') {\r\n            return;\r\n        }\r\n        const element = this._hashForUpdates[targetId];\r\n        if (element) {\r\n            // Remove list entry from list\r\n            const list = element.list;\r\n            const listEntry = element.entry;\r\n            if (list) {\r\n                for (let i = 0, l = list.length; i < l; i++) {\r\n                    if (list[i] === listEntry) {\r\n                        list.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            delete this._hashForUpdates[targetId];\r\n            if (listEntry) {\r\n                ListEntry.put(listEntry);\r\n            }\r\n            HashUpdateEntry.put(element);\r\n        }\r\n    }\r\n\r\n    private _priorityIn (ppList: ListEntry[], listElement: ListEntry, priority: number): void {\r\n        for (let i = 0; i < ppList.length; i++) {\r\n            if (priority < ppList[i].priority) {\r\n                ppList.splice(i, 0, listElement);\r\n                return;\r\n            }\r\n        }\r\n        ppList.push(listElement);\r\n    }\r\n\r\n    private _appendIn (ppList: ListEntry[], listElement: ListEntry): void {\r\n        ppList.push(listElement);\r\n    }\r\n}\r\n\r\nlegacyCC.Scheduler = Scheduler;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { replaceProperty, removeProperty } from './utils/x-deprecated';\r\nimport * as math from './math';\r\nimport { Scheduler } from './scheduler';\r\nimport { legacyCC } from './global-exports';\r\n\r\nimport { SystemPriority } from './system';\r\n\r\n// VMATH\r\n\r\nconst vmath = {};\r\nreplaceProperty(vmath, 'vmath', [\r\n    {\r\n        name: 'vec2',\r\n        newName: 'Vec2',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'vec3',\r\n        newName: 'Vec3',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'vec4',\r\n        newName: 'Vec4',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'quat',\r\n        newName: 'Quat',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'mat3',\r\n        newName: 'Mat3',\r\n        target: math,\r\n        targetName: 'math',\r\n    },    {\r\n        name: 'mat4',\r\n        newName: 'Mat4',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'color4',\r\n        newName: 'Color',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'rect',\r\n        newName: 'Rect',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'approx',\r\n        newName: 'approx',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'EPSILON',\r\n        newName: 'EPSILON',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'equals',\r\n        newName: 'equals',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'clamp',\r\n        newName: 'clamp',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'clamp01',\r\n        newName: 'clamp01',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'lerp',\r\n        newName: 'lerp',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'toRadian',\r\n        newName: 'toRadian',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'toDegree',\r\n        newName: 'toDegree',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'random',\r\n        newName: 'random',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'randomRange',\r\n        newName: 'randomRange',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'randomRangeInt',\r\n        newName: 'randomRangeInt',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'pseudoRandom',\r\n        newName: 'pseudoRandom',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'pseudoRandomRangeInt',\r\n        newName: 'pseudoRandomRangeInt',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'nextPow2',\r\n        newName: 'nextPow2',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'repeat',\r\n        newName: 'repeat',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'pingPong',\r\n        newName: 'pingPong',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n    {\r\n        name: 'inverseLerp',\r\n        newName: 'inverseLerp',\r\n        target: math,\r\n        targetName: 'math',\r\n    },\r\n]);\r\n\r\nlegacyCC.vmath = vmath;\r\n\r\nexport { vmath };\r\n\r\n// Scheduler\r\n\r\nreplaceProperty(Scheduler.prototype, 'Scheduler.prototype', [\r\n    {\r\n        name: 'enableForTarget',\r\n        newName: 'enableForTarget',\r\n        target: Scheduler,\r\n        targetName: 'Scheduler',\r\n    },\r\n]);\r\n\r\n// replace Scheduler static property\r\nreplaceProperty(Scheduler, 'Scheduler', [\r\n    {\r\n        name: 'PRIORITY_SYSTEM',\r\n        newName: 'System.Priority.SCHEDULER',\r\n        customGetter (): number {\r\n            return SystemPriority.SCHEDULER;\r\n        },\r\n    },\r\n]);\r\n\r\n// remove Scheduler static property\r\nremoveProperty(Scheduler, 'Scheduler', [\r\n    {\r\n        name: 'PRIORITY_NON_SYSTEM',\r\n        suggest: 'Use enum` System.Priority` instead',\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { js, markAsWarning } from './utils';\r\n\r\nmarkAsWarning(js, 'js', [\r\n    {\r\n        name: 'js',\r\n        suggest: `'js.js' is deprecated since v3.7.0, please access 'js' directly instead.`,\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { legacyCC } from '../global-exports';\r\nimport * as easing from './easing';\r\n\r\nexport * from './murmurhash2_gc';\r\n\r\nexport { easing };\r\nlegacyCC.easing = easing;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { legacyCC, VERSION } from './global-exports';\r\nimport * as geometry from './geometry';\r\nimport * as math from './math';\r\nimport * as memop from './memop';\r\nimport './deprecated';\r\nimport './deprecated-3.7.0';\r\n\r\nlegacyCC.math = math;\r\nlegacyCC.geometry = geometry;\r\n\r\nexport { math, memop, geometry, VERSION };\r\n\r\nexport * from './math';\r\nexport * from './memop';\r\nexport * from './value-types';\r\nexport * from './utils';\r\nexport * from './data';\r\nexport * from './event';\r\nexport * from './platform';\r\nexport * from './scheduler';\r\nexport * from './curves';\r\nexport * from './settings';\r\nexport * from './system';\r\nexport * from './algorithm';\r\nexport { cclegacy } from './global-exports';\r\nexport * from './curves/bezier';\r\n\r\n// TODO: should not include engine internal exports when module mechanism is implemented.\r\nexport * from './internal-index';\r\n"],"names":["array","value","binarySearchEpsilon","lessThan","low","high","length","middle","test","times","defaultLogTimes","checkList","_step","_iterator","_createForOfIteratorHelperLoose","done","_checkObsoleteByName","ccNamespace","_cachedProxy","Proxy","get","target","name","receiver","Reflect","constructor","sMetadataTag","rgb","maxComp","Math","max","x","y","z","e","log","clamp","ceil","sc","pow","encode","clampVec3","multiplyScalar","Vec3","a","b","encode_rounded","floorVec3","add","subtract","Vec4","replaceProperty","removeProperty","markAsWarning","replacePropertyLog","markAsWarningLog","removePropertyLog","editorExtrasTag","exports","messageID","messageMap","Map","n","dp","n2","newp","f","id","s","item","logTimes","count","owner","ownerName","properties","forEach","set","undefined","newName","targetName","sameTarget","suggest","customFunction","_ref","warn","call","apply","this","arguments","customSetter","customGetter","hasSetter","hasGetter","Object","defineProperty","v","enumerable","error","_defaultGetSet","d","oldGet","oldSet","deprecatedProp","descriptor","getOwnPropertyDescriptor","configurable","oldValue","writable","topLevelDeprecateList","deprecateModuleExportedName","deprecateList","deprecateName","deprecateInfo","checkName","since","removed","errorID","warnID","mathAbs","abs","mathFloor","floor","PI","_d2r","_r2d","_random","random","HALF_PI","TWO_PI","EPSILON","equals","approx","maxDiff","val","min","temp","clamp01","lerp","from","to","ratio","toRadian","toDegree","setRandGenerator","func","randomRange","randomRangeInt","pseudoRandom","seed","pseudoRandomRange","pseudoRandomRangeInt","nextPow2","bits","repeat","t","pingPong","inverseLerp","absMaxComponent","absMax","enumerableProps","prototype","attrs","key","floatView","int32View","toHalf","Float32Array","Int32Array","buffer","fval","fbits","em","h","fromHalf","hval","floatToHalf","halfToFloat","sin","cos","atan2","sqrt","round","freezeVec4","w","freeze","_ValueType","_this","_inheritsLoose","clone","copy","out","fromColor","color","r","g","angle","dx","dy","dz","dotVal","multiply","divide","scaleAndAdd","scale","distance","squaredDistance","len","lengthSqr","negate","inverse","inverseSafe","normalize","dot","phi","cosTheta","sinTheta","transformMat4","m","m00","m04","m08","m12","m01","m05","m09","m13","m02","m06","m10","m14","m03","m07","m11","m15","transformAffine","transformQuat","q","_x","_y","_z","_w","ix","iy","iz","iw","toArray","ofs","fromArray","arr","strictEquals","epsilon","inf","Infinity","_proto","other","self","equals4f","strictEquals4f","toString","clampf","minInclusive","maxInclusive","add4f","subtract4f","scalar","multiply4f","divide4f","negative","vector","cross","ax","ay","az","bx","by","bz","matrix","ValueType","v4","ZERO","ONE","NEG_ONE","UNIT_X","UNIT_Y","UNIT_Z","UNIT_W","CCClass","fastDefine","legacyCC","acos","freezeVec3","cacheV1","cacheV2","cacheV3","cacheCross","zero","invert","invertSafe","rhw","transformMat4Normal","transformMat3","transformRTS","transformInverseRTS","rotateX","o","c","rx","ry","rz","rotateY","rotateZ","rotateN","nx","ny","nz","a0","a1","a2","b0","b1","b2","magSqr1","magSqr2","cosine","projectOnPlane","project","sqrLen","moveTowards","current","maxStep","deltaX","deltaY","deltaZ","distanceSqr","generateOrthogonal","absX","absY","absZ","equals3f","strictEquals3f","add3f","subtract3f","multiply3f","divide3f","toVec2","Vec2","v3","_class","RIGHT","UP","FORWARD","slerp","lenFrom","lenTo","lenLerped","fromNormalized","axis","rotateAxisAngle","dotClamped","theta","toNormalized","signedAngle","normal","cacheQ","input","rad","toFloat","mathMax","freezeColor","Color","_data","Uint8ClampedArray","fromHEX","toVec4","sourceData","fromVec4","outData","hex","hexNumber","substring","Number","fromR","fromG","fromB","fromA","fromUint32","uint32","toUint32","ret","otherColor","thisData","toFixed","toCSS","opt","toHEX","fmt","prefix","push","join","toRGBValue","fromHSV","i","p","assertIsTrue","toHSV","hsv","delta","_other$r","_other$g","_other$b","_other$a","getModifiableProperties","_createClass","red","green","blue","alpha","WHITE","GRAY","BLACK","TRANSPARENT","RED","GREEN","BLUE","CYAN","MAGENTA","YELLOW","Mat3","_assertThisInitialized","identity","transpose","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","det","determinant","b00","b02","b10","b12","b20","b22","multiplyMat4","transform","translate","rotate","fromMat4","fromViewUp","view","up","v3_1","v3_2","fromTranslation","fromScaling","fromRotation","fromQuat","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","inverseTransposeMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","multiplyScalarAndAdd","toEuler","asin","mat","vec","IDENTITY","sign","Quat","rotationTo","fromAxisAngle","getAxisAngle","outAxis","bw","rotateAround","rot","qt_1","rotateAroundLocal","calculateW","scale0","scale1","cosom","omega","sinom","sqlerp","qt_2","invDot","conjugate","fromAxes","xAxis","yAxis","zAxis","m3_1","fromMat3","m20","m21","m22","fourXSquaredMinus1","fourYSquaredMinus1","fourZSquaredMinus1","biggestIndex","fourBiggestSquaredMinus1","biggestVal","mult","fromEuler","halfToRad","sx","cx","sy","cy","sz","cz","fromAngleZ","toAxisX","fy","fz","toAxisY","fx","toAxisZ","outerZ","bank","heading","attitude","sqy","sqz","toEulerInYXZOrder","rotateTowards","getEulerAngles","quat","objectFreeze","preTransforms","tan","Mat4","m23","m30","m31","m32","m33","b3","fromXRotation","fromYRotation","fromZRotation","fromRT","xy","xz","yz","getTranslation","getScaling","getRotation","trace","S","toRTS","toSRT","fromRTS","fromSRT","fromRTSOrigin","fromSRTOrigin","ox","oy","oz","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fov","aspect","isFOVY","minClipZ","projectionSignY","orientation","preTransform","ortho","lr","bt","lookAt","eye","center","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","y0","y1","inverseTranspose","getScale","mat4","freezeVec2","MathType","str","equals2f","strictEquals2f","add2f","subtract2f","multiply2f","divide2f","signAngle","radians","toVec3","v2","_len","args","Array","_key","arg1","Size","width","height","size","Rect","fromMinMax","v1","minX","minY","maxX","maxY","intersection","one","axMin","ayMin","axMax","ayMax","bxMin","byMin","bxMax","byMax","union","bh","intersects","maxax","maxay","maxbx","maxby","contains","point","containsRect","ol","ob","or","ot","lbx","lby","rbx","rby","ltx","lty","rtx","rty","transformMat4ToPoints","out_lb","out_lt","out_rt","out_rb","rect","MATH_FLOAT_ARRAY","Float64Array","MathBase","createFloatArray","_array","X","Y","Z","u","point_plane","plane_","pt_point_aabb","aabb_","halfExtents","pt_point_obb","obb_","dist","ShapeType","linePointA","linePointB","dir","dirSquaredLength","ShapeType$1","Line","ex","ey","ez","_type","SHAPE_LINE","create","fromPoints","start","end","Ray","SHAPE_RAY","origin","computeHit","_v3_tmp","_offset","_min","_max","maxComponent","Sphere","ab","ac","pvec","tvec","qvec","SHAPE_SPHERE","_center","_radius","radius","minPos","maxPos","destroy","getBoundary","pos","translateAndRotate","setScale","mergePoint","half","mergePoints","points","mergeAABB","vec3SquaredDistance","vec3Subtract","vec3Dot","vec3Set","vec3Cross","vec3MultiplyScalar","vec3Copy","vec3Add","vec3ScaleAndAdd","mathMin","rayPlane","ray","plane","denom","rayTriangle","triangle","doubleSided","inv_det","raySphere","sphere","rSq","eSq","aLength","fSq","rayAABB","aabb","rayAABB2","t1","t2","t3","t4","t5","t6","tmin","tmax","rayOBB","obb","rayCapsule","v3_0","v3_3","v3_4","v3_5","v3_6","sphere_0","capsule","A","ellipseCenter0","B","ellipseCenter1","BA","intersect","O","OA","vRayNorm","VxBA","BO","OAxBA","ab2","radiusSqr","iPos","iPosLen","tLimit","linePlane","line","lineTriangle","qp","ap","outPt","invDet","r_t","lineAABB","lineOBB","lineSphere","aMin","aMax","bMin","bMax","aabbWithAABB","aabb1","aabb2","getAABBVertices","getOBBVertices","a3","getInterval","vertices","projection","tmp","m3","absDot","pt","map","aabbWithOBB","vertices2","j","aabbPlane","aabbHalfExtents","planeN","aabbFrustum","frustumPlanes","planes","aabbFrustumAccurate","out1","out2","frustumVertices","result","obbPoint","obbPlane","obbOrientation","obbHalfExtents","planeD","obbFrustum","obbFrustumAccurate","obbWithOBB","obb1","obb2","obb1Orientation","obb2Orientation","obbCapsule","v3_verts8","v3_axis8","capsuleEllipseCenter0","capsuleEllipseCenter1","capsuleRadius","sphereOBB","axes","d0","d1","d_max","spherePlane","sphereFrustum","sphereFrustumAccurate","sphereWithSphere","sphere0","sphere1","sphereAABB","sphereRadius","sphereCapsule","sphereCenter","squaredR","capsuleWithCapsule","capsuleA","capsuleB","sN","tN","capsuleAEllipseCenter0","capsuleAEllipseCenter1","capsuleBEllipseCenter1","capsuleBEllipseCenter0","D","sD","tD","tc","dP","raySubMesh","rayMesh","rayModel","aabbFrustumCompletelyInside","resolve","g1","g2","type1","type2","resolver","SHAPE_AABB","SHAPE_OBB","SHAPE_PLANE","SHAPE_TRIANGLE","SHAPE_CAPSULE","SHAPE_FRUSTUM","SHAPE_FRUSTUM_ACCURATE","temp_mat","temp_vec4","Plane","fromNormalAndPoint","Triangle","setDefaultLogTimes","_vec3","WorldNode3DToLocalNodeUI","mainCamera","wpos","uiNode","convertToUINode","position","WorldNode3DToWorldNodeUI","worldToScreen","getScaleX","getScaleY","convertUtils","pipelineUtils","camera","WindowType","orientationMap","auto","Orientation","AUTO","landscape","LANDSCAPE","portrait","PORTRAIT","ScreenAdapter","_EventTarget","_this$_gameCanvas","_this$_gameCanvas$par","_this$_gameCanvas2","_this$_gameCanvas2$pa","fnList","isFrameRotated","handleResizeEvent","_gameFrame","_gameContainer","_gameCanvas","_isProportionalToFrame","_cachedFrameStyle","_cachedContainerStyle","_cbToUpdateFrameBuffer","_supportFullScreen","_touchEventName","_onFullscreenChange","_onFullscreenError","_orientationChangeTimeoutId","_cachedFrameSize","_exactFitScreen","_isHeadlessMode","_fn","_fnGroup","_resolutionScale","_orientation","_orientationDevice","document","getElementById","createElement","setAttribute","parentNode","insertBefore","appendChild","fnGroup","requestFullscreen","window","_registerEvent","_updateFrame","_updateFrameState","_resizeFrame","init","options","cbToRebuildFrameBuffer","configOrientation","exactFitScreen","isHeadlessMode","requestFullScreen","_this2","Promise","reject","isFullScreen","windowSize","_doRequestFullScreen","then","fullscreenTarget","_getFullscreenTarget","addEventListener","once","capture","Error","exitFullScreen","_this3","requestPromise","exitFullscreen","_this4","fullscreenerror","handleOrientationChange","notifyOrientationChange","emit","getOrientation","tmpOrientation","LANDSCAPE_RIGHT","LANDSCAPE_LEFT","PORTRAIT_UPSIDE_DOWN","orientationChangeCallback","clearTimeout","setTimeout","matchMedia","updateDPRChangeListener","dpr","devicePixelRatio","mediaQueryResolution","addListener","mediaQueryPortrait","mediaQueryLandscape","hasScreeOrientation","screen","matches","type","fullscreenchange","_convertToSizeInCssPixels","clonedSize","sizeInCssPixels","style","display","_windowType","SubFrame","_updateContainer","winWidth","innerWidth","winHeight","innerHeight","inputHeight","body","scrollHeight","systemInfo","os","OS","ANDROID","transformOrigin","margin","windowType","Fullscreen","fullscreenElement","_this5","isBrowserLandscape","isMobile","isProportionalToFrame","containerW","containerH","designedResolution","getDesignResolutionSize","frame","frameW","clientWidth","frameH","clientHeight","designW","designH","scaleX","scaleY","containerStyle","_window$devicePixelRa","_windowSizeInCssPixels","resolutionScale","_this$_cbToUpdateFram","parseInt","getComputedStyle","documentElement","getPropertyValue","BrowserWindow","Unknown","EventTarget","screenAdapter","Screen","_settings$querySettin","_settings$querySettin2","settings","querySettings","SettingsCategory","SCREEN","RENDERING","_director$root","director","root","pipeline","shadingScale","fullScreen","element","onFullScreenChange","onFullScreenError","err","autoFullScreen","_this$requestFullScre","disableAutoFullScreen","on","callback","off","resolution","supportFullScreen","sys","Feature","hasFeature","feature","NetworkType","Language","Platform","BrowserType","isNative","isBrowser","isLittleEndian","platform","language","languageCode","nativeLanguage","osVersion","osMainVersion","browserType","browserVersion","isXR","windowPixelResolution","capabilities","canvas","opengl","webp","WEBP","imageBitmap","IMAGE_BITMAP","touches","INPUT_TOUCH","mouse","EVENT_MOUSE","keyboard","EVENT_KEYBOARD","accelerometer","EVENT_ACCELEROMETER","localStorage","getNetworkType","networkType","getBatteryLevel","garbageCollect","triggerGC","isObjectValid","obj","__isWebIOS14OrIPadOS14Env","dump","game","renderType","RENDER_TYPE_WEBGL","openURL","url","setItem","removeItem","getItem","clear","IOS","OSX","navigator","userAgent","now","restartVM","restartJSVM","getSafeAreaRect","symmetric","locView","edge","safeAreaEdge","macro","ORIENTATION_PORTRAIT","leftBottom","rightTop","_convertToUISpace","visibleRect","topLeft","topRight","bottomLeft","bottomRight","visibleRect_","l","_v3_tmp2","_v3_tmp3","_v3_tmp4","_m3_tmp","transform_extent_m4","extent","m4","AABB","px","py","pz","hw","hh","hl","merge","toBoundingSphere","mergeFrustum","Capsule","halfHeight","rotation","updateCache","ws","halfWorldHeight","updateLocalCenter","_v","_nearTemp","_farTemp","_temp_v3","planeFromPoints","vec3TransformMat4","Frustum","createOrthographic","halfWidth","updatePlanes","createOrtho","createPerspective","vertexes","createFromAABB","vec3_min","vec3_max","split","update","inv","pl","invDist","transform_extent_m3","OBB","ox_1","ox_2","ox_3","oy_1","oy_2","oy_3","oz_1","oz_2","oz_3","_Symbol$iterator","Symbol","iterator","RealInterpolationMode","ExtrapolationMode","TangentWeightMode","KeyframeCurve","_times","_values","index","next","keyframes","values","getKeyframeTime","getKeyframeValue","addKeyFrame","time","keyframeValue","_insertNewKeyframe","removeKeyframe","splice","indexOfKeyframe","updateTime","assignSorted","isArray","setKeyframes","slice","_ref2","searchKeyframe","isSorted","nFrames","iNext","unshift","every","solveCubic","coeff0","coeff1","coeff2","coeff3","solutions","sqrA","cubicP","nSolutions","isZero","cbrt","sqrtD","sub","EQN_EPS","emptyDecorator","emptyDecoratorFn","emptySmartClassDecorator","makeSmartClassDecorator","decorate","writeEditorClassProperty","propertyName","cache","getClassCache","proto","getSubDict","makeEditorClassDecoratorFn","CACHE_KEY","ctor","ccclass","base","getSuper","extends","decoratedProto","mixin","requireComponent","executionOrder","disallowMultiple","property","propertyKey","descriptorOrInitializer","normalized","mergePropertyOptions","getOrCreateClassStash","getOrCreateEmptyPropertyStash","getDefaultFromInitializer","initializer","extractActualDefaultValues","classConstructor","dummyObj","_properties$_ref","ccclassProto","getOrCreatePropertyStash","_properties$_ref2","classStash","propertyStash","__internalFlags","PropertyStashInternalFlag","STANDALONE","setDefaultValue","fullOptions","isGetset","getFullFormOfProperty","propertyRecord","actualDefaultValues","hasOwnProperty","serializable","setImplicitSerializable","formerlySerializedAs","IMPLICIT_SERIALIZABLE","editorOnly","uniquelyReferenced","executeInEditMode","menu","playOnFocus","inspector","icon","help","editable","visible","displayName","tooltip","range","rangeStep","slide","displayOrder","disallowAnimation","integer","CCInteger","float","CCFloat","boolean","CCBoolean","string","CCString","override","EditorExtendable","StorageUnit","ElementType","combineStorageUnitElementType","unit","elementType","getElementTraits","BuiltinElementTypeTraits","getStorageConstructor","Uint8","Uint8Array","Uint16","Uint16Array","Uint32","Uint32Array","Int8","Int8Array","Int16","Int16Array","Int32","Float32","Float64","_dec","_class3","CompactValueTypeArray","_byteOffset","_initializer","_unitCount","_initializer2","_unitElement","_initializer3","_length","_initializer4","lengthFor","requiredUnits","BYTES_PER_ELEMENT","compress","arrayBuffer","byteOffset","presumedByteOffset","elementTraits","storageConstructor","unitCount","storage","decompress","combined","_extractStorageUnitEl","storageUnit","_class2","_applyDecoratedInitializer","Scalar","_BuiltinElementTypeTr","serializeTag","deserializeTag","constant","linear","k","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","sineOut","sineInOut","expoIn","expoOut","expoInOut","circIn","circOut","circInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","smooth","fade","_decorator","quadOutIn","_makeOutIn","cubicOutIn","quartOutIn","quintOutIn","sineOutIn","expoOutIn","circOutIn","elasticOutIn","backOutIn","bounceOutIn","fnIn","fnOut","EasingMethod","easingMethodFnMap","CONSTANT","easing","LINEAR","QUAD_IN","QUAD_OUT","QUAD_IN_OUT","_easingMethodFnMap","QUAD_OUT_IN","CUBIC_IN","CUBIC_OUT","CUBIC_IN_OUT","CUBIC_OUT_IN","QUART_IN","QUART_OUT","QUART_IN_OUT","QUART_OUT_IN","QUINT_IN","QUINT_OUT","QUINT_IN_OUT","QUINT_OUT_IN","SINE_IN","SINE_OUT","SINE_IN_OUT","SINE_OUT_IN","EXPO_IN","EXPO_OUT","EXPO_IN_OUT","EXPO_OUT_IN","CIRC_IN","CIRC_OUT","CIRC_IN_OUT","CIRC_OUT_IN","ELASTIC_IN","ELASTIC_OUT","ELASTIC_IN_OUT","ELASTIC_OUT_IN","BACK_IN","BACK_OUT","BACK_IN_OUT","BACK_OUT_IN","BOUNCE_IN","BOUNCE_OUT","BOUNCE_IN_OUT","BOUNCE_OUT_IN","SMOOTH","FADE","getEasingFn","easingMethod","popCount","_ref$sMetadataTag","REAL_KEYFRAME_VALUE_DEFAULT_FLAGS","NONE","RealKeyframeValue","_EditorExtendable","rightTangent","rightTangentWeight","leftTangent","leftTangentWeight","_flags","createRealKeyframeValue","params","realKeyframeValue","interpolationMode","tangentWeightMode","editorExtras","_CCClass$fastDefine","Attr","setClassAttr","RealCurve","_KeyframeCurve","preExtrapolation","CLAMP","postExtrapolation","evaluate","firstTime","lastTime","preValue","linearTrend","LOOP","wrapRepeat","PING_PONG","wrapPingPong","preFrame","iPre","preTime","nextTime","nextValue","evalBetweenTwoKeyFrames","isConstant","tolerance","firstVal","output","context","toCCON","keyframeValues","nKeyframes","dataView","DataView","ArrayBuffer","OVERFLOW_BYTES","FRAME_COUNT_BYTES","TIME_BYTES","REAL_KEY_FRAME_VALUE_MAX_SIZE","currentOffset","setUint8","setUint32","setFloat32","saveRealKeyFrameValue","bytes","writeProperty","keyframeValueEditorExtras","some","extras","writeThis","fromCCON","readProperty","byteLength","getUint8","getUint32","_","getFloat32","iKeyFrame","loadRealKeyFrameValue","readThis","KeyframeValueFlagMask","FLAGS_EASING_METHOD_BITS_START","FLAG_EASING_METHOD_MASK","KEY_FRAME_VALUE_FLAGS_BYTES","VALUE_BYTES","INTERPOLATION_MODE_BYTES","TANGENT_WEIGHT_MODE_BYTES","LEFT_TANGENT_BYTES","LEFT_TANGENT_WEIGHT_BYTES","RIGHT_TANGENT_BYTES","RIGHT_TANGENT_WEIGHT_BYTES","_createRealKeyframeVa","DEFAULT_INTERPOLATION_MODE","DEFAULT_TANGENT_WEIGHT_MODE","DEFAULT_LEFT_TANGENT","DEFAULT_LEFT_TANGENT_WEIGHT","DEFAULT_RIGHT_TANGENT","DEFAULT_RIGHT_TANGENT_WEIGHT","offset","flags","pFlags","INTERPOLATION_MODE","TANGENT_WEIGHT_MODE","LEFT_TANGENT","LEFT_TANGENT_WEIGHT","RIGHT_TANGENT","RIGHT_TANGENT_WEIGHT","prevTime","prevValue","dt","transformedRatio","CUBIC","ONE_THIRD","prevTangent","prevTangentWeightSpecified","prevTangentWeightEnabled","nextTangent","nextTangentWeightSpecified","nextTangentWeightEnabled","LEFT","prevTangentWeight","angle0","atan","tx0","ty0","nextTangentWeight","angle1","u0x","u1x","u0y","u1y","param","getParamFromCubicSolution","bezierInterpolate","p1","p2","p0","p3","solutionsCount","iSolution","solution","bezier","C1","C2","C3","C4","QuatInterpolationMode","tau","crt","cardano","curve","u1","x3","pa","pb","pa3","pb3","pc3","rd","r3","q2","discriminant","mp3","sd","bezierByTime","controlPoints","percent","p1y","QuatCurveKeyframeValueFlagMask","QuatKeyframeValue","_temp","SLERP","createQuatKeyframeValue","_dec2","_class5","QuatCurve","_initializer5","_quat","_ref3","interpolationModeRepeated","_index","_ref4","firstKeyframeValue","interpolationModesSize","easingMethodsSize","reduce","_ref5","EASING_METHOD_BYTES","EASING_METHOD_BEZIER_COMPONENT_BYTES","dataSize","FLAGS_BYTES","P","_ref6","_ref6$value","pQuat","_ref7","EASING_METHOD_BEZIER_TAG","INTERPOLATION_MODES_START","pInterpolationMode","_ref8","P_VALUES","iKeyframe","_class4","GradientMode","ObjectCurve","iSearch","iPrev","Enum","ColorKey","AlphaKey","Gradient","colorKeys","alphaKeys","mode","Blend","setKeys","sortKeys","sort","evaluateFast","getRGB","getAlpha","randomColor","getRandomColor","trunc","curTime","Fixed","factor","lastIndex","Mode","Keyframe","inTangent","outTangent","OptimizedKey","endTime","coefficient","T","evalOptCurve","coefs","AnimationCurve","WrapModeMask","keyFrames","_curve","cachedKey","legacyKeyframe","_proto2","addKey","keyFrame","evaluate_slow","lastKeyframeIndex","keyFramesCount","wrappedTime","extrapolationMode","startTime","leftIndex","findIndex","rightIndex","calcOptimizedKey","optKey","lhsTime","rhsTime","_this$_curve$getKeyfr","lhsValue","lhsOutTangent","_this$_curve$getKeyfr2","rhsValue","rhsInTangent","d2","cachedIndex","currIndex","mid","legacyCurve","toLegacyWrapMode","fromLegacyWrapMode","legacyWrapMode","Default","Normal","Clamp","PingPong","Loop","constructLegacyCurveAndConvert","defaultKF","SplineMode","ERaycastMode","SPLINE_WHOLE_INDEX","_v0","_v1","_v2","_v3","Spline","knots","CATMULL_ROM","_knots","SHAPE_SPLINE","_mode","setModeAndKnots","clearKnots","getKnotCount","addKnot","knot","insertKnot","removeKnot","assertsArrayIndex","setKnot","getKnot","getPoint","segments","getSegments","deltaT","calcLinear","BEZIER","calcBezier","v0","calcCatmullRom","getPoints","num","assertID","deprecatedClassMessage","oldClassName","newClassName","SystemPriority","_Line","_Plane","_Ray","_Triangle","_Sphere","_AABB","_this6","_OBB","_this7","_Capsule","_this8","_Frustum","_this9","System","_id","_priority","_executeInEditMode","sortByPriority","priority","postUpdate","Priority","LOW","MEDIUM","HIGH","SCHEDULER","idGenerator","IDGenerator","ListEntry","paused","markedForDeletion","_listEntries","pop","put","entry","HashUpdateEntry","list","_hashUpdateEntries","HashTimerEntry","timers","timerIndex","currentTimer","currentTimerSalvaged","_hashTimerEntries","CallbackTimer","_lock","_scheduler","_elapsed","_runForever","_useDelay","_timesExecuted","_repeat","_delay","_interval","_target","_callback","_timers","timer","initWithCallback","scheduler","seconds","delay","REPEAT_FOREVER","setInterval","interval","trigger","cancel","getCallback","unscheduleForTimer","Scheduler","_System","_timeScale","_updatesNegList","_updates0List","_updatesPosList","_hashForUpdates","_hashForTimers","_currentTarget","_currentTargetSalvaged","_updateHashLocked","_arrayForTimers","createMap","enableForTarget","found","uuid","getNewId","setTimeScale","timeScale","getTimeScale","elt","_this$_currentTarget$","_removeHashElement","_removeUpdateFromHash","schedule","callbackTmp","targetTmp","Boolean","targetId","logID","scheduleUpdate","hashElement","unscheduleUpdate","ppList","listElement","_appendIn","_priorityIn","unschedule","li","timerToUnschedule","unscheduleAllForTarget","indexOf","unscheduleAll","unscheduleAllWithMinPriority","minPriority","temp_length","_entry","_entry2","_entry3","isScheduled","pauseAllTargets","pauseAllTargetsWithMinPriority","idsWithSelectors","locArrayForTimers","_element","_entry4","_entry5","_entry6","resumeTargets","targetsToResume","resumeTarget","pauseTarget","elementUpdate","isTargetPaused","listEntry","ID","vmath","math","js","geometry"],"mappings":"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"}