System.register(["./index-BcjqSS2q.js","./global-exports-ZavlJGEN.js","./_virtual_internal_constants-CVZmBipG.js","./gc-object-BD6DANSw.js"],(function(n){"use strict";var t;return{setters:[function(n){t=n.V},null,null,null],execute:function(){function r(n,t,r,e){var i=(e.x-r.x)*(n.y-r.y)-(e.y-r.y)*(n.x-r.x),x=(t.x-n.x)*(n.y-r.y)-(t.y-n.y)*(n.x-r.x),u=(e.y-r.y)*(t.x-n.x)-(e.x-r.x)*(t.y-n.y);if(0!==u){var y=i/u,o=x/u;if(y>=0&&y<=1&&o>=0&&o<=1)return!0}return!1}var e=new t,i=new t,x=new t,u=new t;function y(n,t,e){for(var i=e.length,x=0;x<i;++x)if(r(n,t,e[x],e[(x+1)%i]))return!0;return!1}function o(n,t){for(var r=!1,e=n.x,i=n.y,x=t.length,u=0,y=x-1;u<x;y=u++){var o=t[u].x,a=t[u].y,f=t[y].x,c=t[y].y;a>i!=c>i&&e<(f-o)*(i-a)/(c-a)+o&&(r=!r)}return r}function a(n,t,r,i){var x,u=r.x-t.x,y=r.y-t.y,o=u*u+y*y,a=((n.x-t.x)*u+(n.y-t.y)*y)/o;return x=i?o?a<0?t:a>1?r:e.set(t.x+a*u,t.y+a*y):t:e.set(t.x+a*u,t.y+a*y),u=n.x-x.x,y=n.y-x.y,Math.sqrt(u*u+y*y)}var f=n("Intersection2D",(function(){}));f.lineLine=r,f.lineRect=function(n,t,y){var o=e.set(y.x,y.y),a=i.set(y.x,y.yMax),f=x.set(y.xMax,y.yMax),c=u.set(y.xMax,y.y);return!!(r(n,t,o,a)||r(n,t,a,f)||r(n,t,f,c)||r(n,t,c,o))},f.linePolygon=y,f.rectRect=function(n,t){var r=n.x,e=n.y,i=n.x+n.width,x=n.y+n.height,u=t.x,y=t.y,o=t.x+t.width,a=t.y+t.height;return r<=o&&i>=u&&e<=a&&x>=y},f.rectPolygon=function(n,t){var r=e.set(n.x,n.y),a=i.set(n.x,n.yMax),f=x.set(n.xMax,n.yMax),c=u.set(n.xMax,n.y);if(y(r,a,t))return!0;if(y(a,f,t))return!0;if(y(f,c,t))return!0;if(y(c,r,t))return!0;for(var l=0,s=t.length;l<s;++l)if(n.contains(t[l]))return!0;return!!(o(r,t)||o(a,t)||o(f,t)||o(c,t))},f.rectCircle=function(n,t,r){var e=t.x,i=t.y,x=n.x,u=n.y,y=n.width,o=n.height,a=e,f=i;e<x?a=x:e>x+y&&(a=x+y),i<u?f=u:i>u+o&&(f=u+o);var c=e-a,l=i-f;return Math.sqrt(c*c+l*l)<=r},f.polygonPolygon=function(n,t){var r,e;for(r=0,e=n.length;r<e;++r)if(y(n[r],n[(r+1)%e],t))return!0;for(r=0,e=t.length;r<e;++r)if(o(t[r],n))return!0;for(r=0,e=n.length;r<e;++r)if(o(n[r],t))return!0;return!1},f.circleCircle=function(n,r,e,i){return t.distance(n,e)<r+i},f.polygonCircle=function(n,t,r){var e=t;if(o(e,n))return!0;for(var i=0,x=n.length;i<x;i++)if(a(e,0===i?n[n.length-1]:n[i-1],n[i],!0)<r)return!0;return!1},f.pointInPolygon=o,f.pointLineDistance=a}}}));
//# sourceMappingURL=intersection-2d.js.map
