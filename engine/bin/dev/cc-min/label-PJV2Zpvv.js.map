{"version":3,"file":"label-PJV2Zpvv.js","sources":["../../../cocos/2d/utils/text-utils.ts","../../../cocos/2d/assembler/label/font-utils.ts","../../../cocos/2d/assets/font.ts","../../../cocos/2d/assets/ttf-font.ts","../../../cocos/2d/utils/font-loader.ts","../../../cocos/2d/utils/html-text-parser.ts","../../../cocos/2d/assets/bitmap-font.ts","../../../cocos/2d/assets/label-atlas.ts","../../../cocos/2d/assembler/label/text-style.ts","../../../cocos/2d/components/label.ts","../../../cocos/2d/assembler/label/text-layout.ts","../../../cocos/2d/assembler/label/text-output-data.ts"],"sourcesContent":["/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { RUNTIME_BASED } from 'internal:constants';\r\nimport { minigame } from 'pal/minigame';\r\nimport { js } from '../../core';\r\nimport { forEach } from '../../asset/asset-manager/utilities';\r\n\r\nexport const BASELINE_RATIO = 0.26;\r\nlet _BASELINE_OFFSET = 0;\r\n\r\nif (RUNTIME_BASED) {\r\n    _BASELINE_OFFSET = BASELINE_RATIO * 2 / 3;\r\n\r\n    const ral = minigame.ral!;\r\n    const featureAlphabeticeName = ral.CANVAS_CONTEXT2D_TEXTBASELINE_ALPHABETIC.name;\r\n    const featureAlphabeticEnable = ral.CANVAS_CONTEXT2D_TEXTBASELINE_ALPHABETIC.enable;\r\n\r\n    const defaultBaselineName = ral.CANVAS_CONTEXT2D_TEXTBASELINE_DEFAULT.name;\r\n    const defaultIsAlphaBetic = ral.CANVAS_CONTEXT2D_TEXTBASELINE_DEFAULT.alphabetic;\r\n\r\n    if (ral.getFeaturePropertyInt(featureAlphabeticeName) === featureAlphabeticEnable) {\r\n        // if support alphabetic baseline, set default baseline to alphabetic\r\n        ral.setFeaturePropertyInt(defaultBaselineName, defaultIsAlphaBetic);\r\n        if (ral.getFeaturePropertyInt(defaultBaselineName) === defaultIsAlphaBetic) {\r\n            // if default baseline has been successfully set to alphabetic, _BASELINE_OFFSET should be 0.\r\n            _BASELINE_OFFSET = 0;\r\n        }\r\n    }\r\n}\r\nexport const MIDDLE_RATIO = (BASELINE_RATIO + 1) / 2 - BASELINE_RATIO;\r\nexport function getBaselineOffset (): number {\r\n    return _BASELINE_OFFSET;\r\n}\r\n\r\nconst MAX_CACHE_SIZE = 100;\r\n\r\ninterface ICacheNode {\r\n    key: string;\r\n    value: number,\r\n    prev: ICacheNode | null,\r\n    next: ICacheNode | null\r\n}\r\n\r\nconst pool = new js.Pool<ICacheNode>(2);\r\npool.get = function (): ICacheNode {\r\n    return this._get() || {\r\n        key: '',\r\n        value: 0,\r\n        prev: null,\r\n        next: null,\r\n    };\r\n};\r\n\r\nexport class LRUCache {\r\n    private count = 0;\r\n    private limit = 0;\r\n    private datas: Record<string, ICacheNode> = {};\r\n    private head: ICacheNode | null = null;\r\n    private tail: ICacheNode | null = null;\r\n\r\n    constructor (size: number) {\r\n        this.limit = size;\r\n    }\r\n\r\n    public moveToHead (node: ICacheNode): void {\r\n        node.next = this.head;\r\n        node.prev = null;\r\n        if (this.head) this.head.prev = node;\r\n        this.head = node;\r\n        if (!this.tail) this.tail = node;\r\n        this.count++;\r\n        this.datas[node.key] = node;\r\n    }\r\n\r\n    public put (key: string, value: number): void {\r\n        const node = pool.get();\r\n        node!.key = key;\r\n        node!.value = value;\r\n\r\n        if (this.count >= this.limit) {\r\n            const discard = this.tail;\r\n            delete this.datas[discard!.key];\r\n            this.count--;\r\n            this.tail = discard!.prev;\r\n            this.tail!.next = null;\r\n            discard!.prev = null;\r\n            discard!.next = null;\r\n            pool.put(discard!);\r\n        }\r\n        this.moveToHead(node!);\r\n    }\r\n\r\n    public remove (node: ICacheNode): void {\r\n        if (node.prev) {\r\n            node.prev.next = node.next;\r\n        } else {\r\n            this.head = node.next;\r\n        }\r\n        if (node.next) {\r\n            node.next.prev = node.prev;\r\n        } else {\r\n            this.tail = node.prev;\r\n        }\r\n        delete this.datas[node.key];\r\n        this.count--;\r\n    }\r\n\r\n    public get (key: string): number | null {\r\n        const node = this.datas[key];\r\n        if (node) {\r\n            this.remove(node);\r\n            this.moveToHead(node);\r\n            return node.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public clear (): void {\r\n        this.count = 0;\r\n        this.datas = {};\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n\r\n    public has (key: string): boolean {\r\n        return !!this.datas[key];\r\n    }\r\n\r\n    public delete (key: string): void {\r\n        const node = this.datas[key];\r\n        this.remove(node);\r\n    }\r\n}\r\n\r\nconst measureCache = new LRUCache(MAX_CACHE_SIZE);\r\n\r\nconst WORD_REG = /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûа-яА-ЯЁё]+|\\S)/;\r\n// eslint-disable-next-line no-useless-escape\r\nconst SYMBOL_REG = /^[!,.:;'}\\]%\\?>、‘“》？。，！]/;\r\n\r\nconst CHAR_SET = '[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁёáàảạãăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđÁÀẢẠÃĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ]';\r\nconst LAST_WORD_REG = new RegExp(`(${CHAR_SET}+|\\\\S)$`);\r\nconst LAST_ENGLISH_REG = new RegExp(`${CHAR_SET}+$`);\r\nconst FIRST_ENGLISH_REG = new RegExp(`^${CHAR_SET}`);\r\n\r\nconst WRAP_INSPECTION = true;\r\n// The unicode standard will never assign a character from code point 0xD800 to 0xDFFF\r\n// high surrogate (0xD800-0xDBFF) and low surrogate(0xDC00-0xDFFF) combines to a character on the Supplementary Multilingual Plane\r\n// reference: https://en.wikipedia.org/wiki/UTF-16\r\nconst highSurrogateRex = /[\\uD800-\\uDBFF]/;\r\nconst lowSurrogateRex = /[\\uDC00-\\uDFFF]/;\r\n/**\r\n * @deprecated since v3.7.2, this is an engine private interface that will be removed in the future.\r\n */\r\nexport function isUnicodeCJK (ch: string): boolean {\r\n    const __CHINESE_REG = /^[\\u4E00-\\u9FFF\\u3400-\\u4DFF]+$/;\r\n    const __JAPANESE_REG = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\r\n    const __KOREAN_REG = /^[\\u1100-\\u11FF]|[\\u3130-\\u318F]|[\\uA960-\\uA97F]|[\\uAC00-\\uD7AF]|[\\uD7B0-\\uD7FF]+$/;\r\n    return __CHINESE_REG.test(ch) || __JAPANESE_REG.test(ch) || __KOREAN_REG.test(ch);\r\n}\r\n\r\n/**\r\n * @deprecated since v3.7.2, this is an engine private interface that will be removed in the future.\r\n */\r\n// Checking whether the character is a whitespace\r\nexport function isUnicodeSpace (ch: string): boolean {\r\n    const chCode = ch.charCodeAt(0);\r\n    return ((chCode >= 9 && chCode <= 13)\r\n    || chCode === 32\r\n    || chCode === 133\r\n    || chCode === 160\r\n    || chCode === 5760\r\n    || (chCode >= 8192 && chCode <= 8202)\r\n    || chCode === 8232\r\n    || chCode === 8233\r\n    || chCode === 8239\r\n    || chCode === 8287\r\n    || chCode === 12288);\r\n}\r\n/**\r\n * @deprecated since v3.7.2, this is an engine private interface that will be removed in the future.\r\n */\r\nexport function safeMeasureText (ctx: CanvasRenderingContext2D, string: string, desc?: string): number {\r\n    const font = desc || ctx.font;\r\n    const key = `${font}\\uD83C\\uDFAE${string}`;\r\n    const cache = measureCache.get(key);\r\n    if (cache !== null) {\r\n        return cache;\r\n    }\r\n\r\n    const metric = ctx.measureText(string);\r\n    const width = metric && metric.width || 0;\r\n    measureCache.put(key, width);\r\n\r\n    return width;\r\n}\r\n\r\nexport function getSymbolLength (str: string): number {\r\n    const length = str.length;\r\n    let len = 0;\r\n    let count = 0;\r\n    let start = 0;\r\n    let charCode = 0;\r\n    for (let i = 0; i < length; i++) {\r\n        charCode = str.charCodeAt(i);\r\n        if (charCode === 0x200d) {\r\n            len++;\r\n            continue;\r\n        }\r\n        if (charCode >= 0xd800 && charCode <= 0xdbff) {\r\n            len++;\r\n            charCode = str.charCodeAt(i + 1);\r\n            if (charCode >= 0xdc00 && charCode <= 0xdfff) {\r\n                len++;\r\n                if (i + 2 >= length || str.charCodeAt(i + 2) !== 0x200d) {\r\n                    start += len;\r\n                    count++;\r\n                    len = 0;\r\n                }\r\n                i++;\r\n                continue;\r\n            }\r\n        }\r\n        start = i + 1;\r\n        count++;\r\n        len = 0;\r\n    }\r\n    return count;\r\n}\r\n\r\nexport function getSymbolAt (str: string, index: number): string  {\r\n    const length = str.length;\r\n    let len = 0;\r\n    let count = 0;\r\n    let start = 0;\r\n    let charCode = 0;\r\n    for (let i = 0; i < length; i++) {\r\n        charCode = str.charCodeAt(i);\r\n        if (charCode === 0x200d) {\r\n            len++;\r\n            continue;\r\n        }\r\n        if (charCode >= 0xd800 && charCode <= 0xdbff) {\r\n            len++;\r\n            charCode = str.charCodeAt(i + 1);\r\n            if (charCode >= 0xdc00 && charCode <= 0xdfff) {\r\n                len++;\r\n                if (i + 2 >= length || str.charCodeAt(i + 2) !== 0x200d) {\r\n                    if (index === count) {\r\n                        return str.slice(start, start + len);\r\n                    }\r\n                    start += len;\r\n                    count++;\r\n                    len = 0;\r\n                }\r\n                i++;\r\n                continue;\r\n            }\r\n        }\r\n        if (index === count) {\r\n            return str.charAt(i);\r\n        }\r\n        start = i + 1;\r\n        count++;\r\n        len = 0;\r\n    }\r\n    return '';\r\n}\r\n\r\nexport function getSymbolCodeAt (str: string, index: number): string  {\r\n    const char = getSymbolAt(str, index);\r\n    if (char.length === 1) {\r\n        return `${char.charCodeAt(0)}`;\r\n    }\r\n    let charCodes: string = '';\r\n    for (let j = 0; j < char.length; j++) {\r\n        charCodes += `${char.charCodeAt(j)}`;\r\n    }\r\n    return `${charCodes}`;\r\n}\r\n\r\nfunction getSymbolStartIndex (targetString: string, index: number): number {\r\n    if (index >= targetString.length) {\r\n        return targetString.length;\r\n    }\r\n    let startCheckIndex = index;\r\n    let startChar = targetString[startCheckIndex];\r\n    while (startCheckIndex >= 0) {\r\n        if (startChar === '\\u200d') {\r\n            startCheckIndex--;\r\n            startChar = targetString[startCheckIndex];\r\n        }\r\n        if (startChar >= '\\uDC00' && startChar <= '\\uDFFF') {\r\n            // lowSurrogateRex\r\n            if (startCheckIndex - 1 >= 0) {\r\n                startCheckIndex--;\r\n                startChar = targetString[startCheckIndex];\r\n            }\r\n        }\r\n        if (startChar >= '\\uD800' && startChar <= '\\uDBFF') {\r\n            // highSurrogateRex\r\n            if (startCheckIndex - 1 >= 0 && targetString[startCheckIndex - 1] === '\\u200d') {\r\n                startCheckIndex--;\r\n                startChar = targetString[startCheckIndex];\r\n            } else {\r\n                break;\r\n            }\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return startCheckIndex;\r\n}\r\n\r\nfunction getSymbolEndIndex (targetString: string, index: number): number {\r\n    let newEndIndex = index;\r\n    let endCheckIndex = index;\r\n    let endChar = targetString[endCheckIndex];\r\n    while (endCheckIndex < targetString.length) {\r\n        if (endChar === '\\u200d') {\r\n            endCheckIndex++;\r\n            newEndIndex++;\r\n            endChar = targetString[endCheckIndex];\r\n            if (endChar >= '\\uD800' && endChar <= '\\uDBFF') {\r\n                // highSurrogateRex\r\n                endCheckIndex++;\r\n                newEndIndex++;\r\n                endChar = targetString[endCheckIndex];\r\n            }\r\n        }\r\n        if (endChar >= '\\uD800' && endChar <= '\\uDBFF') {\r\n            // highSurrogateRex\r\n            endCheckIndex++;\r\n            newEndIndex++;\r\n            endChar = targetString[endCheckIndex];\r\n        } else if (endChar >= '\\uDC00' && endChar <= '\\uDFFF') {\r\n            // lowSurrogateRex\r\n            endCheckIndex++;\r\n            endChar = targetString[endCheckIndex];\r\n            if (endCheckIndex < targetString.length && targetString[endCheckIndex] === '\\u200d') {\r\n                newEndIndex++;\r\n                endChar = targetString[endCheckIndex];\r\n            } else {\r\n                break;\r\n            }\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return newEndIndex;\r\n}\r\n\r\n// in case truncate a character on the Supplementary Multilingual Plane\r\n// test case: a = '😉🚗'\r\n// _safeSubstring(a, 1) === '🚗'\r\n// _safeSubstring(a, 0, 1) === '😉'\r\n// _safeSubstring(a, 0, 2) === '😉'\r\n// _safeSubstring(a, 0, 3) === '😉🚗'\r\n// _safeSubstring(a, 0, 4) === '😉🚗'\r\n// _safeSubstring(a, 0, 1) === _safeSubstring(a, 0, 2) === '😉'\r\n// _safeSubstring(a, 2, 3) === _safeSubstring(a, 2, 4) === '🚗'\r\nfunction _safeSubstring (targetString: string, startIndex: number, endIndex?: number): string {\r\n    let newStartIndex = getSymbolStartIndex(targetString, startIndex);\r\n    if (newStartIndex < startIndex) {\r\n        newStartIndex = getSymbolEndIndex(targetString, startIndex) + 1;\r\n    }\r\n    let newEndIndex = endIndex;\r\n\r\n    if (endIndex !== undefined) {\r\n        endIndex = Math.max(0, endIndex - 1);\r\n        newEndIndex = getSymbolEndIndex(targetString, endIndex);\r\n        const newStartEndIndex = getSymbolStartIndex(targetString, endIndex);\r\n        if (newStartEndIndex < newStartIndex || (newStartEndIndex === newStartIndex && startIndex > newStartIndex)) {\r\n            newEndIndex = newStartIndex;\r\n        } else {\r\n            newEndIndex += 1;\r\n        }\r\n    }\r\n    return targetString.substring(newStartIndex, newEndIndex);\r\n}\r\n\r\n/**\r\n* @engineInternal\r\n*/\r\nexport function isEnglishWordPartAtFirst (stringToken: string): boolean {\r\n    return FIRST_ENGLISH_REG.test(stringToken);\r\n}\r\n/**\r\n* @engineInternal\r\n*/\r\nexport function isEnglishWordPartAtLast (stringToken: string): boolean {\r\n    return LAST_ENGLISH_REG.test(stringToken);\r\n}\r\n/**\r\n* @engineInternal\r\n*/\r\nexport function getEnglishWordPartAtFirst (stringToken: string): RegExpExecArray | null {\r\n    const result = FIRST_ENGLISH_REG.exec(stringToken);\r\n    return result;\r\n}\r\n/**\r\n* @engineInternal\r\n*/\r\nexport function getEnglishWordPartAtLast (stringToken: string): RegExpExecArray | null {\r\n    const result = LAST_ENGLISH_REG.exec(stringToken);\r\n    return result;\r\n}\r\n/**\r\n * @deprecated since v3.7.2, this is an engine private interface that will be removed in the future.\r\n */\r\nexport function fragmentText (stringToken: string, allWidth: number, maxWidth: number, measureText: (string: string) => number): string[] {\r\n    // check the first character\r\n    const wrappedWords: string[] = [];\r\n    // fast return if strArr is empty\r\n    if (stringToken.length === 0 || maxWidth < 0) {\r\n        wrappedWords.push('');\r\n        return wrappedWords;\r\n    }\r\n\r\n    let text = stringToken;\r\n    while (allWidth > maxWidth && text.length > 1) {\r\n        let fuzzyLen = text.length * (maxWidth / allWidth) | 0;\r\n        let tmpText = _safeSubstring(text, fuzzyLen);\r\n        let width = allWidth - measureText(tmpText);\r\n        let sLine = tmpText;\r\n        let pushNum = 0;\r\n\r\n        let checkWhile = 0;\r\n        const checkCount = 100;\r\n\r\n        // Exceeded the size\r\n        while (width > maxWidth && checkWhile++ < checkCount) {\r\n            fuzzyLen *= maxWidth / width;\r\n            fuzzyLen |= 0;\r\n            tmpText = _safeSubstring(text, fuzzyLen);\r\n            width = allWidth - measureText(tmpText);\r\n        }\r\n\r\n        checkWhile = 0;\r\n\r\n        // Find the truncation point\r\n        // if the 'tempText' which is truncated from the next line content equals to '',\r\n        // we should break this loop because there is no available character in the next line.\r\n        while (tmpText && width <= maxWidth && checkWhile++ < checkCount) {\r\n            const exec = WORD_REG.exec(tmpText);\r\n            pushNum = exec ? exec[0].length : 1;\r\n            sLine = tmpText;\r\n\r\n            fuzzyLen += pushNum;\r\n            tmpText = _safeSubstring(text, fuzzyLen);\r\n            width = allWidth - measureText(tmpText);\r\n        }\r\n\r\n        fuzzyLen -= pushNum;\r\n        // in case maxWidth cannot contain any characters, need at least one character per line\r\n        if (fuzzyLen === 0) {\r\n            fuzzyLen = 1;\r\n            sLine = _safeSubstring(text, 1);\r\n        } else if (fuzzyLen === 1 && text[0] >= '\\uD800' && text[0] <= '\\uDBFF') {\r\n            // highSurrogateRex\r\n            fuzzyLen = 2;\r\n            sLine = _safeSubstring(text, 2);\r\n        }\r\n\r\n        let sText = _safeSubstring(text, 0, fuzzyLen);\r\n        let result;\r\n\r\n        // Symbols cannot be the first character in a new line.\r\n        // In condition that a symbol appears at the beginning of the new line, we will move the last word of this line to the new line.\r\n        // If there is only one word in this line, we will keep the first character of this word and move the rest of characters to the new line.\r\n        if (WRAP_INSPECTION) {\r\n            if (SYMBOL_REG.test(sLine || tmpText)) {\r\n                result = LAST_WORD_REG.exec(sText);\r\n                fuzzyLen -= result ? result[0].length : 0;\r\n                if (fuzzyLen === 0) { fuzzyLen = 1; }\r\n\r\n                sLine = _safeSubstring(text, fuzzyLen);\r\n                sText = _safeSubstring(text, 0, fuzzyLen);\r\n            }\r\n        }\r\n\r\n        // To judge whether a English words are truncated\r\n        // If it starts with an English word in the next line and it ends with an English word in this line,\r\n        // we consider that a complete word is truncated into two lines. The last word without symbols of this line will be moved to the next line.\r\n        if (FIRST_ENGLISH_REG.test(sLine)) {\r\n            result = LAST_ENGLISH_REG.exec(sText);\r\n            if (result && (sText !== result[0])) {\r\n                fuzzyLen -= result[0].length;\r\n                sLine = _safeSubstring(text, fuzzyLen);\r\n                sText = _safeSubstring(text, 0, fuzzyLen);\r\n            }\r\n        }\r\n\r\n        // The first line And do not wrap should not remove the space\r\n        if (wrappedWords.length === 0) {\r\n            wrappedWords.push(sText);\r\n        } else {\r\n            sText = sText.trim();\r\n            if (sText.length > 0) {\r\n                wrappedWords.push(sText);\r\n            }\r\n        }\r\n        text = sLine || tmpText;\r\n        allWidth = measureText(text);\r\n    }\r\n\r\n    if (wrappedWords.length === 0) {\r\n        wrappedWords.push(text);\r\n    } else {\r\n        text = text.trim();\r\n        if (text.length > 0) {\r\n            wrappedWords.push(text);\r\n        }\r\n    }\r\n    return wrappedWords;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport { FontAtlas, FontLetterDefinition } from '../../assets/bitmap-font';\r\nimport { Color, macro, warnID } from '../../../core';\r\nimport { ImageAsset, Texture2D } from '../../../asset/assets';\r\nimport { PixelFormat } from '../../../asset/assets/asset-enum';\r\nimport { BufferTextureCopy } from '../../../gfx';\r\nimport { safeMeasureText, BASELINE_RATIO, MIDDLE_RATIO, getBaselineOffset, getSymbolCodeAt } from '../../utils/text-utils';\r\nimport { director, DirectorEvent } from '../../../game/director';\r\nimport { ccwindow } from '../../../core/global-exports';\r\nimport { TextureBase } from '../../../asset/assets/texture-base';\r\n\r\nexport interface ISharedLabelData {\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D | null;\r\n}\r\n\r\nlet _canvasPool: CanvasPool;\r\n\r\nexport class CanvasPool {\r\n    static getInstance (): CanvasPool {\r\n        if (!_canvasPool) {\r\n            _canvasPool = new CanvasPool();\r\n        }\r\n        return _canvasPool;\r\n    }\r\n\r\n    private constructor () {}\r\n\r\n    public pool: ISharedLabelData[] = [];\r\n    public get (): ISharedLabelData {\r\n        let data = this.pool.pop();\r\n\r\n        if (!data) {\r\n            const canvas = ccwindow.document.createElement('canvas');\r\n            const context = canvas.getContext('2d');\r\n            data = {\r\n                canvas,\r\n                context,\r\n            };\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    public put (canvas: ISharedLabelData): void {\r\n        if (this.pool.length >= macro.MAX_LABEL_CANVAS_POOL_SIZE) {\r\n            if (JSB) {\r\n                const c = canvas.canvas as any;\r\n                if (c && c._destroy) {\r\n                    c._destroy();\r\n                }\r\n                canvas.canvas = null!;\r\n                canvas.context = null;\r\n            }\r\n            return;\r\n        }\r\n        this.pool.push(canvas);\r\n    }\r\n}\r\n\r\n// export function packToDynamicAtlas(comp, frame) {\r\n//     // TODO: Material API design and export from editor could affect the material activation process\r\n//     // need to update the logic here\r\n//     if (frame && !TEST) {\r\n//         if (!frame._original && dynamicAtlasManager) {\r\n//             let packedFrame = dynamicAtlasManager.insertSpriteFrame(frame);\r\n//             if (packedFrame) {\r\n//                 frame._setDynamicAtlasFrame(packedFrame);\r\n//             }\r\n//         }\r\n//         if (comp.sharedMaterials[0].getProperty('texture') !== frame._texture) {\r\n//             comp._activateMaterial();\r\n//         }\r\n//     }\r\n// }\r\n\r\ninterface ILabelInfo {\r\n    fontSize: number;\r\n    lineHeight: number;\r\n    hash: string;\r\n    fontFamily: string;\r\n    fontDesc: string;\r\n    hAlign: number;\r\n    vAlign: number;\r\n    color: Color;\r\n    isOutlined: boolean;\r\n    out: Color;\r\n    margin: number;\r\n    fontScale: number;\r\n}\r\n\r\nconst WHITE = Color.WHITE.clone();\r\nconst space = 0;\r\nconst bleed = 2;\r\n\r\nconst _backgroundStyle = `rgba(255, 255, 255, ${(1 / 255).toFixed(3)})`;\r\nconst BASELINE_OFFSET = getBaselineOffset();\r\n\r\nclass LetterTexture {\r\n    public image: ImageAsset | null = null;\r\n    public declare labelInfo: ILabelInfo;\r\n    public declare char: string;\r\n    public data: ISharedLabelData | null  = null;\r\n    public canvas: HTMLCanvasElement | null = null;\r\n    public context: CanvasRenderingContext2D | null = null;\r\n    public width = 0;\r\n    public height = 0;\r\n    public offsetY = 0;\r\n    public declare hash: string;\r\n    constructor (char: string, labelInfo: ILabelInfo) {\r\n        this.char = char;\r\n        this.labelInfo = labelInfo;\r\n        this.hash = `${getSymbolCodeAt(char, 0)}${labelInfo.hash}`;\r\n    }\r\n\r\n    public updateRenderData (): void {\r\n        this._updateProperties();\r\n        this._updateTexture();\r\n    }\r\n\r\n    public destroy (): void {\r\n        this.image = null;\r\n        CanvasPool.getInstance().put(this.data as ISharedLabelData);\r\n        this.data = null;\r\n    }\r\n\r\n    private _updateProperties (): void {\r\n        this.data = CanvasPool.getInstance().get();\r\n        this.canvas = this.data.canvas;\r\n        this.context = this.data.context;\r\n        if (this.context) {\r\n            const fontScale = this.labelInfo.fontScale;\r\n            this.context.font = this.labelInfo.fontDesc;\r\n            const width = safeMeasureText(this.context, this.char, this.labelInfo.fontDesc);\r\n            const blank = this.labelInfo.margin * 2 + bleed;\r\n            this.width = parseFloat(width.toFixed(2)) * fontScale + blank;\r\n            this.height = (1 + BASELINE_RATIO) * this.labelInfo.fontSize * fontScale + blank;\r\n            this.offsetY = -(this.labelInfo.fontSize * BASELINE_RATIO) * fontScale / 2;\r\n        }\r\n\r\n        if (this.canvas.width !== this.width) {\r\n            this.canvas.width = this.width;\r\n        }\r\n\r\n        if (this.canvas.height !== this.height) {\r\n            this.canvas.height = this.height;\r\n        }\r\n\r\n        if (!this.image) {\r\n            this.image = new ImageAsset();\r\n        }\r\n\r\n        this.image.reset(this.canvas);\r\n    }\r\n\r\n    private _updateTexture (): void {\r\n        if (!this.context || !this.canvas) {\r\n            return;\r\n        }\r\n\r\n        const context = this.context;\r\n        const labelInfo = this.labelInfo;\r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n        const fontScale = labelInfo.fontScale;\r\n\r\n        context.textAlign = 'center';\r\n        context.textBaseline = 'alphabetic';\r\n        context.clearRect(0, 0, width, height);\r\n        // Add a white background to avoid black edges.\r\n        context.fillStyle = _backgroundStyle;\r\n        context.fillRect(0, 0, width, height);\r\n        context.font = labelInfo.fontDesc.replace(\r\n            /(\\d+)(\\.\\d+)?(px|em|rem|pt)/g,\r\n            (w, m: string, n: string, u: string) => (+m * fontScale + (+n || 0) * fontScale).toString() + u,\r\n        );\r\n\r\n        const fontSize = labelInfo.fontSize * fontScale;\r\n        const startX = width / 2;\r\n        const startY = height / 2 + fontSize * MIDDLE_RATIO + fontSize * BASELINE_OFFSET;\r\n        const color = labelInfo.color;\r\n        // use round for line join to avoid sharp intersect point\r\n        context.lineJoin = 'round';\r\n        context.fillStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${1})`;\r\n        if (labelInfo.isOutlined) {\r\n            const strokeColor = labelInfo.out || WHITE;\r\n            context.strokeStyle = `rgba(${strokeColor.r}, ${strokeColor.g}, ${strokeColor.b}, ${strokeColor.a / 255})`;\r\n            context.lineWidth = labelInfo.margin * 2 * fontScale;\r\n            context.strokeText(this.char, startX, startY);\r\n        }\r\n        context.fillText(this.char, startX, startY);\r\n\r\n        // this.texture.handleLoadedTexture();\r\n        // (this.image as Texture2D).updateImage();\r\n    }\r\n}\r\n\r\nexport class LetterRenderTexture extends Texture2D {\r\n    /**\r\n     * @en\r\n     * Init the render texture with size.\r\n     * @zh\r\n     * 初始化 render texture。\r\n     * @param [width]\r\n     * @param [height]\r\n     * @param [string]\r\n     */\r\n    public initWithSize (width: number, height: number, format: number = PixelFormat.RGBA8888): void {\r\n        this.reset({\r\n            width,\r\n            height,\r\n            format,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en Draw a texture to the specified position\r\n     * @zh 将指定的图片渲染到指定的位置上。\r\n     * @param {Texture2D} image\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    public drawTextureAt (image: ImageAsset, x: number, y: number): void {\r\n        const gfxTexture = this.getGFXTexture();\r\n        if (!image || !gfxTexture) {\r\n            return;\r\n        }\r\n\r\n        const gfxDevice = this._getGFXDevice();\r\n        if (!gfxDevice) {\r\n            warnID(16363);\r\n            return;\r\n        }\r\n\r\n        const region = new BufferTextureCopy();\r\n        region.texOffset.x = x;\r\n        region.texOffset.y = y;\r\n        region.texExtent.width = image.width;\r\n        region.texExtent.height = image.height;\r\n        gfxDevice.copyTexImagesToTexture([image.data as HTMLCanvasElement], gfxTexture, [region]);\r\n    }\r\n}\r\n\r\nexport class LetterAtlas {\r\n    get width (): number {\r\n        return this._width;\r\n    }\r\n\r\n    get height (): number {\r\n        return this._height;\r\n    }\r\n\r\n    private _x = space;\r\n    private _y = space;\r\n    private _nextY = space;\r\n    private _width = 0;\r\n    private _height = 0;\r\n    private _halfBleed = 0;\r\n    public declare fontDefDictionary: FontAtlas;\r\n    private _dirty = false;\r\n\r\n    constructor (width: number, height: number) {\r\n        const texture = new LetterRenderTexture();\r\n        texture.initWithSize(width, height);\r\n\r\n        this.fontDefDictionary = new FontAtlas(texture);\r\n        this._halfBleed = bleed / 2;\r\n        this._width = width;\r\n        this._height = height;\r\n        director.on(DirectorEvent.BEFORE_SCENE_LAUNCH, this.beforeSceneLoad, this);\r\n    }\r\n\r\n    public insertLetterTexture (letterTexture: LetterTexture): FontLetterDefinition | null {\r\n        const img = letterTexture.image;\r\n        const device = director.root!.device;\r\n        if (!img || !this.fontDefDictionary || !device) {\r\n            return null;\r\n        }\r\n\r\n        const width = img.width;\r\n        const height = img.height;\r\n\r\n        if ((this._x + width + space) > this._width) {\r\n            this._x = space;\r\n            this._y = this._nextY;\r\n        }\r\n\r\n        if ((this._y + height) > this._nextY) {\r\n            this._nextY = this._y + height + space;\r\n        }\r\n\r\n        if (this._nextY > this._height) {\r\n            warnID(12100);\r\n            return null;\r\n        }\r\n\r\n        if (!this.fontDefDictionary.texture) {\r\n            return null;\r\n        }\r\n\r\n        const rt = this.fontDefDictionary.texture as LetterRenderTexture;\r\n        rt.drawTextureAt(img, this._x, this._y);\r\n\r\n        this._dirty = true;\r\n\r\n        const letterDefinition = new FontLetterDefinition();\r\n        letterDefinition.u = this._x + this._halfBleed;\r\n        letterDefinition.v = this._y + this._halfBleed;\r\n        letterDefinition.valid = true;\r\n        letterDefinition.w = letterTexture.width - bleed;\r\n        letterDefinition.h = letterTexture.height - bleed;\r\n        letterDefinition.xAdvance = letterDefinition.w;\r\n        letterDefinition.offsetY = letterTexture.offsetY;\r\n\r\n        this._x += width + space;\r\n        this.fontDefDictionary.addLetterDefinitions(letterTexture.hash, letterDefinition);\r\n        /*\r\n        const region = new BufferTextureCopy();\r\n        region.texOffset.x = letterDefinition.offsetX;\r\n        region.texOffset.y = letterDefinition.offsetY;\r\n        region.texExtent.width = letterDefinition.w;\r\n        region.texExtent.height = letterDefinition.h;\r\n        */\r\n\r\n        return letterDefinition;\r\n    }\r\n\r\n    public update (): void {\r\n        if (!this._dirty) {\r\n            return;\r\n        }\r\n        // this.texture.update();\r\n        this._dirty = false;\r\n    }\r\n\r\n    public reset (): void {\r\n        this._x = space;\r\n        this._y = space;\r\n        this._nextY = space;\r\n\r\n        // const chars = this.letterDefinitions;\r\n        // for (let i = 0, l = (Object.keys(chars)).length; i < l; i++) {\r\n        //     const char = chars[i];\r\n        //     if (!char.valid) {\r\n        //         continue;\r\n        //     }\r\n        //     char.destroy();\r\n        // }\r\n\r\n        // this.letterDefinitions = createMap();\r\n        this.fontDefDictionary.clear();\r\n    }\r\n\r\n    public destroy (): void {\r\n        this.reset();\r\n        const dict = this.fontDefDictionary;\r\n        if (dict && dict.texture) {\r\n            dict.texture = null;\r\n        }\r\n    }\r\n\r\n    getTexture (): TextureBase | null {\r\n        return this.fontDefDictionary.getTexture();\r\n    }\r\n\r\n    public beforeSceneLoad (): void {\r\n        this.clearAllCache();\r\n    }\r\n\r\n    public clearAllCache (): void {\r\n        this.destroy();\r\n\r\n        const texture = new LetterRenderTexture();\r\n        texture.initWithSize(this._width, this._height);\r\n\r\n        this.fontDefDictionary.texture = texture;\r\n    }\r\n\r\n    public getLetter (key: string): FontLetterDefinition {\r\n        return this.fontDefDictionary.letterDefinitions[key];\r\n    }\r\n\r\n    public getLetterDefinitionForChar (char: string, labelInfo: ILabelInfo): FontLetterDefinition | null {\r\n        const hash = getSymbolCodeAt(char, 0) + labelInfo.hash;\r\n        let letter: FontLetterDefinition | null = this.fontDefDictionary.letterDefinitions[hash];\r\n        if (!letter) {\r\n            const temp = new LetterTexture(char, labelInfo);\r\n            temp.updateRenderData();\r\n            letter = this.insertLetterTexture(temp);\r\n            temp.destroy();\r\n        }\r\n\r\n        return letter;\r\n    }\r\n}\r\n\r\nexport interface IShareLabelInfo {\r\n    fontAtlas: FontAtlas | LetterAtlas | null;\r\n    fontSize: number;\r\n    lineHeight: number;\r\n    hAlign: number;\r\n    vAlign: number;\r\n    hash: string;\r\n    fontFamily: string;\r\n    fontDesc: string;\r\n    color: Color;\r\n    isOutlined: boolean;\r\n    out: Color;\r\n    margin: number;\r\n    fontScale: number;\r\n}\r\n\r\nexport const shareLabelInfo: IShareLabelInfo = {\r\n    fontAtlas: null,\r\n    fontSize: 0,\r\n    lineHeight: 0,\r\n    hAlign: 0,\r\n    vAlign: 0,\r\n    hash: '',\r\n    fontFamily: '',\r\n    fontDesc: 'Arial',\r\n    color: Color.WHITE.clone(),\r\n    isOutlined: false,\r\n    out: Color.WHITE.clone(),\r\n    margin: 0,\r\n    fontScale: 1,\r\n};\r\n\r\nexport function computeHash (labelInfo): string {\r\n    const hashData = '';\r\n    const color = labelInfo.color.toHEX();\r\n    let out = '';\r\n    if (labelInfo.isOutlined && labelInfo.margin > 0) {\r\n        out = out + labelInfo.margin + labelInfo.out.toHEX();\r\n    }\r\n\r\n    return hashData + labelInfo.fontSize + labelInfo.fontFamily + color + out;\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass } from 'cc.decorator';\r\nimport { Asset } from '../../asset/assets';\r\nimport { cclegacy } from '../../core';\r\n\r\n/**\r\n * @en Class for Font handling.\r\n * @zh 字体资源类。\r\n */\r\n@ccclass('cc.Font')\r\nexport class Font extends Asset {\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n}\r\n\r\ncclegacy.Font = Font;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, string, override, serializable } from 'cc.decorator';\r\nimport { path, cclegacy } from '../../core';\r\nimport { Font } from './font';\r\n\r\n/**\r\n * @en Class for TTFFont asset.\r\n * @zh TTF 字体资源类。\r\n */\r\n@ccclass('cc.TTFFont')\r\nexport class TTFFont extends Font {\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @serializable\r\n    public _fontFamily: string | null = null;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @override\r\n    @string\r\n    get _nativeAsset (): string | null {\r\n        return this._fontFamily;\r\n    }\r\n    set _nativeAsset (value) {\r\n        this._fontFamily = value || 'Arial';\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @override\r\n    get _nativeDep (): {\r\n        uuid: string;\r\n        __nativeName__: string;\r\n        ext: string;\r\n        __isNative__: boolean;\r\n        } {\r\n        return { uuid: this._uuid, __nativeName__: this._native, ext: path.extname(this._native), __isNative__: true };\r\n    }\r\n\r\n    /**\r\n     * @en default init.\r\n     * @zh 默认初始化。\r\n     * @param uuid @en Asset uuid. @zh 资源 uuid。\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public initDefault (uuid?: string): void {\r\n        this._fontFamily = 'Arial';\r\n        super.initDefault(uuid);\r\n    }\r\n}\r\n\r\ncclegacy.TTFFont = TTFFont;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { warnID } from '../../core';\r\nimport { safeMeasureText } from './text-utils';\r\nimport downloader from '../../asset/asset-manager/downloader';\r\nimport factory from '../../asset/asset-manager/factory';\r\nimport { TTFFont } from '../assets/ttf-font';\r\nimport { ccwindow } from '../../core/global-exports';\r\n\r\nconst ccdocument = ccwindow.document;\r\n\r\ninterface IFontLoadHandle {\r\n    fontFamilyName: string;\r\n    refWidth: number;\r\n    onComplete: ((err: Error | null, data?: any | null) => void);\r\n    startTime: number;\r\n}\r\n\r\nlet _canvasContext: CanvasRenderingContext2D | null = null;\r\nlet _intervalId = -1;\r\n// letter symbol number CJK\r\nconst _testString = 'BES bswy:->@123\\u4E01\\u3041\\u1101';\r\n\r\nconst _fontFaces = Object.create(null);\r\n\r\nconst _loadingFonts: IFontLoadHandle[] = [];\r\n// 3 seconds timeout\r\nconst _timeout = 3000;\r\n\r\n// Refer to https://github.com/typekit/webfontloader/blob/master/src/core/fontwatcher.js\r\nconst useNativeCheck = ((): () => boolean => {\r\n    let nativeCheck: boolean;\r\n    return (): boolean => {\r\n        if (nativeCheck === undefined) {\r\n            if ('FontFace' in ccwindow) {\r\n                const match = /Gecko.*Firefox\\/(\\d+)/.exec(ccwindow.navigator.userAgent);\r\n                const safari10Match = /OS X.*Version\\/10\\..*Safari/.exec(ccwindow.navigator.userAgent) && /Apple/.exec(ccwindow.navigator.vendor);\r\n\r\n                if (match) {\r\n                    nativeCheck = parseInt(match[1], 10) > 42;\r\n                } else if (safari10Match) {\r\n                    nativeCheck = false;\r\n                } else {\r\n                    nativeCheck = true;\r\n                }\r\n            } else {\r\n                nativeCheck = false;\r\n            }\r\n        }\r\n\r\n        return nativeCheck;\r\n    };\r\n})();\r\n\r\nfunction checkFontLoaded (): void {\r\n    let allFontsLoaded = true;\r\n    const now = Date.now();\r\n\r\n    for (let i = _loadingFonts.length - 1; i >= 0; i--) {\r\n        const fontLoadHandle = _loadingFonts[i];\r\n        const fontFamily = fontLoadHandle.fontFamilyName;\r\n        // load timeout\r\n        if (now - fontLoadHandle.startTime > _timeout) {\r\n            warnID(4933, fontFamily);\r\n            fontLoadHandle.onComplete(null, fontFamily);\r\n            _loadingFonts.splice(i, 1);\r\n            continue;\r\n        }\r\n\r\n        const oldWidth = fontLoadHandle.refWidth;\r\n        const fontDesc = `40px ${fontFamily}`;\r\n        _canvasContext!.font = fontDesc;\r\n        const newWidth = safeMeasureText(_canvasContext!, _testString, fontDesc);\r\n        // loaded successfully\r\n        if (oldWidth !== newWidth) {\r\n            _loadingFonts.splice(i, 1);\r\n            fontLoadHandle.onComplete(null, fontFamily);\r\n        } else {\r\n            allFontsLoaded = false;\r\n        }\r\n    }\r\n\r\n    if (allFontsLoaded) {\r\n        clearInterval(_intervalId);\r\n        _intervalId = -1;\r\n    }\r\n}\r\n\r\n// refer to https://github.com/typekit/webfontloader/blob/master/src/core/nativefontwatchrunner.js\r\nfunction nativeCheckFontLoaded (start: number, font: string, callback: ((err: Error | null, data?: any | null) => void)): void {\r\n    const loader = new Promise<void>((resolve, reject) => {\r\n        const check = (): void => {\r\n            const now = Date.now();\r\n\r\n            if (now - start >= _timeout) {\r\n                reject();\r\n            } else {\r\n                (ccdocument as any).fonts.load(`40px ${font}`).then((fonts) => {\r\n                    if (fonts.length >= 1) {\r\n                        resolve();\r\n                    } else {\r\n                        setTimeout(check, 100);\r\n                    }\r\n                }, () => {\r\n                    reject();\r\n                });\r\n            }\r\n        };\r\n\r\n        check();\r\n    });\r\n\r\n    let timeoutId: number | null = null;\r\n    const timer = new Promise((resolve, reject) => {\r\n        timeoutId = setTimeout(reject, _timeout);\r\n    });\r\n\r\n    Promise.race([timer, loader]).then(() => {\r\n        if (timeoutId) {\r\n            clearTimeout(timeoutId);\r\n            timeoutId = null;\r\n        }\r\n\r\n        callback(null, font);\r\n    }, () => {\r\n        warnID(4933, font);\r\n        callback(null, font);\r\n    });\r\n}\r\n\r\nexport function loadFont (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any | null) => void)): void {\r\n    const fontFamilyName = getFontFamily(url);\r\n    // Already loaded fonts\r\n    if (_fontFaces[fontFamilyName]) {\r\n        onComplete(null, fontFamilyName);\r\n        return;\r\n    }\r\n\r\n    if (!_canvasContext) {\r\n        const labelCanvas = ccdocument.createElement('canvas');\r\n        labelCanvas.width = 100;\r\n        labelCanvas.height = 100;\r\n        _canvasContext = labelCanvas.getContext('2d');\r\n    }\r\n\r\n    // Default width reference to test whether new font is loaded correctly\r\n    const fontDesc = `40px ${fontFamilyName}`;\r\n\r\n    // Setup font face style\r\n    const fontStyle = ccdocument.createElement('style');\r\n    fontStyle.type = 'text/css';\r\n    let fontStr = '';\r\n    if (Number.isNaN(fontFamilyName)) {\r\n        fontStr += `@font-face { font-family:${fontFamilyName}; src:`;\r\n    } else {\r\n        fontStr += `@font-face { font-family:\"${fontFamilyName}\"; src:`;\r\n    }\r\n    fontStr += `url(\"${url}\");`;\r\n    fontStyle.textContent = `${fontStr}}`;\r\n    ccdocument.body.appendChild(fontStyle);\r\n\r\n    // Preload font with div\r\n    const preloadDiv = ccdocument.createElement('div');\r\n    const divStyle = preloadDiv.style;\r\n    divStyle.fontFamily = fontFamilyName;\r\n    preloadDiv.innerHTML = '.';\r\n    divStyle.position = 'absolute';\r\n    divStyle.left = '-100px';\r\n    divStyle.top = '-100px';\r\n    ccdocument.body.appendChild(preloadDiv);\r\n\r\n    if (useNativeCheck()) {\r\n        nativeCheckFontLoaded(Date.now(), fontFamilyName, onComplete);\r\n    } else {\r\n        const refWidth = safeMeasureText(_canvasContext!, _testString, fontDesc);\r\n        // Save loading font\r\n        const fontLoadHandle = {\r\n            fontFamilyName,\r\n            refWidth,\r\n            onComplete,\r\n            startTime: Date.now(),\r\n        };\r\n        _loadingFonts.push(fontLoadHandle);\r\n        if (_intervalId === -1) {\r\n            _intervalId = setInterval(checkFontLoaded, 100);\r\n        }\r\n    }\r\n    _fontFaces[fontFamilyName] = fontStyle;\r\n}\r\n\r\nexport function getFontFamily (fontHandle: string): string {\r\n    const ttfIndex = fontHandle.lastIndexOf('.ttf');\r\n    if (ttfIndex === -1) { return fontHandle; }\r\n\r\n    const slashPos = fontHandle.lastIndexOf('/');\r\n    let fontFamilyName: string;\r\n    if (slashPos === -1) {\r\n        fontFamilyName = `${fontHandle.substring(0, ttfIndex)}_LABEL`;\r\n    } else {\r\n        fontFamilyName = `${fontHandle.substring(slashPos + 1, ttfIndex)}_LABEL`;\r\n    }\r\n    if (fontFamilyName.indexOf(' ') !== -1) {\r\n        fontFamilyName = `\"${fontFamilyName}\"`;\r\n    }\r\n    return fontFamilyName;\r\n}\r\n\r\nfunction createFont (id: string, data: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: TTFFont | null) => void)): void {\r\n    const out = new TTFFont();\r\n    out._nativeUrl = id;\r\n    out._nativeAsset = data;\r\n    onComplete(null, out);\r\n}\r\n\r\ndownloader.register({\r\n    // font\r\n    '.font': loadFont,\r\n    '.eot': loadFont,\r\n    '.ttf': loadFont,\r\n    '.woff': loadFont,\r\n    '.svg': loadFont,\r\n    '.ttc': loadFont,\r\n});\r\n\r\nfactory.register({\r\n    // font\r\n    '.font': createFont,\r\n    '.eot': createFont,\r\n    '.ttf': createFont,\r\n    '.woff': createFont,\r\n    '.svg': createFont,\r\n    '.ttc': createFont,\r\n});\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { TEST } from 'internal:constants';\r\nimport { cclegacy } from '../../core';\r\n\r\n/**\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nconst eventRegx = /^(click)(\\s)*=|(param)(\\s)*=/;\r\nconst imageAttrReg = /(\\s)*src(\\s)*=|(\\s)*height(\\s)*=|(\\s)*width(\\s)*=|(\\s)*align(\\s)*=|(\\s)*offset(\\s)*=|(\\s)*click(\\s)*=|(\\s)*param(\\s)*=/;\r\n\r\n/**\r\n * @en A utils class for parsing HTML texts. The parsed results will be an object array.\r\n * @zh 一个用于解析HTML文本的工具类。解析后的结果将是一个对象数组。\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport interface IHtmlTextParserResultObj{\r\n    text?: string;\r\n    style?: IHtmlTextParserStack;\r\n}\r\n\r\n/**\r\n * @en Html Text Parser Stack interface\r\n * @zh Html 文本解析器接口\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport interface IHtmlTextParserStack{\r\n    color?: string;\r\n    size?: number;\r\n    event?: { [k: string]: string};\r\n    isNewLine?: boolean;\r\n    isImage?: boolean;\r\n    src?: string;\r\n    imageWidth?: number;\r\n    imageHeight?: number;\r\n    imageOffset?: string;\r\n    imageAlign?: string;\r\n    underline?: boolean;\r\n    italic?: boolean;\r\n    bold?: boolean;\r\n    outline?: { color: string, width: number };\r\n}\r\n\r\n/**\r\n * @en Html Text Parser Stack\r\n * @zh Html 文本解析器\r\n * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport class HtmlTextParser {\r\n    private _specialSymbolArray: Array<[RegExp, string]> = [];\r\n    private _stack: IHtmlTextParserStack[] = [];\r\n    private _resultObjectArray: IHtmlTextParserResultObj[] = [];\r\n\r\n    constructor () {\r\n        this._specialSymbolArray.push([/&lt;/g, '<']);\r\n        this._specialSymbolArray.push([/&gt;/g, '>']);\r\n        this._specialSymbolArray.push([/&amp;/g, '&']);\r\n        this._specialSymbolArray.push([/&quot;/g, '\"']);\r\n        this._specialSymbolArray.push([/&apos;/g, '\\'']);\r\n    }\r\n\r\n    public parse (htmlString: string): IHtmlTextParserResultObj[] {\r\n        this._resultObjectArray.length = 0;\r\n        this._stack.length = 0;\r\n\r\n        let startIndex = 0;\r\n        const length = htmlString.length;\r\n        while (startIndex < length) {\r\n            let tagEndIndex = htmlString.indexOf('>', startIndex);\r\n            let tagBeginIndex = -1;\r\n            if (tagEndIndex >= 0) {\r\n                tagBeginIndex = htmlString.lastIndexOf('<', tagEndIndex);\r\n                const noTagBegin = tagBeginIndex < (startIndex - 1);\r\n\r\n                if (noTagBegin) {\r\n                    tagBeginIndex = htmlString.indexOf('<', tagEndIndex + 1);\r\n                    tagEndIndex = htmlString.indexOf('>', tagBeginIndex + 1);\r\n                }\r\n            }\r\n            if (tagBeginIndex < 0) {\r\n                this._stack.pop();\r\n                this._processResult(htmlString.substring(startIndex));\r\n                startIndex = length;\r\n            } else {\r\n                let newStr = htmlString.substring(startIndex, tagBeginIndex);\r\n                const tagStr = htmlString.substring(tagBeginIndex + 1, tagEndIndex);\r\n                if (tagStr === '') newStr = htmlString.substring(startIndex, tagEndIndex + 1);\r\n                this._processResult(newStr);\r\n                if (tagEndIndex === -1) {\r\n                    // cc.error('The HTML tag is invalid!');\r\n                    tagEndIndex = tagBeginIndex;\r\n                } else if (htmlString.charAt(tagBeginIndex + 1) === '/') {\r\n                    this._stack.pop();\r\n                } else {\r\n                    this._addToStack(tagStr);\r\n                }\r\n                startIndex = tagEndIndex + 1;\r\n            }\r\n        }\r\n\r\n        return this._resultObjectArray;\r\n    }\r\n\r\n    private _attributeToObject (attribute: string): IHtmlTextParserStack {\r\n        attribute = attribute.trim();\r\n\r\n        const obj: IHtmlTextParserStack = {};\r\n        let header = /^(color|size)(\\s)*=/.exec(attribute);\r\n        let tagName = '';\r\n        let nextSpace = 0;\r\n        let eventHandlerString = '';\r\n        if (header) {\r\n            tagName = header[0];\r\n            attribute = attribute.substring(tagName.length).trim();\r\n            if (attribute === '') {\r\n                return obj;\r\n            }\r\n\r\n            // parse color\r\n            nextSpace = attribute.indexOf(' ');\r\n            switch (tagName[0]) {\r\n            case 'c':\r\n                if (nextSpace > -1) {\r\n                    obj.color = attribute.substring(0, nextSpace).trim();\r\n                } else {\r\n                    obj.color = attribute;\r\n                }\r\n                break;\r\n            case 's':\r\n                obj.size = parseInt(attribute);\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n\r\n            // tag has event arguments\r\n            if (nextSpace > -1) {\r\n                eventHandlerString = attribute.substring(nextSpace + 1).trim();\r\n                obj.event = this._processEventHandler(eventHandlerString);\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        header = /^(br(\\s)*\\/)/.exec(attribute);\r\n        if (header && header[0].length > 0) {\r\n            tagName = header[0].trim();\r\n            if (tagName.startsWith('br') && tagName[tagName.length - 1] === '/') {\r\n                obj.isNewLine = true;\r\n                this._resultObjectArray.push({ text: '', style: { isNewLine: true } as IHtmlTextParserStack });\r\n                return obj;\r\n            }\r\n        }\r\n\r\n        header = /^(img(\\s)*src(\\s)*=[^>]+\\/)/.exec(attribute);\r\n        let remainingArgument = '';\r\n        let rightQuot = -1;\r\n        if (header && header[0].length > 0) {\r\n            tagName = header[0].trim();\r\n            if (tagName.startsWith('img') && tagName[tagName.length - 1] === '/') {\r\n                header = imageAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                let isValidImageTag = false;\r\n                while (header) {\r\n                    // skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substring(0, header[0].length);\r\n                    const originTagNameLength = tagName.length;\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, '').trim();\r\n                    tagName = tagName.toLowerCase();\r\n\r\n                    // remove space and = character\r\n                    remainingArgument = attribute.substring(originTagNameLength).trim();\r\n                    if (tagName === 'src') {\r\n                        rightQuot = this.getRightQuotationIndex(remainingArgument);\r\n                    } else {\r\n                        rightQuot = -1;\r\n                    }\r\n                    nextSpace = remainingArgument.indexOf(' ', rightQuot + 1 >= remainingArgument.length ? -1 : rightQuot + 1);\r\n                    tagValue = (nextSpace > -1) ? remainingArgument.substring(0, nextSpace) : remainingArgument;\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n\r\n                    if (tagValue.endsWith('/')) {\r\n                        tagValue = tagValue.slice(0, -1);\r\n                    }\r\n                    if (tagName === 'src') {\r\n                        switch (tagValue.charCodeAt(0)) {\r\n                        case 34: // \"\r\n                        case 39: // '\r\n                            isValidImageTag = true;\r\n                            tagValue = tagValue.slice(1, -1);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                        }\r\n                        obj.isImage = true;\r\n                        obj.src = tagValue;\r\n                    } else if (tagName === 'height') {\r\n                        obj.imageHeight = parseInt(tagValue);\r\n                    } else if (tagName === 'width') {\r\n                        obj.imageWidth = parseInt(tagValue);\r\n                    } else if (tagName === 'align') {\r\n                        switch (tagValue.charCodeAt(0)) {\r\n                        case 34: // \"\r\n                        case 39: // '\r\n                            tagValue = tagValue.slice(1, -1);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                        }\r\n                        obj.imageAlign = tagValue.toLowerCase();\r\n                    } else if (tagName === 'offset') {\r\n                        obj.imageOffset = tagValue;\r\n                    } else if (tagName === 'click') {\r\n                        obj.event = this._processEventHandler(`${tagName}=${tagValue}`);\r\n                    }\r\n\r\n                    if (obj.event && tagName === 'param') {\r\n                        obj.event[tagName] = tagValue.replace(/^\"|\"$/g, '');\r\n                    }\r\n\r\n                    header = imageAttrReg.exec(attribute);\r\n                }\r\n\r\n                if (isValidImageTag && obj.isImage) {\r\n                    this._resultObjectArray.push({ text: '', style: obj });\r\n                }\r\n\r\n                return {};\r\n            }\r\n        }\r\n\r\n        header = /^(outline(\\s)*[^>]*)/.exec(attribute);\r\n        if (header) {\r\n            attribute = header[0].substring('outline'.length).trim();\r\n            const defaultOutlineObject = { color: '#ffffff', width: 1 };\r\n            if (attribute) {\r\n                const outlineAttrReg = /(\\s)*color(\\s)*=|(\\s)*width(\\s)*=|(\\s)*click(\\s)*=|(\\s)*param(\\s)*=/;\r\n                header = outlineAttrReg.exec(attribute);\r\n                let tagValue: string;\r\n                while (header) {\r\n                    // skip the invalid tags at first\r\n                    attribute = attribute.substring(attribute.indexOf(header[0]));\r\n                    tagName = attribute.substring(0, header[0].length);\r\n                    // remove space and = character\r\n                    remainingArgument = attribute.substring(tagName.length).trim();\r\n                    nextSpace = remainingArgument.indexOf(' ');\r\n                    if (nextSpace > -1) {\r\n                        tagValue = remainingArgument.substring(0, nextSpace);\r\n                    } else {\r\n                        tagValue = remainingArgument;\r\n                    }\r\n                    tagName = tagName.replace(/[^a-zA-Z]/g, '').trim();\r\n                    tagName = tagName.toLowerCase();\r\n\r\n                    attribute = remainingArgument.substring(nextSpace).trim();\r\n                    if (tagName === 'click') {\r\n                        obj.event = this._processEventHandler(`${tagName}=${tagValue}`);\r\n                    } else if (tagName === 'color') {\r\n                        defaultOutlineObject.color = tagValue;\r\n                    } else if (tagName === 'width') {\r\n                        defaultOutlineObject.width = parseInt(tagValue);\r\n                    }\r\n\r\n                    if (obj.event && tagName === 'param') {\r\n                        obj.event[tagName] = tagValue.replace(/^\"|\"$/g, '');\r\n                    }\r\n\r\n                    header = outlineAttrReg.exec(attribute);\r\n                }\r\n            }\r\n            obj.outline = defaultOutlineObject;\r\n        }\r\n\r\n        header = /^(on|u|b|i)(\\s)*/.exec(attribute);\r\n        if (header && header[0].length > 0) {\r\n            tagName = header[0];\r\n            attribute = attribute.substring(tagName.length).trim();\r\n            switch (tagName[0]) {\r\n            case 'u':\r\n                obj.underline = true;\r\n                break;\r\n            case 'i':\r\n                obj.italic = true;\r\n                break;\r\n            case 'b':\r\n                obj.bold = true;\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n            if (attribute === '') {\r\n                return obj;\r\n            }\r\n\r\n            obj.event = this._processEventHandler(attribute);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    // find the right part of the first pair of following quotations.\r\n    private getRightQuotationIndex (remainingArgument: string): number {\r\n        let leftQuot = -1;\r\n        let rightQuot = -1;\r\n        // Skip a pair of quotations for avoiding spaces in image name are detected.\r\n        const leftSingleQuot = remainingArgument.indexOf('\\'');\r\n        const leftDoubleQuot = remainingArgument.indexOf('\"');\r\n\r\n        const useSingleQuot = leftSingleQuot  > -1 && (leftSingleQuot < leftDoubleQuot || leftDoubleQuot === -1);\r\n        const useDoubleQuot = leftDoubleQuot > -1 && (leftDoubleQuot < leftSingleQuot || leftSingleQuot === -1);\r\n        if (useSingleQuot) {\r\n            leftQuot = leftSingleQuot;\r\n            rightQuot = remainingArgument.indexOf('\\'', leftQuot + 1 >= remainingArgument.length ? -1 : leftQuot + 1);\r\n        } else if (useDoubleQuot) {\r\n            leftQuot = leftDoubleQuot;\r\n            rightQuot = remainingArgument.indexOf('\"', leftQuot + 1 >= remainingArgument.length ? -1 : leftQuot + 1);\r\n        }\r\n\r\n        return rightQuot;\r\n    }\r\n\r\n    private _processEventHandler (eventString: string): Record<string, any> {\r\n        const obj = {};\r\n        let index = 0;\r\n        let isValidTag = false;\r\n        let eventNames = eventRegx.exec(eventString);\r\n        while (eventNames) {\r\n            let eventName = eventNames[0];\r\n            let eventValue = '';\r\n            isValidTag = false;\r\n            eventString = eventString.substring(eventName.length).trim();\r\n            if (eventString.charAt(0) === '\"') {\r\n                index = eventString.indexOf('\"', 1);\r\n                if (index > -1) {\r\n                    eventValue = eventString.substring(1, index).trim();\r\n                    isValidTag = true;\r\n                }\r\n                index++;\r\n            } else if (eventString.charAt(0) === '\\'') {\r\n                index = eventString.indexOf('\\'', 1);\r\n                if (index > -1) {\r\n                    eventValue = eventString.substring(1, index).trim();\r\n                    isValidTag = true;\r\n                }\r\n                index++;\r\n            } else {\r\n                // skip the invalid attribute value\r\n                const match = /(\\S)+/.exec(eventString);\r\n                if (match) {\r\n                    eventValue = match[0];\r\n                } else {\r\n                    eventValue = '';\r\n                }\r\n                index = eventValue.length;\r\n            }\r\n\r\n            if (isValidTag) {\r\n                eventName = eventName.substring(0, eventName.length - 1).trim();\r\n                obj[eventName] = eventValue;\r\n            }\r\n\r\n            eventString = eventString.substring(index).trim();\r\n            eventNames = eventRegx.exec(eventString);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    private _addToStack (attribute: string): void {\r\n        const obj = this._attributeToObject(attribute);\r\n\r\n        if (this._stack.length === 0) {\r\n            this._stack.push(obj);\r\n        } else {\r\n            if (obj.isNewLine || obj.isImage) {\r\n                return;\r\n            }\r\n            // for nested tags\r\n            const previousTagObj = this._stack[this._stack.length - 1];\r\n            for (const key in previousTagObj) {\r\n                if (!(obj[key])) {\r\n                    obj[key] = previousTagObj[key];\r\n                }\r\n            }\r\n            this._stack.push(obj);\r\n        }\r\n    }\r\n\r\n    private _processResult (value: string): void {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n\r\n        value = this._escapeSpecialSymbol(value);\r\n        if (this._stack.length > 0) {\r\n            this._resultObjectArray.push({ text: value, style: this._stack[this._stack.length - 1] });\r\n        } else {\r\n            this._resultObjectArray.push({ text: value } as IHtmlTextParserResultObj);\r\n        }\r\n    }\r\n\r\n    private _escapeSpecialSymbol (str: string): string {\r\n        for (const symbolArr of this._specialSymbolArray) {\r\n            const key = symbolArr[0];\r\n            const value = symbolArr[1];\r\n\r\n            str = str.replace(key, value);\r\n        }\r\n\r\n        return str;\r\n    }\r\n}\r\n\r\nif (TEST) {\r\n    cclegacy._Test.HtmlTextParser = HtmlTextParser;\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, type, serializable, editable } from 'cc.decorator';\r\nimport { Font } from './font';\r\nimport { SpriteFrame } from './sprite-frame';\r\nimport { cclegacy, js, warnID } from '../../core';\r\nimport { getSymbolCodeAt } from '../utils';\r\nimport { IShareLabelInfo } from '../assembler/label/font-utils';\r\nimport { TextureBase } from '../../asset/assets/texture-base';\r\n\r\nexport interface IConfig {\r\n    [key: string]: any;\r\n}\r\n\r\nexport class FontLetterDefinition {\r\n    public u = 0;\r\n    public v = 0;\r\n    public w = 0;\r\n    public h = 0;\r\n    public offsetX = 0;\r\n    public offsetY = 0;\r\n    public valid = false;\r\n    public xAdvance = 0;\r\n}\r\n\r\nexport interface ILetterDefinition {\r\n    [key: string]: FontLetterDefinition;\r\n}\r\n\r\nexport class FontAtlas {\r\n    public letterDefinitions: ILetterDefinition = {};\r\n    public _texture: TextureBase | null = null;\r\n\r\n    constructor (texture: TextureBase | null) {\r\n        this.texture = texture;\r\n    }\r\n\r\n    public set texture (texture: TextureBase | null) {\r\n        const oldTexture = this._texture;\r\n        if (oldTexture === texture) return;\r\n        if (oldTexture) {\r\n            oldTexture.decRef(false);\r\n            if (oldTexture.refCount <= 0) {\r\n                oldTexture.destroy();\r\n            }\r\n        }\r\n        if (texture) {\r\n            texture.addRef();\r\n        }\r\n        this._texture = texture;\r\n    }\r\n\r\n    public get texture (): TextureBase | null {\r\n        return this._texture;\r\n    }\r\n\r\n    public addLetterDefinitions (letter: string, letterDefinition: FontLetterDefinition): void {\r\n        this.letterDefinitions[letter] = letterDefinition;\r\n    }\r\n\r\n    public cloneLetterDefinition (): ILetterDefinition {\r\n        const copyLetterDefinitions: ILetterDefinition = {};\r\n        for (const key in this.letterDefinitions) {\r\n            const value = new FontLetterDefinition();\r\n            js.mixin(value, this.letterDefinitions[key]);\r\n            copyLetterDefinitions[key] = value;\r\n        }\r\n        return copyLetterDefinitions;\r\n    }\r\n\r\n    public getTexture (): TextureBase | null {\r\n        return this._texture;\r\n    }\r\n\r\n    public getLetter (key: string): FontLetterDefinition {\r\n        return this.letterDefinitions[key];\r\n    }\r\n\r\n    public getLetterDefinitionForChar (char: string, labelInfo?: IShareLabelInfo): FontLetterDefinition | null {\r\n        const key = getSymbolCodeAt(char, 0);\r\n        const hasKey = Object.prototype.hasOwnProperty.call(this.letterDefinitions, key);\r\n        let letter: FontLetterDefinition | null = null;\r\n        if (hasKey) {\r\n            letter = this.letterDefinitions[key];\r\n        }\r\n        return letter;\r\n    }\r\n\r\n    public clear (): void {\r\n        this.letterDefinitions = {};\r\n    }\r\n}\r\n\r\n/**\r\n * @en Class for BitmapFont handling.\r\n * @zh 位图字体资源类。\r\n */\r\n@ccclass('cc.BitmapFont')\r\nexport class BitmapFont extends Font {\r\n    /**\r\n     * @deprecated since v3.7.0, Useless Code.\r\n     */\r\n    @serializable\r\n    @editable\r\n    public fntDataStr = '';\r\n\r\n    /**\r\n     * @en [[SpriteFrame]] of the bitmap font.\r\n     * @zh 位图字体所使用的精灵。\r\n     */\r\n    @type(SpriteFrame)\r\n    public spriteFrame: SpriteFrame | null = null;\r\n\r\n    /**\r\n     * @en The font size.\r\n     * @zh 文字尺寸。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public fontSize = -1;\r\n\r\n    /**\r\n     * @en Font configuration.\r\n     * @zh 字体配置。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public fntConfig: IConfig | null = null;\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public declare fontDefDictionary: FontAtlas;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    onLoaded (): void {\r\n        const spriteFrame = this.spriteFrame;\r\n        if (!this.fontDefDictionary && spriteFrame) {\r\n            this.fontDefDictionary = new FontAtlas(spriteFrame.texture);\r\n        }\r\n\r\n        const fntConfig = this.fntConfig;\r\n        if (!fntConfig) {\r\n            warnID(16376);\r\n            return;\r\n        }\r\n\r\n        const fontDict = fntConfig.fontDefDictionary;\r\n        for (const fontDef in fontDict) {\r\n            const info = fontDict[fontDef];\r\n            const letter = new FontLetterDefinition();\r\n            const rect = info.rect;\r\n            letter.offsetX = info.xOffset;\r\n            letter.offsetY = info.yOffset;\r\n            letter.w = rect.width;\r\n            letter.h = rect.height;\r\n            letter.u = rect.x;\r\n            letter.v = rect.y;\r\n            letter.valid = true;\r\n            letter.xAdvance = info.xAdvance;\r\n\r\n            this.fontDefDictionary.addLetterDefinitions(fontDef, letter);\r\n        }\r\n    }\r\n}\r\n\r\ncclegacy.BitmapFont = BitmapFont;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass } from 'cc.decorator';\r\nimport { BitmapFont } from './bitmap-font';\r\nimport { cclegacy } from '../../core';\r\n/**\r\n * @en Class for LabelAtlas handling.\r\n * @zh 艺术数字字体资源类。\r\n *\r\n */\r\n@ccclass('cc.LabelAtlas')\r\nexport class LabelAtlas extends BitmapFont {\r\n}\r\n\r\ncclegacy.LabelAtlas = LabelAtlas;\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Color } from '../../../core';\r\nimport { IConfig } from '../../assets/bitmap-font';\r\nimport { SpriteFrame } from '../../assets/sprite-frame';\r\n\r\nexport class TextStyle {\r\n    // ---------------ttf extra part-----------------\r\n    // bold // style\r\n    public isBold = false; // ttf\r\n    // Italic // style\r\n    public isItalic = false; // ttf\r\n    // under line // style\r\n    public isUnderline = false; // ttf\r\n    public underlineHeight = 1; // ttf\r\n    // outline style\r\n    public isOutlined = false; // both // ttf & char\r\n    public outlineColor = Color.WHITE.clone(); // both // ttf & char\r\n    public outlineWidth = 1; // both // ttf & char\r\n    // shadowStyle\r\n    public hasShadow = false; // ttf\r\n    public shadowColor = Color.BLACK.clone(); // ttf\r\n    public shadowBlur = 2; // ttf\r\n    public shadowOffsetX = 0; // ttf\r\n    public shadowOffsetY = 0; // ttf\r\n\r\n    public color = Color.WHITE.clone(); // both\r\n\r\n    public fontSize = 40; // input fonSize // both\r\n    public actualFontSize = 0; // both\r\n\r\n    public isSystemFontUsed = false; // both // ttf & char\r\n\r\n    // -----------------------bitMap extra part-------------------------\r\n\r\n    public originFontSize = 0; //Layout // both\r\n    public bmfontScale = 1.0;// both\r\n\r\n    // font info // todo merge to font\r\n    public fontFamily = 'Arial'; // both\r\n    public fontDesc = ''; // both\r\n\r\n    // -----------------------bitMap extra part-------------------------\r\n\r\n    // font info // todo remove\r\n    public fntConfig: IConfig | null = null; // For char mode,not have asset\r\n    public spriteFrame: SpriteFrame | null = null; // For char mode,not have spriteFrame in asset\r\n\r\n    public fontScale = 1;\r\n\r\n    public reset (): void {\r\n        this.isBold = false;\r\n        this.isItalic = false;\r\n        this.isUnderline = false;\r\n        this.underlineHeight = 1;\r\n        this.isOutlined = false;\r\n        this.outlineColor.set();\r\n        this.outlineWidth = 1;\r\n        this.hasShadow = false;\r\n        this.shadowColor.set();\r\n        this.shadowBlur = 2;\r\n        this.shadowOffsetX = 0;\r\n        this.shadowOffsetY = 0;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, displayOrder, visible, multiline, type, serializable, editable } from 'cc.decorator';\r\nimport { BYTEDANCE, EDITOR, JSB } from 'internal:constants';\r\nimport { minigame } from 'pal/minigame';\r\nimport { BitmapFont, Font, SpriteFrame } from '../assets';\r\nimport { ImageAsset, Texture2D } from '../../asset/assets';\r\nimport { ccenum, cclegacy, Color, Vec2 } from '../../core';\r\nimport { IBatcher } from '../renderer/i-batcher';\r\nimport { FontAtlas } from '../assets/bitmap-font';\r\nimport { CanvasPool, ISharedLabelData, LetterRenderTexture } from '../assembler/label/font-utils';\r\nimport { InstanceMaterialType, UIRenderer } from '../framework/ui-renderer';\r\nimport { TextureBase } from '../../asset/assets/texture-base';\r\nimport { PixelFormat } from '../../asset/assets/asset-enum';\r\nimport { BlendFactor } from '../../gfx';\r\nimport { TextStyle } from '../assembler/label/text-style';\r\nimport { TextLayout } from '../assembler/label/text-layout';\r\nimport { TextOutputLayoutData, TextOutputRenderData } from '../assembler/label/text-output-data';\r\nimport type { RenderData } from '../renderer/render-data';\r\nimport type { LetterFont } from '../assembler/label/letter-font';\r\nimport type { TTF } from '../assembler/label/ttf';\r\n\r\nconst tempColor = Color.WHITE.clone();\r\n/**\r\n * @en Enum for horizontal text alignment.\r\n *\r\n * @zh 文本横向对齐类型。\r\n */\r\nexport enum HorizontalTextAlignment {\r\n    /**\r\n     * @en Alignment left for text.\r\n     *\r\n     * @zh 左对齐。\r\n     */\r\n    LEFT = 0,\r\n    /**\r\n     * @en Alignment center for text.\r\n     *\r\n     * @zh 中心对齐。\r\n     */\r\n    CENTER = 1,\r\n    /**\r\n     * @en Alignment right for text.\r\n     *\r\n     * @zh 右对齐。\r\n     */\r\n    RIGHT = 2,\r\n}\r\n\r\nccenum(HorizontalTextAlignment);\r\n\r\n/**\r\n * @en Enum for vertical text alignment.\r\n *\r\n * @zh 文本垂直对齐类型。\r\n */\r\nexport enum VerticalTextAlignment {\r\n    /**\r\n     * @en Alignment top for text.\r\n     *\r\n     * @zh 上对齐。\r\n     */\r\n    TOP = 0,\r\n    /**\r\n     * @en Alignment center for text.\r\n     *\r\n     * @zh 中心对齐。\r\n     */\r\n    CENTER = 1,\r\n    /**\r\n     * @en Alignment bottom for text.\r\n     *\r\n     * @zh 下对齐。\r\n     */\r\n    BOTTOM = 2,\r\n}\r\n\r\nccenum(VerticalTextAlignment);\r\n\r\n/**\r\n * @en Enum for Overflow.\r\n *\r\n * @zh 文本溢出行为类型。\r\n */\r\nexport enum Overflow {\r\n    /**\r\n     * @en None.\r\n     *\r\n     * @zh 不做任何限制。\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * @en In CLAMP mode, when label content goes out of the bounding box, it will be clipped.\r\n     *\r\n     * @zh CLAMP 模式中，当文本内容超出边界框时，多余的会被截断。\r\n     */\r\n    CLAMP = 1,\r\n    /**\r\n     * @en In SHRINK mode, the font size will change dynamically to adapt the content size.\r\n     * This mode may takes up more CPU resources when the label is refreshed.\r\n     *\r\n     * @zh SHRINK 模式，字体大小会动态变化，以适应内容大小。这个模式在文本刷新的时候可能会占用较多 CPU 资源。\r\n     */\r\n    SHRINK = 2,\r\n    /**\r\n     * @en In RESIZE_HEIGHT mode, you can only change the width of label and the height is changed automatically.\r\n     *\r\n     * @zh 在 RESIZE_HEIGHT 模式下，只能更改文本的宽度，高度是自动改变的。\r\n     */\r\n    RESIZE_HEIGHT = 3,\r\n}\r\n\r\nccenum(Overflow);\r\n\r\n/**\r\n * @en Enum for cache mode.\r\n *\r\n * @zh 文本图集缓存类型。\r\n */\r\nexport enum CacheMode {\r\n    /**\r\n     * @en Do not do any caching.\r\n     *\r\n     * @zh 不做任何缓存。\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * @en In BITMAP mode, cache the label as a static image and add it to the dynamic atlas for batch rendering,\r\n     * and can batching with Sprites using broken images.\r\n     *\r\n     * @zh BITMAP 模式，将 label 缓存成静态图像并加入到动态图集，以便进行批次合并，可与使用碎图的 Sprite 进行合批。\r\n     * （注：动态图集在 Chrome 以及微信小游戏暂时关闭，该功能无效）。\r\n     */\r\n    BITMAP = 1,\r\n    /**\r\n     * @en In CHAR mode, split text into characters and cache characters into a dynamic atlas which the size of 1024 * 1024.\r\n     *\r\n     * @zh CHAR 模式，将文本拆分为字符，并将字符缓存到一张单独的大小为 1024 * 1024 的图集中进行重复使用，不再使用动态图集。\r\n     * （注：当图集满时将不再进行缓存，暂时不支持 SHRINK 自适应文本尺寸（后续完善））。\r\n     */\r\n    CHAR = 2,\r\n}\r\n\r\nccenum(CacheMode);\r\n\r\n/**\r\n * @en\r\n * The Label Component.\r\n *\r\n * @zh\r\n * 文字标签组件。\r\n */\r\n@ccclass('cc.Label')\r\n@help('i18n:cc.Label')\r\n@executionOrder(110)\r\n@menu('2D/Label')\r\nexport class Label extends UIRenderer {\r\n    /**\r\n     * @en Enum for horizontal text alignment.\r\n     *\r\n     * @zh 文本横向对齐类型。\r\n     */\r\n    public static HorizontalAlign = HorizontalTextAlignment;\r\n    /**\r\n     * @en Enum for vertical text alignment.\r\n     *\r\n     * @zh 文本垂直对齐类型。\r\n     */\r\n    public static VerticalAlign = VerticalTextAlignment;\r\n    /**\r\n     * @en Enum for label overflow mode.\r\n     *\r\n     * @zh 文本溢出行为类型。\r\n     */\r\n    public static Overflow = Overflow;\r\n    /**\r\n     * @en Enum for cache mode.\r\n     *\r\n     * @zh 文本图集缓存类型。\r\n     */\r\n    public static CacheMode = CacheMode;\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public static _canvasPool = CanvasPool.getInstance();\r\n\r\n    /**\r\n     * @en\r\n     * Content string of label.\r\n     *\r\n     * @zh\r\n     * 标签显示的文本内容。\r\n     */\r\n    @displayOrder(4)\r\n    @multiline\r\n    get string (): string {\r\n        return this._string;\r\n    }\r\n    set string (value) {\r\n        if (value === null || value === undefined) {\r\n            value = '';\r\n        } else {\r\n            value = value.toString();\r\n        }\r\n\r\n        if (this._string === value) {\r\n            return;\r\n        }\r\n\r\n        this._string = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Horizontal Alignment of label.\r\n     *\r\n     * @zh\r\n     * 文本内容的水平对齐方式。\r\n     */\r\n    @type(HorizontalTextAlignment)\r\n    @displayOrder(5)\r\n    get horizontalAlign (): HorizontalTextAlignment {\r\n        return this._horizontalAlign;\r\n    }\r\n    set horizontalAlign (value) {\r\n        if (this._horizontalAlign === value) {\r\n            return;\r\n        }\r\n\r\n        this._horizontalAlign = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Vertical Alignment of label.\r\n     *\r\n     * @zh\r\n     * 文本内容的垂直对齐方式。\r\n     */\r\n    @type(VerticalTextAlignment)\r\n    @displayOrder(6)\r\n    get verticalAlign (): VerticalTextAlignment {\r\n        return this._verticalAlign;\r\n    }\r\n    set verticalAlign (value) {\r\n        if (this._verticalAlign === value) {\r\n            return;\r\n        }\r\n\r\n        this._verticalAlign = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The actual rendering font size in shrink mode.\r\n     *\r\n     * @zh\r\n     * SHRINK 模式下面文本实际渲染的字体大小。\r\n     */\r\n    get actualFontSize (): number {\r\n        return this._actualFontSize;\r\n    }\r\n    set actualFontSize (value) {\r\n        this._actualFontSize = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Font size of label.\r\n     *\r\n     * @zh\r\n     * 文本字体大小。\r\n     */\r\n    @displayOrder(7)\r\n    get fontSize (): number {\r\n        return this._fontSize;\r\n    }\r\n    set fontSize (value) {\r\n        if (this._fontSize === value) {\r\n            return;\r\n        }\r\n\r\n        this._fontSize = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Line Height of label.\r\n     *\r\n     * @zh\r\n     * 文本行高。\r\n     */\r\n    @displayOrder(8)\r\n    get lineHeight (): number {\r\n        return this._lineHeight;\r\n    }\r\n    set lineHeight (value) {\r\n        if (this._lineHeight === value) {\r\n            return;\r\n        }\r\n\r\n        this._lineHeight = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The spacing between text characters, only available in BMFont.\r\n     *\r\n     * @zh\r\n     * 文本字符之间的间距。仅在使用 BMFont 位图字体时生效。\r\n     */\r\n    @visible(function (this: Label) {\r\n        return !this._isSystemFontUsed && this._font instanceof BitmapFont;\r\n    })\r\n    @displayOrder(9)\r\n    get spacingX (): number {\r\n        return this._spacingX;\r\n    }\r\n    set spacingX (value) {\r\n        if (this._spacingX === value) {\r\n            return;\r\n        }\r\n\r\n        this._spacingX = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Overflow of label.\r\n     *\r\n     * @zh\r\n     * 文字显示超出范围时的处理方式。\r\n     */\r\n    @type(Overflow)\r\n    @displayOrder(10)\r\n    get overflow (): Overflow {\r\n        return this._overflow;\r\n    }\r\n    set overflow (value) {\r\n        if (this._overflow === value) {\r\n            return;\r\n        }\r\n\r\n        this._overflow = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether auto wrap label when string width is large than label width.\r\n     *\r\n     * @zh\r\n     * 是否自动换行。\r\n     */\r\n    @displayOrder(11)\r\n    get enableWrapText (): boolean {\r\n        return this._enableWrapText;\r\n    }\r\n    set enableWrapText (value) {\r\n        if (this._enableWrapText === value) {\r\n            return;\r\n        }\r\n\r\n        this._enableWrapText = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether use system font name or not.\r\n     *\r\n     * @zh\r\n     * 是否使用系统字体。\r\n     */\r\n    @displayOrder(12)\r\n    get useSystemFont (): boolean {\r\n        return this._isSystemFontUsed;\r\n    }\r\n    set useSystemFont (value) {\r\n        if (this._isSystemFontUsed === value) {\r\n            return;\r\n        }\r\n\r\n        this.destroyRenderData();\r\n\r\n        if (EDITOR) {\r\n            if (!value && this._isSystemFontUsed && this._userDefinedFont) {\r\n                this.font = this._userDefinedFont;\r\n                this.spacingX = this._spacingX;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._isSystemFontUsed = !!value;\r\n        if (value) {\r\n            this.font = null;\r\n        }\r\n        this._flushAssembler();\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Font family of label, only take effect when useSystemFont property is true.\r\n     *\r\n     * @zh\r\n     * 文本字体名称, 只在 useSystemFont 属性为 true 的时候生效。\r\n     */\r\n    @displayOrder(13)\r\n    @visible(function (this: Label) { return this._isSystemFontUsed; })\r\n    get fontFamily (): string {\r\n        return this._fontFamily;\r\n    }\r\n    set fontFamily (value) {\r\n        if (this._fontFamily === value) {\r\n            return;\r\n        }\r\n\r\n        this._fontFamily = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The font of label.\r\n     *\r\n     * @zh\r\n     * 文本字体。\r\n     */\r\n    @type(Font)\r\n    @displayOrder(13)\r\n    @visible(function (this: Label) { return !this._isSystemFontUsed; })\r\n    get font (): Font | null {\r\n        // return this._N$file;\r\n        return this._font;\r\n    }\r\n    set font (value) {\r\n        if (this._font === value) {\r\n            return;\r\n        }\r\n\r\n        // if delete the font, we should change isSystemFontUsed to true\r\n        this._isSystemFontUsed = !value;\r\n\r\n        if (EDITOR) {\r\n            this._userDefinedFont = value;\r\n        }\r\n\r\n        // this._N$file = value;\r\n        this._font = value;\r\n        // if (value && this._isSystemFontUsed)\r\n        //     this._isSystemFontUsed = false;\r\n\r\n        this.destroyRenderData();\r\n\r\n        this._fontAtlas = null;\r\n        this.updateRenderData(true);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The cache mode of label. This mode only supports system fonts.\r\n     *\r\n     * @zh\r\n     * 文本缓存模式, 该模式只支持系统字体。\r\n     */\r\n    @type(CacheMode)\r\n    @displayOrder(14)\r\n    get cacheMode (): CacheMode {\r\n        return this._cacheMode;\r\n    }\r\n    set cacheMode (value) {\r\n        const oldCacheMode = this._cacheMode;\r\n        if (oldCacheMode === value) {\r\n            return;\r\n        }\r\n\r\n        if (oldCacheMode === CacheMode.BITMAP && !(this._font instanceof BitmapFont) && this._ttfSpriteFrame) {\r\n            this._ttfSpriteFrame._resetDynamicAtlasFrame();\r\n        }\r\n        if (oldCacheMode === CacheMode.CHAR) {\r\n            this._ttfSpriteFrame = null;\r\n            this.destroyLetterTexture();\r\n        }\r\n\r\n        this._cacheMode = value;\r\n        this.updateRenderData(true);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether the font is bold.\r\n     *\r\n     * @zh\r\n     * 字体是否加粗。\r\n     */\r\n    @displayOrder(15)\r\n    get isBold (): boolean {\r\n        return this._isBold;\r\n    }\r\n    set isBold (value) {\r\n        if (this._isBold === value) {\r\n            return;\r\n        }\r\n\r\n        this._isBold = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether the font is italic.\r\n     *\r\n     * @zh\r\n     * 字体是否倾斜。\r\n     */\r\n    @displayOrder(16)\r\n    get isItalic (): boolean {\r\n        return this._isItalic;\r\n    }\r\n    set isItalic (value) {\r\n        if (this._isItalic === value) {\r\n            return;\r\n        }\r\n\r\n        this._isItalic = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether the font is underline.\r\n     *\r\n     * @zh\r\n     * 字体是否加下划线。\r\n     */\r\n    @displayOrder(17)\r\n    get isUnderline (): boolean {\r\n        return this._isUnderline;\r\n    }\r\n    set isUnderline (value) {\r\n        if (this._isUnderline === value) {\r\n            return;\r\n        }\r\n\r\n        this._isUnderline = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en The height of underline.\r\n     * @zh 下划线高度。\r\n     */\r\n    @visible(function (this: Label) { return this._isUnderline; })\r\n    @editable\r\n    @displayOrder(18)\r\n    get underlineHeight (): number {\r\n        return this._underlineHeight;\r\n    }\r\n    set underlineHeight (value) {\r\n        if (this._underlineHeight === value) return;\r\n        this._underlineHeight = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     ** @en\r\n     ** Outline effect used to change the display, only for system fonts or TTF fonts.\r\n     **\r\n     ** @zh\r\n     ** 描边效果组件,用于字体描边,只能用于系统字体或 ttf 字体。\r\n     **/\r\n    @editable\r\n    @visible(function (this: Label) { return !(this._font instanceof BitmapFont); })\r\n    @displayOrder(19)\r\n    get enableOutline (): boolean {\r\n        return this._enableOutline;\r\n    }\r\n    set enableOutline (value) {\r\n        if (this._enableOutline === value) return;\r\n        this._enableOutline = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Outline color.\r\n     *\r\n     * @zh\r\n     * 改变描边的颜色。\r\n     */\r\n    @editable\r\n    @visible(function (this: Label) { return this._enableOutline && !(this._font instanceof BitmapFont); })\r\n    @displayOrder(20)\r\n    get outlineColor (): Color {\r\n        return this._outlineColor;\r\n    }\r\n    set outlineColor (value: Readonly<Color>) {\r\n        if (this._outlineColor === value) return;\r\n        this._outlineColor.set(value);\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Change the outline width.\r\n     *\r\n     * @zh\r\n     * 改变描边的宽度。\r\n     */\r\n    @editable\r\n    @visible(function (this: Label) { return this._enableOutline && !(this._font instanceof BitmapFont); })\r\n    @displayOrder(21)\r\n    get outlineWidth (): number {\r\n        return this._outlineWidth;\r\n    }\r\n    set outlineWidth (value) {\r\n        if (this._outlineWidth === value) return;\r\n        this._outlineWidth = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en Shadow effect for Label component, only for system fonts or TTF fonts. Disabled when cache mode is char.\r\n     * @zh 用于给 Label 组件添加阴影效果，只能用于系统字体或 ttf 字体。在缓存模式为 char 时不可用。\r\n     */\r\n    @editable\r\n    @visible(function (this: Label) { return !(this._font instanceof BitmapFont) && (this.cacheMode !== CacheMode.CHAR); })\r\n    @displayOrder(22)\r\n    get enableShadow (): boolean {\r\n        return this._enableShadow;\r\n    }\r\n    set enableShadow (value) {\r\n        if (this._enableShadow === value) return;\r\n        this._enableShadow = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Shadow color.\r\n     *\r\n     * @zh\r\n     * 阴影的颜色。\r\n     */\r\n    @editable\r\n    @visible(function (this: Label) { return this._enableShadow && !(this._font instanceof BitmapFont) && (this.cacheMode !== CacheMode.CHAR); })\r\n    @displayOrder(23)\r\n    get shadowColor (): Color {\r\n        return this._shadowColor;\r\n    }\r\n    set shadowColor (value: Readonly<Color>) {\r\n        if (this._shadowColor === value) return;\r\n        this._shadowColor.set(value);\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Offset between font and shadow.\r\n     *\r\n     * @zh\r\n     * 字体与阴影的偏移。\r\n     */\r\n    @editable\r\n    @visible(function (this: Label) { return this._enableShadow && !(this._font instanceof BitmapFont) && (this.cacheMode !== CacheMode.CHAR); })\r\n    @displayOrder(24)\r\n    get shadowOffset (): Vec2 {\r\n        return this._shadowOffset;\r\n    }\r\n    set shadowOffset (value) {\r\n        if (this._shadowOffset === value) return;\r\n        this._shadowOffset.set(value);\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * A non-negative float specifying the level of shadow blur.\r\n     *\r\n     * @zh\r\n     * 阴影的模糊程度。\r\n     */\r\n    @editable\r\n    @visible(function (this: Label) { return this._enableShadow && !(this._font instanceof BitmapFont) && (this.cacheMode !== CacheMode.CHAR); })\r\n    @displayOrder(25)\r\n    get shadowBlur (): number {\r\n        return this._shadowBlur;\r\n    }\r\n    set shadowBlur (value) {\r\n        if (this._shadowBlur === value) return;\r\n        this._shadowBlur = value;\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get spriteFrame (): SpriteFrame | LetterRenderTexture | null {\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get ttfSpriteFrame (): SpriteFrame | null {\r\n        return this._ttfSpriteFrame;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get assemblerData (): ISharedLabelData | null {\r\n        return this._assemblerData;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get fontAtlas (): FontAtlas | null {\r\n        return this._fontAtlas;\r\n    }\r\n\r\n    set fontAtlas (value) {\r\n        this._fontAtlas = value;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get _bmFontOriginalSize (): number {\r\n        if (this._font instanceof BitmapFont) {\r\n            return this._font.fontSize;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    get textStyle (): TextStyle {\r\n        return this._textStyle!;\r\n    }\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    get textLayout (): TextLayout {\r\n        return this._textLayout!;\r\n    }\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    get textRenderData (): TextOutputRenderData {\r\n        return this._textRenderData!;\r\n    }\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    get textLayoutData (): TextOutputLayoutData {\r\n        return this._textLayoutData!;\r\n    }\r\n\r\n    @serializable\r\n    protected _string = 'label';\r\n    @serializable\r\n    protected _horizontalAlign = HorizontalTextAlignment.CENTER;\r\n    @serializable\r\n    protected _verticalAlign = VerticalTextAlignment.CENTER;\r\n    @serializable\r\n    protected _actualFontSize = 0;\r\n    @serializable\r\n    protected _fontSize = 40;\r\n    @serializable\r\n    protected _fontFamily = 'Arial';\r\n    @serializable\r\n    protected _lineHeight = 40;\r\n    @serializable\r\n    protected _overflow: Overflow = Overflow.NONE;\r\n    @serializable\r\n    protected _enableWrapText = true;\r\n    @serializable\r\n    protected _font: Font | null = null;\r\n    @serializable\r\n    protected _isSystemFontUsed = true;\r\n    @serializable\r\n    protected _spacingX = 0;\r\n    @serializable\r\n    protected _isItalic = false;\r\n    @serializable\r\n    protected _isBold = false;\r\n    @serializable\r\n    protected _isUnderline = false;\r\n    @serializable\r\n    protected _underlineHeight = 2;\r\n    @serializable\r\n    protected _cacheMode = CacheMode.NONE;\r\n    @serializable\r\n    protected _enableOutline = false;\r\n    @serializable\r\n    protected _outlineColor = new Color(0, 0, 0, 255);\r\n    @serializable\r\n    protected _outlineWidth = 2;\r\n    @serializable\r\n    protected _enableShadow = false;\r\n    @serializable\r\n    protected _shadowColor = new Color(0, 0, 0, 255);\r\n    @serializable\r\n    protected _shadowOffset = new Vec2(2, 2);\r\n    @serializable\r\n    protected _shadowBlur = 2;\r\n\r\n    // don't need serialize\r\n    // 这个保存了旧项目的 file 数据\r\n    protected _N$file: Font | null = null;\r\n    protected _texture: SpriteFrame | LetterRenderTexture | null = null;\r\n    protected _ttfSpriteFrame: SpriteFrame | null = null;\r\n    protected _userDefinedFont: Font | null = null;\r\n    protected _assemblerData: ISharedLabelData | null = null;\r\n    protected _fontAtlas: FontAtlas | null = null;\r\n    protected _letterTexture: LetterRenderTexture | null = null;\r\n\r\n    protected _contentWidth = 0;\r\n\r\n    protected _textStyle: TextStyle | null = null;\r\n    protected _textLayout: TextLayout | null = null;\r\n    protected _textRenderData: TextOutputRenderData | null = null;\r\n    protected _textLayoutData: TextOutputLayoutData | null = null;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    get contentWidth (): number {\r\n        return this._contentWidth;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    set contentWidth (val) {\r\n        this._contentWidth = val;\r\n    }\r\n\r\n    constructor () {\r\n        super();\r\n        if (EDITOR) {\r\n            this._userDefinedFont = null;\r\n        }\r\n\r\n        this._ttfSpriteFrame = null;\r\n        this._textStyle = new TextStyle();\r\n        this._textLayout = new TextLayout();\r\n        this._textLayoutData = new TextOutputLayoutData();\r\n        this._textRenderData = new TextOutputRenderData();\r\n    }\r\n\r\n    public onEnable (): void {\r\n        super.onEnable();\r\n\r\n        // TODO: Hack for barbarians\r\n        if (!this._font && !this._isSystemFontUsed) {\r\n            this.useSystemFont = true;\r\n        }\r\n        // Reapply default font family if necessary\r\n        if (this._isSystemFontUsed && !this._fontFamily) {\r\n            this.fontFamily = 'Arial';\r\n        }\r\n\r\n        this._applyFontTexture();\r\n    }\r\n\r\n    private destroyTtfSpriteFrame (): void {\r\n        if (!this._ttfSpriteFrame) {\r\n            return;\r\n        }\r\n        this._ttfSpriteFrame._resetDynamicAtlasFrame();\r\n        const tex = this._ttfSpriteFrame.texture;\r\n        this._ttfSpriteFrame.destroy();\r\n        if (tex) {\r\n            const tex2d = tex as Texture2D;\r\n            if (tex2d.image) {\r\n                tex2d.image.destroy();\r\n            }\r\n            tex.destroy();\r\n        }\r\n        this._ttfSpriteFrame = null;\r\n    }\r\n\r\n    // Override\r\n    public _onPreDestroy (): void {\r\n        super._onPreDestroy();\r\n        if (!this._isOnLoadCalled) {\r\n            // If _objFlags does not contain IsOnLoadCalled, it is possible to destroy the ttfSpriteFrame.\r\n            this.destroyTtfSpriteFrame();\r\n        }\r\n    }\r\n\r\n    public onDestroy (): void {\r\n        if (this._assembler && this._assembler.resetAssemblerData) {\r\n            this._assembler.resetAssemblerData(this._assemblerData!);\r\n        }\r\n\r\n        this._assemblerData = null;\r\n        this.destroyTtfSpriteFrame();\r\n        // Don't set null for properties which are init in constructor.\r\n        // this._textStyle = null;\r\n        // this._textLayout = null;\r\n        // this._textRenderData = null;\r\n        // this._textLayoutData = null;\r\n\r\n        this.destroyLetterTexture();\r\n\r\n        super.onDestroy();\r\n    }\r\n\r\n    private destroyLetterTexture (): void {\r\n        const letterTexture = this._letterTexture;\r\n        if (letterTexture) {\r\n            letterTexture.decRef(false);\r\n            if (letterTexture.refCount <= 0) {\r\n                letterTexture.destroy();\r\n            }\r\n        }\r\n        this._letterTexture = null;\r\n    }\r\n\r\n    /**\r\n     * @en update render data.\r\n     * @zh 更新渲染相关数据。\r\n     * @param force @en Whether to force an immediate update. @zh 是否立马强制更新渲染数据。\r\n     */\r\n    public updateRenderData (force = false): void {\r\n        if (force) {\r\n            this._flushAssembler();\r\n            // Hack: Fixed the bug that richText wants to get the label length by _measureText,\r\n            // _assembler.updateRenderData will update the content size immediately.\r\n            if (this.renderData) this.renderData.vertDirty = true;\r\n            this._applyFontTexture();\r\n        }\r\n        if (this._assembler) {\r\n            this._assembler.updateRenderData!(this);\r\n        }\r\n    }\r\n\r\n    protected _render (render: IBatcher): void {\r\n        render.commitComp(this, this.renderData, this._texture, this._assembler!, null);\r\n    }\r\n\r\n    // Cannot use the base class methods directly because BMFont and CHAR cannot be updated in assambler with just color.\r\n    protected _updateColor (): void {\r\n        super._updateColor();\r\n        this._markForUpdateRenderData();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public setEntityColor (color: Color): void {\r\n        if (JSB) {\r\n            if (this._font instanceof BitmapFont) {\r\n                this._renderEntity.color = color;\r\n            } else {\r\n                tempColor.set(255, 255, 255, color.a);\r\n                this._renderEntity.color = tempColor;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _canRender (): boolean {\r\n        if (!super._canRender() || !this._string) {\r\n            return false;\r\n        }\r\n\r\n        const font = this._font;\r\n        if (font && font instanceof BitmapFont) {\r\n            const spriteFrame = font.spriteFrame;\r\n            // cannot be activated if texture not loaded yet\r\n            if (!spriteFrame || !spriteFrame.texture) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected _flushAssembler (): void {\r\n        const assembler = Label.Assembler.getAssembler(this);\r\n\r\n        if (this._assembler !== assembler) {\r\n            this.destroyRenderData();\r\n            this._assembler = assembler;\r\n            this.textStyle.reset();\r\n            this.textLayout.reset();\r\n            this.textLayoutData.reset();\r\n            this.textRenderData.reset();\r\n        }\r\n\r\n        if (!this.renderData) {\r\n            if (this._assembler && this._assembler.createData) {\r\n                this._renderData = this._assembler.createData(this) as RenderData;\r\n                this.renderData!.material = this.material;\r\n                this._updateColor();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _applyFontTexture (): void {\r\n        this._markForUpdateRenderData();\r\n        const font = this._font;\r\n        if (font instanceof BitmapFont) {\r\n            const spriteFrame = font.spriteFrame;\r\n            if (spriteFrame && spriteFrame.texture) {\r\n                this._texture = spriteFrame;\r\n                if (this.renderData) {\r\n                    this.renderData.textureDirty = true;\r\n                }\r\n                this.changeMaterialForDefine();\r\n                if (this._assembler) {\r\n                    this._assembler.updateRenderData!(this);\r\n                }\r\n            }\r\n        } else {\r\n            if (this.cacheMode === CacheMode.CHAR) {\r\n                const oldLetterTexture = this._letterTexture;\r\n                const letterTexture = (this._assembler as LetterFont).getAssemblerData();\r\n                if (letterTexture !== oldLetterTexture) {\r\n                    this.destroyLetterTexture();\r\n                    if (letterTexture) {\r\n                        letterTexture.addRef();\r\n                    }\r\n                }\r\n                this._texture = this._letterTexture = letterTexture;\r\n            } else if (!this._ttfSpriteFrame) {\r\n                this._ttfSpriteFrame = new SpriteFrame();\r\n                this._assemblerData = (this._assembler as TTF).getAssemblerData();\r\n                const image = new ImageAsset(this._assemblerData.canvas);\r\n                const texture = new Texture2D();\r\n                texture.image = image;\r\n                this._ttfSpriteFrame.texture = texture;\r\n            }\r\n\r\n            if (this.cacheMode !== CacheMode.CHAR) {\r\n                // this._frame._refreshTexture(this._texture);\r\n                this._texture = this._ttfSpriteFrame;\r\n            }\r\n            this.changeMaterialForDefine();\r\n        }\r\n    }\r\n\r\n    protected changeMaterialForDefine (): void {\r\n        if (!this._texture) {\r\n            return;\r\n        }\r\n        let value = false;\r\n        if (this.cacheMode !== CacheMode.CHAR) {\r\n            const spriteFrame = this._texture as SpriteFrame;\r\n            const texture = spriteFrame.texture;\r\n            if (texture instanceof TextureBase) {\r\n                const format = texture.getPixelFormat();\r\n                value = (format === PixelFormat.RGBA_ETC1 || format === PixelFormat.RGB_A_PVRTC_4BPPV1 || format === PixelFormat.RGB_A_PVRTC_2BPPV1);\r\n            }\r\n        }\r\n        if (value) {\r\n            this._instanceMaterialType = InstanceMaterialType.USE_ALPHA_SEPARATED;\r\n        } else {\r\n            this._instanceMaterialType = InstanceMaterialType.ADD_COLOR_AND_TEXTURE;\r\n        }\r\n        this.updateMaterial();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _updateBlendFunc (): void {\r\n        // override for BYTEDANCE\r\n        if (BYTEDANCE) {\r\n            // need to fix ttf font black border at the sdk verion lower than 2.0.0\r\n            const sysInfo = minigame.getSystemInfoSync();\r\n            if (Number.parseInt(sysInfo.SDKVersion[0]) < 2) {\r\n                if (this._srcBlendFactor === BlendFactor.SRC_ALPHA && !minigame.isDevTool\r\n                    && !(this._font instanceof BitmapFont) && !this._customMaterial) {\r\n                    // Premultiplied alpha on runtime when sdk verion is lower than 2.0.0\r\n                    this._srcBlendFactor = BlendFactor.ONE;\r\n                }\r\n            }\r\n        }\r\n        super._updateBlendFunc();\r\n    }\r\n}\r\n\r\ncclegacy.Label = Label;\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Size } from '../../../core';\r\n\r\nexport class TextLayout {\r\n    // Layout common\r\n    // alignment\r\n    public horizontalAlign = 0;// Enum  // both\r\n    public verticalAlign = 0;// Enum // both\r\n\r\n    public wrapping = true; // both\r\n    public overFlow = 0;// Enum  // both\r\n\r\n    public lineHeight = 10; // both\r\n\r\n    // bmfont extra part\r\n    public maxLineWidth = 0; // bmfont\r\n    public spacingX = 0; // bmfont\r\n\r\n    // bmfont used temp value\r\n    public textWidthTemp = 0;\r\n    public textHeightTemp = 0;\r\n    public textDimensions = new Size();\r\n\r\n    public horizontalKerning: number[] = [];\r\n    public numberOfLines = 1;\r\n\r\n    public linesOffsetX: number[] = []; // layout\r\n    public letterOffsetY = 0;\r\n\r\n    public tailoredTopY = 0;\r\n    public tailoredBottomY = 0;\r\n\r\n    public textDesiredHeight = 0;\r\n    public linesWidth: number[] = [];\r\n\r\n    public reset (): void {\r\n        this.horizontalAlign = 0;\r\n        this.verticalAlign = 0;\r\n        this.wrapping = true;\r\n        this.overFlow = 0;\r\n        this.lineHeight = 10;\r\n        this.maxLineWidth = 0;\r\n        this.spacingX = 0;\r\n        this.textWidthTemp = 0;\r\n        this.textHeightTemp = 0;\r\n        this.textDimensions.set();\r\n        this.horizontalKerning.length = 0;\r\n        this.numberOfLines = 1;\r\n        this.linesOffsetX.length = 0;\r\n        this.letterOffsetY = 0;\r\n        this.tailoredTopY = 0;\r\n        this.tailoredBottomY = 0;\r\n        this.textDesiredHeight = 0;\r\n        this.linesWidth.length = 0;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Texture2D } from '../../../asset/assets';\r\nimport { Rect, Size, Vec2 } from '../../../core';\r\nimport { SpriteFrame } from '../../assets';\r\nimport { IRenderData } from './text-processing';\r\n\r\nexport class TextOutputLayoutData {\r\n    // public parsedStringStyle; // Prepare for merging richtext\r\n    // string after process\r\n    public parsedString: string[] = [];\r\n\r\n    // node part\r\n    public nodeContentSize = Size.ZERO.clone(); // both\r\n\r\n    // Node info\r\n    public canvasSize = new Size(); // ttf\r\n\r\n    public canvasPadding = new Rect(); // ttf\r\n    public contentSizeExtend = Size.ZERO.clone(); // ttf\r\n\r\n    public startPosition = Vec2.ZERO.clone(); // ttf\r\n\r\n    public reset (): void {\r\n        this.parsedString.length = 0;\r\n        this.nodeContentSize.set(0, 0);\r\n        this.canvasSize.set();\r\n        this.canvasPadding.set();\r\n        this.contentSizeExtend.set();\r\n        this.startPosition.set();\r\n    }\r\n}\r\n\r\nexport class TextOutputRenderData {\r\n    // Process Output\r\n    public quadCount = 0; // both\r\n    public vertexBuffer: IRenderData[] = []; // both\r\n    public texture: Texture2D | SpriteFrame | null = null;  // both\r\n\r\n    // anchor\r\n    public uiTransAnchorX = 0.5; // both\r\n    public uiTransAnchorY = 0.5; // both\r\n\r\n    public reset (): void {\r\n        this.quadCount = 0;\r\n        this.vertexBuffer.length = 0;\r\n        this.texture = null;\r\n        this.uiTransAnchorX = 0.5;\r\n        this.uiTransAnchorY = 0.5;\r\n    }\r\n}\r\n"],"names":["ch","test","stringToken","allWidth","maxWidth","measureText","wrappedWords","length","push","text","fuzzyLen","tmpText","_safeSubstring","width","sLine","pushNum","checkWhile","exec","WORD_REG","sText","result","SYMBOL_REG","LAST_WORD_REG","FIRST_ENGLISH_REG","LAST_ENGLISH_REG","trim","str","count","charCode","i","charCodeAt","chCode","labelInfo","color","toHEX","out","isOutlined","margin","fontSize","fontFamily","Font","exports","ccclass","_dec","_class","_Asset","name","call","this","_inheritsLoose","Asset","cclegacy","TTFFont","_class2","_Font","_this","_fontFamily","_initializer","prototype","initDefault","uuid","_createClass","key","get","set","value","_uuid","__nativeName__","_native","ext","path","__isNative__","serializable","_applyDecoratedDescriptor","override","string","Object","getOwnPropertyDescriptor","BASELINE_RATIO","_BASELINE_OFFSET","MIDDLE_RATIO","getBaselineOffset","pool","js","_get","prev","next","LRUCache","measureCache","size","limit","datas","head","tail","_proto","moveToHead","node","put","discard","remove","clear","has","CHAR_SET","RegExp","safeMeasureText","ctx","desc","font","cache","metric","getSymbolAt","index","len","start","slice","charAt","getSymbolCodeAt","char","charCodes","j","getSymbolStartIndex","targetString","startCheckIndex","startChar","getSymbolEndIndex","newEndIndex","endCheckIndex","endChar","startIndex","endIndex","newStartIndex","undefined","Math","max","newStartEndIndex","substring","nativeCheck","ccdocument","ccwindow","document","_canvasContext","_intervalId","_testString","_fontFaces","create","_loadingFonts","_timeout","useNativeCheck","match","navigator","userAgent","safari10Match","vendor","parseInt","checkFontLoaded","allFontsLoaded","now","Date","fontLoadHandle","fontFamilyName","startTime","warnID","onComplete","splice","oldWidth","refWidth","fontDesc","clearInterval","loadFont","url","options","getFontFamily","labelCanvas","createElement","height","getContext","fontStyle","type","fontStr","Number","isNaN","textContent","body","appendChild","callback","loader","timeoutId","timer","preloadDiv","divStyle","style","innerHTML","position","left","top","Promise","resolve","reject","check","fonts","load","then","setTimeout","race","clearTimeout","setInterval","fontHandle","ttfIndex","lastIndexOf","slashPos","indexOf","createFont","id","data","_nativeUrl","_nativeAsset","downloader","register","factory","eventRegx","imageAttrReg","FontLetterDefinition","HtmlTextParser","_specialSymbolArray","_stack","_resultObjectArray","parse","htmlString","tagEndIndex","tagBeginIndex","pop","_processResult","newStr","tagStr","_addToStack","_attributeToObject","attribute","obj","header","tagName","nextSpace","eventHandlerString","event","_processEventHandler","startsWith","isNewLine","remainingArgument","rightQuot","tagValue","isValidImageTag","originTagNameLength","replace","toLowerCase","getRightQuotationIndex","endsWith","isImage","src","imageHeight","imageWidth","imageAlign","imageOffset","defaultOutlineObject","outlineAttrReg","outline","underline","italic","bold","leftQuot","leftSingleQuot","leftDoubleQuot","useDoubleQuot","eventString","isValidTag","eventNames","eventName","eventValue","previousTagObj","_escapeSpecialSymbol","_step","_iterator","_createForOfIteratorHelperLoose","done","symbolArr","u","v","w","h","offsetX","offsetY","valid","xAdvance","FontAtlas","texture","letterDefinitions","_texture","addLetterDefinitions","letter","letterDefinition","cloneLetterDefinition","copyLetterDefinitions","getTexture","getLetter","getLetterDefinitionForChar","hasOwnProperty","oldTexture","decRef","refCount","destroy","addRef","BitmapFont","SpriteFrame","_class4","fntDataStr","spriteFrame","_initializer2","_initializer3","fntConfig","_initializer4","onLoaded","fontDefDictionary","fontDict","fontDef","info","rect","xOffset","yOffset","x","y","_applyDecoratedInitializer","_dec2","_class3","_canvasPool","LabelAtlas","_BitmapFont","apply","arguments","CanvasPool","getInstance","canvas","context","macro","MAX_LABEL_CANVAS_POOL_SIZE","WHITE","Color","clone","_backgroundStyle","toFixed","BASELINE_OFFSET","LetterTexture","image","hash","_proto2","updateRenderData","_updateProperties","_updateTexture","fontScale","blank","parseFloat","ImageAsset","reset","textAlign","textBaseline","clearRect","fillStyle","fillRect","m","n","toString","startX","startY","lineJoin","r","g","b","strokeColor","strokeStyle","a","lineWidth","strokeText","fillText","LetterRenderTexture","_Texture2D","_proto3","initWithSize","format","PixelFormat","RGBA8888","drawTextureAt","gfxTexture","getGFXTexture","gfxDevice","_getGFXDevice","region","BufferTextureCopy","texOffset","texExtent","copyTexImagesToTexture","Texture2D","_x","_y","_nextY","_width","_height","_halfBleed","_dirty","bleed","director","on","DirectorEvent","BEFORE_SCENE_LAUNCH","beforeSceneLoad","_proto4","LetterAtlas","insertLetterTexture","letterTexture","img","device","root","update","dict","clearAllCache","temp","fontAtlas","lineHeight","hAlign","vAlign","HorizontalTextAlignment","VerticalTextAlignment","Overflow","CacheMode","TextStyle","isBold","isItalic","isUnderline","underlineHeight","outlineColor","outlineWidth","hasShadow","shadowColor","BLACK","shadowBlur","shadowOffsetX","shadowOffsetY","actualFontSize","isSystemFontUsed","originFontSize","bmfontScale","TextLayout","horizontalAlign","verticalAlign","wrapping","overFlow","maxLineWidth","spacingX","textWidthTemp","textHeightTemp","textDimensions","Size","horizontalKerning","numberOfLines","linesOffsetX","letterOffsetY","tailoredTopY","tailoredBottomY","textDesiredHeight","linesWidth","TextOutputLayoutData","parsedString","nodeContentSize","ZERO","canvasSize","canvasPadding","Rect","contentSizeExtend","startPosition","Vec2","TextOutputRenderData","quadCount","vertexBuffer","uiTransAnchorX","uiTransAnchorY","ccenum","Label","executionOrder","_dec3","_dec4","_dec5","_dec6","_dec7","_UIRenderer","_string","_horizontalAlign","_verticalAlign","_actualFontSize","_fontSize","_initializer5","_initializer6","_lineHeight","_initializer7","_overflow","_initializer8","_enableWrapText","_initializer9","_font","_initializer10","_isSystemFontUsed","_initializer11","_spacingX","_initializer12","_isItalic","_initializer13","_isBold","_initializer14","_isUnderline","_initializer15","_underlineHeight","_initializer16","_cacheMode","_initializer17","_enableOutline","_initializer18","_outlineColor","_initializer19","_outlineWidth","_initializer20","_enableShadow","_initializer21","_shadowColor","_initializer22","_shadowOffset","_initializer23","_shadowBlur","_initializer24","_N$file","_ttfSpriteFrame","_userDefinedFont","_assemblerData","_fontAtlas","_letterTexture","_contentWidth","_textStyle","_textLayout","_textRenderData","_textLayoutData","onEnable","useSystemFont","_applyFontTexture","destroyTtfSpriteFrame","_resetDynamicAtlasFrame","tex","tex2d","_onPreDestroy","_isOnLoadCalled","onDestroy","_assembler","resetAssemblerData","destroyLetterTexture","force","_flushAssembler","renderData","vertDirty","_render","render","commitComp","_updateColor","_markForUpdateRenderData","setEntityColor","_canRender","assembler","Assembler","getAssembler","destroyRenderData","textStyle","textLayout","textLayoutData","textRenderData","createData","_renderData","material","textureDirty","changeMaterialForDefine","cacheMode","CHAR","oldLetterTexture","getAssemblerData","TextureBase","getPixelFormat","RGBA_ETC1","RGB_A_PVRTC_4BPPV1","RGB_A_PVRTC_2BPPV1","_instanceMaterialType","InstanceMaterialType","USE_ALPHA_SEPARATED","ADD_COLOR_AND_TEXTURE","updateMaterial","_updateBlendFunc","oldCacheMode","BITMAP","val","UIRenderer","HorizontalAlign","VerticalAlign","CENTER","NONE"],"mappings":"i5BAiL8BA,GAI1B,MAHsB,kCAGDC,KAAKD,IAFH,0HAEyBC,KAAKD,IADhC,qFACoDC,KAAKD,EAClF,IA2PM,SAAwBE,EAAqBC,EAAkBC,EAAkBC,GAEnF,IAAMC,EAAyB,GAE/B,GAA2B,IAAvBJ,EAAYK,QAAgBH,EAAW,EAEvC,OADAE,EAAaE,KAAK,IACXF,EAIX,IADA,IAAIG,EAAOP,EACJC,EAAWC,GAAYK,EAAKF,OAAS,GAAG,CAW3C,IAVA,IAAIG,EAAWD,EAAKF,QAAUH,EAAWD,GAAY,EACjDQ,EAAUC,GAAeH,EAAMC,GAC/BG,EAAQV,EAAWE,EAAYM,GAC/BG,EAAQH,EACRI,EAAU,EAEVC,EAAa,EAIVH,EAAQT,GAAYY,IAHR,KAIfN,GAAYN,EAAWS,EAGvBA,EAAQV,EAAWE,EADnBM,EAAUC,GAAeH,EADzBC,GAAY,IAUhB,IALAM,EAAa,EAKNL,GAAWE,GAAST,GAAYY,IAfpB,KAe+C,CAC9D,IAAMC,EAAOC,EAASD,KAAKN,GAE3BG,EAAQH,EAIRE,EAAQV,EAAWE,EADnBM,EAAUC,GAAeH,EADzBC,GAHAK,EAAUE,EAAOA,EAAK,GAAGV,OAAS,GAMrC,CAIgB,IAFjBG,GAAYK,IAGRL,EAAW,EACXI,EAAQF,GAAeH,EAAM,IACT,IAAbC,GAAkBD,EAAK,IAAM,UAAYA,EAAK,IAAM,WAE3DC,EAAW,EACXI,EAAQF,GAAeH,EAAM,IAGjC,IAAIU,EAAQP,GAAeH,EAAM,EAAGC,GAChCU,OAAM,EAMFC,EAAWpB,KAAKa,GAASH,KAGR,IADjBD,IADAU,EAASE,EAAcL,KAAKE,IACPC,EAAO,GAAGb,OAAS,KAClBG,EAAW,GAEjCI,EAAQF,GAAeH,EAAMC,GAC7BS,EAAQP,GAAeH,EAAM,EAAGC,IAOpCa,GAAkBtB,KAAKa,KACvBM,EAASI,EAAiBP,KAAKE,KAChBA,IAAUC,EAAO,KAE5BN,EAAQF,GAAeH,EADvBC,GAAYU,EAAO,GAAGb,QAEtBY,EAAQP,GAAeH,EAAM,EAAGC,KAKZ,IAAxBJ,EAAaC,SAGbY,EAAQA,EAAMM,QACJlB,OAAS,IAHnBD,EAAaE,KAAKW,GAQtBhB,EAAWE,EADXI,EAAOK,GAASH,EAEnB,CAUD,OAR4B,IAAxBL,EAAaC,SAGbE,EAAOA,EAAKgB,QACHlB,OAAS,IAHlBD,EAAaE,KAAKC,GAOfH,CACX,aA9TiCoB,GAM7B,IALA,IAAMnB,EAASmB,EAAInB,OAEfoB,EAAQ,EAERC,EAAW,EACNC,EAAI,EAAGA,EAAItB,EAAQsB,IAEP,QADjBD,EAAWF,EAAII,WAAWD,MAKtBD,GAAY,OAAUA,GAAY,QAElCA,EAAWF,EAAII,WAAWD,EAAI,KACd,OAAUD,GAAY,QAE9BC,EAAI,GAAKtB,GAAoC,OAA1BmB,EAAII,WAAWD,EAAI,KAEtCF,IAGJE,KAKRF,KAGJ,OAAOA,CACX,iBA/DgC3B,GAC5B,IAAM+B,EAAS/B,EAAG8B,WAAW,GAC7B,OAASC,GAAU,GAAKA,GAAU,IACpB,KAAXA,GACW,MAAXA,GACW,MAAXA,GACW,OAAXA,GACCA,GAAU,MAAQA,GAAU,MAClB,OAAXA,GACW,OAAXA,GACW,OAAXA,GACW,OAAXA,GACW,QAAXA,CACP,IC2PgB,SAAaC,GACzB,IACMC,EAAQD,EAAUC,MAAMC,QAC1BC,EAAM,GAKV,OAJIH,EAAUI,YAAcJ,EAAUK,OAAS,IAC3CF,EAAMA,EAAMH,EAAUK,OAASL,EAAUG,IAAID,SAJhC,GAOCF,EAAUM,SAAWN,EAAUO,WAAaN,EAAQE,CAC1E,aDtD0CjC,GACtC,OAAOqB,GAAkBtB,KAAKC,EAClC,aAIyCA,GACrC,OAAOsB,EAAiBvB,KAAKC,EACjC,IAIM,SAAqCA,GAEvC,OADeqB,GAAkBN,KAAKf,EAE1C,IAIM,SAAoCA,GAEtC,OADesB,EAAiBP,KAAKf,EAEzC,IE5YA,UACasC,EAAKC,EAAA,IADjBC,EAAQ,UAAUC,CAAAC,EAAA,SAAAC,GAEf,SAAAL,EAAaM,GAAa,OACtBD,EAAAE,KAAAC,KAAMF,IAAKE,IACf,CAAC,OAJcC,EAAAT,EAAAK,GAIdL,CAAA,CAJc,CACOU,KAAKN,GAM/BO,EAASX,KAAOA,ECPhB,IACaY,EAAQX,EAAA,IADpBC,EAAQ,aAAaC,EAAAU,EAAA,SAAAC,GAQlB,SAAAF,IAAA,IAAAG,EACY,OAARA,EAAOD,EAAAP,KAAAC,OAAAA,MAACQ,YAAAC,GAAAA,IAAAF,CACZ,CAyBC,OAnCiBN,EAAAG,EAAAE,GAUjBF,EAAAM,UAiCMC,YAAP,SAAoBC,GAChBZ,KAAKQ,YAAc,QACnBF,EAAMK,UAAAA,sBAAYC,EACrB,EAAAC,EAAAT,EAAA,CAAA,CAAAU,IAAA,eAAAC,IA/BD,WAGI,OAAOf,KAAKQ,WACf,EAAAQ,IACD,SAAkBC,GACdjB,KAAKQ,YAAcS,GAAS,OAChC,GAAC,CAAAH,IAAA,aAAAC,IAKD,WAOI,MAAO,CAAEH,KAAMZ,KAAKkB,MAAOC,eAAgBnB,KAAKoB,QAASC,IAAKC,EAAatB,KAAKoB,SAAUG,cAAc,EAC5G,KAACnB,CAAA,CAnCiB,CACOZ,kCAIxBgC,IAAY,WAAA,OACuB,IAAI,IAAAC,EAAApB,EAAAK,UAAA,eAAA,CASvCgB,EACAC,GAAMC,OAAAC,yBAAAxB,EAAAK,UAAA,gBAAAL,EAAAK,WAAAe,EAAApB,EAAAK,UAAA,aAAA,CAWNgB,GAAQE,OAAAC,yBAAAxB,EAAAK,UAAA,cAAAL,EAAAK,WA3BSd,EA2BTS,KAAAT,GAsBbO,EAASC,QAAUA,EHpDZ,IAAM0B,EAAiBrC,EAAA,IAAA,KAC1BsC,EAAmB,EAqBVC,SAAgBF,EAAiB,GAAK,EAAIA,GACjD,SAAUG,IACZ,OAAOF,CACX,CAEA,IASMG,EAAO,IAAIC,EAAoB,GACrCD,EAAKnB,IAAM,WACP,OAAOf,KAAKoC,QAAU,CAClBtB,IAAK,GACLG,MAAO,EACPoB,KAAM,KACNC,KAAM,KAEd,EAEaC,IAiFPC,EAAe,UAjFA,WAOjB,SAAAD,EAAaE,GAAYzC,KANjBrB,MAAQ,EAACqB,KACT0C,MAAQ,EAAC1C,KACT2C,MAAoC,CAAE,EAAA3C,KACtC4C,KAA0B,KAAI5C,KAC9B6C,KAA0B,KAG9B7C,KAAK0C,MAAQD,CACjB,CAAC,IAAAK,EAAAP,EAAA7B,UAqEA,OArEAoC,EAEMC,WAAP,SAAmBC,GACfA,EAAKV,KAAOtC,KAAK4C,KACjBI,EAAKX,KAAO,KACRrC,KAAK4C,OAAM5C,KAAK4C,KAAKP,KAAOW,GAChChD,KAAK4C,KAAOI,EACPhD,KAAK6C,OAAM7C,KAAK6C,KAAOG,GAC5BhD,KAAKrB,QACLqB,KAAK2C,MAAMK,EAAKlC,KAAOkC,CAC1B,EAAAF,EAEMG,IAAP,SAAYnC,EAAaG,GACrB,IAAM+B,EAAOd,EAAKnB,MAIlB,GAHAiC,EAAMlC,IAAMA,EACZkC,EAAM/B,MAAQA,EAEVjB,KAAKrB,OAASqB,KAAK0C,MAAO,CAC1B,IAAMQ,EAAUlD,KAAK6C,YACd7C,KAAK2C,MAAMO,EAASpC,KAC3Bd,KAAKrB,QACLqB,KAAK6C,KAAOK,EAASb,KACrBrC,KAAK6C,KAAMP,KAAO,KAClBY,EAASb,KAAO,KAChBa,EAASZ,KAAO,KAChBJ,EAAKe,IAAIC,EACZ,CACDlD,KAAK+C,WAAWC,EACnB,EAAAF,EAEMK,OAAP,SAAeH,GACPA,EAAKX,KACLW,EAAKX,KAAKC,KAAOU,EAAKV,KAEtBtC,KAAK4C,KAAOI,EAAKV,KAEjBU,EAAKV,KACLU,EAAKV,KAAKD,KAAOW,EAAKX,KAEtBrC,KAAK6C,KAAOG,EAAKX,YAEdrC,KAAK2C,MAAMK,EAAKlC,KACvBd,KAAKrB,OACR,EAAAmE,EAEM/B,IAAP,SAAYD,GACR,IAAMkC,EAAOhD,KAAK2C,MAAM7B,GACxB,OAAIkC,GACAhD,KAAKmD,OAAOH,GACZhD,KAAK+C,WAAWC,GACTA,EAAK/B,OAET,IACV,EAAA6B,EAEMM,MAAP,WACIpD,KAAKrB,MAAQ,EACbqB,KAAK2C,MAAQ,CAAE,EACf3C,KAAK4C,KAAO,KACZ5C,KAAK6C,KAAO,IACf,EAAAC,EAEMO,IAAP,SAAYvC,GACR,QAASd,KAAK2C,MAAM7B,EACvB,EAAAgC,EAED,OAAA,SAAehC,GACX,IAAMkC,EAAOhD,KAAK2C,MAAM7B,GACxBd,KAAKmD,OAAOH,EACf,EAAAT,CAAA,CA9EgB,IAiFA,CApGE,KAsGjBrE,EAAW,6CAEXG,EAAa,2BAEbiF,EAAW,4PACXhF,EAAgB,IAAIiF,OAAM,IAAKD,EAAkB,WACjD9E,EAAmB,IAAI+E,OAAUD,EAAa,MAC9C/E,GAAoB,IAAIgF,OAAM,IAAKD,YAuCzBE,GAAiBC,EAA+B9B,EAAgB+B,GAC5E,IACM5C,GADO4C,GAAQD,EAAIE,MACN,KAAehC,EAC5BiC,EAAQpB,EAAazB,IAAID,GAC/B,GAAc,OAAV8C,EACA,OAAOA,EAGX,IAAMC,EAASJ,EAAIpG,YAAYsE,GACzB9D,EAAQgG,GAAUA,EAAOhG,OAAS,EAGxC,OAFA2E,EAAaS,IAAInC,EAAKjD,GAEfA,CACX,CAmCM,SAAUiG,GAAapF,EAAaqF,GAMtC,IALA,IAAMxG,EAASmB,EAAInB,OACfyG,EAAM,EACNrF,EAAQ,EACRsF,EAAQ,EACRrF,EAAW,EACNC,EAAI,EAAGA,EAAItB,EAAQsB,IAExB,GAAiB,QADjBD,EAAWF,EAAII,WAAWD,IAK1B,GAAID,GAAY,OAAUA,GAAY,QAClCoF,KACApF,EAAWF,EAAII,WAAWD,EAAI,KACd,OAAUD,GAAY,OAH1C,CAKQ,GADAoF,IACInF,EAAI,GAAKtB,GAAoC,OAA1BmB,EAAII,WAAWD,EAAI,GAAe,CACrD,GAAIkF,IAAUpF,EACV,OAAOD,EAAIwF,MAAMD,EAAOA,EAAQD,GAEpCC,GAASD,EACTrF,IACAqF,EAAM,CACT,CACDnF,GAGP,KAhBD,CAiBA,GAAIkF,IAAUpF,EACV,OAAOD,EAAIyF,OAAOtF,GAEtBoF,EAAQpF,EAAI,EACZF,IACAqF,EAAM,CANL,MAnBGA,IA2BR,MAAO,EACX,CAEM,SAAUI,GAAiB1F,EAAaqF,GAC1C,IAAMM,EAAOP,GAAYpF,EAAKqF,GAC9B,GAAoB,IAAhBM,EAAK9G,OACL,MAAA,GAAU8G,EAAKvF,WAAW,GAG9B,IADA,IAAIwF,EAAoB,GACfC,EAAI,EAAGA,EAAIF,EAAK9G,OAAQgH,IAC7BD,MAAgBD,EAAKvF,WAAWyF,GAEpC,MAAA,GAAUD,CACd,CAEA,SAASE,GAAqBC,EAAsBV,GAChD,GAAIA,GAASU,EAAalH,OACtB,OAAOkH,EAAalH,OAIxB,IAFA,IAAImH,EAAkBX,EAClBY,EAAYF,EAAaC,GACtBA,GAAmB,IACJ,MAAdC,IAEAA,EAAYF,IADZC,IAGAC,GAAa,UAAYA,GAAa,UAElCD,EAAkB,GAAK,IAEvBC,EAAYF,IADZC,IAIJC,GAAa,UAAYA,GAAa,WAElCD,EAAkB,GAAK,GAA2C,MAAtCD,EAAaC,EAAkB,IAE3DC,EAAYF,IADZC,GASZ,OAAOA,CACX,CAEA,SAASE,GAAmBH,EAAsBV,GAI9C,IAHA,IAAIc,EAAcd,EACde,EAAgBf,EAChBgB,EAAUN,EAAaK,GACpBA,EAAgBL,EAAalH,QAYhC,GAXgB,MAAZwH,IAEAF,KACAE,EAAUN,IAFVK,KAGe,UAAYC,GAAW,WAGlCF,IACAE,EAAUN,IAFVK,KAKJC,GAAW,UAAYA,GAAW,SAGlCF,IACAE,EAAUN,IAFVK,OAGG,MAAIC,GAAW,UAAYA,GAAW,UAWzC,MAPA,GADAA,EAAUN,IADVK,KAEIA,EAAgBL,EAAalH,QAA0C,MAAhCkH,EAAaK,IAIpD,MAHAD,IACAE,EAAUN,EAAaK,EAM9B,CAEL,OAAOD,CACX,CAWA,SAASjH,GAAgB6G,EAAsBO,EAAoBC,GAC/D,IAAIC,EAAgBV,GAAoBC,EAAcO,GAClDE,EAAgBF,IAChBE,EAAgBN,GAAkBH,EAAcO,GAAc,GAElE,IAAIH,EAAcI,EAElB,QAAiBE,IAAbF,EAAwB,CAExBJ,EAAcD,GAAkBH,EADhCQ,EAAWG,KAAKC,IAAI,EAAGJ,EAAW,IAElC,IAAMK,EAAmBd,GAAoBC,EAAcQ,GACvDK,EAAmBJ,GAAkBI,IAAqBJ,GAAiBF,EAAaE,EACxFL,EAAcK,EAEdL,GAAe,CAEtB,CACD,OAAOJ,EAAac,UAAUL,EAAeL,EACjD,CInXA,IAsBQW,GAtBFC,GAAaC,EAASC,SASxBC,GAAkD,KAClDC,IAAe,EAEbC,GAAc,qBAEdC,GAAanE,OAAOoE,OAAO,MAE3BC,GAAmC,GAEnCC,GAAW,IAGXC,GAEK,WACH,QAAoBhB,IAAhBK,GACA,GAAI,aAAcE,EAAU,CACxB,IAAMU,EAAQ,wBAAwBnI,KAAKyH,EAASW,UAAUC,WACxDC,EAAgB,8BAA8BtI,KAAKyH,EAASW,UAAUC,YAAc,QAAQrI,KAAKyH,EAASW,UAAUG,QAGtHhB,GADAY,EACcK,SAASL,EAAM,GAAI,IAAM,IAChCG,CAKd,MACGf,IAAc,EAItB,OAAOA,EACV,EAGL,SAASkB,KAIL,IAHA,IAAIC,GAAiB,EACfC,EAAMC,KAAKD,MAER/H,EAAIoH,GAAc1I,OAAS,EAAGsB,GAAK,EAAGA,IAAK,CAChD,IAAMiI,EAAiBb,GAAcpH,GAC/BU,EAAauH,EAAeC,eAElC,GAAIH,EAAME,EAAeE,UAAYd,GACjCe,EAAO,KAAM1H,GACbuH,EAAeI,WAAW,KAAM3H,GAChC0G,GAAckB,OAAOtI,EAAG,OAH5B,CAOA,IAAMuI,EAAWN,EAAeO,SAC1BC,UAAmB/H,EACzBqG,GAAgBjC,KAAO2D,EAGnBF,IAFa5D,GAAgBoC,GAAiBE,GAAawB,IAG3DrB,GAAckB,OAAOtI,EAAG,GACxBiI,EAAeI,WAAW,KAAM3H,IAEhCoH,GAAiB,CAXpB,CAaJ,CAEGA,IACAY,cAAc1B,IACdA,IAAe,EAEvB,UA4CgB2B,GAAUC,EAAaC,EAA8BR,GACjE,IAAMH,EAAiBY,GAAcF,GAErC,GAAI1B,GAAWgB,GACXG,EAAW,KAAMH,OADrB,CAKA,IAAKnB,GAAgB,CACjB,IAAMgC,EAAcnC,GAAWoC,cAAc,UAC7CD,EAAY/J,MAAQ,IACpB+J,EAAYE,OAAS,IACrBlC,GAAiBgC,EAAYG,WAAW,KAC3C,CAGD,IAAMT,UAAmBP,EAGnBiB,EAAYvC,GAAWoC,cAAc,SAC3CG,EAAUC,KAAO,WACjB,IAAIC,EAAU,GACVC,OAAOC,MAAMrB,GACbmB,GAAO,4BAAgCnB,EAAsB,SAE7DmB,GAAO,6BAAiCnB,EAAuB,UAEnEmB,GAAO,QAAYT,EAAQ,MAC3BO,EAAUK,YAAiBH,EAAU,IACrCzC,GAAW6C,KAAKC,YAAYP,GAG5B,IAzE4B/D,EAAeN,EAAc6E,EACnDC,EAsBFC,EACEC,EAiDAC,EAAanD,GAAWoC,cAAc,OACtCgB,EAAWD,EAAWE,MAQ5B,GAPAD,EAAStJ,WAAawH,EACtB6B,EAAWG,UAAY,IACvBF,EAASG,SAAW,WACpBH,EAASI,KAAO,SAChBJ,EAASK,IAAM,SACfzD,GAAW6C,KAAKC,YAAYK,GAExBzC,KAlFwBlC,EAmFF4C,KAAKD,MAnFYjD,EAmFLoD,EAnFmByB,EAmFHtB,EAlFhDuB,EAAS,IAAIU,SAAc,SAACC,EAASC,IACzB,SAARC,IACUzC,KAAKD,MAEP3C,GAASiC,GACfmD,IAEC5D,GAAmB8D,MAAMC,KAAa7F,QAAAA,GAAQ8F,MAAK,SAACF,GAC7CA,EAAMhM,QAAU,EAChB6L,IAEAM,WAAWJ,EAAO,IAE1B,IAAG,WACCD,GACJ,GAEP,CAEDC,EACJ,IAEIZ,EAA2B,KACzBC,EAAQ,IAAIQ,SAAQ,SAACC,EAASC,GAChCX,EAAYgB,WAAWL,EAAQnD,GACnC,IAEAiD,QAAQQ,KAAK,CAAChB,EAAOF,IAASgB,MAAK,WAC3Bf,IACAkB,aAAalB,GACbA,EAAY,MAGhBF,EAAS,KAAM7E,EACnB,IAAG,WACCsD,EAAO,KAAMtD,GACb6E,EAAS,KAAM7E,EACnB,QA8CO,CACH,IAEMmD,EAAiB,CACnBC,eAAAA,EACAM,SAJa7D,GAAgBoC,GAAiBE,GAAawB,GAK3DJ,WAAAA,EACAF,UAAWH,KAAKD,OAEpBX,GAAczI,KAAKsJ,IACE,IAAjBjB,KACAA,GAAcgE,YAAYnD,GAAiB,KAElD,CACDX,GAAWgB,GAAkBiB,CAnD5B,CAoDL,UAEgBL,GAAemC,GAC3B,IAAMC,EAAWD,EAAWE,YAAY,QACxC,IAAkB,IAAdD,EAAmB,OAAOD,EAE9B,IACI/C,EADEkD,EAAWH,EAAWE,YAAY,KAUxC,OAHqC,KAJjCjD,GADc,IAAdkD,EACoBH,EAAWvE,UAAU,EAAGwE,GAAiB,SAEzCD,EAAWvE,UAAU0E,EAAW,EAAGF,GAAiB,UAEzDG,QAAQ,OACvBnD,EAAc,IAAOA,EAAiB,KAEnCA,CACX,CAEA,SAASoD,GAAYC,EAAYC,EAAc3C,EAA8BR,GACzE,IAAM/H,EAAM,IAAIiB,EAChBjB,EAAImL,WAAaF,EACjBjL,EAAIoL,aAAeF,EACnBnD,EAAW,KAAM/H,EACrB,CAEAqL,EAAWC,SAAS,CAEhB,QAASjD,GACT,OAAQA,GACR,OAAQA,GACR,QAASA,GACT,OAAQA,GACR,OAAQA,KAGZkD,EAAQD,SAAS,CAEb,QAASN,GACT,OAAQA,GACR,OAAQA,GACR,QAASA,GACT,OAAQA,GACR,OAAQA,KC9NZ,+BAAMQ,GAAY,+BACZC,GAAe,yHCKRC,UDkCc,WAKvB,SAAAC,IAAA9K,KAJQ+K,oBAA+C,GAAE/K,KACjDgL,OAAiC,GAAEhL,KACnCiL,mBAAiD,GAGrDjL,KAAK+K,oBAAoBvN,KAAK,CAAC,QAAS,MACxCwC,KAAK+K,oBAAoBvN,KAAK,CAAC,QAAS,MACxCwC,KAAK+K,oBAAoBvN,KAAK,CAAC,SAAU,MACzCwC,KAAK+K,oBAAoBvN,KAAK,CAAC,UAAW,MAC1CwC,KAAK+K,oBAAoBvN,KAAK,CAAC,UAAW,KAC9C,CAAC,IAAAsF,EAAAgI,EAAApK,UA+VA,OA/VAoC,EAEMoI,MAAP,SAAcC,GACVnL,KAAKiL,mBAAmB1N,OAAS,EACjCyC,KAAKgL,OAAOzN,OAAS,EAIrB,IAFA,IAAIyH,EAAa,EACXzH,EAAS4N,EAAW5N,OACnByH,EAAazH,GAAQ,CACxB,IAAI6N,EAAcD,EAAWjB,QAAQ,IAAKlF,GACtCqG,GAAiB,EAUrB,GATID,GAAe,IACfC,EAAgBF,EAAWnB,YAAY,IAAKoB,IACRpG,EAAa,IAG7CqG,EAAgBF,EAAWjB,QAAQ,IAAKkB,EAAc,GACtDA,EAAcD,EAAWjB,QAAQ,IAAKmB,EAAgB,IAG1DA,EAAgB,EAChBrL,KAAKgL,OAAOM,MACZtL,KAAKuL,eAAeJ,EAAW5F,UAAUP,IACzCA,EAAazH,MACV,CACH,IAAIiO,EAASL,EAAW5F,UAAUP,EAAYqG,GACxCI,EAASN,EAAW5F,UAAU8F,EAAgB,EAAGD,GACxC,KAAXK,IAAeD,EAASL,EAAW5F,UAAUP,EAAYoG,EAAc,IAC3EpL,KAAKuL,eAAeC,IACC,IAAjBJ,EAEAA,EAAcC,EACkC,MAAzCF,EAAWhH,OAAOkH,EAAgB,GACzCrL,KAAKgL,OAAOM,MAEZtL,KAAK0L,YAAYD,GAErBzG,EAAaoG,EAAc,CAC9B,CACJ,CAED,OAAOpL,KAAKiL,kBACf,EAAAnI,EAEO6I,mBAAR,SAA4BC,GACxBA,EAAYA,EAAUnN,OAEtB,IAAMoN,EAA4B,CAAE,EAChCC,EAAS,sBAAsB7N,KAAK2N,GACpCG,EAAU,GACVC,EAAY,EACZC,EAAqB,GACzB,GAAIH,EAAQ,CAGR,GAFAC,EAAUD,EAAO,GAEC,MADlBF,EAAYA,EAAUrG,UAAUwG,EAAQxO,QAAQkB,QAE5C,OAAOoN,EAKX,OADAG,EAAYJ,EAAU1B,QAAQ,KACtB6B,EAAQ,IAChB,IAAK,IAEGF,EAAI5M,MADJ+M,GAAa,EACDJ,EAAUrG,UAAU,EAAGyG,GAAWvN,OAElCmN,EAEhB,MACJ,IAAK,IACDC,EAAIpJ,KAAOgE,SAASmF,GAWxB,OAJII,GAAa,IACbC,EAAqBL,EAAUrG,UAAUyG,EAAY,GAAGvN,OACxDoN,EAAIK,MAAQlM,KAAKmM,qBAAqBF,IAEnCJ,CACV,CAGD,IADAC,EAAS,eAAe7N,KAAK2N,KACfE,EAAO,GAAGvO,OAAS,IAC7BwO,EAAUD,EAAO,GAAGrN,QACR2N,WAAW,OAAyC,MAAhCL,EAAQA,EAAQxO,OAAS,GAGrD,OAFAsO,EAAIQ,WAAY,EAChBrM,KAAKiL,mBAAmBzN,KAAK,CAAEC,KAAM,GAAIqL,MAAO,CAAEuD,WAAW,KACtDR,EAKf,IAAIS,EAAoB,GACpBC,GAAa,EACjB,IAHAT,EAAS,8BAA8B7N,KAAK2N,KAG9BE,EAAO,GAAGvO,OAAS,IAC7BwO,EAAUD,EAAO,GAAGrN,QACR2N,WAAW,QAA0C,MAAhCL,EAAQA,EAAQxO,OAAS,GAAY,CAElE,IAAIiP,EADJV,EAASlB,GAAa3M,KAAK2N,GAG3B,IADA,IAAIa,GAAkB,EACfX,GAAQ,CAIX,IAAMY,GADNX,GADAH,EAAYA,EAAUrG,UAAUqG,EAAU1B,QAAQ4B,EAAO,MACrCvG,UAAU,EAAGuG,EAAO,GAAGvO,SACPA,OAkBpC,GAhBAwO,GADAA,EAAUA,EAAQY,QAAQ,aAAc,IAAIlO,QAC1BmO,cAGlBN,EAAoBV,EAAUrG,UAAUmH,GAAqBjO,OAEzD8N,EADY,QAAZR,EACY/L,KAAK6M,uBAAuBP,IAE3B,EAGjBE,GADAR,EAAYM,EAAkBpC,QAAQ,IAAKqC,EAAY,GAAKD,EAAkB/O,QAAU,EAAIgP,EAAY,KAC/E,EAAKD,EAAkB/G,UAAU,EAAGyG,GAAaM,EAC1EV,EAAYU,EAAkB/G,UAAUyG,GAAWvN,OAE/C+N,EAASM,SAAS,OAClBN,EAAWA,EAAStI,MAAM,GAAI,IAElB,QAAZ6H,EAAmB,CACnB,OAAQS,EAAS1N,WAAW,IAC5B,KAAK,GACL,KAAK,GACD2N,GAAkB,EAClBD,EAAWA,EAAStI,MAAM,GAAI,GAKlC2H,EAAIkB,SAAU,EACdlB,EAAImB,IAAMR,CACb,MAAM,GAAgB,WAAZT,EACPF,EAAIoB,YAAcxG,SAAS+F,QACxB,GAAgB,UAAZT,EACPF,EAAIqB,WAAazG,SAAS+F,QACvB,GAAgB,UAAZT,EAAqB,CAC5B,OAAQS,EAAS1N,WAAW,IAC5B,KAAK,GACL,KAAK,GACD0N,EAAWA,EAAStI,MAAM,GAAI,GAKlC2H,EAAIsB,WAAaX,EAASI,aAC7B,KAAsB,WAAZb,EACPF,EAAIuB,YAAcZ,EACC,UAAZT,IACPF,EAAIK,MAAQlM,KAAKmM,qBAAwBJ,EAAWS,IAAAA,IAGpDX,EAAIK,OAAqB,UAAZH,IACbF,EAAIK,MAAMH,GAAWS,EAASG,QAAQ,SAAU,KAGpDb,EAASlB,GAAa3M,KAAK2N,EAC9B,CAMD,OAJIa,GAAmBZ,EAAIkB,SACvB/M,KAAKiL,mBAAmBzN,KAAK,CAAEC,KAAM,GAAIqL,MAAO+C,IAG7C,CAAE,CACZ,CAIL,GADAC,EAAS,uBAAuB7N,KAAK2N,GACzB,CAER,IAAMyB,EAAuB,CAAEpO,MAAO,UAAWpB,MAAO,GACxD,GAFA+N,EAAYE,EAAO,GAAGvG,UAAU,GAAkB9G,OAEnC,CACX,IAEI+N,EAFEc,EAAiB,sEAGvB,IAFAxB,EAASwB,EAAerP,KAAK2N,GAEtBE,GAGHC,GADAH,EAAYA,EAAUrG,UAAUqG,EAAU1B,QAAQ4B,EAAO,MACrCvG,UAAU,EAAGuG,EAAO,GAAGvO,QAKvCiP,GAFJR,GADAM,EAAoBV,EAAUrG,UAAUwG,EAAQxO,QAAQkB,QAC1ByL,QAAQ,OACrB,EACFoC,EAAkB/G,UAAU,EAAGyG,GAE/BM,EAGfP,GADAA,EAAUA,EAAQY,QAAQ,aAAc,IAAIlO,QAC1BmO,cAElBhB,EAAYU,EAAkB/G,UAAUyG,GAAWvN,OACnC,UAAZsN,EACAF,EAAIK,MAAQlM,KAAKmM,qBAAwBJ,EAAWS,IAAAA,GACjC,UAAZT,EACPsB,EAAqBpO,MAAQuN,EACV,UAAZT,IACPsB,EAAqBxP,MAAQ4I,SAAS+F,IAGtCX,EAAIK,OAAqB,UAAZH,IACbF,EAAIK,MAAMH,GAAWS,EAASG,QAAQ,SAAU,KAGpDb,EAASwB,EAAerP,KAAK2N,EAEpC,CACDC,EAAI0B,QAAUF,CACjB,CAGD,IADAvB,EAAS,mBAAmB7N,KAAK2N,KACnBE,EAAO,GAAGvO,OAAS,EAAG,CAGhC,OAFAwO,EAAUD,EAAO,GACjBF,EAAYA,EAAUrG,UAAUwG,EAAQxO,QAAQkB,OACxCsN,EAAQ,IAChB,IAAK,IACDF,EAAI2B,WAAY,EAChB,MACJ,IAAK,IACD3B,EAAI4B,QAAS,EACb,MACJ,IAAK,IACD5B,EAAI6B,MAAO,EAKf,GAAkB,KAAd9B,EACA,OAAOC,EAGXA,EAAIK,MAAQlM,KAAKmM,qBAAqBP,EACzC,CAED,OAAOC,CACX,EAAC/I,EAGO+J,uBAAR,SAAgCP,GAC5B,IAAIqB,GAAY,EACZpB,GAAa,EAEXqB,EAAiBtB,EAAkBpC,QAAQ,KAC3C2D,EAAiBvB,EAAkBpC,QAAQ,KAG3C4D,EAAgBD,GAAkB,IAAMA,EAAiBD,IAAsC,IAApBA,GASjF,OAVsBA,GAAmB,IAAMA,EAAiBC,IAAsC,IAApBA,IAG9EF,EAAWC,EACXrB,EAAYD,EAAkBpC,QAAQ,IAAMyD,EAAW,GAAKrB,EAAkB/O,QAAU,EAAIoQ,EAAW,IAChGG,IACPH,EAAWE,EACXtB,EAAYD,EAAkBpC,QAAQ,IAAKyD,EAAW,GAAKrB,EAAkB/O,QAAU,EAAIoQ,EAAW,IAGnGpB,CACV,EAAAzJ,EAEOqJ,qBAAR,SAA8B4B,GAK1B,IAJA,IAAMlC,EAAM,CAAE,EACV9H,EAAQ,EACRiK,GAAa,EACbC,EAAatD,GAAU1M,KAAK8P,GACzBE,GAAY,CACf,IAAIC,EAAYD,EAAW,GACvBE,EAAa,GAGjB,GAFAH,GAAa,EAEiB,OAD9BD,EAAcA,EAAYxI,UAAU2I,EAAU3Q,QAAQkB,QACtC0F,OAAO,IACnBJ,EAAQgK,EAAY7D,QAAQ,IAAK,KACpB,IACTiE,EAAaJ,EAAYxI,UAAU,EAAGxB,GAAOtF,OAC7CuP,GAAa,GAEjBjK,SACG,GAA8B,MAA1BgK,EAAY5J,OAAO,IAC1BJ,EAAQgK,EAAY7D,QAAQ,IAAM,KACrB,IACTiE,EAAaJ,EAAYxI,UAAU,EAAGxB,GAAOtF,OAC7CuP,GAAa,GAEjBjK,QACG,CAEH,IAAMqC,EAAQ,QAAQnI,KAAK8P,GAM3BhK,GAJIoK,EADA/H,EACaA,EAAM,GAEN,IAEE7I,MACtB,CAEGyQ,IAEAnC,EADAqC,EAAYA,EAAU3I,UAAU,EAAG2I,EAAU3Q,OAAS,GAAGkB,QACxC0P,GAGrBJ,EAAcA,EAAYxI,UAAUxB,GAAOtF,OAC3CwP,EAAatD,GAAU1M,KAAK8P,EAC/B,CAED,OAAOlC,CACV,EAAA/I,EAEO4I,YAAR,SAAqBE,GACjB,IAAMC,EAAM7L,KAAK2L,mBAAmBC,GAEpC,GAA2B,IAAvB5L,KAAKgL,OAAOzN,OACZyC,KAAKgL,OAAOxN,KAAKqO,OACd,CACH,GAAIA,EAAIQ,WAAaR,EAAIkB,QACrB,OAGJ,IAAMqB,EAAiBpO,KAAKgL,OAAOhL,KAAKgL,OAAOzN,OAAS,GACxD,IAAK,IAAMuD,KAAOsN,EACRvC,EAAI/K,KACN+K,EAAI/K,GAAOsN,EAAetN,IAGlCd,KAAKgL,OAAOxN,KAAKqO,EACpB,CACJ,EAAA/I,EAEOyI,eAAR,SAAwBtK,GACC,IAAjBA,EAAM1D,SAIV0D,EAAQjB,KAAKqO,qBAAqBpN,GAC9BjB,KAAKgL,OAAOzN,OAAS,EACrByC,KAAKiL,mBAAmBzN,KAAK,CAAEC,KAAMwD,EAAO6H,MAAO9I,KAAKgL,OAAOhL,KAAKgL,OAAOzN,OAAS,KAEpFyC,KAAKiL,mBAAmBzN,KAAK,CAAEC,KAAMwD,IAE5C,EAAA6B,EAEOuL,qBAAR,SAA8B3P,GAC1B,IAAwB,IAA0B4P,EAA1BC,EAAAC,EAAAxO,KAAK+K,uBAAqBuD,EAAAC,KAAAE,MAAA,CAAA,IAAvCC,EAASJ,EAAArN,MACVH,EAAM4N,EAAU,GAChBzN,EAAQyN,EAAU,GAExBhQ,EAAMA,EAAIiO,QAAQ7L,EAAKG,EAC1B,CAED,OAAOvC,CACV,EAAAoM,CAAA,CA1WsB,IClCM,WAAA9K,KACtB2O,EAAI,EAAC3O,KACL4O,EAAI,EAAC5O,KACL6O,EAAI,EAAC7O,KACL8O,EAAI,EAAC9O,KACL+O,QAAU,EAAC/O,KACXgP,QAAU,EAAChP,KACXiP,OAAQ,EAAKjP,KACbkP,SAAW,CAAC,GAOVC,SAAS,WAIlB,SAAAA,EAAaC,GAA2BpP,KAHjCqP,kBAAuC,CAAE,EAAArP,KACzCsP,SAA+B,KAGlCtP,KAAKoP,QAAUA,CACnB,CAAC,IAAAtM,EAAAqM,EAAAzO,UAeA,OAfAoC,EAqBMyM,qBAAP,SAA6BC,EAAgBC,GACzCzP,KAAKqP,kBAAkBG,GAAUC,CACpC,EAAA3M,EAEM4M,sBAAP,WACI,IAAMC,EAA2C,CAAE,EACnD,IAAK,IAAM7O,KAAOd,KAAKqP,kBAAmB,CACtC,IAAMpO,EAAQ,IAAI4J,GAClB1I,EAASlB,EAAOjB,KAAKqP,kBAAkBvO,IACvC6O,EAAsB7O,GAAOG,CAChC,CACD,OAAO0O,CACV,EAAA7M,EAEM8M,WAAP,WACI,OAAO5P,KAAKsP,QACf,EAAAxM,EAEM+M,UAAP,SAAkB/O,GACd,OAAOd,KAAKqP,kBAAkBvO,EACjC,EAAAgC,EAEMgN,2BAAP,SAAmCzL,GAC/B,IAAMvD,EAAMsD,GAAgBC,EAAM,GAE9BmL,EAAsC,KAI1C,OALe5N,OAAOlB,UAAUqP,eAAehQ,KAAKC,KAAKqP,kBAAmBvO,KAGxE0O,EAASxP,KAAKqP,kBAAkBvO,IAE7B0O,CACV,EAAA1M,EAEMM,MAAP,WACIpD,KAAKqP,kBAAoB,CAAE,CAC9B,EAAAxO,EAAAsO,EAAA,CAAA,CAAArO,IAAA,UAAAC,IAtCD,WACI,OAAOf,KAAKsP,QACf,EAAAtO,IAjBD,SAAoBoO,GAChB,IAAMY,EAAahQ,KAAKsP,SACpBU,IAAeZ,IACfY,IACAA,EAAWC,QAAO,GACdD,EAAWE,UAAY,GACvBF,EAAWG,WAGff,GACAA,EAAQgB,SAEZpQ,KAAKsP,SAAWF,EACpB,KAACD,CAAA,CArBiB,IAqETkB,GADZ3Q,EAAAA,KAAAA,GAAAA,EAAQ,iBAaJuI,GAAAA,EAAKqI,GAAY3Q,IAAA4Q,GAAA,SAAAjQ,GAwBlB,SAAA+P,IAAA,IAAA9P,EACY,OAARA,EAAOD,EAAAP,KAAAC,OAAAA,MAACwQ,WAAA/P,IAAAA,KAAAF,EAAAkQ,YAAAC,IAAAA,KAAAnQ,EAAAjB,SAAAqR,IAAAA,KAAApQ,EAAAqQ,UAAAC,IAAAA,KAAAtQ,CACZ,CA8BC,OAxDiBN,EAAAoQ,EAAA/P,GA0BjB+P,EAAA3P,UAEDoQ,SAAA,WACI,IAAML,EAAczQ,KAAKyQ,aACpBzQ,KAAK+Q,mBAAqBN,IAC3BzQ,KAAK+Q,kBAAoB,IAAI5B,GAAUsB,EAAYrB,UAGvD,IAAMwB,EAAY5Q,KAAK4Q,UACvB,GAAKA,EAAL,CAKA,IAAMI,EAAWJ,EAAUG,kBAC3B,IAAK,IAAME,KAAWD,EAAU,CAC5B,IAAME,EAAOF,EAASC,GAChBzB,EAAS,IAAI3E,GACbsG,EAAOD,EAAKC,KAClB3B,EAAOT,QAAUmC,EAAKE,QACtB5B,EAAOR,QAAUkC,EAAKG,QACtB7B,EAAOX,EAAIsC,EAAKtT,MAChB2R,EAAOV,EAAIqC,EAAKrJ,OAChB0H,EAAOb,EAAIwC,EAAKG,EAChB9B,EAAOZ,EAAIuC,EAAKI,EAChB/B,EAAOP,OAAQ,EACfO,EAAON,SAAWgC,EAAKhC,SAEvBlP,KAAK+Q,kBAAkBxB,qBAAqB0B,EAASzB,EACxD,CAjBA,MAFGvI,EAAO,MAoBd,EAAAoJ,CAAA,CAxDiB,CAZU7Q,mCAI3BgC,IAAY,WAAA,MAEO,EAAE,IAAAkP,GAAAc,EAAAjB,GAAA7P,UAAA,cAAA,CAAA+Q,KAAA,WAAA,OAOmB,IAAI,IAAAd,GAAAa,EAAAjB,GAAA7P,UAAA,WAAA,CAM5Cc,IAAY,WAAA,OAEM,CAAC,IAAAqP,GAAAW,EAAAjB,GAAA7P,UAAA,YAAA,CAMnBc,IAAY,WAAA,OAEsB,IAAI,IAjBrBkQ,GAiBqBnB,MAAAmB,KA0C3CvR,EAASkQ,WAAaA,GC/JtB,INOIsB,GMNSC,GAAWnS,EAAA,IADvBC,EAAQ,gBAAgBC,CAAAC,GAAA,SAAAiS,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA9R,KAAA+R,YAAA/R,IAAA,CAAA,OAAAC,EAAA2R,EAAAC,GAAAD,CAAA,CAAA,CACOvB,MAAUzQ,IAG1CO,EAASyR,WAAaA,GNKTI,IAAAA,SAAU,WAQnB,kBAEO9P,KAA2B,EAFV,CARL8P,EACZC,YAAP,WAII,OAHKN,KACDA,GAAc,IAAIK,GAEfL,EACV,EAEwB,IAAA7O,EAAAkP,EAAAtR,UA+BxB,OA/BwBoC,EAGlB/B,IAAP,WACI,IAAIsJ,EAAOrK,KAAKkC,KAAKoJ,MAErB,IAAKjB,EAAM,CACP,IAAM6H,EAASxM,EAASC,SAASkC,cAAc,UACzCsK,EAAUD,EAAOnK,WAAW,MAClCsC,EAAO,CACH6H,OAAAA,EACAC,QAAAA,EAEP,CAED,OAAO9H,CACV,EAAAvH,EAEMG,IAAP,SAAYiP,GACJlS,KAAKkC,KAAK3E,QAAU6U,EAAMC,4BAW9BrS,KAAKkC,KAAK1E,KAAK0U,EAClB,EAAAF,CAAA,CAvCkB,IAyEjBM,GAAQC,EAAMD,MAAME,QAIpBC,GAA0C,wBAAC,EAAI,KAAKC,QAAQ,GAAK,IACjEC,GAAkB1Q,IAElB2Q,GAAa,WAWf,SAAavO,EAAAA,EAAcrF,GAAqBgB,KAVzC6S,MAA2B,KAAI7S,KAG/BqK,KAAiC,KAAIrK,KACrCkS,OAAmC,KAAIlS,KACvCmS,QAA2C,KAAInS,KAC/CnC,MAAQ,EAACmC,KACT8H,OAAS,EAAC9H,KACVgP,QAAU,EAGbhP,KAAI,KAAQqE,EACZrE,KAAKhB,UAAYA,EACjBgB,KAAK8S,KAAU1O,GAAAA,GAAgBC,EAAM,GAAKrF,EAAU8T,IACxD,CAAC,IAAAC,EAAAH,EAAAlS,UAiFA,OAjFAqS,EAEMC,iBAAP,WACIhT,KAAKiT,oBACLjT,KAAKkT,gBACR,EAAAH,EAEM5C,QAAP,WACInQ,KAAK6S,MAAQ,KACbb,GAAWC,cAAchP,IAAIjD,KAAKqK,MAClCrK,KAAKqK,KAAO,IACf,EAAA0I,EAEOE,kBAAR,WAII,GAHAjT,KAAKqK,KAAO2H,GAAWC,cAAclR,MACrCf,KAAKkS,OAASlS,KAAKqK,KAAK6H,OACxBlS,KAAKmS,QAAUnS,KAAKqK,KAAK8H,QACrBnS,KAAKmS,QAAS,CACd,IAAMgB,EAAYnT,KAAKhB,UAAUmU,UACjCnT,KAAKmS,QAAQxO,KAAO3D,KAAKhB,UAAUsI,SACnC,IAAMzJ,EAAQ2F,GAAgBxD,KAAKmS,QAASnS,KAAI,KAAOA,KAAKhB,UAAUsI,UAChE8L,EAAgC,EAAxBpT,KAAKhB,UAAUK,OAzC3B,EA0CFW,KAAKnC,MAAQwV,WAAWxV,EAAM6U,QAAQ,IAAMS,EAAYC,EACxDpT,KAAK8H,QAAU,EAAIhG,GAAkB9B,KAAKhB,UAAUM,SAAW6T,EAAYC,EAC3EpT,KAAKgP,SAAYhP,KAAKhB,UAAUM,SAAWwC,EAAkBqR,EAAY,CAC5E,CAEGnT,KAAKkS,OAAOrU,QAAUmC,KAAKnC,QAC3BmC,KAAKkS,OAAOrU,MAAQmC,KAAKnC,OAGzBmC,KAAKkS,OAAOpK,SAAW9H,KAAK8H,SAC5B9H,KAAKkS,OAAOpK,OAAS9H,KAAK8H,QAGzB9H,KAAK6S,QACN7S,KAAK6S,MAAQ,IAAIS,GAGrBtT,KAAK6S,MAAMU,MAAMvT,KAAKkS,OACzB,EAAAa,EAEOG,eAAR,WACI,GAAKlT,KAAKmS,SAAYnS,KAAKkS,OAA3B,CAIA,IAAMC,EAAUnS,KAAKmS,QACfnT,EAAYgB,KAAKhB,UACjBnB,EAAQmC,KAAKkS,OAAOrU,MACpBiK,EAAS9H,KAAKkS,OAAOpK,OACrBqL,EAAYnU,EAAUmU,UAE5BhB,EAAQqB,UAAY,SACpBrB,EAAQsB,aAAe,aACvBtB,EAAQuB,UAAU,EAAG,EAAG7V,EAAOiK,GAE/BqK,EAAQwB,UAAYlB,GACpBN,EAAQyB,SAAS,EAAG,EAAG/V,EAAOiK,GAC9BqK,EAAQxO,KAAO3E,EAAUsI,SAASqF,QAC9B,gCACA,SAACkC,EAAGgF,EAAWC,EAAWnF,GAAS,QAAOkF,EAAIV,IAAcW,GAAK,GAAKX,GAAWY,WAAapF,KAGlG,IAAMrP,EAAWN,EAAUM,SAAW6T,EAChCa,EAASnW,EAAQ,EACjBoW,EAASnM,EAAS,EAAIxI,EAAW0C,EAAe1C,EAAWqT,GAC3D1T,EAAQD,EAAUC,MAIxB,GAFAkT,EAAQ+B,SAAW,QACnB/B,EAAQwB,UAAS,QAAW1U,EAAMkV,EAAMlV,KAAAA,EAAMmV,OAAMnV,EAAMoV,EAAzC,OACbrV,EAAUI,WAAY,CACtB,IAAMkV,EAActV,EAAUG,KAAOmT,GACrCH,EAAQoC,YAAsBD,QAAAA,EAAYH,EAAC,KAAKG,EAAYF,OAAME,EAAYD,EAAMC,KAAAA,EAAYE,EAAI,IAAM,IAC1GrC,EAAQsC,UAA+B,EAAnBzV,EAAUK,OAAa8T,EAC3ChB,EAAQuC,WAAW1U,UAAWgU,EAAQC,EACzC,CACD9B,EAAQwC,SAAS3U,UAAWgU,EAAQC,EAhCnC,CAoCJ,EAAArB,CAAA,CAhGc,GAmGNgC,GAAoB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA/C,MAAA9R,KAAA+R,YAAA/R,IAAA,CAAAC,EAAA2U,EAAAC,GAAA,IAAAC,EAAAF,EAAAlU,UA2C5B,OA3C4BoU,EAUtBC,aAAP,SAAqBlX,EAAeiK,EAAgBkN,QAAc,IAAdA,IAAAA,EAAiBC,EAAYC,UAC7ElV,KAAKuT,MAAM,CACP1V,MAAAA,EACAiK,OAAAA,EACAkN,OAAAA,GAER,EAACF,EASMK,cAAP,SAAsBtC,EAAmBvB,EAAWC,GAChD,IAAM6D,EAAapV,KAAKqV,gBACxB,GAAKxC,GAAUuC,EAAf,CAIA,IAAME,EAAYtV,KAAKuV,gBACvB,GAAKD,EAAL,CAKA,IAAME,EAAS,IAAIC,EACnBD,EAAOE,UAAUpE,EAAIA,EACrBkE,EAAOE,UAAUnE,EAAIA,EACrBiE,EAAOG,UAAU9X,MAAQgV,EAAMhV,MAC/B2X,EAAOG,UAAU7N,OAAS+K,EAAM/K,OAChCwN,EAAUM,uBAAuB,CAAC/C,EAAMxI,MAA4B+K,EAAY,CAACI,GAPhF,MAFGvO,EAAO,MAJV,CAcJ,EAAA2N,CAAA,CA3C4B,CAAQiB,SA8CjB,WAkBpB,SAAahY,EAAAA,EAAeiK,GAAc9H,KATlC8V,GAhKE,EAgKQ9V,KACV+V,GAjKE,EAiKQ/V,KACVgW,OAlKE,EAkKYhW,KACdiW,OAAS,EAACjW,KACVkW,QAAU,EAAClW,KACXmW,WAAa,EAACnW,KAEdoW,QAAS,EAGb,IAAMhH,EAAU,IAAIwF,GACpBxF,EAAQ2F,aAAalX,EAAOiK,GAE5B9H,KAAK+Q,kBAAoB,IAAI5B,GAAUC,GACvCpP,KAAKmW,WAAaE,EAClBrW,KAAKiW,OAASpY,EACdmC,KAAKkW,QAAUpO,EACfwO,EAASC,GAAGC,EAAcC,oBAAqBzW,KAAK0W,gBAAiB1W,KACzE,CAAC,IAAA2W,EAAAC,EAAAlW,UApBA,OAoBAiW,EAEME,oBAAP,SAA4BC,GACxB,IAAMC,EAAMD,EAAcjE,MACpBmE,EAASV,EAASW,KAAMD,OAC9B,IAAKD,IAAQ/W,KAAK+Q,oBAAsBiG,EACpC,OAAO,KAGX,IAAMnZ,EAAQkZ,EAAIlZ,MACZiK,EAASiP,EAAIjP,OAWnB,GATK9H,KAAK8V,GAAKjY,EA9LT,EA8L0BmC,KAAKiW,SACjCjW,KAAK8V,GA/LH,EAgMF9V,KAAK+V,GAAK/V,KAAKgW,QAGdhW,KAAK+V,GAAKjO,EAAU9H,KAAKgW,SAC1BhW,KAAKgW,OAAShW,KAAK+V,GAAKjO,EApMtB,GAuMF9H,KAAKgW,OAAShW,KAAKkW,QAEnB,OADAjP,EAAO,OACA,KAGX,IAAKjH,KAAK+Q,kBAAkB3B,QACxB,OAAO,KAGApP,KAAK+Q,kBAAkB3B,QAC/B+F,cAAc4B,EAAK/W,KAAK8V,GAAI9V,KAAK+V,IAEpC/V,KAAKoW,QAAS,EAEd,IAAM3G,EAAmB,IAAI5E,GAmB7B,OAlBA4E,EAAiBd,EAAI3O,KAAK8V,GAAK9V,KAAKmW,WACpC1G,EAAiBb,EAAI5O,KAAK+V,GAAK/V,KAAKmW,WACpC1G,EAAiBR,OAAQ,EACzBQ,EAAiBZ,EAAIiI,EAAcjZ,MAxN7B,EAyNN4R,EAAiBX,EAAIgI,EAAchP,OAzN7B,EA0NN2H,EAAiBP,SAAWO,EAAiBZ,EAC7CY,EAAiBT,QAAU8H,EAAc9H,QAEzChP,KAAK8V,IAAMjY,EA9NL,EA+NNmC,KAAK+Q,kBAAkBxB,qBAAqBuH,EAAchE,KAAMrD,GASzDA,CACV,EAAAkH,EAEMO,OAAP,WACSlX,KAAKoW,SAIVpW,KAAKoW,QAAS,EACjB,EAAAO,EAEMpD,MAAP,WACIvT,KAAK8V,GApPC,EAqPN9V,KAAK+V,GArPC,EAsPN/V,KAAKgW,OAtPC,EAkQNhW,KAAK+Q,kBAAkB3N,OAC1B,EAAAuT,EAEMxG,QAAP,WACInQ,KAAKuT,QACL,IAAM4D,EAAOnX,KAAK+Q,kBACdoG,GAAQA,EAAK/H,UACb+H,EAAK/H,QAAU,KAEtB,EAAAuH,EAED/G,WAAA,WACI,OAAO5P,KAAK+Q,kBAAkBnB,YACjC,EAAA+G,EAEMD,gBAAP,WACI1W,KAAKoX,eACR,EAAAT,EAEMS,cAAP,WACIpX,KAAKmQ,UAEL,IAAMf,EAAU,IAAIwF,GACpBxF,EAAQ2F,aAAa/U,KAAKiW,OAAQjW,KAAKkW,SAEvClW,KAAK+Q,kBAAkB3B,QAAUA,CACpC,EAAAuH,EAEM9G,UAAP,SAAkB/O,GACd,OAAOd,KAAK+Q,kBAAkB1B,kBAAkBvO,EACnD,EAAA6V,EAEM7G,2BAAP,SAAmCzL,EAAcrF,GAC7C,IAAM8T,EAAO1O,GAAgBC,EAAM,GAAKrF,EAAU8T,KAC9CtD,EAAsCxP,KAAK+Q,kBAAkB1B,kBAAkByD,GACnF,IAAKtD,EAAQ,CACT,IAAM6H,EAAO,IAAIzE,GAAcvO,EAAMrF,GACrCqY,EAAKrE,mBACLxD,EAASxP,KAAK6W,oBAAoBQ,GAClCA,EAAKlH,SACR,CAED,OAAOX,CACV,EAAA3O,EAAA+V,EAAA,CAAA,CAAA9V,IAAA,QAAAC,IArJD,WACI,OAAOf,KAAKiW,MAChB,GAAC,CAAAnV,IAAA,SAAAC,IAED,WACI,OAAOf,KAAKkW,OAChB,KAACU,CAAA,CAPmB,IAyKuBnX,EAAA,IAAA,CAC3C6X,UAAW,KACXhY,SAAU,EACViY,WAAY,EACZC,OAAQ,EACRC,OAAQ,EACR3E,KAAM,GACNvT,WAAY,GACZ+H,SAAU,QACVrI,MAAOsT,EAAMD,MAAME,QACnBpT,YAAY,EACZD,IAAKoT,EAAMD,MAAME,QACjBnT,OAAQ,EACR8T,UAAW,IOraf,0GCuBYuE,GA4BAC,GA4BAC,GAmCAC,GDlHCC,GAAS,WAAA,SAAAA,IAAA9X,KAGX+X,QAAS,EAAK/X,KAEdgY,UAAW,EAAKhY,KAEhBiY,aAAc,EAAKjY,KACnBkY,gBAAkB,EAAClY,KAEnBZ,YAAa,EAAKY,KAClBmY,aAAe5F,EAAMD,MAAME,QAAOxS,KAClCoY,aAAe,EAACpY,KAEhBqY,WAAY,EAAKrY,KACjBsY,YAAc/F,EAAMgG,MAAM/F,QAAOxS,KACjCwY,WAAa,EAACxY,KACdyY,cAAgB,EAACzY,KACjB0Y,cAAgB,EAAC1Y,KAEjBf,MAAQsT,EAAMD,MAAME,QAAOxS,KAE3BV,SAAW,GAAEU,KACb2Y,eAAiB,EAAC3Y,KAElB4Y,kBAAmB,EAAK5Y,KAIxB6Y,eAAiB,EAAC7Y,KAClB8Y,YAAc,EAAG9Y,KAGjBT,WAAa,QAAOS,KACpBsH,SAAW,GAAEtH,KAKb4Q,UAA4B,KAAI5Q,KAChCyQ,YAAkC,KAAIzQ,KAEtCmT,UAAY,CAAC,CAenB,OAfmB2E,EAAApX,UAEb6S,MAAP,WACIvT,KAAK+X,QAAS,EACd/X,KAAKgY,UAAW,EAChBhY,KAAKiY,aAAc,EACnBjY,KAAKkY,gBAAkB,EACvBlY,KAAKZ,YAAa,EAClBY,KAAKmY,aAAanX,MAClBhB,KAAKoY,aAAe,EACpBpY,KAAKqY,WAAY,EACjBrY,KAAKsY,YAAYtX,MACjBhB,KAAKwY,WAAa,EAClBxY,KAAKyY,cAAgB,EACrBzY,KAAK0Y,cAAgB,CACxB,EAAAZ,CAAA,CAzDiB,GEFTiB,GAAU,WAAA,SAAAA,IAAA/Y,KAGZgZ,gBAAkB,EAAChZ,KACnBiZ,cAAgB,EAACjZ,KAEjBkZ,UAAW,EAAIlZ,KACfmZ,SAAW,EAACnZ,KAEZuX,WAAa,GAAEvX,KAGfoZ,aAAe,EAACpZ,KAChBqZ,SAAW,EAACrZ,KAGZsZ,cAAgB,EAACtZ,KACjBuZ,eAAiB,EAACvZ,KAClBwZ,eAAiB,IAAIC,EAAMzZ,KAE3B0Z,kBAA8B,GAAE1Z,KAChC2Z,cAAgB,EAAC3Z,KAEjB4Z,aAAyB,GAAE5Z,KAC3B6Z,cAAgB,EAAC7Z,KAEjB8Z,aAAe,EAAC9Z,KAChB+Z,gBAAkB,EAAC/Z,KAEnBga,kBAAoB,EAACha,KACrBia,WAAuB,EAAE,CAqB/B,OArB+BlB,EAAArY,UAEzB6S,MAAP,WACIvT,KAAKgZ,gBAAkB,EACvBhZ,KAAKiZ,cAAgB,EACrBjZ,KAAKkZ,UAAW,EAChBlZ,KAAKmZ,SAAW,EAChBnZ,KAAKuX,WAAa,GAClBvX,KAAKoZ,aAAe,EACpBpZ,KAAKqZ,SAAW,EAChBrZ,KAAKsZ,cAAgB,EACrBtZ,KAAKuZ,eAAiB,EACtBvZ,KAAKwZ,eAAexY,MACpBhB,KAAK0Z,kBAAkBnc,OAAS,EAChCyC,KAAK2Z,cAAgB,EACrB3Z,KAAK4Z,aAAarc,OAAS,EAC3ByC,KAAK6Z,cAAgB,EACrB7Z,KAAK8Z,aAAe,EACpB9Z,KAAK+Z,gBAAkB,EACvB/Z,KAAKga,kBAAoB,EACzBha,KAAKia,WAAW1c,OAAS,CAC5B,EAAAwb,CAAA,CAnDkB,GCGVmB,GAAoB,WAAA,SAAAA,IAAAla,KAGtBma,aAAyB,GAAEna,KAG3Boa,gBAAkBX,EAAKY,KAAK7H,QAAOxS,KAGnCsa,WAAa,IAAIb,EAAMzZ,KAEvBua,cAAgB,IAAIC,EAAMxa,KAC1Bya,kBAAoBhB,EAAKY,KAAK7H,QAAOxS,KAErC0a,cAAgBC,EAAKN,KAAK7H,OAAO,CASvC,OATuC0H,EAAAxZ,UAEjC6S,MAAP,WACIvT,KAAKma,aAAa5c,OAAS,EAC3ByC,KAAKoa,gBAAgBpZ,IAAI,EAAG,GAC5BhB,KAAKsa,WAAWtZ,MAChBhB,KAAKua,cAAcvZ,MACnBhB,KAAKya,kBAAkBzZ,MACvBhB,KAAK0a,cAAc1Z,KACtB,EAAAkZ,CAAA,CAvB4B,GA0BpBU,GAAoB,WAAA,SAAAA,IAAA5a,KAEtB6a,UAAY,EAAC7a,KACb8a,aAA8B,GAAE9a,KAChCoP,QAA0C,KAAIpP,KAG9C+a,eAAiB,GAAG/a,KACpBgb,eAAiB,EAAG,CAQ1B,OAR0BJ,EAAAla,UAEpB6S,MAAP,WACIvT,KAAK6a,UAAY,EACjB7a,KAAK8a,aAAavd,OAAS,EAC3ByC,KAAKoP,QAAU,KACfpP,KAAK+a,eAAiB,GACtB/a,KAAKgb,eAAiB,EACzB,EAAAJ,CAAA,CAhB4B,GFVfrI,EAAMD,MAAME,QAMlBkF,EAAAA,IAAAA,IAmBX,SAnBWA,GAAAA,EAAAA,EAAuB,KAAA,GAAA,OAAvBA,EAAAA,EAAuB,OAAA,GAAA,SAAvBA,EAAAA,EAAuB,MAAA,GAAA,OAAvBA,CAmBX,CAnBWA,IAAuBjY,EAAA,IAAvBiY,GAAuB,CAAA,IAqBnCuD,EAAOvD,IAOKC,EAAAA,IAAAA,IAmBX,SAnBWA,GAAAA,EAAAA,EAAqB,IAAA,GAAA,MAArBA,EAAAA,EAAqB,OAAA,GAAA,SAArBA,EAAAA,EAAqB,OAAA,GAAA,QAArBA,CAmBX,CAnBWA,IAAqBlY,EAAA,IAArBkY,GAAqB,CAAA,IAqBjCsD,EAAOtD,IAOKC,EAAAA,IAAAA,IA0BX,SA1BWA,GAAAA,EAAAA,EAAQ,KAAA,GAAA,OAARA,EAAAA,EAAQ,MAAA,GAAA,QAARA,EAAAA,EAAQ,OAAA,GAAA,SAARA,EAAAA,EAAQ,cAAA,GAAA,eAARA,CA0BX,CA1BWA,IAAQnY,EAAA,IAARmY,GAAQ,CAAA,IA4BpBqD,EAAOrD,IAOKC,EAAAA,IAAAA,IAsBX,SAtBWA,GAAAA,EAAAA,EAAS,KAAA,GAAA,OAATA,EAAAA,EAAS,OAAA,GAAA,SAATA,EAAAA,EAAS,KAAA,GAAA,MAATA,CAsBX,CAtBWA,IAASpY,EAAA,IAAToY,GAAS,CAAA,IAwBrBoD,EAAOpD,IASP,IAIaqD,GAAMzb,EAAA,KAAAE,GAJlBD,EAAQ,YAAW+R,GAEnB0J,EAAe,KAAIC,GAkEfnT,EAAKyP,IAAwB2D,GAqB7BpT,EAAK0P,IAAsB2D,GAkG3BrT,EAAK2P,IAAS2D,GAgGdtT,EAAKzI,GAAKgc,GAqCVvT,EAAK4P,IAAUlY,GAAAC,GAAA6R,IAAAC,GAAA,SAAA+J,GAyXhB,SAAAP,IAAA,IAAA3a,EAUsD,OATlDA,EAAOkb,EAAA1b,KAAAC,OAAAA,MAAC0b,QAAAjb,IAAAA,KAAAF,EAAAob,iBAAAjL,IAAAA,KAAAnQ,EAAAqb,eAAAjL,IAAAA,KAAApQ,EAAAsb,gBAAAhL,IAAAA,KAAAtQ,EAAAub,UAAAC,IAAAA,KAAAxb,EAAAC,YAAAwb,IAAAA,KAAAzb,EAAA0b,YAAAC,IAAAA,KAAA3b,EAAA4b,UAAAC,IAAAA,KAAA7b,EAAA8b,gBAAAC,IAAAA,KAAA/b,EAAAgc,MAAAC,IAAAA,KAAAjc,EAAAkc,kBAAAC,IAAAA,KAAAnc,EAAAoc,UAAAC,IAAAA,KAAArc,EAAAsc,UAAAC,IAAAA,KAAAvc,EAAAwc,QAAAC,IAAAA,KAAAzc,EAAA0c,aAAAC,IAAAA,KAAA3c,EAAA4c,iBAAAC,IAAAA,KAAA7c,EAAA8c,WAAAC,IAAAA,KAAA/c,EAAAgd,eAAAC,IAAAA,KAAAjd,EAAAkd,cAAAC,IAAAA,KAAAnd,EAAAod,cAAAC,IAAAA,KAAArd,EAAAsd,cAAAC,IAAAA,KAAAvd,EAAAwd,aAAAC,IAAAA,KAAAzd,EAAA0d,cAAAC,IAAAA,KAAA3d,EAAA4d,YAAAC,IAAAA,KAAA7d,EA9BF8d,QAAuB,KAAI9d,EAC3B+O,SAAqD,KAAI/O,EACzD+d,gBAAsC,KAAI/d,EAC1Cge,iBAAgC,KAAIhe,EACpCie,eAA0C,KAAIje,EAC9Cke,WAA+B,KAAIle,EACnCme,eAA6C,KAAIne,EAEjDoe,cAAgB,EAACpe,EAEjBqe,WAA+B,KAAIre,EACnCse,YAAiC,KAAIte,EACrCue,gBAA+C,KAAIve,EACnDwe,gBAA+C,KAsBrDxe,EAAK+d,gBAAkB,KACvB/d,EAAKqe,WAAa,IAAI9G,GACtBvX,EAAKse,YAAc,IAAI9F,GACvBxY,EAAKwe,gBAAkB,IAAI7E,GAC3B3Z,EAAKue,gBAAkB,IAAIlE,GAAuBra,CACtD,CApYgBN,EAAAib,EAAAO,GAoYf,IAAA3Y,EAAAoY,EAAAxa,UAbA,OAaAoC,EAEMkc,SAAP,WACIvD,EAAA/a,UAAMse,SAAQjf,KAAAC,MAGTA,KAAKuc,OAAUvc,KAAKyc,oBACrBzc,KAAKif,eAAgB,GAGrBjf,KAAKyc,oBAAsBzc,KAAKQ,cAChCR,KAAKT,WAAa,SAGtBS,KAAKkf,mBACR,EAAApc,EAEOqc,sBAAR,WACI,GAAKnf,KAAKse,gBAAV,CAGAte,KAAKse,gBAAgBc,0BACrB,IAAMC,EAAMrf,KAAKse,gBAAgBlP,QAEjC,GADApP,KAAKse,gBAAgBnO,UACjBkP,EAAK,CACL,IAAMC,EAAQD,EACVC,EAAMzM,OACNyM,EAAMzM,MAAM1C,UAEhBkP,EAAIlP,SACP,CACDnQ,KAAKse,gBAAkB,IAXtB,CAYL,EAACxb,EAGMyc,cAAP,WACI9D,EAAA/a,UAAM6e,cAAaxf,KAAAC,MACdA,KAAKwf,iBAENxf,KAAKmf,uBAEZ,EAAArc,EAEM2c,UAAP,WACQzf,KAAK0f,YAAc1f,KAAK0f,WAAWC,oBACnC3f,KAAK0f,WAAWC,mBAAmB3f,KAAKwe,gBAG5Cxe,KAAKwe,eAAiB,KACtBxe,KAAKmf,wBAOLnf,KAAK4f,uBAELnE,EAAA/a,UAAM+e,UAAS1f,KAAAC,KAClB,EAAA8C,EAEO8c,qBAAR,WACI,IAAM9I,EAAgB9W,KAAK0e,eACvB5H,IACAA,EAAc7G,QAAO,GACjB6G,EAAc5G,UAAY,GAC1B4G,EAAc3G,WAGtBnQ,KAAK0e,eAAiB,IAC1B,EAAC5b,EAOMkQ,iBAAP,SAAyB6M,QAAK,IAALA,IAAAA,GAAQ,GACzBA,IACA7f,KAAK8f,kBAGD9f,KAAK+f,aAAY/f,KAAK+f,WAAWC,WAAY,GACjDhgB,KAAKkf,qBAELlf,KAAK0f,YACL1f,KAAK0f,WAAW1M,iBAAkBhT,KAEzC,EAAA8C,EAESmd,QAAV,SAAmBC,GACfA,EAAOC,WAAWngB,KAAMA,KAAK+f,WAAY/f,KAAKsP,SAAUtP,KAAK0f,WAAa,KAC9E,EAAC5c,EAGSsd,aAAV,WACI3E,EAAA/a,UAAM0f,aAAYrgB,KAAAC,MAClBA,KAAKqgB,0BACT,EAACvd,EAKMwd,eAAP,WASC,EAAAxd,EAESyd,WAAV,WACI,IAAI9E,EAAA/a,UAAO6f,WAAYxgB,KAAAC,QAAKA,KAAK0b,QAC7B,OAAO,EAGX,IAAM/X,EAAO3D,KAAKuc,MAClB,GAAI5Y,GAAQA,aAAgB0M,GAAY,CACpC,IAAMI,EAAc9M,EAAK8M,YAEzB,IAAKA,IAAgBA,EAAYrB,QAC7B,OAAO,CAEd,CAED,OAAO,CACV,EAAAtM,EAESgd,gBAAV,WACI,IAAMU,EAAYtF,EAAMuF,UAAUC,aAAa1gB,MAE3CA,KAAK0f,aAAec,IACpBxgB,KAAK2gB,oBACL3gB,KAAK0f,WAAac,EAClBxgB,KAAK4gB,UAAUrN,QACfvT,KAAK6gB,WAAWtN,QAChBvT,KAAK8gB,eAAevN,QACpBvT,KAAK+gB,eAAexN,SAGnBvT,KAAK+f,YACF/f,KAAK0f,YAAc1f,KAAK0f,WAAWsB,aACnChhB,KAAKihB,YAAcjhB,KAAK0f,WAAWsB,WAAWhhB,MAC9CA,KAAK+f,WAAYmB,SAAWlhB,KAAKkhB,SACjClhB,KAAKogB,eAGhB,EAAAtd,EAESoc,kBAAV,WACIlf,KAAKqgB,2BACL,IAAM1c,EAAO3D,KAAKuc,MAClB,GAAI5Y,aAAgB0M,GAAY,CAC5B,IAAMI,EAAc9M,EAAK8M,YACrBA,GAAeA,EAAYrB,UAC3BpP,KAAKsP,SAAWmB,EACZzQ,KAAK+f,aACL/f,KAAK+f,WAAWoB,cAAe,GAEnCnhB,KAAKohB,0BACDphB,KAAK0f,YACL1f,KAAK0f,WAAW1M,iBAAkBhT,MAG7C,KAAM,CACH,GAAIA,KAAKqhB,YAAcxJ,GAAUyJ,KAAM,CACnC,IAAMC,EAAmBvhB,KAAK0e,eACxB5H,EAAiB9W,KAAK0f,WAA0B8B,mBAClD1K,IAAkByK,IAClBvhB,KAAK4f,uBACD9I,GACAA,EAAc1G,UAGtBpQ,KAAKsP,SAAWtP,KAAK0e,eAAiB5H,CACzC,MAAM,IAAK9W,KAAKse,gBAAiB,CAC9Bte,KAAKse,gBAAkB,IAAIhO,EAC3BtQ,KAAKwe,eAAkBxe,KAAK0f,WAAmB8B,mBAC/C,IAAM3O,EAAQ,IAAIS,EAAWtT,KAAKwe,eAAetM,QAC3C9C,EAAU,IAAIyG,EACpBzG,EAAQyD,MAAQA,EAChB7S,KAAKse,gBAAgBlP,QAAUA,CAClC,CAEGpP,KAAKqhB,YAAcxJ,GAAUyJ,OAE7BthB,KAAKsP,SAAWtP,KAAKse,iBAEzBte,KAAKohB,yBACR,CACJ,EAAAte,EAESse,wBAAV,WACI,GAAKphB,KAAKsP,SAAV,CAGA,IAAIrO,GAAQ,EACZ,GAAIjB,KAAKqhB,YAAcxJ,GAAUyJ,KAAM,CACnC,IACMlS,EADcpP,KAAKsP,SACGF,QAC5B,GAAIA,aAAmBqS,EAAa,CAChC,IAAMzM,EAAS5F,EAAQsS,iBACvBzgB,EAAS+T,IAAWC,EAAY0M,WAAa3M,IAAWC,EAAY2M,oBAAsB5M,IAAWC,EAAY4M,kBACpH,CACJ,CAEG7hB,KAAK8hB,sBADL7gB,EAC6B8gB,EAAqBC,oBAErBD,EAAqBE,sBAEtDjiB,KAAKkiB,gBAfJ,CAgBL,EAACpf,EAMMqf,iBAAP,WAaI1G,EAAA/a,UAAMyhB,iBAAgBpiB,KAAAC,KACzB,EAAAa,EAAAqa,EAAA,CAAA,CAAApa,IAAA,SAAAC,IAr4BD,WAGI,OAAOf,KAAK0b,OACf,EAAA1a,IACD,SAAYC,GAEJA,EADAA,QACQ,GAEAA,EAAM8S,WAGd/T,KAAK0b,UAAYza,IAIrBjB,KAAK0b,QAAUza,EACfjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,kBAAAC,IASD,WAGI,OAAOf,KAAK2b,gBACf,EAAA3a,IACD,SAAqBC,GACbjB,KAAK2b,mBAAqB1a,IAI9BjB,KAAK2b,iBAAmB1a,EACxBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,gBAAAC,IASD,WAGI,OAAOf,KAAK4b,cACf,EAAA5a,IACD,SAAmBC,GACXjB,KAAK4b,iBAAmB3a,IAI5BjB,KAAK4b,eAAiB3a,EACtBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,iBAAAC,IASD,WACI,OAAOf,KAAK6b,eACf,EAAA7a,IACD,SAAoBC,GAChBjB,KAAK6b,gBAAkB5a,CAC3B,GAAC,CAAAH,IAAA,WAAAC,IASD,WAEI,OAAOf,KAAK8b,SACf,EAAA9a,IACD,SAAcC,GACNjB,KAAK8b,YAAc7a,IAIvBjB,KAAK8b,UAAY7a,EACjBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,aAAAC,IASD,WAEI,OAAOf,KAAKic,WACf,EAAAjb,IACD,SAAgBC,GACRjB,KAAKic,cAAgBhb,IAIzBjB,KAAKic,YAAchb,EACnBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,WAAAC,IASD,WAKI,OAAOf,KAAK2c,SACf,EAAA3b,IACD,SAAcC,GACNjB,KAAK2c,YAAc1b,IAIvBjB,KAAK2c,UAAY1b,EACjBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,WAAAC,IASD,WAGI,OAAOf,KAAKmc,SACf,EAAAnb,IACD,SAAcC,GACNjB,KAAKmc,YAAclb,IAIvBjB,KAAKmc,UAAYlb,EACjBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,iBAAAC,IASD,WAEI,OAAOf,KAAKqc,eACf,EAAArb,IACD,SAAoBC,GACZjB,KAAKqc,kBAAoBpb,IAI7BjB,KAAKqc,gBAAkBpb,EACvBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,gBAAAC,IASD,WAEI,OAAOf,KAAKyc,iBACf,EAAAzb,IACD,SAAmBC,GACXjB,KAAKyc,oBAAsBxb,IAI/BjB,KAAK2gB,oBAUL3gB,KAAKyc,oBAAsBxb,EACvBA,IACAjB,KAAK2D,KAAO,MAEhB3D,KAAK8f,kBACL9f,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,aAAAC,IASD,WAGI,OAAOf,KAAKQ,WACf,EAAAQ,IACD,SAAgBC,GACRjB,KAAKQ,cAAgBS,IAIzBjB,KAAKQ,YAAcS,EACnBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,OAAAC,IASD,WAKI,OAAOf,KAAKuc,KACf,EAAAvb,IACD,SAAUC,GACFjB,KAAKuc,QAAUtb,IAKnBjB,KAAKyc,mBAAqBxb,EAO1BjB,KAAKuc,MAAQtb,EAIbjB,KAAK2gB,oBAEL3gB,KAAKye,WAAa,KAClBze,KAAKgT,kBAAiB,GAC1B,GAAC,CAAAlS,IAAA,YAAAC,IASD,WAGI,OAAOf,KAAKqd,UACf,EAAArc,IACD,SAAeC,GACX,IAAMmhB,EAAepiB,KAAKqd,WACtB+E,IAAiBnhB,IAIjBmhB,IAAiBvK,GAAUwK,QAAYriB,KAAKuc,iBAAiBlM,KAAerQ,KAAKse,iBACjFte,KAAKse,gBAAgBc,0BAErBgD,IAAiBvK,GAAUyJ,OAC3BthB,KAAKse,gBAAkB,KACvBte,KAAK4f,wBAGT5f,KAAKqd,WAAapc,EAClBjB,KAAKgT,kBAAiB,GAC1B,GAAC,CAAAlS,IAAA,SAAAC,IASD,WAEI,OAAOf,KAAK+c,OACf,EAAA/b,IACD,SAAYC,GACJjB,KAAK+c,UAAY9b,IAIrBjB,KAAK+c,QAAU9b,EACfjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,WAAAC,IASD,WAEI,OAAOf,KAAK6c,SACf,EAAA7b,IACD,SAAcC,GACNjB,KAAK6c,YAAc5b,IAIvBjB,KAAK6c,UAAY5b,EACjBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,cAAAC,IASD,WAEI,OAAOf,KAAKid,YACf,EAAAjc,IACD,SAAiBC,GACTjB,KAAKid,eAAiBhc,IAI1BjB,KAAKid,aAAehc,EACpBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,kBAAAC,IAMD,WAII,OAAOf,KAAKmd,gBACf,EAAAnc,IACD,SAAqBC,GACbjB,KAAKmd,mBAAqBlc,IAC9BjB,KAAKmd,iBAAmBlc,EACxBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,gBAAAC,IASD,WAII,OAAOf,KAAKud,cACf,EAAAvc,IACD,SAAmBC,GACXjB,KAAKud,iBAAmBtc,IAC5BjB,KAAKud,eAAiBtc,EACtBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,eAAAC,IASD,WAII,OAAOf,KAAKyd,aACf,EAAAzc,IACD,SAAkBC,GACVjB,KAAKyd,gBAAkBxc,IAC3BjB,KAAKyd,cAAczc,IAAIC,GACvBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,eAAAC,IASD,WAII,OAAOf,KAAK2d,aACf,EAAA3c,IACD,SAAkBC,GACVjB,KAAK2d,gBAAkB1c,IAC3BjB,KAAK2d,cAAgB1c,EACrBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,eAAAC,IAMD,WAII,OAAOf,KAAK6d,aACf,EAAA7c,IACD,SAAkBC,GACVjB,KAAK6d,gBAAkB5c,IAC3BjB,KAAK6d,cAAgB5c,EACrBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,cAAAC,IASD,WAII,OAAOf,KAAK+d,YACf,EAAA/c,IACD,SAAiBC,GACTjB,KAAK+d,eAAiB9c,IAC1BjB,KAAK+d,aAAa/c,IAAIC,GACtBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,eAAAC,IASD,WAII,OAAOf,KAAKie,aACf,EAAAjd,IACD,SAAkBC,GACVjB,KAAKie,gBAAkBhd,IAC3BjB,KAAKie,cAAcjd,IAAIC,GACvBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,aAAAC,IASD,WAII,OAAOf,KAAKme,WACf,EAAAnd,IACD,SAAgBC,GACRjB,KAAKme,cAAgBld,IACzBjB,KAAKme,YAAcld,EACnBjB,KAAKqgB,2BACT,GAAC,CAAAvf,IAAA,cAAAC,IAKD,WACI,OAAOf,KAAKsP,QAChB,GAAC,CAAAxO,IAAA,iBAAAC,IAKD,WACI,OAAOf,KAAKse,eAChB,GAAC,CAAAxd,IAAA,gBAAAC,IAKD,WACI,OAAOf,KAAKwe,cAChB,GAAC,CAAA1d,IAAA,YAAAC,IAKD,WACI,OAAOf,KAAKye,UACf,EAAAzd,IAED,SAAeC,GACXjB,KAAKye,WAAaxd,CACtB,GAAC,CAAAH,IAAA,sBAAAC,IAKD,WACI,OAAIf,KAAKuc,iBAAiBlM,GACfrQ,KAAKuc,MAAMjd,UAEV,CAEhB,GAAC,CAAAwB,IAAA,YAAAC,IAKD,WACI,OAAOf,KAAK4e,UAChB,GAAC,CAAA9d,IAAA,aAAAC,IAID,WACI,OAAOf,KAAK6e,WAChB,GAAC,CAAA/d,IAAA,iBAAAC,IAID,WACI,OAAOf,KAAK8e,eAChB,GAAC,CAAAhe,IAAA,iBAAAC,IAID,WACI,OAAOf,KAAK+e,eAChB,GAAC,CAAAje,IAAA,eAAAC,IAuED,WACI,OAAOf,KAAK2e,aAChB,EAAC3d,IAKD,SAAkBshB,GACdtiB,KAAK2e,cAAgB2D,CACzB,KAACpH,CAAA,CAvXe,CA5TOqH,GAMTC,GAAAA,gBAAkB9K,MAMlB+K,cAAgB9K,GAAqBjG,GAMrCkG,SAAWA,GAMXC,GAAAA,UAAYA,GAIZlG,GAAAA,YAAcK,GAAWC,cAAaxQ,GAgSpCpB,GAhSoCqR,IAAAhR,UAAA,kBAAA,CAAA0a,IAAAxZ,OAAAC,yBAAAxB,GAAAK,UAAA,mBAAAL,GAAAK,WAAAe,EAAApB,GAAAK,UAAA,gBAAA,CAAA2a,IAAAzZ,OAAAC,yBAAAxB,GAAAK,UAAA,iBAAAL,GAAAK,WAAAe,EAAApB,GAAAK,UAAA,WAAA,CAAA4a,IAAA1Z,OAAAC,yBAAAxB,GAAAK,UAAA,YAAAL,GAAAK,WAAAe,EAAApB,GAAAK,UAAA,OAAA,CAAA6a,IAAA3Z,OAAAC,yBAAAxB,GAAAK,UAAA,QAAAL,GAAAK,WAAAe,EAAApB,GAAAK,UAAA,YAAA,CAAA8a,IAAA5Z,OAAAC,yBAAAxB,GAAAK,UAAA,aAAAL,GAAAK,WAAAD,GAAA+Q,EAAAnR,GAAAK,UAAA,UAAA,CAykBnDc,IAAY,WAAA,MACO,OAAO,IAAAkP,GAAAc,EAAAnR,GAAAK,UAAA,mBAAA,CAC1Bc,IAAY,WAAA,OACgBkW,GAAwBgL,MAAM,IAAA/R,GAAAa,EAAAnR,GAAAK,UAAA,iBAAA,CAC1Dc,IAAY,WAAA,OACcmW,GAAsB+K,MAAM,IAAA7R,GAAAW,EAAAnR,GAAAK,UAAA,kBAAA,CACtDc,IAAY,WAAA,OACe,CAAC,IAAAua,GAAAvK,EAAAnR,GAAAK,UAAA,YAAA,CAC5Bc,IAAY,WAAA,OACS,EAAE,IAAAwa,GAAAxK,EAAAnR,GAAAK,UAAA,cAAA,CACvBc,IAAY,WAAA,MACW,OAAO,IAAA0a,GAAA1K,EAAAnR,GAAAK,UAAA,cAAA,CAC9Bc,IAAY,WAAA,OACW,EAAE,IAAA4a,GAAA5K,EAAAnR,GAAAK,UAAA,YAAA,CACzBc,IAAY,WAAA,OACmBoW,GAAS+K,IAAI,IAAArG,GAAA9K,EAAAnR,GAAAK,UAAA,kBAAA,CAC5Cc,IAAY,WAAA,OACe,CAAI,IAAAgb,GAAAhL,EAAAnR,GAAAK,UAAA,QAAA,CAC/Bc,IAAY,WAAA,OACkB,IAAI,IAAAkb,GAAAlL,EAAAnR,GAAAK,UAAA,oBAAA,CAClCc,IAAY,WAAA,OACiB,CAAI,IAAAob,GAAApL,EAAAnR,GAAAK,UAAA,YAAA,CACjCc,IAAY,WAAA,OACS,CAAC,IAAAsb,GAAAtL,EAAAnR,GAAAK,UAAA,YAAA,CACtBc,IAAY,WAAA,OACS,CAAK,IAAAwb,GAAAxL,EAAAnR,GAAAK,UAAA,UAAA,CAC1Bc,IAAY,WAAA,OACO,CAAK,IAAA0b,GAAA1L,EAAAnR,GAAAK,UAAA,eAAA,CACxBc,IAAY,WAAA,OACY,CAAK,IAAA4b,GAAA5L,EAAAnR,GAAAK,UAAA,mBAAA,CAC7Bc,IAAY,WAAA,OACgB,CAAC,IAAA8b,GAAA9L,EAAAnR,GAAAK,UAAA,aAAA,CAC7Bc,IAAY,WAAA,OACUqW,GAAU8K,IAAI,IAAAnF,GAAAhM,EAAAnR,GAAAK,UAAA,iBAAA,CACpCc,IAAY,WAAA,OACc,CAAK,IAAAkc,GAAAlM,EAAAnR,GAAAK,UAAA,gBAAA,CAC/Bc,IAAY,WAAA,OACa,IAAI+Q,EAAM,EAAG,EAAG,EAAG,IAAI,IAAAqL,GAAApM,EAAAnR,GAAAK,UAAA,gBAAA,CAChDc,IAAY,WAAA,OACa,CAAC,IAAAsc,GAAAtM,EAAAnR,GAAAK,UAAA,gBAAA,CAC1Bc,IAAY,WAAA,OACa,CAAK,IAAAwc,GAAAxM,EAAAnR,GAAAK,UAAA,eAAA,CAC9Bc,IAAY,WAAA,OACY,IAAI+Q,EAAM,EAAG,EAAG,EAAG,IAAI,IAAA2L,GAAA1M,EAAAnR,GAAAK,UAAA,gBAAA,CAC/Cc,IAAY,WAAA,OACa,IAAImZ,EAAK,EAAG,EAAE,IAAAyD,GAAA5M,EAAAnR,GAAAK,UAAA,cAAA,CACvCc,IAAY,WAAA,OACW,CAAC,IAxVT5B,GAwVSS,MAAAT,KAAAA,KAyR7BO,EAAS+a,MAAQA"}