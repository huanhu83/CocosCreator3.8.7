{"version":3,"file":"physics-ammo.js","sources":["../../../cocos/physics/bullet/instantiated.ts","../../../cocos/physics/bullet/instantiate.ts","../../../cocos/physics/bullet/bullet-cache.ts","../../../cocos/physics/bullet/bullet-enum.ts","../../../cocos/physics/bullet/bullet-utils.ts","../../../cocos/physics/bullet/bullet-rigid-body.ts","../../../cocos/physics/bullet/bullet-env.ts","../../../cocos/physics/bullet/bullet-shared-body.ts","../../../cocos/physics/bullet/shapes/bullet-shape.ts","../../../cocos/physics/bullet/bullet-contact-data.ts","../../../cocos/physics/bullet/bullet-world.ts","../../../cocos/physics/bullet/shapes/bullet-box-shape.ts","../../../cocos/physics/bullet/shapes/bullet-sphere-shape.ts","../../../cocos/physics/bullet/shapes/bullet-capsule-shape.ts","../../../cocos/physics/bullet/bullet-bvh-triangle-mesh-shape.ts","../../../cocos/physics/bullet/shapes/bullet-trimesh-shape.ts","../../../cocos/physics/bullet/constraints/bullet-configurable-constraint.ts","../../../cocos/physics/bullet/shapes/bullet-cylinder-shape.ts","../../../cocos/physics/bullet/shapes/bullet-cone-shape.ts","../../../cocos/physics/bullet/shapes/bullet-terrain-shape.ts","../../../cocos/physics/bullet/shapes/bullet-simplex-shape.ts","../../../cocos/physics/bullet/shapes/bullet-plane-shape.ts","../../../cocos/physics/bullet/constraints/bullet-constraint.ts","../../../cocos/physics/bullet/constraints/bullet-p2p-constraint.ts","../../../cocos/physics/bullet/constraints/bullet-fixed-constraint.ts","../../../cocos/physics/bullet/constraints/bullet-hinge-constraint.ts","../../../cocos/physics/bullet/character-controllers/bullet-character-controller.ts","../../../cocos/physics/bullet/character-controllers/bullet-capsule-character-controller.ts","../../../cocos/physics/bullet/character-controllers/bullet-box-character-controller.ts"],"sourcesContent":["/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ensureWasmModuleReady, instantiateWasm } from 'pal/wasm';\r\nimport { BUILD, LOAD_BULLET_MANUALLY, NATIVE_CODE_BUNDLE_MODE } from 'internal:constants';\r\nimport { game } from '../../game';\r\nimport { error, log, sys } from '../../core';\r\nimport { NativeCodeBundleMode } from '../../misc/webassembly-support';\r\nimport type { BulletCache } from './bullet-cache';\r\n\r\n//corresponds to bulletType in bullet-compile\r\nexport enum EBulletType{\r\n    EBulletTypeVec3 = 0,\r\n    EBulletTypeQuat,\r\n    EBulletTypeTransform,\r\n    EBulletTypeMotionState,\r\n    EBulletTypeCollisionObject,\r\n    EBulletTypeCollisionShape,\r\n    EBulletTypeCharacterController,\r\n    EBulletTypeStridingMeshInterface,\r\n    EBulletTypeTriangleMesh,\r\n    EBulletTypeCollisionDispatcher,\r\n    EBulletTypeDbvtBroadPhase,\r\n    EBulletTypeSequentialImpulseConstraintSolver,\r\n    EBulletTypeCollisionWorld,\r\n    EBulletTypeTypedConstraint,\r\n    EBulletTypeDebugDraw\r\n}\r\n\r\n//corresponds to btTriangleRaycastCallback::EFlags\r\nexport enum EBulletTriangleRaycastFlag {\r\n    NONE                            = 0,\r\n    FilterBackfaces                 = 1 << 0,\r\n    KeepUnflippedNormal             = 1 << 1, //Prevents returned face normal getting flipped when a ray hits a back-facing triangle\r\n    UseSubSimplexConvexCastRaytest  = 1 << 2, //default, uses an approximate but faster ray versus convex intersection algorithm\r\n    UseGjkConvexCastRaytest         = 1 << 3\r\n}\r\n\r\n//btIDebugDraw::EBulletDebugDrawModes\r\nexport enum EBulletDebugDrawModes\r\n{\r\n    DBG_NoDebug=0,\r\n    DBG_DrawWireframe = 1,\r\n    DBG_DrawAabb=2,\r\n    DBG_DrawFeaturesText=4,\r\n    DBG_DrawContactPoints=8,\r\n    DBG_NoDeactivation=16,\r\n    DBG_NoHelpText = 32,\r\n    DBG_DrawText=64,\r\n    DBG_ProfileTimings = 128,\r\n    DBG_EnableSatComparison = 256,\r\n    DBG_DisableBulletLCP = 512,\r\n    DBG_EnableCCD = 1024,\r\n    DBG_DrawConstraints = (1 << 11),\r\n    DBG_DrawConstraintLimits = (1 << 12),\r\n    DBG_FastWireframe = (1 << 13),\r\n    DBG_DrawNormals = (1 << 14),\r\n    DBG_DrawFrames = (1 << 15),\r\n    DBG_MAX_DEBUG_DRAW_MODE\r\n}\r\n\r\ninterface BtCache {\r\n    CACHE: typeof BulletCache,\r\n    BODY_CACHE_NAME: string,\r\n    CCT_CACHE_NAME: string,\r\n}\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nexport let bt = {} as Bullet.instance;\r\nexport const btCache = {} as BtCache;\r\nbtCache.BODY_CACHE_NAME = 'body';\r\nbtCache.CCT_CACHE_NAME = 'cct';\r\n\r\nfunction initWASM (wasmFactory, wasmUrl: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        const errorMessage = (err: any): string => `[bullet]: bullet wasm lib load failed: ${err}`;\r\n        wasmFactory({\r\n            instantiateWasm (\r\n                importObject: WebAssembly.Imports,\r\n                receiveInstance: (instance: WebAssembly.Instance, module: WebAssembly.Module) => void,\r\n            ) {\r\n                // NOTE: the Promise return by instantiateWasm hook can't be caught.\r\n                instantiateWasm(wasmUrl, importObject).then((result) => {\r\n                    receiveInstance(result.instance, result.module);\r\n                }).catch((err) => reject(errorMessage(err)));\r\n            },\r\n        }).then((instance: any) => {\r\n            log('[bullet]:bullet wasm lib loaded.');\r\n            bt = instance as Bullet.instance;\r\n            globalThis.Bullet = bt as any;\r\n        }).then(resolve).catch((err: any) => reject(errorMessage(err)));\r\n    });\r\n}\r\n\r\nfunction initASM (asmFactory): Promise<void> {\r\n    if (asmFactory != null) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return asmFactory().then((instance: any) => {\r\n            log('[bullet]:bullet asm lib loaded.');\r\n            bt = instance as Bullet.instance;\r\n        });\r\n    } else {\r\n        return new Promise<void>((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\nfunction shouldUseWasmModule (): boolean {\r\n    if (NATIVE_CODE_BUNDLE_MODE === (NativeCodeBundleMode.BOTH as number)) {\r\n        return sys.hasFeature(sys.Feature.WASM);\r\n    } else if (NATIVE_CODE_BUNDLE_MODE === (NativeCodeBundleMode.WASM as number)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function waitForAmmoInstantiation (): Promise<void> {\r\n    const errorReport = (msg: any): void => { error(msg); };\r\n    return ensureWasmModuleReady().then(() => {\r\n        if (shouldUseWasmModule()) {\r\n            return Promise.all([\r\n                import('external:emscripten/bullet/bullet.release.wasm.js'),\r\n                import('external:emscripten/bullet/bullet.release.wasm.wasm'),\r\n            ]).then(([\r\n                { default: bulletWasmFactory },\r\n                { default: bulletWasmUrl },\r\n            ]) => initWASM(bulletWasmFactory, bulletWasmUrl));\r\n        } else {\r\n            return import('external:emscripten/bullet/bullet.release.asm.js').then(\r\n                ({ default: bulletAsmFactory }) => initASM(bulletAsmFactory),\r\n            );\r\n        }\r\n    }).catch(errorReport);\r\n}\r\n\r\nif (!BUILD || !LOAD_BULLET_MANUALLY) {\r\n    game.onPostInfrastructureInitDelegate.add(waitForAmmoInstantiation);\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BUILD, LOAD_BULLET_MANUALLY } from 'internal:constants';\r\nimport { Game, game } from '../../game';\r\nimport { selector } from '../framework/physics-selector';\r\nimport { BulletRigidBody } from './bullet-rigid-body';\r\nimport { BulletWorld } from './bullet-world';\r\nimport { BulletBoxShape } from './shapes/bullet-box-shape';\r\nimport { BulletSphereShape } from './shapes/bullet-sphere-shape';\r\nimport { BulletCapsuleShape } from './shapes/bullet-capsule-shape';\r\nimport { BulletTrimeshShape } from './shapes/bullet-trimesh-shape';\r\nimport { BulletCylinderShape } from './shapes/bullet-cylinder-shape';\r\nimport { BulletConeShape } from './shapes/bullet-cone-shape';\r\nimport { BulletTerrainShape } from './shapes/bullet-terrain-shape';\r\nimport { BulletSimplexShape } from './shapes/bullet-simplex-shape';\r\nimport { BulletPlaneShape } from './shapes/bullet-plane-shape';\r\nimport { BulletP2PConstraint } from './constraints/bullet-p2p-constraint';\r\nimport { BulletFixedConstraint } from './constraints/bullet-fixed-constraint';\r\nimport { BulletHingeConstraint } from './constraints/bullet-hinge-constraint';\r\nimport { BulletConfigurableConstraint } from './constraints/bullet-configurable-constraint';\r\n\r\nimport { BulletCapsuleCharacterController } from './character-controllers/bullet-capsule-character-controller';\r\nimport { BulletBoxCharacterController } from './character-controllers/bullet-box-character-controller';\r\nimport { waitForAmmoInstantiation } from './instantiated';\r\nimport { PhysicsSystem } from '../framework';\r\n\r\ngame.once(Game.EVENT_PRE_SUBSYSTEM_INIT, () => {\r\n    selector.register('bullet', {\r\n        PhysicsWorld: BulletWorld,\r\n        RigidBody: BulletRigidBody,\r\n\r\n        BoxShape: BulletBoxShape,\r\n        SphereShape: BulletSphereShape,\r\n        CapsuleShape: BulletCapsuleShape,\r\n        TrimeshShape: BulletTrimeshShape,\r\n        CylinderShape: BulletCylinderShape,\r\n        ConeShape: BulletConeShape,\r\n        TerrainShape: BulletTerrainShape,\r\n        SimplexShape: BulletSimplexShape,\r\n        PlaneShape: BulletPlaneShape,\r\n\r\n        PointToPointConstraint: BulletP2PConstraint,\r\n        HingeConstraint: BulletHingeConstraint,\r\n        FixedConstraint: BulletFixedConstraint,\r\n        ConfigurableConstraint: BulletConfigurableConstraint,\r\n\r\n        BoxCharacterController: BulletBoxCharacterController,\r\n        CapsuleCharacterController: BulletCapsuleCharacterController,\r\n    });\r\n});\r\n\r\nlet loadBulletPromise: Promise<void> | undefined;\r\n\r\nexport function loadWasmModuleBullet (): Promise<void> {\r\n    if (BUILD && LOAD_BULLET_MANUALLY) {\r\n        if (loadBulletPromise) return loadBulletPromise;\r\n        loadBulletPromise = Promise.resolve()\r\n            .then(() => waitForAmmoInstantiation())\r\n            .then(() => PhysicsSystem.constructAndRegisterManually());\r\n        return loadBulletPromise;\r\n    } else {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Collider, TriggerEventType, CollisionEventType, IContactEquation, CharacterController } from '../../../exports/physics-framework';\r\nimport { Vec3, Quat, Mat4, Color } from '../../core';\r\nimport { CharacterTriggerEventType } from '../framework';\r\nimport { bt, btCache } from './instantiated';\r\nimport type { BulletWorld } from './bullet-world';\r\n\r\nexport const TriggerEventObject = {\r\n    type: 'onTriggerEnter' as unknown as TriggerEventType,\r\n    selfCollider: null as unknown as Collider,\r\n    otherCollider: null as unknown as Collider,\r\n    impl: null,\r\n};\r\n\r\nexport const CollisionEventObject = {\r\n    type: 'onCollisionEnter' as CollisionEventType,\r\n    selfCollider: null as unknown as Collider,\r\n    otherCollider: null as unknown as Collider,\r\n    contacts: [] as IContactEquation[],\r\n    impl: null,\r\n};\r\n\r\nexport const CharacterTriggerEventObject = {\r\n    type: 'onControllerTriggerEnter' as unknown as CharacterTriggerEventType,\r\n    collider: null as unknown as Collider,\r\n    characterController: null as unknown as CharacterController,\r\n    impl: null,\r\n};\r\n\r\nexport class BulletCache {\r\n    private static _instance: BulletCache;\r\n    static get instance (): BulletCache {\r\n        if (BulletCache._instance == null) BulletCache._instance = new BulletCache();\r\n        return BulletCache._instance;\r\n    }\r\n\r\n    static readonly ROOT: { [x: number]: Record<string, unknown> } = {};\r\n\r\n    static setWrapper (impl: Bullet.ptr, type: string, wrap: any): void {\r\n        if (!this.ROOT[type]) this.ROOT[type] = {};\r\n        this.ROOT[type][impl] = wrap;\r\n    }\r\n\r\n    static delWrapper (impl: Bullet.ptr, type: string): void {\r\n        delete this.ROOT[type][impl];\r\n    }\r\n\r\n    static getWrapper<T> (ptr: Bullet.ptr, type: string): T {\r\n        return this.ROOT[type][ptr] as T;\r\n    }\r\n\r\n    static isNotEmptyShape (ptr: Bullet.ptr): boolean { return ptr !== bt.EmptyShape_static(); }\r\n\r\n    static world: BulletWorld | null = null;\r\n\r\n    readonly BT_TRANSFORM_0 = bt.Transform_new();\r\n    readonly BT_TRANSFORM_1 = bt.Transform_new();\r\n    readonly BT_V3_0 = bt.Vec3_new(0, 0, 0);\r\n    readonly BT_V3_1 = bt.Vec3_new(0, 0, 0);\r\n    readonly BT_V3_2 = bt.Vec3_new(0, 0, 0);\r\n    readonly BT_QUAT_0 = bt.Quat_new(0, 0, 0, 1);\r\n}\r\n\r\nexport const CC_V3_0 = new Vec3();\r\nexport const CC_V3_1 = new Vec3();\r\nexport const CC_V3_2 = new Vec3();\r\nexport const CC_QUAT_0 = new Quat();\r\nexport const CC_QUAT_1 = new Quat();\r\nexport const CC_MAT4_0 = new Mat4();\r\nexport const CC_MAT4_1 = new Mat4();\r\nexport const CC_COLOR_0 = new Color();\r\n\r\nbtCache.CACHE = BulletCache;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport enum EBtSharedBodyDirty {\r\n    NONE = 0,\r\n    BODY_RE_ADD = 1,\r\n    GHOST_RE_ADD = 2,\r\n}\r\n\r\nexport enum btCollisionFlags {\r\n    CF_STATIC_OBJECT = 1,\r\n    CF_KINEMATIC_OBJECT = 2,\r\n    CF_NO_CONTACT_RESPONSE = 4,\r\n    CF_CUSTOM_MATERIAL_CALLBACK = 8, // this allows per-triangle material (friction/restitution)\r\n    CF_CHARACTER_OBJECT = 16,\r\n    CF_DISABLE_VISUALIZE_OBJECT = 32, // disable debug drawing\r\n    CF_DISABLE_SPU_COLLISION_PROCESSING = 64// disable parallel/SPU processing\r\n}\r\n\r\nexport enum btCollisionObjectTypes {\r\n    CO_COLLISION_OBJECT = 1,\r\n    CO_RIGID_BODY = 2,\r\n    /// CO_GHOST_OBJECT keeps track of all objects overlapping its AABB and that pass its collision filter\r\n    /// It is useful for collision sensors, explosion objects, character controller etc.\r\n    CO_GHOST_OBJECT = 4,\r\n    CO_SOFT_BODY = 8,\r\n    CO_HF_FLUID = 16,\r\n    CO_USER_TYPE = 32,\r\n    CO_FEATHERSTONE_LINK = 64\r\n}\r\n\r\nexport enum btCollisionObjectStates {\r\n    ACTIVE_TAG = 1,\r\n    ISLAND_SLEEPING = 2,\r\n    WANTS_DEACTIVATION = 3,\r\n    DISABLE_DEACTIVATION = 4,\r\n    DISABLE_SIMULATION = 5,\r\n}\r\n\r\nexport enum btRigidBodyFlags {\r\n    BT_DISABLE_WORLD_GRAVITY = 1,\r\n    /// The BT_ENABLE_GYROPSCOPIC_FORCE can easily introduce instability\r\n    /// So generally it is best to not enable it.\r\n    /// If really needed, run at a high frequency like 1000 Hertz:\r\n    /// See Demos/GyroscopicDemo for an example use\r\n    BT_ENABLE_GYROPSCOPIC_FORCE = 2\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { IVec3Like, IQuatLike } from '../../core';\r\nimport { Mesh } from '../../3d';\r\nimport { PrimitiveMode } from '../../gfx';\r\nimport { bt } from './instantiated';\r\nimport { BulletCache } from './bullet-cache';\r\n\r\nexport function cocos2BulletVec3 (out: Bullet.ptr, v: IVec3Like): Bullet.ptr {\r\n    bt.Vec3_set(out, v.x, v.y, v.z);\r\n    return out;\r\n}\r\n\r\nexport function bullet2CocosVec3<T extends IVec3Like> (out: T, v: Bullet.ptr): T {\r\n    const rawVertexBuffer = bt.HEAPF32.subarray(v / 4, v / 4 + 3);\r\n    out.x = rawVertexBuffer[0];\r\n    out.y = rawVertexBuffer[1];\r\n    out.z = rawVertexBuffer[2];\r\n    return out;\r\n}\r\n\r\nexport function cocos2BulletQuat (out: Bullet.ptr, q: IQuatLike): Bullet.ptr {\r\n    bt.Quat_set(out, q.x, q.y, q.z, q.w);\r\n    return out;\r\n}\r\n\r\nexport function bullet2CocosQuat<T extends IQuatLike> (out: T, q: Bullet.ptr): T {\r\n    const rawVertexBuffer = bt.HEAPF32.subarray(q / 4, q / 4 + 4);\r\n    out.x = rawVertexBuffer[0];\r\n    out.y = rawVertexBuffer[1];\r\n    out.z = rawVertexBuffer[2];\r\n    out.w = rawVertexBuffer[3];\r\n    return out;\r\n}\r\n\r\nexport function cocos2BulletTriMesh (out: Bullet.ptr, mesh: Mesh): any {\r\n    const len = mesh.renderingSubMeshes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const subMesh = mesh.renderingSubMeshes[i];\r\n        const geoInfo = subMesh.geometricInfo;\r\n        if (geoInfo) {\r\n            const primitiveMode = subMesh.primitiveMode;\r\n            const vb = geoInfo.positions;\r\n            const ib = geoInfo.indices!;\r\n            const v0 = BulletCache.instance.BT_V3_0;\r\n            const v1 = BulletCache.instance.BT_V3_1;\r\n            const v2 = BulletCache.instance.BT_V3_2;\r\n            if (primitiveMode === PrimitiveMode.TRIANGLE_LIST) {\r\n                const cnt = ib.length;\r\n                for (let j = 0; j < cnt; j += 3) {\r\n                    const i0 = ib[j] * 3;\r\n                    const i1 = ib[j + 1] * 3;\r\n                    const i2 = ib[j + 2] * 3;\r\n                    bt.Vec3_set(v0, vb[i0], vb[i0 + 1], vb[i0 + 2]);\r\n                    bt.Vec3_set(v1, vb[i1], vb[i1 + 1], vb[i1 + 2]);\r\n                    bt.Vec3_set(v2, vb[i2], vb[i2 + 1], vb[i2 + 2]);\r\n                    bt.TriangleMesh_addTriangle(out, v0, v1, v2, false);\r\n                }\r\n            } else if (primitiveMode === PrimitiveMode.TRIANGLE_STRIP) {\r\n                const cnt = ib.length - 2;\r\n                let rev = 0;\r\n                for (let j = 0; j < cnt; j += 1) {\r\n                    const i0 = ib[j - rev] * 3;\r\n                    const i1 = ib[j + rev + 1] * 3;\r\n                    const i2 = ib[j + 2] * 3;\r\n                    rev = ~rev;\r\n                    bt.Vec3_set(v0, vb[i0], vb[i0 + 1], vb[i0 + 2]);\r\n                    bt.Vec3_set(v1, vb[i1], vb[i1 + 1], vb[i1 + 2]);\r\n                    bt.Vec3_set(v2, vb[i2], vb[i2 + 1], vb[i2 + 2]);\r\n                    bt.TriangleMesh_addTriangle(out, v0, v1, v2, false);\r\n                }\r\n            } else if (primitiveMode === PrimitiveMode.TRIANGLE_FAN) {\r\n                const cnt = ib.length - 1;\r\n                const i0 = ib[0] * 3;\r\n                bt.Vec3_set(v0, vb[i0], vb[i0 + 1], vb[i0 + 2]);\r\n                for (let j = 1; j < cnt; j += 1) {\r\n                    const i1 = ib[j] * 3;\r\n                    const i2 = ib[j + 1] * 3;\r\n                    bt.Vec3_set(v1, vb[i1], vb[i1 + 1], vb[i1 + 2]);\r\n                    bt.Vec3_set(v2, vb[i2], vb[i2 + 1], vb[i2 + 2]);\r\n                    bt.TriangleMesh_addTriangle(out, v0, v1, v2, false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function force2Impulse (force: number, dt: number): number {\r\n    return force * dt;\r\n}\r\n\r\nexport function impulse2Force (impulse: number, dt: number): number {\r\n    return impulse / dt;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3, IVec3Like } from '../../core';\r\nimport { BulletWorld } from './bullet-world';\r\nimport { cocos2BulletVec3, bullet2CocosVec3 } from './bullet-utils';\r\nimport { RigidBody, PhysicsSystem } from '../../../exports/physics-framework';\r\nimport { btRigidBodyFlags, btCollisionObjectStates, EBtSharedBodyDirty } from './bullet-enum';\r\nimport { IRigidBody } from '../spec/i-rigid-body';\r\nimport { ERigidBodyType } from '../framework/physics-enum';\r\nimport { BulletSharedBody } from './bullet-shared-body';\r\nimport { BulletCache, CC_V3_0, CC_V3_1 } from './bullet-cache';\r\nimport { bt } from './instantiated';\r\n\r\nconst v3_0 = CC_V3_0;\r\nconst v3_1 = CC_V3_1;\r\n\r\n/** @mangle */\r\nexport class BulletRigidBody implements IRigidBody {\r\n    get isAwake (): boolean {\r\n        const state = bt.CollisionObject_getActivationState(this.impl);\r\n        return state === btCollisionObjectStates.ACTIVE_TAG\r\n            || state === btCollisionObjectStates.DISABLE_DEACTIVATION;\r\n    }\r\n\r\n    get isSleepy (): boolean {\r\n        const state = bt.CollisionObject_getActivationState(this.impl);\r\n        return state === btCollisionObjectStates.WANTS_DEACTIVATION;\r\n    }\r\n\r\n    get isSleeping (): boolean {\r\n        const state = bt.CollisionObject_getActivationState(this.impl);\r\n        return state === btCollisionObjectStates.ISLAND_SLEEPING;\r\n    }\r\n\r\n    setMass (value: number): void {\r\n        if (!this._rigidBody.isDynamic) return;\r\n        bt.RigidBody_setMass(this.impl, value);\r\n        this._wakeUpIfSleep();\r\n        this._sharedBody.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n    }\r\n\r\n    setType (v: ERigidBodyType): void {\r\n        this._sharedBody.setType(v);\r\n    }\r\n\r\n    setLinearDamping (value: number): void {\r\n        bt.RigidBody_setDamping(this.impl, this._rigidBody.linearDamping, this._rigidBody.angularDamping);\r\n    }\r\n\r\n    setAngularDamping (value: number): void {\r\n        bt.RigidBody_setDamping(this.impl, this._rigidBody.linearDamping, this._rigidBody.angularDamping);\r\n    }\r\n\r\n    useGravity (value: boolean): void {\r\n        if (!this._rigidBody.isDynamic) return;\r\n        let m_rigidBodyFlag = bt.RigidBody_getFlags(this.impl);\r\n        if (value) {\r\n            m_rigidBodyFlag &= (~btRigidBodyFlags.BT_DISABLE_WORLD_GRAVITY);\r\n        } else {\r\n            bt.RigidBody_setGravity(this.impl, cocos2BulletVec3(BulletCache.instance.BT_V3_0, Vec3.ZERO));\r\n            m_rigidBodyFlag |= btRigidBodyFlags.BT_DISABLE_WORLD_GRAVITY;\r\n        }\r\n        bt.RigidBody_setFlags(this.impl, m_rigidBodyFlag);\r\n        this._wakeUpIfSleep();\r\n        this._sharedBody.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n    }\r\n\r\n    useCCD (value: boolean): void {\r\n        bt.CollisionObject_setCcdMotionThreshold(this.impl, value ? 0.01 : 0);\r\n        bt.CollisionObject_setCcdSweptSphereRadius(this.impl, value ? 0.1 : 0);\r\n        this._isUsingCCD = value;\r\n    }\r\n\r\n    isUsingCCD (): boolean {\r\n        return this._isUsingCCD;\r\n    }\r\n\r\n    setLinearFactor (v: IVec3Like): void {\r\n        bt.RigidBody_setLinearFactor(this.impl, cocos2BulletVec3(BulletCache.instance.BT_V3_0, v));\r\n        this._wakeUpIfSleep();\r\n    }\r\n\r\n    setAngularFactor (v: IVec3Like): void {\r\n        bt.RigidBody_setAngularFactor(this.impl, cocos2BulletVec3(BulletCache.instance.BT_V3_0, v));\r\n        this._wakeUpIfSleep();\r\n    }\r\n\r\n    setAllowSleep (v: boolean): void {\r\n        if (!this._rigidBody.isDynamic) return;\r\n        if (v) {\r\n            bt.CollisionObject_forceActivationState(this.impl, btCollisionObjectStates.ACTIVE_TAG);\r\n        } else {\r\n            bt.CollisionObject_forceActivationState(this.impl, btCollisionObjectStates.DISABLE_DEACTIVATION);\r\n        }\r\n        this._wakeUpIfSleep();\r\n    }\r\n\r\n    private static idCounter = 0;\r\n    readonly id: number;\r\n\r\n    get impl (): number { return this._sharedBody.body; }\r\n    get rigidBody (): RigidBody { return this._rigidBody; }\r\n    get sharedBody (): BulletSharedBody { return this._sharedBody; }\r\n    get isEnabled (): boolean { return this._isEnabled; }\r\n\r\n    private _isEnabled = false;\r\n    private _isUsingCCD = false;\r\n    private _sharedBody!: BulletSharedBody;\r\n    private _rigidBody!: RigidBody;\r\n\r\n    constructor () {\r\n        this.id = BulletRigidBody.idCounter++;\r\n    }\r\n\r\n    clearState (): void {\r\n        bt.RigidBody_clearState(this.impl);\r\n    }\r\n\r\n    clearVelocity (): void {\r\n        this.setLinearVelocity(Vec3.ZERO);\r\n        this.setAngularVelocity(Vec3.ZERO);\r\n    }\r\n\r\n    clearForces (): void {\r\n        bt.RigidBody_clearForces(this.impl);\r\n    }\r\n\r\n    /** LIFECYCLE */\r\n\r\n    initialize (com: RigidBody): void {\r\n        this._rigidBody = com;\r\n        this._sharedBody = (PhysicsSystem.instance.physicsWorld as BulletWorld).getSharedBody(this._rigidBody.node, this);\r\n        this._sharedBody.reference = true;\r\n    }\r\n\r\n    onEnable (): void {\r\n        this._isEnabled = true;\r\n        this.setMass(this._rigidBody.mass);\r\n        this.setAllowSleep(this._rigidBody.allowSleep);\r\n        this.setLinearDamping(this._rigidBody.linearDamping);\r\n        this.setAngularDamping(this._rigidBody.angularDamping);\r\n        this.setLinearFactor(this._rigidBody.linearFactor);\r\n        this.setAngularFactor(this._rigidBody.angularFactor);\r\n        this.useGravity(this._rigidBody.useGravity);\r\n        this._sharedBody.bodyEnabled = true;\r\n    }\r\n\r\n    onDisable (): void {\r\n        this._isEnabled = false;\r\n        this._sharedBody.bodyEnabled = false;\r\n    }\r\n\r\n    onDestroy (): void {\r\n        this._sharedBody.reference = false;\r\n        (this._rigidBody as any) = null;\r\n        (this._sharedBody as any) = null;\r\n    }\r\n\r\n    /** INTERFACE */\r\n\r\n    wakeUp (force = true): void {\r\n        bt.CollisionObject_activate(this.impl, force);\r\n    }\r\n\r\n    sleep (): void {\r\n        const state = bt.CollisionObject_getActivationState(this.impl);\r\n        if (state !== btCollisionObjectStates.DISABLE_DEACTIVATION && state !== btCollisionObjectStates.DISABLE_SIMULATION) {\r\n            bt.CollisionObject_forceActivationState(this.impl, btCollisionObjectStates.ISLAND_SLEEPING);\r\n        }\r\n    }\r\n\r\n    setSleepThreshold (v: number): void {\r\n        this._wakeUpIfSleep();\r\n        bt.RigidBody_setSleepingThresholds(this.impl, v, v);\r\n    }\r\n\r\n    getSleepThreshold (): number {\r\n        return bt.RigidBody_getLinearSleepingThreshold(this.impl);\r\n    }\r\n\r\n    getLinearVelocity (out: Vec3): Vec3 {\r\n        return bullet2CocosVec3(out, bt.RigidBody_getLinearVelocity(this.impl));\r\n    }\r\n\r\n    setLinearVelocity (value: Vec3 | Readonly<Vec3>): void {\r\n        this._wakeUpIfSleep();\r\n        cocos2BulletVec3(bt.RigidBody_getLinearVelocity(this.impl), value);\r\n    }\r\n\r\n    getAngularVelocity (out: Vec3): Vec3 {\r\n        return bullet2CocosVec3(out, bt.RigidBody_getAngularVelocity(this.impl));\r\n    }\r\n\r\n    setAngularVelocity (value: Vec3 | Readonly<Vec3>): void {\r\n        this._wakeUpIfSleep();\r\n        cocos2BulletVec3(bt.RigidBody_getAngularVelocity(this.impl), value);\r\n    }\r\n\r\n    applyLocalForce (force: Vec3, rel_pos?: Vec3): void {\r\n        this._sharedBody.syncSceneToPhysics();\r\n        this._wakeUpIfSleep();\r\n        const quat = this._sharedBody.node.worldRotation;\r\n        const v = Vec3.transformQuat(v3_0, force, quat);\r\n        const rp = rel_pos ? Vec3.transformQuat(v3_1, rel_pos, quat) : Vec3.ZERO;\r\n        bt.RigidBody_applyForce(\r\n            this.impl,\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_0, v),\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_1, rp),\r\n        );\r\n    }\r\n\r\n    applyLocalTorque (torque: Vec3): void {\r\n        this._sharedBody.syncSceneToPhysics();\r\n        this._wakeUpIfSleep();\r\n        Vec3.transformQuat(v3_0, torque, this._sharedBody.node.worldRotation);\r\n        bt.RigidBody_applyTorque(\r\n            this.impl,\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_0, v3_0),\r\n        );\r\n    }\r\n\r\n    applyLocalImpulse (impulse: Vec3, rel_pos?: Vec3): void {\r\n        this._sharedBody.syncSceneToPhysics();\r\n        this._wakeUpIfSleep();\r\n        const quat = this._sharedBody.node.worldRotation;\r\n        const v = Vec3.transformQuat(v3_0, impulse, quat);\r\n        const rp = rel_pos ? Vec3.transformQuat(v3_1, rel_pos, quat) : Vec3.ZERO;\r\n        bt.RigidBody_applyImpulse(\r\n            this.impl,\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_0, v),\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_1, rp),\r\n        );\r\n    }\r\n\r\n    applyForce (force: Vec3, rel_pos?: Vec3): void {\r\n        this._sharedBody.syncSceneToPhysics();\r\n        this._wakeUpIfSleep();\r\n        const rp = rel_pos || Vec3.ZERO;\r\n        bt.RigidBody_applyForce(\r\n            this.impl,\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_0, force),\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_1, rp),\r\n        );\r\n    }\r\n\r\n    applyTorque (torque: Vec3): void {\r\n        this._sharedBody.syncSceneToPhysics();\r\n        this._wakeUpIfSleep();\r\n        bt.RigidBody_applyTorque(\r\n            this.impl,\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_0, torque),\r\n        );\r\n    }\r\n\r\n    applyImpulse (impulse: Vec3, rel_pos?: Vec3): void {\r\n        this._sharedBody.syncSceneToPhysics();\r\n        this._wakeUpIfSleep();\r\n        const rp = rel_pos || Vec3.ZERO;\r\n        bt.RigidBody_applyImpulse(\r\n            this.impl,\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_0, impulse),\r\n            cocos2BulletVec3(BulletCache.instance.BT_V3_1, rp),\r\n        );\r\n    }\r\n\r\n    getGroup (): number {\r\n        return this._sharedBody.collisionFilterGroup;\r\n    }\r\n\r\n    setGroup (v: number): void {\r\n        this._sharedBody.collisionFilterGroup = v;\r\n    }\r\n\r\n    addGroup (v: number): void {\r\n        this._sharedBody.collisionFilterGroup |= v;\r\n    }\r\n\r\n    removeGroup (v: number): void {\r\n        this._sharedBody.collisionFilterGroup &= ~v;\r\n    }\r\n\r\n    getMask (): number {\r\n        return this._sharedBody.collisionFilterMask;\r\n    }\r\n\r\n    setMask (v: number): void {\r\n        this._sharedBody.collisionFilterMask = v;\r\n    }\r\n\r\n    addMask (v: number): void {\r\n        this._sharedBody.collisionFilterMask |= v;\r\n    }\r\n\r\n    removeMask (v: number): void {\r\n        this._sharedBody.collisionFilterMask &= ~v;\r\n    }\r\n\r\n    protected _wakeUpIfSleep (): void {\r\n        if (!this.isAwake) { bt.CollisionObject_activate(this.impl, true); }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { btCache } from './instantiated';\r\nimport type { BulletSharedBody } from './bullet-shared-body';\r\nimport type { BulletCharacterController } from './character-controllers/bullet-character-controller';\r\n\r\n// The import function used in c++ code, same as DLL Import\r\nexport const importFunc = {\r\n    syncPhysicsToGraphics (id: number): void {\r\n        const body = btCache.CACHE.getWrapper<BulletSharedBody>(id, btCache.BODY_CACHE_NAME);\r\n        body.syncPhysicsToGraphics();\r\n    },\r\n    onShapeHitExt (hit: number, controller: number): void {\r\n        const cct = btCache.CACHE.getWrapper<BulletCharacterController>(controller, btCache.CCT_CACHE_NAME);\r\n        cct.onShapeHitExt(hit);\r\n    },\r\n    onDebugDrawLine (from: number, to: number, color: number): void {\r\n        const world = btCache.CACHE.world;\r\n        if (world) {\r\n            world.onDebugDrawLine(from, to, color);\r\n        }\r\n    },\r\n    clearLines (): void {\r\n        const world = btCache.CACHE.world;\r\n        if (world) {\r\n            world.onClearLines();\r\n        }\r\n    },\r\n    flushLines (): void {\r\n        //empty\r\n    },\r\n};\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { TransformBit } from '../../scene-graph/node-enum';\r\nimport { Node } from '../../scene-graph';\r\nimport { BulletWorld } from './bullet-world';\r\nimport { BulletRigidBody } from './bullet-rigid-body';\r\nimport { BulletShape } from './shapes/bullet-shape';\r\nimport { bullet2CocosVec3, cocos2BulletQuat, cocos2BulletVec3, bullet2CocosQuat } from './bullet-utils';\r\nimport { btCollisionFlags, btCollisionObjectStates, EBtSharedBodyDirty } from './bullet-enum';\r\nimport { IBulletBodyStruct, IBulletGhostStruct } from './bullet-interface';\r\nimport { CC_V3_0, CC_QUAT_0, BulletCache } from './bullet-cache';\r\nimport { PhysicsSystem } from '../framework';\r\nimport { ERigidBodyType, PhysicsGroup } from '../framework/physics-enum';\r\nimport { js } from '../../core';\r\nimport { bt, btCache, EBulletType } from './instantiated';\r\nimport { BulletConstraint } from './constraints/bullet-constraint';\r\nimport { importFunc } from './bullet-env';\r\n\r\nconst v3_0 = CC_V3_0;\r\nconst quat_0 = CC_QUAT_0;\r\nlet IDCounter = 0;\r\n\r\n/**\r\n * shared object, node : shared = 1 : 1\r\n * body for static \\ dynamic \\ kinematic (collider)\r\n * ghost for trigger\r\n * @mangle\r\n */\r\nexport class BulletSharedBody {\r\n    private static idCounter = 0;\r\n    private static readonly sharedBodesMap = new Map<string, BulletSharedBody>();\r\n\r\n    static getSharedBody (node: Node, wrappedWorld: BulletWorld, wrappedBody?: BulletRigidBody): BulletSharedBody {\r\n        const key = node.uuid;\r\n        let newSB!: BulletSharedBody;\r\n        if (BulletSharedBody.sharedBodesMap.has(key)) {\r\n            newSB = BulletSharedBody.sharedBodesMap.get(key)!;\r\n        } else {\r\n            newSB = new BulletSharedBody(node, wrappedWorld);\r\n            const g = PhysicsGroup.DEFAULT;\r\n            const m = PhysicsSystem.instance.collisionMatrix[g];\r\n            newSB._collisionFilterGroup = g;\r\n            newSB._collisionFilterMask = m;\r\n            BulletSharedBody.sharedBodesMap.set(node.uuid, newSB);\r\n        }\r\n        if (wrappedBody) {\r\n            newSB._wrappedBody = wrappedBody;\r\n            const g = wrappedBody.rigidBody.group;\r\n            const m = PhysicsSystem.instance.collisionMatrix[g];\r\n            newSB._collisionFilterGroup = g;\r\n            newSB._collisionFilterMask = m;\r\n        }\r\n        return newSB;\r\n    }\r\n\r\n    get wrappedBody (): BulletRigidBody | null {\r\n        return this._wrappedBody;\r\n    }\r\n\r\n    get bodyCompoundShape (): number {\r\n        return this.bodyStruct.compound;\r\n    }\r\n\r\n    get ghostCompoundShape (): number {\r\n        return this.ghostStruct.compound;\r\n    }\r\n\r\n    get body (): number {\r\n        return this.bodyStruct.body;\r\n    }\r\n\r\n    get ghost (): number {\r\n        return this.ghostStruct.ghost;\r\n    }\r\n\r\n    get collisionFilterGroup (): number { return this._collisionFilterGroup; }\r\n    set collisionFilterGroup (v: number) {\r\n        if (v !== this._collisionFilterGroup) {\r\n            this._collisionFilterGroup = v;\r\n            this.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n            this.dirty |= EBtSharedBodyDirty.GHOST_RE_ADD;\r\n        }\r\n    }\r\n\r\n    get collisionFilterMask (): number { return this._collisionFilterMask; }\r\n    set collisionFilterMask (v: number) {\r\n        if (v !== this._collisionFilterMask) {\r\n            this._collisionFilterMask = v;\r\n            this.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n            this.dirty |= EBtSharedBodyDirty.GHOST_RE_ADD;\r\n        }\r\n    }\r\n\r\n    get bodyStruct (): IBulletBodyStruct {\r\n        this._instantiateBodyStruct();\r\n        return this._bodyStruct;\r\n    }\r\n\r\n    get ghostStruct (): IBulletGhostStruct {\r\n        this._instantiateGhostStruct();\r\n        return this._ghostStruct;\r\n    }\r\n\r\n    readonly id: number;\r\n    readonly node: Node;\r\n    readonly wrappedWorld: BulletWorld;\r\n    readonly wrappedJoints0: BulletConstraint[] = [];\r\n    readonly wrappedJoints1: BulletConstraint[] = [];\r\n    dirty: EBtSharedBodyDirty = 0;\r\n\r\n    private _collisionFilterGroup: number = PhysicsSystem.PhysicsGroup.DEFAULT;\r\n    private _collisionFilterMask = -1;\r\n\r\n    private ref = 0;\r\n    private bodyIndex = -1;\r\n    private ghostIndex = -1;\r\n    private _bodyStruct!: IBulletBodyStruct;\r\n    private _ghostStruct!: IBulletGhostStruct;\r\n    private _wrappedBody: BulletRigidBody | null = null;\r\n\r\n    /**\r\n     * add or remove from world \\\r\n     * add, if enable \\\r\n     * remove, if disable & shapes.length == 0 & wrappedBody disable\r\n     */\r\n    set bodyEnabled (v: boolean) {\r\n        if (v) {\r\n            if (this.bodyIndex < 0) {\r\n                // add to world only if it is a dynamic body or having shapes.\r\n                if (this.bodyStruct.wrappedShapes.length === 0) {\r\n                    if (!this.wrappedBody) return;\r\n                    if (!this.wrappedBody.rigidBody.isDynamic) return;\r\n                }\r\n                this.bodyIndex = this.wrappedWorld.bodies.length;\r\n                this.wrappedWorld.addSharedBody(this);\r\n                this.syncInitialBody();\r\n            }\r\n        } else if (this.bodyIndex >= 0) {\r\n            const isRemoveBody = (this.bodyStruct.wrappedShapes.length === 0 && this.wrappedBody == null)\r\n                || (this.bodyStruct.wrappedShapes.length === 0 && this.wrappedBody != null && !this.wrappedBody.isEnabled)\r\n                || (this.bodyStruct.wrappedShapes.length === 0 && this.wrappedBody != null && !this.wrappedBody.rigidBody.enabledInHierarchy);\r\n\r\n            if (isRemoveBody) {\r\n                const impl = this.body;\r\n                const constraints = this.wrappedWorld.constraints;\r\n                constraints.forEach((worldConstraint) => {\r\n                    if (worldConstraint.constraint.attachedBody?.body?.impl === impl) {\r\n                        this.wrappedWorld.removeConstraint(worldConstraint);\r\n                    }\r\n                });\r\n\r\n                bt.RigidBody_clearState(this.body); // clear velocity etc.\r\n                this.bodyIndex = -1;\r\n                this.wrappedWorld.removeSharedBody(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    set ghostEnabled (v: boolean) {\r\n        if (v) {\r\n            if (this.ghostIndex < 0 && this.ghostStruct.wrappedShapes.length > 0) {\r\n                this.ghostIndex = 1;\r\n                this.wrappedWorld.addGhostObject(this);\r\n                this.syncInitialGhost();\r\n            }\r\n        } else if (this.ghostIndex >= 0) {\r\n            /** remove trigger */\r\n            const isRemoveGhost = (this.ghostStruct.wrappedShapes.length === 0 && this.ghost);\r\n\r\n            if (isRemoveGhost) {\r\n                this.ghostIndex = -1;\r\n                this.wrappedWorld.removeGhostObject(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    set reference (v: boolean) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n        v ? this.ref++ : this.ref--;\r\n        if (this.ref === 0) { this.destroy(); }\r\n    }\r\n\r\n    private constructor (node: Node, wrappedWorld: BulletWorld) {\r\n        this.id = BulletSharedBody.idCounter++;\r\n        this.wrappedWorld = wrappedWorld;\r\n        this.node = node;\r\n    }\r\n\r\n    private _instantiateBodyStruct (): void {\r\n        if (this._bodyStruct) return;\r\n        let mass = 0;\r\n        if (this._wrappedBody && this._wrappedBody.rigidBody.enabled && this._wrappedBody.rigidBody.isDynamic) {\r\n            mass = this._wrappedBody.rigidBody.mass;\r\n        }\r\n\r\n        const trans = BulletCache.instance.BT_TRANSFORM_0;\r\n        const quat = BulletCache.instance.BT_QUAT_0;\r\n        cocos2BulletVec3(bt.Transform_getOrigin(trans), this.node.worldPosition);\r\n        cocos2BulletQuat(quat, this.node.worldRotation);\r\n        bt.Transform_setRotation(trans, quat);\r\n\r\n        const motionState = bt.MotionState.implement(importFunc).$$.ptr as number;\r\n        bt.ccMotionState_setup(motionState, this.id, trans);\r\n        const body = bt.RigidBody_new(mass, motionState);\r\n        const sleepTd = PhysicsSystem.instance.sleepThreshold;\r\n        bt.RigidBody_setSleepingThresholds(body, sleepTd, sleepTd);\r\n        this._bodyStruct = {\r\n            id: IDCounter++, body, motionState, compound: bt.ccCompoundShape_new(), wrappedShapes: [], useCompound: false,\r\n        };\r\n        BulletCache.setWrapper(this.id, btCache.BODY_CACHE_NAME, this);\r\n        if (this._ghostStruct) bt.CollisionObject_setIgnoreCollisionCheck(this.ghost, this.body, true);\r\n        if (this._wrappedBody) this.setBodyType(this._wrappedBody.rigidBody.type);\r\n    }\r\n\r\n    private _instantiateGhostStruct (): void {\r\n        if (this._ghostStruct) return;\r\n        const ghost = bt.CollisionObject_new();\r\n        const ghostShape = bt.ccCompoundShape_new();\r\n        bt.CollisionObject_setCollisionShape(ghost, ghostShape);\r\n        bt.CollisionObject_setCollisionFlags(ghost, btCollisionFlags.CF_STATIC_OBJECT | btCollisionFlags.CF_NO_CONTACT_RESPONSE);\r\n        this._ghostStruct = { id: IDCounter++, ghost, compound: ghostShape, wrappedShapes: [] };\r\n        if (this._bodyStruct) bt.CollisionObject_setIgnoreCollisionCheck(this.body, this.ghost, true);\r\n        if (this._wrappedBody) this.setGhostType(this._wrappedBody.rigidBody.type);\r\n    }\r\n\r\n    setType (v: ERigidBodyType): void {\r\n        this.setBodyType(v);\r\n        this.setGhostType(v);\r\n    }\r\n\r\n    setBodyType (v: ERigidBodyType): void {\r\n        if (this._bodyStruct && this._wrappedBody) {\r\n            const body = this._bodyStruct.body;\r\n            const wrap = this._wrappedBody;\r\n            const com = wrap.rigidBody;\r\n            let m_bcf = bt.CollisionObject_getCollisionFlags(body);\r\n            const localInertia = BulletCache.instance.BT_V3_0;\r\n            switch (v) {\r\n            case ERigidBodyType.DYNAMIC:\r\n                m_bcf &= (~btCollisionFlags.CF_KINEMATIC_OBJECT);\r\n                m_bcf &= (~btCollisionFlags.CF_STATIC_OBJECT);\r\n                bt.CollisionObject_setCollisionFlags(body, m_bcf);\r\n                wrap.setMass(com.mass);\r\n                wrap.useGravity(com.useGravity);\r\n                wrap.setAllowSleep(com.allowSleep);\r\n                break;\r\n            case ERigidBodyType.KINEMATIC:\r\n                bt.Vec3_set(localInertia, 0, 0, 0);\r\n                bt.RigidBody_setMassProps(body, 0, localInertia);\r\n                m_bcf |= btCollisionFlags.CF_KINEMATIC_OBJECT;\r\n                m_bcf &= (~btCollisionFlags.CF_STATIC_OBJECT);\r\n                bt.CollisionObject_setCollisionFlags(body, m_bcf);\r\n                bt.CollisionObject_forceActivationState(body, btCollisionObjectStates.DISABLE_DEACTIVATION);\r\n                break;\r\n            case ERigidBodyType.STATIC:\r\n            default:\r\n                bt.Vec3_set(localInertia, 0, 0, 0);\r\n                bt.RigidBody_setMassProps(body, 0, localInertia);\r\n                m_bcf |= btCollisionFlags.CF_STATIC_OBJECT;\r\n                m_bcf &= (~btCollisionFlags.CF_KINEMATIC_OBJECT);\r\n                bt.CollisionObject_setCollisionFlags(body, m_bcf);\r\n                bt.CollisionObject_forceActivationState(body, btCollisionObjectStates.ISLAND_SLEEPING);\r\n                break;\r\n            }\r\n            this.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n        }\r\n    }\r\n\r\n    setGhostType (v: ERigidBodyType): void {\r\n        if (this._ghostStruct) {\r\n            const ghost = this._ghostStruct.ghost;\r\n            let m_gcf = bt.CollisionObject_getCollisionFlags(ghost);\r\n            switch (v) {\r\n            case ERigidBodyType.DYNAMIC:\r\n            case ERigidBodyType.KINEMATIC:\r\n                m_gcf &= (~btCollisionFlags.CF_STATIC_OBJECT);\r\n                m_gcf |= btCollisionFlags.CF_KINEMATIC_OBJECT;\r\n                bt.CollisionObject_setCollisionFlags(ghost, m_gcf);\r\n                bt.CollisionObject_forceActivationState(ghost, btCollisionObjectStates.DISABLE_DEACTIVATION);\r\n                break;\r\n            case ERigidBodyType.STATIC:\r\n            default:\r\n                m_gcf &= (~btCollisionFlags.CF_KINEMATIC_OBJECT);\r\n                m_gcf |= btCollisionFlags.CF_STATIC_OBJECT;\r\n                bt.CollisionObject_setCollisionFlags(ghost, m_gcf);\r\n                bt.CollisionObject_forceActivationState(ghost, btCollisionObjectStates.ISLAND_SLEEPING);\r\n                break;\r\n            }\r\n            this.dirty |= EBtSharedBodyDirty.GHOST_RE_ADD;\r\n        }\r\n    }\r\n\r\n    addShape (v: BulletShape, isTrigger: boolean): void {\r\n        function switchShape (that: BulletSharedBody, shape: Bullet.ptr): void {\r\n            bt.CollisionObject_setCollisionShape(that.body, shape);\r\n            that.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n            if (that._wrappedBody && that._wrappedBody.isEnabled) {\r\n                that._wrappedBody.setMass(that._wrappedBody.rigidBody.mass);\r\n            }\r\n        }\r\n\r\n        if (isTrigger) {\r\n            const index = this.ghostStruct.wrappedShapes.indexOf(v);\r\n            if (index < 0) {\r\n                this.ghostStruct.wrappedShapes.push(v);\r\n                v.setCompound(this.ghostCompoundShape);\r\n                this.ghostEnabled = true;\r\n            }\r\n        } else {\r\n            const index = this.bodyStruct.wrappedShapes.indexOf(v);\r\n            if (index < 0) {\r\n                this.bodyStruct.wrappedShapes.push(v);\r\n                if (this.bodyStruct.useCompound) {\r\n                    v.setCompound(this.bodyCompoundShape);\r\n                } else {\r\n                    const l = this.bodyStruct.wrappedShapes.length;\r\n                    if (l === 1 && !v.needCompound()) {\r\n                        switchShape(this, v.impl);\r\n                    } else {\r\n                        this.bodyStruct.useCompound = true;\r\n                        for (let i = 0; i < l; i++) {\r\n                            const childShape = this.bodyStruct.wrappedShapes[i];\r\n                            childShape.setCompound(this.bodyCompoundShape);\r\n                        }\r\n                        switchShape(this, this.bodyStruct.compound);\r\n                    }\r\n                }\r\n                this.bodyEnabled = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeShape (v: BulletShape, isTrigger: boolean): void {\r\n        if (isTrigger) {\r\n            const index = this.ghostStruct.wrappedShapes.indexOf(v);\r\n            if (index >= 0) {\r\n                js.array.fastRemoveAt(this.ghostStruct.wrappedShapes, index);\r\n                v.setCompound(0);\r\n                this.ghostEnabled = false;\r\n            }\r\n        } else {\r\n            const index = this.bodyStruct.wrappedShapes.indexOf(v);\r\n            if (index >= 0) {\r\n                if (this.bodyStruct.useCompound) {\r\n                    v.setCompound(0);\r\n                } else {\r\n                    bt.CollisionObject_setCollisionShape(this.body, bt.EmptyShape_static());\r\n                }\r\n                bt.CollisionObject_activate(this.body, true);\r\n                this.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n                js.array.fastRemoveAt(this.bodyStruct.wrappedShapes, index);\r\n                this.bodyEnabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    addJoint (v: BulletConstraint, type: 0 | 1): void {\r\n        if (type) {\r\n            const i = this.wrappedJoints1.indexOf(v);\r\n            if (i < 0) this.wrappedJoints1.push(v);\r\n        } else {\r\n            const i = this.wrappedJoints0.indexOf(v);\r\n            if (i < 0) this.wrappedJoints0.push(v);\r\n        }\r\n    }\r\n\r\n    removeJoint (v: BulletConstraint, type: 0 | 1): void {\r\n        if (type) {\r\n            const i = this.wrappedJoints1.indexOf(v);\r\n            if (i >= 0) js.array.fastRemoveAt(this.wrappedJoints1, i);\r\n        } else {\r\n            const i = this.wrappedJoints0.indexOf(v);\r\n            if (i >= 0) js.array.fastRemoveAt(this.wrappedJoints0, i);\r\n        }\r\n    }\r\n\r\n    updateDirty (): void {\r\n        if (this.dirty) {\r\n            if (this.bodyIndex >= 0 && this.dirty & EBtSharedBodyDirty.BODY_RE_ADD) this.updateBodyByReAdd();\r\n            if (this.ghostIndex >= 0 && this.dirty & EBtSharedBodyDirty.GHOST_RE_ADD) this.updateGhostByReAdd();\r\n            this.dirty = 0;\r\n        }\r\n    }\r\n\r\n    syncSceneToPhysics (): void {\r\n        if (this.node.hasChangedFlags) {\r\n            const bt_quat = BulletCache.instance.BT_QUAT_0;\r\n            const bt_transform = bt.CollisionObject_getWorldTransform(this.body);\r\n            cocos2BulletQuat(bt_quat, this.node.worldRotation);\r\n            cocos2BulletVec3(bt.Transform_getOrigin(bt_transform), this.node.worldPosition);\r\n            bt.Transform_setRotation(bt_transform, bt_quat);\r\n\r\n            if (this.node.hasChangedFlags & TransformBit.SCALE) {\r\n                this.syncBodyScale();\r\n            }\r\n\r\n            if (bt.CollisionObject_isKinematicObject(this.body)) {\r\n                // Kinematic objects must be updated using motion state\r\n                const ms = bt.RigidBody_getMotionState(this.body);\r\n                if (ms) bt.MotionState_setWorldTransform(ms, bt_transform);\r\n            } else if (this.isBodySleeping()) bt.CollisionObject_activate(this.body, false);\r\n        }\r\n    }\r\n\r\n    syncPhysicsToScene (): void {\r\n        if (bt.CollisionObject_isStaticOrKinematicObject(this.body)) return;\r\n        this.syncPhysicsToGraphics();\r\n    }\r\n\r\n    syncPhysicsToGraphics (): void {\r\n        if (this.isBodySleeping()) return;\r\n        const bt_quat = BulletCache.instance.BT_QUAT_0;\r\n        const bt_transform = BulletCache.instance.BT_TRANSFORM_0;\r\n        bt.RigidBody_getWorldTransform(this.body, bt_transform);\r\n        const originPosPtr = bt.Transform_getRotationAndOrigin(bt_transform, bt_quat);\r\n        this.node.worldRotation = bullet2CocosQuat(quat_0, bt_quat);\r\n        this.node.worldPosition = bullet2CocosVec3(v3_0, originPosPtr);\r\n\r\n        // sync node to ghost\r\n        if (this._ghostStruct) {\r\n            const bt_transform1 = bt.CollisionObject_getWorldTransform(this.ghost);\r\n            cocos2BulletVec3(bt.Transform_getOrigin(bt_transform1), this.node.worldPosition);\r\n            cocos2BulletQuat(bt_quat, this.node.worldRotation);\r\n            bt.Transform_setRotation(bt_transform1, bt_quat);\r\n        }\r\n    }\r\n\r\n    syncSceneToGhost (): void {\r\n        if (this.node.hasChangedFlags) {\r\n            const bt_quat = BulletCache.instance.BT_QUAT_0;\r\n            const bt_transform = bt.CollisionObject_getWorldTransform(this.ghost);\r\n            cocos2BulletVec3(bt.Transform_getOrigin(bt_transform), this.node.worldPosition);\r\n            cocos2BulletQuat(bt_quat, this.node.worldRotation);\r\n            bt.Transform_setRotation(bt_transform, bt_quat);\r\n            if (this.node.hasChangedFlags & TransformBit.SCALE) this.syncGhostScale();\r\n            bt.CollisionObject_activate(this.ghost, false);\r\n        }\r\n    }\r\n\r\n    syncInitialBody (): void {\r\n        const bt_quat = BulletCache.instance.BT_QUAT_0;\r\n        const bt_transform = bt.CollisionObject_getWorldTransform(this.body);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(bt_transform), this.node.worldPosition);\r\n        cocos2BulletQuat(bt_quat, this.node.worldRotation);\r\n        bt.Transform_setRotation(bt_transform, bt_quat);\r\n        this.syncBodyScale();\r\n        bt.CollisionObject_activate(this.body, false);\r\n    }\r\n\r\n    syncInitialGhost (): void {\r\n        const bt_quat = BulletCache.instance.BT_QUAT_0;\r\n        const bt_transform = bt.CollisionObject_getWorldTransform(this.ghost);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(bt_transform), this.node.worldPosition);\r\n        cocos2BulletQuat(bt_quat, this.node.worldRotation);\r\n        bt.Transform_setRotation(bt_transform, bt_quat);\r\n        this.syncGhostScale();\r\n        bt.CollisionObject_activate(this.body, false);\r\n    }\r\n\r\n    syncBodyScale (): void {\r\n        for (let i = 0; i < this.bodyStruct.wrappedShapes.length; i++) {\r\n            this.bodyStruct.wrappedShapes[i].updateScale();\r\n        }\r\n        for (let i = 0; i < this.wrappedJoints0.length; i++) {\r\n            this.wrappedJoints0[i].updateScale0();\r\n        }\r\n        for (let i = 0; i < this.wrappedJoints1.length; i++) {\r\n            this.wrappedJoints1[i].updateScale1();\r\n        }\r\n    }\r\n\r\n    syncGhostScale (): void {\r\n        for (let i = 0; i < this.ghostStruct.wrappedShapes.length; i++) {\r\n            this.ghostStruct.wrappedShapes[i].updateScale();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * see: https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=9&t=5312&p=19094&hilit=how+to+change+group+mask#p19097\r\n     */\r\n    updateBodyByReAdd (): void {\r\n        if (this.bodyIndex >= 0) {\r\n            this.wrappedWorld.removeSharedBody(this);\r\n            this.bodyIndex = this.wrappedWorld.bodies.length;\r\n            this.wrappedWorld.addSharedBody(this);\r\n        }\r\n    }\r\n\r\n    updateGhostByReAdd (): void {\r\n        if (this.ghostIndex >= 0) {\r\n            this.wrappedWorld.removeGhostObject(this);\r\n            this.ghostIndex = this.wrappedWorld.ghosts.length;\r\n            this.wrappedWorld.addGhostObject(this);\r\n        }\r\n    }\r\n\r\n    private destroy (): void {\r\n        BulletSharedBody.sharedBodesMap.delete(this.node.uuid);\r\n        (this.node as any) = null;\r\n        (this.wrappedWorld as any) = null;\r\n        if (this._bodyStruct) {\r\n            const bodyStruct = this._bodyStruct;\r\n            BulletCache.delWrapper(this.id, btCache.BODY_CACHE_NAME);\r\n            bt._safe_delete(bodyStruct.motionState, EBulletType.EBulletTypeMotionState);\r\n            bt._safe_delete(bodyStruct.compound, EBulletType.EBulletTypeCollisionShape);\r\n            bt._safe_delete(bodyStruct.body, EBulletType.EBulletTypeCollisionObject);\r\n            (this._bodyStruct as any) = null;\r\n        }\r\n\r\n        if (this._ghostStruct) {\r\n            const ghostStruct = this._ghostStruct;\r\n            bt._safe_delete(ghostStruct.compound, EBulletType.EBulletTypeCollisionShape);\r\n            bt._safe_delete(ghostStruct.ghost, EBulletType.EBulletTypeCollisionObject);\r\n            (this._ghostStruct as any) = null;\r\n        }\r\n    }\r\n\r\n    private isBodySleeping (): boolean {\r\n        return bt.CollisionObject_isSleeping(this.body);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3, IVec3Like, geometry } from '../../../core';\r\nimport { Collider, PhysicsMaterial, PhysicsSystem, RigidBody } from '../../../../exports/physics-framework';\r\nimport { BulletWorld } from '../bullet-world';\r\nimport { EBtSharedBodyDirty } from '../bullet-enum';\r\nimport { cocos2BulletQuat, cocos2BulletVec3 } from '../bullet-utils';\r\nimport { IBaseShape } from '../../spec/i-physics-shape';\r\nimport { BulletSharedBody } from '../bullet-shared-body';\r\nimport { BulletCache, CC_V3_0 } from '../bullet-cache';\r\nimport { bt, EBulletType } from '../instantiated';\r\nimport { EColliderType } from '../../framework';\r\n\r\nconst v3_0 = CC_V3_0;\r\nconst ccMaterialBooks = {};\r\n\r\n/** @mangle */\r\nexport abstract class BulletShape implements IBaseShape {\r\n    updateEventListener (): void {\r\n        if (!this._sharedBody.wrappedWorld) return;\r\n        this._sharedBody.wrappedWorld.updateNeedEmitEvents(this.collider.needCollisionEvent || this.collider.needTriggerEvent);\r\n    }\r\n\r\n    setMaterial (v: PhysicsMaterial | null): void {\r\n        const v1 = (v == null) ? PhysicsSystem.instance.defaultMaterial : v;\r\n        if (!this._isTrigger && this._isEnabled) {\r\n            if (this._compound) {\r\n                if (!ccMaterialBooks[v1._uuid]) ccMaterialBooks[v1._uuid] = bt.ccMaterial_new();\r\n                const mat = ccMaterialBooks[v1._uuid];\r\n                bt.ccMaterial_set(mat as number, v1.restitution, v1.friction, v1.rollingFriction, v1.spinningFriction);\r\n                bt.CollisionShape_setMaterial(this._impl, mat as number);\r\n            } else {\r\n                bt.CollisionObject_setMaterial(this._sharedBody.body, v1.restitution, v1.friction, v1.rollingFriction, v1.spinningFriction);\r\n            }\r\n        }\r\n    }\r\n\r\n    setCenter (v: IVec3Like): void {\r\n        Vec3.copy(v3_0, v);\r\n        v3_0.multiply(this._collider.node.worldScale);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(this.transform), v3_0);\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    setAsTrigger (v: boolean): void {\r\n        if (this._isTrigger === v) return;\r\n\r\n        if (this._isEnabled) {\r\n            this._sharedBody.removeShape(this, !v);\r\n            this._sharedBody.addShape(this, v);\r\n        }\r\n        this._isTrigger = v;\r\n    }\r\n\r\n    get attachedRigidBody (): RigidBody | null {\r\n        if (this._sharedBody.wrappedBody) return this._sharedBody.wrappedBody.rigidBody;\r\n        return null;\r\n    }\r\n\r\n    get impl (): number { return this._impl; }\r\n    get collider (): Collider { return this._collider; }\r\n    get sharedBody (): BulletSharedBody { return this._sharedBody; }\r\n\r\n    static readonly TYPE = 'shape';\r\n    private static idCounter = 0;\r\n    readonly id = BulletShape.idCounter++;\r\n    protected _isEnabled = false;\r\n    protected _isTrigger = false;\r\n    protected _isInitialized = false;\r\n    protected _impl: Bullet.ptr = 0;\r\n    protected _compound: Bullet.ptr = 0;\r\n    protected readonly quat = bt.Quat_new(0, 0, 0, 1);\r\n    protected readonly transform = bt.Transform_new();\r\n    protected _collider!: Collider;\r\n    protected _sharedBody!: BulletSharedBody;\r\n\r\n    getAABB (v: geometry.AABB): void {\r\n        const bt_transform = BulletCache.instance.BT_TRANSFORM_0;\r\n        bt.Transform_setIdentity(bt_transform);\r\n        bt.Transform_setRotation(bt_transform, cocos2BulletQuat(BulletCache.instance.BT_QUAT_0, this._collider.node.worldRotation));\r\n        const MIN = BulletCache.instance.BT_V3_0;\r\n        const MAX = BulletCache.instance.BT_V3_1;\r\n        bt.CollisionShape_getAabb(this._impl, bt_transform, MIN, MAX);\r\n        v.halfExtents.x = (bt.Vec3_x(MAX) - bt.Vec3_x(MIN)) / 2;\r\n        v.halfExtents.y = (bt.Vec3_y(MAX) - bt.Vec3_y(MIN)) / 2;\r\n        v.halfExtents.z = (bt.Vec3_z(MAX) - bt.Vec3_z(MIN)) / 2;\r\n        Vec3.add(v.center, this._collider.node.worldPosition, this._collider.center);\r\n    }\r\n\r\n    getBoundingSphere (v: geometry.Sphere): void {\r\n        v.radius = bt.CollisionShape_getLocalBoundingSphere(this._impl);\r\n        Vec3.add(v.center, this._collider.node.worldPosition, this._collider.center);\r\n    }\r\n\r\n    initialize (com: Collider): void {\r\n        this._collider = com;\r\n        this._isInitialized = true;\r\n        this._sharedBody = (PhysicsSystem.instance.physicsWorld as BulletWorld).getSharedBody(this._collider.node);\r\n        this._sharedBody.reference = true;\r\n        this.onComponentSet();\r\n        this.setWrapper();\r\n    }\r\n\r\n    setWrapper (): void {\r\n        if (BulletCache.isNotEmptyShape(this._impl)) {\r\n            bt.CollisionShape_setUserPointer(this._impl, this._impl);\r\n            BulletCache.setWrapper(this._impl, BulletShape.TYPE, this);\r\n        }\r\n    }\r\n\r\n    // virtual\r\n    protected abstract onComponentSet(): void;\r\n\r\n    onLoad (): void {\r\n        this.setCenter(this._collider.center);\r\n        this.setAsTrigger(this._collider.isTrigger);\r\n    }\r\n\r\n    onEnable (): void {\r\n        this._isEnabled = true;\r\n        this._sharedBody.addShape(this, this._isTrigger);\r\n\r\n        this.setMaterial(this.collider.sharedMaterial);\r\n    }\r\n\r\n    onDisable (): void {\r\n        this._isEnabled = false;\r\n        this._sharedBody.removeShape(this, this._isTrigger);\r\n    }\r\n\r\n    onDestroy (): void {\r\n        this._sharedBody.reference = false;\r\n        (this._collider as any) = null;\r\n        bt._safe_delete(this.quat, EBulletType.EBulletTypeQuat);\r\n        bt._safe_delete(this.transform, EBulletType.EBulletTypeTransform);\r\n        if (this._compound) bt._safe_delete(this._compound, EBulletType.EBulletTypeCollisionShape);\r\n        if (BulletCache.isNotEmptyShape(this._impl)) {\r\n            bt._safe_delete(this._impl, EBulletType.EBulletTypeCollisionShape);\r\n            BulletCache.delWrapper(this._impl, BulletShape.TYPE);\r\n        }\r\n    }\r\n\r\n    updateByReAdd (): void {\r\n        if (this._isEnabled) {\r\n            this._sharedBody.removeShape(this, this._isTrigger);\r\n            this._sharedBody.addShape(this, this._isTrigger);\r\n        }\r\n    }\r\n\r\n    getGroup (): number {\r\n        return this._sharedBody.collisionFilterGroup;\r\n    }\r\n\r\n    setGroup (v: number): void {\r\n        this._sharedBody.collisionFilterGroup = v;\r\n    }\r\n\r\n    addGroup (v: number): void {\r\n        this._sharedBody.collisionFilterGroup |= v;\r\n    }\r\n\r\n    removeGroup (v: number): void {\r\n        this._sharedBody.collisionFilterGroup &= ~v;\r\n    }\r\n\r\n    getMask (): number {\r\n        return this._sharedBody.collisionFilterMask;\r\n    }\r\n\r\n    setMask (v: number): void {\r\n        this._sharedBody.collisionFilterMask = v;\r\n    }\r\n\r\n    addMask (v: number): void {\r\n        this._sharedBody.collisionFilterMask |= v;\r\n    }\r\n\r\n    removeMask (v: number): void {\r\n        this._sharedBody.collisionFilterMask &= ~v;\r\n    }\r\n\r\n    setCompound (compound: Bullet.ptr): void {\r\n        if (this._compound) bt.CompoundShape_removeChildShape(this._compound, this._impl);\r\n        if (compound) bt.CompoundShape_addChildShape(compound, this.transform, this._impl);\r\n        this._compound = compound;\r\n    }\r\n\r\n    updateScale (): void {\r\n        this.setCenter(this._collider.center);\r\n    }\r\n\r\n    updateCompoundTransform (): void {\r\n        if (this._compound) {\r\n            bt.CompoundShape_updateChildTransform(this._compound, this._impl, this.transform, true);\r\n        } else if (this._isEnabled && !this._isTrigger) {\r\n            if (this._sharedBody && !this._sharedBody.bodyStruct.useCompound) {\r\n                this._sharedBody.dirty |= EBtSharedBodyDirty.BODY_RE_ADD;\r\n            }\r\n        }\r\n    }\r\n\r\n    needCompound (): boolean {\r\n        if (this._collider.type === EColliderType.TERRAIN) { return true; }\r\n        if (this._collider.center.equals(Vec3.ZERO)) { return false; }\r\n        return true;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { IContactEquation, ICollisionEvent } from '../framework';\r\nimport { IVec3Like, Vec3, Quat } from '../../core';\r\nimport { BulletShape } from './shapes/bullet-shape';\r\nimport { CC_QUAT_0, BulletCache } from './bullet-cache';\r\nimport { bt } from './instantiated';\r\nimport { bullet2CocosQuat, bullet2CocosVec3 } from './bullet-utils';\r\n\r\nexport class BulletContactData implements IContactEquation {\r\n    get isBodyA (): boolean {\r\n        const sb = (this.event.selfCollider.shape as BulletShape).sharedBody.body;\r\n        return sb === bt.PersistentManifold_getBody0(this.event.impl as number);\r\n    }\r\n\r\n    impl: Bullet.ptr = 0;  //btManifoldPoint\r\n    event: ICollisionEvent;\r\n\r\n    constructor (event: ICollisionEvent) {\r\n        this.event = event;\r\n    }\r\n\r\n    getLocalPointOnA (out: IVec3Like): void {\r\n        if (this.impl) bullet2CocosVec3(out, bt.ManifoldPoint_get_m_localPointA(this.impl));\r\n    }\r\n\r\n    getLocalPointOnB (out: IVec3Like): void {\r\n        if (this.impl) bullet2CocosVec3(out, bt.ManifoldPoint_get_m_localPointB(this.impl));\r\n    }\r\n\r\n    getWorldPointOnA (out: IVec3Like): void {\r\n        if (this.impl) bullet2CocosVec3(out, bt.ManifoldPoint_get_m_positionWorldOnA(this.impl));\r\n    }\r\n\r\n    getWorldPointOnB (out: IVec3Like): void {\r\n        if (this.impl) bullet2CocosVec3(out, bt.ManifoldPoint_get_m_positionWorldOnB(this.impl));\r\n    }\r\n\r\n    getLocalNormalOnA (out: IVec3Like): void {\r\n        if (this.impl) {\r\n            const bt_rot = BulletCache.instance.BT_QUAT_0;\r\n            const body = bt.PersistentManifold_getBody0(this.event.impl as number);\r\n            const trans = bt.CollisionObject_getWorldTransform(body);\r\n            bt.Transform_getRotation(trans, bt_rot);\r\n            const inv_rot = CC_QUAT_0;\r\n            bullet2CocosQuat(inv_rot, bt_rot);\r\n            Quat.conjugate(inv_rot, inv_rot);\r\n            bullet2CocosVec3(out, bt.ManifoldPoint_get_m_normalWorldOnB(this.impl));\r\n            if (!this.isBodyA) Vec3.negate(out, out);\r\n            Vec3.transformQuat(out, out, inv_rot);\r\n        }\r\n    }\r\n\r\n    getLocalNormalOnB (out: IVec3Like): void {\r\n        if (this.impl) {\r\n            const bt_rot = BulletCache.instance.BT_QUAT_0;\r\n            const body = bt.PersistentManifold_getBody1(this.event.impl as number);\r\n            const trans = bt.CollisionObject_getWorldTransform(body);\r\n            bt.Transform_getRotation(trans, bt_rot);\r\n            const inv_rot = CC_QUAT_0;\r\n            bullet2CocosQuat(inv_rot, bt_rot);\r\n            Quat.conjugate(inv_rot, inv_rot);\r\n            bullet2CocosVec3(out, bt.ManifoldPoint_get_m_normalWorldOnB(this.impl));\r\n            Vec3.transformQuat(out, out, inv_rot);\r\n        }\r\n    }\r\n\r\n    getWorldNormalOnA (out: IVec3Like): void {\r\n        if (this.impl) {\r\n            bullet2CocosVec3(out, bt.ManifoldPoint_get_m_normalWorldOnB(this.impl));\r\n            if (!this.isBodyA) Vec3.negate(out, out);\r\n        }\r\n    }\r\n\r\n    getWorldNormalOnB (out: IVec3Like): void {\r\n        if (this.impl) bullet2CocosVec3(out, bt.ManifoldPoint_get_m_normalWorldOnB(this.impl));\r\n    }\r\n}\r\n","/* eslint-disable new-cap */\r\n/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletSharedBody } from './bullet-shared-body';\r\nimport { BulletRigidBody } from './bullet-rigid-body';\r\nimport { BulletShape } from './shapes/bullet-shape';\r\nimport { ArrayCollisionMatrix } from '../utils/array-collision-matrix';\r\nimport { TupleDictionary } from '../utils/tuple-dictionary';\r\nimport { TriggerEventObject, CollisionEventObject, CC_V3_0, CC_V3_1, CC_V3_2, CC_COLOR_0, BulletCache, CharacterTriggerEventObject } from './bullet-cache';\r\nimport { bullet2CocosVec3, cocos2BulletQuat, cocos2BulletVec3 } from './bullet-utils';\r\nimport { IRaycastOptions, IPhysicsWorld } from '../spec/i-physics-world';\r\nimport { PhysicsRayResult, PhysicsMaterial, CharacterControllerContact, EPhysicsDrawFlags } from '../framework';\r\nimport { error, RecyclePool, Vec3, js, IVec3Like, geometry, IQuatLike, Quat } from '../../core';\r\nimport { BulletContactData } from './bullet-contact-data';\r\nimport { BulletConstraint } from './constraints/bullet-constraint';\r\nimport { BulletCharacterController } from './character-controllers/bullet-character-controller';\r\nimport { bt, EBulletType, EBulletTriangleRaycastFlag, EBulletDebugDrawModes, btCache } from './instantiated';\r\nimport { Node } from '../../scene-graph';\r\nimport { director } from '../../game';\r\nimport { GeometryRenderer } from '../../rendering/geometry-renderer';\r\nimport { importFunc } from './bullet-env';\r\n\r\nconst contactsPool: BulletContactData[] = [];\r\nconst v3_0 = CC_V3_0;\r\nconst v3_1 = CC_V3_1;\r\nconst v3_2 = CC_V3_2;\r\nconst c_0 = CC_COLOR_0;\r\nconst emitHit = new CharacterControllerContact();\r\n\r\n/** @mangle */\r\nexport class BulletWorld implements IPhysicsWorld {\r\n    setDefaultMaterial (v: PhysicsMaterial): void {\r\n        //empty\r\n    }\r\n\r\n    setAllowSleep (v: boolean): void {\r\n        bt.ccDiscreteDynamicsWorld_setAllowSleep(this._world, v);\r\n    }\r\n\r\n    setGravity (gravity: IVec3Like): void {\r\n        bt.DynamicsWorld_setGravity(this._world, cocos2BulletVec3(BulletCache.instance.BT_V3_0, gravity));\r\n    }\r\n\r\n    updateNeedEmitEvents (v: boolean): void {\r\n        if (!this.ghosts) return; // return if destroyed\r\n        if (v) {\r\n            this._needEmitEvents = true;\r\n        } else {\r\n            this._needEmitEvents = false;\r\n            for (let i = 0; i < this.ghosts.length; i++) {\r\n                const ghost = this.ghosts[i];\r\n                const shapes = ghost.ghostStruct.wrappedShapes;\r\n                for (let j = 0; j < shapes.length; j++) {\r\n                    const collider = shapes[j].collider;\r\n                    if (collider.needCollisionEvent || collider.needTriggerEvent) {\r\n                        this._needEmitEvents = true;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.bodies.length; i++) {\r\n                const body = this.bodies[i];\r\n                const shapes = body.bodyStruct.wrappedShapes;\r\n                for (let j = 0; j < shapes.length; j++) {\r\n                    const collider = shapes[j].collider;\r\n                    if (collider.needCollisionEvent || collider.needTriggerEvent) {\r\n                        this._needEmitEvents = true;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateNeedEmitCCTEvents (force: boolean): void {\r\n        if (!this.ccts) return; // return if already been removed from bullet world\r\n        if (force) {\r\n            this._needEmitCCTEvents = true;\r\n        } else {\r\n            this._needEmitCCTEvents = false;\r\n            const ccts = this.ccts;\r\n            const length = ccts.length;\r\n            for (let i = 0; i < length; i++) {\r\n                const cctCom = ccts[i].characterController;\r\n                if (cctCom.needCollisionEvent) {\r\n                    this._needEmitCCTEvents = true;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get impl (): Bullet.ptr {\r\n        return this._world;\r\n    }\r\n\r\n    private readonly _world: Bullet.ptr;\r\n    private readonly _broadphase: Bullet.ptr;\r\n    private readonly _solver: Bullet.ptr;\r\n    private readonly _dispatcher: Bullet.ptr;\r\n    private readonly _debugDraw: Bullet.ptr;\r\n\r\n    private _debugLineCount = 0;\r\n    private _MAX_DEBUG_LINE_COUNT = 16384;\r\n    private _debugDrawFlags = EPhysicsDrawFlags.NONE;\r\n    private _debugConstraintSize = 0.3; //B3_DEFAULT_DEBUGDRAW_SIZE\r\n\r\n    private _needEmitEvents = false;\r\n    private _needSyncAfterEvents = false;\r\n    private _needEmitCCTEvents = false;\r\n\r\n    readonly bodies: BulletSharedBody[] = [];\r\n    readonly ghosts: BulletSharedBody[] = [];\r\n    readonly ccts: BulletCharacterController[] = [];\r\n    readonly constraints: BulletConstraint[] = [];\r\n    readonly triggerArrayMat = new ArrayCollisionMatrix();\r\n    readonly characterControllerArrayMat = new ArrayCollisionMatrix();\r\n    readonly collisionArrayMat = new ArrayCollisionMatrix();\r\n    readonly contactsDic = new TupleDictionary();\r\n    readonly oldContactsDic = new TupleDictionary();\r\n    readonly cctShapeEventDic = new TupleDictionary();\r\n    readonly cctContactsDic = new TupleDictionary();\r\n    readonly cctOldContactsDic = new TupleDictionary();\r\n    private static _sweepBoxGeometry: number;\r\n    private static _sweepSphereGeometry: number;\r\n    private static _sweepCapsuleGeometry: number;\r\n\r\n    constructor () {\r\n        btCache.CACHE.world = this;\r\n        this._broadphase = bt.DbvtBroadphase_new();\r\n        this._dispatcher = bt.CollisionDispatcher_new();\r\n        this._solver = bt.SequentialImpulseConstraintSolver_new();\r\n        this._world = bt.ccDiscreteDynamicsWorld_new(this._dispatcher, this._broadphase, this._solver);\r\n\r\n        const debugDraw = bt.DebugDraw.implement(importFunc);//new PhysicsDebugDraw();\r\n        this._debugDraw = debugDraw.$$.ptr;\r\n        bt.CollisionWorld_setDebugDrawer(this._world, this._debugDraw);\r\n\r\n        bt.DebugDraw_setDebugMode(this._debugDraw, EBulletDebugDrawModes.DBG_NoDebug);\r\n        bt.DebugDraw_setAABBColor(this._debugDraw, 0, 1, 1);\r\n        // set color for all shapes\r\n        bt.DebugDraw_setActiveObjectColor(this._debugDraw, 1, 0, 1);\r\n        bt.DebugDraw_setDeactiveObjectColor(this._debugDraw, 1, 0, 1);\r\n        bt.DebugDraw_setWantsDeactivationObjectColor(this._debugDraw, 1, 0, 1);\r\n        bt.DebugDraw_setDisabledDeactivationObjectColor(this._debugDraw, 1, 0, 1);\r\n        bt.DebugDraw_setDisabledSimulationObjectColor(this._debugDraw, 1, 0, 1);\r\n        // set color for all shapes END\r\n        bt.DebugDraw_setConstraintLimitColor(this._debugDraw, 0.5, 0.5, 0.5);\r\n    }\r\n\r\n    destroy (): void {\r\n        if (this.constraints.length || this.bodies.length || this.ccts.length) error('You should destroy all physics component first.');\r\n        bt._safe_delete(this._world, EBulletType.EBulletTypeCollisionWorld);\r\n        bt._safe_delete(this._broadphase, EBulletType.EBulletTypeDbvtBroadPhase);\r\n        bt._safe_delete(this._dispatcher, EBulletType.EBulletTypeCollisionDispatcher);\r\n        bt._safe_delete(this._solver, EBulletType.EBulletTypeSequentialImpulseConstraintSolver);\r\n        bt._safe_delete(this._debugDraw, EBulletType.EBulletTypeDebugDraw);\r\n        (this as any).bodies = null;\r\n        (this as any).ghosts = null;\r\n        (this as any).ccts = null;\r\n        (this as any).constraints = null;\r\n        (this as any).triggerArrayMat = null;\r\n        (this as any).characterControllerArrayMat = null;\r\n        (this as any).collisionArrayMat = null;\r\n        (this as any).contactsDic = null;\r\n        (this as any).oldContactsDic = null;\r\n        (this as any).cctShapeEventDic = null;\r\n        (this as any).cctShapeEventPool = null;\r\n        contactsPool.length = 0;\r\n    }\r\n\r\n    step (deltaTime: number, timeSinceLastCalled?: number, maxSubStep = 0): void {\r\n        if (!this.bodies.length && !this.ghosts.length) return;\r\n        if (timeSinceLastCalled === undefined) timeSinceLastCalled = deltaTime;\r\n        bt.DynamicsWorld_stepSimulation(this._world, timeSinceLastCalled, maxSubStep, deltaTime);\r\n        bt.CollisionWorld_debugDrawWorld(this._world);\r\n    }\r\n\r\n    syncSceneToPhysics (): void {\r\n        // Use reverse traversal order, because update dirty will mess up the ghosts or bodyies array.\r\n        for (let i = this.ghosts.length - 1; i >= 0; i--) {\r\n            const ghost = this.ghosts[i]; // Use temporary object, same reason as above\r\n            ghost.updateDirty();\r\n            ghost.syncSceneToGhost();\r\n        }\r\n\r\n        for (let i = this.bodies.length - 1; i >= 0; i--) {\r\n            const body = this.bodies[i];\r\n            body.updateDirty();\r\n            body.syncSceneToPhysics();\r\n        }\r\n\r\n        const ccts = this.ccts;\r\n        const length = ccts.length;\r\n        for (let i = length - 1; i >= 0; i--) {\r\n            const cct = ccts[i];\r\n            cct.updateDirty();\r\n            cct.syncSceneToPhysics();\r\n        }\r\n    }\r\n\r\n    syncAfterEvents (): void {\r\n        if (!this._needSyncAfterEvents) return;\r\n        this.syncSceneToPhysics();\r\n    }\r\n\r\n    raycast (worldRay: geometry.Ray, options: IRaycastOptions, pool: RecyclePool<PhysicsRayResult>, results: PhysicsRayResult[]): boolean {\r\n        worldRay.computeHit(v3_0, options.maxDistance);\r\n        const to = cocos2BulletVec3(BulletCache.instance.BT_V3_0, v3_0);\r\n        const from = cocos2BulletVec3(BulletCache.instance.BT_V3_1, worldRay.o);\r\n        const allHitsCB = bt.ccAllRayCallback_static();\r\n        bt.ccAllRayCallback_reset(allHitsCB, from, to, options.mask >>> 0, options.queryTrigger);\r\n        bt.ccAllRayCallback_setFlags(allHitsCB, EBulletTriangleRaycastFlag.UseSubSimplexConvexCastRaytest);\r\n        bt.CollisionWorld_rayTest(this._world, from, to, allHitsCB);\r\n        if (bt.RayCallback_hasHit(allHitsCB)) {\r\n            const posArray = bt.ccAllRayCallback_getHitPointWorld(allHitsCB);\r\n            const normalArray = bt.ccAllRayCallback_getHitNormalWorld(allHitsCB);\r\n            const ptrArray = bt.ccAllRayCallback_getCollisionShapePtrs(allHitsCB);\r\n            const closestHitFraction = bt.ccAllRayCallback_getClosestHitFraction(allHitsCB);\r\n            for (let i = 0, n = bt.int_array_size(ptrArray); i < n; i++) {\r\n                bullet2CocosVec3(v3_0, bt.Vec3_array_at(posArray, i));\r\n                bullet2CocosVec3(v3_1, bt.Vec3_array_at(normalArray, i));\r\n                const shape = BulletCache.getWrapper<BulletShape>(bt.int_array_at(ptrArray, i), BulletShape.TYPE);\r\n                const r = pool.add(); results.push(r);\r\n                r._assign(v3_0, Vec3.distance(worldRay.o, v3_0), shape.collider, v3_1, closestHitFraction);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    raycastClosest (worldRay: geometry.Ray, options: IRaycastOptions, result: PhysicsRayResult): boolean {\r\n        worldRay.computeHit(v3_0, options.maxDistance);\r\n        const to = cocos2BulletVec3(BulletCache.instance.BT_V3_0, v3_0);\r\n        const from = cocos2BulletVec3(BulletCache.instance.BT_V3_1, worldRay.o);\r\n        const closeHitCB = bt.ccClosestRayCallback_static();\r\n        bt.ccClosestRayCallback_reset(closeHitCB, from, to, options.mask >>> 0, options.queryTrigger);\r\n        bt.ccClosestRayCallback_setFlags(closeHitCB, EBulletTriangleRaycastFlag.UseSubSimplexConvexCastRaytest);\r\n        bt.CollisionWorld_rayTest(this._world, from, to, closeHitCB);\r\n        if (bt.RayCallback_hasHit(closeHitCB)) {\r\n            bullet2CocosVec3(v3_0, bt.ccClosestRayCallback_getHitPointWorld(closeHitCB));\r\n            bullet2CocosVec3(v3_1, bt.ccClosestRayCallback_getHitNormalWorld(closeHitCB));\r\n            const shape = BulletCache.getWrapper<BulletShape>(bt.ccClosestRayCallback_getCollisionShapePtr(closeHitCB), BulletShape.TYPE);\r\n            const closestHitFraction = bt.ccClosestConvexCallback_getClosestHitFraction(closeHitCB);\r\n            result._assign(v3_0, Vec3.distance(worldRay.o, v3_0), shape.collider, v3_1, closestHitFraction);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    sweepBox (\r\n        worldRay: geometry.Ray,\r\n        halfExtent: IVec3Like,\r\n        orientation: IQuatLike,\r\n        options: IRaycastOptions,\r\n        pool: RecyclePool<PhysicsRayResult>,\r\n        results: PhysicsRayResult[],\r\n    ): boolean {\r\n        // cast shape\r\n        const hf = BulletCache.instance.BT_V3_0;\r\n        cocos2BulletVec3(hf, halfExtent);\r\n        if (!BulletWorld._sweepBoxGeometry) {\r\n            BulletWorld._sweepBoxGeometry =  bt.BoxShape_new(hf);\r\n        }\r\n        bt.BoxShape_setUnscaledHalfExtents(BulletWorld._sweepBoxGeometry, hf);\r\n\r\n        return this.sweep(worldRay, BulletWorld._sweepBoxGeometry, orientation, options, pool, results);\r\n    }\r\n\r\n    sweepBoxClosest (\r\n        worldRay: geometry.Ray,\r\n        halfExtent: IVec3Like,\r\n        orientation: IQuatLike,\r\n        options: IRaycastOptions,\r\n        result: PhysicsRayResult,\r\n    ): boolean {\r\n        // cast shape\r\n        const hf = BulletCache.instance.BT_V3_0;\r\n        cocos2BulletVec3(hf, halfExtent);\r\n        if (!BulletWorld._sweepBoxGeometry) {\r\n            BulletWorld._sweepBoxGeometry =  bt.BoxShape_new(hf);\r\n        }\r\n        bt.BoxShape_setUnscaledHalfExtents(BulletWorld._sweepBoxGeometry, hf);\r\n\r\n        return this.sweepClosest(worldRay, BulletWorld._sweepBoxGeometry, orientation, options, result);\r\n    }\r\n\r\n    sweepSphere (\r\n        worldRay: geometry.Ray,\r\n        radius: number,\r\n        options: IRaycastOptions,\r\n        pool: RecyclePool<PhysicsRayResult>,\r\n        results: PhysicsRayResult[],\r\n    ): boolean {\r\n        // cast shape\r\n        if (!BulletWorld._sweepSphereGeometry) {\r\n            BulletWorld._sweepSphereGeometry =  bt.SphereShape_new(radius);\r\n        }\r\n        bt.SphereShape_setUnscaledRadius(BulletWorld._sweepSphereGeometry, radius);\r\n        return this.sweep(worldRay, BulletWorld._sweepSphereGeometry, Quat.IDENTITY, options, pool, results);\r\n    }\r\n\r\n    sweepSphereClosest (\r\n        worldRay: geometry.Ray,\r\n        radius: number,\r\n        options: IRaycastOptions,\r\n        result: PhysicsRayResult,\r\n    ): boolean {\r\n        // cast shape\r\n        if (!BulletWorld._sweepSphereGeometry) {\r\n            BulletWorld._sweepSphereGeometry =  bt.SphereShape_new(radius);\r\n        }\r\n        bt.SphereShape_setUnscaledRadius(BulletWorld._sweepSphereGeometry, radius);\r\n\r\n        return this.sweepClosest(worldRay, BulletWorld._sweepSphereGeometry, Quat.IDENTITY, options, result);\r\n    }\r\n\r\n    sweepCapsule (\r\n        worldRay: geometry.Ray,\r\n        radius: number,\r\n        height: number,\r\n        orientation: IQuatLike,\r\n        options: IRaycastOptions,\r\n        pool: RecyclePool<PhysicsRayResult>,\r\n        results: PhysicsRayResult[],\r\n    ): boolean {\r\n        // cast shape\r\n        if (!BulletWorld._sweepCapsuleGeometry) {\r\n            BulletWorld._sweepCapsuleGeometry =  bt.CapsuleShape_new(radius, height);\r\n        }\r\n        bt.CapsuleShape_updateProp(BulletWorld._sweepCapsuleGeometry, radius, height * 0.5, 1);\r\n        return this.sweep(worldRay, BulletWorld._sweepCapsuleGeometry, orientation, options, pool, results);\r\n    }\r\n\r\n    sweepCapsuleClosest (\r\n        worldRay: geometry.Ray,\r\n        radius: number,\r\n        height: number,\r\n        orientation: IQuatLike,\r\n        options: IRaycastOptions,\r\n        result: PhysicsRayResult,\r\n    ): boolean {\r\n        // cast shape\r\n        if (!BulletWorld._sweepCapsuleGeometry) {\r\n            BulletWorld._sweepCapsuleGeometry =  bt.CapsuleShape_new(radius, height);\r\n        }\r\n        bt.CapsuleShape_updateProp(BulletWorld._sweepCapsuleGeometry, radius, height * 0.5, 1);\r\n\r\n        return this.sweepClosest(worldRay, BulletWorld._sweepCapsuleGeometry, orientation, options, result);\r\n    }\r\n\r\n    sweep (\r\n        worldRay: geometry.Ray,\r\n        btShapePtr: number,\r\n        orientation: IQuatLike,\r\n        options: IRaycastOptions,\r\n        pool: RecyclePool<PhysicsRayResult>,\r\n        results: PhysicsRayResult[],\r\n    ): boolean {\r\n        const BT_fromTransform = bt.Transform_new();\r\n        const BT_toTransform = bt.Transform_new();\r\n        const BT_orientation = bt.Quat_new(0, 0, 0, 1);\r\n\r\n        // from transform\r\n        cocos2BulletVec3(bt.Transform_getOrigin(BT_fromTransform), worldRay.o);\r\n        cocos2BulletQuat(BT_orientation, orientation);\r\n        bt.Transform_setRotation(BT_fromTransform, BT_orientation);\r\n\r\n        // to transform\r\n        worldRay.computeHit(v3_0, options.maxDistance);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(BT_toTransform), v3_0);\r\n        cocos2BulletQuat(BT_orientation, orientation);\r\n        bt.Transform_setRotation(BT_toTransform, BT_orientation);\r\n\r\n        const allHitsCB = bt.ccAllConvexCallback_static();\r\n        bt.ccAllConvexCallback_reset(allHitsCB, BT_fromTransform, BT_toTransform, options.mask >>> 0, options.queryTrigger);\r\n        bt.CollisionWorld_convexSweepTest(this._world, btShapePtr, BT_fromTransform, BT_toTransform, allHitsCB, 0);\r\n        bt._safe_delete(BT_fromTransform, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(BT_toTransform, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(BT_orientation, EBulletType.EBulletTypeQuat);\r\n        if (bt.ConvexCallback_hasHit(allHitsCB)) {\r\n            const posArray = bt.ccAllConvexCallback_getHitPointWorld(allHitsCB);\r\n            const normalArray = bt.ccAllConvexCallback_getHitNormalWorld(allHitsCB);\r\n            const ptrArray = bt.ccAllConvexCallback_getCollisionShapePtrs(allHitsCB);\r\n            const closestHitFraction = bt.ccAllConvexCallback_getClosestHitFraction(allHitsCB);\r\n            for (let i = 0, n = bt.int_array_size(ptrArray); i < n; i++) {\r\n                bullet2CocosVec3(v3_0, bt.Vec3_array_at(posArray, i));\r\n                bullet2CocosVec3(v3_1, bt.Vec3_array_at(normalArray, i));\r\n                const shape = BulletCache.getWrapper<BulletShape>(bt.int_array_at(ptrArray, i), BulletShape.TYPE);\r\n                const r = pool.add(); results.push(r);\r\n                r._assign(v3_0, Vec3.distance(worldRay.o, v3_0), shape.collider, v3_1, closestHitFraction);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    sweepClosest (\r\n        worldRay: geometry.Ray,\r\n        btShapePtr: number,\r\n        orientation: IQuatLike,\r\n        options: IRaycastOptions,\r\n        result: PhysicsRayResult,\r\n    ): boolean {\r\n        const BT_fromTransform = bt.Transform_new();\r\n        const BT_toTransform = bt.Transform_new();\r\n        const BT_orientation = bt.Quat_new(0, 0, 0, 1);\r\n\r\n        // from transform\r\n        cocos2BulletVec3(bt.Transform_getOrigin(BT_fromTransform), worldRay.o);\r\n        cocos2BulletQuat(BT_orientation, orientation);\r\n        bt.Transform_setRotation(BT_fromTransform, BT_orientation);\r\n\r\n        // to transform\r\n        worldRay.computeHit(v3_0, options.maxDistance);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(BT_toTransform), v3_0);\r\n        cocos2BulletQuat(BT_orientation, orientation);\r\n        bt.Transform_setRotation(BT_toTransform, BT_orientation);\r\n\r\n        const closeHitCB = bt.ccClosestConvexCallback_static();\r\n        bt.ccClosestConvexCallback_reset(closeHitCB, BT_fromTransform, BT_toTransform, options.mask >>> 0, options.queryTrigger);\r\n        bt.CollisionWorld_convexSweepTest(this._world, btShapePtr, BT_fromTransform, BT_toTransform, closeHitCB, 0);\r\n        bt._safe_delete(BT_fromTransform, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(BT_toTransform, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(BT_orientation, EBulletType.EBulletTypeQuat);\r\n        if (bt.ConvexCallback_hasHit(closeHitCB)) {\r\n            bullet2CocosVec3(v3_0, bt.ccClosestConvexCallback_getHitPointWorld(closeHitCB));\r\n            bullet2CocosVec3(v3_1, bt.ccClosestConvexCallback_getHitNormalWorld(closeHitCB));\r\n            const shape = BulletCache.getWrapper<BulletShape>(bt.ccClosestConvexCallback_getCollisionShapePtr(closeHitCB), BulletShape.TYPE);\r\n            const closestHitFraction = bt.ccClosestConvexCallback_getClosestHitFraction(closeHitCB);\r\n            result._assign(v3_0, Vec3.distance(worldRay.o, v3_0), shape.collider, v3_1, closestHitFraction);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getSharedBody (node: Node, wrappedBody?: BulletRigidBody): BulletSharedBody {\r\n        return BulletSharedBody.getSharedBody(node, this, wrappedBody);\r\n    }\r\n\r\n    addSharedBody (sharedBody: BulletSharedBody): void {\r\n        const i = this.bodies.indexOf(sharedBody);\r\n        if (i < 0) {\r\n            this.bodies.push(sharedBody);\r\n            const group = sharedBody.collisionFilterGroup;\r\n            const mask = sharedBody.collisionFilterMask;\r\n            bt.DynamicsWorld_addRigidBody(this._world, sharedBody.body, group >>> 0, mask >>> 0);\r\n        }\r\n    }\r\n\r\n    removeSharedBody (sharedBody: BulletSharedBody): void {\r\n        const i = this.bodies.indexOf(sharedBody);\r\n        if (i >= 0) {\r\n            js.array.fastRemoveAt(this.bodies, i);\r\n            bt.DynamicsWorld_removeRigidBody(this._world, sharedBody.body);\r\n        }\r\n    }\r\n\r\n    addGhostObject (sharedBody: BulletSharedBody): void {\r\n        const i = this.ghosts.indexOf(sharedBody);\r\n        if (i < 0) {\r\n            this.ghosts.push(sharedBody);\r\n            const group = sharedBody.collisionFilterGroup;\r\n            const mask = sharedBody.collisionFilterMask;\r\n            bt.CollisionWorld_addCollisionObject(this._world, sharedBody.ghost, group >>> 0, mask >>> 0);\r\n        }\r\n    }\r\n\r\n    removeGhostObject (sharedBody: BulletSharedBody): void {\r\n        const i = this.ghosts.indexOf(sharedBody);\r\n        if (i >= 0) {\r\n            js.array.fastRemoveAt(this.ghosts, i);\r\n            bt.CollisionWorld_removeCollisionObject(this._world, sharedBody.ghost);\r\n        }\r\n    }\r\n\r\n    addCCT (cct: BulletCharacterController): void {\r\n        const index = this.ccts.indexOf(cct);\r\n        if (index < 0) {\r\n            this.ccts.push(cct);\r\n            const cctGhost = bt.CharacterController_getGhostObject(cct.impl);\r\n            const group = cct.getGroup();\r\n            const mask = cct.getMask();\r\n            bt.CollisionWorld_addCollisionObject(this._world, cctGhost, group >>> 0, mask >>> 0);\r\n            bt.DynamicsWorld_addAction(this._world, cct.impl);\r\n        }\r\n    }\r\n\r\n    removeCCT (cct: BulletCharacterController): void {\r\n        const index = this.ccts.indexOf(cct);\r\n        if (index >= 0) {\r\n            js.array.fastRemoveAt(this.ccts, index);\r\n            const cctGhost = bt.CharacterController_getGhostObject(cct.impl);\r\n            bt.CollisionWorld_removeCollisionObject(this._world, cctGhost);\r\n            bt.DynamicsWorld_removeAction(this._world, cct.impl);\r\n        }\r\n    }\r\n\r\n    addConstraint (constraint: BulletConstraint): void {\r\n        const i = this.constraints.indexOf(constraint);\r\n        if (i < 0) {\r\n            this.constraints.push(constraint);\r\n            bt.DynamicsWorld_addConstraint(this.impl, constraint.impl, !constraint.constraint.enableCollision);\r\n            constraint.index = i;\r\n        }\r\n    }\r\n\r\n    removeConstraint (constraint: BulletConstraint): void {\r\n        const i = this.constraints.indexOf(constraint);\r\n        if (i >= 0) {\r\n            this.constraints.splice(i, 1);\r\n            bt.DynamicsWorld_removeConstraint(this.impl, constraint.impl);\r\n            constraint.index = -1;\r\n        }\r\n    }\r\n\r\n    emitEvents (): void {\r\n        this._needSyncAfterEvents = false;\r\n\r\n        if (this._needEmitEvents) {\r\n            this.gatherConatactData();\r\n\r\n            this.emitCollisionAndTriggerEvent();\r\n            // emit cct trigger events\r\n            this.emitCCTTriggerEvent();\r\n        }\r\n\r\n        // emit cct collision events\r\n        if (this._needEmitCCTEvents) {\r\n            this.emitCCTCollisionEvent();\r\n        }\r\n    }\r\n\r\n    private emitCollisionAndTriggerEvent (): void {\r\n        // is enter or stay\r\n        let dicL = this.contactsDic.getLength();\r\n        while (dicL--) {\r\n            contactsPool.push.apply(contactsPool, CollisionEventObject.contacts as BulletContactData[]);\r\n            CollisionEventObject.contacts.length = 0;\r\n            const key = this.contactsDic.getKeyByIndex(dicL);\r\n            const data = this.contactsDic.getDataByKey<any>(key);\r\n            const shape0: BulletShape = data.shape0;\r\n            const shape1: BulletShape = data.shape1;\r\n            this.oldContactsDic.set(shape0.id, shape1.id, data);\r\n            const collider0 = shape0.collider;\r\n            const collider1 = shape1.collider;\r\n            if (collider0 && collider1) {\r\n                const isTrigger = collider0.isTrigger || collider1.isTrigger;\r\n                if (isTrigger) {\r\n                    if (this.triggerArrayMat.get(shape0.id, shape1.id)) {\r\n                        TriggerEventObject.type = 'onTriggerStay';\r\n                    } else {\r\n                        TriggerEventObject.type = 'onTriggerEnter';\r\n                        this.triggerArrayMat.set(shape0.id, shape1.id, true);\r\n                    }\r\n                    TriggerEventObject.impl = data.impl; //btPersistentManifold\r\n                    TriggerEventObject.selfCollider = collider0;\r\n                    TriggerEventObject.otherCollider = collider1;\r\n                    collider0.emit(TriggerEventObject.type, TriggerEventObject);\r\n\r\n                    TriggerEventObject.selfCollider = collider1;\r\n                    TriggerEventObject.otherCollider = collider0;\r\n                    collider1.emit(TriggerEventObject.type, TriggerEventObject);\r\n                    this._needSyncAfterEvents = true;\r\n                } else {\r\n                    const body0 = collider0.attachedRigidBody;\r\n                    const body1 = collider1.attachedRigidBody;\r\n                    if (body0 && body1) {\r\n                        if (body0.isSleeping && body1.isSleeping) continue;\r\n                    } else if (!body0 && body1) {\r\n                        if (body1.isSleeping) continue;\r\n                    } else if (!body1 && body0) {\r\n                        if (body0.isSleeping) continue;\r\n                    }\r\n                    if (this.collisionArrayMat.get(shape0.id, shape1.id)) {\r\n                        CollisionEventObject.type = 'onCollisionStay';\r\n                    } else {\r\n                        CollisionEventObject.type = 'onCollisionEnter';\r\n                        this.collisionArrayMat.set(shape0.id, shape1.id, true);\r\n                    }\r\n\r\n                    for (let i = 0; i < data.contacts.length; i++) {\r\n                        const cq = data.contacts[i]; //btManifoldPoint\r\n                        if (contactsPool.length > 0) {\r\n                            const c = contactsPool.pop();\r\n                            c!.impl = cq; //btManifoldPoint\r\n                            CollisionEventObject.contacts.push(c!);\r\n                        } else {\r\n                            const c = new BulletContactData(CollisionEventObject);\r\n                            c.impl = cq; //btManifoldPoint\r\n                            CollisionEventObject.contacts.push(c);\r\n                        }\r\n                    }\r\n                    CollisionEventObject.impl = data.impl; //btPersistentManifold\r\n                    CollisionEventObject.selfCollider = collider0;\r\n                    CollisionEventObject.otherCollider = collider1;\r\n                    collider0.emit(CollisionEventObject.type, CollisionEventObject);\r\n\r\n                    CollisionEventObject.selfCollider = collider1;\r\n                    CollisionEventObject.otherCollider = collider0;\r\n                    collider1.emit(CollisionEventObject.type, CollisionEventObject);\r\n                    this._needSyncAfterEvents = true;\r\n                }\r\n\r\n                if (this.oldContactsDic.get(shape0.id, shape1.id) == null) {\r\n                    this.oldContactsDic.set(shape0.id, shape1.id, data);\r\n                }\r\n            }\r\n        }\r\n\r\n        // is exit\r\n        let oldDicL = this.oldContactsDic.getLength();\r\n        while (oldDicL--) {\r\n            const key = this.oldContactsDic.getKeyByIndex(oldDicL);\r\n            const data = this.oldContactsDic.getDataByKey<any>(key);\r\n            const shape0: BulletShape = data.shape0;\r\n            const shape1: BulletShape = data.shape1;\r\n            const collider0 = shape0.collider;\r\n            const collider1 = shape1.collider;\r\n            if (collider0 && collider1) {\r\n                const isTrigger = collider0.isTrigger || collider1.isTrigger;\r\n                if (this.contactsDic.getDataByKey(key) == null) {\r\n                    if (isTrigger) {\r\n                        if (this.triggerArrayMat.get(shape0.id, shape1.id)) {\r\n                            TriggerEventObject.type = 'onTriggerExit';\r\n                            TriggerEventObject.selfCollider = collider0;\r\n                            TriggerEventObject.otherCollider = collider1;\r\n                            collider0.emit(TriggerEventObject.type, TriggerEventObject);\r\n\r\n                            TriggerEventObject.selfCollider = collider1;\r\n                            TriggerEventObject.otherCollider = collider0;\r\n                            collider1.emit(TriggerEventObject.type, TriggerEventObject);\r\n\r\n                            this.triggerArrayMat.set(shape0.id, shape1.id, false);\r\n                            this.oldContactsDic.set(shape0.id, shape1.id, null);\r\n                            this._needSyncAfterEvents = true;\r\n                        }\r\n                    } else if (this.collisionArrayMat.get(shape0.id, shape1.id)) {\r\n                        contactsPool.push.apply(contactsPool, CollisionEventObject.contacts as BulletContactData[]);\r\n                        CollisionEventObject.contacts.length = 0;\r\n\r\n                        CollisionEventObject.type = 'onCollisionExit';\r\n                        CollisionEventObject.selfCollider = collider0;\r\n                        CollisionEventObject.otherCollider = collider1;\r\n                        collider0.emit(CollisionEventObject.type, CollisionEventObject);\r\n\r\n                        CollisionEventObject.selfCollider = collider1;\r\n                        CollisionEventObject.otherCollider = collider0;\r\n                        collider1.emit(CollisionEventObject.type, CollisionEventObject);\r\n\r\n                        this.collisionArrayMat.set(shape0.id, shape1.id, false);\r\n                        this.oldContactsDic.set(shape0.id, shape1.id, null);\r\n                        this._needSyncAfterEvents = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.contactsDic.reset();\r\n    }\r\n\r\n    private emitCCTTriggerEvent (): void {\r\n        // is enter or stay\r\n        let dicL = this.cctContactsDic.getLength();\r\n        while (dicL--) {\r\n            const key = this.cctContactsDic.getKeyByIndex(dicL);\r\n            const data = this.cctContactsDic.getDataByKey<any>(key);\r\n            const shape: BulletShape = data.shape;\r\n            const cct: BulletCharacterController = data.cct;\r\n            this.cctOldContactsDic.set(shape.id, cct.id, data);\r\n            const collider = shape.collider;\r\n            const characterController = cct.characterController;\r\n            if (collider && characterController) {\r\n                const isTrigger = collider.isTrigger;\r\n                if (isTrigger) {\r\n                    if (this.characterControllerArrayMat.get(shape.id, cct.id)) {\r\n                        CharacterTriggerEventObject.type = 'onControllerTriggerStay';\r\n                    } else {\r\n                        CharacterTriggerEventObject.type = 'onControllerTriggerEnter';\r\n                        this.characterControllerArrayMat.set(shape.id, cct.id, true);\r\n                    }\r\n                    CharacterTriggerEventObject.impl = data.impl; //btPersistentManifold\r\n                    CharacterTriggerEventObject.collider = collider;\r\n                    CharacterTriggerEventObject.characterController = characterController;\r\n                    collider.emit(CharacterTriggerEventObject.type, CharacterTriggerEventObject);\r\n\r\n                    CharacterTriggerEventObject.collider = collider;\r\n                    CharacterTriggerEventObject.characterController = characterController;\r\n                    characterController.emit(CharacterTriggerEventObject.type, CharacterTriggerEventObject);\r\n                    this._needSyncAfterEvents = true;\r\n                }\r\n\r\n                if (this.cctOldContactsDic.get(shape.id, cct.id) == null) {\r\n                    this.cctOldContactsDic.set(shape.id, cct.id, data);\r\n                }\r\n            }\r\n        }\r\n\r\n        // is exit\r\n        let oldDicL = this.cctOldContactsDic.getLength();\r\n        while (oldDicL--) {\r\n            const key = this.cctOldContactsDic.getKeyByIndex(oldDicL);\r\n            const data = this.cctOldContactsDic.getDataByKey<any>(key);\r\n            const shape: BulletShape = data.shape;\r\n            const cct: BulletCharacterController = data.cct;\r\n            const collider = shape.collider;\r\n            const characterController = cct.characterController;\r\n            if (collider && characterController) {\r\n                const isTrigger = collider.isTrigger;\r\n                if (this.cctContactsDic.getDataByKey(key) == null) {\r\n                    if (isTrigger) {\r\n                        if (this.characterControllerArrayMat.get(shape.id, cct.id)) {\r\n                            CharacterTriggerEventObject.type = 'onControllerTriggerExit';\r\n                            CharacterTriggerEventObject.collider = collider;\r\n                            CharacterTriggerEventObject.characterController = characterController;\r\n                            collider.emit(CharacterTriggerEventObject.type, CharacterTriggerEventObject);\r\n\r\n                            CharacterTriggerEventObject.collider = collider;\r\n                            CharacterTriggerEventObject.characterController = characterController;\r\n                            characterController.emit(CharacterTriggerEventObject.type, CharacterTriggerEventObject);\r\n\r\n                            this.characterControllerArrayMat.set(shape.id, cct.id, false);\r\n                            this.cctOldContactsDic.set(shape.id, cct.id, null);\r\n                            this._needSyncAfterEvents = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.cctContactsDic.reset();\r\n    }\r\n\r\n    private emitCCTCollisionEvent (): void {\r\n        let dicL = this.cctShapeEventDic.getLength();\r\n        while (dicL--) {\r\n            const key = this.cctShapeEventDic.getKeyByIndex(dicL);\r\n            const data = this.cctShapeEventDic.getDataByKey<any>(key);\r\n            const cct: BulletCharacterController = data.BulletCharacterController;\r\n            const shape: BulletShape = data.BulletShape;\r\n            const worldPos = data.worldPos as IVec3Like;\r\n            const worldNormal = data.worldNormal as IVec3Like;\r\n            const motionDir = data.motionDir as IVec3Like;\r\n            const motionLength = data.motionLength;\r\n            emitHit.controller = cct.characterController;\r\n            emitHit.collider = shape.collider;\r\n            emitHit.worldPosition.set(worldPos.x, worldPos.y, worldPos.z);\r\n            emitHit.worldNormal.set(worldNormal.x, worldNormal.y, worldNormal.z);\r\n            emitHit.motionDirection.set(motionDir.x, motionDir.y, motionDir.z);\r\n            emitHit.motionLength = motionLength;\r\n            emitHit.controller?.emit('onControllerColliderHit', emitHit);\r\n            this._needSyncAfterEvents = true;\r\n        }\r\n        this.cctShapeEventDic.reset();\r\n    }\r\n\r\n    gatherConatactData (): void {\r\n        const numManifolds = bt.Dispatcher_getNumManifolds(this._dispatcher);\r\n        for (let i = 0; i < numManifolds; i++) {\r\n            const manifold = bt.Dispatcher_getManifoldByIndexInternal(this._dispatcher, i);//btPersistentManifold\r\n            const numContacts = bt.PersistentManifold_getNumContacts(manifold);\r\n            for (let j = 0; j < numContacts; j++) {\r\n                const manifoldPoint = bt.PersistentManifold_getContactPoint(manifold, j);//btManifoldPoint\r\n                const s0 = bt.ManifoldPoint_getShape0(manifoldPoint);\r\n                const s1 = bt.ManifoldPoint_getShape1(manifoldPoint);\r\n\r\n                let processed = false;\r\n\r\n                if (!processed) {\r\n                    const shape0: BulletShape = BulletCache.getWrapper(s0, BulletShape.TYPE);\r\n                    const shape1: BulletShape = BulletCache.getWrapper(s1, BulletShape.TYPE);\r\n                    if (shape0 && shape1) {\r\n                        processed = true;\r\n                        if (shape0.collider.needTriggerEvent || shape1.collider.needTriggerEvent\r\n                        || shape0.collider.needCollisionEvent || shape1.collider.needCollisionEvent) {\r\n                            // current contact\r\n                            let item = this.contactsDic.get<any>(shape0.id, shape1.id);\r\n                            if (!item) {\r\n                                item = this.contactsDic.set(\r\n                                    shape0.id,\r\n                                    shape1.id,\r\n                                    { shape0, shape1, contacts: [], impl: manifold },\r\n                                );\r\n                            }\r\n                            item.contacts.push(manifoldPoint);//btManifoldPoint\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //cct - collider trigger event\r\n                if (!processed) {\r\n                    const shape: BulletShape = BulletCache.getWrapper(s0, BulletShape.TYPE);\r\n                    const cct: BulletCharacterController = BulletCache.getWrapper(s1, btCache.CCT_CACHE_NAME);\r\n                    if (shape && cct) {\r\n                        processed = true;\r\n                        if (shape.collider.needTriggerEvent) {\r\n                            // current contact\r\n                            let item = this.cctContactsDic.get<any>(shape.id, cct.id);\r\n                            if (!item) {\r\n                                item = this.cctContactsDic.set(\r\n                                    shape.id,\r\n                                    cct.id,\r\n                                    { shape, cct, contacts: [], impl: manifold },\r\n                                );\r\n                            }\r\n                            item.contacts.push(manifoldPoint);//btManifoldPoint\r\n                            processed = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //cct - collider trigger event\r\n                if (!processed) {\r\n                    const cct: BulletCharacterController = BulletCache.getWrapper(s0, btCache.CCT_CACHE_NAME);\r\n                    const shape: BulletShape = BulletCache.getWrapper(s1, BulletShape.TYPE);\r\n                    if (shape && cct) {\r\n                        processed = true;\r\n                        if (shape.collider.needTriggerEvent) {\r\n                            // current contact\r\n                            let item = this.cctContactsDic.get<any>(shape.id, cct.id);\r\n                            if (!item) {\r\n                                item = this.cctContactsDic.set(\r\n                                    shape.id,\r\n                                    cct.id,\r\n                                    { shape, cct, contacts: [], impl: manifold },\r\n                                );\r\n                            }\r\n                            item.contacts.push(manifoldPoint);//btManifoldPoint\r\n                            processed = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get debugDrawFlags (): EPhysicsDrawFlags {\r\n        return this._debugDrawFlags;\r\n    }\r\n\r\n    set debugDrawFlags (v: EPhysicsDrawFlags) {\r\n        this._debugDrawFlags = v;\r\n        if (this._debugDraw) {\r\n            this._setDebugDrawMode();\r\n        }\r\n    }\r\n\r\n    get debugDrawConstraintSize (): number {\r\n        return this._debugConstraintSize;\r\n    }\r\n\r\n    set debugDrawConstraintSize (v) {\r\n        this._debugConstraintSize = v;\r\n        for (let i = 0; i < this.constraints.length; i++) {\r\n            this.constraints[i].updateDebugDrawSize();\r\n        }\r\n    }\r\n\r\n    private _setDebugDrawMode (): void {\r\n        let btDrawMode = 0;\r\n        if (this._debugDrawFlags & EPhysicsDrawFlags.WIRE_FRAME) {\r\n            btDrawMode |= EBulletDebugDrawModes.DBG_DrawWireframe;\r\n        }\r\n\r\n        if (this._debugDrawFlags & EPhysicsDrawFlags.CONSTRAINT) {\r\n            btDrawMode |= EBulletDebugDrawModes.DBG_DrawConstraints;\r\n            btDrawMode |= EBulletDebugDrawModes.DBG_DrawConstraintLimits;\r\n        }\r\n\r\n        if (this._debugDrawFlags & EPhysicsDrawFlags.AABB) {\r\n            btDrawMode |= EBulletDebugDrawModes.DBG_DrawAabb;\r\n        }\r\n\r\n        bt.DebugDraw_setDebugMode(this._debugDraw, btDrawMode);\r\n    }\r\n\r\n    private _getDebugRenderer (): GeometryRenderer|null {\r\n        const cameras = director.root!.mainWindow?.cameras;\r\n        if (!cameras) return null;\r\n        if (cameras.length === 0) return null;\r\n        if (!cameras[0]) return null;\r\n        cameras[0].initGeometryRenderer();\r\n\r\n        return cameras[0].geometryRenderer;\r\n    }\r\n\r\n    // callback function called by bullet wasm\r\n    public onDebugDrawLine (from: number, to: number, color: number): void {\r\n        const debugRenderer = this._getDebugRenderer();\r\n        if (debugRenderer && this._debugLineCount < this._MAX_DEBUG_LINE_COUNT) {\r\n            this._debugLineCount++;\r\n            bullet2CocosVec3(v3_0, from);\r\n            bullet2CocosVec3(v3_1, to);\r\n            bullet2CocosVec3(v3_2, color);\r\n            c_0.set(v3_2.x * 255, v3_2.y * 255, v3_2.z * 255, 255);\r\n            debugRenderer.addLine(v3_0, v3_1, c_0);\r\n        }\r\n    }\r\n\r\n    public onClearLines (): void {\r\n        this._debugLineCount = 0;\r\n    }\r\n}\r\n","/* eslint-disable new-cap */\r\n/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { Vec3 } from '../../../core';\r\nimport { BoxCollider, PhysicsSystem } from '../../../../exports/physics-framework';\r\nimport { IBoxShape } from '../../spec/i-physics-shape';\r\nimport { absolute, VEC3_0 } from '../../utils/util';\r\nimport { cocos2BulletVec3 } from '../bullet-utils';\r\nimport { BulletCache } from '../bullet-cache';\r\nimport { bt } from '../instantiated';\r\n\r\n/** @mangle */\r\nexport class BulletBoxShape extends BulletShape implements IBoxShape {\r\n    updateSize (): void {\r\n        const hf = BulletCache.instance.BT_V3_0;\r\n        cocos2BulletVec3(hf, this.getMinUnscaledHalfExtents(VEC3_0));\r\n        bt.BoxShape_setUnscaledHalfExtents(this.impl, hf);\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    get collider (): BoxCollider {\r\n        return this._collider as BoxCollider;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        const hf = BulletCache.instance.BT_V3_0;\r\n        cocos2BulletVec3(hf, this.getMinUnscaledHalfExtents(VEC3_0));\r\n        this._impl = bt.BoxShape_new(hf);\r\n        this.updateScale();\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        bt.CollisionShape_setLocalScaling(this._impl, cocos2BulletVec3(bt_v3, this.getMinScale(VEC3_0)));\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    getMinUnscaledHalfExtents (out: Vec3): Vec3 {\r\n        const size = this.collider.size;\r\n        const ws = absolute(VEC3_0.set(this._collider.node.worldScale));\r\n        const minVolumeSize = PhysicsSystem.instance.minVolumeSize;\r\n        const halfSizeX = size.x / 2; const halfSizeY = size.y / 2; const halfSizeZ = size.z / 2;\r\n        const halfX = halfSizeX * ws.x < minVolumeSize ? minVolumeSize / ws.x : halfSizeX;\r\n        const halfY = halfSizeY * ws.y < minVolumeSize ? minVolumeSize / ws.y : halfSizeY;\r\n        const halfZ = halfSizeZ * ws.z < minVolumeSize ? minVolumeSize / ws.z : halfSizeZ;\r\n        out.set(halfX, halfY, halfZ);\r\n        return out;\r\n    }\r\n\r\n    getMinScale (out: Vec3): Vec3 {\r\n        const size = this.collider.size;\r\n        const ws = absolute(VEC3_0.set(this._collider.node.worldScale));\r\n        const minVolumeSize = PhysicsSystem.instance.minVolumeSize;\r\n        const halfSizeX = size.x / 2; const halfSizeY = size.y / 2; const halfSizeZ = size.z / 2;\r\n        const scaleX = halfSizeX * ws.x < minVolumeSize ? minVolumeSize / halfSizeX : ws.x;\r\n        const scaleY = halfSizeY * ws.y < minVolumeSize ? minVolumeSize / halfSizeY : ws.y;\r\n        const scaleZ = halfSizeZ * ws.z < minVolumeSize ? minVolumeSize / halfSizeZ : ws.z;\r\n        out.set(scaleX, scaleY, scaleZ);\r\n        return out;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { PhysicsSystem, SphereCollider } from '../../../../exports/physics-framework';\r\nimport { cocos2BulletVec3 } from '../bullet-utils';\r\nimport { ISphereShape } from '../../spec/i-physics-shape';\r\nimport { BulletCache, CC_V3_0 } from '../bullet-cache';\r\nimport { bt } from '../instantiated';\r\nimport { absMaxComponent } from '../../../core';\r\n\r\n/** @mangle */\r\nexport class BulletSphereShape extends BulletShape implements ISphereShape {\r\n    updateRadius (): void {\r\n        bt.SphereShape_setUnscaledRadius(this.impl, this.getMinUnscaledRadius());\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    get collider (): SphereCollider {\r\n        return this._collider as SphereCollider;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        this._impl = bt.SphereShape_new(this.getMinUnscaledRadius());\r\n        this.updateScale();\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        const scale = this.getMinScale();\r\n        CC_V3_0.set(scale, scale, scale);\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        bt.CollisionShape_setLocalScaling(this._impl, cocos2BulletVec3(bt_v3, CC_V3_0));\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    getMinUnscaledRadius (): number {\r\n        const radius = this.collider.radius;\r\n        const ws = Math.abs(absMaxComponent(this._collider.node.worldScale));\r\n        const minVolumeSize = PhysicsSystem.instance.minVolumeSize;\r\n        return ws * radius < minVolumeSize ? minVolumeSize / ws : radius;\r\n    }\r\n\r\n    getMinScale (): number {\r\n        const radius = this.collider.radius;\r\n        const ws = Math.abs(absMaxComponent(this._collider.node.worldScale));\r\n        const minVolumeSize = PhysicsSystem.instance.minVolumeSize;\r\n        return ws * radius < minVolumeSize ? minVolumeSize / radius : ws;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { absMax, IVec3Like } from '../../../core';\r\nimport { BulletShape } from './bullet-shape';\r\nimport { CapsuleCollider } from '../../../../exports/physics-framework';\r\nimport { ICapsuleShape } from '../../spec/i-physics-shape';\r\nimport { bt } from '../instantiated';\r\n\r\n/** @mangle */\r\nexport class BulletCapsuleShape extends BulletShape implements ICapsuleShape {\r\n    setCylinderHeight (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.cylinderHeight,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    setDirection (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.cylinderHeight,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    setRadius (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.cylinderHeight,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    get collider (): CapsuleCollider {\r\n        return this._collider as CapsuleCollider;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        this._impl = bt.CapsuleShape_new(0.5, 1);\r\n        this.setRadius(this.collider.radius);\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        this.setRadius(this.collider.radius);\r\n    }\r\n\r\n    updateProperties (radius: number, height: number, direction: number, scale: IVec3Like): void {\r\n        const ws = scale;\r\n        const upAxis = direction;\r\n        let wr: number; let halfH: number;\r\n        if (upAxis === 1) {\r\n            wr = radius * Math.abs(absMax(ws.x, ws.z));\r\n            halfH = height / 2 * Math.abs(ws.y);\r\n        } else if (upAxis === 0) {\r\n            wr = radius * Math.abs(absMax(ws.y, ws.z));\r\n            halfH = height / 2 * Math.abs(ws.x);\r\n        } else {\r\n            wr = radius * Math.abs(absMax(ws.x, ws.y));\r\n            halfH = height / 2 * Math.abs(ws.z);\r\n        }\r\n        bt.CapsuleShape_updateProp(this._impl, wr, halfH, upAxis);\r\n        this.updateCompoundTransform();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { bt, EBulletType } from './instantiated';\r\nimport { Mesh } from '../../3d/assets';\r\nimport { cocos2BulletTriMesh } from './bullet-utils';\r\n\r\n/** @mangle */\r\nexport class BulletBvhTriangleMeshShape {\r\n    private static readonly BulletBvhTriangleMeshShapeMap = new Map<number, BulletBvhTriangleMeshShape>();\r\n\r\n    public static getBulletBvhTriangleMeshShape (key: number, mesh: Mesh): BulletBvhTriangleMeshShape {\r\n        let newBulletBvhTriangleMeshShape!: BulletBvhTriangleMeshShape;\r\n        if (BulletBvhTriangleMeshShape.BulletBvhTriangleMeshShapeMap.has(key)) { //can be improved\r\n            newBulletBvhTriangleMeshShape = BulletBvhTriangleMeshShape.BulletBvhTriangleMeshShapeMap.get(key)!;\r\n            newBulletBvhTriangleMeshShape.reference = true;\r\n        } else {\r\n            newBulletBvhTriangleMeshShape = new BulletBvhTriangleMeshShape(key, mesh);\r\n            BulletBvhTriangleMeshShape.BulletBvhTriangleMeshShapeMap.set(key, newBulletBvhTriangleMeshShape);\r\n        }\r\n        return newBulletBvhTriangleMeshShape;\r\n    }\r\n\r\n    private readonly key: number;\r\n    private ref = 0;\r\n    public bulletBvhTriangleMeshShapePtr: Bullet.ptr;\r\n    private btTriangleMeshPtr: Bullet.ptr = 0;\r\n\r\n    public set reference (v: boolean) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n        v ? this.ref++ : this.ref--;\r\n        if (this.ref === 0) { this.destroy(); }\r\n    }\r\n\r\n    private constructor (key: number, mesh: Mesh) {\r\n        this.reference = true;\r\n        this.key = key;\r\n        this.btTriangleMeshPtr = bt.TriangleMesh_new();\r\n        cocos2BulletTriMesh(this.btTriangleMeshPtr, mesh);\r\n        this.bulletBvhTriangleMeshShapePtr = bt.BvhTriangleMeshShape_new(this.btTriangleMeshPtr, true, true);\r\n    }\r\n\r\n    private destroy (): void {\r\n        if (this.bulletBvhTriangleMeshShapePtr) {\r\n            bt._safe_delete(this.bulletBvhTriangleMeshShapePtr, EBulletType.EBulletTypeCollisionShape);\r\n        }\r\n        if (this.btTriangleMeshPtr) {\r\n            bt._safe_delete(this.btTriangleMeshPtr, EBulletType.EBulletTypeTriangleMesh);\r\n        }\r\n        BulletBvhTriangleMeshShape.BulletBvhTriangleMeshShapeMap.delete(this.key);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { Mesh } from '../../../3d/assets';\r\nimport { MeshCollider } from '../../../../exports/physics-framework';\r\nimport { cocos2BulletVec3, cocos2BulletTriMesh } from '../bullet-utils';\r\nimport { ITrimeshShape } from '../../spec/i-physics-shape';\r\nimport { BulletCache } from '../bullet-cache';\r\nimport { bt, EBulletType } from '../instantiated';\r\nimport { BulletBvhTriangleMeshShape } from '../bullet-bvh-triangle-mesh-shape';\r\n\r\n/** @mangle */\r\nexport class BulletTrimeshShape extends BulletShape implements ITrimeshShape {\r\n    private btBVHMeshShape: BulletBvhTriangleMeshShape | null = null;\r\n    public get collider (): MeshCollider {\r\n        return this._collider as MeshCollider;\r\n    }\r\n\r\n    setMesh (v: Mesh | null): void {\r\n        if (!this._isInitialized) return;\r\n\r\n        if (this._impl && BulletCache.isNotEmptyShape(this._impl)) {\r\n            if (this._compound) { bt.CompoundShape_removeChildShape(this._compound, this._impl); }\r\n            bt._safe_delete(this._impl, EBulletType.EBulletTypeCollisionShape);\r\n            BulletCache.delWrapper(this._impl, BulletShape.TYPE);\r\n            this._impl = 0;\r\n        }\r\n\r\n        const mesh = v;\r\n        if (mesh && mesh.renderingSubMeshes.length > 0) {\r\n            if (this.collider.convex) {\r\n                const btTriangleMesh = this._getBtTriangleMesh(mesh);\r\n                this._impl = bt.ConvexTriangleMeshShape_new(btTriangleMesh);\r\n            } else {\r\n                this.btBVHMeshShape = BulletBvhTriangleMeshShape.getBulletBvhTriangleMeshShape(mesh.hash, mesh);\r\n                this._impl = bt.ScaledBvhTriangleMeshShape_new(this.btBVHMeshShape.bulletBvhTriangleMeshShapePtr, 1, 1, 1);\r\n            }\r\n            const bt_v3 = BulletCache.instance.BT_V3_0;\r\n            cocos2BulletVec3(bt_v3, this._collider.node.worldScale);\r\n            bt.CollisionShape_setLocalScaling(this._impl, bt_v3);\r\n            bt.CollisionShape_setMargin(this._impl, 0.01);\r\n            this.setCompound(this._compound);\r\n            this.updateByReAdd();\r\n            this.setWrapper();\r\n        } else {\r\n            this._impl = bt.EmptyShape_static();\r\n        }\r\n    }\r\n\r\n    private refBtTriangleMesh: Bullet.ptr = 0;\r\n\r\n    onComponentSet (): void {\r\n        this.setMesh(this.collider.mesh);\r\n    }\r\n\r\n    onDestroy (): void {\r\n        if (this.collider.convex) {\r\n            if (this.refBtTriangleMesh) {\r\n                bt._safe_delete(this.refBtTriangleMesh, EBulletType.EBulletTypeTriangleMesh);\r\n            }\r\n        } else if (this.btBVHMeshShape) {\r\n            this.btBVHMeshShape.reference = false;\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        cocos2BulletVec3(bt_v3, this._collider.node.worldScale);\r\n        bt.CollisionShape_setLocalScaling(this._impl, bt_v3);\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    private _getBtTriangleMesh (mesh: Mesh): Bullet.ptr {\r\n        this.refBtTriangleMesh = bt.TriangleMesh_new();\r\n        cocos2BulletTriMesh(this.refBtTriangleMesh, mesh);\r\n        return this.refBtTriangleMesh;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable new-cap */\r\nimport { BulletConstraint } from './bullet-constraint';\r\nimport { IConfigurableConstraint } from '../../spec/i-physics-constraint';\r\nimport { error, IVec3Like, Mat4, Quat, Vec3, toRadian } from '../../../core';\r\nimport { ConfigurableConstraint, EConstraintMode, EDriverMode, PhysicsSystem } from '../../framework';\r\nimport { bt, EBulletType } from '../instantiated';\r\nimport { BulletRigidBody } from '../bullet-rigid-body';\r\nimport { BulletCache, CC_QUAT_0, CC_QUAT_1, CC_V3_0, CC_MAT4_0, CC_V3_1 } from '../bullet-cache';\r\nimport { cocos2BulletQuat, cocos2BulletVec3, force2Impulse } from '../bullet-utils';\r\n\r\nenum RotateOrder {\r\n    RO_XYZ = 0,\r\n    RO_XZY,\r\n    RO_YXZ,\r\n    RO_YZX,\r\n    RO_ZXY,\r\n    RO_ZYX\r\n}\r\n\r\nenum BulletDofAxis {\r\n    X = 0,\r\n    Y = 1,\r\n    Z = 2,\r\n    TWIST = 3,\r\n    SWING1 = 4,\r\n    SWING2 = 5,\r\n}\r\n\r\n/** @mangle */\r\nexport class BulletConfigurableConstraint extends BulletConstraint implements IConfigurableConstraint {\r\n    private _setLimit (v: EConstraintMode, axis: number, lower: number, upper: number): void  {\r\n        switch (v) {\r\n        case EConstraintMode.LOCKED:\r\n            bt.Generic6DofSpring2Constraint_setLimit(this._impl, axis, 0, 0);\r\n            break;\r\n        case EConstraintMode.LIMITED:\r\n            bt.Generic6DofSpring2Constraint_setLimit(this._impl, axis, lower, upper);\r\n            break;\r\n        case EConstraintMode.FREE:\r\n            bt.Generic6DofSpring2Constraint_setLimit(this._impl, axis, 1, 0);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    setConstraintMode (idx: number, v: EConstraintMode): void {\r\n        const ll = this.constraint.linearLimitSettings;\r\n        const al = this.constraint.angularLimitSettings;\r\n\r\n        const lowers: number[] = [0, 0, 0];\r\n        const uppers: number[] = [0, 0, 0];\r\n\r\n        let upper = 0; let lower = 0;\r\n\r\n        switch (idx) {\r\n        case 0:\r\n        case 1:\r\n        case 2:\r\n            Vec3.toArray(lowers, ll.lower);\r\n            Vec3.toArray(uppers, ll.upper);\r\n            lower = lowers[idx];\r\n            upper = uppers[idx];\r\n            break;\r\n        case 3:\r\n            upper = toRadian(al.twistExtent) * 0.5;\r\n            lower = -upper;\r\n            break;\r\n        case 4:\r\n            upper = toRadian(al.swingExtent1) * 0.5;\r\n            lower = -upper;\r\n            break;\r\n        case 5:\r\n            upper = toRadian(al.swingExtent2) * 0.5;\r\n            lower = -upper;\r\n            break;\r\n\r\n        default:\r\n            error(`idx should be in [0, 5], but give ${idx}`);\r\n            break;\r\n        }\r\n\r\n        this._setLimit(v, idx, lower, upper);\r\n    }\r\n\r\n    setLinearLimit (idx: number, lower: number, upper: number): void {\r\n        let cm = 0;\r\n        const ll = this.constraint.linearLimitSettings;\r\n        switch (idx) {\r\n        case 0: cm = ll.xMotion; break;\r\n        case 1: cm = ll.yMotion; break;\r\n        case 2: cm = ll.zMotion; break;\r\n        default: break;\r\n        }\r\n        this._setLimit(cm, idx, lower, upper);\r\n    }\r\n    setAngularExtent (twist: number, swing1: number, swing2: number): void {\r\n        const al = this.constraint.angularLimitSettings;\r\n        this._setLimit(al.twistMotion, BulletDofAxis.TWIST, -toRadian(twist) * 0.5, toRadian(twist) * 0.5);\r\n        this._setLimit(al.swingMotion1, BulletDofAxis.SWING1, -toRadian(swing1) * 0.5, toRadian(swing1) * 0.5);\r\n        this._setLimit(al.swingMotion2, BulletDofAxis.SWING2, -toRadian(swing2) * 0.5, toRadian(swing2) * 0.5);\r\n    }\r\n    setSwingSoftConstraint (v: boolean): void {\r\n        bt.Generic6DofSpring2Constraint_enableSpring(this._impl, BulletDofAxis.SWING1, v);\r\n        bt.Generic6DofSpring2Constraint_enableSpring(this._impl, BulletDofAxis.SWING2, v);\r\n    }\r\n    setTwistSoftConstraint (v: boolean): void {\r\n        bt.Generic6DofSpring2Constraint_enableSpring(this._impl, BulletDofAxis.TWIST, v);\r\n    }\r\n    setLinearSoftConstraint (v: boolean): void {\r\n        bt.Generic6DofSpring2Constraint_enableSpring(this._impl, BulletDofAxis.X, v);\r\n        bt.Generic6DofSpring2Constraint_enableSpring(this._impl, BulletDofAxis.Y, v);\r\n        bt.Generic6DofSpring2Constraint_enableSpring(this._impl, BulletDofAxis.Z, v);\r\n    }\r\n    setLinearStiffness (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setStiffness(this._impl, BulletDofAxis.X, v);\r\n        bt.Generic6DofSpring2Constraint_setStiffness(this._impl, BulletDofAxis.Y, v);\r\n        bt.Generic6DofSpring2Constraint_setStiffness(this._impl, BulletDofAxis.Z, v);\r\n    }\r\n    setLinearDamping (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setDamping(this._impl, BulletDofAxis.X, v);\r\n        bt.Generic6DofSpring2Constraint_setDamping(this._impl, BulletDofAxis.Y, v);\r\n        bt.Generic6DofSpring2Constraint_setDamping(this._impl, BulletDofAxis.Z, v);\r\n    }\r\n    setLinearRestitution (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setBounce(this._impl, BulletDofAxis.X, v);\r\n        bt.Generic6DofSpring2Constraint_setBounce(this._impl, BulletDofAxis.Y, v);\r\n        bt.Generic6DofSpring2Constraint_setBounce(this._impl, BulletDofAxis.Z, v);\r\n    }\r\n    setSwingStiffness (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setStiffness(this._impl, BulletDofAxis.SWING1, v);\r\n        bt.Generic6DofSpring2Constraint_setStiffness(this._impl, BulletDofAxis.SWING2, v);\r\n    }\r\n    setSwingDamping (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setDamping(this._impl, BulletDofAxis.SWING1, v);\r\n        bt.Generic6DofSpring2Constraint_setDamping(this._impl, BulletDofAxis.SWING2, v);\r\n    }\r\n    setSwingRestitution (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setBounce(this._impl, BulletDofAxis.SWING1, v);\r\n        bt.Generic6DofSpring2Constraint_setBounce(this._impl, BulletDofAxis.SWING2, v);\r\n    }\r\n    setTwistStiffness (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setStiffness(this._impl, BulletDofAxis.TWIST, v);\r\n    }\r\n    setTwistDamping (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setDamping(this._impl, BulletDofAxis.TWIST, v);\r\n    }\r\n    setTwistRestitution (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setBounce(this._impl, BulletDofAxis.TWIST, v);\r\n    }\r\n\r\n    setDriverMode (idx: number, v: EDriverMode): void {\r\n        if (v === EDriverMode.DISABLED) {\r\n            bt.Generic6DofSpring2Constraint_enableMotor(this._impl, idx, false);\r\n        } else if (v === EDriverMode.SERVO) {\r\n            bt.Generic6DofSpring2Constraint_enableMotor(this._impl, idx, true);\r\n            bt.Generic6DofSpring2Constraint_setServo(this._impl, idx, true);\r\n        } else if (v === EDriverMode.INDUCTION) {\r\n            bt.Generic6DofSpring2Constraint_enableMotor(this._impl, idx, true);\r\n            bt.Generic6DofSpring2Constraint_setServo(this._impl, idx, false);\r\n        }\r\n    }\r\n\r\n    _updateMotorTargetAndVelocity (index: number): void {\r\n        let mode = EDriverMode.DISABLED;\r\n        let axis = 0;\r\n        let target = 0;\r\n        let velocity = 0;\r\n        const ld = this.constraint.linearDriverSettings;\r\n        const ad = this.constraint.angularDriverSettings;\r\n        switch (index) {\r\n        case 0:\r\n            axis = BulletDofAxis.X;\r\n            mode = ld.xDrive;\r\n            target = ld.targetPosition.x;\r\n            velocity = -ld.targetVelocity.x;\r\n            break;\r\n        case 1:\r\n            axis = BulletDofAxis.Y;\r\n            mode = ld.yDrive;\r\n            target = ld.targetPosition.y;\r\n            velocity = -ld.targetVelocity.y;\r\n            break;\r\n        case 2:\r\n            axis = BulletDofAxis.Z;\r\n            mode = ld.zDrive;\r\n            target = ld.targetPosition.z;\r\n            velocity = -ld.targetVelocity.z;\r\n            break;\r\n        case 3:\r\n            axis = BulletDofAxis.TWIST;\r\n            mode = ad.twistDrive;\r\n            target = -toRadian(ad.targetOrientation.x);\r\n            velocity = -toRadian(ad.targetVelocity.x);\r\n            break;\r\n        case 4: axis = BulletDofAxis.SWING1;\r\n            mode = ad.swingDrive1;\r\n            target = -toRadian(ad.targetOrientation.y);\r\n            velocity = -toRadian(ad.targetVelocity.y);\r\n            break;\r\n        case 5: axis = BulletDofAxis.SWING2;\r\n            mode = ad.swingDrive2;\r\n            target = -toRadian(ad.targetOrientation.z);\r\n            velocity = -toRadian(ad.targetVelocity.z);\r\n            break;\r\n        default: break;\r\n        }\r\n        const strength = index > 2 ? ad.strength : ld.strength;\r\n        bt.Generic6DofSpring2Constraint_setServoTarget(this._impl, axis, target);\r\n        if (mode === EDriverMode.SERVO) {\r\n            if (index > 2) {\r\n                bt.Generic6DofSpring2Constraint_setTargetVelocity(this._impl, axis, -target * strength * 0.1);\r\n            } else {\r\n                bt.Generic6DofSpring2Constraint_setTargetVelocity(this._impl, axis, target * strength * 0.1);\r\n            }\r\n        } else if (mode === EDriverMode.INDUCTION) {\r\n            bt.Generic6DofSpring2Constraint_setTargetVelocity(this._impl, axis, velocity);\r\n        }\r\n    }\r\n\r\n    setLinearMotorTarget (v: IVec3Like): void {\r\n        this._updateMotorTargetAndVelocity(0);\r\n        this._updateMotorTargetAndVelocity(1);\r\n        this._updateMotorTargetAndVelocity(2);\r\n    }\r\n    setLinearMotorVelocity (v: IVec3Like): void {\r\n        this._updateMotorTargetAndVelocity(0);\r\n        this._updateMotorTargetAndVelocity(1);\r\n        this._updateMotorTargetAndVelocity(2);\r\n    }\r\n    setLinearMotorForceLimit (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setMaxMotorForce(this._impl, BulletDofAxis.X, v);\r\n        bt.Generic6DofSpring2Constraint_setMaxMotorForce(this._impl, BulletDofAxis.Y, v);\r\n        bt.Generic6DofSpring2Constraint_setMaxMotorForce(this._impl, BulletDofAxis.Z, v);\r\n    }\r\n\r\n    setAngularMotorTarget (v: IVec3Like): void {\r\n        this._updateMotorTargetAndVelocity(3);\r\n        this._updateMotorTargetAndVelocity(4);\r\n        this._updateMotorTargetAndVelocity(5);\r\n    }\r\n    setAngularMotorVelocity (v: IVec3Like): void {\r\n        this._updateMotorTargetAndVelocity(3);\r\n        this._updateMotorTargetAndVelocity(4);\r\n        this._updateMotorTargetAndVelocity(5);\r\n    }\r\n    setAngularMotorForceLimit (v: number): void {\r\n        bt.Generic6DofSpring2Constraint_setMaxMotorForce(this._impl, BulletDofAxis.TWIST, v);\r\n        bt.Generic6DofSpring2Constraint_setMaxMotorForce(this._impl, BulletDofAxis.SWING1, v);\r\n        bt.Generic6DofSpring2Constraint_setMaxMotorForce(this._impl, BulletDofAxis.SWING2, v);\r\n    }\r\n\r\n    setPivotA (v: IVec3Like): void {\r\n        this.updateFrames();\r\n    }\r\n    setPivotB (v: IVec3Like): void {\r\n        this.updateFrames();\r\n    }\r\n\r\n    setAutoPivotB (v: boolean): void {\r\n        this.updateFrames();\r\n    }\r\n\r\n    setAxis (v: IVec3Like): void {\r\n        this.updateFrames();\r\n    }\r\n    setSecondaryAxis (v: IVec3Like): void {\r\n        this.updateFrames();\r\n    }\r\n    setBreakForce (v: number): void {\r\n        const maxForce = Math.max(this.constraint.breakForce, this.constraint.breakTorque);\r\n        const impulse = force2Impulse(maxForce, PhysicsSystem.instance.fixedTimeStep);\r\n        bt.TypedConstraint_setMaxImpulseThreshold(this._impl, impulse);\r\n    }\r\n    setBreakTorque (v: number): void {\r\n        const maxForce = Math.max(this.constraint.breakForce, this.constraint.breakTorque);\r\n        const impulse = force2Impulse(maxForce, PhysicsSystem.instance.fixedTimeStep);\r\n        bt.TypedConstraint_setMaxImpulseThreshold(this._impl, impulse);\r\n    }\r\n\r\n    get constraint (): ConfigurableConstraint {\r\n        return this._com as ConfigurableConstraint;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        const cb = this.constraint.connectedBody;\r\n        const bodyA = (this._rigidBody.body as BulletRigidBody).impl;\r\n        const bodyB = (cb && (cb.body as BulletRigidBody).impl) || bt.TypedConstraint_getFixedBody();\r\n        const trans0 = BulletCache.instance.BT_TRANSFORM_0;\r\n        const trans1 = BulletCache.instance.BT_TRANSFORM_1;\r\n        this._impl = bt.Generic6DofSpring2Constraint_new(bodyA, bodyB, trans0, trans1, RotateOrder.RO_YZX);\r\n\r\n        const linearLimit = this.constraint.linearLimitSettings;\r\n        const angularLimit = this.constraint.angularLimitSettings;\r\n        // they set limits implicitly\r\n        this.setConstraintMode(0, linearLimit.xMotion);\r\n        this.setConstraintMode(1, linearLimit.yMotion);\r\n        this.setConstraintMode(2, linearLimit.zMotion);\r\n        this.setConstraintMode(3, angularLimit.twistMotion);\r\n        this.setConstraintMode(4, angularLimit.swingMotion1);\r\n        this.setConstraintMode(5, angularLimit.swingMotion2);\r\n\r\n        this.setLinearSoftConstraint(linearLimit.enableSoftConstraint);\r\n        this.setLinearStiffness(linearLimit.stiffness);\r\n        this.setLinearDamping(linearLimit.damping);\r\n        this.setLinearRestitution(linearLimit.restitution);\r\n\r\n        this.setSwingSoftConstraint(angularLimit.enableSoftConstraintSwing);\r\n        this.setSwingRestitution(angularLimit.swingRestitution);\r\n        this.setSwingStiffness(angularLimit.swingStiffness);\r\n        this.setSwingDamping(angularLimit.swingDamping);\r\n\r\n        this.setTwistSoftConstraint(angularLimit.enableSoftConstraintTwist);\r\n        this.setTwistRestitution(angularLimit.twistRestitution);\r\n        this.setTwistStiffness(angularLimit.twistStiffness);\r\n        this.setTwistDamping(angularLimit.twistDamping);\r\n\r\n        const linearMotor = this.constraint.linearDriverSettings;\r\n        const angularMotor = this.constraint.angularDriverSettings;\r\n\r\n        this.setDriverMode(0, linearMotor.xDrive);\r\n        this.setDriverMode(1, linearMotor.yDrive);\r\n        this.setDriverMode(2, linearMotor.zDrive);\r\n        this.setDriverMode(3, angularMotor.twistDrive);\r\n        this.setDriverMode(4, angularMotor.swingDrive1);\r\n        this.setDriverMode(5, angularMotor.swingDrive2);\r\n\r\n        this.setLinearMotorTarget(linearMotor.targetPosition);\r\n        this.setLinearMotorVelocity(linearMotor.targetVelocity);\r\n        this.setLinearMotorForceLimit(linearMotor.strength);\r\n\r\n        this.setAngularMotorTarget(angularMotor.targetOrientation);\r\n        this.setAngularMotorVelocity(angularMotor.targetVelocity);\r\n        this.setAngularMotorForceLimit(angularMotor.strength);\r\n\r\n        this.setBreakForce(this.constraint.breakForce);\r\n        this.setBreakTorque(this.constraint.breakTorque);\r\n\r\n        this.updateFrames();\r\n        this.updateDebugDrawSize();\r\n    }\r\n\r\n    updateFrames (): void {\r\n        const cs = this.constraint;\r\n        const node = cs.node;\r\n        const v3_0 = CC_V3_0;\r\n        const rot_0 = CC_QUAT_0;\r\n        const rot_1 = CC_QUAT_1;\r\n        const trans0 = bt.Transform_new();\r\n        Vec3.multiply(v3_0, node.worldScale, cs.pivotA);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(trans0), v3_0);\r\n        const quat = bt.Quat_new(0, 0, 0, 1);\r\n\r\n        const axisX = cs.axis;\r\n        const axisY = cs.secondaryAxis;\r\n        const axisZ = Vec3.cross(CC_V3_1, axisX, axisY);\r\n\r\n        const mat = Mat4.set(\r\n            CC_MAT4_0,\r\n            axisX.x,\r\n            axisX.y,\r\n            axisX.z,\r\n            0,\r\n            axisY.x,\r\n            axisY.y,\r\n            axisY.z,\r\n            0,\r\n            axisZ.x,\r\n            axisZ.y,\r\n            axisZ.z,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n        );\r\n        mat.getRotation(rot_0);\r\n\r\n        cocos2BulletQuat(quat, rot_0);\r\n        bt.Transform_setRotation(trans0, quat);\r\n\r\n        const trans1 = bt.Transform_new();\r\n        const cb = this.constraint.connectedBody;\r\n        if (cb) {\r\n            Quat.multiply(rot_0, node.worldRotation, rot_0);\r\n            Quat.invert(rot_1, cb.node.worldRotation);\r\n            Quat.multiply(rot_0, rot_1, rot_0);\r\n            if (cs.autoPivotB) {\r\n                Vec3.multiply(v3_0, cs.node.worldScale, cs.pivotA);\r\n                Vec3.transformQuat(v3_0, v3_0, node.worldRotation);\r\n                Vec3.add(v3_0, v3_0, cs.node.worldPosition);\r\n                Vec3.subtract(v3_0, v3_0, cb.node.worldPosition);\r\n                Vec3.transformQuat(v3_0, v3_0, rot_1);\r\n            } else {\r\n                Vec3.multiply(v3_0, cb.node.worldScale, cs.pivotB);\r\n            }\r\n        } else {\r\n            Vec3.multiply(v3_0, node.worldScale, cs.pivotA);\r\n            Vec3.transformQuat(v3_0, v3_0, node.worldRotation);\r\n            Vec3.add(v3_0, v3_0, node.worldPosition);\r\n            Quat.multiply(rot_0, node.worldRotation, rot_0);\r\n        }\r\n        cocos2BulletVec3(bt.Transform_getOrigin(trans1), v3_0);\r\n        cocos2BulletQuat(quat, rot_0);\r\n        bt.Transform_setRotation(trans1, quat);\r\n        bt.Generic6DofSpring2Constraint_setFrames(this._impl, trans0, trans1);\r\n\r\n        bt._safe_delete(trans0, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(trans1, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(quat, EBulletType.EBulletTypeQuat);\r\n    }\r\n\r\n    updateScale0 (): void {\r\n        this.updateFrames();\r\n    }\r\n    updateScale1 (): void {\r\n        this.updateFrames();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { CylinderCollider } from '../../../../exports/physics-framework';\r\nimport { ICylinderShape } from '../../spec/i-physics-shape';\r\nimport { IVec3Like, absMax } from '../../../core';\r\nimport { BulletCache } from '../bullet-cache';\r\nimport { bt } from '../instantiated';\r\n\r\n/** @mangle */\r\nexport class BulletCylinderShape extends BulletShape implements ICylinderShape {\r\n    setHeight (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.height,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    setDirection (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.height,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    setRadius (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.height,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    get collider (): CylinderCollider {\r\n        return this._collider as CylinderCollider;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        bt.Vec3_set(bt_v3, 0.5, 1, 0.5);\r\n        this._impl = bt.CylinderShape_new(bt_v3);\r\n        this.setRadius(this.collider.radius);\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        this.setRadius(this.collider.radius);\r\n    }\r\n\r\n    updateProperties (radius: number, height: number, direction: number, scale: IVec3Like): void {\r\n        const ws = scale;\r\n        const upAxis = direction;\r\n        let wr: number; let wh: number;\r\n        if (upAxis === 1) {\r\n            wh = height * Math.abs(ws.y); wr = radius * Math.abs(absMax(ws.x, ws.z));\r\n        } else if (upAxis === 0) {\r\n            wh = height * Math.abs(ws.x); wr = radius * Math.abs(absMax(ws.y, ws.z));\r\n        } else {\r\n            wh = height * Math.abs(ws.z); wr = radius * Math.abs(absMax(ws.x, ws.y));\r\n        }\r\n        bt.CylinderShape_updateProp(this._impl, wr, wh / 2, upAxis);\r\n        this.updateCompoundTransform();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { ConeCollider } from '../../../../exports/physics-framework';\r\nimport { ICylinderShape } from '../../spec/i-physics-shape';\r\nimport { IVec3Like, absMax } from '../../../core';\r\nimport { bt } from '../instantiated';\r\nimport { BulletCache } from '../bullet-cache';\r\n\r\n/** @mangle */\r\nexport class BulletConeShape extends BulletShape implements ICylinderShape {\r\n    setHeight (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.height,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    setDirection (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.height,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    setRadius (v: number): void {\r\n        this.updateProperties(\r\n            this.collider.radius,\r\n            this.collider.height,\r\n            this.collider.direction,\r\n            this._collider.node.worldScale,\r\n        );\r\n    }\r\n\r\n    get impl (): number {\r\n        return this._impl;\r\n    }\r\n\r\n    get collider (): ConeCollider {\r\n        return this._collider as ConeCollider;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        this._impl = bt.ConeShape_new(0.5, 1);\r\n        this.setRadius(this.collider.radius);\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        this.setRadius(this.collider.radius);\r\n    }\r\n\r\n    updateProperties (radius: number, height: number, direction: number, scale: IVec3Like): void {\r\n        const ws = scale;\r\n        const upAxis = direction;\r\n        let wr: number; let wh: number;\r\n        if (upAxis === 1) {\r\n            wh = height * Math.abs(ws.y);\r\n            wr = radius * Math.abs(absMax(ws.x, ws.z));\r\n        } else if (upAxis === 0) {\r\n            wh = height * Math.abs(ws.x);\r\n            wr = radius * Math.abs(absMax(ws.y, ws.z));\r\n        } else {\r\n            wh = height * Math.abs(ws.z);\r\n            wr = radius * Math.abs(absMax(ws.x, ws.y));\r\n        }\r\n        bt.ConeShape_setRadius(this._impl, wr);\r\n        bt.ConeShape_setHeight(this._impl, wh);\r\n        bt.ConeShape_setConeUpIndex(this._impl, upAxis);\r\n\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        bt.Vec3_set(bt_v3, 1, 1, 1);\r\n        bt.CollisionShape_setLocalScaling(this._impl, bt_v3);\r\n        this.updateCompoundTransform();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { Vec3, warn, IVec3Like } from '../../../core';\r\nimport { TerrainCollider } from '../../../../exports/physics-framework';\r\nimport { cocos2BulletVec3 } from '../bullet-utils';\r\nimport { ITerrainShape } from '../../spec/i-physics-shape';\r\nimport { ITerrainAsset } from '../../spec/i-external';\r\nimport { CC_V3_0, BulletCache } from '../bullet-cache';\r\nimport { bt } from '../instantiated';\r\n\r\n/** @mangle */\r\nexport class BulletTerrainShape extends BulletShape implements ITerrainShape {\r\n    public get collider (): TerrainCollider {\r\n        return this._collider as TerrainCollider;\r\n    }\r\n\r\n    setTerrain (v: ITerrainAsset | null): void {\r\n        if (!this._isInitialized) return;\r\n\r\n        if (this._impl && BulletCache.isNotEmptyShape(this._impl)) {\r\n            // TODO: change the terrain asset after initialization\r\n            warn('[Physics][Bullet]: change the terrain asset after initialization is not support.');\r\n        } else {\r\n            const terrain = v;\r\n            if (terrain) {\r\n                this._tileSize = terrain.tileSize;\r\n                const sizeI = terrain.getVertexCountI();\r\n                const sizeJ = terrain.getVertexCountJ();\r\n                this._bufPtr = bt._malloc(4 * sizeI * sizeJ);\r\n                let offset = 0;\r\n                let min = Number.MAX_SAFE_INTEGER;\r\n                let max = Number.MIN_SAFE_INTEGER;\r\n                for (let j = 0; j < sizeJ; j++) {\r\n                    for (let i = 0; i < sizeI; i++) {\r\n                        const v = terrain.getHeight(i, j);\r\n                        bt._write_f32(this._bufPtr + offset, v);\r\n                        if (min > v) min = v;\r\n                        if (v > max) max = v;\r\n                        offset += 4;\r\n                    }\r\n                }\r\n                max += 0.01; min -= 0.01;\r\n                this._localOffset.set((sizeI - 1) / 2 * this._tileSize, (max + min) / 2, (sizeJ - 1) / 2 * this._tileSize);\r\n                this._impl = bt.TerrainShape_new(sizeI, sizeJ, this._bufPtr, 1, min, max);\r\n                const bt_v3 = BulletCache.instance.BT_V3_0;\r\n                bt.Vec3_set(bt_v3, this._tileSize, 1, this._tileSize);\r\n                bt.CollisionShape_setLocalScaling(this._impl, bt_v3);\r\n                this.setCompound(this._compound);\r\n                this.updateByReAdd();\r\n                this.setWrapper();\r\n            } else {\r\n                this._impl = bt.EmptyShape_static();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _bufPtr = 0;\r\n    private _tileSize = 0;\r\n    private _localOffset = new Vec3();\r\n\r\n    onComponentSet (): void {\r\n        this.setTerrain(this.collider.terrain);\r\n    }\r\n\r\n    onDestroy (): void {\r\n        if (this._bufPtr) bt._free(this._bufPtr);\r\n        super.onDestroy();\r\n    }\r\n\r\n    setCenter (v: IVec3Like): void {\r\n        Vec3.copy(CC_V3_0, v);\r\n        CC_V3_0.add(this._localOffset);\r\n        // CC_V3_0.multiply(this._collider.node.worldScale);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(this.transform), CC_V3_0);\r\n        this.updateCompoundTransform();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { SimplexCollider } from '../../../../exports/physics-framework';\r\nimport { cocos2BulletVec3 } from '../bullet-utils';\r\nimport { ISimplexShape } from '../../spec/i-physics-shape';\r\nimport { IVec3Like } from '../../../core';\r\nimport { bt } from '../instantiated';\r\nimport { BulletCache } from '../bullet-cache';\r\n\r\n/** @mangle */\r\nexport class BulletSimplexShape extends BulletShape implements ISimplexShape {\r\n    setShapeType (v: SimplexCollider.ESimplexType): void {\r\n        // TODO:\r\n    }\r\n\r\n    setVertices (v: IVec3Like[]): void {\r\n        // TODO:\r\n    }\r\n\r\n    get collider (): SimplexCollider {\r\n        return this._collider as SimplexCollider;\r\n    }\r\n\r\n    protected onComponentSet (): void {\r\n        this._impl = bt.SimplexShape_new();\r\n        const length = this.collider.shapeType;\r\n        const vertices = this.collider.vertices;\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        for (let i = 0; i < length; i++) {\r\n            bt.SimplexShape_addVertex(this._impl, cocos2BulletVec3(bt_v3, vertices[i]));\r\n        }\r\n        bt.CollisionShape_setLocalScaling(this._impl, cocos2BulletVec3(bt_v3, this._collider.node.worldScale));\r\n    }\r\n\r\n    onLoad (): void {\r\n        super.onLoad();\r\n        this.collider.updateVertices();\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        bt.CollisionShape_setLocalScaling(this._impl, cocos2BulletVec3(bt_v3, this._collider.node.worldScale));\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BulletShape } from './bullet-shape';\r\nimport { PlaneCollider } from '../../../../exports/physics-framework';\r\nimport { cocos2BulletVec3 } from '../bullet-utils';\r\nimport { IPlaneShape } from '../../spec/i-physics-shape';\r\nimport { IVec3Like } from '../../../core';\r\nimport { BulletCache } from '../bullet-cache';\r\nimport { bt } from '../instantiated';\r\n\r\n/** @mangle */\r\nexport class BulletPlaneShape extends BulletShape implements IPlaneShape {\r\n    setNormal (v: IVec3Like): void {\r\n        cocos2BulletVec3(bt.StaticPlaneShape_getPlaneNormal(this.impl), v);\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    setConstant (v: number): void {\r\n        bt.StaticPlaneShape_setPlaneConstant(this.impl, v);\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    updateScale (): void {\r\n        super.updateScale();\r\n        const bt_v3 = BulletCache.instance.BT_V3_0;\r\n        cocos2BulletVec3(bt_v3, this._collider.node.worldScale);\r\n        bt.CollisionShape_setLocalScaling(this._impl, bt_v3);\r\n        this.updateCompoundTransform();\r\n    }\r\n\r\n    get collider (): PlaneCollider {\r\n        return this._collider as PlaneCollider;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        const normal = BulletCache.instance.BT_V3_0;\r\n        cocos2BulletVec3(normal, this.collider.normal);\r\n        this._impl = bt.StaticPlaneShape_new(normal, this.collider.constant);\r\n        this.updateScale();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable new-cap */\r\nimport { IBaseConstraint } from '../../spec/i-physics-constraint';\r\nimport { Constraint, PhysicsSystem, RigidBody } from '../../framework';\r\nimport { BulletRigidBody } from '../bullet-rigid-body';\r\nimport { bt, EBulletType } from '../instantiated';\r\nimport { BulletWorld } from '../bullet-world';\r\n\r\n/** @mangle */\r\nexport abstract class BulletConstraint implements IBaseConstraint {\r\n    setConnectedBody (v: RigidBody | null): void {\r\n        if (this._connectedBody === v) return;\r\n        // clear old joint info\r\n        const oldBody2 = this._connectedBody;\r\n        if (oldBody2) {\r\n            const oldSB2 = (oldBody2.body as BulletRigidBody).sharedBody;\r\n            oldSB2.removeJoint(this, 1);\r\n        }\r\n\r\n        const sb = (this._rigidBody.body as BulletRigidBody).sharedBody;\r\n        sb.removeJoint(this, 0);\r\n        if (this._impl) {\r\n            sb.wrappedWorld.removeConstraint(this);\r\n            bt._safe_delete(this._impl, EBulletType.EBulletTypeTypedConstraint); // delete old bullet constraint\r\n        }\r\n\r\n        this._connectedBody = v;\r\n        const connect = this._connectedBody;\r\n        // create the new joint\r\n        this.onComponentSet();\r\n        this.setEnableCollision(this._collided);\r\n        sb.wrappedWorld.addConstraint(this);\r\n        sb.addJoint(this, 0);\r\n        // fill new joint info\r\n        if (connect) {\r\n            const sb2 = (connect.body as BulletRigidBody).sharedBody;\r\n            sb2.addJoint(this, 1);\r\n        }\r\n    }\r\n\r\n    setEnableCollision (v: boolean): void {\r\n        if (this._collided !== v) {\r\n            this._collided = v;\r\n            this.updateByReAdd();\r\n        }\r\n    }\r\n\r\n    get impl (): number {\r\n        return this._impl;\r\n    }\r\n\r\n    get constraint (): Constraint {\r\n        return this._com;\r\n    }\r\n\r\n    dirty = 0;\r\n    index = -1;\r\n\r\n    protected _impl: Bullet.ptr = 0;\r\n    protected _com!: Constraint;\r\n    protected _rigidBody!: RigidBody;\r\n    protected _connectedBody: RigidBody | null = null;\r\n    protected _collided = false;\r\n\r\n    updateByReAdd (): void {\r\n        if (this._rigidBody && this.index >= 0) {\r\n            const sb = (this._rigidBody.body as BulletRigidBody).sharedBody;\r\n            sb.wrappedWorld.removeConstraint(this);\r\n            sb.wrappedWorld.addConstraint(this);\r\n        }\r\n    }\r\n\r\n    initialize (v: Constraint): void {\r\n        this._com = v;\r\n        this._rigidBody = v.attachedBody!;\r\n        this._connectedBody = v.connectedBody;\r\n        this._collided = v.enableCollision;\r\n        this.onComponentSet();\r\n        this.setEnableCollision(this._collided);\r\n    }\r\n\r\n    updateDebugDrawSize (): void {\r\n        if (this.impl) {\r\n            const size = (PhysicsSystem.instance.physicsWorld as BulletWorld).debugDrawConstraintSize;\r\n            bt.TypedConstraint_setDbgDrawSize(this.impl, size);\r\n        }\r\n    }\r\n\r\n    // virtual\r\n    protected abstract onComponentSet(): void;\r\n\r\n    abstract updateScale0(): void;\r\n    abstract updateScale1(): void;\r\n\r\n    onEnable (): void {\r\n        const sb = (this._rigidBody.body as BulletRigidBody).sharedBody;\r\n        sb.wrappedWorld.addConstraint(this);\r\n        sb.addJoint(this, 0);\r\n        const connect = this._connectedBody;\r\n        if (connect) {\r\n            const sb2 = (connect.body as BulletRigidBody).sharedBody;\r\n            sb2.addJoint(this, 1);\r\n        }\r\n    }\r\n\r\n    onDisable (): void {\r\n        const sb = (this._rigidBody.body as BulletRigidBody).sharedBody;\r\n        sb.wrappedWorld.removeConstraint(this);\r\n        sb.removeJoint(this, 0);\r\n        const connect = this._connectedBody;\r\n        if (connect) {\r\n            const sb2 = (connect.body as BulletRigidBody).sharedBody;\r\n            sb2.removeJoint(this, 1);\r\n        }\r\n    }\r\n\r\n    onDestroy (): void {\r\n        bt._safe_delete(this._impl, EBulletType.EBulletTypeTypedConstraint);\r\n        (this._com as any) = null;\r\n        (this._rigidBody as any) = null;\r\n        (this._connectedBody as any) = null;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable new-cap */\r\nimport { BulletConstraint } from './bullet-constraint';\r\nimport { IPointToPointConstraint } from '../../spec/i-physics-constraint';\r\nimport { IVec3Like, Vec3 } from '../../../core';\r\nimport { PointToPointConstraint } from '../../framework';\r\nimport { BulletRigidBody } from '../bullet-rigid-body';\r\nimport { BulletCache, CC_V3_0 } from '../bullet-cache';\r\nimport { bt } from '../instantiated';\r\nimport { cocos2BulletVec3 } from '../bullet-utils';\r\n\r\n/** @mangle */\r\nexport class BulletP2PConstraint extends BulletConstraint implements IPointToPointConstraint {\r\n    setPivotA (v: IVec3Like): void {\r\n        const cs = this.constraint;\r\n        const pivotA = BulletCache.instance.BT_V3_0;\r\n        Vec3.multiply(CC_V3_0, cs.node.worldScale, cs.pivotA);\r\n        cocos2BulletVec3(pivotA, CC_V3_0);\r\n        bt.P2PConstraint_setPivotA(this._impl, pivotA);\r\n        if (!cs.connectedBody) this.setPivotB(cs.pivotB);\r\n    }\r\n\r\n    setPivotB (v: IVec3Like): void {\r\n        const cs = this.constraint;\r\n        const node = this._rigidBody.node;\r\n        const pivotB = BulletCache.instance.BT_V3_0;\r\n        const cb = cs.connectedBody;\r\n        if (cb) {\r\n            Vec3.multiply(CC_V3_0, cb.node.worldScale, cs.pivotB);\r\n            cocos2BulletVec3(pivotB, CC_V3_0);\r\n        } else {\r\n            Vec3.multiply(CC_V3_0, node.worldScale, cs.pivotA);\r\n            Vec3.transformQuat(CC_V3_0, CC_V3_0, node.worldRotation);\r\n            Vec3.add(CC_V3_0, CC_V3_0, node.worldPosition);\r\n            cocos2BulletVec3(pivotB, CC_V3_0);\r\n        }\r\n        bt.P2PConstraint_setPivotB(this._impl, pivotB);\r\n    }\r\n\r\n    get constraint (): PointToPointConstraint {\r\n        return this._com as PointToPointConstraint;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        const cb = this.constraint.connectedBody;\r\n        const bodyA = (this._rigidBody.body as BulletRigidBody).impl;\r\n        const bodyB = cb ? (cb.body as BulletRigidBody).impl : bt.TypedConstraint_getFixedBody();\r\n        const pivotA = BulletCache.instance.BT_V3_0;\r\n        const pivotB = BulletCache.instance.BT_V3_1;\r\n        this._impl = bt.P2PConstraint_new(bodyA, bodyB, pivotA, pivotB);\r\n        this.setPivotA(this.constraint.pivotA);\r\n        this.setPivotB(this.constraint.pivotB);\r\n        this.updateDebugDrawSize();\r\n    }\r\n\r\n    updateScale0 (): void {\r\n        this.setPivotA(this.constraint.pivotA);\r\n    }\r\n\r\n    updateScale1 (): void {\r\n        this.setPivotB(this.constraint.pivotB);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable new-cap */\r\nimport { BulletConstraint } from './bullet-constraint';\r\nimport { IFixedConstraint } from '../../spec/i-physics-constraint';\r\nimport { Mat4 } from '../../../core';\r\nimport { FixedConstraint } from '../../framework';\r\nimport { BulletRigidBody } from '../bullet-rigid-body';\r\nimport { BulletCache, CC_MAT4_0, CC_QUAT_0, CC_V3_0 } from '../bullet-cache';\r\nimport { bt, EBulletType } from '../instantiated';\r\nimport { cocos2BulletQuat, cocos2BulletVec3 } from '../bullet-utils';\r\n\r\n/** @mangle */\r\nexport class BulletFixedConstraint extends BulletConstraint implements IFixedConstraint {\r\n    setBreakForce (v: number): void {\r\n        bt.TypedConstraint_setMaxImpulseThreshold(this._impl, v);\r\n    }\r\n\r\n    setBreakTorque (v: number): void {\r\n        // not supported\r\n    }\r\n\r\n    get constraint (): FixedConstraint {\r\n        return this._com as FixedConstraint;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        const cb = this.constraint.connectedBody;\r\n        const bodyA = (this._rigidBody.body as BulletRigidBody).impl;\r\n        const bodyB = cb ? (cb.body as BulletRigidBody).impl : bt.TypedConstraint_getFixedBody();\r\n        const trans0 = BulletCache.instance.BT_TRANSFORM_0;\r\n        const trans1 = BulletCache.instance.BT_TRANSFORM_1;\r\n        this._impl = bt.FixedConstraint_new(bodyA, bodyB, trans0, trans1);\r\n        this.setBreakForce(this.constraint.breakForce);\r\n        this.setBreakTorque(this.constraint.breakTorque);\r\n        this.updateFrames();\r\n        this.updateDebugDrawSize();\r\n    }\r\n\r\n    updateFrames (): void {\r\n        const cb = this.constraint.connectedBody;\r\n        const bodyA = (this._rigidBody.body as BulletRigidBody).sharedBody;\r\n\r\n        const pos = CC_V3_0;\r\n        const rot = CC_QUAT_0;\r\n        const trans0 = bt.Transform_new();\r\n        const trans1 = bt.Transform_new();\r\n        const quat = bt.Quat_new(0, 0, 0, 1);\r\n\r\n        const trans = CC_MAT4_0;\r\n        // the local frame transform respect to bodyA\r\n        Mat4.fromRT(trans, bodyA.node.worldRotation, bodyA.node.worldPosition);\r\n        Mat4.invert(trans, trans);\r\n        Mat4.getRotation(rot, trans);\r\n        Mat4.getTranslation(pos, trans);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(trans0), pos);\r\n        cocos2BulletQuat(quat, rot);\r\n        bt.Transform_setRotation(trans0, quat);\r\n\r\n        if (cb) {\r\n            // the local frame transform respect to bodyB\r\n            const bodyB = (cb.body as BulletRigidBody).sharedBody;\r\n            Mat4.fromRT(trans, bodyB.node.worldRotation, bodyB.node.worldPosition);\r\n            Mat4.invert(trans, trans);\r\n            Mat4.getRotation(rot, trans);\r\n            Mat4.getTranslation(pos, trans);\r\n            cocos2BulletVec3(bt.Transform_getOrigin(trans1), pos);\r\n            cocos2BulletQuat(quat, rot);\r\n            bt.Transform_setRotation(trans1, quat);\r\n        } else {\r\n            bt.Transform_setIdentity(trans1);\r\n        }\r\n\r\n        bt.FixedConstraint_setFrames(this._impl, trans0, trans1);\r\n        bt._safe_delete(trans0, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(trans1, EBulletType.EBulletTypeTransform);\r\n        bt._safe_delete(quat, EBulletType.EBulletTypeQuat);\r\n    }\r\n\r\n    updateScale0 (): void {\r\n        this.updateFrames();\r\n    }\r\n\r\n    updateScale1 (): void {\r\n        this.updateFrames();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable new-cap */\r\nimport { BulletConstraint } from './bullet-constraint';\r\nimport { IHingeConstraint } from '../../spec/i-physics-constraint';\r\nimport { IVec3Like, Quat, Vec3 } from '../../../core';\r\nimport { HingeConstraint, PhysicsSystem } from '../../framework';\r\nimport { BulletRigidBody } from '../bullet-rigid-body';\r\nimport { BulletCache, CC_QUAT_0, CC_QUAT_1, CC_V3_0 } from '../bullet-cache';\r\nimport { bt } from '../instantiated';\r\nimport { cocos2BulletQuat, cocos2BulletVec3, force2Impulse } from '../bullet-utils';\r\nimport { toRadian } from '../../../core/math';\r\n\r\n/** @mangle */\r\nexport class BulletHingeConstraint extends BulletConstraint implements IHingeConstraint {\r\n    setPivotA (v: IVec3Like): void {\r\n        this.updateFrames();\r\n    }\r\n\r\n    setPivotB (v: IVec3Like): void {\r\n        this.updateFrames();\r\n    }\r\n\r\n    setAxis (v: IVec3Like): void {\r\n        this.updateFrames();\r\n    }\r\n\r\n    setLimitEnabled (v: boolean): void {\r\n        if (this.constraint.limitEnabled) {\r\n            bt.HingeConstraint_setLimit(this._impl, toRadian(this.constraint.lowerLimit), toRadian(this.constraint.upperLimit), 0.9, 0.3, 1.0);\r\n        } else {\r\n            bt.HingeConstraint_setLimit(this._impl, 1, 0, 0.9, 0.3, 1.0);\r\n        }\r\n    }\r\n    setLowerLimit (min: number): void {\r\n        if (this.constraint.limitEnabled) {\r\n            bt.HingeConstraint_setLimit(this._impl, toRadian(this.constraint.lowerLimit), toRadian(this.constraint.upperLimit), 0.9, 0.3, 1.0);\r\n        }\r\n    }\r\n    setUpperLimit (max: number): void {\r\n        if (this.constraint.limitEnabled) {\r\n            bt.HingeConstraint_setLimit(this._impl, toRadian(this.constraint.lowerLimit), toRadian(this.constraint.upperLimit), 0.9, 0.3, 1.0);\r\n        }\r\n    }\r\n    setMotorEnabled (v: boolean): void {\r\n        bt.HingeConstraint_enableMotor(this._impl, v);\r\n        const velocity = -this.constraint.motorVelocity / 60.0;\r\n        const impulse = force2Impulse(this.constraint.motorForceLimit, PhysicsSystem.instance.fixedTimeStep);\r\n        bt.HingeConstraint_setMotorVelocity(this._impl, velocity);\r\n        bt.HingeConstraint_setMaxMotorImpulse(this._impl, impulse);\r\n    }\r\n    setMotorVelocity (v: number): void {\r\n        if (this.constraint.motorEnabled) {\r\n            const velocity = -v / 60.0;\r\n            bt.HingeConstraint_setMotorVelocity(this._impl, velocity);\r\n        }\r\n    }\r\n    setMotorForceLimit (v: number): void {\r\n        if (this.constraint.motorEnabled) {\r\n            const impulse = force2Impulse(v, PhysicsSystem.instance.fixedTimeStep);\r\n            bt.HingeConstraint_setMaxMotorImpulse(this._impl, impulse);\r\n        }\r\n    }\r\n\r\n    get constraint (): HingeConstraint {\r\n        return this._com as HingeConstraint;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        const cb = this.constraint.connectedBody;\r\n        const bodyA = (this._rigidBody.body as BulletRigidBody).impl;\r\n        const bodyB = cb ? (cb.body as BulletRigidBody).impl : bt.TypedConstraint_getFixedBody();\r\n        const trans0 = BulletCache.instance.BT_TRANSFORM_0;\r\n        const trans1 = BulletCache.instance.BT_TRANSFORM_1;\r\n        this._impl = bt.HingeConstraint_new(bodyA, bodyB, trans0, trans1);\r\n\r\n        this.setLimitEnabled(this.constraint.limitEnabled);\r\n        this.setLowerLimit(this.constraint.lowerLimit);\r\n        this.setUpperLimit(this.constraint.upperLimit);\r\n        this.setMotorEnabled(this.constraint.motorEnabled);\r\n        this.setMotorVelocity(this.constraint.motorVelocity);\r\n        this.setMotorForceLimit(this.constraint.motorForceLimit);\r\n        this.updateFrames();\r\n        this.updateDebugDrawSize();\r\n    }\r\n\r\n    updateFrames (): void {\r\n        const cs = this.constraint;\r\n        const node = cs.node;\r\n        const v3_0 = CC_V3_0;\r\n        const rot_0 = CC_QUAT_0;\r\n        const rot_1 = CC_QUAT_1;\r\n        const trans0 = BulletCache.instance.BT_TRANSFORM_0;\r\n\r\n        // offset of axis in local frame of bodyA\r\n        Vec3.multiply(v3_0, node.worldScale, cs.pivotA);\r\n        cocos2BulletVec3(bt.Transform_getOrigin(trans0), v3_0);\r\n        // rotation of axis in local frame of bodyA\r\n        const quat = BulletCache.instance.BT_QUAT_0;\r\n        Vec3.normalize(v3_0, cs.axis);\r\n        Quat.rotationTo(rot_1, Vec3.UNIT_Z, v3_0);\r\n        cocos2BulletQuat(quat, rot_1);\r\n        bt.Transform_setRotation(trans0, quat);\r\n\r\n        const trans1 = BulletCache.instance.BT_TRANSFORM_1;\r\n        const cb = this.constraint.connectedBody;\r\n        if (cb) {\r\n            // offset of axis in local frame of bodyB\r\n            Vec3.multiply(v3_0, cb.node.worldScale, cs.pivotB);\r\n            // rotation of axis in local frame of bodyB\r\n            Quat.multiply(rot_1, node.worldRotation, rot_1);\r\n            Quat.invert(rot_0, cb.node.worldRotation);\r\n            Quat.multiply(rot_1, rot_0, rot_1);\r\n        } else {\r\n            // offset of axis in local frame of bodyB\r\n            Vec3.multiply(v3_0, node.worldScale, cs.pivotA);\r\n            Vec3.transformQuat(v3_0, v3_0, node.worldRotation);\r\n            Vec3.add(v3_0, v3_0, node.worldPosition);\r\n            // rotation of axis in local frame of bodyB\r\n            Quat.multiply(rot_1, node.worldRotation, rot_1);\r\n        }\r\n        cocos2BulletVec3(bt.Transform_getOrigin(trans1), v3_0);\r\n        cocos2BulletQuat(quat, rot_1);\r\n        bt.Transform_setRotation(trans1, quat);\r\n        bt.HingeConstraint_setFrames(this._impl, trans0, trans1);\r\n    }\r\n\r\n    updateScale0 (): void {\r\n        this.updateFrames();\r\n    }\r\n\r\n    updateScale1 (): void {\r\n        this.updateFrames();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { error, IVec3Like, Vec3 } from '../../../core';\r\nimport { PhysicsSystem  } from '../../framework';\r\nimport { CharacterController } from '../../framework/components/character-controllers/character-controller';\r\nimport { IBaseCharacterController } from '../../spec/i-character-controller';\r\nimport { BulletCache } from '../bullet-cache';\r\nimport { bullet2CocosVec3, cocos2BulletVec3 } from '../bullet-utils';\r\nimport { BulletWorld } from '../bullet-world';\r\nimport { bt, btCache, EBulletType } from '../instantiated';\r\nimport { PhysicsGroup } from '../../framework/physics-enum';\r\nimport { BulletShape } from '../shapes/bullet-shape';\r\nimport { degreesToRadians } from '../../../core/utils/misc';\r\nimport { TransformBit } from '../../../scene-graph';\r\n\r\nconst v3_0 = new Vec3(0, 0, 0);\r\nconst v3_1 = new Vec3(0, 0, 0);\r\nconst v3_2 = new Vec3(0, 0, 0);\r\n\r\n/** @mangle */\r\nexport abstract class BulletCharacterController implements IBaseCharacterController {\r\n    readonly wrappedWorld: BulletWorld;\r\n    private _isEnabled = false;\r\n    protected _impl: number = 0; //btCapsuleCharacterController\r\n    protected _comp: CharacterController = null as any;\r\n    private _btCollisionFlags = 0;//: btControllerCollisionFlag\r\n    protected _word3 = 0;\r\n    protected _dirty = false;\r\n    private _collisionFilterGroup: number = PhysicsGroup.DEFAULT;\r\n    private _collisionFilterMask = -1;\r\n    private static idCounter = 0;\r\n    readonly id = BulletCharacterController.idCounter++;\r\n\r\n    get isEnabled (): boolean { return this._isEnabled; }\r\n    get impl (): number {\r\n        return this._impl;\r\n    }\r\n    get characterController (): CharacterController { return this._comp; }\r\n\r\n    constructor () {\r\n        this.wrappedWorld = PhysicsSystem.instance.physicsWorld as BulletWorld;\r\n    }\r\n\r\n    // virtual\r\n    protected onComponentSet (): void {\r\n        //empty\r\n    }\r\n    protected updateScale (): void {\r\n        //empty\r\n    }\r\n\r\n    initialize (comp: CharacterController): boolean {\r\n        this._comp = comp;\r\n        const group = this._comp.group;\r\n        const mask =  PhysicsSystem.instance.collisionMatrix[group];\r\n        this._collisionFilterGroup = group;\r\n        this._collisionFilterMask = mask;\r\n\r\n        this.onComponentSet();\r\n\r\n        if (this._impl === 0) {\r\n            error('[Physics]: Initialize BulletCharacterController failed');\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    setWrapper (): void {\r\n        BulletCache.setWrapper(this._impl, btCache.CCT_CACHE_NAME, this);\r\n        const cctCollisionShapeImpl = bt.CharacterController_getCollisionShape(this.impl);\r\n        BulletCache.setWrapper(cctCollisionShapeImpl, btCache.CCT_CACHE_NAME, this);\r\n    }\r\n\r\n    onEnable (): void {\r\n        this._isEnabled = true;\r\n        if (!this._impl) {\r\n            this.onComponentSet();\r\n        }\r\n        this.setDetectCollisions(false);\r\n        this.setOverlapRecovery(true);\r\n        (PhysicsSystem.instance.physicsWorld as BulletWorld).addCCT(this);\r\n        this.setWrapper();\r\n    }\r\n\r\n    onDisable (): void {\r\n        this._isEnabled = false;\r\n        this.wrappedWorld.removeCCT(this);\r\n        this.onDestroy();\r\n    }\r\n\r\n    onDestroy (): void {\r\n        //(this._comp as any) = null;\r\n        bt._safe_delete(this._impl, EBulletType.EBulletTypeCharacterController);\r\n        BulletCache.delWrapper(this._impl, btCache.CCT_CACHE_NAME);\r\n        this._impl = 0;\r\n        //(this.wrappedWorld as any) = null;\r\n    }\r\n\r\n    onLoad (): void {\r\n        //empty\r\n    }\r\n\r\n    getPosition (out: IVec3Like): void {\r\n        if (!this._impl) return;\r\n        bullet2CocosVec3(out, bt.CharacterController_getPosition(this.impl) as number);\r\n    }\r\n\r\n    setPosition (value: IVec3Like): void {\r\n        if (!this._impl) return;\r\n        cocos2BulletVec3(bt.CharacterController_getPosition(this.impl)  as number, value);\r\n        this.syncPhysicsToScene();\r\n    }\r\n\r\n    setContactOffset (value: number): void {\r\n        if (!this._impl) return;\r\n        bt.CharacterController_setContactOffset(this._impl, value);\r\n    }\r\n\r\n    setStepOffset (value: number): void {\r\n        if (!this._impl) return;\r\n        bt.CharacterController_setStepOffset(this._impl, value);\r\n    }\r\n\r\n    setSlopeLimit (value: number): void {\r\n        if (!this._impl) return;\r\n        bt.CharacterController_setSlopeLimit(this._impl, degreesToRadians(value));\r\n    }\r\n\r\n    setDetectCollisions (value: boolean): void {\r\n        if (!this._impl) return;\r\n        bt.CharacterController_setCollision(this.impl, value);\r\n    }\r\n\r\n    setOverlapRecovery (value: boolean): void {\r\n        if (!this._impl) return;\r\n        bt.CharacterController_setOverlapRecovery(this.impl, value);\r\n    }\r\n\r\n    onGround (): boolean {\r\n        return (this._btCollisionFlags & (1 << 2)) > 0;//btControllerCollisionFlag::Enum::BULLET_CONTROLLER_COLLISION_DOWN\r\n    }\r\n\r\n    syncSceneToPhysics (): void {\r\n        const node = this.characterController.node;\r\n        if (node.hasChangedFlags) {\r\n            if (node.hasChangedFlags & TransformBit.SCALE) this.syncScale();\r\n            //teleport\r\n            if (node.hasChangedFlags & TransformBit.POSITION) {\r\n                Vec3.add(v3_0, node.worldPosition, this.scaledCenter);\r\n                this.setPosition(v3_0);\r\n            }\r\n        }\r\n    }\r\n\r\n    syncPhysicsToScene (): void {\r\n        this.getPosition(v3_0);\r\n        v3_0.subtract(this.scaledCenter);\r\n        this._comp.node.setWorldPosition(v3_0);\r\n    }\r\n\r\n    syncScale (): void {\r\n        this.updateScale();\r\n    }\r\n\r\n    get scaledCenter (): Vec3 {\r\n        Vec3.multiply(v3_1, this._comp.center, this._comp.node.worldScale);\r\n        return v3_1;\r\n    }\r\n\r\n    move (movement: IVec3Like, minDist: number, elapsedTime: number): void {\r\n        if (!this._isEnabled) { return; }\r\n        const movementBT = BulletCache.instance.BT_V3_0;\r\n        bt.Vec3_set(movementBT, movement.x, movement.y, movement.z);\r\n        this._btCollisionFlags = bt.CharacterController_move(this.impl, movementBT, minDist, elapsedTime);\r\n    }\r\n\r\n    setGroup (v: number): void {\r\n        if (v !== this._collisionFilterGroup) {\r\n            this._collisionFilterGroup = v;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    getGroup (): number {\r\n        return this._collisionFilterGroup;\r\n    }\r\n\r\n    addGroup (v: number): void {\r\n        this._collisionFilterGroup |= v;\r\n        this._dirty = true;\r\n    }\r\n\r\n    removeGroup (v: number): void {\r\n        this._collisionFilterGroup &= ~v;\r\n        this._dirty = true;\r\n    }\r\n\r\n    setMask (v: number): void {\r\n        if (v !== this._collisionFilterMask) {\r\n            this._collisionFilterMask = v;\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    getMask (): number {\r\n        return this._collisionFilterMask;\r\n    }\r\n\r\n    addMask (v: number): void {\r\n        this._collisionFilterMask |= v;\r\n        this._dirty = true;\r\n    }\r\n\r\n    removeMask (v: number): void {\r\n        this._collisionFilterMask &= ~v;\r\n        this._dirty = true;\r\n    }\r\n\r\n    updateEventListener (): void {\r\n        this.wrappedWorld.updateNeedEmitCCTEvents(this.characterController.needCollisionEvent);\r\n    }\r\n\r\n    // update group and mask by re-adding cct to physics world\r\n    updateDirty (): void {\r\n        if (this._dirty) {\r\n            (PhysicsSystem.instance.physicsWorld as BulletWorld).removeCCT(this);\r\n            (PhysicsSystem.instance.physicsWorld as BulletWorld).addCCT(this);\r\n            this._dirty = false;\r\n        }\r\n    }\r\n\r\n    onShapeHitExt (hit: number): void {\r\n        const shapePtr = bt.ControllerShapeHit_getHitShape(hit);\r\n        const bulletWorld = (PhysicsSystem.instance.physicsWorld as BulletWorld);\r\n        //use characterController impl and shape impl pair as key\r\n        let item = bulletWorld.cctShapeEventDic.get<any>(this.impl, shapePtr);\r\n        const worldPos = new Vec3();\r\n        bullet2CocosVec3(worldPos, bt.ControllerHit_getHitWorldPos(hit));\r\n        const worldNormal = new Vec3();\r\n        bullet2CocosVec3(worldNormal, bt.ControllerHit_getHitWorldNormal(hit));\r\n        const motionDir = new Vec3();\r\n        bullet2CocosVec3(motionDir, bt.ControllerHit_getHitMotionDir(hit));\r\n        const motionLength = bt.ControllerHit_getHitMotionLength(hit);\r\n        const s: BulletShape = BulletCache.getWrapper(shapePtr, BulletShape.TYPE);\r\n        if (s) {\r\n            item = bulletWorld.cctShapeEventDic.set(\r\n                this.impl,\r\n                shapePtr,\r\n                { BulletCharacterController: this, BulletShape: s, worldPos, worldNormal, motionDir, motionLength },\r\n            );\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3, absMax } from '../../../core';\r\nimport { PhysicsSystem } from '../../framework';\r\nimport { ICapsuleCharacterController } from '../../spec/i-character-controller';\r\nimport { CapsuleCharacterController } from '../../framework/components/character-controllers/capsule-character-controller';\r\nimport { BulletCharacterController } from './bullet-character-controller';\r\nimport { BulletWorld } from '../bullet-world';\r\nimport { degreesToRadians } from '../../../core/utils/misc';\r\nimport { bt } from '../instantiated';\r\nimport { BulletCache } from '../bullet-cache';\r\nimport { importFunc } from '../bullet-env';\r\n\r\nconst v3_0 = new Vec3(0, 0, 0);\r\n\r\n/** @mangle */\r\nexport class BulletCapsuleCharacterController extends BulletCharacterController implements ICapsuleCharacterController {\r\n    get component (): CapsuleCharacterController {\r\n        return this._comp as CapsuleCharacterController;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        this.component.node.getWorldPosition(v3_0);\r\n        v3_0.add(this.scaledCenter);\r\n        const pos = BulletCache.instance.BT_V3_0;\r\n        bt.Vec3_set(pos, v3_0.x, v3_0.y, v3_0.z);\r\n\r\n        const upDir = Vec3.UNIT_Y;\r\n        const up = BulletCache.instance.BT_V3_1;\r\n        bt.Vec3_set(up, upDir.x, upDir.y, upDir.z);\r\n\r\n        const report = bt.ControllerHitReport.implement(importFunc).$$.ptr as number;\r\n        const bulletWorld = (PhysicsSystem.instance.physicsWorld as BulletWorld);\r\n        const controllerDesc = bt.CapsuleCharacterControllerDesc_new(\r\n            degreesToRadians(this.component.slopeLimit),\r\n            this.component.stepOffset,\r\n            this.component.skinWidth,\r\n            up,\r\n            pos,\r\n            report, //btUserControllerHitReport\r\n            this.component.radius,\r\n            this.component.height,\r\n        );\r\n\r\n        this._impl = bt.CapsuleCharacterController_new(bulletWorld.impl, controllerDesc, 0/*?*/);\r\n\r\n        this.updateScale();\r\n    }\r\n\r\n    setRadius (value: number): void {\r\n        this.updateScale();\r\n    }\r\n\r\n    setHeight (value: number): void {\r\n        this.updateScale();\r\n    }\r\n\r\n    updateScale (): void {\r\n        this.updateGeometry();\r\n    }\r\n\r\n    updateGeometry (): void {\r\n        const ws = this.component.node.worldScale;\r\n        const r = this.component.radius * absMax(ws.x, ws.z);\r\n        const h = this.component.height * Math.abs(ws.y);\r\n        bt.CapsuleCharacterController_setRadius(this.impl, r);\r\n        bt.CapsuleCharacterController_setHeight(this.impl, h);\r\n        this._dirty = true;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec3 } from '../../../core';\r\nimport { PhysicsSystem } from '../../framework';\r\nimport { IBoxCharacterController } from '../../spec/i-character-controller';\r\nimport { BoxCharacterController } from '../../framework/components/character-controllers/box-character-controller';\r\nimport { BulletCharacterController } from './bullet-character-controller';\r\nimport { BulletWorld } from '../bullet-world';\r\nimport { degreesToRadians } from '../../../core/utils/misc';\r\nimport { bt } from '../instantiated';\r\nimport { BulletCache } from '../bullet-cache';\r\nimport { importFunc } from '../bullet-env';\r\n\r\nconst v3_0 = new Vec3(0, 0, 0);\r\n\r\n/** @mangle */\r\nexport class BulletBoxCharacterController extends BulletCharacterController implements IBoxCharacterController {\r\n    get component (): BoxCharacterController {\r\n        return this._comp as BoxCharacterController;\r\n    }\r\n\r\n    onComponentSet (): void {\r\n        this.component.node.getWorldPosition(v3_0);\r\n        v3_0.add(this.scaledCenter);\r\n        const pos = BulletCache.instance.BT_V3_0;\r\n        bt.Vec3_set(pos, v3_0.x, v3_0.y, v3_0.z);\r\n\r\n        const upDir = Vec3.UNIT_Y;\r\n        const up = BulletCache.instance.BT_V3_1;\r\n        bt.Vec3_set(up, upDir.x, upDir.y, upDir.z);\r\n\r\n        const report = bt.ControllerHitReport.implement(importFunc).$$.ptr as number;\r\n        const bulletWorld = (PhysicsSystem.instance.physicsWorld as BulletWorld);\r\n        const controllerDesc = bt.BoxCharacterControllerDesc_new(\r\n            degreesToRadians(this.component.slopeLimit),\r\n            this.component.stepOffset,\r\n            this.component.skinWidth,\r\n            up,\r\n            pos,\r\n            report, //btUserControllerHitReport\r\n            this.component.halfHeight,\r\n            this.component.halfSideExtent,\r\n            this.component.halfForwardExtent,\r\n        );\r\n        this._impl = bt.BoxCharacterController_new(bulletWorld.impl, controllerDesc, 0/*?*/);\r\n\r\n        this.updateScale();\r\n    }\r\n\r\n    setHalfHeight (value: number): void {\r\n        this.updateScale();\r\n    }\r\n\r\n    setHalfSideExtent (value: number): void {\r\n        this.updateScale();\r\n    }\r\n\r\n    setHalfForwardExtent (value: number): void {\r\n        this.updateScale();\r\n    }\r\n\r\n    updateScale (): void {\r\n        this.updateGeometry();\r\n    }\r\n\r\n    updateGeometry (): void {\r\n        const ws = this.component.node.worldScale;\r\n        bt.BoxCharacterController_setHalfSideExtent(this.impl, this.component.halfSideExtent * ws.x);\r\n        bt.BoxCharacterController_setHalfHeight(this.impl, this.component.halfHeight * ws.y);\r\n        bt.BoxCharacterController_setHalfForwardExtent(this.impl, this.component.halfForwardExtent * ws.z);\r\n        this._dirty = true;\r\n    }\r\n}\r\n"],"names":["EBulletType","EBulletTriangleRaycastFlag","EBulletDebugDrawModes","Promise","resolve","bt","btCache","game","onPostInfrastructureInitDelegate","add","ensureWasmModuleReady","then","sys","hasFeature","Feature","WASM","all","module","import","n","b","_ref","wasmFactory","wasmUrl","bulletWasmFactory","bulletWasmUrl","reject","errorMessage","err","instantiateWasm","importObject","receiveInstance","result","instance","log","globalThis","Bullet","_ref2","asmFactory","msg","error","TriggerEventObject","type","selfCollider","otherCollider","impl","CollisionEventObject","contacts","CharacterTriggerEventObject","collider","characterController","BulletCache","this","BT_TRANSFORM_0","Transform_new","BT_TRANSFORM_1","BT_V3_0","Vec3_new","BT_V3_1","BT_V3_2","BT_QUAT_0","Quat_new","setWrapper","wrap","ROOT","delWrapper","getWrapper","ptr","isNotEmptyShape","EmptyShape_static","_createClass","key","get","_instance","world","CC_V3_0","Vec3","CC_V3_1","CC_V3_2","CC_QUAT_0","Quat","CC_QUAT_1","CC_MAT4_0","Mat4","EBtSharedBodyDirty","btCollisionFlags","btCollisionObjectTypes","btCollisionObjectStates","btRigidBodyFlags","CC_COLOR_0","Color","cocos2BulletVec3","out","v","Vec3_set","x","y","z","bullet2CocosVec3","rawVertexBuffer","HEAPF32","subarray","cocos2BulletQuat","q","Quat_set","w","bullet2CocosQuat","cocos2BulletTriMesh","mesh","len","renderingSubMeshes","length","i","subMesh","geoInfo","geometricInfo","primitiveMode","vb","positions","ib","indices","v0","v1","v2","PrimitiveMode","TRIANGLE_LIST","cnt","j","i0","i1","i2","TriangleMesh_addTriangle","TRIANGLE_STRIP","rev","TRIANGLE_FAN","force2Impulse","force","dt","CACHE","v3_0","v3_1","BulletRigidBody","_proto","prototype","id","_isEnabled","_isUsingCCD","_sharedBody","_rigidBody","idCounter","setMass","value","isDynamic","RigidBody_setMass","_wakeUpIfSleep","dirty","BODY_RE_ADD","setType","setLinearDamping","RigidBody_setDamping","linearDamping","angularDamping","setAngularDamping","useGravity","m_rigidBodyFlag","RigidBody_getFlags","BT_DISABLE_WORLD_GRAVITY","RigidBody_setGravity","ZERO","RigidBody_setFlags","useCCD","CollisionObject_setCcdMotionThreshold","CollisionObject_setCcdSweptSphereRadius","isUsingCCD","setLinearFactor","RigidBody_setLinearFactor","setAngularFactor","RigidBody_setAngularFactor","setAllowSleep","CollisionObject_forceActivationState","ACTIVE_TAG","DISABLE_DEACTIVATION","clearState","RigidBody_clearState","clearVelocity","setLinearVelocity","setAngularVelocity","clearForces","RigidBody_clearForces","initialize","com","PhysicsSystem","physicsWorld","getSharedBody","node","reference","onEnable","mass","allowSleep","linearFactor","angularFactor","bodyEnabled","onDisable","onDestroy","wakeUp","CollisionObject_activate","sleep","state","CollisionObject_getActivationState","DISABLE_SIMULATION","ISLAND_SLEEPING","setSleepThreshold","RigidBody_setSleepingThresholds","getSleepThreshold","RigidBody_getLinearSleepingThreshold","getLinearVelocity","RigidBody_getLinearVelocity","getAngularVelocity","RigidBody_getAngularVelocity","applyLocalForce","rel_pos","syncSceneToPhysics","quat","worldRotation","transformQuat","rp","RigidBody_applyForce","applyLocalTorque","torque","RigidBody_applyTorque","applyLocalImpulse","impulse","RigidBody_applyImpulse","applyForce","applyTorque","applyImpulse","getGroup","collisionFilterGroup","setGroup","addGroup","removeGroup","getMask","collisionFilterMask","setMask","addMask","removeMask","isAwake","WANTS_DEACTIVATION","body","importFunc","syncPhysicsToGraphics","BODY_CACHE_NAME","onShapeHitExt","hit","controller","CCT_CACHE_NAME","onDebugDrawLine","from","to","color","clearLines","onClearLines","flushLines","quat_0","IDCounter","BulletSharedBody","wrappedWorld","wrappedJoints0","wrappedJoints1","_collisionFilterGroup","PhysicsGroup","DEFAULT","_collisionFilterMask","ref","bodyIndex","ghostIndex","_bodyStruct","_ghostStruct","_wrappedBody","wrappedBody","newSB","uuid","sharedBodesMap","has","g","m","collisionMatrix","set","rigidBody","group","_instantiateBodyStruct","enabled","trans","Transform_getOrigin","worldPosition","Transform_setRotation","motionState","MotionState","implement","$$","ccMotionState_setup","RigidBody_new","sleepTd","sleepThreshold","compound","ccCompoundShape_new","wrappedShapes","useCompound","CollisionObject_setIgnoreCollisionCheck","ghost","setBodyType","_instantiateGhostStruct","CollisionObject_new","ghostShape","CollisionObject_setCollisionShape","CollisionObject_setCollisionFlags","CF_STATIC_OBJECT","CF_NO_CONTACT_RESPONSE","setGhostType","m_bcf","CollisionObject_getCollisionFlags","localInertia","ERigidBodyType","DYNAMIC","CF_KINEMATIC_OBJECT","KINEMATIC","RigidBody_setMassProps","STATIC","m_gcf","GHOST_RE_ADD","addShape","isTrigger","switchShape","that","shape","isEnabled","ghostStruct","indexOf","push","setCompound","ghostCompoundShape","ghostEnabled","bodyStruct","bodyCompoundShape","l","needCompound","removeShape","index","js","addJoint","removeJoint","updateDirty","updateBodyByReAdd","updateGhostByReAdd","hasChangedFlags","bt_quat","bt_transform","CollisionObject_getWorldTransform","TransformBit","SCALE","syncBodyScale","CollisionObject_isKinematicObject","ms","RigidBody_getMotionState","MotionState_setWorldTransform","isBodySleeping","syncPhysicsToScene","CollisionObject_isStaticOrKinematicObject","RigidBody_getWorldTransform","originPosPtr","Transform_getRotationAndOrigin","bt_transform1","syncSceneToGhost","syncGhostScale","syncInitialBody","syncInitialGhost","updateScale","updateScale0","updateScale1","removeSharedBody","bodies","addSharedBody","removeGhostObject","ghosts","addGhostObject","destroy","_safe_delete","EBulletTypeMotionState","EBulletTypeCollisionShape","EBulletTypeCollisionObject","CollisionObject_isSleeping","_this","enabledInHierarchy","constraints","forEach","worldConstraint","_worldConstraint$cons","_worldConstraint$cons2","constraint","attachedBody","removeConstraint","Map","ccMaterialBooks","BulletShape","_isTrigger","_isInitialized","_impl","_compound","transform","_collider","updateEventListener","updateNeedEmitEvents","needCollisionEvent","needTriggerEvent","setMaterial","defaultMaterial","_uuid","ccMaterial_new","mat","ccMaterial_set","restitution","friction","rollingFriction","spinningFriction","CollisionShape_setMaterial","CollisionObject_setMaterial","setCenter","copy","multiply","worldScale","updateCompoundTransform","setAsTrigger","getAABB","Transform_setIdentity","MIN","MAX","CollisionShape_getAabb","halfExtents","Vec3_x","Vec3_y","Vec3_z","center","getBoundingSphere","radius","CollisionShape_getLocalBoundingSphere","onComponentSet","CollisionShape_setUserPointer","TYPE","onLoad","sharedMaterial","EBulletTypeQuat","EBulletTypeTransform","updateByReAdd","CompoundShape_removeChildShape","CompoundShape_addChildShape","CompoundShape_updateChildTransform","EColliderType","TERRAIN","equals","BulletContactData","event","getLocalPointOnA","ManifoldPoint_get_m_localPointA","getLocalPointOnB","ManifoldPoint_get_m_localPointB","getWorldPointOnA","ManifoldPoint_get_m_positionWorldOnA","getWorldPointOnB","ManifoldPoint_get_m_positionWorldOnB","getLocalNormalOnA","bt_rot","PersistentManifold_getBody0","Transform_getRotation","inv_rot","conjugate","ManifoldPoint_get_m_normalWorldOnB","isBodyA","negate","getLocalNormalOnB","PersistentManifold_getBody1","getWorldNormalOnA","getWorldNormalOnB","sharedBody","contactsPool","v3_2","c_0","emitHit","CharacterControllerContact","BulletWorld","_world","_broadphase","_solver","_dispatcher","_debugDraw","_debugLineCount","_MAX_DEBUG_LINE_COUNT","_debugDrawFlags","EPhysicsDrawFlags","NONE","_debugConstraintSize","_needEmitEvents","_needSyncAfterEvents","_needEmitCCTEvents","ccts","triggerArrayMat","ArrayCollisionMatrix","characterControllerArrayMat","collisionArrayMat","contactsDic","TupleDictionary","oldContactsDic","cctShapeEventDic","cctContactsDic","cctOldContactsDic","DbvtBroadphase_new","CollisionDispatcher_new","SequentialImpulseConstraintSolver_new","ccDiscreteDynamicsWorld_new","debugDraw","DebugDraw","CollisionWorld_setDebugDrawer","DebugDraw_setDebugMode","DBG_NoDebug","DebugDraw_setAABBColor","DebugDraw_setActiveObjectColor","DebugDraw_setDeactiveObjectColor","DebugDraw_setWantsDeactivationObjectColor","DebugDraw_setDisabledDeactivationObjectColor","DebugDraw_setDisabledSimulationObjectColor","DebugDraw_setConstraintLimitColor","setDefaultMaterial","ccDiscreteDynamicsWorld_setAllowSleep","setGravity","gravity","DynamicsWorld_setGravity","shapes","updateNeedEmitCCTEvents","EBulletTypeCollisionWorld","EBulletTypeDbvtBroadPhase","EBulletTypeCollisionDispatcher","EBulletTypeSequentialImpulseConstraintSolver","EBulletTypeDebugDraw","cctShapeEventPool","step","deltaTime","timeSinceLastCalled","maxSubStep","undefined","DynamicsWorld_stepSimulation","CollisionWorld_debugDrawWorld","cct","syncAfterEvents","raycast","worldRay","options","pool","results","computeHit","maxDistance","o","allHitsCB","ccAllRayCallback_static","ccAllRayCallback_reset","mask","queryTrigger","ccAllRayCallback_setFlags","UseSubSimplexConvexCastRaytest","CollisionWorld_rayTest","RayCallback_hasHit","posArray","ccAllRayCallback_getHitPointWorld","normalArray","ccAllRayCallback_getHitNormalWorld","ptrArray","ccAllRayCallback_getCollisionShapePtrs","closestHitFraction","ccAllRayCallback_getClosestHitFraction","int_array_size","Vec3_array_at","int_array_at","r","_assign","distance","raycastClosest","closeHitCB","ccClosestRayCallback_static","ccClosestRayCallback_reset","ccClosestRayCallback_setFlags","ccClosestRayCallback_getHitPointWorld","ccClosestRayCallback_getHitNormalWorld","ccClosestRayCallback_getCollisionShapePtr","ccClosestConvexCallback_getClosestHitFraction","sweepBox","halfExtent","orientation","hf","_sweepBoxGeometry","BoxShape_new","BoxShape_setUnscaledHalfExtents","sweep","sweepBoxClosest","sweepClosest","sweepSphere","_sweepSphereGeometry","SphereShape_new","SphereShape_setUnscaledRadius","IDENTITY","sweepSphereClosest","sweepCapsule","height","_sweepCapsuleGeometry","CapsuleShape_new","CapsuleShape_updateProp","sweepCapsuleClosest","btShapePtr","BT_fromTransform","BT_toTransform","BT_orientation","ccAllConvexCallback_static","ccAllConvexCallback_reset","CollisionWorld_convexSweepTest","ConvexCallback_hasHit","ccAllConvexCallback_getHitPointWorld","ccAllConvexCallback_getHitNormalWorld","ccAllConvexCallback_getCollisionShapePtrs","ccAllConvexCallback_getClosestHitFraction","ccClosestConvexCallback_static","ccClosestConvexCallback_reset","ccClosestConvexCallback_getHitPointWorld","ccClosestConvexCallback_getHitNormalWorld","ccClosestConvexCallback_getCollisionShapePtr","DynamicsWorld_addRigidBody","DynamicsWorld_removeRigidBody","CollisionWorld_addCollisionObject","CollisionWorld_removeCollisionObject","addCCT","cctGhost","CharacterController_getGhostObject","DynamicsWorld_addAction","removeCCT","DynamicsWorld_removeAction","addConstraint","DynamicsWorld_addConstraint","enableCollision","splice","DynamicsWorld_removeConstraint","emitEvents","gatherConatactData","emitCollisionAndTriggerEvent","emitCCTTriggerEvent","emitCCTCollisionEvent","dicL","getLength","apply","getKeyByIndex","data","getDataByKey","shape0","shape1","collider0","collider1","emit","body0","attachedRigidBody","body1","isSleeping","cq","c","pop","oldDicL","reset","_emitHit$controller","BulletCharacterController","worldPos","worldNormal","motionDir","motionLength","motionDirection","numManifolds","Dispatcher_getNumManifolds","manifold","Dispatcher_getManifoldByIndexInternal","numContacts","PersistentManifold_getNumContacts","manifoldPoint","PersistentManifold_getContactPoint","s0","ManifoldPoint_getShape0","s1","ManifoldPoint_getShape1","processed","item","_setDebugDrawMode","btDrawMode","WIRE_FRAME","DBG_DrawWireframe","CONSTRAINT","DBG_DrawConstraints","DBG_DrawConstraintLimits","AABB","DBG_DrawAabb","_getDebugRenderer","_mainWindow","cameras","director","root","mainWindow","initGeometryRenderer","geometryRenderer","debugRenderer","addLine","updateDebugDrawSize","BulletBoxShape","_BulletShape","arguments","_inheritsLoose","updateSize","getMinUnscaledHalfExtents","VEC3_0","call","bt_v3","CollisionShape_setLocalScaling","getMinScale","size","ws","absolute","minVolumeSize","halfSizeX","halfSizeY","halfSizeZ","halfX","halfY","halfZ","scaleX","scaleY","scaleZ","BulletSphereShape","updateRadius","getMinUnscaledRadius","scale","Math","abs","absMaxComponent","BulletCapsuleShape","setCylinderHeight","updateProperties","cylinderHeight","direction","setDirection","setRadius","wr","halfH","upAxis","absMax","BulletBvhTriangleMeshShape","bulletBvhTriangleMeshShapePtr","btTriangleMeshPtr","TriangleMesh_new","BvhTriangleMeshShape_new","getBulletBvhTriangleMeshShape","newBulletBvhTriangleMeshShape","BulletBvhTriangleMeshShapeMap","EBulletTypeTriangleMesh","RotateOrder","BulletDofAxis","BulletTrimeshShape","_len","args","Array","_key","concat","btBVHMeshShape","refBtTriangleMesh","setMesh","convex","btTriangleMesh","_getBtTriangleMesh","ConvexTriangleMeshShape_new","hash","ScaledBvhTriangleMeshShape_new","CollisionShape_setMargin","BulletCylinderShape","setHeight","CylinderShape_new","wh","CylinderShape_updateProp","BulletConeShape","ConeShape_new","ConeShape_setRadius","ConeShape_setHeight","ConeShape_setConeUpIndex","BulletTerrainShape","_bufPtr","_tileSize","_localOffset","setTerrain","warn","terrain","tileSize","sizeI","getVertexCountI","sizeJ","getVertexCountJ","_malloc","offset","min","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","getHeight","_write_f32","TerrainShape_new","_free","BulletSimplexShape","setShapeType","setVertices","SimplexShape_new","shapeType","vertices","SimplexShape_addVertex","updateVertices","BulletPlaneShape","setNormal","StaticPlaneShape_getPlaneNormal","setConstant","StaticPlaneShape_setPlaneConstant","normal","StaticPlaneShape_new","constant","BulletConstraint","_com","_connectedBody","_collided","setConnectedBody","oldBody2","sb","EBulletTypeTypedConstraint","connect","setEnableCollision","connectedBody","debugDrawConstraintSize","TypedConstraint_setDbgDrawSize","BulletP2PConstraint","_BulletConstraint","setPivotA","cs","pivotA","P2PConstraint_setPivotA","setPivotB","pivotB","cb","P2PConstraint_setPivotB","bodyA","bodyB","TypedConstraint_getFixedBody","P2PConstraint_new","BulletFixedConstraint","setBreakForce","TypedConstraint_setMaxImpulseThreshold","setBreakTorque","trans0","trans1","FixedConstraint_new","breakForce","breakTorque","updateFrames","pos","rot","fromRT","invert","getRotation","getTranslation","FixedConstraint_setFrames","BulletHingeConstraint","setAxis","setLimitEnabled","limitEnabled","HingeConstraint_setLimit","toRadian","lowerLimit","upperLimit","setLowerLimit","setUpperLimit","setMotorEnabled","HingeConstraint_enableMotor","velocity","motorVelocity","motorForceLimit","fixedTimeStep","HingeConstraint_setMotorVelocity","HingeConstraint_setMaxMotorImpulse","setMotorVelocity","motorEnabled","setMotorForceLimit","HingeConstraint_new","rot_0","rot_1","normalize","axis","rotationTo","UNIT_Z","HingeConstraint_setFrames","BulletConfigurableConstraint","_setLimit","lower","upper","EConstraintMode","LOCKED","Generic6DofSpring2Constraint_setLimit","LIMITED","FREE","setConstraintMode","idx","ll","linearLimitSettings","al","angularLimitSettings","lowers","uppers","toArray","twistExtent","swingExtent1","swingExtent2","setLinearLimit","cm","xMotion","yMotion","zMotion","setAngularExtent","twist","swing1","swing2","twistMotion","TWIST","swingMotion1","SWING1","swingMotion2","SWING2","setSwingSoftConstraint","Generic6DofSpring2Constraint_enableSpring","setTwistSoftConstraint","setLinearSoftConstraint","X","Y","Z","setLinearStiffness","Generic6DofSpring2Constraint_setStiffness","Generic6DofSpring2Constraint_setDamping","setLinearRestitution","Generic6DofSpring2Constraint_setBounce","setSwingStiffness","setSwingDamping","setSwingRestitution","setTwistStiffness","setTwistDamping","setTwistRestitution","setDriverMode","EDriverMode","DISABLED","Generic6DofSpring2Constraint_enableMotor","SERVO","Generic6DofSpring2Constraint_setServo","INDUCTION","_updateMotorTargetAndVelocity","mode","target","ld","linearDriverSettings","ad","angularDriverSettings","xDrive","targetPosition","targetVelocity","yDrive","zDrive","twistDrive","targetOrientation","swingDrive1","swingDrive2","strength","Generic6DofSpring2Constraint_setServoTarget","Generic6DofSpring2Constraint_setTargetVelocity","setLinearMotorTarget","setLinearMotorVelocity","setLinearMotorForceLimit","Generic6DofSpring2Constraint_setMaxMotorForce","setAngularMotorTarget","setAngularMotorVelocity","setAngularMotorForceLimit","setAutoPivotB","setSecondaryAxis","Generic6DofSpring2Constraint_new","RO_YZX","linearLimit","angularLimit","enableSoftConstraint","stiffness","damping","enableSoftConstraintSwing","swingRestitution","swingStiffness","swingDamping","enableSoftConstraintTwist","twistRestitution","twistStiffness","twistDamping","linearMotor","angularMotor","axisX","axisY","secondaryAxis","axisZ","cross","autoPivotB","subtract","Generic6DofSpring2Constraint_setFrames","_comp","_btCollisionFlags","_word3","_dirty","comp","cctCollisionShapeImpl","CharacterController_getCollisionShape","setDetectCollisions","setOverlapRecovery","EBulletTypeCharacterController","getPosition","CharacterController_getPosition","setPosition","setContactOffset","CharacterController_setContactOffset","setStepOffset","CharacterController_setStepOffset","setSlopeLimit","CharacterController_setSlopeLimit","degreesToRadians","CharacterController_setCollision","CharacterController_setOverlapRecovery","onGround","syncScale","POSITION","scaledCenter","setWorldPosition","move","movement","minDist","elapsedTime","movementBT","CharacterController_move","shapePtr","ControllerShapeHit_getHitShape","bulletWorld","ControllerHit_getHitWorldPos","ControllerHit_getHitWorldNormal","ControllerHit_getHitMotionDir","ControllerHit_getHitMotionLength","s","BulletCapsuleCharacterController","_BulletCharacterContr","component","getWorldPosition","upDir","UNIT_Y","up","report","ControllerHitReport","controllerDesc","CapsuleCharacterControllerDesc_new","slopeLimit","stepOffset","skinWidth","CapsuleCharacterController_new","updateGeometry","h","CapsuleCharacterController_setRadius","CapsuleCharacterController_setHeight","BulletBoxCharacterController","BoxCharacterControllerDesc_new","halfHeight","halfSideExtent","halfForwardExtent","BoxCharacterController_new","setHalfHeight","setHalfSideExtent","setHalfForwardExtent","BoxCharacterController_setHalfSideExtent","BoxCharacterController_setHalfHeight","BoxCharacterController_setHalfForwardExtent","once","Game","EVENT_PRE_SUBSYSTEM_INIT","selector","register","PhysicsWorld","RigidBody","BoxShape","SphereShape","CapsuleShape","TrimeshShape","CylinderShape","ConeShape","TerrainShape","SimplexShape","PlaneShape","PointToPointConstraint","HingeConstraint","FixedConstraint","ConfigurableConstraint","BoxCharacterController","CapsuleCharacterController"],"mappings":"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"}