{"version":3,"file":"prefab-CJahvMeV.js","sources":["../../../cocos/core/data/utils/compiler.ts","../../../cocos/input/types/acceleration.ts","../../../cocos/scene-graph/component-event-handler.schema.ts","../../../cocos/input/deprecated-3.3.0.ts","../../../cocos/input/deprecated-3.4.0.ts","../../../pal/input/web/accelerometer-input.ts","../../../pal/input/input-source.ts","../../../pal/input/web/gamepad-input.ts","../../../pal/input/web/handle-input.ts","../../../pal/input/web/hmd-input.ts","../../../cocos/input/input.ts","../../../pal/input/web/handheld-input.ts","../../../pal/input/keycodes.ts","../../../pal/input/web/keyboard-input.ts","../../../pal/input/web/mouse-input.ts","../../../pal/input/touch-manager.ts","../../../pal/input/web/touch-input.ts","../../../cocos/input/system-event.ts","../../../cocos/input/deprecated.ts","../../../cocos/scene-graph/deprecated.ts","../../../cocos/scene-graph/find.ts","../../../cocos/scene-graph/deprecated-3.7.0.ts","../../../cocos/scene-graph/component-scheduler.ts","../../../cocos/scene-graph/node-activator.ts","../../../cocos/serialization/instantiate-jit.ts","../../../cocos/scene-graph/prefab/prefab.ts"],"sourcesContent":["/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV } from 'internal:constants';\r\n\r\nfunction deepFlatten (strList: string[], array: (string | string[])[]): void {\r\n    for (const item of array) {\r\n        if (Array.isArray(item)) {\r\n            deepFlatten(strList, item);\r\n        // eslint-disable-next-line brace-style\r\n        }\r\n        // else if (item instanceof Declaration) {\r\n        //     strList.push(item.toString());\r\n        // }\r\n        else {\r\n            strList.push(item);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @engineInternal\r\n */\r\nexport function flattenCodeArray (array: (string | string[])[]): string {\r\n    const separator = DEV ? '\\n' : '';\r\n    const strList = [];\r\n    deepFlatten(strList, array);\r\n    return strList.join(separator);\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @en the device accelerometer reports values for each axis in units of g-force.\r\n * @zh 设备重力传感器传递的各个轴的数据。\r\n */\r\nexport class Acceleration {\r\n    public declare x: number;\r\n    public declare y: number;\r\n    public declare z: number;\r\n    public declare timestamp: number;\r\n    constructor (x = 0, y = 0, z = 0, timestamp = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.timestamp = timestamp;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CCClass } from '../core/data';\r\nimport { Node } from './node';\r\nimport { EventHandler } from './component-event-handler';\r\n\r\nCCClass.Attr.setClassAttr(EventHandler, 'target', 'type', 'Object');\r\nCCClass.Attr.setClassAttr(EventHandler, 'target', 'ctor', Node);\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { deprecateModuleExportedName } from '../core';\r\n\r\ndeprecateModuleExportedName({\r\n    SystemEventType: {\r\n        newName: 'Input.EventType',\r\n        since: '3.3.0',\r\n        removed: false,\r\n    },\r\n});\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { deprecateModuleExportedName } from '../core';\r\n\r\ndeprecateModuleExportedName({\r\n    SystemEvent: {\r\n        newName: 'Input',\r\n        since: '3.4.0',\r\n        removed: false,\r\n    },\r\n    systemEvent: {\r\n        newName: 'input',\r\n        since: '3.4.0',\r\n        removed: false,\r\n    },\r\n});\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { AccelerometerCallback } from 'pal/input';\r\nimport { systemInfo } from 'pal/system-info';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { EventTarget } from '../../../cocos/core/event/event-target';\r\nimport { BrowserType, OS } from '../../system-info/enum-type';\r\nimport { EventAcceleration, Acceleration } from '../../../cocos/input/types';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { warn } from '../../../cocos/core/platform/debug';\r\n\r\nexport class AccelerometerInputSource {\r\n    private _intervalInMileSeconds = 200;\r\n    private _accelTimer = 0;\r\n    private _eventTarget: EventTarget = new  EventTarget();\r\n    private declare _deviceEventName: 'devicemotion' |'deviceorientation';\r\n    private declare _globalEventClass: typeof window.DeviceMotionEvent | typeof window.DeviceOrientationEvent;\r\n    private declare _didAccelerateFunc: (event: DeviceMotionEvent | DeviceOrientationEvent) => void;\r\n\r\n    constructor () {\r\n        // init event name\r\n        this._globalEventClass = window.DeviceMotionEvent || window.DeviceOrientationEvent;\r\n        // TODO fix DeviceMotionEvent bug on QQ Browser version 4.1 and below.\r\n        if (systemInfo.browserType === BrowserType.MOBILE_QQ) {\r\n            this._globalEventClass = window.DeviceOrientationEvent;\r\n        }\r\n        this._deviceEventName = this._globalEventClass === window.DeviceMotionEvent ? 'devicemotion' : 'deviceorientation';\r\n        this._didAccelerateFunc  = this._didAccelerate.bind(this);\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        this._accelTimer = performance.now();\r\n        window.addEventListener(this._deviceEventName, this._didAccelerateFunc, false);\r\n    }\r\n\r\n    private _unregisterEvent (): void {\r\n        this._accelTimer = 0;\r\n        window.removeEventListener(this._deviceEventName, this._didAccelerateFunc, false);\r\n    }\r\n\r\n    private _didAccelerate (event: DeviceMotionEvent | DeviceOrientationEvent): void {\r\n        const now = performance.now();\r\n        if (now - this._accelTimer < this._intervalInMileSeconds) {\r\n            return;\r\n        }\r\n        this._accelTimer = now;\r\n\r\n        let x = 0;\r\n        let y = 0;\r\n        let z = 0;\r\n        if (this._globalEventClass === window.DeviceMotionEvent) {\r\n            const deviceMotionEvent = event as DeviceMotionEvent;\r\n            const eventAcceleration = deviceMotionEvent.accelerationIncludingGravity;\r\n            x = (eventAcceleration?.x || 0) * 0.1;\r\n            y = (eventAcceleration?.y || 0) * 0.1;\r\n            z = (eventAcceleration?.z || 0) * 0.1;\r\n        } else {\r\n            const deviceOrientationEvent = event as DeviceOrientationEvent;\r\n            x = ((deviceOrientationEvent.gamma || 0) / 90) * 0.981;\r\n            y = -((deviceOrientationEvent.beta || 0) / 90) * 0.981;\r\n            z = ((deviceOrientationEvent.alpha || 0) / 90) * 0.981;\r\n        }\r\n\r\n        if (screenAdapter.isFrameRotated) {\r\n            const tmp = x;\r\n            x = -y;\r\n            y = tmp;\r\n        }\r\n\r\n        // TODO: window.orientation is deprecated: https://developer.mozilla.org/en-US/docs/Web/API/Window/orientation\r\n        // try to use experimental screen.orientation: https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation\r\n        const PORTRAIT = 0;\r\n        const LANDSCAPE_LEFT = -90;\r\n        const PORTRAIT_UPSIDE_DOWN = 180;\r\n        const LANDSCAPE_RIGHT = 90;\r\n        const tmpX = x;\r\n        if (window.orientation === LANDSCAPE_RIGHT) {\r\n            x = -y;\r\n            y = tmpX;\r\n        } else if (window.orientation === LANDSCAPE_LEFT) {\r\n            x = y;\r\n            y = -tmpX;\r\n        } else if (window.orientation === PORTRAIT_UPSIDE_DOWN) {\r\n            x = -x;\r\n            y = -y;\r\n        }\r\n\r\n        // fix android acc values are opposite\r\n        if (systemInfo.os === OS.ANDROID\r\n            && systemInfo.browserType !== BrowserType.MOBILE_QQ) {\r\n            x = -x;\r\n            y = -y;\r\n        }\r\n        const timestamp = performance.now();\r\n        const acceleration = new Acceleration(x, y, z, timestamp);\r\n        const eventAcceleration = new EventAcceleration(acceleration);\r\n        this._eventTarget.emit(InputEventType.DEVICEMOTION, eventAcceleration);\r\n    }\r\n\r\n    public start (): void {\r\n        // for iOS 13+, safari\r\n        // NOTE: since TS 4.4, `requestPermission` is not defined in class DeviceMotionEvent in `lib.dom.d.ts`, this should be a breaking change in TS.\r\n        // Accessing the `requestPermission` would emit a type error, so we assert `DeviceMotionEvent` as any type to skip the TS type checking.\r\n        if (window.DeviceMotionEvent && typeof (DeviceMotionEvent as any).requestPermission === 'function') {\r\n            (DeviceMotionEvent as any).requestPermission().then((response) => {\r\n                if (response === 'granted') {\r\n                    this._registerEvent();\r\n                }\r\n            }).catch((e) => { warn(e); });\r\n        } else {\r\n            this._registerEvent();\r\n        }\r\n    }\r\n    public stop (): void {\r\n        this._unregisterEvent();\r\n    }\r\n    public setInterval (intervalInMileSeconds: number): void {\r\n        this._intervalInMileSeconds = intervalInMileSeconds;\r\n    }\r\n    public on (eventType: InputEventType, callback: AccelerometerCallback, target?: any): void {\r\n        this._eventTarget.on(eventType, callback, target);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022 Chukong Technologies Inc.\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec2, Vec3, Quat } from '../../cocos/core/math';\r\n\r\n/**\r\n * @en The abstract class for input source, which is used to control the input signal of a mono input source\r\n * @zh InputSource 抽象类，该类用于控制单一输入源的输入信号\r\n */\r\nexport abstract class InputSource<T> {\r\n    /**\r\n     * @en Get the signal value of the input source\r\n     * @zh 获取输入源的信号值\r\n     */\r\n    abstract getValue (): T;\r\n}\r\n\r\n/**\r\n * @en The class for input source of 1D Axis, which is used to control the input signal of a mono input source\r\n * @zh 1D 轴的 InputSource 类，该类用于控制单一输入源的输入信号\r\n */\r\nexport class InputSourceAxis1D extends InputSource<number> {\r\n    /**\r\n     * @en Get the signal value of the input source, ranged from -1 to 1\r\n     * @zh 获取输入源的信号值，取值范围从 -1 到 1\r\n     */\r\n    getValue (): number {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of 2D Axis, which is used to control the input signal of a mono input source\r\n * @zh 2D 轴的 InputSource 类，该类用于控制单一输入源的输入信号\r\n */\r\nexport class InputSourceAxis2D extends InputSource<Vec2> {\r\n    /**\r\n     * @en Get the signal value of the input source, which returns a Vec2 object.\r\n     * @zh 获取输入源的信号值，该方法返回一个 Vec2 对象\r\n     */\r\n    getValue (): Vec2 {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of 3D Axis, which is used to control the input signal of a mono input source\r\n * @zh 3D 轴的 InputSource 类，该类用于控制单一输入源的输入信号\r\n */\r\nexport class InputSourceAxis3D extends InputSource<Vec3> {\r\n    /**\r\n     * @en Get the signal value of the input source, which returns a Vec3 object.\r\n     * @zh 获取输入源的信号值，该方法返回一个 Vec3 对象\r\n     */\r\n    getValue (): Vec3 {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of Quaternion, which is used to control the input signal of a mono input source\r\n * @zh 四元数的 InputSource 类，该类用于控制单一输入源的输入信号\r\n */\r\nexport class InputSourceQuat extends InputSource<Quat> {\r\n    /**\r\n     * @en Get the signal value of the input source, which returns a Quat object.\r\n     * @zh 获取输入源的信号值，该方法返回一个 Quat 对象\r\n     */\r\n    getValue (): Quat {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of 1D Axis, which is used to control the input signal of a composite of multi input source\r\n * @zh 1D 轴的 InputSource 类，该类用于控制多个输入源组合的输入信号\r\n */\r\nexport class CompositeInputSourceAxis1D extends InputSourceAxis1D {\r\n    /**\r\n     * @en The input source object of positive 1D axis\r\n     * @zh 1D 轴的正向的输入源对象\r\n     */\r\n    public declare positive: InputSourceButton;\r\n    /**\r\n     * @en The input source object of negative 1D axis\r\n     * @zh 1D 轴的负向的输入源对象\r\n     */\r\n    public declare negative: InputSourceButton;\r\n    constructor (options: {positive: InputSourceButton, negative: InputSourceButton}) {\r\n        super();\r\n        this.positive = options.positive;\r\n        this.negative = options.negative;\r\n    }\r\n    /**\r\n     * @en Get the signal value of the input source, ranged from -1 to 1.\r\n     * @zh 获取输入源的信号值，取值范围从 -1 到 1\r\n     */\r\n    public getValue (): number {\r\n        const positiveValue = this.positive.getValue();\r\n        const negativeValue = this.negative.getValue();\r\n        if (Math.abs(positiveValue) > Math.abs(negativeValue)) {\r\n            return positiveValue;\r\n        }\r\n        return -negativeValue;\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of 2D Axis, which is used to control the input signal of a composite of multi input source\r\n * @zh 2D 轴的 InputSource 类，该类用于控制多个输入源组合的输入信号\r\n */\r\nexport class CompositeInputSourceAxis2D extends InputSourceAxis2D {\r\n    /**\r\n     * @en The input source object of up direction of 2D axis\r\n     * @zh 2D 轴的向上的输入源对象\r\n     */\r\n    public declare up: InputSourceButton;\r\n    /**\r\n     * @en The input source object of down direction of 2D axis\r\n     * @zh 2D 轴的向下的输入源对象\r\n     */\r\n    public declare down: InputSourceButton;\r\n    /**\r\n     * @en The input source object of left direction of 2D axis\r\n     * @zh 2D 轴的向左的输入源对象\r\n     */\r\n    public declare left: InputSourceButton;\r\n    /**\r\n     * @en The input source object of right direction of 2D axis\r\n     * @zh 2D 轴的向右的输入源对象\r\n     */\r\n    public declare right: InputSourceButton;\r\n\r\n    /**\r\n     * @en The composite input source object on the x axis of 2D axis\r\n     * @zh 2D 轴在 x 轴上的组合输入源对象\r\n     */\r\n    public declare xAxis: CompositeInputSourceAxis1D;\r\n    /**\r\n     * @en The composite input source object on the y axis of 2D axis\r\n     * @zh 2D 轴在 y 轴上的组合输入源对象\r\n     */\r\n    public declare yAxis: CompositeInputSourceAxis1D;\r\n    constructor (options: {up: InputSourceButton, down: InputSourceButton, left: InputSourceButton, right: InputSourceButton}) {\r\n        super();\r\n        this.up = options.up;\r\n        this.down = options.down;\r\n        this.left = options.left;\r\n        this.right = options.right;\r\n        this.xAxis = new CompositeInputSourceAxis1D({ positive: this.right, negative: this.left });\r\n        this.yAxis = new CompositeInputSourceAxis1D({ positive: this.up, negative: this.down });\r\n    }\r\n    /**\r\n     * @en Get the signal value of the input source, which returns a Vec2 object.\r\n     * @zh 获取输入源的信号值，该方法返回一个 Vec2 对象\r\n     */\r\n    getValue (): Vec2 {\r\n        return new Vec2(this.xAxis.getValue(), this.yAxis.getValue());\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of 3D Axis, which is used to control the input signal of a composite of multi input source\r\n * @zh 3D 轴的 InputSource 类，该类用于控制多个输入源组合的输入信号\r\n */\r\nexport class CompositeInputSourceAxis3D extends InputSourceAxis3D {\r\n    /**\r\n     * @en The input source object of up direction of 3D axis\r\n     * @zh 3D 轴的向上的输入源对象\r\n     */\r\n    public declare up: InputSourceButton;\r\n    /**\r\n     * @en The input source object of down direction of 3D axis\r\n     * @zh 3D 轴的向下的输入源对象\r\n     */\r\n    public declare down: InputSourceButton;\r\n    /**\r\n     * @en The input source object of left direction of 3D axis\r\n     * @zh 3D 轴的向左的输入源对象\r\n     */\r\n    public declare left: InputSourceButton;\r\n    /**\r\n     * @en The input source object of right direction of 3D axis\r\n     * @zh 3D 轴的向右的输入源对象\r\n     */\r\n    public declare right: InputSourceButton;\r\n    /**\r\n     * @en The input source object of forward direction of 3D axis\r\n     * @zh 3D 轴的向前的输入源对象\r\n     */\r\n    public declare forward: InputSourceButton;\r\n    /**\r\n     * @en The input source object of backward direction of 3D axis\r\n     * @zh 3D 轴的向后的输入源对象\r\n     */\r\n    public declare backward: InputSourceButton;\r\n\r\n    /**\r\n     * @en The composite input source object on the x axis of 3D axis\r\n     * @zh 3D 轴在 x 轴上的组合输入源对象\r\n     */\r\n    public declare xAxis: CompositeInputSourceAxis1D;\r\n    /**\r\n     * @en The composite input source object on the y axis of 3D axis\r\n     * @zh 3D 轴在 y 轴上的组合输入源对象\r\n     */\r\n    public declare yAxis: CompositeInputSourceAxis1D;\r\n    /**\r\n     * @en The composite input source object on the z axis of 3D axis\r\n     * @zh 3D 轴在 z 轴上的组合输入源对象\r\n     */\r\n    public declare zAxis: CompositeInputSourceAxis1D;\r\n    constructor (options: {up: InputSourceButton, down: InputSourceButton, left: InputSourceButton,\r\n        right: InputSourceButton, forward: InputSourceButton, backward: InputSourceButton}) {\r\n        super();\r\n        this.up = options.up;\r\n        this.down = options.down;\r\n        this.left = options.left;\r\n        this.right = options.right;\r\n        this.forward = options.forward;\r\n        this.backward = options.backward;\r\n\r\n        this.xAxis = new CompositeInputSourceAxis1D({ positive: this.right, negative: this.left });\r\n        this.yAxis = new CompositeInputSourceAxis1D({ positive: this.up, negative: this.down });\r\n        this.zAxis = new CompositeInputSourceAxis1D({ positive: this.forward, negative: this.backward });\r\n    }\r\n\r\n    /**\r\n     * @en Get the signal value of the input source, which returns a Vec3 object.\r\n     * @zh 获取输入源的信号值，该方法返回一个 Vec3 对象\r\n     */\r\n    getValue (): Vec3 {\r\n        return new Vec3(this.xAxis.getValue(), this.yAxis.getValue(), this.zAxis.getValue());\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of mono button, whose input signal value is ranged from 0 to 1\r\n * @zh 单一按键输入源类, 输入信号源的取值范围是 0 到 1\r\n */\r\nexport class InputSourceButton extends InputSourceAxis1D {\r\n    /**\r\n     * @en Get the signal value of the input source, ranged from 0 to 1\r\n     * @zh 获取输入源的信号值，取值范围从 0 到 1\r\n     */\r\n    getValue (): number {\r\n        return super.getValue();\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of dpad, whose input signal value a Vec2 object\r\n * @zh 手柄方向键输入源类, 输入信号源的取值是一个 Vec2 对象\r\n */\r\nexport class InputSourceDpad extends CompositeInputSourceAxis2D {\r\n}\r\n\r\n/**\r\n * @en The class for input source of stick, whose input signal value a Vec2 object\r\n * @zh 摇杆输入源类, 输入信号源的取值是一个 Vec2 对象\r\n */\r\nexport class InputSourceStick extends CompositeInputSourceAxis2D {\r\n}\r\n\r\n/**\r\n * @en The class for input source of orientation, whose input signal value a Quat object\r\n * @zh 方向输入源类, 输入信号源的取值是一个 Quat 对象\r\n */\r\nexport class InputSourceOrientation extends InputSourceQuat {\r\n    /**\r\n     * @en Get the signal value of the input source, which returns a Quat object.\r\n     * @zh 获取输入源的信号值，该方法返回一个 Quat 对象\r\n     */\r\n    getValue (): Quat {\r\n        return super.getValue();\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of position, whose input signal value a Vec3 object\r\n * @zh 坐标输入源类, 输入信号源的取值是一个 Vec3 对象\r\n */\r\nexport class InputSourcePosition extends InputSourceAxis3D {\r\n    /**\r\n     * @en Get the signal value of the input source, which returns a Vec3 object.\r\n     * @zh 获取输入源的信号值，该方法返回一个 Vec3 对象\r\n     */\r\n    getValue (): Vec3 {\r\n        return super.getValue();\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class for input source of mono button touch, whose input signal value is ranged from 0 or 1\r\n * @zh 单一按键触摸输入源类, 输入信号源的取值范围是 0 或 1\r\n */\r\nexport class InputSourceTouch extends InputSourceAxis1D {\r\n    /**\r\n     * @en Get the signal value of the input source, ranged from 0 or 1\r\n     * @zh 获取输入源的信号值，取值范围从 0 或 1\r\n     */\r\n    getValue (): number {\r\n        return super.getValue();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { GamepadCallback } from 'pal/input';\r\nimport { systemInfo } from 'pal/system-info';\r\nimport { USE_XR } from 'internal:constants';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { EventTarget } from '../../../cocos/core/event/event-target';\r\nimport legacyCC from '../../../predefine';\r\nimport { Feature } from '../../system-info/enum-type';\r\nimport { InputSourceButton, InputSourceDpad, InputSourceOrientation, InputSourcePosition, InputSourceStick } from '../input-source';\r\nimport { Quat, Vec3, js } from '../../../cocos/core';\r\nimport { EventGamepad } from '../../../cocos/input/types';\r\n\r\n//#region button index alias\r\nconst BUTTON_SOUTH = 0;\r\nconst BUTTON_EAST = 1;\r\nconst BUTTON_WEST = 2;\r\nconst BUTTON_NORTH = 3;\r\nconst BUTTON_L1 = 4;\r\nconst BUTTON_R1 = 5;\r\nconst BUTTON_L2 = 6;\r\nconst BUTTON_R2 = 7;\r\nconst BUTTON_SHARE = 8;\r\nconst BUTTON_OPTIONS = 9;\r\nconst BUTTON_L3 = 10;\r\nconst BUTTON_R3 = 11;\r\nconst BUTTON_DPAD_UP = 12;\r\nconst BUTTON_DPAD_DOWN = 13;\r\nconst BUTTON_DPAD_LEFT = 14;\r\nconst BUTTON_DPAD_RIGHT = 15;\r\nconst BUTTON_HOME = 16;\r\nconst BUTTON_TOUCH_PAD = 17;\r\nconst AXIS_LEFT_STICK_X = 0;\r\nconst AXIS_LEFT_STICK_Y = 1;\r\nconst AXIS_RIGHT_STICK_X = 2;\r\nconst AXIS_RIGHT_STICK_Y = 3;\r\nconst XR_TRIGGER = 0;\r\nconst XR_GRIP = 1;\r\nconst XR_TOUCHPAD = 2;\r\nconst XR_STICK = 3;\r\nconst XR_BUTTON_1 = 4;\r\nconst XR_BUTTON_2 = 5;\r\nconst XR_AXIS_TOUCHPAD_X = 0;\r\nconst XR_AXIS_TOUCHPAD_Y = 1;\r\nconst XR_AXIS_STICK_X = 2;\r\nconst XR_AXIS_STICK_Y = 3;\r\n//#endregion  button index alias\r\n\r\nconst EPSILON = 0.01;\r\ntype WebGamepad = Gamepad;\r\nconst XRLeftHandedness = 'left';\r\nconst XRRightHandedness = 'right';\r\n\r\nconst devicesTmp: GamepadInputDevice[] = [];\r\n\r\nenum Pose {\r\n    HAND_LEFT = 1,\r\n    HAND_RIGHT = 4,\r\n    AIM_LEFT = 2,\r\n    AIM_RIGHT = 5,\r\n}\r\n\r\ninterface IPoseValue {\r\n    position: Vec3;\r\n    orientation: Quat;\r\n}\r\n\r\ninterface IPoseInfo {\r\n    readonly code: Pose;\r\n    readonly position: DOMPointReadOnly;\r\n    readonly orientation: DOMPointReadOnly;\r\n}\r\n\r\ntype WebPoseState = Record<Pose, IPoseValue>\r\n\r\ninterface IAxisValue {\r\n    negative: number;\r\n    positive: number;\r\n}\r\n\r\ninterface IGamepadCacheInfo {\r\n    buttons: Array<number>;\r\n    axes: Array<number>;\r\n}\r\n\r\nexport class GamepadInputDevice {\r\n    public static all: GamepadInputDevice[] = [];\r\n    public static xr: (GamepadInputDevice | null) = null;\r\n\r\n    public get buttonNorth (): InputSourceButton { return this._buttonNorth; }\r\n    public get buttonEast (): InputSourceButton { return this._buttonEast; }\r\n    public get buttonWest (): InputSourceButton { return this._buttonWest; }\r\n    public get buttonSouth (): InputSourceButton { return this._buttonSouth; }\r\n    public get buttonL1 (): InputSourceButton { return this._buttonL1; }\r\n    public get buttonL2 (): InputSourceButton { return this._buttonL2; }\r\n    public get buttonL3 (): InputSourceButton { return this._buttonL3; }\r\n    public get buttonR1 (): InputSourceButton { return this._buttonR1; }\r\n    public get buttonR2 (): InputSourceButton { return this._buttonR2; }\r\n    public get buttonR3 (): InputSourceButton { return this._buttonR3; }\r\n    // public get buttonTouchPad () { return this._buttonTouchPad; }\r\n    // public get buttonHome () { return this._buttonHome; }\r\n    public get buttonShare (): InputSourceButton { return this._buttonShare; }\r\n    public get buttonOptions (): InputSourceButton { return this._buttonOptions; }\r\n    public get dpad (): InputSourceDpad { return this._dpad; }\r\n    public get leftStick (): InputSourceStick { return this._leftStick; }\r\n    public get rightStick (): InputSourceStick { return this._rightStick; }\r\n    public get buttonStart (): InputSourceButton { return this._buttonStart; }\r\n    public get gripLeft (): InputSourceButton { return this._gripLeft; }\r\n    public get gripRight (): InputSourceButton { return this._gripRight; }\r\n    public get handLeftPosition (): InputSourcePosition { return this._handLeftPosition; }\r\n    public get handLeftOrientation (): InputSourceOrientation { return this._handLeftOrientation; }\r\n    public get handRightPosition (): InputSourcePosition { return this._handRightPosition; }\r\n    public get handRightOrientation (): InputSourceOrientation { return this._handRightOrientation; }\r\n    public get aimLeftPosition (): InputSourcePosition { return this._aimLeftPosition; }\r\n    public get aimLeftOrientation (): InputSourceOrientation { return this._aimLeftOrientation; }\r\n    public get aimRightPosition (): InputSourcePosition { return this._aimRightPosition; }\r\n    public get aimRightOrientation (): InputSourceOrientation { return this._aimRightOrientation; }\r\n\r\n    public get deviceId (): number {\r\n        return this._deviceId;\r\n    }\r\n    public get connected (): boolean {\r\n        return this._connected;\r\n    }\r\n\r\n    private static _eventTarget: EventTarget = new EventTarget();\r\n    private static _cachedWebGamepads: (WebGamepad | null)[] = [];\r\n    private static _cachedWebXRGamepadMap: (Map<string, IGamepadCacheInfo | undefined> | null) = null;\r\n    private static _intervalId = -1;\r\n\r\n    private declare _buttonNorth: InputSourceButton;\r\n    private declare _buttonEast: InputSourceButton;\r\n    private declare _buttonWest: InputSourceButton;\r\n    private declare _buttonSouth: InputSourceButton;\r\n    private declare _buttonL1: InputSourceButton;\r\n    private declare _buttonL2: InputSourceButton;\r\n    private declare _buttonL3: InputSourceButton;\r\n    private declare _buttonR1: InputSourceButton;\r\n    private declare _buttonR2: InputSourceButton;\r\n    private declare _buttonR3: InputSourceButton;\r\n    // private declare buttonTouchPad: InputSourceButton;\r\n    // private declare buttonHome: InputSourceButton;\r\n    private declare _buttonShare: InputSourceButton;\r\n    private declare _buttonOptions: InputSourceButton;\r\n    private declare _dpad: InputSourceDpad;\r\n    private declare _leftStick: InputSourceStick;\r\n    private declare _rightStick: InputSourceStick;\r\n    private declare _buttonStart: InputSourceButton;\r\n    private declare _gripLeft: InputSourceButton;\r\n    private declare _gripRight: InputSourceButton;\r\n    private declare _handLeftPosition: InputSourcePosition;\r\n    private declare _handLeftOrientation: InputSourceOrientation;\r\n    private declare _handRightPosition: InputSourcePosition;\r\n    private declare _handRightOrientation: InputSourceOrientation;\r\n    private declare _aimLeftPosition: InputSourcePosition;\r\n    private declare _aimLeftOrientation: InputSourceOrientation;\r\n    private declare _aimRightPosition: InputSourcePosition;\r\n    private declare _aimRightOrientation: InputSourceOrientation;\r\n\r\n    private _deviceId = -1;\r\n    private _connected = false;\r\n\r\n    private _webPoseState: WebPoseState = {\r\n        [Pose.HAND_LEFT]: { position: Vec3.ZERO, orientation: Quat.IDENTITY },\r\n        [Pose.HAND_RIGHT]: { position: Vec3.ZERO, orientation: Quat.IDENTITY },\r\n        [Pose.AIM_LEFT]: { position: Vec3.ZERO, orientation: Quat.IDENTITY },\r\n        [Pose.AIM_RIGHT]: { position: Vec3.ZERO, orientation: Quat.IDENTITY },\r\n    };\r\n\r\n    constructor (deviceId: number) {\r\n        this._deviceId = deviceId;\r\n        this._initInputSource();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public static _init (): void {\r\n        if (!systemInfo.hasFeature(Feature.EVENT_GAMEPAD)) {\r\n            return;\r\n        }\r\n        GamepadInputDevice._registerEvent();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public static _on (eventType: InputEventType, cb: GamepadCallback, target?: any): void {\r\n        GamepadInputDevice._eventTarget.on(eventType, cb, target);\r\n    }\r\n\r\n    private static _removeInputDevice (id: number): void {\r\n        const removeIndex = GamepadInputDevice.all.findIndex((device) => device.deviceId === id);\r\n        if (removeIndex === -1) {\r\n            return;\r\n        }\r\n        js.array.fastRemoveAt(GamepadInputDevice.all, removeIndex);\r\n    }\r\n    private static _getOrCreateInputDevice (id: number, connected: boolean): GamepadInputDevice {\r\n        let device = GamepadInputDevice.all.find((device) => device.deviceId === id);\r\n        if (!device) {\r\n            device = new GamepadInputDevice(id);\r\n            GamepadInputDevice.all.push(device);\r\n        }\r\n        device._connected = connected;\r\n        return device;\r\n    }\r\n\r\n    private static _ensureDirectorDefined (callback: () => void): void {\r\n        GamepadInputDevice._intervalId = setInterval(() => {\r\n            if (legacyCC.director && legacyCC.Director) {\r\n                clearInterval(GamepadInputDevice._intervalId);\r\n                GamepadInputDevice._intervalId = -1;\r\n                callback();\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    private static _totalGamepadCnt = 0;\r\n    private static _updateGamepadCnt (): void {\r\n        let cnt = 0;\r\n        for (let i = 0, l = GamepadInputDevice._cachedWebGamepads.length; i < l; i++) {\r\n            if (GamepadInputDevice._cachedWebGamepads[i]) cnt++;\r\n        }\r\n        GamepadInputDevice._totalGamepadCnt = cnt;\r\n    }\r\n\r\n    private static _registerEvent (): void {\r\n        GamepadInputDevice._ensureDirectorDefined(() => {\r\n            GamepadInputDevice._cachedWebGamepads = GamepadInputDevice._getWebGamePads();\r\n            GamepadInputDevice._updateGamepadCnt();\r\n            legacyCC.director.on(legacyCC.Director.EVENT_BEGIN_FRAME, GamepadInputDevice._scanGamepads);\r\n        });\r\n        window.addEventListener('gamepadconnected', (e) => {\r\n            GamepadInputDevice._cachedWebGamepads[e.gamepad.index] = e.gamepad;\r\n            GamepadInputDevice._updateGamepadCnt();\r\n            const device = GamepadInputDevice._getOrCreateInputDevice(e.gamepad.index, true);\r\n            GamepadInputDevice._eventTarget.emit(InputEventType.GAMEPAD_CHANGE, new EventGamepad(InputEventType.GAMEPAD_CHANGE, device));\r\n        });\r\n        window.addEventListener('gamepaddisconnected', (e) => {\r\n            GamepadInputDevice._cachedWebGamepads[e.gamepad.index] = null;\r\n            GamepadInputDevice._updateGamepadCnt();\r\n            const device = GamepadInputDevice._getOrCreateInputDevice(e.gamepad.index, false);\r\n            GamepadInputDevice._removeInputDevice(e.gamepad.index);\r\n            GamepadInputDevice._eventTarget.emit(InputEventType.GAMEPAD_CHANGE, new EventGamepad(InputEventType.GAMEPAD_CHANGE, device));\r\n        });\r\n    }\r\n\r\n    private static _scanWebGamepads (devices: GamepadInputDevice[]): void {\r\n        const allDisconnected = GamepadInputDevice._totalGamepadCnt === 0;\r\n        if (allDisconnected) return;\r\n\r\n        const webGamepads = GamepadInputDevice._getWebGamePads();\r\n        if (!webGamepads) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < webGamepads.length; ++i) {\r\n            const webGamepad = webGamepads[i];\r\n            if (!webGamepad) {\r\n                continue;\r\n            }\r\n            const cachedWebGamepad = GamepadInputDevice._cachedWebGamepads[webGamepad.index];\r\n            // TODO: what if cachedWebGamepad is null\r\n            if (cachedWebGamepad) {\r\n                let device: GamepadInputDevice | undefined;\r\n                const cachedButtons = cachedWebGamepad.buttons;\r\n                for (let j = 0; j < cachedButtons.length; ++j) {\r\n                    const cachedButton = cachedButtons[j];\r\n                    const button = webGamepad.buttons[j];\r\n                    if (Math.abs(cachedButton.value - button.value) > EPSILON) {\r\n                        device = GamepadInputDevice._getOrCreateInputDevice(webGamepad.index, true);\r\n                        break;\r\n                    }\r\n                }\r\n                if (device) {\r\n                    devices.push(device);\r\n                    continue;\r\n                }\r\n\r\n                const cachedAxes = cachedWebGamepad.axes;\r\n                for (let j = 0; j < cachedAxes.length; ++j) {\r\n                    const cachedAxisValue = cachedAxes[j];\r\n                    const axisValue = webGamepad.axes[j];\r\n                    if (Math.abs(cachedAxisValue - axisValue) > EPSILON) {\r\n                        device = GamepadInputDevice._getOrCreateInputDevice(webGamepad.index, true);\r\n                        break;\r\n                    }\r\n                }\r\n                if (device) {\r\n                    devices.push(device);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        // update cache\r\n        GamepadInputDevice._cachedWebGamepads = webGamepads;\r\n    }\r\n\r\n    private static _scanGamepads (): void {\r\n        devicesTmp.length = 0;\r\n        GamepadInputDevice._scanWebGamepads(devicesTmp);\r\n        GamepadInputDevice._scanWebXRGamepads(devicesTmp);\r\n        // emit event\r\n        for (let i = 0; i < devicesTmp.length; ++i) {\r\n            const device = devicesTmp[i];\r\n            GamepadInputDevice._eventTarget.emit(InputEventType.GAMEPAD_INPUT, new EventGamepad(InputEventType.GAMEPAD_INPUT, device));\r\n        }\r\n        GamepadInputDevice._scanWebXRGamepadsPose();\r\n    }\r\n\r\n    private static _scanWebXRGamepads (devices: GamepadInputDevice[]): void {\r\n        if (!USE_XR) return;\r\n        const webxrGamepadMap = GamepadInputDevice._getWebXRGamepadMap();\r\n        if (!webxrGamepadMap) {\r\n            // update cache\r\n            GamepadInputDevice._cachedWebXRGamepadMap = null;\r\n            if (GamepadInputDevice.xr && GamepadInputDevice.xr._connected) {\r\n                GamepadInputDevice.xr._connected = false;\r\n                GamepadInputDevice._eventTarget.emit(\r\n                    InputEventType.GAMEPAD_CHANGE,\r\n                    new EventGamepad(InputEventType.GAMEPAD_CHANGE, GamepadInputDevice.xr),\r\n                );\r\n                devices.push(GamepadInputDevice.xr);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!GamepadInputDevice.xr) {\r\n            // webxr gamepads index is -1 https://www.w3.org/TR/webxr-gamepads-module-1/#navigator-differences\r\n            GamepadInputDevice.xr = new GamepadInputDevice(-1);\r\n        }\r\n\r\n        const left = webxrGamepadMap.get(XRLeftHandedness);\r\n        const right = webxrGamepadMap.get(XRRightHandedness);\r\n        if (!left && !right) {\r\n            if (GamepadInputDevice.xr._connected) {\r\n                GamepadInputDevice.xr._connected = false;\r\n                GamepadInputDevice._eventTarget.emit(\r\n                    InputEventType.GAMEPAD_CHANGE,\r\n                    new EventGamepad(InputEventType.GAMEPAD_CHANGE, GamepadInputDevice.xr),\r\n                );\r\n            }\r\n        } else if (!GamepadInputDevice.xr._connected) {\r\n            GamepadInputDevice.xr._connected = true;\r\n            GamepadInputDevice._eventTarget.emit(\r\n                InputEventType.GAMEPAD_CHANGE,\r\n                new EventGamepad(InputEventType.GAMEPAD_CHANGE, GamepadInputDevice.xr),\r\n            );\r\n        }\r\n\r\n        if (GamepadInputDevice.checkGamepadChanged(\r\n            left,\r\n            GamepadInputDevice._cachedWebXRGamepadMap?.get(XRLeftHandedness),\r\n        )) {\r\n            devices.push(GamepadInputDevice.xr);\r\n        } else if (GamepadInputDevice.checkGamepadChanged(\r\n            right,\r\n            GamepadInputDevice._cachedWebXRGamepadMap?.get(XRRightHandedness),\r\n        )) {\r\n            devices.push(GamepadInputDevice.xr);\r\n        }\r\n\r\n        // update cache\r\n        if (!GamepadInputDevice._cachedWebXRGamepadMap) {\r\n            GamepadInputDevice._cachedWebXRGamepadMap = new Map<string, IGamepadCacheInfo | undefined>();\r\n        }\r\n\r\n        GamepadInputDevice._cachedWebXRGamepadMap.set(XRLeftHandedness, GamepadInputDevice._copyCacheGamepadValue(left));\r\n        GamepadInputDevice._cachedWebXRGamepadMap.set(XRRightHandedness, GamepadInputDevice._copyCacheGamepadValue(right));\r\n    }\r\n\r\n    private static checkGamepadChanged (currGamepad: (Gamepad | undefined), cachedGamepad: (IGamepadCacheInfo | undefined)): boolean {\r\n        if (!currGamepad && !cachedGamepad) {\r\n            return false;\r\n        } else if (!currGamepad || !cachedGamepad) {\r\n            return true;\r\n        }\r\n\r\n        const cachedButtons = cachedGamepad.buttons;\r\n        for (let j = 0; j < cachedButtons.length; ++j) {\r\n            const cachedButton = cachedButtons[j];\r\n            const button = currGamepad.buttons[j];\r\n            if (button.value !== 0 || cachedButton !== 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const cachedAxes = cachedGamepad.axes;\r\n        for (let j = 0; j < cachedAxes.length; ++j) {\r\n            const cachedAxisValue = cachedAxes[j];\r\n            const axisValue = currGamepad.axes[j];\r\n            if (axisValue !== 0 || cachedAxisValue !== 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private static _copyCacheGamepadValue (gamepad: Gamepad | undefined): IGamepadCacheInfo | undefined {\r\n        if (!gamepad) {\r\n            return undefined;\r\n        }\r\n\r\n        const cacheGamepad: IGamepadCacheInfo = { buttons: new Array(gamepad.buttons.length), axes: new Array(gamepad.axes.length) };\r\n        for (let j = 0; j < gamepad.buttons.length; ++j) {\r\n            cacheGamepad.buttons[j] = gamepad.buttons[j].value;\r\n        }\r\n        for (let j = 0; j < gamepad.axes.length; ++j) {\r\n            cacheGamepad.axes[j] = gamepad.axes[j];\r\n        }\r\n\r\n        return cacheGamepad;\r\n    }\r\n\r\n    private static _scanWebXRGamepadsPose (): void {\r\n        if (!USE_XR) return;\r\n        const infoList = globalThis.__globalXR?.webxrHandlePoseInfos as IPoseInfo[];\r\n        if (!infoList || !GamepadInputDevice.xr) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < infoList.length; ++i) {\r\n            const info = infoList[i];\r\n            GamepadInputDevice.xr._updateWebPoseState(info);\r\n        }\r\n        GamepadInputDevice._eventTarget.emit(\r\n            InputEventType.HANDLE_POSE_INPUT,\r\n            new EventGamepad(InputEventType.HANDLE_POSE_INPUT, GamepadInputDevice.xr),\r\n        );\r\n    }\r\n\r\n    private static _getWebXRGamepadMap (): (Map<string, Gamepad> | undefined) {\r\n        return globalThis.__globalXR?.webxrGamepadMap as Map<string, Gamepad>;\r\n    }\r\n\r\n    private static _getWebGamePads (): (WebGamepad | null)[] {\r\n        if (typeof navigator.getGamepads === 'function') {\r\n            return navigator.getGamepads();\r\n        } else if (typeof (navigator as any).webkitGetGamepads === 'function') {\r\n            // NOTE: 'webkitGetGamepads' is not a standard web interface\r\n            return (navigator as any).webkitGetGamepads() as (Gamepad | null)[];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private static _getWebGamepad (deviceId: number): WebGamepad | undefined {\r\n        const webGamepads = GamepadInputDevice._getWebGamePads();\r\n        for (let i = 0; i < webGamepads.length; ++i) {\r\n            const webGamepad = webGamepads[i];\r\n            if (webGamepad && webGamepad.index === deviceId) {\r\n                return webGamepad;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private _axisToButtons (axisValue: number): IAxisValue {\r\n        const value = Math.abs(axisValue);\r\n        if (axisValue > 0) {\r\n            return { negative: 0, positive: value };\r\n        } else if (axisValue < 0) {\r\n            return { negative: value, positive: 0 };\r\n        } else {\r\n            return { negative: 0, positive: 0 };\r\n        }\r\n    }\r\n\r\n    private _updateWebPoseState (info: IPoseInfo): void {\r\n        if (info.code !== Pose.HAND_LEFT && info.code !== Pose.AIM_LEFT\r\n            && info.code !== Pose.HAND_RIGHT && info.code !== Pose.AIM_RIGHT) {\r\n            return;\r\n        }\r\n\r\n        this._webPoseState[info.code] = {\r\n            position: new Vec3(info.position.x, info.position.y, info.position.z),\r\n            orientation: new Quat(info.orientation.x, info.orientation.y, info.orientation.z, info.orientation.w),\r\n        };\r\n    }\r\n\r\n    private _initInputSource (): void {\r\n        this._buttonNorth = new InputSourceButton();\r\n        this._buttonNorth.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                if (webxrGamepad && webxrGamepad.buttons.length > XR_BUTTON_2) {\r\n                    return webxrGamepad.buttons[XR_BUTTON_2].value;\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_NORTH].value; }\r\n            return 0;\r\n        };\r\n        this._buttonEast = new InputSourceButton();\r\n        this._buttonEast.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                if (webxrGamepad && webxrGamepad.buttons.length > XR_BUTTON_2) {\r\n                    return webxrGamepad.buttons[XR_BUTTON_2].value;\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_EAST].value; }\r\n            return 0;\r\n        };\r\n        this._buttonWest = new InputSourceButton();\r\n        this._buttonWest.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                if (webxrGamepad && webxrGamepad.buttons.length > XR_BUTTON_1) {\r\n                    return webxrGamepad.buttons[XR_BUTTON_1].value;\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_WEST].value; }\r\n            return 0;\r\n        };\r\n        this._buttonSouth = new InputSourceButton();\r\n        this._buttonSouth.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                if (webxrGamepad && webxrGamepad.buttons.length > XR_BUTTON_1) {\r\n                    return webxrGamepad.buttons[XR_BUTTON_1].value;\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_SOUTH].value; }\r\n            return 0;\r\n        };\r\n\r\n        this._buttonL1 = new InputSourceButton();\r\n        this._buttonL1.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_L1].value; }\r\n            return 0;\r\n        };\r\n        this._buttonL2 = new InputSourceButton();\r\n        this._buttonL2.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                if (webxrGamepad && webxrGamepad.buttons.length > XR_TRIGGER) {\r\n                    return webxrGamepad.buttons[XR_TRIGGER].value;\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_L2].value; }\r\n            return 0;\r\n        };\r\n        this._buttonL3 = new InputSourceButton();\r\n        this._buttonL3.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                if (webxrGamepad) {\r\n                    if (webxrGamepad.buttons.length > XR_STICK && webxrGamepad.buttons[XR_STICK].value !== 0) {\r\n                        return webxrGamepad.buttons[XR_STICK].value;\r\n                    } else if (webxrGamepad.buttons.length > XR_TOUCHPAD && webxrGamepad.buttons[XR_TOUCHPAD].value !== 0) {\r\n                        return webxrGamepad.buttons[XR_TOUCHPAD].value;\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_L3].value; }\r\n            return 0;\r\n        };\r\n        this._buttonR1 = new InputSourceButton();\r\n        this._buttonR1.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_R1].value; }\r\n            return 0;\r\n        };\r\n        this._buttonR2 = new InputSourceButton();\r\n        this._buttonR2.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                if (webxrGamepad && webxrGamepad.buttons.length > XR_TRIGGER) {\r\n                    return webxrGamepad.buttons[XR_TRIGGER].value;\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_R2].value; }\r\n            return 0;\r\n        };\r\n        this._buttonR3 = new InputSourceButton();\r\n        this._buttonR3.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                if (webxrGamepad) {\r\n                    if (webxrGamepad.buttons.length > XR_STICK && webxrGamepad.buttons[XR_STICK].value !== 0) {\r\n                        return webxrGamepad.buttons[XR_STICK].value;\r\n                    } else if (webxrGamepad.buttons.length > XR_TOUCHPAD && webxrGamepad.buttons[XR_TOUCHPAD].value !== 0) {\r\n                        return webxrGamepad.buttons[XR_TOUCHPAD].value;\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_R3].value; }\r\n            return 0;\r\n        };\r\n\r\n        // this._buttonTouchPad = new InputSourceButton();\r\n        // this._buttonTouchPad.getValue = () => {\r\n        //     const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n        //     if (webGamepad) { return webGamepad.buttons[BUTTON_TOUCH_PAD].value; }\r\n        //     return 0;\r\n        // };\r\n        // this._buttonHome = new InputSourceButton();\r\n        // this._buttonHome.getValue = () => {\r\n        //     const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n        //     if (webGamepad) { return webGamepad.buttons[BUTTON_HOME].value; }\r\n        //     return 0;\r\n        // };\r\n        this._buttonShare = new InputSourceButton();\r\n        this._buttonShare.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_SHARE].value; }\r\n            return 0;\r\n        };\r\n        this._buttonOptions = new InputSourceButton();\r\n        this._buttonOptions.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_OPTIONS].value; }\r\n            return 0;\r\n        };\r\n\r\n        const dpadUp = new InputSourceButton();\r\n        dpadUp.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_DPAD_UP].value; }\r\n            return 0;\r\n        };\r\n        const dpadDown = new InputSourceButton();\r\n        dpadDown.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_DPAD_DOWN].value; }\r\n            return 0;\r\n        };\r\n        const dpadLeft = new InputSourceButton();\r\n        dpadLeft.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_DPAD_LEFT].value; }\r\n            return 0;\r\n        };\r\n        const dpadRight = new InputSourceButton();\r\n        dpadRight.getValue = (): number => {\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) { return webGamepad.buttons[BUTTON_DPAD_RIGHT].value; }\r\n            return 0;\r\n        };\r\n        this._dpad = new InputSourceDpad({ up: dpadUp, down: dpadDown, left: dpadLeft, right: dpadRight });\r\n\r\n        const leftStickUp = new InputSourceButton();\r\n        leftStickUp.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_Y && webxrGamepad.axes[XR_AXIS_STICK_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_Y]).negative;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_Y && webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y]).negative;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_LEFT_STICK_Y]).negative;\r\n            }\r\n            return 0;\r\n        };\r\n        const leftStickDown = new InputSourceButton();\r\n        leftStickDown.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_Y && webxrGamepad.axes[XR_AXIS_STICK_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_Y]).positive;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_Y && webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y]).positive;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_LEFT_STICK_Y]).positive;\r\n            }\r\n            return 0;\r\n        };\r\n        const leftStickLeft = new InputSourceButton();\r\n        leftStickLeft.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_X && webxrGamepad.axes[XR_AXIS_STICK_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_X]).negative;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_X && webxrGamepad.axes[XR_AXIS_TOUCHPAD_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_X]).negative;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_LEFT_STICK_X]).negative;\r\n            }\r\n            return 0;\r\n        };\r\n        const leftStickRight = new InputSourceButton();\r\n        leftStickRight.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_X && webxrGamepad.axes[XR_AXIS_STICK_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_X]).positive;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_X && webxrGamepad.axes[XR_AXIS_TOUCHPAD_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_X]).positive;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_LEFT_STICK_X]).positive;\r\n            }\r\n            return 0;\r\n        };\r\n        this._leftStick = new InputSourceStick({ up: leftStickUp, down: leftStickDown, left: leftStickLeft, right: leftStickRight });\r\n\r\n        const rightStickUp = new InputSourceButton();\r\n        rightStickUp.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_Y && webxrGamepad.axes[XR_AXIS_STICK_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_Y]).negative;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_Y && webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y]).negative;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_RIGHT_STICK_Y]).negative;\r\n            }\r\n            return 0;\r\n        };\r\n        const rightStickDown = new InputSourceButton();\r\n        rightStickDown.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_Y && webxrGamepad.axes[XR_AXIS_STICK_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_Y]).positive;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_Y && webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_Y]).positive;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_RIGHT_STICK_Y]).positive;\r\n            }\r\n            return 0;\r\n        };\r\n        const rightStickLeft = new InputSourceButton();\r\n        rightStickLeft.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_X && webxrGamepad.axes[XR_AXIS_STICK_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_X]).negative;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_X && webxrGamepad.axes[XR_AXIS_TOUCHPAD_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_X]).negative;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_RIGHT_STICK_X]).negative;\r\n            }\r\n            return 0;\r\n        };\r\n        const rightStickRight = new InputSourceButton();\r\n        rightStickRight.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                    if (webxrGamepad) {\r\n                        if (webxrGamepad.axes.length > XR_AXIS_STICK_X && webxrGamepad.axes[XR_AXIS_STICK_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_STICK_X]).positive;\r\n                        } else if (webxrGamepad.axes.length > XR_AXIS_TOUCHPAD_X && webxrGamepad.axes[XR_AXIS_TOUCHPAD_X] !== 0) {\r\n                            return this._axisToButtons(webxrGamepad.axes[XR_AXIS_TOUCHPAD_X]).positive;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            const webGamepad = GamepadInputDevice._getWebGamepad(this.deviceId);\r\n            if (webGamepad) {\r\n                return this._axisToButtons(webGamepad.axes[AXIS_RIGHT_STICK_X]).positive;\r\n            }\r\n            return 0;\r\n        };\r\n        this._rightStick = new InputSourceStick({ up: rightStickUp, down: rightStickDown, left: rightStickLeft, right: rightStickRight });\r\n\r\n        this._buttonStart = new InputSourceButton();\r\n        this._buttonStart.getValue = (): number => 0;\r\n\r\n        this._gripLeft = new InputSourceButton();\r\n        this._gripLeft.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                if (USE_XR) {\r\n                    const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRLeftHandedness);\r\n                    if (webxrGamepad && webxrGamepad.buttons.length > XR_GRIP) {\r\n                        return webxrGamepad.buttons[XR_GRIP].value;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        this._gripRight = new InputSourceButton();\r\n        this._gripRight.getValue = (): number => {\r\n            if (this.deviceId === -1) {\r\n                const webxrGamepad = GamepadInputDevice._getWebXRGamepadMap()?.get(XRRightHandedness);\r\n                if (webxrGamepad && webxrGamepad.buttons.length > XR_GRIP) {\r\n                    return webxrGamepad.buttons[XR_GRIP].value;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        this._handLeftPosition = new InputSourcePosition();\r\n        this._handLeftPosition.getValue = (): Vec3 => this._webPoseState[Pose.HAND_LEFT].position;\r\n        this._handLeftOrientation = new InputSourceOrientation();\r\n        this._handLeftOrientation.getValue = (): Quat => this._webPoseState[Pose.HAND_LEFT].orientation;\r\n\r\n        this._handRightPosition = new InputSourcePosition();\r\n        this._handRightPosition.getValue = (): Vec3 => this._webPoseState[Pose.HAND_RIGHT].position;\r\n        this._handRightOrientation = new InputSourceOrientation();\r\n        this._handRightOrientation.getValue = (): Quat => this._webPoseState[Pose.HAND_RIGHT].orientation;\r\n\r\n        this._aimLeftPosition = new InputSourcePosition();\r\n        this._aimLeftPosition.getValue = (): Vec3 => this._webPoseState[Pose.AIM_LEFT].position;\r\n        this._aimLeftOrientation = new InputSourceOrientation();\r\n        this._aimLeftOrientation.getValue = (): Quat => this._webPoseState[Pose.AIM_LEFT].orientation;\r\n\r\n        this._aimRightPosition = new InputSourcePosition();\r\n        this._aimRightPosition.getValue = (): Vec3 => this._webPoseState[Pose.AIM_RIGHT].position;\r\n        this._aimRightOrientation = new InputSourceOrientation();\r\n        this._aimRightOrientation.getValue = (): Quat => this._webPoseState[Pose.AIM_RIGHT].orientation;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { HandleCallback } from 'pal/input';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { EventTarget } from '../../../cocos/core/event';\r\nimport { EventHandle } from '../../../cocos/input/types';\r\nimport { InputSourceButton, InputSourceStick, InputSourcePosition, InputSourceOrientation, InputSourceTouch } from '../input-source';\r\nimport { Vec3, Quat } from '../../../cocos/core/math';\r\n\r\nenum Button {\r\n    BUTTON_EAST,\r\n    BUTTON_SOUTH,\r\n    BUTTON_WEST,\r\n    BUTTON_NORTH,\r\n    BUTTON_TRIGGER_LEFT,\r\n    BUTTON_TRIGGER_RIGHT,\r\n    TRIGGER_LEFT,\r\n    TRIGGER_RIGHT,\r\n    GRIP_LEFT,\r\n    GRIP_RIGHT,\r\n    BUTTON_LEFT_STICK,\r\n    LEFT_STICK_UP,\r\n    LEFT_STICK_DOWN,\r\n    LEFT_STICK_LEFT,\r\n    LEFT_STICK_RIGHT,\r\n    BUTTON_RIGHT_STICK,\r\n    RIGHT_STICK_UP,\r\n    RIGHT_STICK_DOWN,\r\n    RIGHT_STICK_LEFT,\r\n    RIGHT_STICK_RIGHT,\r\n    ROKID_MENU,\r\n    ROKID_START,\r\n}\r\n\r\nexport enum KeyEventType {\r\n    KET_CLICK,\r\n    KET_STICK,\r\n    KET_GRAB,\r\n    KET_TOUCH,\r\n}\r\n\r\nenum StickKeyCode {\r\n    UNDEFINE = 0,\r\n    A,\r\n    B,\r\n    X,\r\n    Y,\r\n    L1,\r\n    R1,\r\n    MINUS,\r\n    PLUS,\r\n    L3,\r\n    R3,\r\n    MENU,\r\n    START,\r\n    TRIGGER_LEFT,\r\n    TRIGGER_RIGHT,\r\n}\r\n\r\nenum StickAxisCode {\r\n    UNDEFINE = 0,\r\n    X,\r\n    Y,\r\n    LEFT_STICK_X,\r\n    LEFT_STICK_Y,\r\n    RIGHT_STICK_X,\r\n    RIGHT_STICK_Y,\r\n    L2,\r\n    R2,\r\n    LEFT_GRIP,\r\n    RIGHT_GRIP,\r\n}\r\n\r\nenum StickTouchCode {\r\n    UNDEFINE = 0,\r\n    A,\r\n    B,\r\n    X,\r\n    Y,\r\n    LEFT_TRIGGER,\r\n    RIGHT_TRIGGER,\r\n    LEFT_THUMBSTICK,\r\n    RIGHT_THUMBSTICK,\r\n}\r\n\r\nconst _nativeButtonMap = {\r\n    1: Button.BUTTON_EAST,\r\n    2: Button.BUTTON_SOUTH,\r\n    3: Button.BUTTON_NORTH,\r\n    4: Button.BUTTON_WEST,\r\n    9: Button.BUTTON_LEFT_STICK,\r\n    10: Button.BUTTON_RIGHT_STICK,\r\n    11: Button.ROKID_MENU,\r\n    12: Button.ROKID_START,\r\n    13: Button.BUTTON_TRIGGER_LEFT,\r\n    14: Button.BUTTON_TRIGGER_RIGHT,\r\n};\r\n\r\ninterface IAxisValue {\r\n    negative: number;\r\n    positive: number;\r\n}\r\n\r\ntype NativeButtonState = Record<Button, number>\r\ntype NativeTouchState = Record<StickTouchCode, number>\r\n\r\nexport class HandleInputDevice {\r\n    public get buttonNorth (): InputSourceButton { return this._buttonNorth; }\r\n    public get buttonEast (): InputSourceButton { return this._buttonEast; }\r\n    public get buttonWest (): InputSourceButton { return this._buttonWest; }\r\n    public get buttonSouth (): InputSourceButton { return this._buttonSouth; }\r\n    public get buttonTriggerLeft (): InputSourceButton { return this._buttonTriggerLeft; }\r\n    public get buttonTriggerRight (): InputSourceButton { return this._buttonTriggerRight; }\r\n    public get triggerLeft (): InputSourceButton { return this._triggerLeft; }\r\n    public get triggerRight (): InputSourceButton { return this._triggerRight; }\r\n    public get gripLeft (): InputSourceButton { return this._gripLeft; }\r\n    public get gripRight (): InputSourceButton { return this._gripRight; }\r\n    public get leftStick (): InputSourceStick { return this._leftStick; }\r\n    public get rightStick (): InputSourceStick { return this._rightStick; }\r\n    public get buttonLeftStick (): InputSourceButton { return this._buttonLeftStick; }\r\n    public get buttonRightStick (): InputSourceButton { return this._buttonRightStick; }\r\n    public get buttonOptions (): InputSourceButton { return this._buttonOptions; }\r\n    public get buttonStart (): InputSourceButton { return this._buttonStart; }\r\n    public get handLeftPosition (): InputSourcePosition { return this._handLeftPosition; }\r\n    public get handLeftOrientation (): InputSourceOrientation { return this._handLeftOrientation; }\r\n    public get handRightPosition (): InputSourcePosition { return this._handRightPosition; }\r\n    public get handRightOrientation (): InputSourceOrientation { return this._handRightOrientation; }\r\n    public get aimLeftPosition (): InputSourcePosition { return this._aimLeftPosition; }\r\n    public get aimLeftOrientation (): InputSourceOrientation { return this._aimLeftOrientation; }\r\n    public get aimRightPosition (): InputSourcePosition { return this._aimRightPosition; }\r\n    public get aimRightOrientation (): InputSourceOrientation { return this._aimRightOrientation; }\r\n    public get touchButtonA (): InputSourceTouch { return this._touchButtonA; }\r\n    public get touchButtonB (): InputSourceTouch { return this._touchButtonB; }\r\n    public get touchButtonX (): InputSourceTouch { return this._touchButtonX; }\r\n    public get touchButtonY (): InputSourceTouch { return this._touchButtonY; }\r\n    public get touchButtonTriggerLeft (): InputSourceTouch { return this._touchButtonTriggerLeft; }\r\n    public get touchButtonTriggerRight (): InputSourceTouch { return this._touchButtonTriggerRight; }\r\n    public get touchButtonThumbStickLeft (): InputSourceTouch { return this._touchButtonThumbStickLeft; }\r\n    public get touchButtonThumbStickRight (): InputSourceTouch { return this._touchButtonThumbStickRight; }\r\n\r\n    private _eventTarget: EventTarget = new EventTarget();\r\n\r\n    private declare _buttonNorth: InputSourceButton;\r\n    private declare _buttonEast: InputSourceButton;\r\n    private declare _buttonWest: InputSourceButton;\r\n    private declare _buttonSouth: InputSourceButton;\r\n    private declare _buttonTriggerLeft: InputSourceButton;\r\n    private declare _buttonTriggerRight: InputSourceButton;\r\n    private declare _triggerLeft: InputSourceButton;\r\n    private declare _triggerRight: InputSourceButton;\r\n    private declare _gripLeft: InputSourceButton;\r\n    private declare _gripRight: InputSourceButton;\r\n    private declare _leftStick: InputSourceStick;\r\n    private declare _rightStick: InputSourceStick;\r\n    private declare _buttonLeftStick: InputSourceButton;\r\n    private declare _buttonRightStick: InputSourceButton;\r\n    private declare _buttonOptions: InputSourceButton;\r\n    private declare _buttonStart: InputSourceButton;\r\n    private declare _handLeftPosition: InputSourcePosition;\r\n    private declare _handLeftOrientation: InputSourceOrientation;\r\n    private declare _handRightPosition: InputSourcePosition;\r\n    private declare _handRightOrientation: InputSourceOrientation;\r\n    private declare _aimLeftPosition: InputSourcePosition;\r\n    private declare _aimLeftOrientation: InputSourceOrientation;\r\n    private declare _aimRightPosition: InputSourcePosition;\r\n    private declare _aimRightOrientation: InputSourceOrientation;\r\n    private declare _touchButtonA: InputSourceTouch;\r\n    private declare _touchButtonB: InputSourceTouch;\r\n    private declare _touchButtonX: InputSourceTouch;\r\n    private declare _touchButtonY: InputSourceTouch;\r\n    private declare _touchButtonTriggerLeft: InputSourceTouch;\r\n    private declare _touchButtonTriggerRight: InputSourceTouch;\r\n    private declare _touchButtonThumbStickLeft: InputSourceTouch;\r\n    private declare _touchButtonThumbStickRight: InputSourceTouch;\r\n\r\n    private _nativeButtonState: NativeButtonState = {\r\n        [Button.BUTTON_SOUTH]: 0,\r\n        [Button.BUTTON_EAST]: 0,\r\n        [Button.BUTTON_WEST]: 0,\r\n        [Button.BUTTON_NORTH]: 0,\r\n        [Button.BUTTON_TRIGGER_LEFT]: 0,\r\n        [Button.BUTTON_TRIGGER_RIGHT]: 0,\r\n        [Button.TRIGGER_LEFT]: 0,\r\n        [Button.TRIGGER_RIGHT]: 0,\r\n        [Button.GRIP_LEFT]: 0,\r\n        [Button.GRIP_RIGHT]: 0,\r\n        [Button.LEFT_STICK_UP]: 0,\r\n        [Button.LEFT_STICK_DOWN]: 0,\r\n        [Button.LEFT_STICK_LEFT]: 0,\r\n        [Button.LEFT_STICK_RIGHT]: 0,\r\n        [Button.RIGHT_STICK_UP]: 0,\r\n        [Button.RIGHT_STICK_DOWN]: 0,\r\n        [Button.RIGHT_STICK_LEFT]: 0,\r\n        [Button.RIGHT_STICK_RIGHT]: 0,\r\n        [Button.BUTTON_LEFT_STICK]: 0,\r\n        [Button.BUTTON_RIGHT_STICK]: 0,\r\n        [Button.ROKID_MENU]: 0,\r\n        [Button.ROKID_START]: 0,\r\n    };\r\n\r\n    private _nativeTouchState: NativeTouchState = {\r\n        [StickTouchCode.UNDEFINE]: 0,\r\n        [StickTouchCode.A]: 0,\r\n        [StickTouchCode.B]: 0,\r\n        [StickTouchCode.X]: 0,\r\n        [StickTouchCode.Y]: 0,\r\n        [StickTouchCode.LEFT_TRIGGER]: 0,\r\n        [StickTouchCode.RIGHT_TRIGGER]: 0,\r\n        [StickTouchCode.LEFT_THUMBSTICK]: 0,\r\n        [StickTouchCode.RIGHT_THUMBSTICK]: 0,\r\n    };\r\n\r\n    constructor () {\r\n        this._initInputSource();\r\n        window.addEventListener('xr-remote-input', (evt: Event): void => {\r\n            const remoteInputEvent: CustomEvent = evt as CustomEvent;\r\n            const keyEventType: KeyEventType = remoteInputEvent.detail.keyEventType;\r\n            const stickAxisCode = remoteInputEvent.detail.stickAxisCode as StickAxisCode;\r\n            const stickAxisValue = remoteInputEvent.detail.stickAxisValue as number;\r\n            const stickKeyCode = remoteInputEvent.detail.stickKeyCode;\r\n            const isButtonPressed = remoteInputEvent.detail.isButtonPressed;\r\n            const touchCode = remoteInputEvent.detail.touchCode as StickTouchCode;\r\n            const touchValue = remoteInputEvent.detail.touchValue as number;\r\n\r\n            if (keyEventType === KeyEventType.KET_CLICK) {\r\n                const button = _nativeButtonMap[stickKeyCode];\r\n                this._nativeButtonState[button] = isButtonPressed ? 1 : 0;\r\n            } else if (keyEventType === KeyEventType.KET_STICK || keyEventType === KeyEventType.KET_GRAB) {\r\n                //\r\n                let negativeButton: Button|undefined;\r\n                let positiveButton: Button|undefined;\r\n                let axisValue: IAxisValue|undefined;\r\n                switch (stickAxisCode) {\r\n                case StickAxisCode.LEFT_STICK_X:\r\n                    negativeButton = Button.LEFT_STICK_LEFT;\r\n                    positiveButton = Button.LEFT_STICK_RIGHT;\r\n                    axisValue = this._axisToButtons(stickAxisValue);\r\n                    break;\r\n                case StickAxisCode.LEFT_STICK_Y:\r\n                    negativeButton = Button.LEFT_STICK_DOWN;\r\n                    positiveButton = Button.LEFT_STICK_UP;\r\n                    axisValue = this._axisToButtons(stickAxisValue);\r\n                    break;\r\n                case StickAxisCode.RIGHT_STICK_X:\r\n                    negativeButton = Button.RIGHT_STICK_LEFT;\r\n                    positiveButton = Button.RIGHT_STICK_RIGHT;\r\n                    axisValue = this._axisToButtons(stickAxisValue);\r\n                    break;\r\n                case StickAxisCode.RIGHT_STICK_Y:\r\n                    negativeButton = Button.RIGHT_STICK_DOWN;\r\n                    positiveButton = Button.RIGHT_STICK_UP;\r\n                    axisValue = this._axisToButtons(stickAxisValue);\r\n                    break;\r\n                case StickAxisCode.L2:\r\n                    this._nativeButtonState[Button.TRIGGER_LEFT] = stickAxisValue;\r\n                    break;\r\n                case StickAxisCode.R2:\r\n                    this._nativeButtonState[Button.TRIGGER_RIGHT] = stickAxisValue;\r\n                    break;\r\n                case StickAxisCode.LEFT_GRIP:\r\n                    this._nativeButtonState[Button.GRIP_LEFT] = stickAxisValue;\r\n                    break;\r\n                case StickAxisCode.RIGHT_GRIP:\r\n                    this._nativeButtonState[Button.GRIP_RIGHT] = stickAxisValue;\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n\r\n                if (negativeButton && positiveButton && axisValue) {\r\n                    this._nativeButtonState[negativeButton] = axisValue.negative;\r\n                    this._nativeButtonState[positiveButton] = axisValue.positive;\r\n                }\r\n            } else if (keyEventType === KeyEventType.KET_TOUCH) {\r\n                switch (touchCode) {\r\n                case StickTouchCode.A:\r\n                case StickTouchCode.B:\r\n                case StickTouchCode.X:\r\n                case StickTouchCode.Y:\r\n                case StickTouchCode.LEFT_TRIGGER:\r\n                case StickTouchCode.RIGHT_TRIGGER:\r\n                case StickTouchCode.LEFT_THUMBSTICK:\r\n                case StickTouchCode.RIGHT_THUMBSTICK:\r\n                    this._nativeTouchState[touchCode] = touchValue;\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this._eventTarget.emit(InputEventType.HANDLE_INPUT, new EventHandle(InputEventType.HANDLE_INPUT, this));\r\n        });\r\n    }\r\n\r\n    private _axisToButtons (axisValue: number): IAxisValue {\r\n        const value = Math.abs(axisValue);\r\n        if (axisValue > 0) {\r\n            return { negative: 0, positive: value };\r\n        } else if (axisValue < 0) {\r\n            return { negative: value, positive: 0 };\r\n        } else {\r\n            return { negative: 0, positive: 0 };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _on (eventType: InputEventType, callback: HandleCallback, target?: any): void {\r\n        this._eventTarget.on(eventType, callback, target);\r\n    }\r\n\r\n    private _initInputSource (): void {\r\n        this._buttonNorth = new InputSourceButton();\r\n        this._buttonNorth.getValue = (): number => this._nativeButtonState[Button.BUTTON_NORTH];\r\n        this._buttonEast = new InputSourceButton();\r\n        this._buttonEast.getValue = (): number => this._nativeButtonState[Button.BUTTON_EAST];\r\n        this._buttonWest = new InputSourceButton();\r\n        this._buttonWest.getValue = (): number => this._nativeButtonState[Button.BUTTON_WEST];\r\n        this._buttonSouth = new InputSourceButton();\r\n        this._buttonSouth.getValue = (): number => this._nativeButtonState[Button.BUTTON_SOUTH];\r\n\r\n        this._buttonTriggerLeft = new InputSourceButton();\r\n        this._buttonTriggerLeft.getValue = (): number => this._nativeButtonState[Button.BUTTON_TRIGGER_LEFT];\r\n        this._buttonTriggerRight = new InputSourceButton();\r\n        this._buttonTriggerRight.getValue = (): number => this._nativeButtonState[Button.BUTTON_TRIGGER_RIGHT];\r\n        this._triggerLeft = new InputSourceButton();\r\n        this._triggerLeft.getValue = (): number => this._nativeButtonState[Button.TRIGGER_LEFT];\r\n        this._triggerRight = new InputSourceButton();\r\n        this._triggerRight.getValue = (): number => this._nativeButtonState[Button.TRIGGER_RIGHT];\r\n        this._gripLeft = new InputSourceButton();\r\n        this._gripLeft.getValue = (): number => this._nativeButtonState[Button.GRIP_LEFT];\r\n        this._gripRight = new InputSourceButton();\r\n        this._gripRight.getValue = (): number => this._nativeButtonState[Button.GRIP_RIGHT];\r\n\r\n        this._buttonLeftStick = new InputSourceButton();\r\n        this._buttonLeftStick.getValue = (): number => this._nativeButtonState[Button.BUTTON_LEFT_STICK];\r\n        const leftStickUp = new InputSourceButton();\r\n        leftStickUp.getValue = (): number => this._nativeButtonState[Button.LEFT_STICK_UP];\r\n        const leftStickDown = new InputSourceButton();\r\n        leftStickDown.getValue = (): number => this._nativeButtonState[Button.LEFT_STICK_DOWN];\r\n        const leftStickLeft = new InputSourceButton();\r\n        leftStickLeft.getValue = (): number => this._nativeButtonState[Button.LEFT_STICK_LEFT];\r\n        const leftStickRight = new InputSourceButton();\r\n        leftStickRight.getValue = (): number => this._nativeButtonState[Button.LEFT_STICK_RIGHT];\r\n        this._leftStick = new InputSourceStick({\r\n            up: leftStickUp,\r\n            down: leftStickDown,\r\n            left: leftStickLeft,\r\n            right: leftStickRight,\r\n        });\r\n\r\n        this._buttonRightStick = new InputSourceButton();\r\n        this._buttonRightStick.getValue = (): number => this._nativeButtonState[Button.BUTTON_RIGHT_STICK];\r\n        const rightStickUp = new InputSourceButton();\r\n        rightStickUp.getValue = (): number => this._nativeButtonState[Button.RIGHT_STICK_UP];\r\n        const rightStickDown = new InputSourceButton();\r\n        rightStickDown.getValue = (): number => this._nativeButtonState[Button.RIGHT_STICK_DOWN];\r\n        const rightStickLeft = new InputSourceButton();\r\n        rightStickLeft.getValue = (): number => this._nativeButtonState[Button.RIGHT_STICK_LEFT];\r\n        const rightStickRight = new InputSourceButton();\r\n        rightStickRight.getValue = (): number => this._nativeButtonState[Button.RIGHT_STICK_RIGHT];\r\n        this._rightStick = new InputSourceStick({\r\n            up: rightStickUp,\r\n            down: rightStickDown,\r\n            left: rightStickLeft,\r\n            right: rightStickRight,\r\n        });\r\n\r\n        this._buttonOptions = new InputSourceButton();\r\n        this._buttonOptions.getValue = (): number => this._nativeButtonState[Button.ROKID_MENU];\r\n        this._buttonStart = new InputSourceButton();\r\n        this._buttonStart.getValue = (): number => this._nativeButtonState[Button.ROKID_START];\r\n\r\n        this._handLeftPosition = new InputSourcePosition();\r\n        this._handLeftPosition.getValue = (): Readonly<Vec3> => Vec3.ZERO;\r\n        this._handLeftOrientation = new InputSourceOrientation();\r\n        this._handLeftOrientation.getValue = (): Readonly<Quat> => Quat.IDENTITY;\r\n\r\n        this._handRightPosition = new InputSourcePosition();\r\n        this._handRightPosition.getValue = (): Readonly<Vec3> => Vec3.ZERO;\r\n        this._handRightOrientation = new InputSourceOrientation();\r\n        this._handRightOrientation.getValue = (): Readonly<Quat> => Quat.IDENTITY;\r\n\r\n        this._aimLeftPosition = new InputSourcePosition();\r\n        this._aimLeftPosition.getValue = (): Readonly<Vec3> => Vec3.ZERO;\r\n        this._aimLeftOrientation = new InputSourceOrientation();\r\n        this._aimLeftOrientation.getValue = (): Readonly<Quat> => Quat.IDENTITY;\r\n\r\n        this._aimRightPosition = new InputSourcePosition();\r\n        this._aimRightPosition.getValue = (): Readonly<Vec3> => Vec3.ZERO;\r\n        this._aimRightOrientation = new InputSourceOrientation();\r\n        this._aimRightOrientation.getValue = (): Readonly<Quat> => Quat.IDENTITY;\r\n        this._touchButtonA = new InputSourceTouch();\r\n        this._touchButtonA.getValue = (): number => this._nativeTouchState[StickTouchCode.A];\r\n        this._touchButtonB = new InputSourceTouch();\r\n        this._touchButtonB.getValue = (): number => this._nativeTouchState[StickTouchCode.B];\r\n        this._touchButtonX = new InputSourceTouch();\r\n        this._touchButtonX.getValue = (): number => this._nativeTouchState[StickTouchCode.X];\r\n        this._touchButtonY = new InputSourceTouch();\r\n        this._touchButtonY.getValue = (): number => this._nativeTouchState[StickTouchCode.Y];\r\n        this._touchButtonTriggerLeft = new InputSourceTouch();\r\n        this._touchButtonTriggerLeft.getValue = (): number => this._nativeTouchState[StickTouchCode.LEFT_TRIGGER];\r\n        this._touchButtonTriggerRight = new InputSourceTouch();\r\n        this._touchButtonTriggerRight.getValue = (): number => this._nativeTouchState[StickTouchCode.RIGHT_TRIGGER];\r\n        this._touchButtonThumbStickLeft = new InputSourceTouch();\r\n        this._touchButtonThumbStickLeft.getValue = (): number => this._nativeTouchState[StickTouchCode.LEFT_THUMBSTICK];\r\n        this._touchButtonThumbStickRight = new InputSourceTouch();\r\n        this._touchButtonThumbStickRight.getValue = (): number => this._nativeTouchState[StickTouchCode.RIGHT_THUMBSTICK];\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { HMDCallback } from 'pal/input';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { EventTarget } from '../../../cocos/core/event/event-target';\r\nimport { EventHMD } from '../../../cocos/input/types';\r\nimport { InputSourcePosition, InputSourceOrientation } from '../input-source';\r\nimport { Vec3, Quat } from '../../../cocos/core/math';\r\nimport legacyCC from '../../../predefine';\r\n\r\nenum Pose {\r\n    VIEW_LEFT = 0,\r\n    VIEW_RIGHT = 3,\r\n    HEAD_MIDDLE = 6,\r\n}\r\n\r\ninterface IPoseValue {\r\n    position: Vec3;\r\n    orientation: Quat;\r\n}\r\n\r\ninterface IPoseInfo {\r\n    readonly code: number;\r\n    readonly position: DOMPointReadOnly;\r\n    readonly orientation: DOMPointReadOnly;\r\n}\r\n\r\ntype WebPoseState = Record<Pose, IPoseValue>\r\n\r\nexport class HMDInputDevice {\r\n    public get viewLeftPosition (): InputSourcePosition { return this._viewLeftPosition; }\r\n    public get viewLeftOrientation (): InputSourceOrientation { return this._viewLeftOrientation; }\r\n    public get viewRightPosition (): InputSourcePosition { return this._viewRightPosition; }\r\n    public get viewRightOrientation (): InputSourceOrientation { return this._viewRightOrientation; }\r\n    public get headMiddlePosition (): InputSourcePosition { return this._headMiddlePosition; }\r\n    public get headMiddleOrientation (): InputSourceOrientation { return this._headMiddleOrientation; }\r\n\r\n    private _eventTarget: EventTarget = new EventTarget();\r\n    private _intervalId = -1;\r\n\r\n    private declare _viewLeftPosition: InputSourcePosition;\r\n    private declare _viewLeftOrientation: InputSourceOrientation;\r\n    private declare _viewRightPosition: InputSourcePosition;\r\n    private declare _viewRightOrientation: InputSourceOrientation;\r\n    private declare _headMiddlePosition: InputSourcePosition;\r\n    private declare _headMiddleOrientation: InputSourceOrientation;\r\n\r\n    private _webPoseState: WebPoseState = {\r\n        [Pose.VIEW_LEFT]: { position: Vec3.ZERO, orientation: Quat.IDENTITY },\r\n        [Pose.VIEW_RIGHT]: { position: Vec3.ZERO, orientation: Quat.IDENTITY },\r\n        [Pose.HEAD_MIDDLE]: { position: Vec3.ZERO, orientation: Quat.IDENTITY },\r\n    };\r\n\r\n    constructor () {\r\n        this._initInputSource();\r\n        this._registerEvent();\r\n    }\r\n\r\n    private _ensureDirectorDefined (): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this._intervalId = setInterval(() => {\r\n                if (legacyCC.director && legacyCC.Director) {\r\n                    clearInterval(this._intervalId);\r\n                    this._intervalId = -1;\r\n                    resolve();\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        this._ensureDirectorDefined().then(() => {\r\n            legacyCC.director.on(legacyCC.Director.EVENT_BEGIN_FRAME, this._scanHmd, this);\r\n        }).catch((e) => {});\r\n    }\r\n\r\n    private _scanHmd (): void {\r\n        const infoList = globalThis.__globalXR?.webxrHmdPoseInfos as IPoseInfo[];\r\n        if (!infoList) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < infoList.length; ++i) {\r\n            const info = infoList[i];\r\n            this._updateWebPoseState(info);\r\n        }\r\n        this._eventTarget.emit(InputEventType.HMD_POSE_INPUT, new EventHMD(InputEventType.HMD_POSE_INPUT, this));\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _on (eventType: InputEventType, callback: HMDCallback, target?: any): void {\r\n        this._eventTarget.on(eventType, callback, target);\r\n    }\r\n\r\n    private _updateWebPoseState (info: IPoseInfo): void {\r\n        if (info.code !== Pose.VIEW_LEFT && info.code !== Pose.VIEW_RIGHT && info.code !== Pose.HEAD_MIDDLE) {\r\n            return;\r\n        }\r\n\r\n        this._webPoseState[info.code] = {\r\n            position: new Vec3(info.position.x, info.position.y, info.position.z),\r\n            orientation: new Quat(info.orientation.x, info.orientation.y, info.orientation.z, info.orientation.w),\r\n        };\r\n    }\r\n\r\n    private _initInputSource (): void {\r\n        this._viewLeftPosition = new InputSourcePosition();\r\n        this._viewLeftPosition.getValue = (): Vec3 => this._webPoseState[Pose.VIEW_LEFT].position;\r\n        this._viewLeftOrientation = new InputSourceOrientation();\r\n        this._viewLeftOrientation.getValue = (): Quat => this._webPoseState[Pose.VIEW_LEFT].orientation;\r\n\r\n        this._viewRightPosition = new InputSourcePosition();\r\n        this._viewRightPosition.getValue = (): Vec3 => this._webPoseState[Pose.VIEW_RIGHT].position;\r\n        this._viewRightOrientation = new InputSourceOrientation();\r\n        this._viewRightOrientation.getValue = (): Quat => this._webPoseState[Pose.VIEW_RIGHT].orientation;\r\n\r\n        this._headMiddlePosition = new InputSourcePosition();\r\n        this._headMiddlePosition.getValue = (): Vec3 => this._webPoseState[Pose.HEAD_MIDDLE].position;\r\n        this._headMiddleOrientation = new InputSourceOrientation();\r\n        this._headMiddleOrientation.getValue = (): Quat => this._webPoseState[Pose.HEAD_MIDDLE].orientation;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR_NOT_IN_PREVIEW, HTML5, NATIVE } from 'internal:constants';\r\nimport { AccelerometerInputSource, GamepadInputDevice, HMDInputDevice, HandheldInputDevice,\r\n    HandleInputDevice, KeyboardInputSource, MouseInputSource, TouchInputSource } from 'pal/input';\r\nimport { touchManager } from '../../pal/input/touch-manager';\r\nimport { EventTarget, error, sys } from '../core';\r\nimport { Event, EventAcceleration, EventGamepad, EventHandle, EventHandheld, EventHMD, EventKeyboard, EventMouse, EventTouch, Touch } from './types';\r\nimport { InputEventType } from './types/event-enum';\r\n\r\nexport enum EventDispatcherPriority {\r\n    GLOBAL = 0,\r\n    UI = 1,\r\n}\r\n\r\nexport interface IEventDispatcher {\r\n    /**\r\n     * Priority to emit event to dispatcher\r\n     */\r\n    readonly priority: EventDispatcherPriority;\r\n    /**\r\n     * @param event\r\n     * @returns Whether dispatch to next event dispatcher\r\n     */\r\n    dispatchEvent(event: Event): boolean;\r\n\r\n    onThrowException(): void;\r\n}\r\n\r\nclass InputEventDispatcher implements IEventDispatcher {\r\n    public priority: EventDispatcherPriority = EventDispatcherPriority.GLOBAL;\r\n    private declare _inputEventTarget: EventTarget;\r\n\r\n    constructor (inputEventTarget: EventTarget) {\r\n        this._inputEventTarget = inputEventTarget;\r\n    }\r\n\r\n    onThrowException (): void {\r\n        // empty\r\n    }\r\n\r\n    public dispatchEvent (event: Event): boolean {\r\n        this._inputEventTarget.emit(event.type, event);\r\n        return true;\r\n    }\r\n}\r\n\r\nconst pointerEventTypeMap: Record<string, InputEventType> = {\r\n    [InputEventType.MOUSE_DOWN]: InputEventType.TOUCH_START,\r\n    [InputEventType.MOUSE_MOVE]: InputEventType.TOUCH_MOVE,\r\n    [InputEventType.MOUSE_UP]: InputEventType.TOUCH_END,\r\n};\r\n\r\nexport declare namespace Input {\r\n    export type EventType = EnumAlias<typeof InputEventType>;\r\n}\r\n\r\ninterface InputEventMap {\r\n    [InputEventType.MOUSE_DOWN]: (event: EventMouse) => void,\r\n    [InputEventType.MOUSE_MOVE]: (event: EventMouse) => void,\r\n    [InputEventType.MOUSE_UP]: (event: EventMouse) => void,\r\n    [InputEventType.MOUSE_WHEEL]: (event: EventMouse) => void,\r\n    [InputEventType.TOUCH_START]: (event: EventTouch) => void,\r\n    [InputEventType.TOUCH_MOVE]: (event: EventTouch) => void,\r\n    [InputEventType.TOUCH_END]: (event: EventTouch) => void,\r\n    [InputEventType.TOUCH_CANCEL]: (event: EventTouch) => void,\r\n    [InputEventType.KEY_DOWN]: (event: EventKeyboard) => void,\r\n    [InputEventType.KEY_PRESSING]: (event: EventKeyboard) => void,\r\n    [InputEventType.KEY_UP]: (event: EventKeyboard) => void,\r\n    [InputEventType.DEVICEMOTION]: (event: EventAcceleration) => void,\r\n    [InputEventType.GAMEPAD_CHANGE]: (event: EventGamepad) => void,\r\n    [InputEventType.GAMEPAD_INPUT]: (event: EventGamepad) => void,\r\n    [InputEventType.HANDLE_INPUT]: (event: EventHandle) => void,\r\n    [InputEventType.HANDLE_POSE_INPUT]: (event: EventHandle) => void,\r\n    [InputEventType.HMD_POSE_INPUT]: (event: EventHMD) => void,\r\n    [InputEventType.HANDHELD_POSE_INPUT]: (event: EventHandheld) => void,\r\n}\r\n\r\n/**\r\n * @en Dispatch input event immediately.\r\n * The input events are collocted to be dispatched in each main loop by default.\r\n * If you need to recieve the input event immediately, please set this to true.\r\n * NOTE: if set this to true, the input events are dispatched between each tick, the input event can't be optimized by engine.\r\n *\r\n * @zh 立即派发输入事件。\r\n * 输入事件默认会被收集到每一帧主循环里派发，如果你需要立即接收到输入事件，请把该属性设为 true。\r\n * 注意：如果设置为 true，则输入事件可能会在帧间触发，这样的输入事件是没办法被引擎优化的。\r\n */\r\nconst dispatchImmediately = !NATIVE;\r\n\r\n/**\r\n * @en\r\n * This Input class manages all events of input. include: touch, mouse, accelerometer, gamepad, handle, hmd and keyboard.\r\n * You can get the `Input` instance with `input`.\r\n *\r\n * @zh\r\n * 该输入类管理所有的输入事件，包括：触摸、鼠标、加速计、游戏手柄、6DOF手柄、头戴显示器 和 键盘。\r\n * 你可以通过 `input` 获取到 `Input` 的实例。\r\n *\r\n * @example\r\n * ```\r\n * input.on(InputEventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\r\n * input.off(InputEventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\r\n * ```\r\n */\r\nexport class Input {\r\n    /**\r\n     * @en The input event type\r\n     * @zh 输入事件类型\r\n     */\r\n    public static EventType = InputEventType;\r\n\r\n    private _eventTarget: EventTarget = new EventTarget();\r\n    private _touchInput = new TouchInputSource();\r\n    private _mouseInput = new MouseInputSource();\r\n    private _keyboardInput = new KeyboardInputSource();\r\n    private _accelerometerInput = new AccelerometerInputSource();\r\n\r\n    private declare _handleInput: HandleInputDevice;\r\n    private declare _hmdInput: HMDInputDevice;\r\n    private declare _handheldInput: HandheldInputDevice;\r\n\r\n    private _eventKeyboardList: EventKeyboard[] = [];\r\n    private _eventAccelerationList: EventAcceleration[] = [];\r\n    private _eventGamepadList: EventGamepad[] = [];\r\n    private _eventHandleList: EventHandle[] = [];\r\n    private _eventHMDList: EventHMD[] = [];\r\n    private _eventHandheldList: EventHandheld[] = [];\r\n\r\n    private _needSimulateTouchMoveEvent = false;\r\n\r\n    private declare _inputEventDispatcher: InputEventDispatcher;\r\n    private _eventDispatcherList: IEventDispatcher[] = [];\r\n\r\n    constructor () {\r\n        if (HTML5 || NATIVE) {\r\n            this._handleInput = new HandleInputDevice();\r\n            this._hmdInput = new HMDInputDevice();\r\n            this._handheldInput = new HandheldInputDevice();\r\n        }\r\n        this._registerEvent();\r\n        this._inputEventDispatcher = new InputEventDispatcher(this._eventTarget);\r\n        this._registerEventDispatcher(this._inputEventDispatcher);\r\n        if (HTML5 || NATIVE) {\r\n            GamepadInputDevice._init();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This should be a private method, but it's exposed for Editor Only.\r\n     */\r\n    private _dispatchMouseDownEvent (nativeMouseEvent: any): void {\r\n        this._mouseInput.dispatchMouseDownEvent?.(nativeMouseEvent);\r\n    }\r\n    /**\r\n     * This should be a private method, but it's exposed for Editor Only.\r\n     */\r\n    private _dispatchMouseMoveEvent (nativeMouseEvent: any): void {\r\n        this._mouseInput.dispatchMouseMoveEvent?.(nativeMouseEvent);\r\n    }\r\n    /**\r\n     * This should be a private method, but it's exposed for Editor Only.\r\n     */\r\n    private _dispatchMouseUpEvent (nativeMouseEvent: any): void {\r\n        this._mouseInput.dispatchMouseUpEvent?.(nativeMouseEvent);\r\n    }\r\n    /**\r\n     * This should be a private method, but it's exposed for Editor Only.\r\n     */\r\n    private _dispatchMouseScrollEvent (nativeMouseEvent: any): void {\r\n        this._mouseInput.dispatchScrollEvent?.(nativeMouseEvent);\r\n    }\r\n\r\n    /**\r\n     * This should be a private method, but it's exposed for Editor Only.\r\n     */\r\n    private _dispatchKeyboardDownEvent (nativeKeyboardEvent: any): void {\r\n        this._keyboardInput.dispatchKeyboardDownEvent?.(nativeKeyboardEvent);\r\n    }\r\n    /**\r\n     * This should be a private method, but it's exposed for Editor Only.\r\n     */\r\n    private _dispatchKeyboardUpEvent (nativeKeyboardEvent: any): void {\r\n        this._keyboardInput.dispatchKeyboardUpEvent?.(nativeKeyboardEvent);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register a callback of a specific input event type.\r\n     * @zh\r\n     * 注册特定的输入事件回调。\r\n     *\r\n     * @param eventType - The event type\r\n     * @param callback - The event listener's callback\r\n     * @param target - The event listener's target and callee\r\n     */\r\n    public on<K extends keyof InputEventMap> (eventType: K, callback: InputEventMap[K], target?: any): InputEventMap[K] {\r\n        this._eventTarget.on(eventType, callback, target);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register a callback of a specific input event type once.\r\n     * @zh\r\n     * 注册单次的输入事件回调。\r\n     *\r\n     * @param eventType - The event type\r\n     * @param callback - The event listener's callback\r\n     * @param target - The event listener's target and callee\r\n     */\r\n    public once<K extends keyof InputEventMap> (eventType: K, callback: InputEventMap[K], target?: any): InputEventMap[K] {\r\n        this._eventTarget.once(eventType, callback, target);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Unregister a callback of a specific input event type.\r\n     * @zh\r\n     * 取消注册特定的输入事件回调。\r\n     *\r\n     * @param eventType - The event type\r\n     * @param callback - The event listener's callback\r\n     * @param target - The event listener's target and callee\r\n     */\r\n    public off<K extends keyof InputEventMap> (eventType: K, callback?: InputEventMap[K], target?: any): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            return;\r\n        }\r\n        this._eventTarget.off(eventType, callback, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get touch object by touch ID.\r\n     * @zh\r\n     * 通过 touch ID 获取 touch对象。\r\n     */\r\n    public getTouch (touchID: number): Readonly<Touch> | undefined {\r\n        return touchManager.getTouch(touchID);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get all the current touches objects as array.\r\n     * @zh\r\n     * 获取当前 所有touch对象 的数组。\r\n     */\r\n    public getAllTouches (): Touch[] {\r\n        return touchManager.getAllTouches();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the number of touches.\r\n     * @zh\r\n     * 获取当前 touch 对象的数量。\r\n     */\r\n    public getTouchCount (): number {\r\n        return touchManager.getTouchCount();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets whether to enable the accelerometer event listener or not.\r\n     *\r\n     * @zh\r\n     * 是否启用加速度计事件。\r\n     */\r\n    public setAccelerometerEnabled (isEnable: boolean): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            return;\r\n        }\r\n        if (isEnable) {\r\n            this._accelerometerInput.start();\r\n        } else {\r\n            this._accelerometerInput.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the accelerometer interval value.\r\n     *\r\n     * @zh\r\n     * 设置加速度计间隔值。\r\n     */\r\n    public setAccelerometerInterval (intervalInMileSeconds: number): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            return;\r\n        }\r\n        this._accelerometerInput.setInterval(intervalInMileSeconds);\r\n    }\r\n\r\n    private _simulateEventTouch (eventMouse: EventMouse): void {\r\n        const eventType = pointerEventTypeMap[eventMouse.type];\r\n        const touchID = 0;\r\n        const touch = touchManager.getOrCreateTouch(touchID, eventMouse.getLocationX(), eventMouse.getLocationY());\r\n        if (!touch) {\r\n            return;\r\n        }\r\n        const changedTouches = [touch];\r\n        const eventTouch = new EventTouch(changedTouches, false, eventType, (eventType === InputEventType.TOUCH_END ? [] : changedTouches));\r\n        eventTouch.windowId = eventMouse.windowId;\r\n\r\n        if (eventType === InputEventType.TOUCH_END) {\r\n            touchManager.releaseTouch(touchID);\r\n        }\r\n        this._dispatchEventTouch(eventTouch);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _registerEventDispatcher (eventDispatcher: IEventDispatcher): void {\r\n        this._eventDispatcherList.push(eventDispatcher);\r\n        this._eventDispatcherList.sort((a, b): number => b.priority - a.priority);\r\n    }\r\n\r\n    private _emitEvent (event: Event): void {\r\n        const length = this._eventDispatcherList.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            const dispatcher = this._eventDispatcherList[i];\r\n            try {\r\n                if (!dispatcher.dispatchEvent(event)) {\r\n                    break;\r\n                }\r\n            } catch (e: any) {\r\n                this._clearEvents();\r\n                dispatcher.onThrowException();\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        const self = this;\r\n        const touchInput = self._touchInput;\r\n        const mouseInput = self._mouseInput;\r\n        const keyboardInput = self._keyboardInput;\r\n        const handleInput = self._handleInput;\r\n        if (sys.hasFeature(sys.Feature.INPUT_TOUCH)) {\r\n            touchInput.on(InputEventType.TOUCH_START, (event): void => {\r\n                self._dispatchEventTouch(event);\r\n            });\r\n            touchInput.on(InputEventType.TOUCH_MOVE, (event): void => {\r\n                self._dispatchEventTouch(event);\r\n            });\r\n            touchInput.on(InputEventType.TOUCH_END, (event): void => {\r\n                self._dispatchEventTouch(event);\r\n            });\r\n            touchInput.on(InputEventType.TOUCH_CANCEL, (event): void => {\r\n                self._dispatchEventTouch(event);\r\n            });\r\n        }\r\n\r\n        if (sys.hasFeature(sys.Feature.EVENT_MOUSE)) {\r\n            mouseInput.on(InputEventType.MOUSE_DOWN, (event): void => {\r\n                self._needSimulateTouchMoveEvent = true;\r\n                self._simulateEventTouch(event);\r\n                self._dispatchEventMouse(event);\r\n            });\r\n            mouseInput.on(InputEventType.MOUSE_MOVE, (event): void => {\r\n                if (self._needSimulateTouchMoveEvent) {\r\n                    self._simulateEventTouch(event);\r\n                }\r\n                self._dispatchEventMouse(event);\r\n            });\r\n            mouseInput.on(InputEventType.MOUSE_UP, (event): void => {\r\n                self._needSimulateTouchMoveEvent = false;\r\n                self._simulateEventTouch(event);\r\n                self._dispatchEventMouse(event);\r\n            });\r\n            mouseInput.on(InputEventType.MOUSE_WHEEL, (event): void => {\r\n                self._dispatchEventMouse(event);\r\n            });\r\n            mouseInput.on(InputEventType.MOUSE_LEAVE, (event): void => {\r\n                self._dispatchEventMouse(event);\r\n            });\r\n            mouseInput.on(InputEventType.MOUSE_ENTER, (event): void => {\r\n                self._dispatchEventMouse(event);\r\n            });\r\n        }\r\n\r\n        if (sys.hasFeature(sys.Feature.EVENT_KEYBOARD)) {\r\n            const eventKeyboardList = self._eventKeyboardList;\r\n            keyboardInput.on(InputEventType.KEY_DOWN, (event): void => {\r\n                self._dispatchOrPushEvent(event, eventKeyboardList);\r\n            });\r\n            keyboardInput.on(InputEventType.KEY_PRESSING, (event): void => {\r\n                self._dispatchOrPushEvent(event, eventKeyboardList);\r\n            });\r\n            keyboardInput.on(InputEventType.KEY_UP, (event): void => {\r\n                self._dispatchOrPushEvent(event, eventKeyboardList);\r\n            });\r\n        }\r\n\r\n        if (sys.hasFeature(sys.Feature.EVENT_ACCELEROMETER)) {\r\n            const eventAccelerationList = self._eventAccelerationList;\r\n            self._accelerometerInput.on(InputEventType.DEVICEMOTION, (event): void => {\r\n                self._dispatchOrPushEvent(event, eventAccelerationList);\r\n            });\r\n        }\r\n\r\n        if (HTML5 || NATIVE) {\r\n            if (sys.hasFeature(sys.Feature.EVENT_GAMEPAD)) {\r\n                const eventGamepadList = self._eventGamepadList;\r\n                GamepadInputDevice._on(InputEventType.GAMEPAD_CHANGE, (event): void => {\r\n                    self._dispatchOrPushEvent(event, eventGamepadList);\r\n                });\r\n                GamepadInputDevice._on(InputEventType.GAMEPAD_INPUT, (event): void => {\r\n                    self._dispatchOrPushEvent(event, eventGamepadList);\r\n                });\r\n                GamepadInputDevice._on(InputEventType.HANDLE_POSE_INPUT, (event): void => {\r\n                    self._dispatchOrPushEvent(event, eventGamepadList);\r\n                });\r\n            }\r\n\r\n            if (sys.hasFeature(sys.Feature.EVENT_HANDLE)) {\r\n                const eventHandleList = self._eventHandleList;\r\n                handleInput._on(InputEventType.HANDLE_INPUT, (event): void => {\r\n                    self._dispatchOrPushEvent(event, eventHandleList);\r\n                });\r\n                handleInput._on(InputEventType.HANDLE_POSE_INPUT, (event): void => {\r\n                    self._dispatchOrPushEvent(event, eventHandleList);\r\n                });\r\n            }\r\n\r\n            if (sys.hasFeature(sys.Feature.EVENT_HMD)) {\r\n                const eventHMDList = self._eventHMDList;\r\n                self._hmdInput._on(InputEventType.HMD_POSE_INPUT, (event): void => {\r\n                    self._dispatchOrPushEvent(event, eventHMDList);\r\n                });\r\n            }\r\n\r\n            if (sys.hasFeature(sys.Feature.EVENT_HANDHELD)) {\r\n                const eventHandheldList = self._eventHandheldList;\r\n                self._handheldInput._on(InputEventType.HANDHELD_POSE_INPUT, (event): void => {\r\n                    self._dispatchOrPushEvent(event, eventHandheldList);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _clearEvents (): void {\r\n        this._eventKeyboardList.length = 0;\r\n        this._eventAccelerationList.length = 0;\r\n        this._eventGamepadList.length = 0;\r\n        this._eventHandleList.length = 0;\r\n        this._eventHMDList.length = 0;\r\n    }\r\n\r\n    private _dispatchOrPushEvent (event: Event, eventList: Event[]): void {\r\n        if (dispatchImmediately) {\r\n            this._emitEvent(event);\r\n        } else {\r\n            eventList.push(event);\r\n        }\r\n    }\r\n\r\n    private _dispatchEventMouse (event: Event): void {\r\n        this._emitEvent(event);\r\n    }\r\n\r\n    private _dispatchEventTouch (eventTouch: EventTouch): void {\r\n        const touches = eventTouch.getTouches();\r\n        const touchesLength = touches.length;\r\n        for (let i = 0; i < touchesLength; ++i) {\r\n            eventTouch.touch = touches[i];\r\n            eventTouch.propagationStopped = eventTouch.propagationImmediateStopped = false;\r\n            this._emitEvent(eventTouch);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _frameDispatchEvents (): void {\r\n        if (dispatchImmediately) return;\r\n        const eventHMDList = this._eventHMDList;\r\n        // TODO: culling event queue\r\n        for (let i = 0, length = eventHMDList.length; i < length; ++i) {\r\n            const eventHMD = eventHMDList[i];\r\n            this._emitEvent(eventHMD);\r\n        }\r\n\r\n        const eventHandheldList = this._eventHandheldList;\r\n        // TODO: culling event queue\r\n        for (let i = 0, length = eventHandheldList.length; i < length; ++i) {\r\n            const eventHandheld = eventHandheldList[i];\r\n            this._emitEvent(eventHandheld);\r\n        }\r\n\r\n        this._mouseInput.dispatchEventsInCache();\r\n        this._touchInput.dispatchEventsInCache();\r\n\r\n        const eventKeyboardList = this._eventKeyboardList;\r\n        // TODO: culling event queue\r\n        for (let i = 0, length = eventKeyboardList.length; i < length; ++i) {\r\n            const eventKeyboard = eventKeyboardList[i];\r\n            this._emitEvent(eventKeyboard);\r\n        }\r\n\r\n        const eventAccelerationList = this._eventAccelerationList;\r\n        // TODO: culling event queue\r\n        for (let i = 0, length = eventAccelerationList.length; i < length; ++i) {\r\n            const eventAcceleration = eventAccelerationList[i];\r\n            this._emitEvent(eventAcceleration);\r\n        }\r\n\r\n        const eventGamepadList = this._eventGamepadList;\r\n        // TODO: culling event queue\r\n        for (let i = 0, length = eventGamepadList.length; i < length; ++i) {\r\n            const eventGamepad = eventGamepadList[i];\r\n            this._emitEvent(eventGamepad);\r\n        }\r\n\r\n        const eventHandleList = this._eventHandleList;\r\n        // TODO: culling event queue\r\n        for (let i = 0, length = eventHandleList.length; i < length; ++i) {\r\n            const eventHandle = eventHandleList[i];\r\n            this._emitEvent(eventHandle);\r\n        }\r\n\r\n        this._clearEvents();\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * The singleton of the Input class, this singleton manages all events of input. include: touch, mouse, accelerometer, gamepad, handle, hmd and keyboard.\r\n *\r\n * @zh\r\n * 输入类单例，该单例管理所有的输入事件，包括：触摸、鼠标、加速计、游戏手柄、6DOF手柄、头戴显示器 和 键盘。\r\n *\r\n * @example\r\n * ```\r\n * input.on(InputEventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\r\n * input.off(InputEventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\r\n * ```\r\n */\r\nexport const input = new Input();\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { HandheldCallback } from 'pal/input';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { EventTarget } from '../../../cocos/core/event/event-target';\r\nimport { InputSourcePosition, InputSourceOrientation } from '../input-source';\r\nimport { Vec3, Quat } from '../../../cocos/core/math';\r\n\r\nexport class HandheldInputDevice {\r\n    public get handheldPosition (): InputSourcePosition { return this._handheldPosition; }\r\n    public get handheldOrientation (): InputSourceOrientation { return this._handheldOrientation; }\r\n\r\n    private _eventTarget: EventTarget = new EventTarget();\r\n\r\n    private declare _handheldPosition: InputSourcePosition;\r\n    private declare _handheldOrientation: InputSourceOrientation;\r\n\r\n    constructor () {\r\n        this._initInputSource();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _on (eventType: InputEventType, callback: HandheldCallback, target?: any): void {\r\n        this._eventTarget.on(eventType, callback, target);\r\n    }\r\n\r\n    private _initInputSource (): void {\r\n        this._handheldPosition = new InputSourcePosition();\r\n        this._handheldPosition.getValue = (): Readonly<Vec3> => Vec3.ZERO;\r\n        this._handheldOrientation = new InputSourceOrientation();\r\n        this._handheldOrientation.getValue = (): Readonly<Quat> =>  Quat.IDENTITY;\r\n    }\r\n}\r\n","import { KeyCode } from '../../cocos/input/types';\r\n\r\nexport const code2KeyCode: Record<string, KeyCode> = {\r\n    Backspace: KeyCode.BACKSPACE,\r\n    Tab: KeyCode.TAB,\r\n    Enter: KeyCode.ENTER,\r\n    ShiftLeft: KeyCode.SHIFT_LEFT,\r\n    ControlLeft: KeyCode.CTRL_LEFT,\r\n    AltLeft: KeyCode.ALT_LEFT,\r\n    ShiftRight: KeyCode.SHIFT_RIGHT,\r\n    ControlRight: KeyCode.CTRL_RIGHT,\r\n    AltRight: KeyCode.ALT_RIGHT,\r\n    Pause: KeyCode.PAUSE,\r\n    CapsLock: KeyCode.CAPS_LOCK,\r\n    Escape: KeyCode.ESCAPE,\r\n    Space: KeyCode.SPACE,\r\n    PageUp: KeyCode.PAGE_UP,\r\n    PageDown: KeyCode.PAGE_DOWN,\r\n    End: KeyCode.END,\r\n    Home: KeyCode.HOME,\r\n    ArrowLeft: KeyCode.ARROW_LEFT,\r\n    ArrowUp: KeyCode.ARROW_UP,\r\n    ArrowRight: KeyCode.ARROW_RIGHT,\r\n    ArrowDown: KeyCode.ARROW_DOWN,\r\n    Insert: KeyCode.INSERT,\r\n    Delete: KeyCode.DELETE,\r\n    Digit0: KeyCode.DIGIT_0,\r\n    Digit1: KeyCode.DIGIT_1,\r\n    Digit2: KeyCode.DIGIT_2,\r\n    Digit3: KeyCode.DIGIT_3,\r\n    Digit4: KeyCode.DIGIT_4,\r\n    Digit5: KeyCode.DIGIT_5,\r\n    Digit6: KeyCode.DIGIT_6,\r\n    Digit7: KeyCode.DIGIT_7,\r\n    Digit8: KeyCode.DIGIT_8,\r\n    Digit9: KeyCode.DIGIT_9,\r\n    KeyA: KeyCode.KEY_A,\r\n    KeyB: KeyCode.KEY_B,\r\n    KeyC: KeyCode.KEY_C,\r\n    KeyD: KeyCode.KEY_D,\r\n    KeyE: KeyCode.KEY_E,\r\n    KeyF: KeyCode.KEY_F,\r\n    KeyG: KeyCode.KEY_G,\r\n    KeyH: KeyCode.KEY_H,\r\n    KeyI: KeyCode.KEY_I,\r\n    KeyJ: KeyCode.KEY_J,\r\n    KeyK: KeyCode.KEY_K,\r\n    KeyL: KeyCode.KEY_L,\r\n    KeyM: KeyCode.KEY_M,\r\n    KeyN: KeyCode.KEY_N,\r\n    KeyO: KeyCode.KEY_O,\r\n    KeyP: KeyCode.KEY_P,\r\n    KeyQ: KeyCode.KEY_Q,\r\n    KeyR: KeyCode.KEY_R,\r\n    KeyS: KeyCode.KEY_S,\r\n    KeyT: KeyCode.KEY_T,\r\n    KeyU: KeyCode.KEY_U,\r\n    KeyV: KeyCode.KEY_V,\r\n    KeyW: KeyCode.KEY_W,\r\n    KeyX: KeyCode.KEY_X,\r\n    KeyY: KeyCode.KEY_Y,\r\n    KeyZ: KeyCode.KEY_Z,\r\n    Numpad0: KeyCode.NUM_0,\r\n    Numpad1: KeyCode.NUM_1,\r\n    Numpad2: KeyCode.NUM_2,\r\n    Numpad3: KeyCode.NUM_3,\r\n    Numpad4: KeyCode.NUM_4,\r\n    Numpad5: KeyCode.NUM_5,\r\n    Numpad6: KeyCode.NUM_6,\r\n    Numpad7: KeyCode.NUM_7,\r\n    Numpad8: KeyCode.NUM_8,\r\n    Numpad9: KeyCode.NUM_9,\r\n    NumpadMultiply: KeyCode.NUM_MULTIPLY,\r\n    NumpadAdd: KeyCode.NUM_PLUS,\r\n    NumpadSubtract: KeyCode.NUM_SUBTRACT,\r\n    NumpadDecimal: KeyCode.NUM_DECIMAL,\r\n    NumpadDivide: KeyCode.NUM_DIVIDE,\r\n    NumpadEnter: KeyCode.NUM_ENTER,\r\n    F1: KeyCode.F1,\r\n    F2: KeyCode.F2,\r\n    F3: KeyCode.F3,\r\n    F4: KeyCode.F4,\r\n    F5: KeyCode.F5,\r\n    F6: KeyCode.F6,\r\n    F7: KeyCode.F7,\r\n    F8: KeyCode.F8,\r\n    F9: KeyCode.F9,\r\n    F10: KeyCode.F10,\r\n    F11: KeyCode.F11,\r\n    F12: KeyCode.F12,\r\n    NumLock: KeyCode.NUM_LOCK,\r\n    ScrollLock: KeyCode.SCROLL_LOCK,\r\n    Semicolon: KeyCode.SEMICOLON,\r\n    Equal: KeyCode.EQUAL,\r\n    Comma: KeyCode.COMMA,\r\n    Minus: KeyCode.DASH,\r\n    Period: KeyCode.PERIOD,\r\n    Slash: KeyCode.SLASH,\r\n    Backquote: KeyCode.BACK_QUOTE,\r\n    BracketLeft: KeyCode.BRACKET_LEFT,\r\n    Backslash: KeyCode.BACKSLASH,\r\n    BracketRight: KeyCode.BRACKET_RIGHT,\r\n    Quote: KeyCode.QUOTE,\r\n};\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { KeyboardCallback } from 'pal/input';\r\nimport { KeyCode, EventKeyboard } from '../../../cocos/input/types';\r\nimport { EventTarget } from '../../../cocos/core/event';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { code2KeyCode } from '../keycodes';\r\n\r\nfunction getKeyCode (code: string): KeyCode {\r\n    return code2KeyCode[code] || KeyCode.NONE;\r\n}\r\n\r\nexport class KeyboardInputSource {\r\n    private _eventTarget: EventTarget = new EventTarget();\r\n\r\n    constructor () {\r\n        this._registerEvent();\r\n    }\r\n\r\n    public dispatchKeyboardDownEvent (nativeKeyboardEvent: KeyboardEvent): void { this._handleKeyboardDown(nativeKeyboardEvent); }\r\n    public dispatchKeyboardUpEvent (nativeKeyboardEvent: KeyboardEvent): void { this._handleKeyboardUp(nativeKeyboardEvent); }\r\n\r\n    public on (eventType: InputEventType, callback: KeyboardCallback, target?: any): void {\r\n        this._eventTarget.on(eventType, callback,  target);\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        const canvas = document.getElementById('GameCanvas') as HTMLCanvasElement;\r\n        canvas?.addEventListener('keydown', this._handleKeyboardDown.bind(this));\r\n        canvas?.addEventListener('keyup', this._handleKeyboardUp.bind(this));\r\n    }\r\n\r\n    private _getInputEvent (event: any, eventType: InputEventType): EventKeyboard {\r\n        const keyCode = getKeyCode(event.code);\r\n        const eventKeyboard = new EventKeyboard(keyCode, eventType);\r\n        return eventKeyboard;\r\n    }\r\n\r\n    private _handleKeyboardDown (event: KeyboardEvent): void {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (!event.repeat) {\r\n            const keyDownInputEvent = this._getInputEvent(event, InputEventType.KEY_DOWN);\r\n            this._eventTarget.emit(InputEventType.KEY_DOWN, keyDownInputEvent);\r\n        } else {\r\n            const keyPressingInputEvent = this._getInputEvent(event, InputEventType.KEY_PRESSING);\r\n            this._eventTarget.emit(InputEventType.KEY_PRESSING, keyPressingInputEvent);\r\n        }\r\n    }\r\n\r\n    private _handleKeyboardUp (event: KeyboardEvent): void {\r\n        const inputEvent = this._getInputEvent(event, InputEventType.KEY_UP);\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        this._eventTarget.emit(InputEventType.KEY_UP, inputEvent);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { MouseCallback } from 'pal/input';\r\nimport { systemInfo } from 'pal/system-info';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { EventMouse } from '../../../cocos/input/types';\r\nimport { EventTarget } from '../../../cocos/core/event';\r\nimport { Rect, Vec2 } from '../../../cocos/core/math';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { Feature } from '../../system-info/enum-type';\r\nimport { warn } from '../../../cocos/core/platform/debug';\r\n\r\nexport class MouseInputSource {\r\n    private _canvas?: HTMLCanvasElement;\r\n    private _eventTarget: EventTarget = new EventTarget();\r\n    private _pointLocked = false;\r\n    private _isPressed = false;\r\n    private _preMousePos: Vec2 = new Vec2();\r\n\r\n    private _handleMouseDown!: (event: MouseEvent) => void;\r\n    private _handleMouseMove!: (event: MouseEvent) => void;\r\n    private _handleMouseUp!: (event: MouseEvent) => void;\r\n\r\n    constructor () {\r\n        if (systemInfo.hasFeature(Feature.EVENT_MOUSE)) {\r\n            this._canvas = document.getElementById('GameCanvas') as HTMLCanvasElement;\r\n            if (!this._canvas && !TEST && !EDITOR) {\r\n                warn('failed to access canvas');\r\n            }\r\n\r\n            this._handleMouseDown = this._createCallback(InputEventType.MOUSE_DOWN);\r\n            this._handleMouseMove = this._createCallback(InputEventType.MOUSE_MOVE);\r\n            this._handleMouseUp = this._createCallback(InputEventType.MOUSE_UP);\r\n            // In Editor, we receive mouse event from manually event dispatching.\r\n            if (!EDITOR) {\r\n                this._registerEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispatchMouseDownEvent (nativeMouseEvent: any): void { this._handleMouseDown(nativeMouseEvent as MouseEvent); }\r\n    public dispatchMouseMoveEvent (nativeMouseEvent: any): void { this._handleMouseMove(nativeMouseEvent as MouseEvent); }\r\n    public dispatchMouseUpEvent (nativeMouseEvent: any): void { this._handleMouseUp(nativeMouseEvent as MouseEvent); }\r\n    public dispatchScrollEvent (nativeMouseEvent: WheelEvent): void { this._handleMouseWheel(nativeMouseEvent); }\r\n\r\n    public on (eventType: InputEventType, callback: MouseCallback, target?: any): void {\r\n        this._eventTarget.on(eventType, callback, target);\r\n    }\r\n\r\n    private _getCanvasRect (): Rect {\r\n        const canvas = this._canvas;\r\n        const box = canvas?.getBoundingClientRect();\r\n        if (box) {\r\n            return new Rect(box.x, box.y, box.width, box.height);\r\n        }\r\n        return new Rect(0, 0, 0, 0);\r\n    }\r\n\r\n    private _getLocation (mouseEvent: MouseEvent): Vec2 {\r\n        const canvasRect = this._getCanvasRect();\r\n        const dpr = screenAdapter.devicePixelRatio;\r\n        let x = this._pointLocked ? (this._preMousePos.x / dpr + mouseEvent.movementX) : (mouseEvent.clientX - canvasRect.x);\r\n        let y = this._pointLocked ? (this._preMousePos.y / dpr - mouseEvent.movementY) : (canvasRect.y + canvasRect.height - mouseEvent.clientY);\r\n        x *= dpr;\r\n        y *= dpr;\r\n        return new Vec2(x, y);\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        // register mouse down event\r\n        window.addEventListener('mousedown', () => {\r\n            this._isPressed = true;\r\n        });\r\n        this._canvas?.addEventListener('mousedown', this._handleMouseDown);\r\n\r\n        // register mouse move event\r\n        this._canvas?.addEventListener('mousemove', this._handleMouseMove);\r\n\r\n        // register mouse up event\r\n        window.addEventListener('mouseup', this._handleMouseUp);\r\n        this._canvas?.addEventListener('mouseup', this._handleMouseUp);\r\n\r\n        // register wheel event\r\n        this._canvas?.addEventListener('wheel', this._handleMouseWheel.bind(this));\r\n        this._registerPointerLockEvent();\r\n\r\n        this._canvas?.addEventListener('mouseleave', this._handleMouseLeave.bind(this));\r\n        this._canvas?.addEventListener('mouseenter', this._handleMouseEnter.bind(this));\r\n    }\r\n\r\n    // To be removed in the future.\r\n    private _registerPointerLockEvent (): void {\r\n        const lockChangeAlert = (): void => {\r\n            const canvas = this._canvas;\r\n            // NOTE: mozPointerLockElement is not a standard web interface\r\n            if (document.pointerLockElement === canvas || (document as any).mozPointerLockElement === canvas) {\r\n                this._pointLocked = true;\r\n            } else {\r\n                this._pointLocked = false;\r\n            }\r\n        };\r\n        if ('onpointerlockchange' in document) {\r\n            document.addEventListener('pointerlockchange', lockChangeAlert, false);\r\n        } else if ('onmozpointerlockchange' in document) {\r\n            // NOTE: handle event compatibility\r\n            (document as any).addEventListener('mozpointerlockchange', lockChangeAlert, false);\r\n        }\r\n    }\r\n\r\n    private _createCallback (eventType: InputEventType) {\r\n        return (mouseEvent: MouseEvent): void => {\r\n            const location = this._getLocation(mouseEvent);\r\n            const { button, buttons } = mouseEvent;\r\n            let targetButton = button;\r\n            switch (eventType) {\r\n            case InputEventType.MOUSE_DOWN:\r\n                this._canvas?.focus();\r\n                this._isPressed = true;\r\n                break;\r\n            case InputEventType.MOUSE_UP:\r\n                this._isPressed = false;\r\n                break;\r\n            case InputEventType.MOUSE_MOVE:\r\n                // mouseEvent.button doesn't work well in mouse move event\r\n                // now we don't support multiple buttons in one mouse event\r\n                if (1 & buttons) {\r\n                    targetButton = EventMouse.BUTTON_LEFT;\r\n                } else if (2 & buttons) {\r\n                    targetButton = EventMouse.BUTTON_RIGHT;\r\n                } else if (4 & buttons) {\r\n                    targetButton = EventMouse.BUTTON_MIDDLE;\r\n                } else {\r\n                    targetButton = EventMouse.BUTTON_MISSING;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n\r\n            const eventMouse = new EventMouse(eventType, false, this._preMousePos);\r\n            eventMouse.setLocation(location.x, location.y);\r\n            eventMouse.setButton(targetButton);\r\n            eventMouse.movementX = mouseEvent.movementX;\r\n            eventMouse.movementY = mouseEvent.movementY;\r\n\r\n            // update previous mouse position.\r\n            this._preMousePos.set(location.x, location.y);\r\n            mouseEvent.stopPropagation();\r\n            if (mouseEvent.target === this._canvas) {\r\n                mouseEvent.preventDefault();\r\n            }\r\n            this._eventTarget.emit(eventType, eventMouse);\r\n        };\r\n    }\r\n\r\n    private _handleMouseWheel (mouseEvent: WheelEvent): void {\r\n        const eventType = InputEventType.MOUSE_WHEEL;\r\n        const location = this._getLocation(mouseEvent);\r\n        const button = mouseEvent.button;\r\n\r\n        const eventMouse = new EventMouse(eventType, false, this._preMousePos);\r\n        eventMouse.setLocation(location.x, location.y);\r\n        eventMouse.setButton(button);\r\n        eventMouse.movementX = mouseEvent.movementX;\r\n        eventMouse.movementY = mouseEvent.movementY;\r\n\r\n        const wheelSensitivityFactor = 5;\r\n        eventMouse.setScrollData(mouseEvent.deltaX * wheelSensitivityFactor, -mouseEvent.deltaY * wheelSensitivityFactor);\r\n        // update previous mouse position.\r\n        this._preMousePos.set(location.x, location.y);\r\n        mouseEvent.stopPropagation();\r\n        if (mouseEvent.target === this._canvas) {\r\n            mouseEvent.preventDefault();\r\n        }\r\n        this._eventTarget.emit(eventType, eventMouse);\r\n    }\r\n\r\n    private _handleMouseLeave (mouseEvent: MouseEvent): void {\r\n        const eventType = InputEventType.MOUSE_LEAVE;\r\n        const eventMouse = new EventMouse(eventType, false);\r\n        this._eventTarget.emit(eventType, eventMouse);\r\n    }\r\n\r\n    private _handleMouseEnter (mouseEvent: MouseEvent): void {\r\n        const eventType = InputEventType.MOUSE_ENTER;\r\n        const eventMouse = new EventMouse(eventType, false);\r\n        this._eventTarget.emit(eventType, eventMouse);\r\n    }\r\n\r\n    public dispatchEventsInCache (): void {\r\n        // Do nothing\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec2 } from '../../cocos/core/math/vec2';\r\nimport { logID } from '../../cocos/core/platform/debug';\r\nimport { macro } from '../../cocos/core/platform/macro';\r\nimport { Touch } from '../../cocos/input/types';\r\n\r\nconst tempVec2 = new Vec2();\r\n\r\nclass TouchManager {\r\n    /**\r\n     * A map from touch ID to touch object.\r\n     */\r\n    private _touchMap: Map<number, Touch> = new Map();\r\n    private readonly _maxTouches = 8;\r\n\r\n    constructor () {\r\n    }\r\n\r\n    /**\r\n     * Create the touch object at the touch start event callback.\r\n     * we have some policy to create the touch object:\r\n     * - If the number of touches doesn't exceed the max count, we create a touch object.\r\n     * - If the number of touches exceeds the max count, we discard the timeout touch to create a new one.\r\n     * - If the number of touches exceeds the max count and there is no timeout touch, we can't create any touch object.\r\n     * @param touchID The touch identifier\r\n     * @param x The x-axis coordinate of the current touch point.\r\n     * @param y The y-axis coordinate of the current touch point.\r\n     * @return The Touch instance or undefined.\r\n     */\r\n    private _createTouch (touchID: number, x: number, y: number): Touch | undefined {\r\n        if (this._touchMap.has(touchID)) {\r\n            logID(2301);\r\n            return undefined;\r\n        }\r\n        const checkResult = this._checkTouchMapSizeMoreThanMax(touchID);\r\n        if (checkResult) {\r\n            logID(2300);\r\n            return undefined;\r\n        }\r\n        const touch = new Touch(x, y, touchID);\r\n        this._touchMap.set(touchID, touch);\r\n        this._updateTouch(touch, x, y);\r\n        return touch;\r\n    }\r\n\r\n    /**\r\n     * Release the touch object at the touch end or touch cancel event callback.\r\n     * @param touchID\r\n     * @returns\r\n     */\r\n    public releaseTouch (touchID: number): void {\r\n        if (!this._touchMap.has(touchID)) {\r\n            return;\r\n        }\r\n        this._touchMap.delete(touchID);\r\n    }\r\n\r\n    /**\r\n     * Get touch object by touch ID.\r\n     * @param touchID\r\n     * @returns\r\n     */\r\n    public getTouch (touchID: number): Touch | undefined {\r\n        return this._touchMap.get(touchID);\r\n    }\r\n\r\n    /**\r\n     * Get or create touch object by touch ID.\r\n     * @param touchID\r\n     * @returns\r\n     */\r\n    public getOrCreateTouch (touchID: number, x: number, y: number): Touch | undefined {\r\n        let touch = this.getTouch(touchID);\r\n        if (!touch) {\r\n            touch = this._createTouch(touchID, x, y);\r\n        } else {\r\n            this._updateTouch(touch, x, y);\r\n        }\r\n        return touch;\r\n    }\r\n\r\n    /**\r\n     * Get all the current touches objects.\r\n     * @returns\r\n     */\r\n    public getAllTouches (): Touch[] {\r\n        const touches: Touch[] = [];\r\n        this._touchMap.forEach((touch) => {\r\n            if (touch) {\r\n                touches.push(touch);\r\n            }\r\n        });\r\n        return touches;\r\n    }\r\n\r\n    /**\r\n     * Get the number of touches.\r\n     */\r\n    public getTouchCount (): number {\r\n        return this._touchMap.size;\r\n    }\r\n\r\n    /**\r\n     * Update the location and previous location of current touch ID.\r\n     * @param touchID\r\n     * @param x The current location X\r\n     * @param y The current location Y\r\n     */\r\n    private _updateTouch (touch: Touch, x: number, y: number): void {\r\n        touch.getLocation(tempVec2);\r\n        touch.setPrevPoint(tempVec2);\r\n        touch.setPoint(x, y);\r\n    }\r\n\r\n    private _checkTouchMapSizeMoreThanMax (touchID: number): boolean {\r\n        if (this._touchMap.has(touchID)) {\r\n            return false;\r\n        }\r\n        const maxSize = macro.ENABLE_MULTI_TOUCH ? this._maxTouches : 1;\r\n        if (this._touchMap.size < maxSize) {\r\n            return false;\r\n        }\r\n        // Handle when exceed the max number of touches\r\n        const now = performance.now();\r\n        this._touchMap.forEach((touch) => {\r\n            if (now - touch.lastModified > macro.TOUCH_TIMEOUT) {\r\n                logID(2302, touch.getID());\r\n                // TODO: need to handle touch cancel event when exceed the max number of touches ?\r\n                this.releaseTouch(touch.getID());\r\n            }\r\n        });\r\n        return maxSize >= this._touchMap.size;\r\n    }\r\n}\r\n\r\nexport const touchManager = new TouchManager();\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { TouchCallback } from 'pal/input';\r\nimport { EDITOR, TEST, USE_XR } from 'internal:constants';\r\nimport { systemInfo } from 'pal/system-info';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { Rect, Vec2 } from '../../../cocos/core/math';\r\nimport { EventTarget } from '../../../cocos/core/event';\r\nimport { Touch, EventTouch } from '../../../cocos/input/types';\r\nimport { touchManager } from '../touch-manager';\r\nimport { macro } from '../../../cocos/core/platform/macro';\r\nimport { InputEventType } from '../../../cocos/input/types/event-enum';\r\nimport { Feature } from '../../system-info/enum-type';\r\nimport { warn } from '../../../cocos/core/platform/debug';\r\n\r\nexport class TouchInputSource {\r\n    private _canvas?: HTMLCanvasElement;\r\n    private _eventTarget: EventTarget = new EventTarget();\r\n\r\n    constructor () {\r\n        if (systemInfo.hasFeature(Feature.INPUT_TOUCH)) {\r\n            this._canvas = document.getElementById('GameCanvas') as HTMLCanvasElement;\r\n            if (!this._canvas && !TEST && !EDITOR) {\r\n                warn('failed to access canvas');\r\n            }\r\n            // In Editor, we don't receive touch event but maybe receive simulated touch event.\r\n            if (!EDITOR) {\r\n                this._registerEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _registerEvent (): void {\r\n        // IDEA: need to register on window ?\r\n        this._canvas?.addEventListener('touchstart', this._createCallback(InputEventType.TOUCH_START));\r\n        this._canvas?.addEventListener('touchmove', this._createCallback(InputEventType.TOUCH_MOVE));\r\n        this._canvas?.addEventListener('touchend', this._createCallback(InputEventType.TOUCH_END));\r\n        this._canvas?.addEventListener('touchcancel', this._createCallback(InputEventType.TOUCH_CANCEL));\r\n    }\r\n\r\n    private _createCallback (eventType: InputEventType) {\r\n        return (event: TouchEvent): void => {\r\n            const canvasRect = this._getCanvasRect();\r\n            const handleTouches: Touch[] = [];\r\n            const length = event.changedTouches.length;\r\n            for (let i = 0; i < length; ++i) {\r\n                const changedTouch = event.changedTouches[i];\r\n                const touchID = changedTouch.identifier;\r\n                if (touchID === null) {\r\n                    continue;\r\n                }\r\n                const location = this._getLocation(changedTouch, canvasRect);\r\n                const touch = touchManager.getOrCreateTouch(touchID, location.x, location.y);\r\n                if (!touch) {\r\n                    continue;\r\n                }\r\n                if (eventType === InputEventType.TOUCH_END || eventType === InputEventType.TOUCH_CANCEL) {\r\n                    touchManager.releaseTouch(touchID);\r\n                }\r\n                handleTouches.push(touch);\r\n            }\r\n            event.stopPropagation();\r\n            if (event.target === this._canvas) {\r\n                event.preventDefault();\r\n            }\r\n            if (eventType === InputEventType.TOUCH_START) {\r\n                this._canvas?.focus();\r\n            }\r\n            if (handleTouches.length > 0) {\r\n                const eventTouch = new EventTouch(\r\n                    handleTouches,\r\n                    false,\r\n                    eventType,\r\n                    touchManager.getAllTouches(),\r\n                );\r\n                this._eventTarget.emit(eventType, eventTouch);\r\n            }\r\n        };\r\n    }\r\n\r\n    private _getCanvasRect (): Rect {\r\n        const canvas = this._canvas;\r\n        const box = canvas?.getBoundingClientRect();\r\n        if (box) {\r\n            return new Rect(box.x, box.y, box.width, box.height);\r\n        }\r\n        return new Rect(0, 0, 0, 0);\r\n    }\r\n\r\n    private _getLocation (touch: globalThis.Touch, canvasRect: Rect): Vec2 {\r\n        // webxr has been converted to screen coordinates via camera\r\n        if (USE_XR && globalThis.__globalXR && globalThis.__globalXR.ar && globalThis.__globalXR.ar.isWebXR()) {\r\n            return new Vec2(touch.clientX, touch.clientY);\r\n        }\r\n\r\n        let x = touch.clientX - canvasRect.x;\r\n        let y = canvasRect.y + canvasRect.height - touch.clientY;\r\n        if (screenAdapter.isFrameRotated) {\r\n            const tmp = x;\r\n            x = canvasRect.height - y;\r\n            y = tmp;\r\n        }\r\n        const dpr = screenAdapter.devicePixelRatio;\r\n        x *= dpr;\r\n        y *= dpr;\r\n        return new Vec2(x, y);\r\n    }\r\n\r\n    public on (eventType: InputEventType, callback: TouchCallback, target?: any): void {\r\n        this._eventTarget.on(eventType, callback, target);\r\n    }\r\n\r\n    public dispatchEventsInCache (): void {\r\n        // Do nothing\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EventTarget, cclegacy } from '../core';\r\nimport { EventAcceleration, EventKeyboard, EventMouse, EventTouch, SystemEventType, Touch } from './types';\r\nimport { input } from './input';\r\nimport { InputEventType } from './types/event-enum';\r\n\r\nexport declare namespace SystemEvent {\r\n    /**\r\n     * @en The event type supported by SystemEvent and Node events\r\n     * @zh SystemEvent 支持的事件类型以及节点事件类型\r\n     */\r\n    export type EventType = EnumAlias<typeof SystemEventType>;\r\n}\r\n\r\ninterface SystemEventMap {\r\n    [SystemEvent.EventType.MOUSE_DOWN]: (event: EventMouse) => void,\r\n    [SystemEvent.EventType.MOUSE_MOVE]: (event: EventMouse) => void,\r\n    [SystemEvent.EventType.MOUSE_UP]: (event: EventMouse) => void,\r\n    [SystemEvent.EventType.MOUSE_WHEEL]: (event: EventMouse) => void,\r\n    [SystemEvent.EventType.TOUCH_START]: (touch: Touch, event: EventTouch) => void,\r\n    [SystemEvent.EventType.TOUCH_MOVE]: (touch: Touch, event: EventTouch) => void,\r\n    [SystemEvent.EventType.TOUCH_END]: (touch: Touch, event: EventTouch) => void,\r\n    [SystemEvent.EventType.TOUCH_CANCEL]: (touch: Touch, event: EventTouch) => void,\r\n    [SystemEvent.EventType.KEY_DOWN]: (event: EventKeyboard) => void,\r\n    [SystemEvent.EventType.KEY_UP]: (event: EventKeyboard) => void,\r\n    [SystemEvent.EventType.DEVICEMOTION]: (event: EventAcceleration) => void,\r\n}\r\n\r\n/**\r\n * @en\r\n * The System event, it currently supports keyboard events and accelerometer events.<br/>\r\n * You can get the `SystemEvent` instance with `systemEvent`.<br/>\r\n * @zh\r\n * 系统事件，它目前支持按键事件和重力感应事件。<br/>\r\n * 你可以通过 `systemEvent` 获取到 `SystemEvent` 的实例。<br/>\r\n *\r\n * @deprecated since v3.4.0, please use Input class instead.\r\n *\r\n * @example\r\n * ```\r\n * import { systemEvent, SystemEvent } from 'cc';\r\n * systemEvent.on(SystemEvent.EventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\r\n * systemEvent.off(SystemEvent.EventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\r\n * ```\r\n */\r\n\r\nexport class SystemEvent extends EventTarget {\r\n    public static EventType = SystemEventType;\r\n\r\n    constructor () {\r\n        super();\r\n\r\n        input.on(InputEventType.MOUSE_DOWN, (e): void => { this.emit(SystemEventType.MOUSE_DOWN, e);  });\r\n        input.on(InputEventType.MOUSE_MOVE, (e): void => { this.emit(SystemEventType.MOUSE_MOVE, e);  });\r\n        input.on(InputEventType.MOUSE_UP, (e): void => { this.emit(SystemEventType.MOUSE_UP, e);  });\r\n        input.on(InputEventType.MOUSE_WHEEL, (e): void => { this.emit(SystemEventType.MOUSE_WHEEL, e);  });\r\n\r\n        input.on(InputEventType.TOUCH_START, (e): void => { this.emit(SystemEventType.TOUCH_START, e.touch, e);  });\r\n        input.on(InputEventType.TOUCH_MOVE, (e): void => { this.emit(SystemEventType.TOUCH_MOVE, e.touch, e);  });\r\n        input.on(InputEventType.TOUCH_END, (e): void => { this.emit(SystemEventType.TOUCH_END, e.touch, e);  });\r\n        input.on(InputEventType.TOUCH_CANCEL, (e): void => { this.emit(SystemEventType.TOUCH_CANCEL, e.touch, e);  });\r\n\r\n        input.on(InputEventType.KEY_DOWN, (e): void => { this.emit(SystemEventType.KEY_DOWN, e);  });\r\n        input.on(InputEventType.KEY_PRESSING, (e): void => { this.emit(SystemEventType.KEY_DOWN, e);  });\r\n        input.on(InputEventType.KEY_UP, (e): void => { this.emit(SystemEventType.KEY_UP, e);  });\r\n\r\n        input.on(InputEventType.DEVICEMOTION, (e): void => { this.emit(SystemEventType.DEVICEMOTION, e);  });\r\n    }\r\n    /**\r\n     * @en\r\n     * Sets whether to enable the accelerometer event listener or not.\r\n     *\r\n     * @zh\r\n     * 是否启用加速度计事件。\r\n     */\r\n    public setAccelerometerEnabled (isEnabled: boolean): void {\r\n        input.setAccelerometerEnabled(isEnabled);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the accelerometer interval value.\r\n     *\r\n     * @zh\r\n     * 设置加速度计间隔值。\r\n     */\r\n    public setAccelerometerInterval (interval: number): void {\r\n        input.setAccelerometerInterval(interval);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register an callback of a specific system event type.\r\n     * @zh\r\n     * 注册特定事件类型回调。\r\n     *\r\n     * @param type - The event type\r\n     * @param callback - The event listener's callback\r\n     * @param target - The event listener's target and callee\r\n     * @param once - Register the event listener once\r\n     */\r\n    public on<TFunction extends (...any) => void>(type: string, callback: TFunction, target?: unknown, once?: boolean): TFunction {\r\n        super.on(type, callback, target, once);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes the listeners previously registered with the same type, callback, target and or useCapture,\r\n     * if only type is passed as parameter, all listeners registered with that type will be removed.\r\n     * @zh\r\n     * 删除之前用同类型，回调，目标或 useCapture 注册的事件监听器，如果只传递 type，将会删除 type 类型的所有事件监听器。\r\n     *\r\n     * @param type - A string representing the event type being removed.\r\n     * @param callback - The callback to remove.\r\n     * @param target - The target (this object) to invoke the callback, if it's not given, only callback without target will be removed\r\n     */\r\n    public off<K extends keyof SystemEventMap> (type: K, callback?: SystemEventMap[K], target?: any): void {\r\n        super.off(type, callback, target);\r\n    }\r\n}\r\n\r\ncclegacy.SystemEvent = SystemEvent;\r\n/**\r\n * @module cc\r\n */\r\n\r\n/**\r\n * @en The singleton of the SystemEvent, there should only be one instance to be used globally\r\n * @zh 系统事件单例，方便全局使用。\r\n *\r\n * @deprecated since v3.4.0, please use input instead.\r\n */\r\nexport const systemEvent = new SystemEvent();\r\ncclegacy.systemEvent = systemEvent;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport './deprecated-3.3.0';\r\nimport './deprecated-3.4.0';\r\nimport { markAsWarning, replaceProperty, macro } from '../core';\r\nimport { Event, EventMouse, EventTouch, SystemEventType } from './types';\r\nimport { SystemEvent } from './system-event';\r\n\r\nreplaceProperty(SystemEventType, 'Node.EventType', [\r\n    {\r\n        name: 'POSITION_PART',\r\n        newName: 'TRANSFORM_CHANGED',\r\n    },\r\n    {\r\n        name: 'ROTATION_PART',\r\n        newName: 'TRANSFORM_CHANGED',\r\n    },\r\n    {\r\n        name: 'SCALE_PART',\r\n        newName: 'TRANSFORM_CHANGED',\r\n    },\r\n]);\r\n\r\n// deprecate Event property\r\nreplaceProperty(Event, 'Event', [\r\n    {\r\n        name: 'ACCELERATION',\r\n        newName: 'DEVICEMOTION',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n]);\r\n\r\nmarkAsWarning(Event, 'Event', [\r\n    {\r\n        name: 'TOUCH',\r\n        suggest: 'please use SystemEvent.EventType.TOUCH_START, SystemEvent.EventType.TOUCH_MOVE, SystemEvent.EventType.TOUCH_END and SystemEvent.EventType.TOUCH_CANCEL instead',\r\n    },\r\n    {\r\n        name: 'MOUSE',\r\n        suggest: 'please use SystemEvent.EventType.MOUSE_DOWN, SystemEvent.EventType.MOUSE_MOVE, SystemEvent.EventType.MOUSE_UP, SystemEvent.EventType.MOUSE_WHEEL, Node.EventType.MOUSE_ENTER and Node.EventType.MOUSE_LEAVE instead',\r\n    },\r\n    {\r\n        name: 'KEYBOARD',\r\n        suggest: 'please use SystemEvent.EventType.KEY_DOWN and SystemEvent.EventType.KEY_UP instead',\r\n    },\r\n]);\r\n\r\n// depracate EventMouse property\r\nreplaceProperty(EventMouse, 'EventMouse',\r\n    ['DOWN', 'UP', 'MOVE'].map((item) => ({\r\n        name: item,\r\n        newName: `MOUSE_${item}`,\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    })));\r\nreplaceProperty(EventMouse, 'EventMouse', [\r\n    {\r\n        name: 'SCROLL',\r\n        newName: 'MOUSE_WHEEL',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n]);\r\nmarkAsWarning(EventMouse.prototype, 'EventMouse.prototype', [\r\n    {\r\n        name: 'eventType',\r\n        suggest: 'please use EventMouse.prototype.type instead',\r\n    },\r\n]);\r\n\r\n// depracate EventTouch property\r\nreplaceProperty(EventTouch, 'EventTouch', [\r\n    {\r\n        name: 'BEGAN',\r\n        newName: 'TOUCH_START',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n]);\r\nreplaceProperty(EventTouch, 'EventTouch', [\r\n    {\r\n        name: 'MOVED',\r\n        newName: 'TOUCH_MOVE',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n]);\r\nreplaceProperty(EventTouch, 'EventTouch', [\r\n    {\r\n        name: 'ENDED',\r\n        newName: 'TOUCH_END',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n]);\r\nreplaceProperty(EventTouch, 'EventTouch', [\r\n    {\r\n        name: 'CANCELLED',\r\n        newName: 'TOUCH_CANCEL',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n]);\r\nmarkAsWarning(EventTouch.prototype, 'EventTouch.prototype', [\r\n    {\r\n        name: 'getEventCode',\r\n        suggest: 'please use EventTouch.prototype.type instead',\r\n    },\r\n]);\r\nreplaceProperty(EventTouch.prototype, 'EventTouch.prototype', [\r\n    {\r\n        name: 'getUILocationInView',\r\n        newName: 'getLocationInView',\r\n        target: EventTouch,\r\n        targetName: 'EventTouch',\r\n    },\r\n]);\r\n\r\nmarkAsWarning(macro.KEY, 'macro.KEY',\r\n    [\r\n        'back',\r\n        'menu',\r\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0',\r\n        '*', '+', '-', '/', ';', '=', ',', '.', '[', ']',\r\n        'dpadLeft', 'dpadRight', 'dpadUp', 'dpadDown', 'dpadCenter',\r\n    ].map((item) => ({\r\n        name: item,\r\n    })));\r\n\r\nmarkAsWarning(macro.KEY, 'macro.KEY', [\r\n    {\r\n        name: 'shift',\r\n        suggest: 'please use KeyCode.SHIFT_LEFT instead',\r\n    },\r\n]);\r\n\r\nmarkAsWarning(macro.KEY, 'macro.KEY', [\r\n    {\r\n        name: 'ctrl',\r\n        suggest: 'please use KeyCode.CTRL_LEFT instead',\r\n    },\r\n]);\r\n\r\nmarkAsWarning(macro.KEY, 'macro.KEY', [\r\n    {\r\n        name: 'alt',\r\n        suggest: 'please use KeyCode.ALT_LEFT instead',\r\n    },\r\n]);\r\n\r\nmarkAsWarning(macro, 'macro', [\r\n    {\r\n        name: 'KEY',\r\n        suggest: 'please use KeyCode instead',\r\n    },\r\n]);\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { ccclass } from 'cc.decorator';\r\nimport { replaceProperty, removeProperty } from '../core/utils/x-deprecated';\r\nimport { Layers } from './layers';\r\nimport { Node } from './node';\r\nimport { Vec2 } from '../core/math/vec2';\r\nimport { Size } from '../core/math/size';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { CCObjectFlags } from '../core/data/object';\r\nimport { warnID } from '../core/platform/debug';\r\nimport { SceneGlobals } from './scene-globals';\r\nimport { SystemEventType } from '../input/types';\r\nimport { SystemEvent } from '../input';\r\nimport { NodeUIProperties } from './node-ui-properties';\r\nimport type { NodeEventType } from './node-event';\r\n\r\nreplaceProperty(Node.prototype, 'Node', [\r\n    {\r\n        name: 'childrenCount',\r\n        newName: 'children.length',\r\n        customGetter (this: Node): number {\r\n            return this.children.length;\r\n        },\r\n    },\r\n]);\r\n\r\nreplaceProperty(Node.prototype, 'Node', [\r\n    {\r\n        name: 'width',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customGetter (this: Node): number {\r\n            return this._getUITransformComp()!.width;\r\n        },\r\n        customSetter (this: Node, value: number): void {\r\n            this._getUITransformComp()!.width = value;\r\n        },\r\n    },\r\n    {\r\n        name: 'height',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customGetter (this: Node): number {\r\n            return this._getUITransformComp()!.height;\r\n        },\r\n        customSetter (this: Node, value: number): void {\r\n            this._getUITransformComp()!.height = value;\r\n        },\r\n    },\r\n    {\r\n        name: 'anchorX',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customGetter (this: Node): number {\r\n            return this._getUITransformComp()!.anchorX;\r\n        },\r\n        customSetter (this: Node, value: number): void {\r\n            this._getUITransformComp()!.anchorX = value;\r\n        },\r\n    },\r\n    {\r\n        name: 'anchorY',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customGetter (this: Node): number {\r\n            return this._getUITransformComp()!.anchorY;\r\n        },\r\n        customSetter (this: Node, value: number): void {\r\n            this._getUITransformComp()!.anchorY = value;\r\n        },\r\n    },\r\n    {\r\n        name: 'getAnchorPoint',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customFunction (this: Node, out?: Vec2): Vec2 {\r\n            if (!out) {\r\n                out = new Vec2();\r\n            }\r\n            out.set(this._getUITransformComp()!.anchorPoint);\r\n            return out;\r\n        },\r\n    },\r\n    {\r\n        name: 'setAnchorPoint',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customFunction (this: Node, point: Vec2 | number, y?: number): void {\r\n            this._getUITransformComp()!.setAnchorPoint(point, y);\r\n        },\r\n    },\r\n    {\r\n        name: 'getContentSize',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customFunction (this: Node, out?: Size): Size {\r\n            if (!out) {\r\n                out = new Size();\r\n            }\r\n\r\n            out.set(this._getUITransformComp()!.contentSize);\r\n            return out;\r\n        },\r\n    },\r\n    {\r\n        name: 'setContentSize',\r\n        targetName: 'node.getComponent(UITransform)',\r\n        customFunction (this: Node, size: Size | number, height?: number): void {\r\n            if (typeof size === 'number') {\r\n                this._getUITransformComp()!.setContentSize(size, height!);\r\n            } else {\r\n                this._getUITransformComp()!.setContentSize(size);\r\n            }\r\n        },\r\n    },\r\n]);\r\n\r\nremoveProperty(SceneGlobals.prototype, 'SceneGlobals.prototype', [\r\n    {\r\n        name: 'aspect',\r\n    },\r\n    {\r\n        name: 'selfShadow',\r\n    },\r\n    {\r\n        name: 'linear',\r\n    },\r\n    {\r\n        name: 'packing',\r\n    },\r\n    {\r\n        name: 'autoAdapt',\r\n    },\r\n    {\r\n        name: 'fixedArea',\r\n    },\r\n    {\r\n        name: 'pcf',\r\n    },\r\n    {\r\n        name: 'bias',\r\n    },\r\n    {\r\n        name: 'normalBias',\r\n    },\r\n    {\r\n        name: 'near',\r\n    },\r\n    {\r\n        name: 'far',\r\n    },\r\n    {\r\n        name: 'shadowDistance',\r\n    },\r\n    {\r\n        name: 'invisibleOcclusionRange',\r\n    },\r\n    {\r\n        name: 'orthoSize',\r\n    },\r\n    {\r\n        name: 'saturation',\r\n    },\r\n]);\r\n\r\nreplaceProperty(SceneGlobals.prototype, 'SceneGlobals.prototype', [\r\n    {\r\n        name: 'distance',\r\n        newName: 'planeHeight',\r\n    },\r\n    {\r\n        name: 'normal',\r\n        newName: 'planeDirection',\r\n    },\r\n    {\r\n        name: 'size',\r\n        newName: 'shadowMapSize',\r\n    },\r\n]);\r\n\r\nremoveProperty(Node.prototype, 'Node.prototype', [\r\n    {\r\n        name: 'addLayer',\r\n    },\r\n    {\r\n        name: 'removeLayer',\r\n    },\r\n]);\r\n\r\nreplaceProperty(NodeUIProperties.prototype, 'NodeUIProperties', [\r\n    {\r\n        name: 'opacityDirty',\r\n        newName: 'colorDirty',\r\n    },\r\n]);\r\n\r\nremoveProperty(Layers, 'Layers', [\r\n    {\r\n        name: 'All',\r\n    },\r\n    {\r\n        name: 'RaycastMask',\r\n    },\r\n    {\r\n        name: 'check',\r\n    },\r\n]);\r\n\r\nreplaceProperty(Layers, 'Layers', [\r\n    {\r\n        name: 'Default',\r\n        newName: 'DEFAULT',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'Always',\r\n        newName: 'ALWAYS',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'IgnoreRaycast',\r\n        newName: 'IGNORE_RAYCAST',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'Gizmos',\r\n        newName: 'GIZMOS',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'Editor',\r\n        newName: 'EDITOR',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'UI',\r\n        newName: 'UI_3D',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'UI2D',\r\n        newName: 'UI_2D',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'SceneGizmo',\r\n        newName: 'SCENE_GIZMO',\r\n        target: Layers.Enum,\r\n        targetName: 'Layers.Enum',\r\n    },\r\n    {\r\n        name: 'makeInclusiveMask',\r\n        newName: 'makeMaskInclude',\r\n        target: Layers,\r\n        targetName: 'Layers',\r\n    },\r\n    {\r\n        name: 'makeExclusiveMask',\r\n        newName: 'makeMaskExclude',\r\n        target: Layers,\r\n        targetName: 'Layers',\r\n    },\r\n]);\r\n\r\nremoveProperty(Layers.Enum, 'Layers.Enum', [\r\n    {\r\n        name: 'ALWAYS',\r\n    },\r\n]);\r\n\r\nremoveProperty(Layers.BitMask, 'Layers.BitMask', [\r\n    {\r\n        name: 'ALWAYS',\r\n    },\r\n]);\r\n\r\nconst HideInHierarchy = CCObjectFlags.HideInHierarchy;\r\nconst DontSave = CCObjectFlags.DontSave;\r\n\r\n/**\r\n * @internal\r\n * @deprecated since v3.5\r\n */\r\n@ccclass('cc.PrivateNode')\r\nexport class PrivateNode extends Node {\r\n    constructor (name?: string) {\r\n        super(name);\r\n        warnID(12003, this.name);\r\n\r\n        this.hideFlags |= DontSave | HideInHierarchy;\r\n    }\r\n}\r\n\r\nif (EDITOR) {\r\n    // check components to avoid missing node reference serialied in previous version\r\n    PrivateNode.prototype._onBatchCreated = function onBatchCreated (this: PrivateNode, dontSyncChildPrefab: boolean): void {\r\n        for (const comp of this._components) {\r\n            comp.node = this;\r\n        }\r\n\r\n        Node.prototype._onBatchCreated.call(this, dontSyncChildPrefab);\r\n    };\r\n}\r\n\r\nreplaceProperty(SystemEventType, 'SystemEventType', [\r\n    'MOUSE_ENTER',\r\n    'MOUSE_LEAVE',\r\n    'TRANSFORM_CHANGED',\r\n    'SCENE_CHANGED_FOR_PERSISTS',\r\n    'SIZE_CHANGED',\r\n    'ANCHOR_CHANGED',\r\n    'COLOR_CHANGED',\r\n    'CHILD_ADDED',\r\n    'CHILD_REMOVED',\r\n    'PARENT_CHANGED',\r\n    'NODE_DESTROYED',\r\n    'LAYER_CHANGED',\r\n    'SIBLING_ORDER_CHANGED',\r\n].map((name: string): { name: string; target: typeof NodeEventType; targetName: string; } => ({\r\n    name,\r\n    target: Node.EventType,\r\n    targetName: 'Node.EventType',\r\n})));\r\n\r\nreplaceProperty(Node.EventType, 'Node.EventType', [\r\n    {\r\n        name: 'DEVICEMOTION',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n    {\r\n        name: 'KEY_DOWN',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n    {\r\n        name: 'KEY_UP',\r\n        target: SystemEvent.EventType,\r\n        targetName: 'SystemEvent.EventType',\r\n    },\r\n]);\r\n\r\nlegacyCC.PrivateNode = PrivateNode;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV } from 'internal:constants';\r\nimport { warnID } from '../core/platform/debug';\r\nimport { Node } from './node';\r\nimport { legacyCC } from '../core/global-exports';\r\n\r\n/**\r\n * @en Finds a node by hierarchy path, the path is case-sensitive.\r\n * It will traverse the hierarchy by splitting the path using '/' character.\r\n * This function will still returns the node even if it is inactive.\r\n * It is recommended to not use this function every frame instead cache the result at startup.\r\n * @zh 通过路径从节点树中查找节点的方法，路径是大小写敏感的，并且通过 `/` 来分隔节点层级。\r\n * 即使节点的状态是未启用的也可以找到，建议将结果缓存，而不是每次需要都去查找。\r\n * @param path The path of the target node\r\n * @param referenceNode If given, the search will be limited in the sub node tree of the reference node\r\n */\r\nexport function find (path: string, referenceNode?: Node): Node | null {\r\n    if (!referenceNode) {\r\n        const scene = legacyCC.director.getScene();\r\n        if (!scene) {\r\n            if (DEV) {\r\n                warnID(5601);\r\n            }\r\n            return null;\r\n        } else if (DEV && !scene.isValid) {\r\n            warnID(5602);\r\n            return null;\r\n        }\r\n        referenceNode = scene;\r\n    } else if (DEV && !referenceNode.isValid) {\r\n        warnID(5603);\r\n        return null;\r\n    }\r\n    return referenceNode!.getChildByPath(path);\r\n}\r\n\r\nlegacyCC.find = find;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { deprecateModuleExportedName } from '../core/utils/x-deprecated';\r\n\r\ndeprecateModuleExportedName({\r\n    BaseNode: {\r\n        newName: 'Node',\r\n        since: '3.7.0',\r\n        removed: false,\r\n    },\r\n});\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, SUPPORT_JIT, DEV, TEST } from 'internal:constants';\r\nimport { CCObjectFlags } from '../core/data/object';\r\nimport { js } from '../core';\r\nimport { tryCatchFunctor_EDITOR } from '../core/utils/misc';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { warn, assert } from '../core/platform/debug';\r\nimport type { Component } from './component';\r\n\r\nconst fastRemoveAt = js.array.fastRemoveAt;\r\n\r\nconst IsStartCalled = CCObjectFlags.IsStartCalled;\r\nconst IsOnEnableCalled = CCObjectFlags.IsOnEnableCalled;\r\nconst IsEditorOnEnableCalled = CCObjectFlags.IsEditorOnEnableCalled;\r\n\r\nconst callerFunctor: any = EDITOR && tryCatchFunctor_EDITOR;\r\nconst callOnEnableInTryCatch: any = EDITOR && callerFunctor('onEnable');\r\nconst callOnDisableInTryCatch: any = EDITOR && callerFunctor('onDisable');\r\n\r\nfunction sortedIndex (array, comp): number {\r\n    const order = comp.constructor._executionOrder;\r\n    const id = comp._id;\r\n    let l = 0;\r\n    for (let h = array.length - 1, m = h >>> 1;\r\n        l <= h;\r\n        m = (l + h) >>> 1\r\n    ) {\r\n        const test = array[m];\r\n        const testOrder = test.constructor._executionOrder;\r\n        if (testOrder > order) {\r\n            h = m - 1;\r\n        } else if (testOrder < order) {\r\n            l = m + 1;\r\n        } else {\r\n            const testId = test._id;\r\n            if (testId > id) {\r\n                h = m - 1;\r\n            } else if (testId < id) {\r\n                l = m + 1;\r\n            } else {\r\n                return m;\r\n            }\r\n        }\r\n    }\r\n    return ~l;\r\n}\r\n\r\n// remove disabled and not invoked component from array\r\nfunction stableRemoveInactive (iterator, flagToClear): void {\r\n    const array = iterator.array;\r\n    let next = iterator.i + 1;\r\n    while (next < array.length) {\r\n        const comp = array[next];\r\n        if (comp.node._activeInHierarchy) {\r\n            ++next;\r\n        } else {\r\n            iterator.removeAt(next);\r\n            if (flagToClear) {\r\n                comp._objFlags &= ~flagToClear;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type InvokeFunc = (...args: unknown[]) => void;\r\n\r\n// This class contains some queues used to invoke life-cycle methods by script execution order\r\nexport class LifeCycleInvoker {\r\n    public static stableRemoveInactive = stableRemoveInactive;\r\n\r\n    /**\r\n     * @engineInternal `_zero` is a protected property, we provide this public property for engine internal usage.\r\n     */\r\n    public get zero (): js.array.MutableForwardIterator<any> {\r\n        return this._zero;\r\n    }\r\n    /**\r\n     * @engineInternal `_neg` is a protected property, we provide this public property for engine internal usage.\r\n     */\r\n    public get neg (): js.array.MutableForwardIterator<any> {\r\n        return this._neg;\r\n    }\r\n    /**\r\n     * @engineInternal `_pos` is a protected property, we provide this public property for engine internal usage.\r\n     */\r\n    public get pos (): js.array.MutableForwardIterator<any> {\r\n        return this._pos;\r\n    }\r\n    // components which priority === 0 (default)\r\n    protected declare _zero: js.array.MutableForwardIterator<any>;\r\n    // components which priority < 0\r\n    protected declare _neg: js.array.MutableForwardIterator<any>;\r\n    // components which priority > 0\r\n    protected declare _pos: js.array.MutableForwardIterator<any>;\r\n    protected declare _invoke: InvokeFunc;\r\n    constructor (invokeFunc: InvokeFunc) {\r\n        const Iterator = js.array.MutableForwardIterator;\r\n        this._zero = new Iterator([]);\r\n        this._neg = new Iterator([]);\r\n        this._pos = new Iterator([]);\r\n\r\n        if (TEST) {\r\n            assert(typeof invokeFunc === 'function', 'invokeFunc must be type function');\r\n        }\r\n        this._invoke = invokeFunc;\r\n    }\r\n}\r\n\r\nfunction compareOrder (a, b): number {\r\n    return a.constructor._executionOrder - b.constructor._executionOrder;\r\n}\r\n\r\n// for onLoad: sort once all components registered, invoke once\r\nexport class OneOffInvoker extends LifeCycleInvoker {\r\n    public add (comp: Component): void {\r\n        const order = (comp.constructor as typeof Component)._executionOrder;\r\n        (order === 0 ? this._zero : (order < 0 ? this._neg : this._pos)).array.push(comp);\r\n    }\r\n\r\n    public remove (comp: Component): void {\r\n        const order = (comp.constructor as typeof Component)._executionOrder;\r\n        (order === 0 ? this._zero : (order < 0 ? this._neg : this._pos)).fastRemove(comp);\r\n    }\r\n\r\n    public cancelInactive (flagToClear: number): void {\r\n        stableRemoveInactive(this._zero, flagToClear);\r\n        stableRemoveInactive(this._neg, flagToClear);\r\n        stableRemoveInactive(this._pos, flagToClear);\r\n    }\r\n\r\n    public invoke (): void {\r\n        const compsNeg = this._neg;\r\n        if (compsNeg.array.length > 0) {\r\n            compsNeg.array.sort(compareOrder);\r\n            this._invoke(compsNeg);\r\n            compsNeg.array.length = 0;\r\n        }\r\n\r\n        this._invoke(this._zero);\r\n        this._zero.array.length = 0;\r\n\r\n        const compsPos = this._pos;\r\n        if (compsPos.array.length > 0) {\r\n            compsPos.array.sort(compareOrder);\r\n            this._invoke(compsPos);\r\n            compsPos.array.length = 0;\r\n        }\r\n    }\r\n}\r\n\r\n// for update: sort every time new component registered, invoke many times\r\nclass ReusableInvoker extends LifeCycleInvoker {\r\n    constructor (invokeFunc: InvokeFunc) {\r\n        super(invokeFunc);\r\n    }\r\n\r\n    public add (comp: Component): void {\r\n        const order = (comp.constructor as typeof Component)._executionOrder;\r\n        if (order === 0) {\r\n            this._zero.array.push(comp);\r\n        } else {\r\n            const array = order < 0 ? this._neg.array : this._pos.array;\r\n            const i = sortedIndex(array, comp);\r\n            if (i < 0) {\r\n                array.splice(~i, 0, comp);\r\n            } else if (DEV) {\r\n                warn('component already added:', comp.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    public remove (comp: Component): void {\r\n        const order = (comp.constructor as typeof Component)._executionOrder;\r\n        if (order === 0) {\r\n            this._zero.fastRemove(comp);\r\n        } else {\r\n            const iterator = order < 0 ? this._neg : this._pos;\r\n            const i = sortedIndex(iterator.array, comp);\r\n            if (i >= 0) {\r\n                iterator.removeAt(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    public invoke (dt: number): void {\r\n        if (this._neg.array.length > 0) {\r\n            this._invoke(this._neg, dt);\r\n        }\r\n\r\n        this._invoke(this._zero, dt);\r\n\r\n        if (this._pos.array.length > 0) {\r\n            this._invoke(this._pos, dt);\r\n        }\r\n    }\r\n}\r\n\r\nfunction enableInEditor (comp): void {\r\n    if (!(comp._objFlags & IsEditorOnEnableCalled)) {\r\n        legacyCC.engine.emit('component-enabled', comp.uuid);\r\n        if (!legacyCC.GAME_VIEW) {\r\n            comp._objFlags |= IsEditorOnEnableCalled;\r\n        }\r\n    }\r\n}\r\n\r\n// return function to simply call each component with try catch protection\r\nexport function createInvokeImplJit (code: string, useDt?, ensureFlag?): (iterator: any, dt: any) => void {\r\n    // function (it) {\r\n    //     let a = it.array;\r\n    //     for (it.i = 0; it.i < a.length; ++it.i) {\r\n    //         let c = a[it.i];\r\n    //         // ...\r\n    //     }\r\n    // }\r\n    const body = `${'var a=it.array;'\r\n                + 'for(it.i=0;it.i<a.length;++it.i){'\r\n                + 'var c=a[it.i];'}${\r\n        code\r\n    }}`;\r\n    const fastPath = useDt ? Function('it', 'dt', body) : Function('it', body);\r\n    const singleInvoke = Function('c', 'dt', code);\r\n    return createInvokeImpl(singleInvoke, fastPath, ensureFlag);\r\n}\r\nexport function createInvokeImpl (singleInvoke, fastPath, ensureFlag?): (iterator: any, dt: any) => void {\r\n    return (iterator, dt: number): void => {\r\n        try {\r\n            fastPath(iterator, dt);\r\n        } catch (e) {\r\n            // slow path\r\n            legacyCC._throw(e);\r\n            const array = iterator.array;\r\n            if (ensureFlag) {\r\n                array[iterator.i]._objFlags |= ensureFlag;\r\n            }\r\n            ++iterator.i;   // invoke next callback\r\n            for (; iterator.i < array.length; ++iterator.i) {\r\n                try {\r\n                    singleInvoke(array[iterator.i], dt);\r\n                } catch (e) {\r\n                    legacyCC._throw(e);\r\n                    if (ensureFlag) {\r\n                        array[iterator.i]._objFlags |= ensureFlag;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nconst invokeStart = SUPPORT_JIT ? createInvokeImplJit(`c.start();c._objFlags|=${IsStartCalled}`, false, IsStartCalled)\r\n    : createInvokeImpl(\r\n        (c): void => {\r\n            c.start();\r\n            c._objFlags |= IsStartCalled;\r\n        },\r\n        (iterator): void => {\r\n            const array = iterator.array;\r\n            for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n                const comp = array[iterator.i];\r\n                comp.start();\r\n                comp._objFlags |= IsStartCalled;\r\n            }\r\n        },\r\n        IsStartCalled,\r\n    );\r\n\r\nconst invokeUpdate = SUPPORT_JIT ? createInvokeImplJit('c.update(dt)', true)\r\n    : createInvokeImpl(\r\n        (c, dt: number): void => {\r\n            c.update(dt);\r\n        },\r\n        (iterator, dt: number): void => {\r\n            const array = iterator.array;\r\n            for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n                array[iterator.i].update(dt);\r\n            }\r\n        },\r\n    );\r\n\r\nconst invokeLateUpdate = SUPPORT_JIT ? createInvokeImplJit('c.lateUpdate(dt)', true)\r\n    : createInvokeImpl(\r\n        (c, dt: number): void => {\r\n            c.lateUpdate(dt);\r\n        },\r\n        (iterator, dt: number): void => {\r\n            const array = iterator.array;\r\n            for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n                array[iterator.i].lateUpdate(dt);\r\n            }\r\n        },\r\n    );\r\n\r\nexport const invokeOnEnable = EDITOR ? (iterator): void => {\r\n    const compScheduler = legacyCC.director._compScheduler;\r\n    const array = iterator.array;\r\n    for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n        const comp = array[iterator.i];\r\n        if (comp._enabled) {\r\n            callOnEnableInTryCatch(comp);\r\n            const deactivatedDuringOnEnable = !comp.node._activeInHierarchy;\r\n            if (!deactivatedDuringOnEnable) {\r\n                compScheduler._onEnabled(comp);\r\n            }\r\n        }\r\n    }\r\n} : (iterator): void => {\r\n    const compScheduler = legacyCC.director._compScheduler;\r\n    const array = iterator.array;\r\n    for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n        const comp = array[iterator.i];\r\n        if (comp._enabled) {\r\n            comp.onEnable();\r\n            const deactivatedDuringOnEnable = !comp.node._activeInHierarchy;\r\n            if (!deactivatedDuringOnEnable) {\r\n                compScheduler._onEnabled(comp);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @en The Manager for Component's life-cycle methods.\r\n * It collaborates with [[NodeActivator]] to schedule and invoke life cycle methods for components\r\n * @zh 组件生命周期函数的调度器。\r\n * 它和 [[NodeActivator]] 一起调度并执行组件的生命周期函数。\r\n */\r\nexport class ComponentScheduler {\r\n    /**\r\n     * @en The invoker of `start` callback\r\n     * @zh `start` 回调的调度器\r\n     */\r\n    public declare startInvoker: OneOffInvoker;\r\n    /**\r\n     * @en The invoker of `update` callback\r\n     * @zh `update` 回调的调度器\r\n     */\r\n    public declare updateInvoker: ReusableInvoker;\r\n    /**\r\n     * @en The invoker of `lateUpdate` callback\r\n     * @zh `lateUpdate` 回调的调度器\r\n     */\r\n    public declare lateUpdateInvoker: ReusableInvoker;\r\n    // components deferred to schedule\r\n    private _deferredComps: any[] = [];\r\n    private declare _updating: boolean;\r\n\r\n    constructor () {\r\n        this.unscheduleAll();\r\n    }\r\n\r\n    /**\r\n     * @en Cancel all future callbacks, including `start`, `update` and `lateUpdate`\r\n     * @zh 取消所有未来的函数调度，包括 `start`，`update` 和 `lateUpdate`\r\n     */\r\n    public unscheduleAll (): void {\r\n        // invokers\r\n        this.startInvoker = new OneOffInvoker(invokeStart);\r\n        this.updateInvoker = new ReusableInvoker(invokeUpdate);\r\n        this.lateUpdateInvoker = new ReusableInvoker(invokeLateUpdate);\r\n\r\n        // during a loop\r\n        this._updating = false;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onEnabled (comp: Component): void {\r\n        legacyCC.director.getScheduler().resumeTarget(comp);\r\n        comp._objFlags |= IsOnEnableCalled;\r\n\r\n        // schedule\r\n        if (this._updating) {\r\n            this._deferredComps.push(comp);\r\n        } else {\r\n            this._scheduleImmediate(comp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onDisabled (comp: Component): void {\r\n        legacyCC.director.getScheduler().pauseTarget(comp);\r\n        comp._objFlags &= ~IsOnEnableCalled;\r\n\r\n        // cancel schedule task\r\n        const index = this._deferredComps.indexOf(comp);\r\n        if (index >= 0) {\r\n            fastRemoveAt(this._deferredComps, index);\r\n            return;\r\n        }\r\n\r\n        // unschedule\r\n        if (comp.internalStart && !(comp._objFlags & IsStartCalled)) {\r\n            this.startInvoker.remove(comp);\r\n        }\r\n        if (comp.internalUpdate) {\r\n            this.updateInvoker.remove(comp);\r\n        }\r\n        if (comp.internalLateUpdate) {\r\n            this.lateUpdateInvoker.remove(comp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Enable a component\r\n     * @zh 启用一个组件\r\n     * @param comp The component to be enabled\r\n     * @param invoker The invoker which is responsible to schedule the `onEnable` call\r\n     */\r\n    public enableComp (comp: Component, invoker?: OneOffInvoker): void {\r\n        if (!(comp._objFlags & IsOnEnableCalled)) {\r\n            if (comp.internalOnEnable) {\r\n                if (invoker) {\r\n                    invoker.add(comp);\r\n                    return;\r\n                } else {\r\n                    comp.internalOnEnable();\r\n\r\n                    const deactivatedDuringOnEnable = !comp.node.activeInHierarchy;\r\n                    if (deactivatedDuringOnEnable) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            this._onEnabled(comp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Disable a component\r\n     * @zh 禁用一个组件\r\n     * @param comp The component to be disabled\r\n     */\r\n    public disableComp (comp: Component): void {\r\n        if (comp._objFlags & IsOnEnableCalled) {\r\n            if (comp.internalOnDisable) {\r\n                comp.internalOnDisable();\r\n            }\r\n            this._onDisabled(comp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Process start phase for registered components\r\n     * @zh 为当前注册的组件执行 start 阶段任务\r\n     */\r\n    public startPhase (): void {\r\n        // Start of this frame\r\n        this._updating = true;\r\n\r\n        // call start\r\n        this.startInvoker.invoke();\r\n        // Start components of new activated nodes during start\r\n        this._startForNewComps();\r\n        // if (PREVIEW) {\r\n        //     try {\r\n        //         this.startInvoker.invoke();\r\n        //     }\r\n        //     catch (e) {\r\n        //         // prevent start from getting into infinite loop\r\n        //         this.startInvoker._neg.array.length = 0;\r\n        //         this.startInvoker._zero.array.length = 0;\r\n        //         this.startInvoker._pos.array.length = 0;\r\n        //         throw e;\r\n        //     }\r\n        // }\r\n        // else {\r\n        //     this.startInvoker.invoke();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * @en Process update phase for registered components\r\n     * @zh 为当前注册的组件执行 update 阶段任务\r\n     * @param dt @en Time passed after the last frame in seconds @zh 距离上一帧的时间，以秒计算\r\n     */\r\n    public updatePhase (dt: number): void {\r\n        this.updateInvoker.invoke(dt);\r\n    }\r\n\r\n    /**\r\n     * @en Process late update phase for registered components\r\n     * @zh 为当前注册的组件执行 late update 阶段任务\r\n     * @param dt @en Time passed after the last frame in seconds @zh 距离上一帧的时间，以秒计算\r\n     */\r\n    public lateUpdatePhase (dt: number): void {\r\n        this.lateUpdateInvoker.invoke(dt);\r\n\r\n        // End of this frame\r\n        this._updating = false;\r\n\r\n        // Start components of new activated nodes during update and lateUpdate\r\n        // They will be running in the next frame\r\n        this._startForNewComps();\r\n    }\r\n\r\n    // Call new registered start schedule immediately since last time start phase calling in this frame\r\n    // See cocos-creator/2d-tasks/issues/256\r\n    private _startForNewComps (): void {\r\n        if (this._deferredComps.length > 0) {\r\n            this._deferredSchedule();\r\n            this.startInvoker.invoke();\r\n        }\r\n    }\r\n\r\n    private _scheduleImmediate (comp: Component): void {\r\n        if (typeof comp.internalStart === 'function' && !(comp._objFlags & IsStartCalled)) {\r\n            this.startInvoker.add(comp);\r\n        }\r\n        if (typeof comp.internalUpdate === 'function') {\r\n            this.updateInvoker.add(comp);\r\n        }\r\n        if (typeof comp.internalLateUpdate === 'function') {\r\n            this.lateUpdateInvoker.add(comp);\r\n        }\r\n    }\r\n\r\n    private _deferredSchedule (): void {\r\n        const comps = this._deferredComps;\r\n        for (let i = 0, len = comps.length; i < len; i++) {\r\n            this._scheduleImmediate(comps[i]);\r\n        }\r\n        comps.length = 0;\r\n    }\r\n}\r\n\r\nif (EDITOR) {\r\n    ComponentScheduler.prototype.enableComp = function (comp, invoker): void {\r\n        // NOTE: _executeInEditMode is dynamically injected on Editor environment\r\n        if (legacyCC.GAME_VIEW || (comp.constructor as any)._executeInEditMode) {\r\n            if (!(comp._objFlags & IsOnEnableCalled)) {\r\n                if (comp.internalOnEnable) {\r\n                    if (invoker) {\r\n                        invoker.add(comp);\r\n                        enableInEditor(comp);\r\n                        return;\r\n                    } else {\r\n                        callOnEnableInTryCatch(comp);\r\n\r\n                        const deactivatedDuringOnEnable = !comp.node.activeInHierarchy;\r\n                        if (deactivatedDuringOnEnable) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                this._onEnabled(comp);\r\n            }\r\n        }\r\n        enableInEditor(comp);\r\n    };\r\n\r\n    ComponentScheduler.prototype.disableComp = function (comp): void {\r\n        // NOTE: _executeInEditMode is dynamically injected on Editor environment\r\n        if (legacyCC.GAME_VIEW || (comp.constructor as any)._executeInEditMode) {\r\n            if (comp._objFlags & IsOnEnableCalled) {\r\n                if (comp.internalOnDisable) {\r\n                    callOnDisableInTryCatch(comp);\r\n                }\r\n                this._onDisabled(comp);\r\n            }\r\n        }\r\n        if (comp._objFlags & IsEditorOnEnableCalled) {\r\n            legacyCC.engine.emit('component-disabled', comp.uuid);\r\n            comp._objFlags &= ~IsEditorOnEnableCalled;\r\n        }\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, DEV, SUPPORT_JIT, DEBUG } from 'internal:constants';\r\nimport { CCObjectFlags, isValid } from '../core/data/object';\r\nimport { array, Pool } from '../core/utils/js';\r\nimport { tryCatchFunctor_EDITOR } from '../core/utils/misc';\r\nimport { invokeOnEnable, createInvokeImpl, createInvokeImplJit, OneOffInvoker, LifeCycleInvoker, InvokeFunc } from './component-scheduler';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { assert, errorID, getError, log } from '../core/platform/debug';\r\nimport { NodeEventType } from './node-event';\r\nimport { assertIsTrue } from '../core/data/utils/asserts';\r\nimport type { Component } from './component';\r\nimport type { Node } from './node';\r\n\r\nconst MAX_POOL_SIZE = 4;\r\n\r\nconst IsPreloadStarted = CCObjectFlags.IsPreloadStarted;\r\nconst IsOnLoadStarted = CCObjectFlags.IsOnLoadStarted;\r\nconst IsOnLoadCalled = CCObjectFlags.IsOnLoadCalled;\r\nconst IsOnEnableCalled = CCObjectFlags.IsOnEnableCalled;\r\nconst Deactivating = CCObjectFlags.Deactivating;\r\n\r\n// for __preload: used internally, no sort\r\nclass UnsortedInvoker extends LifeCycleInvoker {\r\n    constructor (invokeFunc: InvokeFunc) {\r\n        super(invokeFunc);\r\n    }\r\n\r\n    public add (comp: Component): void {\r\n        this._zero.array.push(comp);\r\n    }\r\n    public remove (comp: Component): void {\r\n        this._zero.fastRemove(comp);\r\n    }\r\n    public cancelInactive (flagToClear: number): void {\r\n        LifeCycleInvoker.stableRemoveInactive(this._zero, flagToClear);\r\n    }\r\n    public invoke (): void {\r\n        this._invoke(this._zero);\r\n        this._zero.array.length = 0;\r\n    }\r\n}\r\n\r\nconst invokePreload = SUPPORT_JIT ? createInvokeImplJit('c.__preload();')\r\n    : createInvokeImpl(\r\n        (c: Component): void => { c.internalPreload?.(); },\r\n        (iterator: array.MutableForwardIterator<Component>): void => {\r\n            const array = iterator.array;\r\n            for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n                array[iterator.i].internalPreload?.();\r\n            }\r\n        },\r\n    );\r\nconst invokeOnLoad = SUPPORT_JIT ? createInvokeImplJit(`c.onLoad();c._objFlags|=${IsOnLoadCalled}`, false, IsOnLoadCalled)\r\n    : createInvokeImpl(\r\n        (c: Component): void => {\r\n            c.internalOnLoad?.();\r\n            c._objFlags |= IsOnLoadCalled;\r\n        },\r\n        (iterator: array.MutableForwardIterator<Component>): void => {\r\n            const array = iterator.array;\r\n            for (iterator.i = 0; iterator.i < array.length; ++iterator.i) {\r\n                const comp: Component = array[iterator.i];\r\n                comp.internalOnLoad?.();\r\n                comp._objFlags |= IsOnLoadCalled;\r\n            }\r\n        },\r\n        IsOnLoadCalled,\r\n    );\r\n\r\ninterface ActivateTask {\r\n    preload: UnsortedInvoker;\r\n    onLoad: OneOffInvoker;\r\n    onEnable: OneOffInvoker;\r\n}\r\n\r\nconst activateTasksPool = new Pool<ActivateTask>(MAX_POOL_SIZE);\r\nactivateTasksPool.get = function getActivateTask (): ActivateTask {\r\n    const task = this._get() || {\r\n        preload: new UnsortedInvoker(invokePreload),\r\n        onLoad: new OneOffInvoker(invokeOnLoad),\r\n        onEnable: new OneOffInvoker(invokeOnEnable),\r\n    };\r\n\r\n    // reset index to -1 so we can skip invoked component in cancelInactive\r\n    task.preload.zero.i = -1;\r\n    let invoker = task.onLoad;\r\n    invoker.zero.i = -1;\r\n    invoker.neg.i = -1;\r\n    invoker.pos.i = -1;\r\n    invoker = task.onEnable;\r\n    invoker.zero.i = -1;\r\n    invoker.neg.i = -1;\r\n    invoker.pos.i = -1;\r\n\r\n    return task;\r\n};\r\n\r\nfunction _componentCorrupted (node: Node, comp: Component, index: number): void {\r\n    errorID(3817, node.name, index);\r\n    log('Corrupted component value:', comp);\r\n    if (comp) {\r\n        node._removeComponent(comp);\r\n    } else {\r\n        array.removeAt(node.getWritableComponents(), index);\r\n    }\r\n}\r\n\r\n/**\r\n * @en The class used to perform activating and deactivating operations of node and component.\r\n * @zh 用于执行节点和组件的激活和停用操作的管理器。\r\n */\r\nexport default class NodeActivator {\r\n    public declare resetComp?: ((comp: Component, didResetToDefault: boolean) => void);\r\n    protected declare _activatingStack: ActivateTask[];\r\n\r\n    constructor () {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * @en Reset all activation or des-activation tasks\r\n     * @zh 重置所有激活或非激活任务\r\n     */\r\n    public reset (): void {\r\n        // a stack of node's activating tasks\r\n        this._activatingStack = [];\r\n    }\r\n\r\n    /**\r\n     * @en Activate or des-activate a node\r\n     * @zh 激活或者停用某个节点\r\n     * @param node Target node\r\n     * @param active Which state to set the node to\r\n     */\r\n    public activateNode (node: Node, active: boolean): void {\r\n        if (active) {\r\n            const task = activateTasksPool.get();\r\n            if (task) {\r\n                this._activatingStack.push(task);\r\n\r\n                this._activateNodeRecursively(node, task.preload, task.onLoad, task.onEnable);\r\n                task.preload.invoke();\r\n                task.onLoad.invoke();\r\n                task.onEnable.invoke();\r\n\r\n                this._activatingStack.pop();\r\n                activateTasksPool.put(task);\r\n            }\r\n        } else {\r\n            this._deactivateNodeRecursively(node);\r\n\r\n            // remove children of this node from previous activating tasks to debounce\r\n            // (this is an inefficient operation but it ensures general case could be implemented in a efficient way)\r\n            const stack = this._activatingStack;\r\n            for (const lastTask of stack) {\r\n                lastTask.preload.cancelInactive(IsPreloadStarted);\r\n                lastTask.onLoad.cancelInactive(IsOnLoadStarted);\r\n                lastTask.onEnable.cancelInactive(IsOnEnableCalled);\r\n            }\r\n        }\r\n        node.emit(NodeEventType.ACTIVE_IN_HIERARCHY_CHANGED, node);\r\n    }\r\n\r\n    /**\r\n     * @en Activate or des-activate a component\r\n     * @zh 激活或者停用某个组件\r\n     * @param comp Target component\r\n     * @param preloadInvoker The invoker for `_preload` method, normally from [[ComponentScheduler]]\r\n     * @param onLoadInvoker The invoker for `onLoad` method, normally from [[ComponentScheduler]]\r\n     * @param onEnableInvoker The invoker for `onEnable` method, normally from [[ComponentScheduler]]\r\n     */\r\n    public activateComp (comp: Component, preloadInvoker?: UnsortedInvoker, onLoadInvoker?: OneOffInvoker, onEnableInvoker?: OneOffInvoker): void {\r\n        if (!isValid(comp, true)) {\r\n            // destroyed before activating\r\n            return;\r\n        }\r\n        if (!(comp._objFlags & IsPreloadStarted)) {\r\n            comp._objFlags |= IsPreloadStarted;\r\n            if (comp.internalPreload) {\r\n                if (preloadInvoker) {\r\n                    preloadInvoker.add(comp);\r\n                } else {\r\n                    comp.internalPreload();\r\n                }\r\n            }\r\n        }\r\n        if (!(comp._objFlags & IsOnLoadStarted)) {\r\n            comp._objFlags |= IsOnLoadStarted;\r\n            if (comp.internalOnLoad) {\r\n                if (onLoadInvoker) {\r\n                    onLoadInvoker.add(comp);\r\n                } else {\r\n                    comp.internalOnLoad();\r\n                    comp._objFlags |= IsOnLoadCalled;\r\n                }\r\n            } else {\r\n                comp._objFlags |= IsOnLoadCalled;\r\n            }\r\n        }\r\n        if (comp._enabled) {\r\n            if (DEBUG) {\r\n                assertIsTrue(comp.node, getError(3823, comp.uuid, comp.name));\r\n            }\r\n            const deactivatedOnLoading = !comp.node.activeInHierarchy;\r\n            if (deactivatedOnLoading) {\r\n                return;\r\n            }\r\n            legacyCC.director._compScheduler.enableComp(comp, onEnableInvoker);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroy a component\r\n     * @zh 销毁一个组件\r\n     * @param comp Target component\r\n     */\r\n    public destroyComp (comp: Component): void {\r\n        // ensure onDisable called\r\n        legacyCC.director._compScheduler.disableComp(comp);\r\n\r\n        if (comp.internalOnDestroy && (comp._objFlags & IsOnLoadCalled)) {\r\n            comp.internalOnDestroy();\r\n        }\r\n    }\r\n\r\n    protected _activateNodeRecursively (node: Node, preloadInvoker: UnsortedInvoker, onLoadInvoker: OneOffInvoker, onEnableInvoker: OneOffInvoker): void {\r\n        if (node._objFlags & Deactivating) {\r\n            // en:\r\n            // Forbid reactive the same node during its deactivating procedure\r\n            // to avoid endless loop and simplify the implementation.\r\n            // zh:\r\n            // 对相同节点而言，无法撤销反激活，防止反激活 - 激活 - 反激活的死循环发生。\r\n            // 这样设计简化了一些引擎的实现，而且对调用者来说能保证反激活操作都能成功。\r\n            errorID(3816, node.name);\r\n            return;\r\n        }\r\n\r\n        node._setActiveInHierarchy(true);\r\n\r\n        // component maybe added during onEnable, and the onEnable of new component is already called\r\n        // so we should record the origin length\r\n        let originCount = node.components.length;\r\n        // activate components\r\n        for (let i = 0; i < originCount; ++i) {\r\n            const component = node.components[i];\r\n            if (component instanceof legacyCC.Component) {\r\n                this.activateComp(component, preloadInvoker, onLoadInvoker, onEnableInvoker);\r\n            } else {\r\n                _componentCorrupted(node, component, i);\r\n                --i;\r\n                --originCount;\r\n            }\r\n        }\r\n\r\n        // activate children recursively\r\n        for (let i = 0, len = node.children.length; i < len; ++i) {\r\n            const child = node.children[i];\r\n            if (child.active) {\r\n                this._activateNodeRecursively(child, preloadInvoker, onLoadInvoker, onEnableInvoker);\r\n            }\r\n        }\r\n        node._onPostActivated(true);\r\n    }\r\n\r\n    protected _deactivateNodeRecursively (node: Node): void {\r\n        if (DEV) {\r\n            assert(!(node._objFlags & Deactivating), 'node should not deactivating');\r\n            // ensures _activeInHierarchy is always changing when Deactivating flagged\r\n            assert(node.activeInHierarchy, 'node should not deactivated');\r\n        }\r\n        node._objFlags |= Deactivating;\r\n        node._setActiveInHierarchy(false);\r\n\r\n        // component maybe added during onEnable, and the onEnable of new component is already called\r\n        // so we should record the origin length\r\n        const originCount = node.components.length;\r\n        for (let c = 0; c < originCount; ++c) {\r\n            const component = node.components[c];\r\n            if (component._enabled) {\r\n                legacyCC.director._compScheduler.disableComp(component);\r\n\r\n                if (node.activeInHierarchy) {\r\n                    // reactivated from root\r\n                    node._objFlags &= ~Deactivating;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0, len = node.children.length; i < len; ++i) {\r\n            const child = node.children[i];\r\n            if (child.activeInHierarchy) {\r\n                this._deactivateNodeRecursively(child);\r\n\r\n                if (node.activeInHierarchy) {\r\n                    // reactivated from root\r\n                    node._objFlags &= ~Deactivating;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        node._onPostActivated(false);\r\n        node._objFlags &= ~Deactivating;\r\n    }\r\n}\r\n\r\nif (EDITOR) {\r\n    const callPreloadInTryCatch = tryCatchFunctor_EDITOR('__preload');\r\n    const callOnLoadInTryCatch = function (c: Component): void {\r\n        try {\r\n            c.internalOnLoad?.();\r\n        } catch (e) {\r\n            legacyCC._throw(e);\r\n        }\r\n        c._objFlags |= IsOnLoadCalled;\r\n        _onLoadInEditor(c);\r\n    };\r\n    const callOnDestroyInTryCatch = tryCatchFunctor_EDITOR('onDestroy');\r\n    const callOnFocusInTryCatch = tryCatchFunctor_EDITOR('onFocusInEditor');\r\n    const callOnLostFocusInTryCatch = tryCatchFunctor_EDITOR('onLostFocusInEditor');\r\n\r\n    const _onLoadInEditor = (comp: Component): void => {\r\n        if (comp.internalOnLoad && !legacyCC.GAME_VIEW) {\r\n            const focused = Editor.Selection.getLastSelected('node') === comp.node.uuid;\r\n            if (focused) {\r\n                if (comp.onFocusInEditor && callOnFocusInTryCatch) {\r\n                    callOnFocusInTryCatch(comp);\r\n                }\r\n            } else if (comp.onLostFocusInEditor && callOnLostFocusInTryCatch) {\r\n                callOnLostFocusInTryCatch(comp);\r\n            }\r\n        }\r\n    };\r\n\r\n    NodeActivator.prototype.activateComp = (comp: Component, preloadInvoker: UnsortedInvoker, onLoadInvoker: OneOffInvoker, onEnableInvoker: OneOffInvoker): void => {\r\n        if (!isValid(comp, true)) {\r\n            // destroyed before activating\r\n            return;\r\n        }\r\n        // NOTE: _executeInEditMode is dynamically injected on Editor environment\r\n        if (legacyCC.GAME_VIEW || (comp.constructor as any)._executeInEditMode) {\r\n            if (!(comp._objFlags & IsPreloadStarted)) {\r\n                comp._objFlags |= IsPreloadStarted;\r\n                if (comp.internalPreload) {\r\n                    if (preloadInvoker) {\r\n                        preloadInvoker.add(comp);\r\n                    } else if (callPreloadInTryCatch) {\r\n                        callPreloadInTryCatch(comp);\r\n                    }\r\n                }\r\n            }\r\n            if (!(comp._objFlags & IsOnLoadStarted)) {\r\n                comp._objFlags |= IsOnLoadStarted;\r\n                if (comp.internalOnLoad) {\r\n                    if (onLoadInvoker) {\r\n                        onLoadInvoker.add(comp);\r\n                    } else if (callOnLoadInTryCatch) {\r\n                        callOnLoadInTryCatch(comp);\r\n                    }\r\n                } else {\r\n                    comp._objFlags |= IsOnLoadCalled;\r\n                    _onLoadInEditor(comp);\r\n                }\r\n            }\r\n        }\r\n        if (comp._enabled) {\r\n            if (DEBUG) {\r\n                assertIsTrue(comp.node, getError(3823, comp.uuid, comp.name));\r\n            }\r\n            const deactivatedOnLoading = !comp.node.activeInHierarchy;\r\n            if (deactivatedOnLoading) {\r\n                return;\r\n            }\r\n            legacyCC.director._compScheduler.enableComp(comp, onEnableInvoker);\r\n        }\r\n    };\r\n\r\n    NodeActivator.prototype.destroyComp = (comp: Component): void => {\r\n        // ensure onDisable called\r\n        legacyCC.director._compScheduler.disableComp(comp);\r\n\r\n        if (comp.internalOnDestroy && (comp._objFlags & IsOnLoadCalled)) {\r\n            // NOTE: _executeInEditMode is dynamically injected on Editor environment\r\n            if (legacyCC.GAME_VIEW || (comp.constructor as any)._executeInEditMode) {\r\n                callOnDestroyInTryCatch && callOnDestroyInTryCatch(comp);\r\n            }\r\n        }\r\n    };\r\n\r\n    NodeActivator.prototype.resetComp = (comp: Component, didResetToDefault: boolean): void => {\r\n        if (comp.resetInEditor) {\r\n            try {\r\n                comp.resetInEditor(didResetToDefault);\r\n            } catch (e) {\r\n                legacyCC._throw(e);\r\n            }\r\n        }\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n// Some helper methods for compile instantiation code\r\n\r\nimport { TEST } from 'internal:constants';\r\nimport { CCClass, isCCClassOrFastDefined, js, CCObjectFlags, isCCObject, cclegacy, flattenCodeArray } from '../core';\r\n\r\nconst Destroyed = CCObjectFlags.Destroyed;\r\nconst PersistentMask = CCObjectFlags.PersistentMask;\r\nconst DEFAULT = `${CCClass.Attr.DELIMETER}default`;\r\nconst IDENTIFIER_RE = CCClass.IDENTIFIER_RE;\r\n\r\nconst VAR = 'var ';\r\nconst LOCAL_OBJ = 'o';\r\nconst LOCAL_TEMP_OBJ = 't';\r\nconst LOCAL_ARRAY = 'a';\r\nconst LINE_INDEX_OF_NEW_OBJ = 0;\r\n\r\nconst DEFAULT_MODULE_CACHE = {\r\n    'cc.ClickEvent': false,\r\n    'cc.PrefabInfo': false,\r\n};\r\n\r\nconst escapeForJS = CCClass.escapeForJS;\r\n\r\n// HELPER CLASSES\r\n\r\n// ('foo', 'bar')\r\n// -> 'var foo = bar;'\r\nclass Declaration {\r\n    public declare varName: any;\r\n    public declare expression: any;\r\n\r\n    constructor (varName, expression) {\r\n        this.varName = varName;\r\n        this.expression = expression;\r\n    }\r\n\r\n    public toString (): string {\r\n        return `${VAR + this.varName}=${this.expression};`;\r\n    }\r\n}\r\n\r\n// ('a =', 'var b = x')\r\n// -> 'var b = a = x';\r\n// ('a =', 'x')\r\n// -> 'a = x';\r\nfunction mergeDeclaration (statement, expression): any {\r\n    if (expression instanceof Declaration) {\r\n        return new Declaration(expression.varName, statement + expression.expression);\r\n    } else {\r\n        return statement + expression;\r\n    }\r\n}\r\n\r\n// ('a', ['var b = x', 'b.foo = bar'])\r\n// -> 'var b = a = x;'\r\n// -> 'b.foo = bar;'\r\n// ('a', 'var b = x')\r\n// -> 'var b = a = x;'\r\n// ('a', 'x')\r\n// -> 'a = x;'\r\nfunction writeAssignment (codeArray, statement, expression): void {\r\n    if (Array.isArray(expression)) {\r\n        expression[0] = mergeDeclaration(statement, expression[0]);\r\n        codeArray.push(expression);\r\n    } else {\r\n        codeArray.push(`${mergeDeclaration(statement, expression)};`);\r\n    }\r\n}\r\n\r\n// ('foo', 'bar')\r\n// -> 'targetExpression.foo = bar'\r\n// ('foo1', 'bar1')\r\n// ('foo2', 'bar2')\r\n// -> 't = targetExpression;'\r\n// -> 't.foo1 = bar1;'\r\n// -> 't.foo2 = bar2;'\r\nclass Assignments {\r\n    public static pool: js.Pool<Assignments> = new js.Pool((obj: Assignments) => {\r\n        obj._exps.length = 0;\r\n        obj._targetExp = null;\r\n    }, 1);\r\n\r\n    private declare _exps: any[];\r\n    private declare _targetExp: any;\r\n\r\n    constructor (targetExpression?: any) {\r\n        this._exps = [];\r\n        this._targetExp = targetExpression;\r\n    }\r\n\r\n    setTargetExp (value: any): void {\r\n        this._targetExp = value;\r\n    }\r\n\r\n    public append (key, expression): void {\r\n        this._exps.push([key, expression]);\r\n    }\r\n    public writeCode (codeArray): void {\r\n        let targetVar;\r\n        if (this._exps.length > 1) {\r\n            codeArray.push(`${LOCAL_TEMP_OBJ}=${this._targetExp};`);\r\n            targetVar = LOCAL_TEMP_OBJ;\r\n        } else if (this._exps.length === 1) {\r\n            targetVar = this._targetExp;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this._exps.length; i++) {\r\n            const pair = this._exps[i];\r\n            writeAssignment(codeArray, `${targetVar + getPropAccessor(pair[0])}=`, pair[1]);\r\n        }\r\n    }\r\n}\r\n\r\n// HACK: here we've changed the signature of get method\r\n(Assignments.pool.get as any) = function get (this: js.Pool<Assignments>, targetExpression: any): Assignments {\r\n    const cache: Assignments = this._get() || new Assignments();\r\n    cache.setTargetExp(targetExpression);\r\n    return cache;\r\n};\r\n\r\n// HELPER FUNCTIONS\r\n\r\nfunction getPropAccessor (key: any): string {\r\n    return IDENTIFIER_RE.test(key as string) ? (`.${key}`) : (`[${escapeForJS(key)}]`);\r\n}\r\n\r\n//\r\n\r\n/*\r\n * Variables:\r\n * {Object[]} O - objs list\r\n * {Function[]} F - constructor list\r\n * {Node} [R] - specify an instantiated prefabRoot that all references to prefabRoot in prefab will redirect to\r\n * {Object} o - current creating object\r\n */\r\nclass Parser {\r\n    public declare parent: any;\r\n    public objsToClear_iN$t: any[] = []; // used to reset _iN$t variable\r\n    public codeArray: string[] = [];\r\n    // datas for generated code\r\n    public objs: any[] = [];\r\n    public funcs: any[] = [];\r\n    //\r\n    public declare funcModuleCache: any;\r\n\r\n    // {String[]} - variable names for circular references,\r\n    //              not really global, just local variables shared between sub functions\r\n    public globalVariables: any[] = [];\r\n\r\n    // incremental id for new global variables\r\n    public globalVariableId: number = 0;\r\n\r\n    // incremental id for new local variables\r\n    public localVariableId: number = 0;\r\n    public declare result: any;\r\n    /*\r\n    * @method constructor\r\n    * @param {Object} obj - the object to parse\r\n    * @param {Node} [parent]\r\n    */\r\n    constructor (obj, parent) {\r\n        this.parent = parent;\r\n\r\n        this.funcModuleCache = js.createMap();\r\n        js.mixin(this.funcModuleCache as Record<string | number, any>, DEFAULT_MODULE_CACHE);\r\n\r\n        // generate codeArray\r\n        // if (Array.isArray(obj)) {\r\n        //    this.codeArray.push(this.instantiateArray(obj));\r\n        // }\r\n        // else {\r\n        this.codeArray.push(\r\n            `${VAR + LOCAL_OBJ},${LOCAL_TEMP_OBJ};`,\r\n            'if(R){',\r\n            `${LOCAL_OBJ}=R;`,\r\n            '}else{',\r\n            `${LOCAL_OBJ}=R=new ${this.getFuncModule(obj.constructor, true)}();`,\r\n            '}',\r\n        );\r\n        obj._iN$t = { globalVar: 'R' };\r\n        this.objsToClear_iN$t.push(obj);\r\n        this.enumerateObject(this.codeArray, obj);\r\n        // }\r\n\r\n        // generate code\r\n        let globalVariablesDeclaration: string | string[] | undefined;\r\n        if (this.globalVariables.length > 0) {\r\n            globalVariablesDeclaration = `${VAR + this.globalVariables.join(',')};`;\r\n        }\r\n        const code = flattenCodeArray(['return (function(R){',\r\n            globalVariablesDeclaration || [],\r\n            this.codeArray,\r\n            'return o;',\r\n            '})']);\r\n\r\n        // generate method and bind with objs\r\n        // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\r\n        this.result = Function('O', 'F', code)(this.objs, this.funcs);\r\n\r\n        // if (TEST && !isPhantomJS) {\r\n        //     console.log(code);\r\n        // }\r\n\r\n        // cleanup\r\n        for (let i = 0, len = this.objsToClear_iN$t.length; i < len; ++i) {\r\n            this.objsToClear_iN$t[i]._iN$t = null;\r\n        }\r\n        this.objsToClear_iN$t.length = 0;\r\n    }\r\n\r\n    public getFuncModule (func, usedInNew?): any {\r\n        const clsName = js.getClassName(func);\r\n        if (clsName) {\r\n            const cache = this.funcModuleCache[clsName];\r\n            if (cache) {\r\n                return cache;\r\n            } else if (cache === undefined) {\r\n                let clsNameIsModule = clsName.indexOf('.') !== -1;\r\n                if (clsNameIsModule) {\r\n                    try {\r\n                        // ensure is module\r\n                        // eslint-disable-next-line @typescript-eslint/no-implied-eval, no-new-func\r\n                        clsNameIsModule = (func === Function(`return ${clsName}`)());\r\n                        if (clsNameIsModule) {\r\n                            this.funcModuleCache[clsName] = clsName;\r\n                            return clsName;\r\n                        }\r\n                    } catch (e) { /* empty */ }\r\n                }\r\n            }\r\n        }\r\n        let index = this.funcs.indexOf(func);\r\n        if (index < 0) {\r\n            index = this.funcs.length;\r\n            this.funcs.push(func);\r\n        }\r\n        let res = `F[${index}]`;\r\n        if (usedInNew) {\r\n            res = `(${res})`;\r\n        }\r\n        this.funcModuleCache[clsName] = res;\r\n        return res;\r\n    }\r\n\r\n    public getObjRef (obj): string {\r\n        let index = this.objs.indexOf(obj);\r\n        if (index < 0) {\r\n            index = this.objs.length;\r\n            this.objs.push(obj);\r\n        }\r\n        return `O[${index}]`;\r\n    }\r\n\r\n    public setValueType (codeArray, defaultValue, srcValue, targetExpression): void {\r\n        // HACK: here we've changed the signature of get method.\r\n        const assignments: Assignments = (Assignments.pool.get as any)(targetExpression);\r\n        let fastDefinedProps = defaultValue.constructor.__props__;\r\n        if (!fastDefinedProps) {\r\n            fastDefinedProps = Object.keys(defaultValue as object);\r\n        }\r\n        for (let i = 0; i < fastDefinedProps.length; i++) {\r\n            const propName = fastDefinedProps[i];\r\n            const prop = srcValue[propName];\r\n            if (defaultValue[propName] === prop) {\r\n                continue;\r\n            }\r\n            const expression = this.enumerateField(srcValue, propName, prop);\r\n            assignments.append(propName, expression);\r\n        }\r\n        assignments.writeCode(codeArray);\r\n        Assignments.pool.put(assignments);\r\n    }\r\n\r\n    public enumerateCCClass (codeArray, obj, klass): void {\r\n        const props = klass.__values__;\r\n        const attrs = CCClass.Attr.getClassAttrs(klass);\r\n        for (let p = 0; p < props.length; p++) {\r\n            const key = props[p];\r\n            const val = obj[key];\r\n            let defaultValue = attrs[key + DEFAULT];\r\n            if (equalsToDefault(defaultValue, val)) {\r\n                continue;\r\n            }\r\n            if (typeof val === 'object' && val instanceof cclegacy.ValueType) {\r\n                defaultValue = CCClass.getDefault(defaultValue);\r\n                if (defaultValue && defaultValue.constructor === val.constructor) {\r\n                    // fast case\r\n                    const targetExpression = LOCAL_OBJ + getPropAccessor(key);\r\n                    this.setValueType(codeArray, defaultValue, val, targetExpression);\r\n                    continue;\r\n                }\r\n            }\r\n            this.setObjProp(codeArray, obj, key, val);\r\n        }\r\n    }\r\n\r\n    public instantiateArray (value): Declaration[] | '[]' {\r\n        if (value.length === 0) {\r\n            return '[]';\r\n        }\r\n\r\n        const arrayVar = LOCAL_ARRAY + (++this.localVariableId);\r\n        const declaration = new Declaration(arrayVar, `new Array(${value.length})`);\r\n        const codeArray = [declaration];\r\n\r\n        // assign a _iN$t flag to indicate that this object has been parsed.\r\n        value._iN$t = {\r\n            globalVar: '',      // the name of declared global variable used to access this object\r\n            source: codeArray,  // the source code array for this object\r\n        };\r\n        this.objsToClear_iN$t.push(value);\r\n\r\n        for (let i = 0; i < value.length; ++i) {\r\n            const statement = `${arrayVar}[${i}]=`;\r\n            const expression = this.enumerateField(value, i, value[i]);\r\n            writeAssignment(codeArray, statement, expression);\r\n        }\r\n        return codeArray;\r\n    }\r\n\r\n    public instantiateTypedArray (value): string | Declaration[] {\r\n        const type = value.constructor.name;\r\n        if (value.length === 0) {\r\n            return `new ${type}`;\r\n        }\r\n\r\n        const arrayVar = LOCAL_ARRAY + (++this.localVariableId);\r\n        const declaration = new Declaration(arrayVar, `new ${type}(${value.length})`);\r\n        const codeArray = [declaration];\r\n\r\n        // assign a _iN$t flag to indicate that this object has been parsed.\r\n        value._iN$t = {\r\n            globalVar: '',      // the name of declared global variable used to access this object\r\n            source: codeArray,  // the source code array for this object\r\n        };\r\n        this.objsToClear_iN$t.push(value);\r\n\r\n        for (let i = 0; i < value.length; ++i) {\r\n            if (value[i] !== 0) {\r\n                const statement = `${arrayVar}[${i}]=`;\r\n                writeAssignment(codeArray, statement, value[i]);\r\n            }\r\n        }\r\n        return codeArray;\r\n    }\r\n\r\n    public enumerateField (obj, key, value): any {\r\n        if (typeof value === 'object' && value) {\r\n            const _iN$t = value._iN$t;\r\n            if (_iN$t) {\r\n                // parsed\r\n                let globalVar = _iN$t.globalVar;\r\n                if (!globalVar) {\r\n                    // declare a global var\r\n                    globalVar = _iN$t.globalVar = `v${++this.globalVariableId}`;\r\n                    this.globalVariables.push(globalVar);\r\n                    // insert assignment statement to assign to global var\r\n                    const line = _iN$t.source[LINE_INDEX_OF_NEW_OBJ];\r\n                    _iN$t.source[LINE_INDEX_OF_NEW_OBJ] = mergeDeclaration(`${globalVar}=`, line);\r\n                    // if (typeof line ==='string' && line.startsWith(VAR)) {\r\n                    //     // var o=xxx -> var o=global=xxx\r\n                    //     var LEN_OF_VAR_O = 5;\r\n                    //     _iN$t.source[LINE_INDEX_OF_NEW_OBJ] = line.slice(0, LEN_OF_VAR_O) + '=' + globalVar + line.slice(LEN_OF_VAR_O);\r\n                    // }\r\n                }\r\n                return globalVar;\r\n            } else if (ArrayBuffer.isView(value)) {\r\n                return this.instantiateTypedArray(value);\r\n            } else if (Array.isArray(value)) {\r\n                return this.instantiateArray(value);\r\n            } else {\r\n                return this.instantiateObj(value);\r\n            }\r\n        } else if (typeof value === 'function') {\r\n            return this.getFuncModule(value);\r\n        } else if (typeof value === 'string') {\r\n            return escapeForJS(value);\r\n        } else {\r\n            if (key === '_objFlags' && isCCObject(obj)) {\r\n                value &= PersistentMask;\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n\r\n    public setObjProp (codeArray, obj, key, value): void {\r\n        const statement = `${LOCAL_OBJ + getPropAccessor(key)}=`;\r\n        const expression = this.enumerateField(obj, key, value);\r\n        writeAssignment(codeArray, statement, expression);\r\n    }\r\n\r\n    // codeArray - the source code array for this object\r\n    public enumerateObject (codeArray, obj): void {\r\n        const klass: Constructor<unknown> = obj.constructor;\r\n        if (isCCClassOrFastDefined(klass)) {\r\n            this.enumerateCCClass(codeArray, obj, klass);\r\n        } else {\r\n            // primitive javascript object\r\n            for (const key in obj) {\r\n                if (!Object.prototype.hasOwnProperty.call(obj, key)\r\n                    || (key.charCodeAt(0) === 95 && key.charCodeAt(1) === 95   // starts with \"__\"\r\n                    && key !== '__type__')\r\n                ) {\r\n                    continue;\r\n                }\r\n                const value = obj[key];\r\n                if (typeof value === 'object' && value && value === obj._iN$t) {\r\n                    continue;\r\n                }\r\n                this.setObjProp(codeArray, obj, key, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    public instantiateObj (obj): any {\r\n        if (obj instanceof cclegacy.ValueType) {\r\n            return CCClass.getNewValueTypeCode(obj);\r\n        }\r\n        if (obj instanceof cclegacy.Asset) {\r\n            // register to asset list and just return the reference.\r\n            return this.getObjRef(obj);\r\n        }\r\n        if (obj._objFlags & Destroyed) {\r\n            // the same as cc.isValid(obj)\r\n            return null;\r\n        }\r\n\r\n        let createCode;\r\n        const ctor: Constructor<unknown> = obj.constructor;\r\n        if (isCCClassOrFastDefined(ctor)) {\r\n            if (this.parent) {\r\n                if (this.parent instanceof cclegacy.Component) {\r\n                    if (obj instanceof cclegacy.Node || obj instanceof cclegacy.Component) {\r\n                        return this.getObjRef(obj);\r\n                    }\r\n                } else if (this.parent instanceof cclegacy.Node) {\r\n                    if (obj instanceof cclegacy.Node) {\r\n                        if (!obj.isChildOf(this.parent)) {\r\n                            // should not clone other nodes if not descendant\r\n                            return this.getObjRef(obj);\r\n                        }\r\n                    } else if (obj instanceof cclegacy.Component) {\r\n                        if (!obj.node?.isChildOf(this.parent)) {\r\n                            // should not clone other component if not descendant\r\n                            return this.getObjRef(obj);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            createCode = new Declaration(LOCAL_OBJ, `new ${this.getFuncModule(ctor, true)}()`);\r\n        } else if (ctor === Object) {\r\n            createCode = new Declaration(LOCAL_OBJ, '{}');\r\n        } else if (!ctor) {\r\n            createCode = new Declaration(LOCAL_OBJ, 'Object.create(null)');\r\n        } else {\r\n            // do not clone unknown type\r\n            return this.getObjRef(obj);\r\n        }\r\n\r\n        const codeArray = [createCode];\r\n\r\n        // assign a _iN$t flag to indicate that this object has been parsed.\r\n        obj._iN$t = {\r\n            globalVar: '',      // the name of declared global variable used to access this object\r\n            source: codeArray,  // the source code array for this object\r\n            // propName: '',     // the propName this object defined in its source code,\r\n            //                  // if defined, use LOCAL_OBJ.propName to access the obj, else just use o\r\n        };\r\n        this.objsToClear_iN$t.push(obj);\r\n\r\n        this.enumerateObject(codeArray, obj);\r\n        return ['(function(){',\r\n            codeArray,\r\n            'return o;})();'];\r\n    }\r\n}\r\n\r\nexport function equalsToDefault (def: any, value: any): boolean {\r\n    if (typeof def === 'function') {\r\n        try {\r\n            def = def();\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    if (def === value) {\r\n        return true;\r\n    }\r\n    if (def && value\r\n        && typeof def === 'object' && typeof value === 'object'\r\n        && def.constructor === value.constructor\r\n    ) {\r\n        if (def instanceof cclegacy.ValueType) {\r\n            if (def.equals(value)) {\r\n                return true;\r\n            }\r\n        } else if (Array.isArray(def)) {\r\n            return def.length === 0 && value.length === 0;\r\n        } else if (def.constructor === Object) {\r\n            return js.isEmptyObject(def) && js.isEmptyObject(value);\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function compile (node): any {\r\n    const root = (node instanceof cclegacy.Node) && node;\r\n    const parser = new Parser(node, root);\r\n    return parser.result;\r\n}\r\n\r\nif (TEST) {\r\n    cclegacy._Test.IntantiateJit = {\r\n        equalsToDefault,\r\n        compile,\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, editable } from 'cc.decorator';\r\nimport { SUPPORT_JIT, ALIPAY, RUNTIME_BASED, JSB } from 'internal:constants';\r\nimport { compile } from '../../serialization/instantiate-jit';\r\nimport { js } from '../../core';\r\nimport { Enum } from '../../core/value-types';\r\nimport { Asset } from '../../asset/assets/asset';\r\nimport { Node } from '../node';\r\nimport { legacyCC } from '../../core/global-exports';\r\nimport { warnID } from '../../core/platform/debug';\r\nimport { updateChildrenForDeserialize } from '../../core/utils/jsb-utils';\r\nimport * as utils from './utils';\r\n\r\n/**\r\n * @en An enumeration used with the [[Prefab.optimizationPolicy]] to specify how to optimize the instantiate operation.\r\n * @zh Prefab 创建实例所用的优化策略，配合 [[Prefab.optimizationPolicy]] 使用。\r\n */\r\nconst OptimizationPolicy = Enum({\r\n    /**\r\n     * @en The optimization policy is automatically chosen based on the number of instantiations.\r\n     * When you first create an instance, the behavior is the same as SINGLE_INSTANCE.\r\n     * MULTI_INSTANCE will be automatically used after multiple creation.\r\n     * @zh 根据创建次数自动调整优化策略。初次创建实例时，行为等同 SINGLE_INSTANCE，多次创建后将自动采用 MULTI_INSTANCE。\r\n     */\r\n    AUTO: 0,\r\n    /**\r\n     * @en Optimize for single instance creation.<br>\r\n     * This option skips code generation for this prefab.\r\n     * When this prefab will usually create only one instances, please select this option.\r\n     * @zh 优化单次创建性能。<br>\r\n     * 该选项会跳过针对这个 prefab 的代码生成优化操作。当该 prefab 加载后，一般只会创建一个实例时，请选择此项。\r\n     */\r\n    SINGLE_INSTANCE: 1,\r\n    /**\r\n     * @en Optimize for creating instances multiple times.<br>\r\n     * This option enables code generation for this prefab.\r\n     * When this prefab will usually create multiple instances, please select this option.\r\n     * It is also recommended to select this option if the prefab instance in the scene\r\n     * has Auto Sync enabled and there are multiple instances in the scene.\r\n     * @zh 优化多次创建性能。<br>\r\n     * 该选项会启用针对这个 prefab 的代码生成优化操作。当该 prefab 加载后，一般会创建多个实例时，请选择此项。如果该 prefab 在场景中的节点启用了自动关联，并且在场景中有多份实例，也建议选择此项。\r\n     */\r\n    MULTI_INSTANCE: 2,\r\n});\r\n\r\n/**\r\n * @en Class for prefab handling.\r\n * @zh 预制资源类。\r\n */\r\n@ccclass('cc.Prefab')\r\nexport class Prefab extends Asset {\r\n    /**\r\n     * @en Enumeration for optimization policy\r\n     * @zh Prefab 创建实例所用的优化策略枚举类型\r\n     */\r\n    public static OptimizationPolicy = OptimizationPolicy;\r\n\r\n    public static OptimizationPolicyThreshold = 3;\r\n\r\n    /**\r\n     * @en The main [[Node]] in the prefab\r\n     * @zh Prefab 中的根节点，[[Node]] 类型\r\n     */\r\n    @serializable\r\n    @editable\r\n    public data: any = null;\r\n\r\n    /**\r\n     * @zh\r\n     * 设置实例化这个 prefab 时所用的优化策略。根据使用情况设置为合适的值，能优化该 prefab 实例化所用的时间。推荐在编辑器的资源中设置。\r\n     * @en\r\n     * Indicates the optimization policy for instantiating this prefab.\r\n     * Set to a suitable value based on usage, can optimize the time it takes to instantiate this prefab.\r\n     * Suggest to set this policy in the editor's asset inspector.\r\n     * @default Prefab.OptimizationPolicy.AUTO\r\n     * @example\r\n     * ```ts\r\n     * import { Prefab } from 'cc';\r\n     * prefab.optimizationPolicy = Prefab.OptimizationPolicy.MULTI_INSTANCE;\r\n     * ```\r\n     */\r\n    @serializable\r\n    @editable\r\n    public optimizationPolicy = OptimizationPolicy.AUTO;\r\n\r\n    @serializable\r\n    @editable\r\n    public persistent = false;\r\n\r\n    // Cache function to optimize instance creation.\r\n    private _createFunction: ((...arg: any[]) => Node) | null = null;\r\n    private _instantiatedTimes: number = 0;\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public createNode (cb: (err: Error | null, node: Node) => void): void {\r\n        const node = legacyCC.instantiate(this) as Node;\r\n        node.name = this.name;\r\n        cb(null, node);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Dynamically translation prefab data into minimized code.<br/>\r\n     * This method will be called automatically before the first time the prefab being instantiated,<br/>\r\n     * but you can re-call to refresh the create function once you modified the original prefab data in script.\r\n     * @zh\r\n     * 将预制数据动态转换为最小化代码。<br/>\r\n     * 此方法将在第一次实例化预制件之前自动调用，<br/>\r\n     * 但是您可以在脚本中修改原始预制数据后重新调用以刷新创建功能。\r\n     */\r\n    public compileCreateFunction (): void {\r\n        if (SUPPORT_JIT) {\r\n            this._createFunction = compile(this.data);\r\n        }\r\n    }\r\n\r\n    // just instantiate, will not initialize the Node, this will be called during Node's initialization.\r\n    // @param {Node} [rootToRedirect] - specify an instantiated prefabRoot that all references to prefabRoot in prefab\r\n    //                                  will redirect to\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _doInstantiate (rootToRedirect?: any): Node {\r\n        if (!this.data._prefab) {\r\n            // temp guard code\r\n            warnID(3700);\r\n        }\r\n        if (!this._createFunction) {\r\n            this.compileCreateFunction();\r\n        }\r\n        return this._createFunction!(rootToRedirect);  // this.data._instantiate();\r\n    }\r\n\r\n    /**\r\n     * @dontmangle\r\n     * NOTE: the protected method `_instantiate` is invoked by dynamically without type information.\r\n     * See `instantiate` in cocos/serialization/instantiate.ts.\r\n     * ```ts\r\n     * clone = original._instantiate(null, true); // original is any, so _instantiate should not be mangled.\r\n     * ```\r\n     */\r\n    protected _instantiate (): Node {\r\n        let node: Node;\r\n        let useJit = false;\r\n        if (SUPPORT_JIT) {\r\n            if (this.optimizationPolicy === OptimizationPolicy.SINGLE_INSTANCE) {\r\n                useJit = false;\r\n            } else if (this.optimizationPolicy === OptimizationPolicy.MULTI_INSTANCE) {\r\n                useJit = true;\r\n            } else {\r\n                // auto\r\n                useJit = (this._instantiatedTimes + 1) >= Prefab.OptimizationPolicyThreshold;\r\n            }\r\n        }\r\n        if (useJit) {\r\n            // instantiate node\r\n            node = this._doInstantiate();\r\n            // initialize node\r\n            this.data._instantiate(node);\r\n        } else {\r\n            // instantiate node\r\n            node = this.data._instantiate();\r\n        }\r\n        ++this._instantiatedTimes;\r\n\r\n        return node;\r\n    }\r\n\r\n    public initDefault (uuid?: string): void {\r\n        super.initDefault(uuid);\r\n        this.data = new Node();\r\n        this.data.name = '(Missing Node)';\r\n        const prefabInfo = new legacyCC._PrefabInfo();\r\n        prefabInfo.asset = this;\r\n        prefabInfo.root = this.data;\r\n        this.data._prefab = prefabInfo;\r\n    }\r\n\r\n    public validate (): boolean {\r\n        return !!this.data;\r\n    }\r\n\r\n    public onLoaded (): void {\r\n        const rootNode = this.data as Node;\r\n        utils.expandNestedPrefabInstanceNode(rootNode);\r\n        utils.applyTargetOverrides(rootNode);\r\n        if (JSB) {\r\n            updateChildrenForDeserialize(rootNode);\r\n        }\r\n    }\r\n}\r\n\r\nexport declare namespace Prefab {\r\n    export { utils as _utils };\r\n}\r\n\r\njs.value(Prefab, '_utils', utils);\r\n\r\nlegacyCC.Prefab = Prefab;\r\nif (ALIPAY || RUNTIME_BASED) {\r\n    legacyCC._Prefab = Prefab;\r\n} else {\r\n    js.obsolete(legacyCC, 'cc._Prefab', 'Prefab');\r\n}\r\n"],"names":["deepFlatten","strList","array","_step","_iterator","_createForOfIteratorHelperLoose","done","item","value","Array","isArray","push","flattenCodeArray","join","Acceleration","exports","x","y","z","timestamp","this","CCClass","Attr","setClassAttr","EventHandler","Node","deprecateModuleExportedName","SystemEventType","newName","since","removed","SystemEvent","systemEvent","AccelerometerInputSource","_intervalInMileSeconds","_accelTimer","_eventTarget","EventTarget","_globalEventClass","window","DeviceMotionEvent","DeviceOrientationEvent","systemInfo","browserType","BrowserType","MOBILE_QQ","_deviceEventName","_didAccelerateFunc","_didAccelerate","bind","_proto","prototype","_registerEvent","performance","now","addEventListener","_unregisterEvent","removeEventListener","event","eventAcceleration","accelerationIncludingGravity","deviceOrientationEvent","gamma","beta","alpha","screenAdapter","isFrameRotated","tmp","tmpX","orientation","os","OS","ANDROID","acceleration","EventAcceleration","emit","InputEventType","DEVICEMOTION","start","_this","requestPermission","then","response","e","warn","stop","setInterval","intervalInMileSeconds","on","eventType","callback","target","InputSource","InputSourceAxis1D","_InputSource","apply","arguments","_inheritsLoose","getValue","Error","InputSourceAxis2D","_InputSource2","InputSourceAxis3D","_InputSource3","InputSourceQuat","_InputSource4","CompositeInputSourceAxis1D","_InputSourceAxis1D","options","call","positive","negative","positiveValue","negativeValue","Math","abs","CompositeInputSourceAxis2D","_InputSourceAxis2D","_this2","up","down","left","right","xAxis","yAxis","Vec2","_InputSourceAxis3D","CompositeInputSourceAxis3D","_this3","forward","backward","zAxis","Vec3","Pose","InputSourceButton","_InputSourceAxis1D2","InputSourceDpad","_CompositeInputSource","InputSourceStick","_CompositeInputSource2","InputSourceOrientation","_InputSourceQuat","InputSourcePosition","_InputSourceAxis3D2","InputSourceTouch","_InputSourceAxis1D3","XRLeftHandedness","XRRightHandedness","devicesTmp","Button","KeyEventType","StickKeyCode","StickAxisCode","StickTouchCode","GamepadInputDevice","deviceId","_this$_webPoseState","_deviceId","_connected","_webPoseState","HAND_LEFT","position","ZERO","Quat","IDENTITY","HAND_RIGHT","AIM_LEFT","AIM_RIGHT","_initInputSource","_init","hasFeature","Feature","EVENT_GAMEPAD","_on","cb","_removeInputDevice","id","removeIndex","all","findIndex","device","js","_getOrCreateInputDevice","connected","find","_ensureDirectorDefined","_intervalId","legacyCC","director","Director","clearInterval","_updateGamepadCnt","cnt","i","l","_cachedWebGamepads","length","_totalGamepadCnt","_getWebGamePads","EVENT_BEGIN_FRAME","_scanGamepads","gamepad","index","GAMEPAD_CHANGE","EventGamepad","_scanWebGamepads","devices","webGamepads","webGamepad","cachedWebGamepad","cachedButtons","buttons","j","cachedButton","button","cachedAxes","axes","cachedAxisValue","axisValue","_scanWebXRGamepads","GAMEPAD_INPUT","_scanWebXRGamepadsPose","_GamepadInputDevice$_","_GamepadInputDevice$_2","webxrGamepadMap","_getWebXRGamepadMap","_cachedWebXRGamepadMap","xr","get","checkGamepadChanged","Map","set","_copyCacheGamepadValue","currGamepad","cachedGamepad","cacheGamepad","_globalThis$__globalX","infoList","globalThis","__globalXR","webxrHandlePoseInfos","info","_updateWebPoseState","HANDLE_POSE_INPUT","_globalThis$__globalX2","navigator","getGamepads","webkitGetGamepads","_getWebGamepad","_axisToButtons","code","w","_buttonNorth","_GamepadInputDevice$_3","webxrGamepad","_buttonEast","_GamepadInputDevice$_4","_buttonWest","_GamepadInputDevice$_5","_buttonSouth","_GamepadInputDevice$_6","_buttonL1","_buttonL2","_GamepadInputDevice$_7","_buttonL3","_GamepadInputDevice$_8","_buttonR1","_buttonR2","_GamepadInputDevice$_9","_buttonR3","_GamepadInputDevice$_10","_buttonShare","_buttonOptions","dpadUp","dpadDown","dpadLeft","dpadRight","_dpad","leftStickUp","_GamepadInputDevice$_11","leftStickDown","_GamepadInputDevice$_12","leftStickLeft","_GamepadInputDevice$_13","leftStickRight","_GamepadInputDevice$_14","_leftStick","rightStickUp","_GamepadInputDevice$_15","rightStickDown","_GamepadInputDevice$_16","rightStickLeft","_GamepadInputDevice$_17","rightStickRight","_GamepadInputDevice$_18","_rightStick","_buttonStart","_gripLeft","_GamepadInputDevice$_19","_gripRight","_GamepadInputDevice$_20","_handLeftPosition","_handLeftOrientation","_handRightPosition","_handRightOrientation","_aimLeftPosition","_aimLeftOrientation","_aimRightPosition","_aimRightOrientation","_createClass","key","_nativeButtonMap","BUTTON_EAST","BUTTON_SOUTH","BUTTON_NORTH","BUTTON_WEST","BUTTON_LEFT_STICK","BUTTON_RIGHT_STICK","ROKID_MENU","ROKID_START","BUTTON_TRIGGER_LEFT","BUTTON_TRIGGER_RIGHT","HandleInputDevice","_this$_nativeButtonSt","_this$_nativeTouchSta","_nativeButtonState","TRIGGER_LEFT","TRIGGER_RIGHT","GRIP_LEFT","GRIP_RIGHT","LEFT_STICK_UP","LEFT_STICK_DOWN","LEFT_STICK_LEFT","LEFT_STICK_RIGHT","RIGHT_STICK_UP","RIGHT_STICK_DOWN","RIGHT_STICK_LEFT","RIGHT_STICK_RIGHT","_nativeTouchState","UNDEFINE","A","B","X","Y","LEFT_TRIGGER","RIGHT_TRIGGER","LEFT_THUMBSTICK","RIGHT_THUMBSTICK","evt","remoteInputEvent","keyEventType","detail","stickAxisCode","stickAxisValue","stickKeyCode","isButtonPressed","touchCode","touchValue","KET_CLICK","KET_STICK","KET_GRAB","negativeButton","positiveButton","LEFT_STICK_X","LEFT_STICK_Y","RIGHT_STICK_X","RIGHT_STICK_Y","L2","R2","LEFT_GRIP","RIGHT_GRIP","KET_TOUCH","HANDLE_INPUT","EventHandle","_buttonTriggerLeft","_buttonTriggerRight","_triggerLeft","_triggerRight","_buttonLeftStick","_buttonRightStick","_touchButtonA","_touchButtonB","_touchButtonX","_touchButtonY","_touchButtonTriggerLeft","_touchButtonTriggerRight","_touchButtonThumbStickLeft","_touchButtonThumbStickRight","EventDispatcherPriority","HMDInputDevice","VIEW_LEFT","VIEW_RIGHT","HEAD_MIDDLE","Promise","resolve","_scanHmd","webxrHmdPoseInfos","HMD_POSE_INPUT","EventHMD","_viewLeftPosition","_viewLeftOrientation","_viewRightPosition","_viewRightOrientation","_headMiddlePosition","_headMiddleOrientation","HandheldInputDevice","_handheldPosition","_handheldOrientation","code2KeyCode","Backspace","KeyCode","BACKSPACE","Tab","TAB","Enter","ENTER","ShiftLeft","SHIFT_LEFT","ControlLeft","CTRL_LEFT","AltLeft","ALT_LEFT","ShiftRight","SHIFT_RIGHT","ControlRight","CTRL_RIGHT","AltRight","ALT_RIGHT","Pause","PAUSE","CapsLock","CAPS_LOCK","Escape","ESCAPE","Space","SPACE","PageUp","PAGE_UP","PageDown","PAGE_DOWN","End","END","Home","HOME","ArrowLeft","ARROW_LEFT","ArrowUp","ARROW_UP","ArrowRight","ARROW_RIGHT","ArrowDown","ARROW_DOWN","Insert","INSERT","Delete","DELETE","Digit0","DIGIT_0","Digit1","DIGIT_1","Digit2","DIGIT_2","Digit3","DIGIT_3","Digit4","DIGIT_4","Digit5","DIGIT_5","Digit6","DIGIT_6","Digit7","DIGIT_7","Digit8","DIGIT_8","Digit9","DIGIT_9","KeyA","KEY_A","KeyB","KEY_B","KeyC","KEY_C","KeyD","KEY_D","KeyE","KEY_E","KeyF","KEY_F","KeyG","KEY_G","KeyH","KEY_H","KeyI","KEY_I","KeyJ","KEY_J","KeyK","KEY_K","KeyL","KEY_L","KeyM","KEY_M","KeyN","KEY_N","KeyO","KEY_O","KeyP","KEY_P","KeyQ","KEY_Q","KeyR","KEY_R","KeyS","KEY_S","KeyT","KEY_T","KeyU","KEY_U","KeyV","KEY_V","KeyW","KEY_W","KeyX","KEY_X","KeyY","KEY_Y","KeyZ","KEY_Z","Numpad0","NUM_0","Numpad1","NUM_1","Numpad2","NUM_2","Numpad3","NUM_3","Numpad4","NUM_4","Numpad5","NUM_5","Numpad6","NUM_6","Numpad7","NUM_7","Numpad8","NUM_8","Numpad9","NUM_9","NumpadMultiply","NUM_MULTIPLY","NumpadAdd","NUM_PLUS","NumpadSubtract","NUM_SUBTRACT","NumpadDecimal","NUM_DECIMAL","NumpadDivide","NUM_DIVIDE","NumpadEnter","NUM_ENTER","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NumLock","NUM_LOCK","ScrollLock","SCROLL_LOCK","Semicolon","SEMICOLON","Equal","EQUAL","Comma","COMMA","Minus","DASH","Period","PERIOD","Slash","SLASH","Backquote","BACK_QUOTE","BracketLeft","BRACKET_LEFT","Backslash","BACKSLASH","BracketRight","BRACKET_RIGHT","Quote","QUOTE","KeyboardInputSource","dispatchKeyboardDownEvent","nativeKeyboardEvent","_handleKeyboardDown","dispatchKeyboardUpEvent","_handleKeyboardUp","canvas","document","getElementById","_getInputEvent","keyCode","NONE","EventKeyboard","stopPropagation","preventDefault","repeat","keyPressingInputEvent","KEY_PRESSING","keyDownInputEvent","KEY_DOWN","inputEvent","KEY_UP","MouseInputSource","_canvas","_pointLocked","_isPressed","_preMousePos","_handleMouseDown","_handleMouseMove","_handleMouseUp","EVENT_MOUSE","TEST","EDITOR","_createCallback","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","dispatchMouseDownEvent","nativeMouseEvent","dispatchMouseMoveEvent","dispatchMouseUpEvent","dispatchScrollEvent","_handleMouseWheel","_getCanvasRect","box","getBoundingClientRect","Rect","width","height","_getLocation","mouseEvent","canvasRect","dpr","devicePixelRatio","movementX","clientX","movementY","clientY","_this$_canvas","_this$_canvas2","_this$_canvas3","_this$_canvas4","_this$_canvas5","_this$_canvas6","_registerPointerLockEvent","_handleMouseLeave","_handleMouseEnter","lockChangeAlert","pointerLockElement","mozPointerLockElement","_this3$_canvas","location","targetButton","focus","EventMouse","BUTTON_LEFT","BUTTON_RIGHT","BUTTON_MIDDLE","BUTTON_MISSING","eventMouse","setLocation","setButton","MOUSE_WHEEL","setScrollData","deltaX","deltaY","MOUSE_LEAVE","MOUSE_ENTER","dispatchEventsInCache","tempVec2","touchManager","TouchManager","_touchMap","_maxTouches","_createTouch","touchID","has","logID","_checkTouchMapSizeMoreThanMax","touch","Touch","_updateTouch","releaseTouch","getTouch","getOrCreateTouch","getAllTouches","touches","forEach","getTouchCount","size","getLocation","setPrevPoint","setPoint","maxSize","macro","ENABLE_MULTI_TOUCH","lastModified","TOUCH_TIMEOUT","getID","TouchInputSource","INPUT_TOUCH","TOUCH_START","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","handleTouches","changedTouches","changedTouch","identifier","eventTouch","EventTouch","ar","isWebXR","InputEventDispatcher","inputEventTarget","priority","GLOBAL","_inputEventTarget","onThrowException","dispatchEvent","type","pointerEventTypeMap","_pointerEventTypeMap","Input","_touchInput","_mouseInput","_keyboardInput","_accelerometerInput","_eventKeyboardList","_eventAccelerationList","_eventGamepadList","_eventHandleList","_eventHMDList","_eventHandheldList","_needSimulateTouchMoveEvent","_eventDispatcherList","_handleInput","_hmdInput","_handheldInput","_inputEventDispatcher","_registerEventDispatcher","_proto2","_dispatchMouseDownEvent","_this$_mouseInput$dis","_this$_mouseInput","_dispatchMouseMoveEvent","_this$_mouseInput$dis2","_this$_mouseInput2","_dispatchMouseUpEvent","_this$_mouseInput$dis3","_this$_mouseInput3","_dispatchMouseScrollEvent","_this$_mouseInput$dis4","_this$_mouseInput4","_dispatchKeyboardDownEvent","_this$_keyboardInput$","_this$_keyboardInput","_dispatchKeyboardUpEvent","_this$_keyboardInput$2","_this$_keyboardInput2","once","off","setAccelerometerEnabled","isEnable","setAccelerometerInterval","_simulateEventTouch","getLocationX","getLocationY","windowId","_dispatchEventTouch","eventDispatcher","sort","a","b","_emitEvent","dispatcher","_clearEvents","self","touchInput","mouseInput","keyboardInput","handleInput","sys","_dispatchEventMouse","EVENT_KEYBOARD","eventKeyboardList","_dispatchOrPushEvent","EVENT_ACCELEROMETER","eventAccelerationList","eventGamepadList","EVENT_HANDLE","eventHandleList","EVENT_HMD","eventHMDList","EVENT_HANDHELD","eventHandheldList","HANDHELD_POSE_INPUT","getTouches","touchesLength","propagationStopped","propagationImmediateStopped","_frameDispatchEvents","EventType","input","_EventTarget","isEnabled","interval","cclegacy","replaceProperty","name","Event","targetName","markAsWarning","suggest","map","KEY","customGetter","children","_getUITransformComp","customSetter","anchorX","anchorY","customFunction","out","anchorPoint","point","setAnchorPoint","Size","contentSize","setContentSize","removeProperty","SceneGlobals","NodeUIProperties","Layers","Enum","BitMask","HideInHierarchy","CCObjectFlags","DontSave","PrivateNode","ccclass","_dec","_class","_Node","warnID","hideFlags","path","referenceNode","scene","getScene","getChildByPath","BaseNode","fastRemoveAt","IsStartCalled","IsOnEnableCalled","sortedIndex","comp","order","constructor","_executionOrder","_id","h","m","test","testOrder","testId","stableRemoveInactive","iterator","flagToClear","next","node","_activeInHierarchy","removeAt","_objFlags","IsEditorOnEnableCalled","LifeCycleInvoker","invokeFunc","Iterator","_zero","_neg","_pos","_invoke","compareOrder","OneOffInvoker","_LifeCycleInvoker","add","remove","fastRemove","cancelInactive","invoke","compsNeg","compsPos","ReusableInvoker","_LifeCycleInvoker2","splice","dt","createInvokeImplJit","useDt","ensureFlag","body","fastPath","Function","createInvokeImpl","singleInvoke","_throw","invokeStart","invokeUpdate","invokeLateUpdate","invokeOnEnable","compScheduler","_compScheduler","_enabled","onEnable","_onEnabled","IsPreloadStarted","ComponentScheduler","_deferredComps","unscheduleAll","_proto3","startInvoker","updateInvoker","lateUpdateInvoker","_updating","getScheduler","resumeTarget","_scheduleImmediate","_onDisabled","pauseTarget","indexOf","internalStart","internalUpdate","internalLateUpdate","enableComp","invoker","internalOnEnable","activeInHierarchy","disableComp","internalOnDisable","startPhase","_startForNewComps","updatePhase","lateUpdatePhase","_deferredSchedule","comps","len","IsOnLoadStarted","IsOnLoadCalled","Deactivating","UnsortedInvoker","invokePreload","invokeOnLoad","activateTasksPool","Pool","_componentCorrupted","errorID","log","_removeComponent","getWritableComponents","task","_get","preload","onLoad","zero","neg","pos","NodeActivator","reset","_activatingStack","activateNode","active","_activateNodeRecursively","pop","put","_deactivateNodeRecursively","stack","lastTask","NodeEventType","ACTIVE_IN_HIERARCHY_CHANGED","activateComp","preloadInvoker","onLoadInvoker","onEnableInvoker","isValid","internalPreload","internalOnLoad","assertIsTrue","getError","uuid","destroyComp","internalOnDestroy","_setActiveInHierarchy","originCount","components","component","Component","child","_onPostActivated","c","Destroyed","PersistentMask","DEFAULT","DELIMETER","IDENTIFIER_RE","VAR","LOCAL_OBJ","DEFAULT_MODULE_CACHE","escapeForJS","Declaration","varName","expression","toString","mergeDeclaration","statement","writeAssignment","codeArray","Assignments","targetExpression","_exps","_targetExp","setTargetExp","append","writeCode","targetVar","LOCAL_TEMP_OBJ","pair","getPropAccessor","pool","obj","cache","Parser","parent","globalVariablesDeclaration","objsToClear_iN$t","objs","funcs","globalVariables","globalVariableId","localVariableId","funcModuleCache","getFuncModule","_iN$t","globalVar","enumerateObject","result","func","usedInNew","clsName","undefined","clsNameIsModule","res","getObjRef","setValueType","defaultValue","srcValue","assignments","fastDefinedProps","__props__","Object","keys","propName","prop","enumerateField","enumerateCCClass","klass","props","__values__","attrs","getClassAttrs","p","val","equalsToDefault","ValueType","getDefault","setObjProp","instantiateArray","arrayVar","source","instantiateTypedArray","line","ArrayBuffer","isView","instantiateObj","isCCObject","isCCClassOrFastDefined","hasOwnProperty","charCodeAt","getNewValueTypeCode","Asset","createCode","ctor","isChildOf","_obj$node","def","equals","OptimizationPolicy","AUTO","SINGLE_INSTANCE","MULTI_INSTANCE","Prefab","_class3","_Asset","data","_initializer","optimizationPolicy","_initializer2","persistent","_initializer3","_createFunction","_instantiatedTimes","createNode","instantiate","compileCreateFunction","root","_doInstantiate","rootToRedirect","_prefab","_instantiate","OptimizationPolicyThreshold","initDefault","prefabInfo","_PrefabInfo","asset","validate","onLoaded","rootNode","utils","_applyDecoratedInitializer","_class2","serializable"],"mappings":"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"}