{"version":3,"file":"scene-D5fG1En6.js","sources":["../../../cocos/asset/assets/asset-enum.ts","../../../cocos/rendering/pipeline-funcs.ts","../../../cocos/asset/asset-manager/utilities.ts","../../../cocos/rendering/instanced-buffer.ts","../../../cocos/asset/assets/image-asset.ts","../../../cocos/asset/assets/texture-base.ts","../../../cocos/misc/missing-script.ts","../../../external/deserialize/notepack_decode.ts","../../../cocos/serialization/ccon.ts","../../../cocos/serialization/deserialize-dynamic.ts","../../../cocos/serialization/compiled/builtin-value-type.ts","../../../cocos/serialization/deserialize.ts","../../../cocos/serialization/report-missing-class.ts","../../../cocos/asset/asset-manager/depend-maps.ts","../../../cocos/asset/asset-manager/deserialize.ts","../../../cocos/asset/asset-manager/depend-util.ts","../../../cocos/asset/assets/simple-texture.ts","../../../cocos/asset/assets/texture-2d.ts","../../../cocos/asset/assets/texture-cube.ts","../../../cocos/asset/asset-manager/config.ts","../../../cocos/asset/asset-manager/release-manager.ts","../../../cocos/asset/asset-manager/bundle.ts","../../../cocos/asset/asset-manager/download-dom-image.ts","../../../cocos/asset/asset-manager/download-file.ts","../../../cocos/asset/asset-manager/download-script.ts","../../../cocos/asset/asset-manager/downloader.ts","../../../cocos/asset/assets/json-asset.ts","../../../cocos/asset/assets/text-asset.ts","../../../cocos/asset/assets/buffer-asset.ts","../../../cocos/asset/asset-manager/factory.ts","../../../cocos/asset/asset-manager/bin-package-unpack.ts","../../../cocos/asset/asset-manager/pack-manager.ts","../../../cocos/asset/asset-manager/fetch.ts","../../../cocos/asset/asset-manager/plist-parser.ts","../../../cocos/asset/asset-manager/parser.ts","../../../cocos/asset/asset-manager/load.ts","../../../cocos/asset/asset-manager/preprocess.ts","../../../cocos/asset/asset-manager/request-item.ts","../../../cocos/asset/asset-manager/url-transformer.ts","../../../cocos/asset/asset-manager/asset-manager.ts","../../../cocos/asset/asset-manager/cache-manager.ts","../../../cocos/asset/asset-manager/builtin-res-mgr.ts","../../../cocos/rendering/pass-phase.ts","../../../cocos/render-scene/core/pass-utils.ts","../../../cocos/render-scene/core/program-utils.ts","../../../cocos/render-scene/core/program-lib.ts","../../../cocos/render-scene/core/pass.ts","../../../cocos/asset/assets/effect-asset.ts","../../../cocos/asset/assets/material.ts","../../../cocos/render-scene/scene/shadows.ts","../../../cocos/rendering/pipeline-scene-data-utils.ts","../../../cocos/render-scene/scene/ambient.ts","../../../cocos/render-scene/core/pass-instance.ts","../../../cocos/render-scene/scene/skybox.ts","../../../cocos/render-scene/core/material-instance.ts","../../../cocos/render-scene/scene/fog.ts","../../../cocos/scene-graph/node-enum.ts","../../../cocos/render-scene/scene/post-settings.ts","../../../cocos/scene-graph/node-ui-properties.ts","../../../cocos/scene-graph/node-dev.ts","../../../cocos/scene-graph/node-event-processor.ts","../../../cocos/2d/framework/ui-skew-utils.ts","../../../cocos/scene-graph/node.ts","../../../cocos/scene-graph/scene-globals.ts","../../../cocos/scene-graph/prefab/prefab-info.ts","../../../cocos/scene-graph/prefab/utils.ts","../../../cocos/scene-graph/scene.ts"],"sourcesContent":["/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Address, Filter, Format } from '../../gfx';\r\n\r\n// define a specified number for the pixel format which gfx do not have a standard definition.\r\nenum CustomPixelFormat {\r\n    VALUE = 1024,\r\n}\r\n\r\n/**\r\n * @en\r\n * The texture pixel format, default value is RGBA8888,<br>\r\n * you should note that textures loaded by normal image files (png, jpg) can only support RGBA8888 format,<br>\r\n * other formats are supported by compressed file types or raw data.\r\n * @zh\r\n * 纹理像素格式，默认值为RGBA8888，<br>\r\n * 你应该注意到普通图像文件（png，jpg）加载的纹理只能支持RGBA8888格式，<br>\r\n * 压缩文件类型或原始数据支持其他格式。\r\n */\r\nexport enum PixelFormat {\r\n    /**\r\n     * @en\r\n     * 16-bit pixel format containing red, green and blue channels\r\n     * @zh\r\n     * 包含 RGB 通道的 16 位纹理。\r\n     */\r\n    RGB565 = Format.R5G6B5,\r\n    /**\r\n     * @en\r\n     * 16-bit pixel format containing red, green, blue channels with 5 bits per channel and one bit alpha channel: RGB5A1\r\n     * @zh\r\n     * 包含 RGB（分别占 5 bits）和 1 bit 的 alpha 通道的 16 位纹理：RGB5A1。\r\n     */\r\n    RGB5A1 = Format.RGB5A1,\r\n    /**\r\n     * @en\r\n     * 16-bit pixel format containing red, green, blue and alpha channels: RGBA4444\r\n     * @zh\r\n     * 包含 RGBA 通道的 16 位纹理：RGBA4444。\r\n     */\r\n    RGBA4444 = Format.RGBA4,\r\n    /**\r\n     * @en\r\n     * 24-bit pixel format containing red, green and blue channels: RGB888\r\n     * @zh\r\n     * 包含 RGB 通道的 24 位纹理：RGB888。\r\n     */\r\n    RGB888 = Format.RGB8,\r\n    /**\r\n     * @en\r\n     * 32-bit float pixel format containing red, green and blue channels: RGBA32F\r\n     * @zh\r\n     * 包含 RGB 通道的 32 位浮点数像素格式：RGBA32F。\r\n     */\r\n    RGB32F = Format.RGB32F,\r\n    /**\r\n     * @en\r\n     * 32-bit pixel format containing red, green, blue and alpha channels: RGBA8888\r\n     * @zh\r\n     * 包含 RGBA 四通道的 32 位整形像素格式：RGBA8888。\r\n     */\r\n    RGBA8888 = Format.RGBA8,\r\n    /**\r\n     * @en\r\n     * 32-bit pixel format containing blue, green, red, and alpha channels: BGRA8888\r\n     * @zh\r\n     * 包含 BGRA 四通道的 32 位整形像素格式：BGRA8888。\r\n     */\r\n    BGRA8888 = Format.BGRA8,\r\n    /**\r\n     * @en\r\n     * 32-bit float pixel format containing red, green, blue and alpha channels: RGBA32F\r\n     * @zh\r\n     * 32位浮点数像素格式：RGBA32F。\r\n     */\r\n    RGBA32F = Format.RGBA32F,\r\n    /**\r\n     * @en\r\n     * 8-bit pixel format used as masks\r\n     * @zh\r\n     * 用作蒙版的8位纹理。\r\n     */\r\n    A8 = Format.A8,\r\n    /**\r\n     * @en\r\n     * 8-bit intensity pixel format\r\n     * @zh\r\n     * 8位强度纹理。\r\n     */\r\n    I8 = Format.L8,\r\n    /**\r\n     * @en\r\n     * 16-bit pixel format used as masks\r\n     * @zh\r\n     * 用作蒙版的16位纹理。\r\n     */\r\n    AI8 = Format.LA8,\r\n    /**\r\n     * @en A pixel format containing red, green, and blue channels that is PVR 2bpp compressed.\r\n     * @zh 包含 RGB 通道的 PVR 2BPP 压缩纹理格式\r\n     */\r\n    RGB_PVRTC_2BPPV1 = Format.PVRTC_RGB2,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is PVR 2bpp compressed.\r\n     * @zh 包含 RGBA 通道的 PVR 2BPP 压缩纹理格式\r\n     */\r\n    RGBA_PVRTC_2BPPV1 = Format.PVRTC_RGBA2,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is PVR 2bpp compressed.\r\n     * RGB_A_PVRTC_2BPPV1 texture is a 2x height RGB_PVRTC_2BPPV1 format texture.\r\n     * It separate the origin alpha channel to the bottom half atlas, the origin rgb channel to the top half atlas.\r\n     * @zh 包含 RGBA 通道的 PVR 2BPP 压缩纹理格式\r\n     * 这种压缩纹理格式贴图的高度是普通 RGB_PVRTC_2BPPV1 贴图高度的两倍，使用上半部分作为原始 RGB 通道数据，下半部分用来存储透明通道数据。\r\n     */\r\n    RGB_A_PVRTC_2BPPV1 = CustomPixelFormat.VALUE,\r\n    /**\r\n     * @en A pixel format containing red, green, and blue channels that is PVR 4bpp compressed.\r\n     * @zh 包含 RGB 通道的 PVR 4BPP 压缩纹理格式\r\n     */\r\n    RGB_PVRTC_4BPPV1 = Format.PVRTC_RGB4,\r\n    /**\r\n     * @en A pixel format containing red, green, blue and alpha channels that is PVR 4bpp compressed.\r\n     * @zh 包含 RGBA 通道的 PVR 4BPP 压缩纹理格式\r\n     */\r\n    RGBA_PVRTC_4BPPV1 = Format.PVRTC_RGBA4,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is PVR 4bpp compressed.\r\n     * RGB_A_PVRTC_4BPPV1 texture is a 2x height RGB_PVRTC_4BPPV1 format texture.\r\n     * It separate the origin alpha channel to the bottom half atlas, the origin rgb channel to the top half atlas.\r\n     * @zh 包含 RGBA 通道的 PVR 4BPP 压缩纹理格式\r\n    * 这种压缩纹理格式贴图的高度是普通 RGB_PVRTC_4BPPV1 贴图高度的两倍，使用上半部分作为原始 RGB 通道数据，下半部分用来存储透明通道数据。\r\n     */\r\n    RGB_A_PVRTC_4BPPV1 = CustomPixelFormat.VALUE + 1,\r\n    /**\r\n     * @en A pixel format containing red, green, and blue channels that is ETC1 compressed.\r\n     * @zh 包含 RGB 通道的 ETC1 压缩纹理格式\r\n     */\r\n    RGB_ETC1 = Format.ETC_RGB8,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ETC1 compressed.\r\n     * @zh 包含 RGBA 通道的 ETC1 压缩纹理格式\r\n     */\r\n    RGBA_ETC1 = CustomPixelFormat.VALUE + 2,\r\n    /**\r\n     * @en A pixel format containing red, green, and blue channels that is ETC2 compressed.\r\n     * @zh 包含 RGB 通道的 ETC2 压缩纹理格式\r\n     */\r\n    RGB_ETC2 = Format.ETC2_RGB8,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ETC2 compressed.\r\n     * @zh 包含 RGBA 通道的 ETC2 压缩纹理格式\r\n     */\r\n    RGBA_ETC2 = Format.ETC2_RGBA8,\r\n\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 4x4 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 4x4\r\n     */\r\n    RGBA_ASTC_4x4 = Format.ASTC_RGBA_4X4,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 5x4 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 5x4\r\n     */\r\n    RGBA_ASTC_5x4 = Format.ASTC_RGBA_5X4,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 5x5 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 5x5\r\n     */\r\n    RGBA_ASTC_5x5 = Format.ASTC_RGBA_5X5,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 6x5 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 6x5\r\n     */\r\n    RGBA_ASTC_6x5 = Format.ASTC_RGBA_6X5,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 6x6 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 6x6\r\n     */\r\n    RGBA_ASTC_6x6 = Format.ASTC_RGBA_6X6,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 8x5 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 8x5\r\n     */\r\n    RGBA_ASTC_8x5 = Format.ASTC_RGBA_8X5,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 8x6 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 8x6\r\n     */\r\n    RGBA_ASTC_8x6 = Format.ASTC_RGBA_8X6,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 8x8 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 8x8\r\n     */\r\n    RGBA_ASTC_8x8 = Format.ASTC_RGBA_8X8,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 10x5 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 10x5\r\n     */\r\n    RGBA_ASTC_10x5 = Format.ASTC_RGBA_10X5,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 10x6 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 10x6\r\n     */\r\n    RGBA_ASTC_10x6 = Format.ASTC_RGBA_10X6,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 10x8 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 10x8\r\n     */\r\n    RGBA_ASTC_10x8 = Format.ASTC_RGBA_10X8,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 10x10 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 10x10\r\n     */\r\n    RGBA_ASTC_10x10 = Format.ASTC_RGBA_10X10,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 12x10 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 12x10\r\n     */\r\n    RGBA_ASTC_12x10 = Format.ASTC_RGBA_12X10,\r\n    /**\r\n     * @en A pixel format containing red, green, blue, and alpha channels that is ASTC compressed with 12x12 block size.\r\n     * @zh 包含 RGBA 通道的 ASTC 压缩纹理格式，压缩分块大小为 12x12\r\n     */\r\n    RGBA_ASTC_12x12 = Format.ASTC_RGBA_12X12,\r\n}\r\n\r\n/**\r\n * @en\r\n * The texture wrap mode.\r\n * @zh\r\n * 纹理环绕方式。\r\n */\r\nexport enum WrapMode {\r\n    /**\r\n     * @en\r\n     * Specifies that the repeat warp mode will be used.\r\n     * @zh\r\n     * 指定环绕模式：重复纹理图像。\r\n     */\r\n    REPEAT = Address.WRAP,\r\n    /**\r\n     * @en\r\n     * Specifies that the clamp to edge warp mode will be used.\r\n     * @zh\r\n     * 指定环绕模式：纹理边缘拉伸效果。\r\n     */\r\n    CLAMP_TO_EDGE = Address.CLAMP,\r\n    /**\r\n     * @en\r\n     * Specifies that the mirrored repeat warp mode will be used.\r\n     * @zh\r\n     * 指定环绕模式：以镜像模式重复纹理图像。\r\n     */\r\n    MIRRORED_REPEAT = Address.MIRROR,\r\n    /**\r\n     * @en\r\n     * Specifies that the  clamp to border wrap mode will be used.\r\n     * @zh\r\n     * 指定环绕模式：超出纹理坐标部分以用户指定颜色填充。\r\n     */\r\n    CLAMP_TO_BORDER = Address.BORDER,\r\n}\r\n\r\n/**\r\n * @en\r\n * The texture filter mode\r\n * @zh\r\n * 纹理过滤模式。\r\n */\r\nexport enum TextureFilter {\r\n    NONE = Filter.NONE,\r\n    /**\r\n     * @en\r\n     * Specifies linear filtering.\r\n     * @zh\r\n     * 线性过滤模式。\r\n     */\r\n    LINEAR = Filter.LINEAR,\r\n    /**\r\n     * @en\r\n     * Specifies nearest filtering.\r\n     * @zh\r\n     * 临近过滤模式。\r\n     */\r\n    NEAREST = Filter.POINT,\r\n}\r\n\r\nexport { TextureFilter as Filter };\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { CommandBuffer, Device, Rect, RenderPass, Viewport } from '../gfx';\r\nimport { IVec4Like } from '../core';\r\nimport { PipelineStateManager } from './pipeline-state-manager';\r\nimport { isEnableEffect, SetIndex } from './define';\r\nimport { Camera, Model } from '../render-scene/scene';\r\nimport { Layers } from '../scene-graph/layers';\r\n\r\nconst profilerViewport = new Viewport();\r\nconst profilerScissor = new Rect();\r\n\r\n/**\r\n * @en Convert color in SRGB space to linear space\r\n * @zh SRGB 颜色空间转换为线性空间。\r\n * @param out Output color object\r\n * @param gamma Gamma value in SRGB space\r\n */\r\nexport function SRGBToLinear (out: IVec4Like, gamma: IVec4Like): void {\r\n    // out.x = Math.pow(gamma.x, 2.2);\r\n    // out.y = Math.pow(gamma.y, 2.2);\r\n    // out.z = Math.pow(gamma.z, 2.2);\r\n    out.x = gamma.x * gamma.x;\r\n    out.y = gamma.y * gamma.y;\r\n    out.z = gamma.z * gamma.z;\r\n}\r\n\r\n/**\r\n * @en Convert color in linear space to SRGB space\r\n * @zh 线性空间转换为 SRGB 颜色空间。\r\n * @param out Output color object\r\n * @param linear Color value in linear space\r\n */\r\nexport function LinearToSRGB (out: IVec4Like, linear: IVec4Like): void {\r\n    // out.x = Math.pow(linear.x, 0.454545);\r\n    // out.y = Math.pow(linear.y, 0.454545);\r\n    // out.z = Math.pow(linear.z, 0.454545);\r\n    out.x = Math.sqrt(linear.x);\r\n    out.y = Math.sqrt(linear.y);\r\n    out.z = Math.sqrt(linear.z);\r\n}\r\n\r\nlet profilerCamera: Camera | null = null;\r\n\r\nexport function getProfilerCamera (): Camera | null {\r\n    return profilerCamera;\r\n}\r\n\r\nexport function decideProfilerCamera (cameras: Camera[]): void {\r\n    for (let i = cameras.length - 1; i >= 0; --i) {\r\n        const camera = cameras[i];\r\n        if (camera.window.swapchain) {\r\n            profilerCamera = camera;\r\n            return;\r\n        }\r\n    }\r\n    profilerCamera = null;\r\n}\r\n\r\nexport function renderProfiler (device: Device, renderPass: RenderPass, cmdBuff: CommandBuffer, profiler: Model | null, camera: Camera): void {\r\n    if (isEnableEffect()) {\r\n        return;\r\n    }\r\n    if (!profiler || !profiler.enabled) {\r\n        return;\r\n    }\r\n\r\n    if (EDITOR && EDITOR_NOT_IN_PREVIEW) {\r\n        if (!(camera.visibility & Layers.Enum.PROFILER)) {\r\n            return;\r\n        }\r\n    } else if (camera !== profilerCamera) {\r\n        return;\r\n    }\r\n\r\n    const { inputAssembler, passes, shaders, descriptorSet } = profiler.subModels[0];\r\n    profilerViewport.width = profilerScissor.width = camera.window.width;\r\n    profilerViewport.height = profilerScissor.height = camera.window.height;\r\n    const pso = PipelineStateManager.getOrCreatePipelineState(device, passes[0], shaders[0], renderPass, inputAssembler);\r\n\r\n    cmdBuff.setViewport(profilerViewport);\r\n    cmdBuff.setScissor(profilerScissor);\r\n    cmdBuff.bindPipelineState(pso);\r\n    cmdBuff.bindDescriptorSet(SetIndex.MATERIAL, passes[0].descriptorSet);\r\n    cmdBuff.bindDescriptorSet(SetIndex.LOCAL, descriptorSet);\r\n    cmdBuff.bindInputAssembler(inputAssembler);\r\n    cmdBuff.draw(inputAssembler);\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { Asset } from '../assets/asset';\r\nimport { cclegacy, error, errorID, js, misc } from '../../core';\r\nimport Config from './config';\r\nimport { dependMap, nativeDependMap } from './depend-maps';\r\nimport dependUtil from './depend-util';\r\nimport { isScene } from './helper';\r\nimport RequestItem from './request-item';\r\nimport { assets, references } from './shared';\r\nimport Task from './task';\r\nimport type { AssetManager } from './asset-manager';\r\n\r\nlet defaultProgressCallback: ((finished: number, total: number, item: RequestItem) => void) | null = null;\r\n\r\ndeclare class WeakRef {\r\n    constructor (obj: any);\r\n}\r\n\r\nexport function setDefaultProgressCallback (onProgress: (finished: number, total: number, item: RequestItem) => void): void {\r\n    defaultProgressCallback = onProgress;\r\n}\r\n\r\nexport function clear (task: Task, clearRef: boolean): void {\r\n    for (let i = 0, l = task.input.length; i < l; i++) {\r\n        const item = task.input[i] as RequestItem;\r\n        if (clearRef) {\r\n            if (!item.isNative && item.content instanceof Asset) {\r\n                item.content.decRef(false);\r\n            }\r\n        }\r\n        item.recycle();\r\n    }\r\n    task.input = null;\r\n}\r\n\r\nexport function urlAppendTimestamp (url: string, append: boolean): string {\r\n    if (append) {\r\n        if (/\\?/.test(url)) {\r\n            return `${url}&_t=${Date.now()}`;\r\n        }\r\n\r\n        return `${url}?_t=${Date.now()}`;\r\n    }\r\n    return url;\r\n}\r\n\r\nexport type RetryFunction = (times: number, done: ((err: Error | null, data?: any) => void)) => void;\r\n\r\nexport function retry (\r\n    process: RetryFunction,\r\n    times: number,\r\n    wait: number,\r\n    onComplete: ((err: Error | null, data?: any) => void),\r\n    index = 0,\r\n): void {\r\n    process(index, (err, result): void => {\r\n        index++;\r\n        if (!err || index > times) {\r\n            if (onComplete) {\r\n                onComplete(err, result);\r\n            }\r\n        } else {\r\n            setTimeout((): void => {\r\n                retry(process, times, wait, onComplete, index);\r\n            }, wait);\r\n        }\r\n    });\r\n}\r\n\r\nexport function getDepends (\r\n    uuid: string,\r\n    data: Asset | Record<string, any>,\r\n    exclude: Record<string, any>,\r\n    depends: any[],\r\n    config: Config,\r\n): void {\r\n    try {\r\n        const info = dependUtil.parse(uuid, data);\r\n        for (let i = 0, l = info.deps.length; i < l; i++) {\r\n            const dep = info.deps[i];\r\n            if (!(dep in exclude)) {\r\n                exclude[dep] = true;\r\n                depends.push({ uuid: dep, bundle: config && config.name });\r\n            }\r\n        }\r\n        if (info.nativeDep) {\r\n            if (config) {\r\n                info.nativeDep.bundle = config.name;\r\n            }\r\n            depends.push({ ...info.nativeDep });\r\n        }\r\n    } catch (e) {\r\n        error((e as Error).message, (e as Error).stack);\r\n    }\r\n}\r\n\r\nexport function cache (id: string, asset: Asset, cacheAsset?: boolean): void {\r\n    if (!asset) { return; }\r\n    cacheAsset = cacheAsset !== undefined ? cacheAsset : cclegacy.assetManager.cacheAsset;\r\n    if (!isScene(asset) && cacheAsset && !asset.isDefault) {\r\n        assets.add(id, asset);\r\n    }\r\n}\r\n\r\nexport function setProperties (uuid: string, asset: Asset, assetsMap: Record<string, any>): boolean {\r\n    let missingAsset = false;\r\n    const depends = dependMap.get(asset);\r\n    if (depends) {\r\n        let missingAssetReporter: any = null;\r\n        for (let i = 0, l = depends.length; i < l; i++) {\r\n            const depend = depends[i];\r\n            const dependAsset = assetsMap[`${depend.uuid}@import`];\r\n            if (!dependAsset) {\r\n                if (EDITOR) {\r\n                    if (!missingAssetReporter) {\r\n                        // eslint-disable-next-line new-cap\r\n                        missingAssetReporter = new EditorExtends.MissingReporter.object(asset);\r\n                    }\r\n                    missingAssetReporter.stashByOwner(depend.owner, depend.prop, EditorExtends.serialize.asAsset(depend.uuid));\r\n                } else {\r\n                    errorID(16350, depend.uuid);\r\n                }\r\n                (cclegacy.assetManager as AssetManager).dispatchAssetMissing(asset, depend.owner, depend.prop, depend.uuid);\r\n                if (depend.type && depend.type !== Asset) {\r\n                    // eslint-disable-next-line new-cap\r\n                    const placeHolder = new depend.type();\r\n                    placeHolder.initDefault(depend.uuid);\r\n                    depend.owner[depend.prop] = placeHolder;\r\n                }\r\n                missingAsset = true;\r\n            } else {\r\n                depend.owner[depend.prop] = dependAsset.addRef();\r\n                if (EDITOR) {\r\n                    let reference = references!.get(dependAsset as string);\r\n                    if (!reference || isScene(asset)) {\r\n                        reference = [];\r\n                        references!.add(depend.uuid, reference);\r\n                    }\r\n                    reference.push([new WeakRef(asset), new WeakRef(depend.owner), depend.prop]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (missingAssetReporter) {\r\n            missingAssetReporter.reportByOwner();\r\n        }\r\n        dependMap.delete(asset);\r\n    }\r\n\r\n    if (nativeDependMap.has(asset)) {\r\n        if (assetsMap[`${uuid}@native`]) {\r\n            asset._nativeAsset = assetsMap[`${uuid}@native`];\r\n        } else {\r\n            missingAsset = true;\r\n            errorID(16351, uuid);\r\n        }\r\n        nativeDependMap.delete(asset);\r\n    }\r\n    return missingAsset;\r\n}\r\n\r\nexport function gatherAsset (task: Task): void {\r\n    const source = task.source;\r\n    if (!task.options!.__outputAsArray__ && source.length === 1) {\r\n        task.output = source[0].content;\r\n    } else {\r\n        const output: any[] = task.output = [];\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            output.push(source[i].content);\r\n        }\r\n    }\r\n}\r\n\r\ntype ForEachFunction<T> = (item: T, done: ((err?: Error | null) => void)) => void;\r\n\r\nexport function forEach<T = any> (array: T[], process: ForEachFunction<T>, onComplete: (errs: Error[]) => void): void {\r\n    let count = 0;\r\n    const errs: Error[] = [];\r\n    const length = array.length;\r\n    if (length === 0 && onComplete) {\r\n        onComplete(errs);\r\n    }\r\n    const cb = (err?: Error | null): void => {\r\n        if (err) {\r\n            errs.push(err);\r\n        }\r\n        count++;\r\n        if (count === length) {\r\n            if (onComplete) {\r\n                onComplete(errs);\r\n            }\r\n        }\r\n    };\r\n    for (let i = 0; i < length; i++) {\r\n        process(array[i], cb);\r\n    }\r\n}\r\n\r\ninterface IParameters<T> {\r\n    options: Record<string, any>;\r\n    onProgress: ((finished: number, total: number, item: RequestItem) => void) | null;\r\n    onComplete: T | null;\r\n}\r\n\r\ninterface ILoadResArgs<T> {\r\n    type: Constructor<Asset> | null;\r\n    onProgress: ((finished: number, total: number, item: RequestItem) => void) | null;\r\n    onComplete: T | null;\r\n}\r\n\r\nexport function parseParameters<T extends (\r\n...args) => void> (\r\n    options: Record<string, any> | ((finished: number, total: number, item: RequestItem) => void) | T | null | undefined,\r\n    onProgress: ((finished: number, total: number, item: RequestItem) => void) | T | null | undefined,\r\n    onComplete: T | null | undefined,\r\n): IParameters<T> {\r\n    let optionsOut: any = options;\r\n    let onProgressOut: any = onProgress;\r\n    let onCompleteOut: any = onComplete;\r\n    if (onComplete === undefined) {\r\n        const isCallback = typeof options === 'function';\r\n        if (onProgress) {\r\n            onCompleteOut = onProgress as T;\r\n            if (!isCallback) {\r\n                onProgressOut = null;\r\n            }\r\n        } else if (onProgress === undefined && isCallback) {\r\n            onCompleteOut = options as T;\r\n            optionsOut = null;\r\n            onProgressOut = null;\r\n        }\r\n        if (onProgress !== undefined && isCallback) {\r\n            onProgressOut = options as ((finished: number, total: number, item: RequestItem) => void);\r\n            optionsOut = null;\r\n        }\r\n    }\r\n\r\n    return { options: optionsOut || Object.create(null), onProgress: onProgressOut, onComplete: onCompleteOut };\r\n}\r\n\r\nexport function parseLoadResArgs<T extends (\r\n...args) => void> (\r\n    type: Constructor<Asset> | ((finished: number, total: number, item: RequestItem) => void) | T | null | undefined,\r\n    onProgress: ((finished: number, total: number, item: RequestItem) => void) | T | null | undefined,\r\n    onComplete: T | null | undefined,\r\n): ILoadResArgs<T> {\r\n    let typeOut: any = type;\r\n    let onProgressOut: any = onProgress;\r\n    let onCompleteOut: any = onComplete;\r\n    if (onComplete === undefined) {\r\n        const isValidType = js.isChildClassOf(type as Constructor<Asset>, Asset);\r\n        if (onProgress) {\r\n            onCompleteOut = onProgress as T;\r\n            if (isValidType) {\r\n                onProgressOut = null;\r\n            }\r\n        } else if (onProgress === undefined && !isValidType) {\r\n            onCompleteOut = type as T;\r\n            onProgressOut = null;\r\n            typeOut = null;\r\n        }\r\n        if (onProgress !== undefined && !isValidType) {\r\n            onProgressOut = type as ((finished: number, total: number, item: RequestItem) => void);\r\n            typeOut = null;\r\n        }\r\n    }\r\n\r\n    return { type: typeOut, onProgress: onProgressOut || defaultProgressCallback, onComplete: onCompleteOut };\r\n}\r\n\r\nexport function checkCircleReference (owner: string, uuid: string, map: Record<string, any>, checked: Record<string, boolean> = {}): boolean {\r\n    const item = map[uuid];\r\n    if (!item || checked[uuid]) {\r\n        return false;\r\n    }\r\n    checked[uuid] = true;\r\n    let result = false;\r\n    const deps = dependUtil.getDeps(uuid);\r\n    if (deps) {\r\n        for (let i = 0, l = deps.length; i < l; i++) {\r\n            const dep = deps[i];\r\n            if (dep === owner || checkCircleReference(owner, dep, map, checked)) {\r\n                result = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function asyncify (cb: ((p1?: any, p2?: any) => void) | null): (p1?: any, p2?: any) => void {\r\n    return (p1, p2): void => {\r\n        if (!cb) { return; }\r\n        const refs: Asset[] = [];\r\n        if (Array.isArray(p2)) {\r\n            p2.forEach((x): number | boolean => x instanceof Asset && refs.push(x.addRef()));\r\n        } else if (p2 instanceof Asset) {\r\n            refs.push(p2.addRef());\r\n        }\r\n        misc.callInNextTick((): void => {\r\n            refs.forEach((x): Asset => x.decRef(false));\r\n            cb(p1, p2);\r\n        });\r\n    };\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Pass } from '../render-scene';\r\nimport { SubModel } from '../render-scene/scene';\r\nimport { UNIFORM_LIGHTMAP_TEXTURE_BINDING, UNIFORM_REFLECTION_PROBE_BLEND_CUBEMAP_BINDING, UNIFORM_REFLECTION_PROBE_CUBEMAP_BINDING,\r\n    UNIFORM_REFLECTION_PROBE_TEXTURE_BINDING, ENABLE_PROBE_BLEND,\r\n    IRenderPass,\r\n    getPassPool } from './define';\r\nimport { BufferUsageBit, MemoryUsageBit, Device, Texture, InputAssembler, InputAssemblerInfo,\r\n    Attribute, Buffer, BufferInfo, CommandBuffer, Shader, DescriptorSet  } from '../gfx';\r\nimport { RecyclePool } from '../core/memop';\r\n\r\nexport function instancingCompareFn (l: InstancedBuffer, r: InstancedBuffer): number {\r\n    const ls = l.sortRender;\r\n    const rs = r.sortRender;\r\n    return (ls.hash - rs.hash) ||  (ls.shaderId - rs.shaderId);\r\n}\r\n\r\nexport interface IInstancedItem {\r\n    count: number;\r\n    capacity: number;\r\n    vb: Buffer;\r\n    data: Uint8Array;\r\n    ia: InputAssembler;\r\n    stride: number;\r\n    shader: Shader | null;\r\n    descriptorSet: DescriptorSet;\r\n    lightingMap: Texture;\r\n    reflectionProbeCubemap: Texture;\r\n    reflectionProbePlanarMap: Texture;\r\n    useReflectionProbeType: number;\r\n    reflectionProbeBlendCubemap: Texture | null;\r\n}\r\n\r\nconst INITIAL_CAPACITY = 32;\r\nconst MAX_CAPACITY = 1024;\r\n\r\nexport class InstancedBuffer {\r\n    public instances: IInstancedItem[] = [];\r\n    public declare pass: Pass;\r\n    public hasPendingModels = false;\r\n    public dynamicOffsets: number[] = [];\r\n    public sortRender: IRenderPass;\r\n    private declare _passPool: RecyclePool<IRenderPass>;\r\n    private declare _device: Device;\r\n    constructor (pass: Pass) {\r\n        this._device = pass.device;\r\n        this.pass = pass;\r\n        this._passPool = getPassPool();\r\n        // Sorting instances of the same material is meaningless;\r\n        // the primary focus here is sorting different instances\r\n        this.sortRender = this._passPool.add();\r\n    }\r\n\r\n    public destroy (): void {\r\n        this.instances.forEach((instance) => {\r\n            instance.vb.destroy();\r\n            instance.ia.destroy();\r\n        });\r\n        this._passPool.reset();\r\n        this.instances.length = 0;\r\n    }\r\n\r\n    public merge (subModel: SubModel, passIdx: number, shaderImplant: Shader | null = null): void {\r\n        const attrs = subModel.instancedAttributeBlock;\r\n        const stride = attrs.buffer.length;\r\n        if (!stride) { return; } // we assume per-instance attributes are always present\r\n        const sourceIA = subModel.inputAssembler;\r\n        const subModelDescriptorSet = subModel.descriptorSet;\r\n        const lightingMap = subModelDescriptorSet.getTexture(UNIFORM_LIGHTMAP_TEXTURE_BINDING);\r\n        const reflectionProbeCubemap = subModelDescriptorSet.getTexture(UNIFORM_REFLECTION_PROBE_CUBEMAP_BINDING);\r\n        const reflectionProbePlanarMap = subModelDescriptorSet.getTexture(UNIFORM_REFLECTION_PROBE_TEXTURE_BINDING);\r\n        const reflectionProbeBlendCubemap = ENABLE_PROBE_BLEND\r\n            ? subModelDescriptorSet.getTexture(UNIFORM_REFLECTION_PROBE_BLEND_CUBEMAP_BINDING)\r\n            : null;\r\n        const useReflectionProbeType = subModel.useReflectionProbeType;\r\n        let shader = shaderImplant;\r\n        if (!shader) {\r\n            shader = subModel.shaders[passIdx];\r\n        }\r\n        const descriptorSet = subModel.descriptorSet;\r\n        const hash = (subModel.passes[passIdx].priority as number) << 16 | (subModel.priority as number) << 8 | passIdx;\r\n\r\n        this.sortRender.hash = hash;\r\n        this.sortRender.shaderId = shader.typedID;\r\n        this.sortRender.passIdx = passIdx;\r\n        for (let i = 0; i < this.instances.length; ++i) {\r\n            const instance = this.instances[i];\r\n            if (instance.ia.indexBuffer?.objectID !== sourceIA.indexBuffer?.objectID || instance.count >= MAX_CAPACITY) { continue; }\r\n\r\n            // check same binding\r\n            if (instance.lightingMap.objectID !== lightingMap.objectID) {\r\n                continue;\r\n            }\r\n\r\n            if (instance.useReflectionProbeType !== useReflectionProbeType) {\r\n                continue;\r\n            }\r\n            if (instance.reflectionProbeCubemap.objectID !== reflectionProbeCubemap.objectID) {\r\n                continue;\r\n            }\r\n            if (instance.reflectionProbePlanarMap.objectID !== reflectionProbePlanarMap.objectID) {\r\n                continue;\r\n            }\r\n            if (ENABLE_PROBE_BLEND && instance.reflectionProbeBlendCubemap!.objectID !== reflectionProbeBlendCubemap!.objectID) {\r\n                continue;\r\n            }\r\n\r\n            if (instance.stride !== stride) {\r\n                // we allow this considering both baked and non-baked\r\n                // skinning models may be present in the same buffer\r\n                continue;\r\n            }\r\n            if (instance.count >= instance.capacity) { // resize buffers\r\n                instance.capacity <<= 1;\r\n                const newSize = instance.stride * instance.capacity;\r\n                const oldData = instance.data;\r\n                instance.data = new Uint8Array(newSize);\r\n                instance.data.set(oldData);\r\n                instance.vb.resize(newSize);\r\n            }\r\n            instance.shader = shader;\r\n            instance.descriptorSet = descriptorSet;\r\n            instance.data.set(attrs.buffer, instance.stride * instance.count++);\r\n            this.hasPendingModels = true;\r\n            return;\r\n        }\r\n\r\n        // Create a new instance\r\n        const vb = this._device.createBuffer(new BufferInfo(\r\n            BufferUsageBit.VERTEX | BufferUsageBit.TRANSFER_DST,\r\n            MemoryUsageBit.HOST | MemoryUsageBit.DEVICE,\r\n            stride * INITIAL_CAPACITY,\r\n            stride,\r\n        ));\r\n        const data = new Uint8Array(stride * INITIAL_CAPACITY);\r\n        const vertexBuffers = sourceIA.vertexBuffers.slice();\r\n        const attributes = sourceIA.attributes.slice();\r\n        const indexBuffer = sourceIA.indexBuffer;\r\n\r\n        for (let i = 0; i < attrs.attributes.length; i++) {\r\n            const attr = attrs.attributes[i];\r\n            const newAttr = new Attribute(attr.name, attr.format, attr.isNormalized, vertexBuffers.length, true);\r\n            attributes.push(newAttr);\r\n        }\r\n        data.set(attrs.buffer);\r\n\r\n        vertexBuffers.push(vb);\r\n        const iaInfo = new InputAssemblerInfo(attributes, vertexBuffers, indexBuffer);\r\n        const ia = this._device.createInputAssembler(iaInfo);\r\n        // eslint-disable-next-line max-len\r\n        this.instances.push({ count: 1, capacity: INITIAL_CAPACITY, vb, data, ia, stride, shader, descriptorSet, lightingMap, reflectionProbeCubemap, reflectionProbePlanarMap, useReflectionProbeType, reflectionProbeBlendCubemap });\r\n        this.hasPendingModels = true;\r\n    }\r\n\r\n    public uploadBuffers (cmdBuff: CommandBuffer): void {\r\n        for (let i = 0; i < this.instances.length; ++i) {\r\n            const instance = this.instances[i];\r\n            if (!instance.count) { continue; }\r\n            instance.ia.instanceCount = instance.count;\r\n            cmdBuff.updateBuffer(instance.vb, instance.data);\r\n        }\r\n    }\r\n\r\n    public clear (): void {\r\n        this.instances.forEach((instance) => {\r\n            instance.count = 0;\r\n        });\r\n        this.hasPendingModels = false;\r\n        this._passPool.reset();\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n// @ts-check\r\nimport { ccclass, override } from 'cc.decorator';\r\nimport { EDITOR, ALIPAY, XIAOMI, JSB, TEST, TAOBAO, TAOBAO_MINIGAME, WECHAT_MINI_PROGRAM, BYTEDANCE } from 'internal:constants';\r\nimport { Device, Format, FormatFeatureBit, deviceManager } from '../../gfx';\r\nimport { Asset } from './asset';\r\nimport { PixelFormat } from './asset-enum';\r\nimport { warnID, macro, sys, cclegacy, warn } from '../../core';\r\nimport { ccwindow } from '../../core/global-exports';\r\nimport { Enum } from '../../core/value-types/enum';\r\n\r\n// Compress mipmap constants\r\nconst COMPRESSED_HEADER_LENGTH = 4;\r\nconst COMPRESSED_MIPMAP_DATA_SIZE_LENGTH = 4;\r\nconst COMPRESSED_MIPMAP_LEVEL_COUNT_LENGTH = 4;\r\nconst COMPRESSED_MIPMAP_MAGIC = 0x50494d43;\r\n\r\nexport const compressType = Enum({\r\n    PVR: 0,\r\n    PKM: 1,\r\n    ASTC: 2,\r\n});\r\n\r\n// PVR constants //\r\n// https://github.com/toji/texture-tester/blob/master/js/webgl-texture-util.js#L424\r\nconst PVR_HEADER_LENGTH = 13; // The header length in 32 bit ints.\r\nconst PVR_MAGIC = 0x03525650; // 0x50565203;\r\n\r\n// Offsets into the header array.\r\nconst PVR_HEADER_MAGIC = 0;\r\nconst PVR_HEADER_FORMAT = 2;\r\nconst PVR_HEADER_HEIGHT = 6;\r\nconst PVR_HEADER_WIDTH = 7;\r\nconst PVR_HEADER_MIPMAPCOUNT = 11;\r\nconst PVR_HEADER_METADATA = 12;\r\n\r\n// ETC constants //\r\nconst ETC_PKM_HEADER_LENGTH = 16;\r\n\r\nconst ETC_PKM_FORMAT_OFFSET = 6;\r\nconst ETC_PKM_ENCODED_WIDTH_OFFSET = 8;\r\nconst ETC_PKM_ENCODED_HEIGHT_OFFSET = 10;\r\nconst ETC_PKM_WIDTH_OFFSET = 12;\r\nconst ETC_PKM_HEIGHT_OFFSET = 14;\r\n\r\nconst ETC1_RGB_NO_MIPMAPS = 0;\r\nconst ETC2_RGB_NO_MIPMAPS = 1;\r\nconst ETC2_RGBA_NO_MIPMAPS = 3;\r\n\r\n//= ==============//\r\n// ASTC constants //\r\n//= ==============//\r\n\r\n// struct astc_header\r\n// {\r\n//  uint8_t magic[4];\r\n//  uint8_t blockdim_x;\r\n//  uint8_t blockdim_y;\r\n//  uint8_t blockdim_z;\r\n//  uint8_t xsize[3]; // x-size = xsize[0] + xsize[1] + xsize[2]\r\n//  uint8_t ysize[3]; // x-size, y-size and z-size are given in texels;\r\n//  uint8_t zsize[3]; // block count is inferred\r\n// };\r\nconst ASTC_MAGIC = 0x5CA1AB13;\r\n\r\nconst ASTC_HEADER_LENGTH = 16; // The header length\r\nconst ASTC_HEADER_MAGIC = 4;\r\nconst ASTC_HEADER_BLOCKDIM = 3;\r\n\r\nconst ASTC_HEADER_SIZE_X_BEGIN = 7;\r\nconst ASTC_HEADER_SIZE_Y_BEGIN = 10;\r\nconst ASTC_HEADER_SIZE_Z_BEGIN = 13;\r\n\r\nfunction getASTCFormat (xdim, ydim): PixelFormat {\r\n    if (xdim === 4) {\r\n        return PixelFormat.RGBA_ASTC_4x4;\r\n    } if (xdim === 5) {\r\n        if (ydim === 4) {\r\n            return PixelFormat.RGBA_ASTC_5x4;\r\n        }\r\n        return PixelFormat.RGBA_ASTC_5x5;\r\n    } if (xdim === 6) {\r\n        if (ydim === 5) {\r\n            return PixelFormat.RGBA_ASTC_6x5;\r\n        }\r\n        return PixelFormat.RGBA_ASTC_6x6;\r\n    } if (xdim === 8) {\r\n        if (ydim === 5) {\r\n            return PixelFormat.RGBA_ASTC_8x5;\r\n        } if (ydim === 6) {\r\n            return PixelFormat.RGBA_ASTC_8x6;\r\n        }\r\n        return PixelFormat.RGBA_ASTC_8x8;\r\n    } if (xdim === 10) {\r\n        if (ydim === 5) {\r\n            return PixelFormat.RGBA_ASTC_10x5;\r\n        } if (ydim === 6) {\r\n            return PixelFormat.RGBA_ASTC_10x6;\r\n        } if (ydim === 8) {\r\n            return PixelFormat.RGBA_ASTC_10x8;\r\n        }\r\n        return PixelFormat.RGBA_ASTC_10x10;\r\n    }\r\n    if (ydim === 10) {\r\n        return PixelFormat.RGBA_ASTC_12x10;\r\n    }\r\n    return PixelFormat.RGBA_ASTC_12x12;\r\n}\r\n\r\nfunction readBEUint16 (header, offset: number): number {\r\n    return (header[offset] << 8) | header[offset + 1];\r\n}\r\n\r\n/**\r\n * @en Image source in memory\r\n * @zh 内存图像源。\r\n */\r\nexport interface IMemoryImageSource {\r\n    _data: ArrayBufferView | null;\r\n    _compressed: boolean;\r\n    width: number;\r\n    height: number;\r\n    format: number;\r\n    mipmapLevelDataSize?: number[];\r\n}\r\n\r\n/**\r\n * @en The image source, can be HTML canvas, image type or image in memory data\r\n * @zh 图像资源的原始图像源。可以来源于 HTML 元素也可以来源于内存。\r\n */\r\nexport type ImageSource = HTMLCanvasElement | HTMLImageElement | IMemoryImageSource | ImageBitmap;\r\n\r\nfunction isImageBitmap (imageSource: any): imageSource is ImageBitmap {\r\n    return !!(sys.hasFeature(sys.Feature.IMAGE_BITMAP) && imageSource instanceof ImageBitmap);\r\n}\r\n\r\nfunction fetchImageSource (imageSource: ImageSource): HTMLCanvasElement | HTMLImageElement | ImageBitmap | ArrayBufferView | null {\r\n    return '_data' in imageSource ? imageSource._data : imageSource;\r\n}\r\n\r\n// 返回该图像源是否是平台提供的图像对象。\r\nfunction isNativeImage (imageSource: ImageSource): imageSource is (HTMLImageElement | HTMLCanvasElement | ImageBitmap) {\r\n    if (ALIPAY || TAOBAO || TAOBAO_MINIGAME || XIAOMI || WECHAT_MINI_PROGRAM || BYTEDANCE) {\r\n        // We're unable to grab the constructors of Alipay native image or canvas object.\r\n        return !('_data' in imageSource);\r\n    }\r\n    if (JSB && (imageSource as IMemoryImageSource)._compressed === true) {\r\n        return false;\r\n    }\r\n\r\n    return imageSource instanceof HTMLImageElement || imageSource instanceof HTMLCanvasElement || isImageBitmap(imageSource);\r\n}\r\n\r\n/**\r\n * @en Image Asset. The image resource stores the raw data of the image and you can use this resource to create any Texture resource.\r\n * @zh 图像资源。图像资源存储了图像的原始数据，你可以使用此资源来创建任意 [[TextureBase]] 资源。\r\n */\r\n@ccclass('cc.ImageAsset')\r\nexport class ImageAsset extends Asset {\r\n    /**\r\n     * mergeCompressedTextureMips\r\n     * ************* hearder ***************\r\n     * COMPRESSED_MAGIC: 0x50494d43        *\r\n     * ************* document **************\r\n     * chunkCount: n                       *\r\n     * chunkDataSize[0]: xxx               *\r\n     * ...                                 *\r\n     * chunkDataSize[n - 1]: xxx           *\r\n     * ************* chunks ****************\r\n     *    ******************************   *\r\n     *    *                            *   *\r\n     *    *          chunk[0]          *   *\r\n     *    *                            *   *\r\n     *    ******************************   *\r\n     * ...\r\n     *    ******************************   *\r\n     *    *                            *   *\r\n     *    *          chunk[n - 1]      *   *\r\n     *    *                            *   *\r\n     *    ******************************   *\r\n     * *************************************\r\n     * @param files @zh 压缩纹理数组。 @en Compressed Texture Arrays.\r\n     * @returns out @zh 合并后的压缩纹理数据。 @en Merged compressed texture data.\r\n     */\r\n    public static mergeCompressedTextureMips (files: ArrayBuffer[] | ArrayBufferView[]): Uint8Array {\r\n        let out = new Uint8Array(0);\r\n\r\n        let err: Error | null = null;\r\n        try {\r\n            // Create compressed file\r\n            // file header length\r\n            const fileHeaderLength = COMPRESSED_HEADER_LENGTH + COMPRESSED_MIPMAP_LEVEL_COUNT_LENGTH + files.length * COMPRESSED_MIPMAP_DATA_SIZE_LENGTH;\r\n            let fileLength = 0;\r\n            for (const file of files) {\r\n                fileLength += file.byteLength;\r\n            }\r\n            fileLength += fileHeaderLength;   // add file header length\r\n            out = new Uint8Array(fileLength);\r\n            const outView = new DataView(\r\n                out.buffer,\r\n                out.byteOffset,\r\n                out.byteLength,\r\n            );\r\n\r\n            // Append compresssed header\r\n            outView.setUint32(0, COMPRESSED_MIPMAP_MAGIC, true); // add magic\r\n            outView.setUint32(COMPRESSED_HEADER_LENGTH, files.length, true); // add count number\r\n            let dataOffset = fileHeaderLength;\r\n            for (let i = 0; i < files.length; i++) {\r\n                const file = files[i];\r\n                outView.setUint32(\r\n                    COMPRESSED_HEADER_LENGTH + COMPRESSED_MIPMAP_LEVEL_COUNT_LENGTH + i * COMPRESSED_MIPMAP_DATA_SIZE_LENGTH,\r\n                    file.byteLength,\r\n                    true,\r\n                ); //add file data size\r\n\r\n                // Append compresssed file\r\n                if (file instanceof ArrayBuffer) {\r\n                    const srcArray = new Uint8Array(file);\r\n                    out.set(srcArray, dataOffset);\r\n                } else {\r\n                    const srcArray = new Uint8Array(file.buffer, file.byteOffset, file.byteLength);\r\n                    out.set(srcArray, dataOffset);\r\n                }\r\n                dataOffset += file.byteLength;\r\n            }\r\n        } catch (e) {\r\n            err = e as Error;\r\n            warn(err);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @param file 解析压缩纹理。\r\n     * @param type 压缩纹理类型。\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public static parseCompressedTextures (file: ArrayBuffer | ArrayBufferView, type: number): IMemoryImageSource {\r\n        const out: IMemoryImageSource = {\r\n            _data: new Uint8Array(0),\r\n            _compressed: true,\r\n            width: 0,\r\n            height: 0,\r\n            format: 0,\r\n            mipmapLevelDataSize: [],\r\n        };\r\n\r\n        const buffer = file instanceof ArrayBuffer ? file : file.buffer;\r\n        const bufferView = new DataView(buffer);\r\n        // Get a view of the arrayBuffer that represents compress header.\r\n        const magicNumber = bufferView.getUint32(0, true);\r\n        // Do some sanity checks to make sure this is a valid compress file.\r\n        if (magicNumber === COMPRESSED_MIPMAP_MAGIC) {\r\n            // Get a view of the arrayBuffer that represents compress document.\r\n            const mipmapLevelNumber = bufferView.getUint32(COMPRESSED_HEADER_LENGTH, true);\r\n            const mipmapLevelDataSize = bufferView.getUint32(COMPRESSED_HEADER_LENGTH + COMPRESSED_MIPMAP_LEVEL_COUNT_LENGTH, true);\r\n            const fileHeaderByteLength = COMPRESSED_HEADER_LENGTH + COMPRESSED_MIPMAP_LEVEL_COUNT_LENGTH\r\n                + mipmapLevelNumber * COMPRESSED_MIPMAP_DATA_SIZE_LENGTH;\r\n\r\n            // Get a view of the arrayBuffer that represents compress chunks.\r\n            ImageAsset.parseCompressedTexture(file, 0, fileHeaderByteLength, mipmapLevelDataSize, type, out);\r\n            let beginOffset = fileHeaderByteLength + mipmapLevelDataSize;\r\n\r\n            for (let i = 1; i < mipmapLevelNumber; i++) {\r\n                const endOffset = bufferView.getUint32(COMPRESSED_HEADER_LENGTH + COMPRESSED_MIPMAP_LEVEL_COUNT_LENGTH\r\n                    +  i * COMPRESSED_MIPMAP_DATA_SIZE_LENGTH, true);\r\n                ImageAsset.parseCompressedTexture(file, i, beginOffset, endOffset, type, out);\r\n                beginOffset += endOffset;\r\n            }\r\n        } else {\r\n            ImageAsset.parseCompressedTexture(file, 0, 0, 0, type, out);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @zh 解析压缩纹理。\r\n     * @param file @zh 压缩纹理原始数据。\r\n     * @param levelIndex @zh 当前 mipmap 层级。\r\n     * @param beginOffset @zh 压缩纹理开始时的偏移。\r\n     * @param endOffset @zh 压缩纹理结束时的偏移。\r\n     * @param type @zh 压缩纹理类型。\r\n     * @param out @zh 压缩纹理输出。\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public static parseCompressedTexture (\r\n        file: ArrayBuffer | ArrayBufferView,\r\n        levelIndex: number,\r\n        beginOffset: number,\r\n        endOffset: number,\r\n        type: number,\r\n        out: IMemoryImageSource,\r\n    ): void {\r\n        switch (type) {\r\n        case compressType.PVR:\r\n            ImageAsset.parsePVRTexture(file, levelIndex, beginOffset, endOffset, out);\r\n            break;\r\n        case compressType.PKM:\r\n            ImageAsset.parsePKMTexture(file, levelIndex, beginOffset, endOffset, out);\r\n            break;\r\n        case compressType.ASTC:\r\n            ImageAsset.parseASTCTexture(file, levelIndex, beginOffset, endOffset, out);\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh 解析 PVR 格式的压缩纹理。\r\n     * @param file @zh 压缩纹理原始数据。\r\n     * @param levelIndex @zh 当前 mipmap 层级。\r\n     * @param beginOffset @zh 压缩纹理开始时的偏移。\r\n     * @param endOffset @zh 压缩纹理结束时的偏移。\r\n     * @param out @zh 压缩纹理输出。\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public static parsePVRTexture (\r\n        file: ArrayBuffer | ArrayBufferView,\r\n        levelIndex: number,\r\n        beginOffset: number,\r\n        endOffset: number,\r\n        out: IMemoryImageSource,\r\n    ): void {\r\n        const buffer = file instanceof ArrayBuffer ? file : file.buffer;\r\n        // Get a view of the arrayBuffer that represents the DDS header.\r\n        const header = new Int32Array(buffer, beginOffset, PVR_HEADER_LENGTH);\r\n\r\n        // Do some sanity checks to make sure this is a valid DDS file.\r\n        if (header[PVR_HEADER_MAGIC] === PVR_MAGIC) {\r\n            // Gather other basic metrics and a view of the raw the DXT data.\r\n            const byteOffset = beginOffset + header[PVR_HEADER_METADATA] + 52;\r\n            const length = endOffset - header.byteLength;\r\n            if (endOffset > 0) {\r\n                const srcView = new Uint8Array(buffer, byteOffset, length);\r\n                const dstView = new Uint8Array(out._data!.byteLength + srcView.byteLength);\r\n                dstView.set(out._data as Uint8Array);\r\n                dstView.set(srcView, out._data!.byteLength);\r\n                out._data  = dstView;\r\n                out.mipmapLevelDataSize![levelIndex] = length;\r\n            } else {\r\n                out._data = new Uint8Array(buffer, byteOffset);\r\n            }\r\n            out.width = levelIndex > 0 ? out.width : header[PVR_HEADER_WIDTH];\r\n            out.height = levelIndex > 0 ? out.height : header[PVR_HEADER_HEIGHT];\r\n        } else if (header[11] === 0x21525650) {\r\n            const byteOffset = beginOffset + header[0];\r\n            const length = endOffset - header.byteLength;\r\n            if (endOffset > 0) {\r\n                const srcView = new Uint8Array(buffer, byteOffset, length);\r\n                const dstView = new Uint8Array(out._data!.byteLength + srcView.byteLength);\r\n                dstView.set(out._data as Uint8Array);\r\n                dstView.set(srcView, out._data!.byteLength);\r\n                out._data  = dstView;\r\n                out.mipmapLevelDataSize![levelIndex] = length;\r\n            } else {\r\n                out._data  = new Uint8Array(buffer, byteOffset);\r\n            }\r\n            out.width = levelIndex > 0 ? out.width : header[1];\r\n            out.height = levelIndex > 0 ? out.height : header[2];\r\n        } else {\r\n            throw new Error('Invalid magic number in PVR header');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh 解析 PKM 格式的压缩纹理。\r\n     * @param file @zh 压缩纹理原始数据。\r\n     * @param levelIndex @zh 当前 mipmap 层级。\r\n     * @param beginOffset @zh 压缩纹理开始时的偏移。\r\n     * @param endOffset @zh 压缩纹理结束时的偏移。\r\n     * @param out @zh 压缩纹理输出。\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public static parsePKMTexture (\r\n        file: ArrayBuffer | ArrayBufferView,\r\n        levelIndex: number,\r\n        beginOffset: number,\r\n        endOffset: number,\r\n        out: IMemoryImageSource,\r\n    ): void {\r\n        const buffer = file instanceof ArrayBuffer ? file : file.buffer;\r\n        const header = new Uint8Array(buffer, beginOffset, ETC_PKM_HEADER_LENGTH);\r\n        const format = readBEUint16(header, ETC_PKM_FORMAT_OFFSET);\r\n        if (format !== ETC1_RGB_NO_MIPMAPS && format !== ETC2_RGB_NO_MIPMAPS && format !== ETC2_RGBA_NO_MIPMAPS) {\r\n            throw new Error('Invalid magic number in ETC header');\r\n        }\r\n\r\n        const byteOffset = beginOffset + ETC_PKM_HEADER_LENGTH;\r\n        const length = endOffset - ETC_PKM_HEADER_LENGTH;\r\n        if (endOffset > 0) {\r\n            const srcView = new Uint8Array(buffer, byteOffset, length);\r\n            const dstView = new Uint8Array(out._data!.byteLength + srcView.byteLength);\r\n            dstView.set(out._data as Uint8Array);\r\n            dstView.set(srcView, out._data!.byteLength);\r\n            out._data  = dstView;\r\n            out.mipmapLevelDataSize![levelIndex] = length;\r\n        } else {\r\n            out._data = new Uint8Array(buffer, byteOffset);\r\n        }\r\n        out.width = levelIndex > 0 ? out.width : readBEUint16(header, ETC_PKM_WIDTH_OFFSET);\r\n        out.height = levelIndex > 0 ? out.height : readBEUint16(header, ETC_PKM_HEIGHT_OFFSET);\r\n    }\r\n\r\n    /**\r\n     * @zh 解析 ASTC 格式的压缩纹理。\r\n     * @param file @zh 压缩纹理原始数据。\r\n     * @param levelIndex @zh 当前 mipmap 层级。\r\n     * @param beginOffset @zh 压缩纹理开始时的偏移。\r\n     * @param endOffset @zh 压缩纹理结束时的偏移。\r\n     * @param out @zh 压缩纹理输出。\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public static parseASTCTexture (\r\n        file: ArrayBuffer | ArrayBufferView,\r\n        levelIndex: number,\r\n        beginOffset: number,\r\n        endOffset: number,\r\n        out: IMemoryImageSource,\r\n    ): void {\r\n        const buffer = file instanceof ArrayBuffer ? file : file.buffer;\r\n        const header = new Uint8Array(buffer, beginOffset, ASTC_HEADER_LENGTH);\r\n\r\n        const magicval = header[0] + (header[1] << 8) + (header[2] << 16) + (header[3] << 24);\r\n        if (magicval !== ASTC_MAGIC) {\r\n            throw new Error('Invalid magic number in ASTC header');\r\n        }\r\n\r\n        const xdim = header[ASTC_HEADER_MAGIC];\r\n        const ydim = header[ASTC_HEADER_MAGIC + 1];\r\n        const zdim = header[ASTC_HEADER_MAGIC + 2];\r\n        if ((xdim < 3 || xdim > 6 || ydim < 3 || ydim > 6 || zdim < 3 || zdim > 6)\r\n                && (xdim < 4 || xdim === 7 || xdim === 9 || xdim === 11 || xdim > 12\r\n                || ydim < 4 || ydim === 7 || ydim === 9 || ydim === 11 || ydim > 12 || zdim !== 1)) {\r\n            throw new Error('Invalid block number in ASTC header');\r\n        }\r\n\r\n        const format = getASTCFormat(xdim, ydim);\r\n        const byteOffset = beginOffset + ASTC_HEADER_LENGTH;\r\n        const length = endOffset - ASTC_HEADER_LENGTH;\r\n        if (endOffset > 0) {\r\n            const srcView = new Uint8Array(buffer, byteOffset, length);\r\n            const dstView = new Uint8Array(out._data!.byteLength + srcView.byteLength);\r\n            dstView.set(out._data as Uint8Array);\r\n            dstView.set(srcView, out._data!.byteLength);\r\n            out._data  = dstView;\r\n            out.mipmapLevelDataSize![levelIndex] = length;\r\n        } else {\r\n            out._data = new Uint8Array(buffer, byteOffset);\r\n        }\r\n        out.width = levelIndex > 0 ? out.width : header[ASTC_HEADER_SIZE_X_BEGIN] + (header[ASTC_HEADER_SIZE_X_BEGIN + 1] << 8)\r\n                + (header[ASTC_HEADER_SIZE_X_BEGIN + 2] << 16);\r\n        out.height = levelIndex > 0 ? out.height : header[ASTC_HEADER_SIZE_Y_BEGIN] + (header[ASTC_HEADER_SIZE_Y_BEGIN + 1] << 8)\r\n                + (header[ASTC_HEADER_SIZE_Y_BEGIN + 2] << 16);\r\n        out.format = format;\r\n    }\r\n\r\n    /**\r\n     * @en extract the first mipmap from a compressed image asset\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public extractMipmap0 (): ImageAsset {\r\n        if (this.mipmapLevelDataSize && this.mipmapLevelDataSize.length > 0) {\r\n            const mipmapSize = this.mipmapLevelDataSize[0];\r\n            const data = this.data as Uint8Array;\r\n\r\n            const dataView = new Uint8Array(data.buffer, 0, mipmapSize);\r\n            const mipmap = new ImageAsset({\r\n                _data: dataView,\r\n                _compressed: true,\r\n                width: this.width,\r\n                height: this.height,\r\n                format: this.format,\r\n                mipmapLevelDataSize: [],\r\n            });\r\n            mipmap._uuid = `${this._uuid}`;\r\n            return mipmap;\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en extract mipmaps from a compressed image asset\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public extractMipmaps (): ImageAsset[] {\r\n        const images: ImageAsset[] = [];\r\n        if (this.mipmapLevelDataSize && this.mipmapLevelDataSize.length > 0) {\r\n            const mipmapLevelDataSize = this.mipmapLevelDataSize;\r\n            const data: Uint8Array = this.data as Uint8Array;\r\n\r\n            let byteOffset = 0;\r\n            let height = this.height;\r\n            let width = this.width;\r\n            for (const mipmapSize of mipmapLevelDataSize) {\r\n                const dataView = new Uint8Array(data.buffer, byteOffset, mipmapSize);\r\n                const mipmap = new ImageAsset({\r\n                    _data: dataView,\r\n                    _compressed: true,\r\n                    width,\r\n                    height,\r\n                    format: this.format,\r\n                    mipmapLevelDataSize: [],\r\n                });\r\n                byteOffset += mipmapSize;\r\n                mipmap._uuid = `${this._uuid}`;\r\n                width = Math.max(width >> 1, 1);\r\n                height = Math.max(height >> 1, 1);\r\n                images.push(mipmap);\r\n            }\r\n        } else {\r\n            images.push(this);\r\n        }\r\n\r\n        return images;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @override\r\n    get _nativeAsset (): any {\r\n        // Maybe returned to pool in webgl.\r\n        return this._nativeData;\r\n    }\r\n    // TODO: Property 'format' does not exist on type 'ImageBitmap'\r\n    // set _nativeAsset (value: ImageSource) {\r\n    set _nativeAsset (value: any) {\r\n        if (!(value instanceof HTMLElement) && !isImageBitmap(value)) {\r\n            value.format = value.format || this._format;\r\n        }\r\n        this.reset(value as ImageSource);\r\n    }\r\n\r\n    /**\r\n     * @en Image data.\r\n     * @zh 此图像资源的图像数据。\r\n     */\r\n    get data (): ArrayBufferView | HTMLCanvasElement | HTMLImageElement | ImageBitmap | null {\r\n        if (isNativeImage(this._nativeData)) {\r\n            return this._nativeData;\r\n        }\r\n\r\n        return this._nativeData && this._nativeData._data;\r\n    }\r\n\r\n    /**\r\n     * @en The pixel width of the image.\r\n     * @zh 此图像资源的像素宽度。\r\n     */\r\n    get width (): number {\r\n        return this._nativeData.width || this._width;\r\n    }\r\n\r\n    /**\r\n     * @en The pixel height of the image.\r\n     * @zh 此图像资源的像素高度。\r\n     */\r\n    get height (): number {\r\n        return this._nativeData.height || this._height;\r\n    }\r\n\r\n    /**\r\n     * @en The pixel format of the image.\r\n     * @zh 此图像资源的像素格式。\r\n     */\r\n    get format (): PixelFormat {\r\n        return this._format;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the image is in compressed texture format.\r\n     * @zh 此图像资源是否为压缩像素格式。\r\n     */\r\n    get isCompressed (): boolean {\r\n        return (this._format >= PixelFormat.RGB_ETC1 && this._format <= PixelFormat.RGBA_ASTC_12x12)\r\n        || (this._format >= PixelFormat.RGB_A_PVRTC_2BPPV1 && this._format <= PixelFormat.RGBA_ETC1);\r\n    }\r\n\r\n    /**\r\n     * @en If this image resource is a mipmap, get the data size of each layer\r\n     * @zh 此图像资源是 mipmap 时，获取每层数据大小。\r\n     * @engineInternal\r\n     */\r\n    get mipmapLevelDataSize (): number[] | undefined {\r\n        return (this._nativeData as IMemoryImageSource).mipmapLevelDataSize;\r\n    }\r\n\r\n    /**\r\n     * @en The original source image URL, it could be empty.\r\n     * @zh 此图像资源的原始图像源的 URL。当原始图像元不是 HTML 文件时可能为空。\r\n     * @deprecated Please use [[nativeUrl]]\r\n     */\r\n    get url (): string {\r\n        return this.nativeUrl;\r\n    }\r\n\r\n    private static extnames = ['.png', '.jpg', '.jpeg', '.bmp', '.webp', '.pvr', '.pkm', '.astc'];\r\n\r\n    private _nativeData: ImageSource;\r\n\r\n    //NOTE: _exportedExts is used by editor, should not rename or mangle it.\r\n    private _exportedExts: string[] | null | undefined = undefined;\r\n\r\n    private _format: PixelFormat = PixelFormat.RGBA8888;\r\n\r\n    private _width = 0;\r\n\r\n    private _height = 0;\r\n\r\n    constructor (nativeAsset?: ImageSource) {\r\n        super();\r\n\r\n        this._nativeData = {\r\n            _data: null,\r\n            width: 0,\r\n            height: 0,\r\n            format: 0,\r\n            _compressed: false,\r\n            mipmapLevelDataSize: [],\r\n        };\r\n\r\n        if (EDITOR) {\r\n            this._exportedExts = null;\r\n        }\r\n\r\n        if (nativeAsset !== undefined) {\r\n            this.reset(nativeAsset);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Reset the source of the image asset.\r\n     * @zh 重置此图像资源使用的原始图像源。\r\n     * @param data @en The new source. @zh 新的图片数据源。\r\n     */\r\n    public reset (data: ImageSource): void {\r\n        if (isImageBitmap(data)) {\r\n            this._nativeData = data;\r\n        } else if (!(data instanceof HTMLElement)) {\r\n            // this._nativeData = Object.create(data);\r\n            this._nativeData = data;\r\n            this._format = data.format;\r\n        } else {\r\n            this._nativeData = data;\r\n        }\r\n    }\r\n\r\n    public destroy (): boolean {\r\n        if (this.data && this.data instanceof HTMLImageElement) {\r\n            this.data.src = '';\r\n            this._setRawAsset('');\r\n            // JSB element should destroy native data.\r\n            // TODO: Property 'destroy' does not exist on type 'HTMLImageElement'.\r\n            // maybe we need a higher level implementation called `pal/image`, we provide `destroy` interface here.\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14646\r\n            if (JSB) (this.data as any).destroy();\r\n        } else if (isImageBitmap(this.data)) {\r\n            this.data?.close();\r\n        }\r\n        return super.destroy();\r\n    }\r\n\r\n    // SERIALIZATION\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    // eslint-disable-next-line consistent-return\r\n    public _serialize (): string | {\r\n        fmt: string;\r\n        w: number;\r\n        h: number;\r\n    } | undefined {\r\n        if (EDITOR || TEST) {\r\n            let targetExtensions = this._exportedExts;\r\n            if (!targetExtensions && this._native) {\r\n                targetExtensions = [this._native];\r\n            }\r\n\r\n            if (!targetExtensions) {\r\n                return '';\r\n            }\r\n\r\n            const extensionIndices: string[] = [];\r\n            for (const targetExtension of targetExtensions) {\r\n                const extensionFormat = targetExtension.split('@');\r\n                const i = ImageAsset.extnames.indexOf(extensionFormat[0]);\r\n                let exportedExtensionID = i < 0 ? targetExtension : `${i}`;\r\n                if (extensionFormat[1]) {\r\n                    exportedExtensionID += `@${extensionFormat[1]}`;\r\n                }\r\n                extensionIndices.push(exportedExtensionID);\r\n            }\r\n            return { fmt: extensionIndices.join('_'), w: this.width, h: this.height };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _deserialize (data: any): void {\r\n        let fmtStr = '';\r\n        if (typeof data === 'string') {\r\n            fmtStr = data;\r\n        } else {\r\n            this._width = data.w;\r\n            this._height = data.h;\r\n            fmtStr = data.fmt;\r\n        }\r\n        const device = _getGlobalDevice();\r\n        const extensionIDs = fmtStr.split('_');\r\n\r\n        let preferedExtensionIndex = Number.MAX_VALUE;\r\n        let format = this._format;\r\n        let ext = '';\r\n        const SupportTextureFormats = macro.SUPPORT_TEXTURE_FORMATS;\r\n        for (const extensionID of extensionIDs) {\r\n            const extFormat = extensionID.split('@');\r\n\r\n            const i = parseInt(extFormat[0], undefined);\r\n            const tmpExt = ImageAsset.extnames[i] || extFormat[0];\r\n\r\n            const index = SupportTextureFormats.indexOf(tmpExt);\r\n            if (index !== -1 && index < preferedExtensionIndex) {\r\n                const fmt = extFormat[1] ? parseInt(extFormat[1]) : this._format;\r\n                // check whether or not support compressed texture\r\n                if (tmpExt === '.astc' && (!device || !(device.getFormatFeatures(Format.ASTC_RGBA_4X4) & FormatFeatureBit.SAMPLED_TEXTURE))) {\r\n                    continue;\r\n                } else if (tmpExt === '.pvr' && (!device || !(device.getFormatFeatures(Format.PVRTC_RGBA4) & FormatFeatureBit.SAMPLED_TEXTURE))) {\r\n                    continue;\r\n                } else if ((fmt === PixelFormat.RGB_ETC1 || fmt === PixelFormat.RGBA_ETC1)\r\n                    && (!device || !(device.getFormatFeatures(Format.ETC_RGB8) & FormatFeatureBit.SAMPLED_TEXTURE))) {\r\n                    continue;\r\n                } else if ((fmt === PixelFormat.RGB_ETC2 || fmt === PixelFormat.RGBA_ETC2)\r\n                    && (!device || !(device.getFormatFeatures(Format.ETC2_RGB8) & FormatFeatureBit.SAMPLED_TEXTURE))) {\r\n                    continue;\r\n                } else if (tmpExt === '.webp' && !sys.hasFeature(sys.Feature.WEBP)) {\r\n                    continue;\r\n                }\r\n                preferedExtensionIndex = index;\r\n                ext = tmpExt;\r\n                format = fmt;\r\n            }\r\n        }\r\n\r\n        if (ext) {\r\n            this._setRawAsset(ext);\r\n            this._format = format;\r\n        } else {\r\n            warnID(3121);\r\n        }\r\n    }\r\n\r\n    private static _sharedPlaceHolderCanvas: HTMLCanvasElement | null = null;\r\n\r\n    public initDefault (uuid?: string): void {\r\n        super.initDefault(uuid);\r\n        if (!ImageAsset._sharedPlaceHolderCanvas) {\r\n            const canvas = ccwindow.document.createElement('canvas');\r\n            const context = canvas.getContext('2d')!;\r\n            const l = canvas.width = canvas.height = 2;\r\n            context.fillStyle = '#ff00ff';\r\n            context.fillRect(0, 0, l, l);\r\n            this.reset(canvas);\r\n            ImageAsset._sharedPlaceHolderCanvas = canvas;\r\n        } else {\r\n            this.reset(ImageAsset._sharedPlaceHolderCanvas);\r\n        }\r\n    }\r\n\r\n    public validate (): boolean {\r\n        return !!this.data;\r\n    }\r\n}\r\n\r\nfunction _getGlobalDevice (): Device | null {\r\n    return deviceManager.gfxDevice;\r\n}\r\ncclegacy.ImageAsset = ImageAsset;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { Asset } from './asset';\r\nimport { TextureFilter, PixelFormat, WrapMode } from './asset-enum';\r\nimport { Sampler, Texture, Device, Format, SamplerInfo, Address, Filter as GFXFilter, deviceManager } from '../../gfx';\r\nimport { errorID, murmurhash2_32_gc, ccenum, cclegacy, js } from '../../core';\r\nimport type { Batcher2D } from '../../2d/renderer/batcher-2d';\r\n\r\nccenum(Format);\r\n\r\nconst idGenerator = new js.IDGenerator('Tex');\r\n/**\r\n * @en The base texture class, it defines features shared by all textures.\r\n * @zh 贴图资源基类。它定义了所有贴图共用的概念。\r\n */\r\n@ccclass('cc.TextureBase')\r\nexport class TextureBase extends Asset {\r\n    /**\r\n     * @en Whether the pixel data is compressed.\r\n     * @zh 此贴图是否为压缩的像素格式。\r\n     */\r\n    public get isCompressed (): boolean {\r\n        return (this._format >= PixelFormat.RGB_ETC1 && this._format <= PixelFormat.RGBA_ASTC_12x12)\r\n        || (this._format >= PixelFormat.RGB_A_PVRTC_2BPPV1 && this._format <= PixelFormat.RGBA_ETC1);\r\n    }\r\n\r\n    /**\r\n     * @en Whether it is a compressed alpha channel texture\r\n     * @zh 是否为压缩的透明通道贴图\r\n     */\r\n    public get isAlphaAtlas (): boolean {\r\n        return (this._format === PixelFormat.RGBA_ETC1 || this._format === PixelFormat.RGB_A_PVRTC_4BPPV1 || this._format === PixelFormat.RGB_A_PVRTC_2BPPV1);\r\n    }\r\n\r\n    /**\r\n     * @en Pixel width of the texture.\r\n     * @zh 此贴图的像素宽度。\r\n     */\r\n    public get width (): number {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * @en Pixel height of the texture.\r\n     * @zh 此贴图的像素高度。\r\n     */\r\n    public get height (): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * @en The pixel format enum.\r\n     * @zh 像素格式枚举类型。\r\n     */\r\n    public static PixelFormat = PixelFormat;\r\n\r\n    /**\r\n     * @en The wrap mode enum.\r\n     * @zh 环绕模式枚举类型。\r\n     */\r\n    public static WrapMode = WrapMode;\r\n\r\n    /**\r\n     * @en The texture filter mode enum.\r\n     * @zh 纹理过滤模式枚举类型。\r\n     */\r\n    public static Filter = TextureFilter;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _format = PixelFormat.RGBA8888;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _minFilter = TextureFilter.LINEAR;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _magFilter = TextureFilter.LINEAR;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _mipFilter = TextureFilter.NONE;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _wrapS = WrapMode.REPEAT;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _wrapT = WrapMode.REPEAT;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _wrapR = WrapMode.REPEAT;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @serializable\r\n    protected _anisotropy = 0;\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _width = 1;\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _height = 1;\r\n\r\n    private declare _id: string;\r\n    private _samplerInfo = new SamplerInfo();\r\n    private _gfxSampler: Sampler | null = null;\r\n    private _gfxDevice: Device | null = null;\r\n\r\n    private _textureHash = 0;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n\r\n        // Id for generate hash in material\r\n        this._id = idGenerator.getNewId();\r\n        this._gfxDevice = this._getGFXDevice();\r\n        this._textureHash = murmurhash2_32_gc(this._id, 666);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the id of the texture.\r\n     * @zh 获取标识符。\r\n     * @returns @en The id of this texture. @zh 此贴图的 id。\r\n     */\r\n    public getId (): string {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the pixel format.\r\n     * @zh 获取像素格式。\r\n     * @returns @en The pixel format. @zh 像素格式。\r\n     */\r\n    public getPixelFormat (): PixelFormat {\r\n        return this._format;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the anisotropy.\r\n     * @zh 获取各向异性。\r\n     * @returns @en The anisotropy. @zh 各项异性值。\r\n     */\r\n    public getAnisotropy (): number {\r\n        return this._anisotropy;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the wrap mode of the texture.\r\n     * Be noted, if the size of the texture is not power of two, only [[WrapMode.CLAMP_TO_EDGE]] is allowed.\r\n     * @zh 设置此贴图的缠绕模式。\r\n     * 注意，若贴图尺寸不是 2 的整数幂，缠绕模式仅允许 [[WrapMode.CLAMP_TO_EDGE]]。\r\n     * @param wrapS @en S(U) coordinate wrap mode. @zh S(U) 坐标系缠绕模式.\r\n     * @param wrapT @en T(V) coordinate wrap mode. @zh T(V) 坐标系缠绕模式.\r\n     * @param wrapR @en R(W) coordinate wrap mode. @zh R(W) 坐标系缠绕模式.\r\n     */\r\n    public setWrapMode (wrapS: WrapMode, wrapT: WrapMode, wrapR?: WrapMode): void {\r\n        if (wrapR === undefined) wrapR = wrapS; // wrap modes should be as consistent as possible for performance\r\n\r\n        this._wrapS = wrapS;\r\n        this._samplerInfo.addressU = wrapS as unknown as Address;\r\n        this._wrapT = wrapT;\r\n        this._samplerInfo.addressV = wrapT as unknown as Address;\r\n        this._wrapR = wrapR;\r\n        this._samplerInfo.addressW = wrapR as unknown as Address;\r\n\r\n        if (this._gfxDevice) {\r\n            this._gfxSampler = this._gfxDevice.getSampler(this._samplerInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Sets the texture's filter mode.\r\n     * @zh 设置此贴图的过滤算法。\r\n     * @param minFilter @en Filter mode for scale down. @zh 贴图缩小时使用的过滤模式。\r\n     * @param magFilter @en Filter mode for scale up. @zh 贴图放大时使用的过滤模式。\r\n     */\r\n    public setFilters (minFilter: TextureFilter, magFilter: TextureFilter): void {\r\n        this._minFilter = minFilter;\r\n        this._samplerInfo.minFilter = minFilter as unknown as GFXFilter;\r\n        this._magFilter = magFilter;\r\n        this._samplerInfo.magFilter = magFilter as unknown as GFXFilter;\r\n\r\n        if (this._gfxDevice) {\r\n            this._gfxSampler = this._gfxDevice.getSampler(this._samplerInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Sets the texture's mip filter mode.\r\n     * @zh 设置此贴图的多层 mip 过滤算法。\r\n     * @param mipFilter @en Filter mode for multiple mip level. @zh 多层 mip 过滤模式。\r\n     */\r\n    public setMipFilter (mipFilter: TextureFilter): void {\r\n        this._mipFilter = mipFilter;\r\n        this._samplerInfo.mipFilter = mipFilter as unknown as GFXFilter;\r\n\r\n        if (this._gfxDevice) {\r\n            this._gfxSampler = this._gfxDevice.getSampler(this._samplerInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Sets the texture's anisotropy.\r\n     * @zh 设置此贴图的各向异性。\r\n     * @param anisotropy @en The anisotropy to be set. Max value is 16. @zh 待设置的各向异性数值。最大值为16\r\n     */\r\n    public setAnisotropy (anisotropy: number): void {\r\n        anisotropy = Math.min(anisotropy, 16);\r\n        this._anisotropy = anisotropy;\r\n        this._samplerInfo.maxAnisotropy = anisotropy;\r\n\r\n        if (this._gfxDevice) {\r\n            this._gfxSampler = this._gfxDevice.getSampler(this._samplerInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the current texture, clear up the related GPU resources.\r\n     * @zh 销毁此贴图，并释放占用的 GPU 资源。\r\n     */\r\n    public destroy (): boolean {\r\n        const destroyed = super.destroy();\r\n        if (destroyed && cclegacy.director.root?.batcher2D) {\r\n            (cclegacy.director.root.batcher2D as Batcher2D)._releaseDescriptorSetCache(this._textureHash);\r\n        }\r\n        return destroyed;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the texture hash.\r\n     * @zh 获取此贴图的哈希值。\r\n     */\r\n    public getHash (): number {\r\n        return this._textureHash;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the GFX Texture resource\r\n     * @zh 获取此贴图底层的 GFX 贴图对象。\r\n     */\r\n    public getGFXTexture (): Texture | null {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the internal GFX sampler hash.\r\n     * @zh 获取此贴图内部使用的 GFX 采样器信息。\r\n     * @private\r\n     */\r\n    public getSamplerInfo (): Readonly<SamplerInfo> {\r\n        return this._samplerInfo;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the sampler resource for the texture\r\n     * @zh 获取此贴图底层的 GFX 采样信息。\r\n     */\r\n    public getGFXSampler (): Sampler {\r\n        if (!this._gfxSampler) {\r\n            if (this._gfxDevice) {\r\n                this._gfxSampler = this._gfxDevice.getSampler(this._samplerInfo);\r\n            } else {\r\n                errorID(9302);\r\n            }\r\n        }\r\n        return this._gfxSampler!;\r\n    }\r\n\r\n    // SERIALIZATION\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _serialize (ctxForExporting: any): any {\r\n        if (EDITOR || TEST) {\r\n            return `${this._minFilter},${this._magFilter},${\r\n                this._wrapS},${this._wrapT},${\r\n                this._mipFilter},${this._anisotropy}`;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _deserialize (serializedData: any, handle: any): void {\r\n        const data = serializedData as string;\r\n        const fields = data.split(',');\r\n        fields.unshift('');\r\n        if (fields.length >= 5) {\r\n            // decode filters\r\n            this.setFilters(parseInt(fields[1]), parseInt(fields[2]));\r\n            // decode wraps\r\n            this.setWrapMode(parseInt(fields[3]), parseInt(fields[4]));\r\n        }\r\n        if (fields.length >= 7) {\r\n            this.setMipFilter(parseInt(fields[5]));\r\n            this.setAnisotropy(parseInt(fields[6]));\r\n        }\r\n    }\r\n\r\n    protected _getGFXDevice (): Device | null {\r\n        return deviceManager.gfxDevice;\r\n    }\r\n\r\n    protected _getGFXFormat (): Format {\r\n        return this._getGFXPixelFormat(this._format);\r\n    }\r\n\r\n    protected _setGFXFormat (format?: PixelFormat): void {\r\n        this._format = format === undefined ? PixelFormat.RGBA8888 : format;\r\n    }\r\n\r\n    protected _getGFXPixelFormat (format: PixelFormat): Format {\r\n        if (format === PixelFormat.RGBA_ETC1) {\r\n            format = PixelFormat.RGB_ETC1;\r\n        } else if (format === PixelFormat.RGB_A_PVRTC_4BPPV1) {\r\n            format = PixelFormat.RGB_PVRTC_4BPPV1;\r\n        } else if (format === PixelFormat.RGB_A_PVRTC_2BPPV1) {\r\n            format = PixelFormat.RGB_PVRTC_2BPPV1;\r\n        }\r\n        return format as unknown as Format;\r\n    }\r\n}\r\n\r\ncclegacy.TextureBase = TextureBase;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, inspector, editorOnly, serializable } from 'cc.decorator';\r\nimport { Component } from '../scene-graph/component';\r\nimport { warnID, js, cclegacy, errorID  } from '../core';\r\n\r\n/**\r\n * @en\r\n * A temp fallback to contain the original component which can not be loaded.\r\n * @zh\r\n * 包含无法加载的原始组件的临时回退。\r\n */\r\n@ccclass('cc.MissingScript')\r\n@inspector('packages://inspector/inspectors/comps/missing-script.js')\r\nexport class MissingScript extends Component {\r\n    // _scriptUuid: {\r\n    //    get: function () {\r\n    //        var id = this._$erialized.__type__;\r\n    //        if (EditorExtends.UuidUtils.isUuid(id)) {\r\n    //            return EditorExtends.UuidUtils.decompressUuid(id);\r\n    //        }\r\n    //        return '';\r\n    //    },\r\n    // },\r\n\r\n    /*\r\n     * @param {string} id\r\n     * @return {function} constructor\r\n     */\r\n    public static safeFindClass (id: string): Constructor<unknown> | undefined {\r\n        const cls = js.getClassById(id);\r\n        if (cls) {\r\n            return cls;\r\n        }\r\n        cclegacy.deserialize.reportMissingClass(id);\r\n\r\n        return undefined;\r\n    }\r\n\r\n    // the serialized data for original script object\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @serializable\r\n    @editorOnly\r\n    public _$erialized = null;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public onLoad (): void {\r\n        warnID(4600, this.node.name);\r\n    }\r\n}\r\n\r\ncclegacy._MissingScript = MissingScript;\r\n\r\n// DEBUG: Check MissingScript class for issue 9878\r\n// import { error } from '../platform/debug';\r\ntry {\r\n    const props = MissingScript.__values__;\r\n    if (props.length === 0 || props[props.length - 1] !== '_$erialized') {\r\n        errorID(16338);\r\n        errorID(16339, props.join(', '));\r\n        // props.push('_$erialized');\r\n    }\r\n} catch (e) {\r\n    errorID(16340, `${e}`);\r\n}\r\n","/*\r\n * Copyright (c) 2014 Ion Drive Software Ltd.\r\n * Copyright (c) 2025 Xiamen Yaji Software Co., Ltd.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nclass Decoder {\r\n    private _offset = 0;\r\n    get offset (): number {\r\n        return this._offset;\r\n    }\r\n\r\n    private _buffer: ArrayBuffer;\r\n    private _view: DataView;\r\n    constructor (buffer: ArrayBuffer | Uint8Array) {\r\n        if (buffer instanceof ArrayBuffer) {\r\n            this._buffer = buffer;\r\n            this._view = new DataView(this._buffer);\r\n        } else if (ArrayBuffer.isView(buffer)) {\r\n            this._buffer = buffer.buffer;\r\n            this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\r\n        } else {\r\n            throw new Error('Invalid argument');\r\n        }\r\n    }\r\n\r\n    private _array (length: number): unknown[] {\r\n        const value = new Array(length);\r\n        for (let i = 0; i < length; i++) {\r\n            value[i] = this.parse();\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private _map (length: number): any {\r\n        let key = ''; const value = {};\r\n        for (let i = 0; i < length; i++) {\r\n            key = this.parse();\r\n            value[key] = this.parse();\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private _str (length: number): string {\r\n        const value = utf8Read(this._view, this._offset, length);\r\n        this._offset += length;\r\n        return value;\r\n    }\r\n\r\n    private _bin (length: number): ArrayBuffer {\r\n        const value = this._buffer.slice(this._offset, this._offset + length);\r\n        this._offset += length;\r\n        return value;\r\n    }\r\n\r\n    parse (): any {\r\n        const prefix = this._view.getUint8(this._offset++);\r\n        let value; let length = 0; let type = 0; let hi = 0; let lo = 0;\r\n\r\n        if (prefix < 0xc0) {\r\n            // positive fixint\r\n            if (prefix < 0x80) {\r\n                return prefix;\r\n            }\r\n            // fixmap\r\n            if (prefix < 0x90) {\r\n                return this._map(prefix & 0x0f);\r\n            }\r\n            // fixarray\r\n            if (prefix < 0xa0) {\r\n                return this._array(prefix & 0x0f);\r\n            }\r\n            // fixstr\r\n            return this._str(prefix & 0x1f);\r\n        }\r\n\r\n        // negative fixint\r\n        if (prefix > 0xdf) {\r\n            return (0xff - prefix + 1) * -1;\r\n        }\r\n\r\n        switch (prefix) {\r\n        // nil\r\n        case 0xc0:\r\n            return null;\r\n            // false\r\n        case 0xc2:\r\n            return false;\r\n            // true\r\n        case 0xc3:\r\n            return true;\r\n\r\n            // bin\r\n        case 0xc4:\r\n            length = this._view.getUint8(this._offset);\r\n            this._offset += 1;\r\n            return this._bin(length);\r\n        case 0xc5:\r\n            length = this._view.getUint16(this._offset);\r\n            this._offset += 2;\r\n            return this._bin(length);\r\n        case 0xc6:\r\n            length = this._view.getUint32(this._offset);\r\n            this._offset += 4;\r\n            return this._bin(length);\r\n\r\n            // ext\r\n        case 0xc7:\r\n            length = this._view.getUint8(this._offset);\r\n            type = this._view.getInt8(this._offset + 1);\r\n            this._offset += 2;\r\n            if (type === -1) {\r\n                // timestamp 96\r\n                const ns = this._view.getUint32(this._offset);\r\n                hi = this._view.getInt32(this._offset + 4);\r\n                lo = this._view.getUint32(this._offset + 8);\r\n                this._offset += 12;\r\n                return new Date((hi * 0x100000000 + lo) * 1e3 + ns / 1e6);\r\n            }\r\n            return [type, this._bin(length)];\r\n        case 0xc8:\r\n            length = this._view.getUint16(this._offset);\r\n            type = this._view.getInt8(this._offset + 2);\r\n            this._offset += 3;\r\n            return [type, this._bin(length)];\r\n        case 0xc9:\r\n            length = this._view.getUint32(this._offset);\r\n            type = this._view.getInt8(this._offset + 4);\r\n            this._offset += 5;\r\n            return [type, this._bin(length)];\r\n\r\n            // float\r\n        case 0xca:\r\n            value = this._view.getFloat32(this._offset);\r\n            this._offset += 4;\r\n            return value;\r\n        case 0xcb:\r\n            value = this._view.getFloat64(this._offset);\r\n            this._offset += 8;\r\n            return value;\r\n\r\n            // uint\r\n        case 0xcc:\r\n            value = this._view.getUint8(this._offset);\r\n            this._offset += 1;\r\n            return value;\r\n        case 0xcd:\r\n            value = this._view.getUint16(this._offset);\r\n            this._offset += 2;\r\n            return value;\r\n        case 0xce:\r\n            value = this._view.getUint32(this._offset);\r\n            this._offset += 4;\r\n            return value;\r\n        case 0xcf:\r\n            hi = this._view.getUint32(this._offset) * 2 ** 32;\r\n            lo = this._view.getUint32(this._offset + 4);\r\n            this._offset += 8;\r\n            return hi + lo;\r\n\r\n            // int\r\n        case 0xd0:\r\n            value = this._view.getInt8(this._offset);\r\n            this._offset += 1;\r\n            return value;\r\n        case 0xd1:\r\n            value = this._view.getInt16(this._offset);\r\n            this._offset += 2;\r\n            return value;\r\n        case 0xd2:\r\n            value = this._view.getInt32(this._offset);\r\n            this._offset += 4;\r\n            return value;\r\n        case 0xd3:\r\n            hi = this._view.getInt32(this._offset) * 2 ** 32;\r\n            lo = this._view.getUint32(this._offset + 4);\r\n            this._offset += 8;\r\n            return hi + lo;\r\n\r\n            // fixext\r\n        case 0xd4:\r\n            type = this._view.getInt8(this._offset);\r\n            this._offset += 1;\r\n            if (type === 0x00) {\r\n                // custom encoding for 'undefined' (kept for backward-compatibility)\r\n                this._offset += 1;\r\n                return undefined;\r\n            }\r\n            return [type, this._bin(1)];\r\n        case 0xd5:\r\n            type = this._view.getInt8(this._offset);\r\n            this._offset += 1;\r\n            return [type, this._bin(2)];\r\n        case 0xd6:\r\n            type = this._view.getInt8(this._offset);\r\n            this._offset += 1;\r\n            if (type === -1) {\r\n                // timestamp 32\r\n                value = this._view.getUint32(this._offset);\r\n                this._offset += 4;\r\n                return new Date(value * 1e3);\r\n            }\r\n            return [type, this._bin(4)];\r\n        case 0xd7:\r\n            type = this._view.getInt8(this._offset);\r\n            this._offset += 1;\r\n            if (type === 0x00) {\r\n                // custom date encoding (kept for backward-compatibility)\r\n                hi = this._view.getInt32(this._offset) * 2 ** 32;\r\n                lo = this._view.getUint32(this._offset + 4);\r\n                this._offset += 8;\r\n                return new Date(hi + lo);\r\n            }\r\n            if (type === -1) {\r\n                // timestamp 64\r\n                hi = this._view.getUint32(this._offset);\r\n                lo = this._view.getUint32(this._offset + 4);\r\n                this._offset += 8;\r\n                const s = (hi & 0x3) * 0x100000000 + lo;\r\n                return new Date(s * 1e3 + (hi >>> 2) / 1e6);\r\n            }\r\n            return [type, this._bin(8)];\r\n        case 0xd8:\r\n            type = this._view.getInt8(this._offset);\r\n            this._offset += 1;\r\n            return [type, this._bin(16)];\r\n\r\n            // str\r\n        case 0xd9:\r\n            length = this._view.getUint8(this._offset);\r\n            this._offset += 1;\r\n            return this._str(length);\r\n        case 0xda:\r\n            length = this._view.getUint16(this._offset);\r\n            this._offset += 2;\r\n            return this._str(length);\r\n        case 0xdb:\r\n            length = this._view.getUint32(this._offset);\r\n            this._offset += 4;\r\n            return this._str(length);\r\n\r\n            // array\r\n        case 0xdc:\r\n            length = this._view.getUint16(this._offset);\r\n            this._offset += 2;\r\n            return this._array(length);\r\n        case 0xdd:\r\n            length = this._view.getUint32(this._offset);\r\n            this._offset += 4;\r\n            return this._array(length);\r\n\r\n            // map\r\n        case 0xde:\r\n            length = this._view.getUint16(this._offset);\r\n            this._offset += 2;\r\n            return this._map(length);\r\n        case 0xdf:\r\n            length = this._view.getUint32(this._offset);\r\n            this._offset += 4;\r\n            return this._map(length);\r\n        default:\r\n        }\r\n\r\n        throw new Error('Could not parse');\r\n    }\r\n}\r\n\r\nfunction utf8Read (view: DataView, offset: number, length: number): string {\r\n    let string = ''; let chr = 0;\r\n    for (let i = offset, end = offset + length; i < end; i++) {\r\n        const byte = view.getUint8(i);\r\n        if ((byte & 0x80) === 0x00) {\r\n            string += String.fromCharCode(byte);\r\n            continue;\r\n        }\r\n        if ((byte & 0xe0) === 0xc0) {\r\n            string += String.fromCharCode(\r\n                ((byte & 0x1f) << 6)\r\n                | (view.getUint8(++i) & 0x3f),\r\n            );\r\n            continue;\r\n        }\r\n        if ((byte & 0xf0) === 0xe0) {\r\n            string += String.fromCharCode(\r\n                ((byte & 0x0f) << 12)\r\n                | ((view.getUint8(++i) & 0x3f) << 6)\r\n                | ((view.getUint8(++i) & 0x3f) << 0),\r\n            );\r\n            continue;\r\n        }\r\n        if ((byte & 0xf8) === 0xf0) {\r\n            chr = ((byte & 0x07) << 18)\r\n                | ((view.getUint8(++i) & 0x3f) << 12)\r\n                | ((view.getUint8(++i) & 0x3f) << 6)\r\n                | ((view.getUint8(++i) & 0x3f) << 0);\r\n            if (chr >= 0x010000) { // surrogate pair\r\n                chr -= 0x010000;\r\n                string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\r\n            } else {\r\n                string += String.fromCharCode(chr);\r\n            }\r\n            continue;\r\n        }\r\n        throw new Error(`Invalid byte ${byte.toString(16)}`);\r\n    }\r\n    return string;\r\n}\r\n\r\nexport function notepackDecode (buffer: ArrayBuffer): any {\r\n    const decoder = new Decoder(buffer);\r\n    const value = decoder.parse();\r\n    if (decoder.offset !== buffer.byteLength) {\r\n        throw new Error(`${buffer.byteLength - decoder.offset} trailing bytes`);\r\n    }\r\n    return value;\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { getError, cclegacy } from '../core';\r\nimport { notepackDecode } from '../../external/deserialize/notepack_decode';\r\nimport { notepackEncode } from '../../external/deserialize/notepack_encode';\r\n\r\nconst VERSION = 2;\r\n\r\nconst MAGIC = 0x4E4F4343;\r\n\r\nconst CHUNK_ALIGN_AS = 8;\r\n\r\nexport class CCON {\r\n    constructor (document: unknown, chunks: Uint8Array[]) {\r\n        this._document = document;\r\n        this._chunks = chunks;\r\n    }\r\n\r\n    get document (): unknown {\r\n        return this._document;\r\n    }\r\n\r\n    get chunks (): Uint8Array[] {\r\n        return this._chunks;\r\n    }\r\n\r\n    private declare _document: unknown;\r\n    private declare _chunks: Uint8Array[];\r\n}\r\n\r\nexport function encodeCCONBinary (ccon: CCON): Uint8Array {\r\n    const { document, chunks } = ccon;\r\n\r\n    const jsonBytes = new Uint8Array(notepackEncode(document));\r\n    const ccobBuilder = new BufferBuilder();\r\n\r\n    const header = new ArrayBuffer(12);\r\n    const headerView = new DataView(header);\r\n    headerView.setUint32(0, MAGIC, true); // Magic\r\n    headerView.setUint32(4, VERSION, true); // Version\r\n\r\n    ccobBuilder.append(headerView);\r\n\r\n    ccobBuilder.append(uint32Bytes(jsonBytes.byteLength));\r\n    ccobBuilder.append(jsonBytes);\r\n\r\n    chunks.forEach((chunk) => {\r\n        ccobBuilder.alignAs(CHUNK_ALIGN_AS);\r\n        ccobBuilder.append(uint32Bytes(chunk.byteLength));\r\n        ccobBuilder.append(chunk);\r\n    });\r\n\r\n    headerView.setUint32(8, ccobBuilder.byteLength, true);\r\n    return ccobBuilder.get();\r\n\r\n    function uint32Bytes (value: number): ArrayBufferView {\r\n        const bytes = new ArrayBuffer(4);\r\n        const view = new DataView(bytes);\r\n        view.setUint32(0, value, true);\r\n        return view;\r\n    }\r\n}\r\n\r\nexport function decodeCCONBinary (bytes: Uint8Array): CCON {\r\n    if (bytes.length < 16) {\r\n        throw new InvalidCCONError(getError(13102));\r\n    }\r\n\r\n    const dataView = new DataView(\r\n        bytes.buffer,\r\n        bytes.byteOffset,\r\n        bytes.byteLength,\r\n    );\r\n\r\n    const magic = dataView.getUint32(0, true);\r\n    if (magic !== MAGIC) {\r\n        throw new InvalidCCONError(getError(13100));\r\n    }\r\n\r\n    const version = dataView.getUint32(4, true);\r\n\r\n    const dataByteLength = dataView.getUint32(8, true);\r\n    if (dataByteLength !== dataView.byteLength) {\r\n        throw new InvalidCCONError(getError(13102));\r\n    }\r\n\r\n    let chunksStart = 12;\r\n\r\n    const jsonDataLength = dataView.getUint32(chunksStart, true);\r\n    chunksStart += 4;\r\n    const jsonData = new Uint8Array(dataView.buffer, chunksStart + dataView.byteOffset, jsonDataLength);\r\n    chunksStart += jsonDataLength;\r\n    let json: unknown;\r\n    try {\r\n        if (version === 1) {\r\n            const jsonString = decodeJson(jsonData);\r\n            json = JSON.parse(jsonString);\r\n        } else if (version === 2) {\r\n            json = notepackDecode(jsonData);\r\n        }\r\n    } catch (err) {\r\n        throw new InvalidCCONError(err as string);\r\n    }\r\n\r\n    const chunks: Uint8Array[] = [];\r\n    while (chunksStart < dataView.byteLength) {\r\n        if (chunksStart % CHUNK_ALIGN_AS !== 0) {\r\n            const padding = CHUNK_ALIGN_AS - chunksStart % CHUNK_ALIGN_AS;\r\n            chunksStart += padding;\r\n        }\r\n        const chunkDataLength = dataView.getUint32(chunksStart, true);\r\n        chunksStart += 4;\r\n        chunks.push(new Uint8Array(dataView.buffer, chunksStart + dataView.byteOffset, chunkDataLength));\r\n        chunksStart += chunkDataLength;\r\n    }\r\n\r\n    if (chunksStart !== dataView.byteLength) {\r\n        throw new InvalidCCONError(getError(13102));\r\n    }\r\n\r\n    return new CCON(json, chunks);\r\n}\r\n\r\n/**\r\n * Partial signature of Node.js `Buffer`: https://nodejs.org/api/buffer.html\r\n */\r\ninterface Buffer {\r\n    buffer: ArrayBuffer;\r\n    byteOffset: number;\r\n    length: number;\r\n    toString(): string;\r\n}\r\n\r\ninterface BufferConstructor {\r\n    from(input: string, encoding: 'utf8'): Buffer;\r\n\r\n    from(buffer: ArrayBuffer, byteOffset?: number, byteLength?: number): Buffer;\r\n}\r\n\r\nfunction decodeJson (data: Uint8Array): string {\r\n    if (typeof TextDecoder !== 'undefined') {\r\n        return new TextDecoder().decode(data);\r\n    } else if ('Buffer' in globalThis) {\r\n        const { Buffer } = (globalThis as unknown as { Buffer: BufferConstructor });\r\n        // eslint-disable-next-line no-buffer-constructor\r\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength).toString();\r\n    } else {\r\n        throw new Error(getError(13104));\r\n    }\r\n}\r\n\r\nexport class InvalidCCONError extends Error { }\r\n\r\nexport class BufferBuilder {\r\n    private _viewOrPaddings: (ArrayBufferView | number)[] = [];\r\n    private _length = 0;\r\n\r\n    constructor () {}\r\n\r\n    get byteLength (): number {\r\n        return this._length;\r\n    }\r\n\r\n    public alignAs (align: number): number {\r\n        if (align !== 0) {\r\n            const remainder = this._length % align;\r\n            if (remainder !== 0) {\r\n                const padding = align - remainder;\r\n                this._viewOrPaddings.push(padding);\r\n                this._length += padding;\r\n                return padding;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public append (view: ArrayBufferView): number {\r\n        const result = this._length;\r\n        this._viewOrPaddings.push(view);\r\n        this._length += view.byteLength;\r\n        return result;\r\n    }\r\n\r\n    public get (): Uint8Array {\r\n        const result = new Uint8Array(this._length);\r\n        let counter = 0;\r\n        this._viewOrPaddings.forEach((viewOrPadding) => {\r\n            if (typeof viewOrPadding === 'number') {\r\n                counter += viewOrPadding;\r\n            } else {\r\n                result.set(new Uint8Array(viewOrPadding.buffer, viewOrPadding.byteOffset, viewOrPadding.byteLength), counter);\r\n                counter += viewOrPadding.byteLength;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n}\r\n\r\ncclegacy.internal.decodeCCONBinary = decodeCCONBinary;\r\ncclegacy.internal.CCON = CCON;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST, DEV, DEBUG, JSB, PREVIEW, SUPPORT_JIT } from 'internal:constants';\r\nimport { cclegacy, js, misc, CCClass, ENUM_TAG, BITMASK_TAG, sys, error, assertIsTrue, CustomSerializable, DeserializationContext, deserializeTag, SerializationInput, errorID } from '../core';\r\nimport { MissingScript } from '../misc/missing-script';\r\nimport { Details } from './deserialize';\r\nimport { Platform } from '../../pal/system-info/enum-type';\r\nimport type { deserialize, CCClassConstructor } from './deserialize';\r\nimport { CCON } from './ccon';\r\nimport { Asset } from '../asset/assets';\r\n\r\nfunction compileObjectTypeJit (\r\n    sources: string[],\r\n    defaultValue: unknown,\r\n    accessorToSet: string,\r\n    propNameLiteralToSet: string,\r\n    assumeHavePropIfIsValue: boolean,\r\n): void {\r\n    if (defaultValue instanceof cclegacy.ValueType) {\r\n        // fast case\r\n        if (!assumeHavePropIfIsValue) {\r\n            sources.push('if(prop){');\r\n        }\r\n        const ctorCode = js.getClassName(defaultValue);\r\n        sources.push(`s._deserializeFastDefinedObject(o${accessorToSet},prop,${ctorCode});`);\r\n        if (!assumeHavePropIfIsValue) {\r\n            sources.push(`}else o${accessorToSet}=null;`);\r\n        }\r\n    } else {\r\n        sources.push(`\r\nif (prop) {\r\n    s._deserializeAndAssignField(o, prop, ${propNameLiteralToSet});\r\n} else {\r\n    o${accessorToSet}=null;\r\n}\r\n`);\r\n    }\r\n}\r\n\r\ntype ReportMissingClass = deserialize.ReportMissingClass;\r\n\r\ntype ClassFinder = deserialize.ClassFinder;\r\n\r\ntype SerializableClassConstructor = deserialize.SerializableClassConstructor;\r\n\r\nexport type CompiledDeserializeFn = (\r\n    deserializer: _Deserializer,\r\n    object: Record<string, unknown>,\r\n    deserialized: Record<string, unknown>,\r\n    constructor: AnyFunction,\r\n) => void;\r\n\r\nconst compileDeserialize = SUPPORT_JIT ? compileDeserializeJIT : compileDeserializeNative;\r\n\r\nconst DELIMITER = CCClass.Attr.DELIMETER;\r\nconst POSTFIX_TYPE: `${typeof DELIMITER}type` = `${DELIMITER}type`;\r\nconst POSTFIX_EDITOR_ONLY: `${typeof DELIMITER}editorOnly` = `${DELIMITER}editorOnly`;\r\nconst POSTFIX_DEFAULT: `${typeof DELIMITER}default` = `${DELIMITER}default`;\r\nconst POSTFIX_FORMERLY_SERIALIZED_AS: `${typeof DELIMITER}formerlySerializedAs` = `${DELIMITER}formerlySerializedAs`;\r\ntype AttributeName = string;\r\ntype AttributeFormerlySerializedAs = `${AttributeName}${typeof POSTFIX_FORMERLY_SERIALIZED_AS}`;\r\ntype AttributeDefault = `${AttributeName}${typeof POSTFIX_DEFAULT}`;\r\ntype AttributeType = `${AttributeName}${typeof POSTFIX_TYPE}`;\r\ntype AttributeEditorOnly = `${AttributeName}${typeof POSTFIX_EDITOR_ONLY}`;\r\ninterface AttrResult {\r\n    [K: string]: typeof K extends AttributeFormerlySerializedAs ? string :\r\n        typeof K extends AttributeDefault ? unknown :\r\n        typeof K extends AttributeType ? AnyFunction :\r\n        typeof K extends AttributeEditorOnly ? boolean : never;\r\n}\r\n\r\nfunction compileDeserializeJIT (self: _Deserializer, klass: CCClassConstructor<unknown>): CompiledDeserializeFn {\r\n    const attrs: AttrResult = CCClass.Attr.getClassAttrs(klass);\r\n\r\n    const props = klass.__values__;\r\n    // self, obj, serializedData, klass\r\n    const sources = [\r\n        'var prop;',\r\n    ];\r\n    const fastMode = canBeDeserializedInFastMode(klass);\r\n    // sources.push('var vb,vn,vs,vo,vu,vf;');    // boolean, number, string, object, undefined, function\r\n\r\n    for (let p = 0; p < props.length; p++) {\r\n        const propName = props[p];\r\n        if ((PREVIEW || (EDITOR && self.ignoreEditorOnly)) && attrs[propName + POSTFIX_EDITOR_ONLY]) {\r\n            continue;   // skip editor only if in preview\r\n        }\r\n\r\n        let accessorToSet: string;\r\n        let propNameLiteralToSet: string;\r\n        if (CCClass.IDENTIFIER_RE.test(propName)) {\r\n            propNameLiteralToSet = `\"${propName}\"`;\r\n            accessorToSet = `.${propName}`;\r\n        } else {\r\n            propNameLiteralToSet = CCClass.escapeForJS(propName);\r\n            accessorToSet = `[${propNameLiteralToSet}]`;\r\n        }\r\n\r\n        let accessorToGet = accessorToSet;\r\n        if (attrs[propName + POSTFIX_FORMERLY_SERIALIZED_AS]) {\r\n            const propNameToRead = attrs[propName + POSTFIX_FORMERLY_SERIALIZED_AS] as string;\r\n            if (CCClass.IDENTIFIER_RE.test(propNameToRead)) {\r\n                accessorToGet = `.${propNameToRead}`;\r\n            } else {\r\n                accessorToGet = `[${CCClass.escapeForJS(propNameToRead)}]`;\r\n            }\r\n        }\r\n\r\n        sources.push(`prop=d${accessorToGet};`);\r\n        sources.push(`if(typeof ${JSB ? '(prop)' : 'prop'}!==\"undefined\"){`);\r\n\r\n        // function undefined object(null) string boolean number\r\n        const defaultValue = CCClass.getDefault(attrs[propName + POSTFIX_DEFAULT]);\r\n        const userType = attrs[propName + POSTFIX_TYPE] as AnyFunction | string | undefined;\r\n        if (fastMode && (defaultValue !== undefined || userType)) {\r\n            const isPrimitiveTypeInFastMode = isPrimitivePropertyByDefaultOrType(defaultValue, userType);\r\n            if (isPrimitiveTypeInFastMode) {\r\n                sources.push(`o${accessorToSet}=prop;`);\r\n            } else {\r\n                compileObjectTypeJit(sources, defaultValue, accessorToSet, propNameLiteralToSet, true);\r\n            }\r\n        } else {\r\n            sources.push(`${`if(typeof ${JSB ? '(prop)' : 'prop'}!==\"object\"){`\r\n                             + 'o'}${accessorToSet}=prop;`\r\n                         + `}else{`);\r\n            compileObjectTypeJit(sources, defaultValue, accessorToSet, propNameLiteralToSet, false);\r\n            sources.push('}');\r\n        }\r\n        sources.push('}');\r\n    }\r\n    if (js.isChildClassOf(klass, cclegacy.Node) || js.isChildClassOf(klass, cclegacy.Component)) {\r\n        if (PREVIEW || (EDITOR && self.ignoreEditorOnly)) {\r\n            const mayUsedInPersistRoot = js.isChildClassOf(klass, cclegacy.Node);\r\n            if (mayUsedInPersistRoot) {\r\n                sources.push('d._id&&(o._id=d._id);');\r\n            }\r\n        } else {\r\n            sources.push('d._id&&(o._id=d._id);');\r\n        }\r\n    }\r\n    if (props[props.length - 1] === '_$erialized') {\r\n        // deep copy original serialized data\r\n        sources.push('o._$erialized=JSON.parse(JSON.stringify(d));');\r\n        // parse the serialized data as primitive javascript object, so its __id__ will be dereferenced\r\n        sources.push('s._fillPlainObject(o._$erialized,d);');\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval, no-new-func\r\n    return Function('s', 'o', 'd', 'k', sources.join('')) as CompiledDeserializeFn;\r\n}\r\n\r\nfunction compileDeserializeNative (_self: _Deserializer, klass: CCClassConstructor<unknown>): CompiledDeserializeFn {\r\n    const fastMode = canBeDeserializedInFastMode(klass);\r\n    const shouldCopyId = js.isChildClassOf(klass, cclegacy.Node) || js.isChildClassOf(klass, cclegacy.Component);\r\n    let shouldCopyRawData = false;\r\n\r\n    const simpleProps: string[] = [];\r\n    let simplePropsToRead = simpleProps;\r\n    const advancedProps: string[] = [];\r\n    let advancedPropsToRead = advancedProps;\r\n    const advancedPropsValueType: any = [];\r\n\r\n    ((): void => {\r\n        const props: string[] = klass.__values__;\r\n        shouldCopyRawData = props[props.length - 1] === '_$erialized';\r\n\r\n        const attrs = CCClass.Attr.getClassAttrs(klass);\r\n\r\n        for (let p = 0; p < props.length; p++) {\r\n            const propName = props[p];\r\n            let propNameToRead = propName;\r\n            if (attrs[propName + POSTFIX_FORMERLY_SERIALIZED_AS]) {\r\n                propNameToRead = attrs[propName + POSTFIX_FORMERLY_SERIALIZED_AS];\r\n            }\r\n            // function undefined object(null) string boolean number\r\n            const defaultValue = CCClass.getDefault(attrs[propName + POSTFIX_DEFAULT]);\r\n            const userType = attrs[propName + POSTFIX_TYPE] as AnyFunction | string | undefined;\r\n            let isPrimitiveTypeInFastMode = false;\r\n            if (fastMode && (defaultValue !== undefined || userType)) {\r\n                isPrimitiveTypeInFastMode = isPrimitivePropertyByDefaultOrType(defaultValue, userType);\r\n            }\r\n            if (isPrimitiveTypeInFastMode) {\r\n                if (propNameToRead !== propName && simplePropsToRead === simpleProps) {\r\n                    simplePropsToRead = simpleProps.slice();\r\n                }\r\n                simpleProps.push(propName);\r\n                if (simplePropsToRead !== simpleProps) {\r\n                    simplePropsToRead.push(propNameToRead);\r\n                }\r\n            } else {\r\n                if (propNameToRead !== propName && advancedPropsToRead === advancedProps) {\r\n                    advancedPropsToRead = advancedProps.slice();\r\n                }\r\n                advancedProps.push(propName);\r\n                if (advancedPropsToRead !== advancedProps) {\r\n                    advancedPropsToRead.push(propNameToRead);\r\n                }\r\n                advancedPropsValueType.push((defaultValue instanceof cclegacy.ValueType) && defaultValue.constructor);\r\n            }\r\n        }\r\n    })();\r\n\r\n    return (s, o, d, k): void => {\r\n        for (let i = 0; i < simpleProps.length; ++i) {\r\n            const prop = d[simplePropsToRead[i]];\r\n            if (prop !== undefined) {\r\n                o[simpleProps[i]] = prop;\r\n            }\r\n        }\r\n        for (let i = 0; i < advancedProps.length; ++i) {\r\n            const propName = advancedProps[i];\r\n            const prop = d[advancedPropsToRead[i]];\r\n            if (prop === undefined) {\r\n                continue;\r\n            }\r\n            if (!fastMode && typeof prop !== 'object') {\r\n                o[propName] = prop;\r\n            } else {\r\n                // fastMode (so will not simpleProp) or object\r\n                const valueTypeCtor = advancedPropsValueType[i];\r\n                if (valueTypeCtor) {\r\n                    if (fastMode || prop) {\r\n                        s._deserializeFastDefinedObject(o[propName] as Record<PropertyKey, unknown>, prop as SerializedGeneralTypedObject, valueTypeCtor);\r\n                    } else {\r\n                        o[propName] = null;\r\n                    }\r\n                } else if (prop) {\r\n                    s._deserializeAndAssignField(o, prop, propName);\r\n                } else {\r\n                    o[propName] = null;\r\n                }\r\n            }\r\n        }\r\n        if (shouldCopyId && d._id) {\r\n            o._id = d._id;\r\n        }\r\n        if (shouldCopyRawData) {\r\n            // deep copy original serialized data\r\n            o._$erialized = JSON.parse(JSON.stringify(d));\r\n            // parse the serialized data as primitive javascript object, so its __id__ will be dereferenced\r\n            s._fillPlainObject(o._$erialized as Record<PropertyKey, unknown>, d);\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Tells if the class can be deserialized in \"fast mode\".\r\n * In fast mode, deserialization of the class will go into an optimized way:\r\n * each class property will be examined whether to be primitive according to their default value\r\n * and type. Finally, all primitive properties would be together deserialized using simple assignment,\r\n * without performing in-loop check.\r\n */\r\nfunction canBeDeserializedInFastMode (klass: any): boolean {\r\n    return misc.BUILTIN_CLASSID_RE.test(js.getClassId(klass));\r\n}\r\n\r\nfunction isPrimitivePropertyByDefaultOrType (defaultValue: any, userType: any): boolean {\r\n    if (defaultValue === undefined) {\r\n        return userType instanceof CCClass.Attr.PrimitiveType || userType === ENUM_TAG || userType === BITMASK_TAG;\r\n    } else {\r\n        const defaultType = typeof defaultValue;\r\n        return defaultType === 'string'\r\n                          || defaultType === 'number'\r\n                          || defaultType === 'boolean';\r\n    }\r\n}\r\n\r\ntype TypedArrayViewConstructorName =\r\n    | 'Uint8Array' | 'Int8Array'\r\n    | 'Uint16Array' | 'Int16Array'\r\n    | 'Uint32Array' | 'Int32Array'\r\n    | 'Float32Array' | 'Float64Array';\r\n\r\ninterface SerializedTypedArray {\r\n    __id__: never;\r\n    __uuid__: never;\r\n    __type__: 'TypedArray';\r\n    array: number[];\r\n    ctor: TypedArrayViewConstructorName;\r\n}\r\n\r\ninterface SerializedTypedArrayRef {\r\n    __id__: never;\r\n    __uuid__: never;\r\n    __type__: 'TypedArrayRef';\r\n    ctor: TypedArrayViewConstructorName;\r\n    offset: number;\r\n    length: number;\r\n}\r\n\r\ntype SerializedGeneralTypedObject = {\r\n    __id__: never;\r\n    __uuid__: never;\r\n    __type__?: NotKnownTypeTag;\r\n} & Record<NotTypeTag, SerializedFieldValue>;\r\n\r\ninterface SerializedObjectReference {\r\n    __type__: never;\r\n    __uuid__: never;\r\n    __id__: number;\r\n}\r\n\r\ninterface SerializedUUIDReference {\r\n    __type__: never;\r\n    __id__: never;\r\n    __uuid__: string;\r\n    __expectedType__: string;\r\n}\r\n\r\ntype SerializedObject = SerializedTypedArray | SerializedTypedArrayRef | SerializedGeneralTypedObject;\r\n\r\ntype SerializedValue = SerializedObject | SerializedValue[] | string | number | boolean | null;\r\n\r\ntype SerializedPropertyKey = string | number;\r\n\r\ntype SerializedFieldObjectValue = SerializedObjectReference | SerializedUUIDReference | unknown;\r\n\r\ntype SerializedFieldValue = string | number | boolean | null | SerializedFieldObjectValue;\r\n\r\ntype NotA<T, ReservedNames> = T extends ReservedNames ? never : T;\r\n\r\ntype NotB<T, ReservedNames> = ReservedNames extends T ? never : T;\r\n\r\ntype FooName<T, ReservedNames> = NotA<T, ReservedNames> & NotB<T, ReservedNames>\r\n\r\ntype NotTypeTag = FooName<string, '__type__'>;\r\n\r\ntype NotKnownTypeTag = FooName<string, 'TypedArray' | 'TypedArrayRef'>;\r\n\r\ntype SerializedData = SerializedObject | SerializedObject[];\r\n\r\nclass DeserializerPool extends js.Pool<_Deserializer> {\r\n    constructor () {\r\n        super((deserializer: _Deserializer) => {\r\n            deserializer.clear();\r\n        }, 1);\r\n    }\r\n}\r\n\r\n// TODO: this is should be a HACK, we've changed the method signature\r\n// issue: https://github.com/cocos/cocos-engine/issues/14642\r\n(DeserializerPool.prototype as any).get = function (\r\n    this: DeserializerPool,\r\n    details: Details,\r\n    classFinder: ClassFinder,\r\n    reportMissingClass: ReportMissingClass,\r\n    customEnv: unknown,\r\n    ignoreEditorOnly: boolean | undefined,\r\n): _Deserializer {\r\n    const cache = this._get();\r\n    if (cache) {\r\n        cache.reset(details, classFinder, reportMissingClass, customEnv, ignoreEditorOnly);\r\n        return cache;\r\n    } else {\r\n        return new _Deserializer(details, classFinder, reportMissingClass, customEnv, ignoreEditorOnly);\r\n    }\r\n};\r\n\r\nclass _Deserializer {\r\n    public static pool: DeserializerPool = new DeserializerPool();\r\n\r\n    public declare result: Details;\r\n    public declare customEnv: unknown;\r\n    public deserializedList: Array<Record<PropertyKey, unknown> | undefined> = [];\r\n    public deserializedData: any = null;\r\n    private declare _classFinder: ClassFinder;\r\n    private declare _reportMissingClass: ReportMissingClass;\r\n    private declare _onDereferenced: ClassFinder['onDereferenced'];\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public get ignoreEditorOnly (): unknown { return this._ignoreEditorOnly; }\r\n    private declare _ignoreEditorOnly: unknown;\r\n    private declare _mainBinChunk: Uint8Array;\r\n    private declare _serializedData: SerializedObject | SerializedObject[];\r\n    private declare _context: DeserializationContext;\r\n\r\n    constructor (result: Details, classFinder: ClassFinder, reportMissingClass: ReportMissingClass, customEnv: unknown, ignoreEditorOnly: unknown) {\r\n        this.result = result;\r\n        this.customEnv = customEnv;\r\n        this._classFinder = classFinder;\r\n        this._reportMissingClass = reportMissingClass;\r\n        this._onDereferenced = classFinder?.onDereferenced;\r\n        if (DEV) {\r\n            this._ignoreEditorOnly = ignoreEditorOnly;\r\n        }\r\n    }\r\n\r\n    public reset (result: Details, classFinder: ClassFinder, reportMissingClass: ReportMissingClass, customEnv: unknown, ignoreEditorOnly: unknown): void {\r\n        this.result = result;\r\n        this.customEnv = customEnv;\r\n        this._classFinder = classFinder;\r\n        this._reportMissingClass = reportMissingClass;\r\n        this._onDereferenced = classFinder?.onDereferenced;\r\n        if (DEV) {\r\n            this._ignoreEditorOnly = ignoreEditorOnly;\r\n        }\r\n    }\r\n\r\n    public clear (): void {\r\n        this.result = null!;\r\n        this.customEnv = null;\r\n        this.deserializedList.length = 0;\r\n        this.deserializedData = null;\r\n        this._classFinder = null!;\r\n        this._reportMissingClass = null!;\r\n        this._onDereferenced = null!;\r\n    }\r\n\r\n    public deserialize (serializedData: SerializedData | CCON): any {\r\n        let fromCCON = false;\r\n        let jsonObj: SerializedData;\r\n        if (serializedData instanceof CCON) {\r\n            fromCCON = true;\r\n            jsonObj = serializedData.document as SerializedData;\r\n            if (serializedData.chunks.length > 0) {\r\n                assertIsTrue(serializedData.chunks.length === 1);\r\n                this._mainBinChunk = serializedData.chunks[0];\r\n            }\r\n        } else {\r\n            jsonObj = serializedData;\r\n        }\r\n\r\n        this._serializedData = jsonObj;\r\n        this._context = {\r\n            fromCCON,\r\n        };\r\n\r\n        const serializedRootObject = Array.isArray(jsonObj) ? jsonObj[0] : jsonObj;\r\n\r\n        if (EDITOR || TEST) {\r\n            this.deserializedData = this._deserializeObject(serializedRootObject, 0, this.deserializedList, `${0}`);\r\n        } else {\r\n            this.deserializedData = this._deserializeObject(serializedRootObject, 0);\r\n        }\r\n\r\n        this._serializedData = undefined!;\r\n        this._mainBinChunk = undefined!;\r\n        this._context = undefined!;\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.deserializedData;\r\n    }\r\n\r\n    /**\r\n     * @param serialized - The object to deserialize, must be non-nil.\r\n     * @param globalIndex - If the object is deserialized from \"root objects\" array.\r\n     * @param owner - Tracing purpose.\r\n     * @param propName - Tracing purpose.\r\n     */\r\n    private _deserializeObject (\r\n        serialized: SerializedObject,\r\n        globalIndex: number,\r\n        owner?: Record<PropertyKey, unknown> | unknown[],\r\n        propName?: string,\r\n    ): Record<string, any> | null {\r\n        switch (serialized.__type__) {\r\n        case 'TypedArray':\r\n            return this._deserializeTypedArrayView(serialized);\r\n        case 'TypedArrayRef':\r\n            return this._deserializeTypedArrayViewRef(serialized);\r\n        default:\r\n            // NOTE: when 'strictNullCheck' is false, TS can't infer serialized as SerializedGeneralTypedObject\r\n            if ((serialized as unknown as SerializedGeneralTypedObject).__type__) { // Typed object (including CCClass)\r\n                return this._deserializeTypeTaggedObject(serialized, globalIndex, owner, propName);\r\n            } else if (!Array.isArray(serialized)) { // Embedded primitive javascript object\r\n                return this._deserializePlainObject(serialized);\r\n            } else { // Array\r\n                return this._deserializeArray(serialized);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _deserializeTypedArrayView (value: SerializedTypedArray): Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array {\r\n        return globalThis[value.ctor].from(value.array);\r\n    }\r\n\r\n    private _deserializeTypedArrayViewRef (value: SerializedTypedArrayRef): Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array {\r\n        const { offset, length, ctor: constructorName } = value;\r\n        const obj = new globalThis[constructorName](\r\n            this._mainBinChunk.buffer,\r\n            this._mainBinChunk.byteOffset + offset,\r\n            length,\r\n        );\r\n        return obj;\r\n    }\r\n\r\n    private _deserializeArray (value: SerializedValue[]): unknown[] {\r\n        const obj = new Array<unknown>(value.length);\r\n        let prop: unknown;\r\n        for (let i = 0; i < value.length; i++) {\r\n            prop = value[i];\r\n            if (typeof prop === 'object' && prop) {\r\n                const isAssetType = this._deserializeAndAssignField(obj, prop, `${i}`);\r\n                if (isAssetType) {\r\n                    // fill default value for primitive objects (no constructor)\r\n                    obj[i] = null;\r\n                }\r\n            } else {\r\n                obj[i] = prop;\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    private _deserializePlainObject (value: Record<string, unknown>): Record<string, any> {\r\n        const obj = {};\r\n        this._fillPlainObject(obj, value);\r\n        return obj;\r\n    }\r\n\r\n    private _deserializeTypeTaggedObject (\r\n        value: SerializedGeneralTypedObject,\r\n        globalIndex: number,\r\n        owner?: Record<PropertyKey, unknown> | unknown[],\r\n        propName?: string,\r\n    ): Record<string, unknown> | null {\r\n        const type = value.__type__ as unknown as string;\r\n\r\n        const klass = this._classFinder(type, value, owner, propName);\r\n        if (!klass) {\r\n            const notReported = this._classFinder === js.getClassById;\r\n            if (notReported) {\r\n                this._reportMissingClass(type);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        const createObject = (constructor: deserialize.SerializableClassConstructor): Record<string, unknown> => {\r\n            // eslint-disable-next-line new-cap\r\n            const obj = new constructor() as Record<string, unknown>;\r\n            if (globalIndex >= 0) {\r\n                this.deserializedList[globalIndex] = obj;\r\n            }\r\n            return obj;\r\n        };\r\n\r\n        if (!(EDITOR && js.isChildClassOf(klass, cclegacy.Component))) {\r\n            const obj = createObject(klass);\r\n            this._deserializeInto(value, obj, klass);\r\n            return obj;\r\n        } else {\r\n            try {\r\n                const obj = createObject(klass);\r\n                this._deserializeInto(value, obj, klass);\r\n                return obj;\r\n            } catch (e: unknown) {\r\n                if (DEBUG) {\r\n                    error(`Deserialize ${klass.name} failed, ${(e as { stack: string; }).stack}`);\r\n                }\r\n                const obj = createObject(MissingScript);\r\n                this._deserializeInto(value, obj, MissingScript);\r\n                return obj;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _deserializeInto (\r\n        value: SerializedGeneralTypedObject,\r\n        object: Record<PropertyKey, unknown>,\r\n        constructor: deserialize.SerializableClassConstructor,\r\n        skipCustomized = false,\r\n    ): void {\r\n        if (!skipCustomized && (object as Partial<CustomSerializable>)[deserializeTag]) {\r\n            this._runCustomizedDeserialize(\r\n                value,\r\n                object as Record<PropertyKey, unknown> & CustomSerializable,\r\n                constructor,\r\n            );\r\n            return;\r\n        }\r\n\r\n        interface ClassicCustomizedDeserializable { _deserialize: (content: unknown, deserializer: _Deserializer) => void; }\r\n        if ((object as Partial<ClassicCustomizedDeserializable>)._deserialize) {\r\n            // TODO: content check?\r\n            (object as Partial<ClassicCustomizedDeserializable>)._deserialize!((value as unknown as { content: unknown }).content, this);\r\n            return;\r\n        }\r\n\r\n        if (cclegacy.Class._isCCClass(constructor)) {\r\n            this._deserializeFireClass(object, value, constructor as CCClassConstructor<unknown>);\r\n        } else {\r\n            this._deserializeFastDefinedObject(object, value, constructor);\r\n        }\r\n    }\r\n\r\n    private _runCustomizedDeserialize (\r\n        value: SerializedGeneralTypedObject,\r\n        object: Record<PropertyKey, unknown> & CustomSerializable,\r\n        constructor: deserialize.SerializableClassConstructor,\r\n    ): void {\r\n        const serializationInput: SerializationInput = {\r\n            readProperty: (name: string) => {\r\n                const serializedField = value[name];\r\n                if (typeof serializedField !== 'object' || !serializedField) {\r\n                    return serializedField as unknown;\r\n                } else {\r\n                    return this._deserializeObjectField(serializedField) as unknown;\r\n                }\r\n            },\r\n\r\n            readThis: () => {\r\n                this._deserializeInto(value, object, constructor, true);\r\n            },\r\n\r\n            readSuper: () => {\r\n                const superConstructor = js.getSuper(constructor);\r\n                if (superConstructor) {\r\n                    this._deserializeInto(value, object, superConstructor);\r\n                }\r\n            },\r\n        };\r\n\r\n        object[deserializeTag]!(serializationInput, this._context);\r\n    }\r\n\r\n    private _deserializeFireClass (obj: Record<PropertyKey, unknown>, serialized: SerializedGeneralTypedObject, klass: CCClassConstructor<unknown>): void {\r\n        let deserialize: CompiledDeserializeFn;\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (klass.hasOwnProperty('__deserialize__')) {\r\n            deserialize = klass.__deserialize__ as CompiledDeserializeFn;\r\n        } else {\r\n            deserialize = compileDeserialize(this, klass);\r\n\r\n            // DEBUG: Check MissingScript data for issue 9878\r\n            try {\r\n                if (klass === MissingScript) {\r\n                    const props: string[] = klass.__values__;\r\n                    if (props.length === 0 || props[props.length - 1] !== '_$erialized') {\r\n                        errorID(16341);\r\n                        errorID(16342, props.join(', '));\r\n                        // props.push('_$erialized');\r\n                    }\r\n\r\n                    const rawDeserialize: CompiledDeserializeFn = deserialize;\r\n                    deserialize = function (\r\n                        deserializer: _Deserializer,\r\n                        object: Record<string, unknown>,\r\n                        deserialized: Record<string, unknown>,\r\n                        constructor: AnyFunction,\r\n                    ): void {\r\n                        rawDeserialize(deserializer, object, deserialized, constructor);\r\n                        if (!object._$erialized) {\r\n                            errorID(16343, JSON.stringify(deserialized));\r\n                        }\r\n                    };\r\n                }\r\n            } catch (e) {\r\n                errorID(16344, `${e}`);\r\n            }\r\n\r\n            js.value(klass, '__deserialize__', deserialize, true);\r\n        }\r\n        deserialize(this, obj, serialized, klass);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _deserializeAndAssignField (\r\n        obj: Record<PropertyKey, unknown> | unknown[],\r\n        serializedField: SerializedFieldObjectValue,\r\n        propName: string,\r\n    ): boolean {\r\n        const id = (serializedField as Partial<SerializedObjectReference>).__id__;\r\n        if (typeof id === 'number') {\r\n            const field = this.deserializedList[id];\r\n            if (field) {\r\n                obj[propName] = field;\r\n            } else {\r\n                // TODO: assertion\r\n                const source = (this._serializedData as SerializedObject[])[id];\r\n                if (EDITOR || TEST) {\r\n                    obj[propName] = this._deserializeObject(source, id, obj, propName);\r\n                } else {\r\n                    obj[propName] = this._deserializeObject(source, id, undefined, propName);\r\n                }\r\n                this._onDereferenced?.(this.deserializedList, id, obj, propName);\r\n            }\r\n        } else {\r\n            const uuid = (serializedField as Partial<SerializedUUIDReference>).__uuid__;\r\n            if (uuid) {\r\n                const expectedType = (serializedField as SerializedUUIDReference).__expectedType__;\r\n                this.result.push(obj, propName, uuid, expectedType);\r\n            } else if (EDITOR || TEST) {\r\n                obj[propName] = this._deserializeObject(serializedField as SerializedObject, -1, obj, propName);\r\n            } else {\r\n                obj[propName] = this._deserializeObject(serializedField as SerializedObject, -1);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _deserializeObjectField (serializedField: SerializedFieldObjectValue): Record<string, any> | null {\r\n        const id = (serializedField as Partial<SerializedObjectReference>).__id__;\r\n        if (typeof id === 'number') {\r\n            const field = this.deserializedList[id];\r\n            if (field) {\r\n                return field;\r\n            } else {\r\n                // TODO: assertion\r\n                const source = (this._serializedData as SerializedObject[])[id];\r\n                const field = this._deserializeObject(source, id, undefined, undefined);\r\n                return field;\r\n            }\r\n        } else {\r\n            const uuid = (serializedField as Partial<SerializedUUIDReference>).__uuid__;\r\n            if (uuid) {\r\n                const _expectedType = (serializedField as SerializedUUIDReference).__expectedType__;\r\n                throw new Error(`Asset reference field serialization is currently not supported in custom serialization.`);\r\n            } else {\r\n                return this._deserializeObject(serializedField as SerializedObject, -1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _fillPlainObject (instance: Record<string, unknown>, serialized: Record<string, unknown>): void {\r\n        for (const propName in serialized) {\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (!serialized.hasOwnProperty(propName)) {\r\n                continue;\r\n            }\r\n            const prop = serialized[propName];\r\n            if (typeof prop !== 'object') {\r\n                if (propName !== '__type__'/* && k != '__id__' */) {\r\n                    instance[propName] = prop;\r\n                }\r\n            } else if (prop) {\r\n                const isAssetType = this._deserializeAndAssignField(instance, prop, propName);\r\n                if (isAssetType) {\r\n                    // fill default value for primitive objects (no constructor)\r\n                    instance[propName] = null;\r\n                }\r\n            } else {\r\n                instance[propName] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _deserializeFastDefinedObject (\r\n        instance: Record<PropertyKey, unknown>,\r\n        serialized: SerializedGeneralTypedObject,\r\n        klass: SerializableClassConstructor,\r\n    ): void {\r\n        if (klass === cclegacy.Vec2) {\r\n            interface SerializedVec2 { x?: number; y?: number; }\r\n            instance.x = (serialized as SerializedVec2).x || 0;\r\n            instance.y = (serialized as SerializedVec2).y || 0;\r\n            return;\r\n        } else if (klass === cclegacy.Vec3) {\r\n            interface SerializedVec3 { x?: number; y?: number; z?: number; }\r\n            instance.x = (serialized as SerializedVec3).x || 0;\r\n            instance.y = (serialized as SerializedVec3).y || 0;\r\n            instance.z = (serialized as SerializedVec3).z || 0;\r\n            return;\r\n        } else if (klass === cclegacy.Color) {\r\n            interface SerializedColor { r?: number; g?: number; b?: number; a?: number; }\r\n            instance.r = (serialized as SerializedColor).r || 0;\r\n            instance.g = (serialized as SerializedColor).g || 0;\r\n            instance.b = (serialized as SerializedColor).b || 0;\r\n            const a = (serialized as SerializedColor).a;\r\n            instance.a = (a === undefined ? 255 : a);\r\n            return;\r\n        } else if (klass === cclegacy.Size) {\r\n            interface SerializedSize { width?: number; height?: number; }\r\n            instance.width = (serialized as SerializedSize).width || 0;\r\n            instance.height = (serialized as SerializedSize).height || 0;\r\n            return;\r\n        }\r\n\r\n        const attrs = CCClass.Attr.getClassAttrs(klass);\r\n        // TODO: `__values__` is injected property\r\n        // issue: https://github.com/cocos/cocos-engine/issues/14642\r\n        const props: string[] = (klass as any).__values__;\r\n        if (DEBUG && !props) {\r\n            error(`Unable to deserialize ${js.getClassName(klass)}. `\r\n                + 'For non-CCClass types, they can only be marked as serializable by `CCClass.fastDefine`.');\r\n        }\r\n\r\n        for (let i = 0; i < props.length; i++) {\r\n            const propName: string = props[i];\r\n            let value = serialized[propName];\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            const exists: boolean = (value !== undefined || serialized.hasOwnProperty(propName));\r\n            if (!exists) {\r\n                // not serialized,\r\n                // recover to default value in ValueType, because eliminated properties equals to\r\n                // its default value in ValueType, not default value in user class\r\n                value = CCClass.getDefault(attrs[propName + POSTFIX_DEFAULT]);\r\n            }\r\n\r\n            if (typeof value !== 'object') {\r\n                instance[propName] = value;\r\n            } else if (value) {\r\n                this._deserializeAndAssignField(instance, value, propName);\r\n            } else {\r\n                instance[propName] = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface DeserializeDynamicOptions {\r\n    classFinder?: ClassFinder;\r\n    ignoreEditorOnly?: boolean;\r\n    createAssetRefs?: boolean;\r\n    customEnv?: unknown;\r\n    reportMissingClass?: ReportMissingClass;\r\n}\r\n\r\nexport function deserializeDynamic (data: SerializedData | CCON, details: Details, options?: DeserializeDynamicOptions): any {\r\n    options = options || {};\r\n    const classFinder = options.classFinder || js.getClassById;\r\n    const createAssetRefs = options.createAssetRefs || sys.platform === Platform.EDITOR_CORE;\r\n    const customEnv = options.customEnv;\r\n    const ignoreEditorOnly = options.ignoreEditorOnly;\r\n    const reportMissingClass = options.reportMissingClass ?? cclegacy.deserialize.reportMissingClass;\r\n\r\n    // var oldJson = JSON.stringify(data, null, 2);\r\n\r\n    details.init();\r\n\r\n    // TODO: this should be a HACK, we've changed the method signature\r\n    // workaround: mark pool as type of any.\r\n    // issue: https://github.com/cocos/cocos-engine/issues/14642\r\n    const deserializer = (_Deserializer.pool as any).get(details, classFinder, reportMissingClass, customEnv, ignoreEditorOnly);\r\n\r\n    cclegacy.game._isCloning = true;\r\n    const res = deserializer.deserialize(data);\r\n    cclegacy.game._isCloning = false;\r\n\r\n    _Deserializer.pool.put(deserializer);\r\n    if (createAssetRefs) {\r\n        details.assignAssetsBy((uuid, options) => (EditorExtends.serialize.asAsset(uuid, options.type) as Asset));\r\n    }\r\n\r\n    // var afterJson = JSON.stringify(data, null, 2);\r\n    // if (oldJson !== afterJson) {\r\n    //     throw new Error('JSON SHOULD not changed');\r\n    // }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return res;\r\n}\r\n\r\nexport function parseUuidDependenciesDynamic (serialized: unknown): string[] {\r\n    const depends: string[] = [];\r\n    const parseDependRecursively = (data: any, out: string[]): void => {\r\n        if (!data || typeof data !== 'object' || typeof data.__id__ === 'number') { return; }\r\n        const uuid = data.__uuid__;\r\n        if (Array.isArray(data)) {\r\n            for (let i = 0, l = data.length; i < l; i++) {\r\n                parseDependRecursively(data[i], out);\r\n            }\r\n        } else if (uuid) {\r\n            out.push(uuid);\r\n        } else {\r\n            for (const prop in data) {\r\n                parseDependRecursively(data[prop], out);\r\n            }\r\n        }\r\n    };\r\n    parseDependRecursively(serialized, depends);\r\n    return depends;\r\n}\r\n","import { JSB } from 'internal:constants';\r\nimport { Vec2, Vec3, Vec4, Color, Size, Rect, Quat, Mat4, assertIsTrue, ValueType } from '../../core';\r\nimport type { IRuntimeFileData } from '../deserialize';\r\n\r\n/**\r\n * If a value type is not registered in this list, it will be serialized as plain class.\r\n */\r\nconst constructorMap = [\r\n    Vec2,   // 0\r\n    Vec3,   // 1\r\n    Vec4,   // 2\r\n    Quat,   // 3\r\n    Color,  // 4\r\n    Size,   // 5\r\n    Rect,   // 6\r\n    Mat4,   // 7\r\n] as const;\r\n\r\ntype ConstructorMap = typeof constructorMap;\r\n\r\nexport type ValueTypeData = [\r\n    typeIndex: number,\r\n    ...values: number[],\r\n];\r\n\r\ntype SetterInput = [reserved: number, ...values: number[]];\r\n\r\ntype Setter<T> = (value: T, result: SetterInput) => void;\r\n\r\ntype SetterMapImpl<T extends readonly any[]> = T extends readonly [infer Head, ...infer Tails]\r\n    ? Head extends abstract new (...args: any) => any\r\n        ? readonly [Setter<InstanceType<Head>>, ...SetterMapImpl<Tails>]\r\n        : readonly [Head, ...SetterMapImpl<Tails>]\r\n    : readonly [];\r\n\r\ntype SetterMap = SetterMapImpl<ConstructorMap>;\r\n\r\nfunction vec4LikeSetter<T extends Vec4 | Quat> (obj: T, data: SetterInput): void {\r\n    obj.x = data[1];\r\n    obj.y = data[2];\r\n    obj.z = data[3];\r\n    obj.w = data[4];\r\n}\r\n\r\nconst setterMap: SetterMap = [\r\n    (obj: Vec2, data: SetterInput): void => {\r\n        obj.x = data[1];\r\n        obj.y = data[2];\r\n    },\r\n    (obj: Vec3, data: SetterInput): void => {\r\n        obj.x = data[1];\r\n        obj.y = data[2];\r\n        obj.z = data[3];\r\n    },\r\n    vec4LikeSetter,   // Vec4\r\n    vec4LikeSetter,   // Quat\r\n    (obj: Color, data: SetterInput): void => {\r\n        Color.fromUint32(obj, data[1]);\r\n    },\r\n    (obj: Size, data: SetterInput): void => {\r\n        obj.width = data[1];\r\n        obj.height = data[2];\r\n    },\r\n    (obj: Rect, data: SetterInput): void => {\r\n        obj.x = data[1];\r\n        obj.y = data[2];\r\n        obj.width = data[3];\r\n        obj.height = data[4];\r\n    },\r\n    (obj: Mat4, data: SetterInput): void => {\r\n        Mat4.fromArray(obj, data, 1);\r\n    },\r\n];\r\n\r\nexport function serializeBuiltinValueType (obj: ValueType): ValueTypeData | null {\r\n    const ctor = obj.constructor;\r\n    const typeId = (constructorMap as readonly any[]).indexOf(ctor);\r\n    switch (ctor) {\r\n    case Vec2:\r\n        return [typeId, (obj as Vec2).x, (obj as Vec2).y];\r\n    case Vec3:\r\n        return [typeId, (obj as Vec3).x, (obj as Vec3).y, (obj as Vec3).z];\r\n    case Vec4:\r\n    case Quat:\r\n        return [typeId, (obj as Vec4).x, (obj as Vec4).y, (obj as Vec4).z, (obj as Vec4).w];\r\n    case Color:\r\n        return [typeId, Color.toUint32((obj as Color))];\r\n    case Size:\r\n        return [typeId, (obj as Size).width, (obj as Size).height];\r\n    case Rect:\r\n        return [typeId, (obj as Rect).x, (obj as Rect).y, (obj as Rect).width, (obj as Rect).height];\r\n    case Mat4: {\r\n        const res: ValueTypeData = new Array<number>(1 + 16) as ValueTypeData;\r\n        res[0] = typeId;\r\n        Mat4.toArray(res, obj as Mat4, 1);\r\n        return res;\r\n    }\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function deserializeBuiltinValueType (data: IRuntimeFileData, owner: any, key: string, value: ValueTypeData): void {\r\n    const typeIndex = value[0];\r\n    assertIsTrue(typeIndex >= 0 && typeIndex < constructorMap.length);\r\n    const object = new (constructorMap[typeIndex])();\r\n    const setter = setterMap[typeIndex] as Setter<typeof object>;\r\n    setter(object, value);\r\n    owner[key] = object;\r\n}\r\n\r\nexport function deserializeBuiltinValueTypeInto (data: IRuntimeFileData, owner: any, key: string, value: ValueTypeData): void {\r\n    const typeIndex = value[0];\r\n    assertIsTrue(typeIndex >= 0 && typeIndex < constructorMap.length);\r\n    if (JSB) {\r\n        // The native layer type corresponding to the BuiltinValueTypes has not been exported exclude Color,\r\n        // so we need to set to native after value changed.\r\n        const tmp = owner[key];\r\n        const setter = setterMap[typeIndex] as Setter<typeof tmp>;\r\n        setter(tmp, value);\r\n        owner[key] = tmp;\r\n    } else {\r\n        const object = owner[key];\r\n        const setter = setterMap[typeIndex] as Setter<typeof object>;\r\n        setter(object, value);\r\n    }\r\n}\r\n\r\nexport {};\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST, PREVIEW, DEBUG, JSB, DEV } from 'internal:constants';\r\nimport { cclegacy, errorID, getError, js, assertIsTrue } from '../core';\r\n\r\nimport { deserializeDynamic, DeserializeDynamicOptions, parseUuidDependenciesDynamic } from './deserialize-dynamic';\r\nimport { Asset } from '../asset/assets/asset';\r\n\r\nimport type { CompiledDeserializeFn } from './deserialize-dynamic';\r\n\r\nimport { reportMissingClass as defaultReportMissingClass } from './report-missing-class';\r\n\r\nimport type { MapEnum, TupleSlice } from './deserialize-type-utilities';\r\n\r\nconst FORCE_COMPILED = false; // TODO: BUILD;\r\n\r\nimport { deserializeBuiltinValueType, deserializeBuiltinValueTypeInto } from './compiled/builtin-value-type';\r\n\r\n/** **************************************************************************\r\n * BUILT-IN TYPES / CONSTAINTS\r\n *************************************************************************** */\r\n\r\nconst SUPPORT_MIN_FORMAT_VERSION = 1;\r\nconst EMPTY_PLACEHOLDER = 0;\r\n\r\n/** **************************************************************************\r\n * TYPE DECLARATIONS\r\n *************************************************************************** */\r\n\r\n// Includes Bitwise NOT value.\r\n// Both T and U have non-negative integer ranges.\r\n// When the value >= 0 represents T\r\n// When the value is < 0, it represents ~U. Use ~x to extract the value of U.\r\ntype Bnot<T extends number, U extends number> = T|U;\r\n\r\n// Combines a boolean and a number into one value.\r\n// The number must >= 0.\r\n// When the value >= 0, the boolean is true, the number is value.\r\n// When the value < 0, the boolean is false, the number is ~value.\r\ntype BoolAndNum<B extends boolean, N extends number> = Bnot<N, N>;\r\n\r\ntype SharedString = string;\r\ntype Empty = typeof EMPTY_PLACEHOLDER;\r\ntype StringIndex = number;\r\ntype InstanceIndex = number;\r\ntype RootInstanceIndex = InstanceIndex;\r\ntype NoNativeDep = boolean;  // Indicates whether the asset depends on a native asset\r\ntype RootInfo = BoolAndNum<NoNativeDep, RootInstanceIndex>;\r\n\r\n// When the value >= 0 represents the string index\r\n// When the value is < 0, it just represents non-negative integer. Use ~x to extract the value.\r\ntype StringIndexBnotNumber = Bnot<StringIndex, number>;\r\n\r\n// A reverse index used to assign current parsing object to target command buffer so it could be assembled later.\r\n// Should >= REF.OBJ_OFFSET\r\ntype ReverseIndex = number;\r\n\r\n// Used to index the current object\r\ntype InstanceBnotReverseIndex = Bnot<InstanceIndex, ReverseIndex>;\r\n\r\n// shared with the editor\r\nexport declare namespace deserialize.Internal {\r\n    export type SharedString_ = SharedString;\r\n    export type Empty_ = Empty;\r\n    export type StringIndex_ = StringIndex;\r\n    export type InstanceIndex_ = InstanceIndex;\r\n    export type StringIndexBnotNumber_ = StringIndexBnotNumber;\r\n}\r\n\r\nconst enum DataTypeID {\r\n\r\n    // Fields that can be assigned directly, can be values in any JSON, or even a complex JSON array, object (no type).\r\n    // Contains null, no undefined, JSON does not support serialization of undefined.\r\n    // This is the only type that supports null, and all other advanced fields are forbidden with null values.\r\n    // If the value of an object is likely to be null, it needs to exist as a new class,\r\n    // but the probability of this is very low and will be analyzed below.\r\n    SimpleType = 0,\r\n\r\n    // --------------------------------------------------------------------------\r\n    // Except Simple, the rest belong to Advanced Type.\r\n\r\n    // Rarely will it be NULL, as NULL will be dropped as the default value.\r\n    InstanceRef,\r\n\r\n    // Arrays of exactly equal types.\r\n    // Arrays will have default values that developers will rarely assign to null manually.\r\n    Array_InstanceRef,\r\n    Array_AssetRefByInnerObj,\r\n\r\n    // Embedded object\r\n    // Rarely will it be NULL, as NULL will be dropped as the default value.\r\n    Class,\r\n\r\n    // Existing ValueType (created by the Class constructor).\r\n    // Developers will rarely manually assign a null.\r\n    ValueTypeCreated,\r\n\r\n    // Resource reference for embedded objects (such as arrays), the value is the index of DEPEND_OBJS.\r\n    // (The objects in INSTANCES do not need to dynamically resolve resource reference relationships, so there is no need to have the AssetRef type.)\r\n    AssetRefByInnerObj,\r\n\r\n    // Common TypedArray for legacyCC.Node only. Never be null.\r\n    TRS,\r\n\r\n    // ValueType without default value (in arrays, dictionaries).\r\n    // Developers will rarely manually assign a null.\r\n    ValueType,\r\n\r\n    Array_Class,\r\n\r\n    // CustomizedClass embedded in Class\r\n    CustomizedClass,\r\n\r\n    // Universal dictionary with unlimited types of values (except TypedArray)\r\n    Dict,\r\n\r\n    // Universal arrays, of any type (except TypedArray) and can be unequal.\r\n    // (The editor doesn't seem to have a good way of stopping arrays of unequal types either)\r\n    Array,\r\n\r\n    ARRAY_LENGTH,\r\n}\r\n\r\nexport declare namespace deserialize.Internal {\r\n    export import DataTypeID_ = DataTypeID;\r\n    export type DataTypes_ = DataTypes;\r\n}\r\n\r\ninterface DataTypes {\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    [DataTypeID.SimpleType]: number | string | boolean | null | object;\r\n    [DataTypeID.InstanceRef]: InstanceBnotReverseIndex;\r\n    [DataTypeID.Array_InstanceRef]: DataTypes[DataTypeID.InstanceRef][];\r\n    [DataTypeID.Array_AssetRefByInnerObj]: DataTypes[DataTypeID.AssetRefByInnerObj][];\r\n    [DataTypeID.Class]: IClassObjectData;\r\n    [DataTypeID.ValueTypeCreated]: IValueTypeData;\r\n    [DataTypeID.AssetRefByInnerObj]: number;\r\n    [DataTypeID.TRS]: ITRSData;\r\n    [DataTypeID.ValueType]: IValueTypeData;\r\n    [DataTypeID.Array_Class]: DataTypes[DataTypeID.Class][];\r\n    [DataTypeID.CustomizedClass]: ICustomObjectData;\r\n    [DataTypeID.Dict]: IDictData;\r\n    [DataTypeID.Array]: IArrayData;\r\n}\r\n\r\ntype PrimitiveObjectTypeID = (\r\n    DataTypeID.SimpleType | // SimpleType also includes any pure JSON object\r\n    DataTypeID.Array |\r\n    DataTypeID.Array_Class |\r\n    DataTypeID.Array_AssetRefByInnerObj |\r\n    DataTypeID.Array_InstanceRef |\r\n    DataTypeID.Dict\r\n);\r\n\r\ntype AdvancedTypeID = Exclude<DataTypeID, DataTypeID.SimpleType>;\r\n\r\n// Collection of all data types\r\ntype AnyData = DataTypes[keyof DataTypes];\r\n\r\ntype AdvancedData = DataTypes[Exclude<keyof DataTypes, DataTypeID.SimpleType>];\r\n\r\ntype OtherObjectData = ICustomObjectDataContent | Exclude<DataTypes[PrimitiveObjectTypeID], (number|string|boolean|null)>;\r\n\r\n// class Index of DataTypeID.CustomizedClass or PrimitiveObjectTypeID\r\ntype OtherObjectTypeID = Bnot<number, PrimitiveObjectTypeID>;\r\n\r\ntype Ctor<T> = new() => T;\r\n// Includes normal CCClass and fast defined class\r\nexport interface CCClassConstructor<T> extends Ctor<T> {\r\n    __values__: string[]\r\n    __deserialize__?: CompiledDeserializeFn;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype AnyCtor = Ctor<Object>;\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype AnyCCClass = CCClassConstructor<Object>;\r\n\r\nexport declare namespace deserialize.Internal {\r\n    export type AnyData_ = AnyData;\r\n    export type OtherObjectData_ = OtherObjectData;\r\n    export type OtherObjectTypeID_ = OtherObjectTypeID;\r\n    export type AnyCCClass_ = AnyCCClass;\r\n}\r\n\r\n/**\r\n * If the value type is different, different Classes will be generated\r\n */\r\nconst CLASS_TYPE = 0;\r\nconst CLASS_KEYS = 1;\r\nconst CLASS_PROP_TYPE_OFFSET = 2;\r\ntype IClass = [\r\n    string|AnyCtor,\r\n    string[],\r\n    // offset - It is used to specify the correspondence between the elements in CLASS_KEYS and their AdvancedType,\r\n    //          which is only valid for AdvancedType.\r\n    // When parsing, the type of IClass[CLASS_KEYS][x] is IClass[x + IClass[CLASS_PROP_TYPE_OFFSET]]\r\n    // When serializing, IClass[CLASS_PROP_TYPE_OFFSET] = CLASS_PROP_TYPE_OFFSET + 1 - (The number of SimpleType)\r\n    number,\r\n    // The AdvancedType type corresponding to the property.\r\n    ...DataTypeID[]\r\n];\r\n\r\n/**\r\n * Mask is used to define the properties and types that need to be deserialized.\r\n * Instances of the same class may have different Masks due to different default properties removed.\r\n */\r\nconst MASK_CLASS = 0;\r\ntype IMask = [\r\n    // The index of its Class\r\n    number,\r\n    // The indices of the property that needs to be deserialized in IClass, except that the last number represents OFFSET.\r\n    // All properties before OFFSET are SimpleType, and those starting at OFFSET are AdvancedType.\r\n    // default is 1\r\n    ...number[]\r\n];\r\n\r\nconst OBJ_DATA_MASK = 0;\r\ntype IClassObjectData = [\r\n    // The index of its Mask\r\n    number,\r\n    // Starting from 1, the values corresponding to the properties in the Mask\r\n    ...AnyData[]\r\n];\r\n\r\ntype ICustomObjectDataContent = any;\r\n\r\nconst CUSTOM_OBJ_DATA_CLASS = 0;\r\nconst CUSTOM_OBJ_DATA_CONTENT = 1;\r\ninterface ICustomObjectData extends Array<any> {\r\n    // The index of its Class\r\n    [CUSTOM_OBJ_DATA_CLASS]: number;\r\n    // Content\r\n    [CUSTOM_OBJ_DATA_CONTENT]: ICustomObjectDataContent;\r\n}\r\n\r\ntype IValueTypeData = [\r\n    // Predefined parsing function index\r\n    number,\r\n    // Starting with 1, the corresponding value in the attributes are followed in order\r\n    ...number[]\r\n];\r\n\r\ntype ITRSData = [number, number, number, number, number,\r\n    number, number, number, number, number];\r\n\r\nconst DICT_JSON_LAYOUT = 0;\r\ninterface IDictData extends Array<any> {\r\n    // The raw json object\r\n    [DICT_JSON_LAYOUT]: any,\r\n    // key\r\n    // Shared strings are not considered here, can be defined as CCClass if it is required.\r\n    [1]: string;\r\n    // value type\r\n    // Should not be SimpleType, SimpleType is built directly into DICT_JSON_LAYOUT.\r\n    [2]: AdvancedTypeID;\r\n    // value\r\n    [3]: AdvancedData;\r\n    // More repeated key values\r\n    [index: number]: any,\r\n}\r\n\r\nconst ARRAY_ITEM_VALUES = 0;\r\ntype IArrayData = [\r\n    AnyData[],\r\n    // types\r\n    ...DataTypeID[]\r\n];\r\n\r\nexport declare namespace deserialize.Internal {\r\n    export type IClass_ = IClass;\r\n    export type IMask_ = IMask;\r\n    export type IClassObjectData_ = IClassObjectData;\r\n    export type ICustomObjectDataContent_ = ICustomObjectDataContent;\r\n    export type ICustomObjectData_ = ICustomObjectData;\r\n    export type ITRSData_ = ITRSData;\r\n    export type IDictData_ = IDictData;\r\n    export type IArrayData_ = IArrayData;\r\n}\r\n\r\nconst enum Refs {\r\n    EACH_RECORD_LENGTH = 3,\r\n    OWNER_OFFSET = 0,\r\n    KEY_OFFSET = 1,\r\n    TARGET_OFFSET = 2,\r\n}\r\n\r\ninterface IRefs extends Array<number> {\r\n    // owner\r\n    // The owner of all the objects in the front is of type object, starting from OFFSET * 3 are of type InstanceIndex\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    [0]: (object | InstanceIndex),\r\n    // property name\r\n    [1]?: StringIndexBnotNumber;\r\n    // target object\r\n    [2]?: InstanceIndex;\r\n    // All the following objects are arranged in the order of the first three values,\r\n    // except that the last number represents OFFSET.\r\n    [index: number]: any;\r\n}\r\n\r\nconst enum File {\r\n    Version = 0,\r\n    Context = 0,\r\n\r\n    SharedUuids,\r\n    SharedStrings,\r\n    SharedClasses,\r\n    SharedMasks,\r\n\r\n    Instances,\r\n    InstanceTypes,\r\n\r\n    Refs,\r\n\r\n    DependObjs,\r\n    DependKeys,\r\n    DependUuidIndices,\r\n\r\n    ARRAY_LENGTH,\r\n}\r\n\r\n// Main file structure\r\ninterface IFileDataMap {\r\n    // version\r\n    [File.Version]: number;\r\n\r\n    // Shared data area, the higher the number of references, the higher the position\r\n\r\n    [File.SharedUuids]: SharedString[] | Empty; // Shared uuid strings for dependent assets\r\n    [File.SharedStrings]: SharedString[] | Empty;\r\n    [File.SharedClasses]: (IClass|string|AnyCCClass)[];\r\n    [File.SharedMasks]: IMask[] | Empty;  // Shared Object layouts for IClassObjectData\r\n\r\n    // Data area\r\n\r\n    // A one-dimensional array to represent object datas, layout is [...IClassObjectData[], ...OtherObjectData[], RootInfo]\r\n    // If the last element is not RootInfo(number), the first element will be the root object to return and it doesn't have native asset\r\n    [File.Instances]: (IClassObjectData|OtherObjectData|RootInfo)[];\r\n    [File.InstanceTypes]: OtherObjectTypeID[] | Empty;\r\n    // Object references infomation\r\n    [File.Refs]: IRefs | Empty;\r\n\r\n    // Result area\r\n\r\n    // Asset-dependent objects that are deserialized and parsed into object arrays\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    [File.DependObjs]: (object|InstanceIndex)[];\r\n    // Asset-dependent key name or array index\r\n    [File.DependKeys]: (StringIndexBnotNumber|string)[];\r\n    // UUID of dependent assets\r\n    [File.DependUuidIndices]: (StringIndex|string)[];\r\n}\r\n\r\ntype IFileData = MapEnum<{\r\n    [x in keyof IFileDataMap as `${x}`]: IFileDataMap[x];\r\n}, 11 /* Currently we should manually specify the enumerators count. */>;\r\n\r\ntype IRuntimeFileDataMap = Omit<IFileDataMap, File.Version> & {\r\n    [File.Context]: FileInfo & DeserializeContext;\r\n}\r\n\r\n/**\r\n * At runtime, we intruded the original file data and injected some helpers.\r\n */\r\nexport type IRuntimeFileData = MapEnum<{\r\n    [x in keyof IRuntimeFileDataMap as `${x}`]: IRuntimeFileDataMap[x];\r\n}, 11 /* Currently we should manually specify the enumerators count. */>;\r\n\r\ntype IDeserializeInput = IFileData | IRuntimeFileData;\r\n\r\ntype ISharedData = TupleSlice<IFileData, 1, 5>;\r\n\r\ntype IPackedFileSection = [\r\n    ...document: TupleSlice<IFileData, 5>,\r\n];\r\n\r\nconst PACKED_SECTIONS = File.Instances;\r\n\r\ntype IPackedFileData = [\r\n    /** Version. */\r\n    version: number,\r\n\r\n    ...shared: ISharedData,\r\n\r\n    sections: IPackedFileSection[],\r\n];\r\n\r\nexport declare namespace deserialize.Internal {\r\n    export import Refs_ = Refs;\r\n    export type IRefs_ = IRefs;\r\n    export import File_ = File;\r\n    export type IFileData_ = IFileData;\r\n    export type IPackedFileData_ = IPackedFileData;\r\n}\r\n\r\ninterface ICustomHandler {\r\n    result: Details,\r\n    customEnv: any,\r\n}\r\ntype ClassFinder = deserialize.ClassFinder;\r\n\r\ninterface DeserializeContext extends ICustomHandler {\r\n    _version?: number;\r\n}\r\n\r\ninterface IOptions extends Partial<ICustomHandler> {\r\n    classFinder?: ClassFinder;\r\n    reportMissingClass?: deserialize.ReportMissingClass;\r\n}\r\n\r\ninterface ICustomClass {\r\n    _deserialize?: (content: any, context: ICustomHandler) => void;\r\n}\r\n\r\n/** **************************************************************************\r\n * IMPLEMENTS\r\n *************************************************************************** */\r\n\r\n/**\r\n * @en Contains information collected during deserialization\r\n * @zh 包含反序列化时的一些信息。\r\n * @class Details\r\n */\r\nexport class Details {\r\n    /**\r\n     * @en\r\n     * the object list whose field needs to load asset by uuid\r\n     * @zh\r\n     * 对象列表，其中每个对象有属性需要通过 uuid 进行资源加载\r\n     */\r\n    uuidObjList: IRuntimeFileData[File.DependObjs] | null = null;\r\n    /**\r\n     * @en\r\n     * the corresponding field name which referenced to the asset\r\n     * @zh\r\n     * 引用着资源的字段名称\r\n     */\r\n    uuidPropList: IRuntimeFileData[File.DependKeys] | null = null;\r\n    /**\r\n     * @en\r\n     * list of the depends assets' uuid\r\n     * @zh\r\n     * 依赖资源的 uuid 列表\r\n     */\r\n    uuidList: IRuntimeFileData[File.DependUuidIndices] | null = null;\r\n\r\n    /**\r\n     * @en\r\n     * list of the depends assets' type\r\n     * @zh\r\n     * 依赖的资源类型列表\r\n     */\r\n    uuidTypeList: string[] = [];\r\n\r\n    static pool = new js.Pool((obj: Details) => {\r\n        obj.reset();\r\n    }, 5);\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public declare assignAssetsBy: (getter: (uuid: string, options: {\r\n        type: Constructor<Asset>;\r\n        owner: Record<string, unknown>;\r\n        prop: string;\r\n    }) => Asset) => void;\r\n\r\n    /**\r\n     * @method init\r\n     * @param {Object} data\r\n     */\r\n    init (data?: IDeserializeInput): void {\r\n        if (FORCE_COMPILED || data) {\r\n            this.uuidObjList = data![File.DependObjs];\r\n            this.uuidPropList = data![File.DependKeys];\r\n            this.uuidList = data![File.DependUuidIndices];\r\n        } else {\r\n            // could be used by deserialize-dynamic\r\n            const used = this.uuidList;\r\n            if (!used) {\r\n                this.uuidList = [];\r\n                this.uuidObjList = [];\r\n                this.uuidPropList = [];\r\n                this.uuidTypeList = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method reset\r\n     */\r\n    reset  (): void {\r\n        if (FORCE_COMPILED) {\r\n            this.uuidList = null;\r\n            this.uuidObjList = null;\r\n            this.uuidPropList = null;\r\n        } else {\r\n            // could be reused by deserialize-dynamic\r\n            const used = this.uuidList;\r\n            if (used) {\r\n                this.uuidList!.length = 0;\r\n                this.uuidObjList!.length = 0;\r\n                this.uuidPropList!.length = 0;\r\n                this.uuidTypeList.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method push\r\n     * @param {Object} obj\r\n     * @param {String} propName\r\n     * @param {String} uuid\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    push (obj: object, propName: string, uuid: string, type?: string): void {\r\n        this.uuidObjList!.push(obj);\r\n        this.uuidPropList!.push(propName);\r\n        this.uuidList!.push(uuid);\r\n        this.uuidTypeList.push(type || '');\r\n    }\r\n}\r\nDetails.pool.get = function (): Details {\r\n    return this._get() || new Details();\r\n};\r\nif (EDITOR || TEST) {\r\n    Details.prototype.assignAssetsBy = function (getter: (uuid: string, options: {\r\n        type: Constructor<Asset>;\r\n        owner: Record<string, unknown>;\r\n        prop: string;\r\n    }) => any): void {\r\n        for (let i = 0, len = this.uuidList!.length; i < len; i++) {\r\n            const obj = this.uuidObjList![i] as Record<string, unknown>;\r\n            const prop = this.uuidPropList![i] as string;\r\n            const uuid = this.uuidList![i];\r\n            const type = this.uuidTypeList[i];\r\n            const _type = js.getClassById(type) as Constructor<Asset> || Asset;\r\n            obj[prop] = getter(uuid as string, {\r\n                type: _type,\r\n                owner: obj,\r\n                prop,\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function dereference (refs: IRefs, instances: IRuntimeFileData[File.Instances], strings: IRuntimeFileData[File.SharedStrings]): void {\r\n    const dataLength = refs.length - 1;\r\n    let i = 0;\r\n    // owner is object\r\n    const instanceOffset: number = refs[dataLength] * Refs.EACH_RECORD_LENGTH;\r\n    for (; i < instanceOffset; i += Refs.EACH_RECORD_LENGTH) {\r\n        const owner = refs[i];\r\n\r\n        const target = instances[refs[i + Refs.TARGET_OFFSET]];\r\n        const keyIndex = refs[i + Refs.KEY_OFFSET] as StringIndexBnotNumber;\r\n        if (keyIndex >= 0) {\r\n            owner[strings[keyIndex]] = target;\r\n        } else {\r\n            owner[~keyIndex] = target;\r\n        }\r\n    }\r\n    // owner is instance index\r\n    for (; i < dataLength; i += Refs.EACH_RECORD_LENGTH) {\r\n        const owner = instances[refs[i]];\r\n\r\n        const target = instances[refs[i + Refs.TARGET_OFFSET]];\r\n        const keyIndex = refs[i + Refs.KEY_OFFSET] as StringIndexBnotNumber;\r\n        if (keyIndex >= 0) {\r\n            owner[strings[keyIndex]] = target;\r\n        } else {\r\n            owner[~keyIndex] = target;\r\n        }\r\n    }\r\n}\r\n\r\n//\r\n\r\nfunction deserializeCCObject (data: IRuntimeFileData, objectData: IClassObjectData): Record<string, any> {\r\n    const mask = data[File.SharedMasks][objectData[OBJ_DATA_MASK]];\r\n    const clazz = mask[MASK_CLASS];\r\n    const ctor = clazz[CLASS_TYPE] as Exclude<AnyCtor, ICustomClass>;\r\n    // if (!ctor) {\r\n    //     return null;\r\n    // }\r\n\r\n    // eslint-disable-next-line new-cap\r\n    const obj = new ctor();\r\n\r\n    const keys = clazz[CLASS_KEYS];\r\n    const classTypeOffset = clazz[CLASS_PROP_TYPE_OFFSET];\r\n    const maskTypeOffset = mask[mask.length - 1];\r\n\r\n    // parse simple type\r\n    let i = MASK_CLASS + 1;\r\n    for (; i < maskTypeOffset; ++i) {\r\n        const key = keys[mask[i]];\r\n        obj[key] = objectData[i];\r\n    }\r\n\r\n    // parse advanced type\r\n    for (; i < objectData.length; ++i) {\r\n        const key = keys[mask[i]];\r\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\r\n        const type = clazz[mask[i] + classTypeOffset];\r\n        const op = ASSIGNMENTS[type];\r\n        op(data, obj, key, objectData[i]);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nfunction deserializeCustomCCObject (data: IRuntimeFileData, ctor: Ctor<ICustomClass>, value: ICustomObjectDataContent): ICustomClass {\r\n    // eslint-disable-next-line new-cap\r\n    const obj = new ctor();\r\n    if (obj._deserialize) {\r\n        obj._deserialize(value, data[File.Context]);\r\n    } else {\r\n        errorID(5303, js.getClassName(ctor));\r\n    }\r\n    return obj;\r\n}\r\n\r\n// Parse Functions\r\n\r\ntype ParseFunction<T> = (data: IRuntimeFileData, owner: any, key: string, value: T) => void;\r\n\r\nfunction assignSimple (data: IRuntimeFileData, owner: any, key: string, value: DataTypes[DataTypeID.SimpleType]): void {\r\n    owner[key] = value;\r\n}\r\n\r\nfunction assignInstanceRef (data: IRuntimeFileData, owner: any, key: string, value: InstanceBnotReverseIndex): void {\r\n    if (value >= 0) {\r\n        owner[key] = data[File.Instances][value];\r\n    } else {\r\n        (data[File.Refs] as IRefs)[(~value) * Refs.EACH_RECORD_LENGTH] = owner;\r\n    }\r\n}\r\n\r\nfunction genArrayParser<T> (parser: ParseFunction<T>): ParseFunction<T[]> {\r\n    return (data: IRuntimeFileData, owner: any, key: string, value: T[]): void => {\r\n        for (let i = 0; i < value.length; ++i) {\r\n            parser(data, value, i as unknown as string, value[i]);\r\n        }\r\n        owner[key] = value;\r\n    };\r\n}\r\n\r\nfunction parseAssetRefByInnerObj (data: IRuntimeFileData, owner: any, key: string, value: number): void {\r\n    owner[key] = null;\r\n    data[File.DependObjs][value] = owner;\r\n}\r\n\r\nfunction parseClass (data: IRuntimeFileData, owner: any, key: string, value: IClassObjectData): void {\r\n    owner[key] = deserializeCCObject(data, value);\r\n}\r\n\r\nfunction parseCustomClass (data: IRuntimeFileData, owner: any, key: string, value: ICustomObjectData): void {\r\n    const ctor = data[File.SharedClasses][value[CUSTOM_OBJ_DATA_CLASS]] as CCClassConstructor<ICustomClass>;\r\n    owner[key] = deserializeCustomCCObject(data, ctor, value[CUSTOM_OBJ_DATA_CONTENT]);\r\n}\r\n\r\nfunction parseTRS (data: IRuntimeFileData, owner: any, key: string, value: ITRSData): void {\r\n    const typedArray = owner[key] as (Float32Array | Float64Array);\r\n    typedArray.set(value);\r\n}\r\n\r\nfunction parseDict (data: IRuntimeFileData, owner: any, key: string, value: IDictData): void {\r\n    const dict = value[DICT_JSON_LAYOUT];\r\n    owner[key] = dict;\r\n    for (let i = DICT_JSON_LAYOUT + 1; i < value.length; i += 3) {\r\n        const subKey = value[i] as string;\r\n        const subType = value[i + 1] as DataTypeID;\r\n        const subValue = value[i + 2] as AnyData;\r\n        const op = ASSIGNMENTS[subType];\r\n        op(data, dict, subKey, subValue);\r\n    }\r\n}\r\n\r\nfunction parseArray (data: IRuntimeFileData, owner: any, key: string, value: IArrayData): void {\r\n    const array = value[ARRAY_ITEM_VALUES];\r\n    for (let i = 0; i < array.length; ++i) {\r\n        const subValue = array[i];\r\n        const type = value[i + 1] as DataTypeID;\r\n        if (type !== DataTypeID.SimpleType) {\r\n            const op = ASSIGNMENTS[type];\r\n            op(data, array, i, subValue);\r\n        }\r\n    }\r\n\r\n    owner[key] = array;\r\n}\r\n\r\nconst ASSIGNMENTS: {\r\n    [K in keyof DataTypes]?: ParseFunction<DataTypes[K]>;\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\n} = new Array(DataTypeID.ARRAY_LENGTH) as {};\r\nASSIGNMENTS[DataTypeID.SimpleType] = assignSimple;    // Only be used in the instances array\r\nASSIGNMENTS[DataTypeID.InstanceRef] = assignInstanceRef;\r\nASSIGNMENTS[DataTypeID.Array_InstanceRef] = genArrayParser(assignInstanceRef);\r\nASSIGNMENTS[DataTypeID.Array_AssetRefByInnerObj] = genArrayParser(parseAssetRefByInnerObj);\r\nASSIGNMENTS[DataTypeID.Class] = parseClass;\r\nASSIGNMENTS[DataTypeID.ValueTypeCreated] = deserializeBuiltinValueTypeInto;\r\nASSIGNMENTS[DataTypeID.AssetRefByInnerObj] = parseAssetRefByInnerObj;\r\nASSIGNMENTS[DataTypeID.TRS] = parseTRS;\r\nASSIGNMENTS[DataTypeID.ValueType] = deserializeBuiltinValueType;\r\nASSIGNMENTS[DataTypeID.Array_Class] = genArrayParser(parseClass);\r\nASSIGNMENTS[DataTypeID.CustomizedClass] = parseCustomClass;\r\nASSIGNMENTS[DataTypeID.Dict] = parseDict;\r\nASSIGNMENTS[DataTypeID.Array] = parseArray;\r\n\r\nfunction parseInstances (data: IRuntimeFileData): RootInstanceIndex {\r\n    const instances = data[File.Instances];\r\n    const instanceTypes = data[File.InstanceTypes];\r\n    const instanceTypesLen = instanceTypes === EMPTY_PLACEHOLDER ? 0 : (instanceTypes).length;\r\n    let rootIndex = instances[instances.length - 1];\r\n    let normalObjectCount = instances.length - instanceTypesLen;\r\n    if (typeof rootIndex !== 'number') {\r\n        rootIndex = 0;\r\n    } else {\r\n        if (rootIndex < 0) {\r\n            rootIndex = ~rootIndex;\r\n        }\r\n        --normalObjectCount;\r\n    }\r\n\r\n    // DataTypeID.Class\r\n\r\n    let insIndex = 0;\r\n    for (; insIndex < normalObjectCount; ++insIndex) {\r\n        instances[insIndex] = deserializeCCObject(data, instances[insIndex] as IClassObjectData);\r\n    }\r\n\r\n    const classes = data[File.SharedClasses];\r\n    for (let typeIndex = 0; typeIndex < instanceTypesLen; ++typeIndex, ++insIndex) {\r\n        let type = instanceTypes[typeIndex] as OtherObjectTypeID;\r\n        const eachData = instances[insIndex];\r\n        if (type >= 0) {\r\n            // class index for DataTypeID.CustomizedClass\r\n\r\n            const ctor = classes[type] as CCClassConstructor<ICustomClass>;  // class\r\n            instances[insIndex] = deserializeCustomCCObject(data, ctor, eachData);\r\n        } else {\r\n            // Other\r\n\r\n            type = (~type) as PrimitiveObjectTypeID;\r\n            const op = ASSIGNMENTS[type];\r\n            op(data, instances, insIndex, eachData);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return rootIndex;\r\n}\r\n\r\n// const DESERIALIZE_AS = Attr.DELIMETER + 'deserializeAs';\r\n// function deserializeAs(klass: AnyCCClass, klassLayout: IClass) {\r\n//     var attrs = Attr.getClassAttrs(klass);\r\n//     let keys = klassLayout[CLASS_KEYS];\r\n//     for (let i = 0; i < keys.length; ++i) {\r\n//         let newKey = attrs[keys[i] + DESERIALIZE_AS];\r\n//         if (newKey) {\r\n//             // @ts-expect-error\r\n//             if (keys.includes(newKey)) {\r\n//                 // %s cannot be deserialized by property %s because %s was also present in the serialized data.\r\n//                 warnID(, newKey, keys[i], newKey);\r\n//             }\r\n//             else {\r\n//                 keys[i] = newKey;\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\nfunction getMissingClass (hasCustomFinder, type, reportMissingClass: deserialize.ReportMissingClass): ObjectConstructor {\r\n    if (!hasCustomFinder) {\r\n        reportMissingClass(type);\r\n    }\r\n    return Object;\r\n}\r\nfunction doLookupClass (classFinder, type: string, container: any[], index: number, silent: boolean, hasCustomFinder, reportMissingClass: deserialize.ReportMissingClass): void {\r\n    let klass = classFinder(type);\r\n    if (!klass) {\r\n        // if (klass.__FSA__) {\r\n        //     deserializeAs(klass, klassLayout as IClass);\r\n        // }\r\n        if (silent) {\r\n            // generate a lazy proxy for ctor\r\n            container[index] = ((c, i, t) => function proxy (): any {\r\n                const actualClass = classFinder(t) || getMissingClass(hasCustomFinder, t, reportMissingClass);\r\n                c[i] = actualClass;\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, new-cap\r\n                return new actualClass();\r\n            })(container, index, type);\r\n            return;\r\n        } else {\r\n            klass = getMissingClass(hasCustomFinder, type, reportMissingClass);\r\n        }\r\n    }\r\n    container[index] = klass;\r\n}\r\n\r\nfunction lookupClasses (data: [any, ...ISharedData, ...any[]], silent: boolean, customFinder: ClassFinder | undefined, reportMissingClass: deserialize.ReportMissingClass): void {\r\n    const classFinder = customFinder || js.getClassById;\r\n    const classes = data[File.SharedClasses];\r\n    for (let i = 0; i < classes.length; ++i) {\r\n        const klassLayout = classes[i];\r\n        if (typeof klassLayout !== 'string') {\r\n            if (DEBUG) {\r\n                if (typeof klassLayout[CLASS_TYPE] === 'function') {\r\n                    throw new Error('Can not deserialize the same JSON data again.');\r\n                }\r\n            }\r\n            const type: string = klassLayout[CLASS_TYPE];\r\n            doLookupClass(classFinder, type, klassLayout as IClass, CLASS_TYPE, silent, customFinder, reportMissingClass);\r\n        } else {\r\n            doLookupClass(classFinder, klassLayout, classes, i, silent, customFinder, reportMissingClass);\r\n        }\r\n    }\r\n}\r\n\r\nfunction cacheMasks (data: [any, ...ISharedData, ...any[]]): void {\r\n    const masks = data[File.SharedMasks];\r\n    if (masks) {\r\n        const classes = data[File.SharedClasses];\r\n        for (let i = 0; i < masks.length; ++i) {\r\n            const mask = masks[i];\r\n            mask[MASK_CLASS] = classes[mask[MASK_CLASS]] as unknown as number;\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseResult (data: IRuntimeFileData): void {\r\n    const instances = data[File.Instances];\r\n    const sharedStrings = data[File.SharedStrings];\r\n    const dependSharedUuids = data[File.SharedUuids];\r\n\r\n    const dependObjs = data[File.DependObjs];\r\n    const dependKeys = data[File.DependKeys];\r\n    const dependUuids = data[File.DependUuidIndices];\r\n\r\n    for (let i = 0; i < dependObjs.length; ++i) {\r\n        const obj: any = dependObjs[i];\r\n        if (typeof obj === 'number') {\r\n            dependObjs[i] = instances[obj];\r\n        } else {\r\n            // assigned by DataTypeID.AssetRefByInnerObj or added by Details object directly in _deserialize\r\n        }\r\n        let key: any = dependKeys[i];\r\n        if (typeof key === 'number') {\r\n            if (key >= 0) {\r\n                key = sharedStrings[key];\r\n            } else {\r\n                key = ~key;\r\n            }\r\n            dependKeys[i] = key;\r\n        } else {\r\n            // added by Details object directly in _deserialize\r\n        }\r\n        const uuid = dependUuids[i];\r\n        if (typeof uuid === 'number') {\r\n            dependUuids[i] = (dependSharedUuids as SharedString[])[uuid];\r\n        } else {\r\n            // added by Details object directly in _deserialize\r\n        }\r\n    }\r\n}\r\n\r\nexport function isCompiledJson (json: unknown): boolean {\r\n    if (Array.isArray(json)) {\r\n        const version = json[0];\r\n        // array[0] will not be a number in the editor version\r\n        return typeof version === 'number' || version instanceof FileInfo;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction initializeDeserializationContext(\r\n    data: IDeserializeInput,\r\n    details: Details,\r\n    options?: IOptions & DeserializeDynamicOptions,\r\n) {\r\n    details.init(data);\r\n\r\n    options ??= {};\r\n\r\n    let version = data[File.Version];\r\n    let preprocessed = false;\r\n    if (typeof version === 'object') {\r\n        preprocessed = version.preprocessed;\r\n        version = version.version;\r\n    }\r\n    if (version < SUPPORT_MIN_FORMAT_VERSION) {\r\n        throw new Error(getError(5304, version));\r\n    }\r\n\r\n    const context = options as IRuntimeFileData[File.Context];\r\n    context._version = version;\r\n    context.result = details;\r\n    data[File.Context] = context;\r\n\r\n    if (!preprocessed) {\r\n        lookupClasses(data as IRuntimeFileData, false, options.classFinder, options.reportMissingClass ?? deserialize.reportMissingClass);\r\n        cacheMasks(data as IRuntimeFileData);\r\n    }\r\n}\r\n\r\n/**\r\n * @en Deserializes a previously serialized object to reconstruct it to the original.\r\n * @zh 将序列化后的对象进行反序列化以使其复原。\r\n *\r\n * @param data Serialized data.\r\n * @param details - Additional loading result.\r\n * @param options Deserialization Options.\r\n * @return The original object.\r\n */\r\nexport function deserialize (data: IDeserializeInput | string | any, details?: Details, options?: IOptions & DeserializeDynamicOptions): unknown {\r\n    if (typeof data === 'string') {\r\n        data = JSON.parse(data);\r\n    }\r\n\r\n    let isBorrowedDetails = false;\r\n    if (!details) {\r\n        const borrowedDetails = Details.pool.get();\r\n        assertIsTrue(borrowedDetails, `Can not allocate deserialization details`);\r\n        details = borrowedDetails;\r\n        isBorrowedDetails = true;\r\n    }\r\n\r\n    let res;\r\n\r\n    if (!FORCE_COMPILED && !isCompiledJson(data)) {\r\n        res = deserializeDynamic(data, details, options);\r\n    } else {\r\n        initializeDeserializationContext(\r\n            data,\r\n            details,\r\n            options,\r\n        );\r\n\r\n        const runtimeData = data as IRuntimeFileData;\r\n\r\n        cclegacy.game._isCloning = true;\r\n        const instances = runtimeData[File.Instances];\r\n        const rootIndex = parseInstances(runtimeData);\r\n        cclegacy.game._isCloning = false;\r\n\r\n        if (runtimeData[File.Refs]) {\r\n            dereference(runtimeData[File.Refs] as IRefs, instances, runtimeData[File.SharedStrings]);\r\n        }\r\n\r\n        parseResult(runtimeData);\r\n\r\n        res = instances[rootIndex];\r\n    }\r\n\r\n    if (isBorrowedDetails) {\r\n        Details.pool.put(details);\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nexport declare namespace deserialize {\r\n    export type SerializableClassConstructor = new () => unknown;\r\n\r\n    export type ReportMissingClass = (id: string) => void;\r\n\r\n    export type ClassFinder = {\r\n        (id: string, serialized: unknown, owner?: unknown[] | Record<PropertyKey, unknown>, propName?: string): SerializableClassConstructor | undefined;\r\n\r\n        onDereferenced?: (deserializedList: Array<Record<PropertyKey, unknown> | undefined>, id: number, object: Record<string, unknown> | unknown[], propName: string) => void;\r\n    };\r\n}\r\n\r\ndeserialize.Details = Details;\r\ndeserialize.reportMissingClass = defaultReportMissingClass;\r\n\r\nclass FileInfo {\r\n    declare version: number;\r\n    preprocessed = true;\r\n    constructor (version: number) {\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport function unpackJSONs (\r\n    data: IPackedFileData, classFinder?: ClassFinder, reportMissingClass?: deserialize.ReportMissingClass): IDeserializeInput[] {\r\n    if (data[File.Version] < SUPPORT_MIN_FORMAT_VERSION) {\r\n        throw new Error(getError(5304, data[File.Version]));\r\n    }\r\n    lookupClasses(data, true, classFinder, reportMissingClass ?? deserialize.reportMissingClass);\r\n    cacheMasks(data);\r\n\r\n    const version = new FileInfo(data[File.Version]);\r\n    const sharedUuids = data[File.SharedUuids];\r\n    const sharedStrings = data[File.SharedStrings];\r\n    const sharedClasses = data[File.SharedClasses];\r\n    const sharedMasks = data[File.SharedMasks];\r\n\r\n    const sections = data[PACKED_SECTIONS];\r\n    for (let i = 0; i < sections.length; ++i) {\r\n        const section = sections[i];\r\n        (section as any[]).unshift(version, sharedUuids, sharedStrings, sharedClasses, sharedMasks);\r\n    }\r\n    return sections as unknown as IDeserializeInput[];\r\n}\r\n\r\nexport function packCustomObjData (type: string, data: IClassObjectData|OtherObjectData, hasNativeDep?: boolean): IFileData {\r\n    return [\r\n        SUPPORT_MIN_FORMAT_VERSION, EMPTY_PLACEHOLDER, EMPTY_PLACEHOLDER,\r\n        [type],\r\n        EMPTY_PLACEHOLDER,\r\n        hasNativeDep ? [data, ~0] : [data],\r\n        [0],\r\n        EMPTY_PLACEHOLDER, [], [], [],\r\n    ];\r\n}\r\n\r\nexport function hasNativeDep (data: IRuntimeFileData): boolean {\r\n    const instances = data[File.Instances];\r\n    const rootInfo = instances[instances.length - 1];\r\n    if (typeof rootInfo !== 'number') {\r\n        return false;\r\n    } else {\r\n        return rootInfo < 0;\r\n    }\r\n}\r\n\r\nfunction getDependUuidList (json: IRuntimeFileData): string[] {\r\n    const sharedUuids = json[File.SharedUuids];\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return json[File.DependUuidIndices].map((index) => sharedUuids[index]);\r\n}\r\n\r\nexport function parseUuidDependencies (serialized: unknown): string[] {\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    if (!DEV || isCompiledJson(serialized as object)) {\r\n        return getDependUuidList(serialized as IRuntimeFileData);\r\n    } else {\r\n        return parseUuidDependenciesDynamic(serialized);\r\n    }\r\n}\r\n\r\nif (PREVIEW) {\r\n    deserialize.isCompiledJson = isCompiledJson;\r\n}\r\n\r\nif (EDITOR || TEST) {\r\n    deserialize._macros = {\r\n        EMPTY_PLACEHOLDER,\r\n        CUSTOM_OBJ_DATA_CLASS,\r\n        CUSTOM_OBJ_DATA_CONTENT,\r\n        CLASS_TYPE,\r\n        CLASS_KEYS,\r\n        CLASS_PROP_TYPE_OFFSET,\r\n        MASK_CLASS,\r\n        OBJ_DATA_MASK,\r\n        DICT_JSON_LAYOUT,\r\n        ARRAY_ITEM_VALUES,\r\n        PACKED_SECTIONS,\r\n    } as {\r\n        // freeze values (EMPTY_PLACEHOLDER: number -> EMPTY_PLACEHOLDER: 0)\r\n        EMPTY_PLACEHOLDER: typeof EMPTY_PLACEHOLDER,\r\n        CUSTOM_OBJ_DATA_CLASS: typeof CUSTOM_OBJ_DATA_CLASS,\r\n        CUSTOM_OBJ_DATA_CONTENT: typeof CUSTOM_OBJ_DATA_CONTENT,\r\n        CLASS_TYPE: typeof CLASS_TYPE,\r\n        CLASS_KEYS: typeof CLASS_KEYS,\r\n        CLASS_PROP_TYPE_OFFSET: typeof CLASS_PROP_TYPE_OFFSET,\r\n        MASK_CLASS: typeof MASK_CLASS,\r\n        OBJ_DATA_MASK: typeof OBJ_DATA_MASK,\r\n        DICT_JSON_LAYOUT: typeof DICT_JSON_LAYOUT,\r\n        ARRAY_ITEM_VALUES: typeof ARRAY_ITEM_VALUES,\r\n        PACKED_SECTIONS: typeof PACKED_SECTIONS,\r\n    };\r\n}\r\n\r\nif (TEST) {\r\n    cclegacy._Test.deserializeCompiled = {\r\n        deserialize,\r\n        dereference,\r\n        deserializeCCObject,\r\n        deserializeCustomCCObject,\r\n        parseInstances,\r\n        parseResult,\r\n        cacheMasks,\r\n        File: {\r\n            Version: File.Version,\r\n            Context: File.Context,\r\n            SharedUuids: File.SharedUuids,\r\n            SharedStrings: File.SharedStrings,\r\n            SharedClasses: File.SharedClasses,\r\n            SharedMasks: File.SharedMasks,\r\n            Instances: File.Instances,\r\n            InstanceTypes: File.InstanceTypes,\r\n            Refs: File.Refs,\r\n            DependObjs: File.DependObjs,\r\n            DependKeys: File.DependKeys,\r\n            DependUuidIndices: File.DependUuidIndices,\r\n            // ArrayLength: File.ArrayLength,\r\n        },\r\n        DataTypeID: {\r\n            SimpleType: DataTypeID.SimpleType,\r\n            InstanceRef: DataTypeID.InstanceRef,\r\n            Array_InstanceRef: DataTypeID.Array_InstanceRef,\r\n            Array_AssetRefByInnerObj: DataTypeID.Array_AssetRefByInnerObj,\r\n            Class: DataTypeID.Class,\r\n            ValueTypeCreated: DataTypeID.ValueTypeCreated,\r\n            AssetRefByInnerObj: DataTypeID.AssetRefByInnerObj,\r\n            TRS: DataTypeID.TRS,\r\n            ValueType: DataTypeID.ValueType,\r\n            Array_Class: DataTypeID.Array_Class,\r\n            CustomizedClass: DataTypeID.CustomizedClass,\r\n            Dict: DataTypeID.Dict,\r\n            Array: DataTypeID.Array,\r\n        },\r\n        unpackJSONs,\r\n    };\r\n}\r\n\r\ncclegacy.deserialize = deserialize;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { errorID } from '../core';\r\n\r\n/**\r\n *\r\n * @engineInternal\r\n */\r\nexport function reportMissingClass (id: string): void {\r\n    if (EDITOR && EditorExtends.UuidUtils.isUuid(id)) {\r\n        id = EditorExtends.UuidUtils.decompressUuid(id);\r\n        errorID(5301, id);\r\n    } else {\r\n        errorID(5302, id);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport type { Asset } from '../assets/asset';\r\nimport type { IDependProp } from './deserialize';\r\n\r\nexport const dependMap: WeakMap<Asset, IDependProp[]> = new WeakMap();\r\n\r\nexport const nativeDependMap: WeakSet<Asset> = new WeakSet();\r\n\r\nexport const onLoadedInvokedMap: WeakSet<Asset> = new WeakSet();\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { Asset } from '../assets/asset';\r\nimport { MissingScript } from '../../misc/missing-script';\r\nimport { deserialize, Details } from '../../serialization/deserialize';\r\nimport { error, js } from '../../core';\r\nimport { dependMap, nativeDependMap } from './depend-maps';\r\nimport { decodeUuid } from './helper';\r\n\r\nconst missingClass: any = EDITOR && EditorExtends.MissingReporter.classInstance;\r\n\r\nexport interface IDependProp {\r\n    uuid: string;\r\n    owner: any;\r\n    prop: string;\r\n    type?: Constructor<Asset>;\r\n}\r\n\r\nexport default function deserializeAsset (json: Record<string, any>, options: Record<string, any> & {\r\n    __uuid__?: string;\r\n}): Asset {\r\n    let classFinder: deserialize.ClassFinder;\r\n    if (EDITOR) {\r\n        classFinder = (type, data, owner, propName): Constructor<unknown> => {\r\n            const res = missingClass.classFinder(type, data, owner, propName);\r\n            if (res) {\r\n                return res as Constructor<unknown>;\r\n            }\r\n            return MissingScript;\r\n        };\r\n        classFinder.onDereferenced = missingClass.classFinder.onDereferenced;\r\n    } else {\r\n        classFinder = MissingScript.safeFindClass;\r\n    }\r\n\r\n    const tdInfo = Details.pool.get() as Details;\r\n\r\n    let asset: Asset;\r\n    try {\r\n        asset = deserialize(json, tdInfo, {\r\n            classFinder,\r\n            customEnv: options,\r\n        }) as Asset;\r\n    } catch (e) {\r\n        error(e);\r\n        Details.pool.put(tdInfo);\r\n        throw e;\r\n    }\r\n\r\n    asset._uuid = options.__uuid__ || '';\r\n\r\n    if (EDITOR) {\r\n        missingClass.reportMissingClass(asset);\r\n        missingClass.reset();\r\n    }\r\n\r\n    const uuidList = tdInfo.uuidList! as string[];\r\n    const objList = tdInfo.uuidObjList!;\r\n    const propList = tdInfo.uuidPropList! as string[];\r\n    const typeList = (tdInfo.uuidTypeList || []);\r\n    const depends: IDependProp[] = [];\r\n\r\n    for (let i = 0; i < uuidList.length; i++) {\r\n        const dependUuid = uuidList[i];\r\n        depends[i] = {\r\n            uuid: decodeUuid(dependUuid),\r\n            owner: objList[i],\r\n            prop: propList[i],\r\n            type: js.getClassById(typeList[i]) as Constructor<Asset>,\r\n        };\r\n    }\r\n\r\n    // non-native deps\r\n    dependMap.set(asset, depends);\r\n    // native dep\r\n    if (asset._native) {\r\n        nativeDependMap.add(asset);\r\n    }\r\n    Details.pool.put(tdInfo);\r\n    return asset;\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BUILD, EDITOR } from 'internal:constants';\r\nimport { Asset } from '../assets';\r\nimport { hasNativeDep, isCompiledJson, parseUuidDependencies } from '../../serialization/deserialize';\r\nimport Cache from './cache';\r\nimport deserialize from './deserialize';\r\nimport { decodeUuid } from './helper';\r\nimport { files, parsed } from './shared';\r\nimport { dependMap, nativeDependMap } from './depend-maps';\r\nimport { assertIsNonNullable } from '../../core';\r\nimport { CCON } from '../../serialization/ccon';\r\n\r\nexport interface IDependencies {\r\n    nativeDep?: Record<string, any>;\r\n    deps: string[];\r\n    parsedFromExistAsset?: boolean;\r\n    persistDeps?: string[];\r\n}\r\n\r\n/**\r\n * @en\r\n * Manages asset's dependency list, it is a singleton. You can access it via [[AssetManager.dependUtil]].\r\n *\r\n * @zh\r\n * 管理资源的依赖列表，这是一个单例, 你能通过 [[AssetManager.dependUtil]] 访问它。\r\n *\r\n */\r\nexport class DependUtil {\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _depends: Cache<IDependencies> = new Cache<IDependencies>();\r\n    private static _instance: DependUtil;\r\n    /**\r\n     * @en Global singleton for [[DependUtil]]. You can access it via [[AssetManager.dependUtil]].\r\n     * @zh [[DependUtil]] 的全局单例. 你可以通过 [[AssetManager.dependUtil]] 访问.\r\n     */\r\n    static get instance (): DependUtil {\r\n        if (!this._instance) {\r\n            this._instance = new DependUtil();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    private constructor () {}\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public init (): void {\r\n        this._depends.clear();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets asset's native dependency. For example, ImageAsset's native dependency is image.\r\n     * Note: You will need to have loaded this resource to query this information.\r\n     *\r\n     * @zh\r\n     * 获取资源的原生依赖，例如 ImageAsset 的原生依赖是图片。\r\n     * 注意：你需要加载过该资源，才能查询此信息。\r\n     *\r\n     * @param uuid @en asset's uuid. @zh 资源的 uuid。\r\n     * @returns @en The native dependency information of this asset. @zh 资源的原生依赖的信息。\r\n     *\r\n     * @example\r\n     * var dep = dependUtil.getNativeDep('fcmR3XADNLgJ1ByKhqcC5Z');\r\n     * @deprecated Since v3.7, this is an engine internal interface.\r\n     * If you want to know the native dependency of the asset, use [[Asset.nativeUrl]] instead.\r\n     */\r\n    public getNativeDep (uuid: string): Record<string, any> | null {\r\n        const depend = this._depends.get(uuid);\r\n        if (depend && depend.nativeDep) {\r\n            return { ...depend.nativeDep };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets asset's direct referencing dependency list. For example, Material's dependencies are Texture, effect asset etc.\r\n     * Note: You will need to have loaded this resource to query this information.\r\n     *\r\n     * @zh\r\n     * 获取资源直接引用的依赖列表，例如，材质的直接依赖资源是 Texture, Effect 等。\r\n     * 注意：你需要加载过该资源，才能查询此信息。\r\n     *\r\n     * @param uuid @en asset's uuid. @zh 资源的 uuid。\r\n     * @returns @en The direct referencing dependency asset list. @zh 直接引用的依赖资源列表。\r\n     *\r\n     * @example\r\n     * var deps = dependUtil.getDeps('fcmR3XADNLgJ1ByKhqcC5Z');\r\n     *\r\n     */\r\n    public getDeps (uuid: string): string[] {\r\n        if (this._depends.has(uuid)) {\r\n            return this._depends.get(uuid)!.deps;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets dependency list of the loaded asset, include indirect reference.\r\n     * Note: You will need to have loaded this resource to query this information.\r\n     *\r\n     * @zh\r\n     * 获取某个已经加载好的资源的所有依赖资源列表，包括间接引用的资源，并保存在数组中返回。\r\n     * 注意：你需要加载过该资源，才能查询此信息。\r\n     *\r\n     * @param uuid @en asset's uuid. @zh 资源的 uuid。\r\n     * @returns\r\n     * @en The all dependency list including direct reference and indirect reference.\r\n     * @zh 所有依赖列表，包括直接引用的与间接引用的。\r\n     *\r\n     * @example\r\n     * var deps = dependUtil.getDepsRecursively('fcmR3XADNLgJ1ByKhqcC5Z');\r\n     *\r\n     */\r\n    public getDepsRecursively (uuid: string): string[] {\r\n        const exclude: Record<string, any> = Object.create(null);\r\n        const depends = [];\r\n        this._descend(uuid, exclude, depends);\r\n        return depends;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public remove (uuid: string): void {\r\n        this._depends.remove(uuid);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Extracts dependency list from serialized data or asset and then store in cache.\r\n     *\r\n     * @zh\r\n     * 从序列化数据或资源中提取出依赖列表，并且存储在缓存中。\r\n     *\r\n     * @param uuid - The uuid of serialized data or asset\r\n     * @param json - Serialized data or asset\r\n     * @returns dependency list, include non-native and native dependency\r\n     *\r\n     * @example\r\n     * downloader.downloadFile('test.json', { xhrResponseType: 'json'}, null, (err, file) => {\r\n     *     var dependencies = parse('fcmR3XADNLgJ1ByKhqcC5Z', file);\r\n     * });\r\n     *\r\n     * @engineInternal\r\n     */\r\n    public parse (uuid: string, json: any): IDependencies {\r\n        let out: IDependencies | null = null;\r\n        if (Array.isArray(json) || json.__type__ || json instanceof CCON) {\r\n            if (this._depends.has(uuid)) {\r\n                return this._depends.get(uuid)!;\r\n            }\r\n\r\n            // TODO: json: any[] is not assigned to IFileData\r\n            // workaround: mark json as any\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14642\r\n            if (Array.isArray(json) && (!(BUILD || isCompiledJson(json)) || !hasNativeDep(json as any))) {\r\n                out = {\r\n                    deps: this._parseDepsFromJson(json),\r\n                };\r\n            } else {\r\n                try {\r\n                    const asset = deserialize(json, { __uuid__: uuid });\r\n                    out = this._parseDepsFromAsset(asset);\r\n                    if (out.nativeDep) {\r\n                        out.nativeDep.uuid = uuid;\r\n                    }\r\n                    parsed.add(`${uuid}@import`, asset);\r\n                } catch (e) {\r\n                    files.remove(`${uuid}@import`);\r\n                    out = { deps: [] };\r\n                }\r\n            }\r\n        } else { // get deps from an existing asset\r\n            if (!EDITOR && this._depends.has(uuid)) {\r\n                out = this._depends.get(uuid)!;\r\n                if (out.parsedFromExistAsset) {\r\n                    return out;\r\n                }\r\n            }\r\n            out = this._parseDepsFromAsset(json);\r\n        }\r\n        // cache dependency list\r\n        this._depends.add(uuid, out);\r\n        return out;\r\n    }\r\n\r\n    private _parseDepsFromAsset (asset: Asset): IDependencies {\r\n        const out: IDependencies = {\r\n            deps: [],\r\n            parsedFromExistAsset: true,\r\n        };\r\n\r\n        const deps = dependMap.get(asset);\r\n        assertIsNonNullable(deps);\r\n        for (let i = 0, l = deps.length; i < l; i++) {\r\n            out.deps.push(deps[i].uuid);\r\n        }\r\n\r\n        if (nativeDependMap.has(asset)) {\r\n            out.nativeDep = asset._nativeDep;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    private _parseDepsFromJson (json: any[]): string[] {\r\n        const depends = parseUuidDependencies(json);\r\n        depends.forEach((uuid, index): string => depends[index] = decodeUuid(uuid));\r\n        return depends;\r\n    }\r\n\r\n    private _descend (uuid: string, exclude: Record<string, any>, depends: string[]): void {\r\n        const deps = this.getDeps(uuid);\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const depend = deps[i];\r\n            if (!exclude[depend]) {\r\n                exclude[depend] = true;\r\n                depends.push(depend);\r\n                this._descend(depend, exclude, depends);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DependUtil.instance;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass } from 'cc.decorator';\r\nimport { DEV } from 'internal:constants';\r\nimport { TextureFlagBit, TextureUsageBit, API, Texture, TextureInfo, TextureViewInfo, Device, BufferTextureCopy } from '../../gfx';\r\nimport { assertID, error, js, macro, cclegacy } from '../../core';\r\nimport { TextureFilter } from './asset-enum';\r\nimport { ImageAsset } from './image-asset';\r\nimport { TextureBase } from './texture-base';\r\nimport dependUtil from '../asset-manager/depend-util';\r\n\r\nconst _regions: BufferTextureCopy[] = [new BufferTextureCopy()];\r\n\r\nexport type PresumedGFXTextureInfo = Pick<TextureInfo, 'usage' | 'flags' | 'format' | 'levelCount'>;\r\nexport type PresumedGFXTextureViewInfo = Pick<TextureViewInfo, 'texture' | 'format' | 'baseLevel' | 'levelCount'>;\r\n\r\nfunction getMipLevel (width: number, height: number): number {\r\n    let size = Math.max(width, height);\r\n    let level = 0;\r\n    while (size) { size >>= 1; level++; }\r\n    return level;\r\n}\r\n\r\nfunction isPOT (n: number): boolean | 0 { return n && (n & (n - 1)) === 0; }\r\nfunction canGenerateMipmap (device: Device, w: number, h: number): boolean | 0 {\r\n    const needCheckPOT = device.gfxAPI === API.WEBGL;\r\n    if (needCheckPOT) { return isPOT(w) && isPOT(h); }\r\n    return true;\r\n}\r\n\r\n/**\r\n * @en The simple texture base class.\r\n * It create the GFX Texture and can set mipmap levels.\r\n * @zh 简单贴图基类。\r\n * 简单贴图内部创建了 GFX 贴图和该贴图上的 GFX 贴图视图。\r\n * 简单贴图允许指定不同的 Mipmap 层级。\r\n */\r\n@ccclass('cc.SimpleTexture')\r\nexport class SimpleTexture extends TextureBase {\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _gfxTexture: Texture | null = null;\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _gfxTextureView: Texture | null = null;\r\n    private _mipmapLevel = 1;\r\n    // Cache these data to reduce JSB invoking.\r\n    private _textureWidth = 0;\r\n    private _textureHeight = 0;\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _baseLevel = 0;\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _maxLevel = 1000;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * @en The mipmap level of the texture.\r\n     * @zh 贴图中的 Mipmap 层级数量。\r\n     */\r\n    get mipmapLevel (): number {\r\n        return this._mipmapLevel;\r\n    }\r\n\r\n    /**\r\n     * @en The GFX Texture resource.\r\n     * @zh 获取此贴图底层的 GFX 贴图对象。\r\n     * @return @en The low level gfx texture. @zh 底层的 GFX 贴图。\r\n     */\r\n    public getGFXTexture (): Texture | null {\r\n        return this._gfxTextureView;\r\n    }\r\n\r\n    public destroy (): boolean {\r\n        this._tryDestroyTextureView();\r\n        this._tryDestroyTexture();\r\n        return super.destroy();\r\n    }\r\n\r\n    /**\r\n     * @en Update the level 0 mipmap image.\r\n     * @zh 更新 0 级 Mipmap。\r\n     */\r\n    public updateImage (): void {\r\n        this.updateMipmaps(0);\r\n    }\r\n\r\n    /**\r\n     * @en Update the given level mipmap image.\r\n     * @zh 更新指定层级范围内的 Mipmap。当 Mipmap 数据发生了改变时应调用此方法提交更改。\r\n     * 若指定的层级范围超出了实际已有的层级范围，只有覆盖的那些层级范围会被更新。\r\n     * @param firstLevel @en First level to be updated. @zh 更新指定层的 mipmap。\r\n     * @param count @en Mipmap level count to be updated。 @zh 指定要更新层的数量。\r\n     */\r\n    public updateMipmaps (firstLevel = 0, count: number | undefined = undefined): void {\r\n        // empty\r\n    }\r\n\r\n    /**\r\n     * @en Upload data to the given mipmap level.\r\n     * The size of the image will affect how the mipmap is updated.\r\n     * - When the image is an ArrayBuffer, the size of the image must match the mipmap size.\r\n     * - If the image size matches the mipmap size, the mipmap data will be updated entirely.\r\n     * - If the image size is smaller than the mipmap size, the mipmap will be updated from top left corner.\r\n     * - If the image size is larger, an error will be raised\r\n     * @zh 上传图像数据到指定层级的 Mipmap 中。\r\n     * 图像的尺寸影响 Mipmap 的更新范围：\r\n     * - 当图像是 `ArrayBuffer` 时，图像的尺寸必须和 Mipmap 的尺寸一致；否则，\r\n     * - 若图像的尺寸与 Mipmap 的尺寸相同，上传后整个 Mipmap 的数据将与图像数据一致；\r\n     * - 若图像的尺寸小于指定层级 Mipmap 的尺寸（不管是长或宽），则从贴图左上角开始，图像尺寸范围内的 Mipmap 会被更新；\r\n     * - 若图像的尺寸超出了指定层级 Mipmap 的尺寸（不管是长或宽），都将引起错误。\r\n     * @param source @en The source image or image data. @zh 源图像或图像数据。\r\n     * @param level @en Mipmap level to upload the image to. @zh 要上传的 mipmap 层级。\r\n     * @param arrayIndex @en The array index. @zh 要上传的数组索引。\r\n     */\r\n    public uploadData (source: HTMLCanvasElement | HTMLImageElement | ArrayBufferView | ImageBitmap, level = 0, arrayIndex = 0): void {\r\n        if (!this._gfxTexture || this._mipmapLevel <= level) {\r\n            return;\r\n        }\r\n\r\n        const gfxDevice = this._getGFXDevice();\r\n        if (!gfxDevice) {\r\n            return;\r\n        }\r\n\r\n        const region = _regions[0];\r\n        region.texExtent.width = this._textureWidth >> level;\r\n        region.texExtent.height = this._textureHeight >> level;\r\n        region.texSubres.mipLevel = level;\r\n        region.texSubres.baseArrayLayer = arrayIndex;\r\n\r\n        if (DEV) {\r\n            if (source instanceof HTMLElement) {\r\n                if (source.height > region.texExtent.height\r\n                    || source.width > region.texExtent.width) {\r\n                    error(`Image source(${this.name}) bounds override.`);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ArrayBuffer.isView(source)) {\r\n            gfxDevice.copyBuffersToTexture([source], this._gfxTexture, _regions);\r\n        } else {\r\n            gfxDevice.copyTexImagesToTexture([source], this._gfxTexture, _regions);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _assignImage (image: ImageAsset, level: number, arrayIndex?: number): void {\r\n        const data = image.data;\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.uploadData(data, level, arrayIndex);\r\n        this._checkTextureLoaded();\r\n\r\n        if (macro.CLEANUP_IMAGE_CACHE) {\r\n            const deps = dependUtil.getDeps(this._uuid);\r\n            const index = deps.indexOf(image._uuid);\r\n            if (index !== -1) {\r\n                js.array.fastRemoveAt(deps, index);\r\n                image.decRef();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _checkTextureLoaded (): void {\r\n        this._textureReady();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _textureReady (): void {\r\n        this.loaded = true;\r\n        this.emit('load');\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set mipmap level of this texture.\r\n     * The value is passes as presumed info to `this._getGfxTextureCreateInfo()`.\r\n     * @zh\r\n     * 设置此贴图的 mipmap 层级\r\n     * @param value The mipmap level.\r\n     * @engineInternal\r\n     * @mangle\r\n     *\r\n     */\r\n    protected _setMipmapLevel (value: number): void {\r\n        this._mipmapLevel = value < 1 ? 1 : value;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _setMipRange (baseLevel: number, maxLevel: number): void {\r\n        this._baseLevel = baseLevel < 1 ? 0 : baseLevel;\r\n        this._maxLevel = maxLevel < 1 ? 0 : maxLevel;\r\n    }\r\n\r\n    /**\r\n     * @en Set mipmap level range for this texture.\r\n     * @zh 设置当前贴图的 mipmap 范围。\r\n     * @param baseLevel @en The base mipmap level. @zh 最低 mipmap 等级。\r\n     * @param maxLevel @en The maximum mipmap level. @zh 最高 mipmap 等级。\r\n     */\r\n    public setMipRange (baseLevel: number, maxLevel: number): void {\r\n        assertID(baseLevel <= maxLevel, 3124);\r\n\r\n        this._setMipRange(baseLevel, maxLevel);\r\n\r\n        const device = this._getGFXDevice();\r\n        if (!device) {\r\n            return;\r\n        }\r\n        // create a new texture view before the destruction of the previous one to bypass the bug that\r\n        // vulkan destroys textureview in use. This is a temporary solution, should be fixed later.\r\n        const textureView = this._createTextureView(device);\r\n        this._tryDestroyTextureView();\r\n        this._gfxTextureView = textureView;\r\n    }\r\n\r\n    /**\r\n     * @en This method is override by derived classes to provide GFX texture info.\r\n     * @zh 这个方法被派生类重写以提供 GFX 纹理信息。\r\n     * @param presumed The presumed GFX texture info.\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _getGfxTextureCreateInfo (presumed: PresumedGFXTextureInfo): TextureInfo | null {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en This method is overrided by derived classes to provide GFX TextureViewInfo.\r\n     * @zh 这个方法被派生类重写以提供 GFX 纹理视图信息。\r\n     * @param presumed The presumed GFX TextureViewInfo.\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _getGfxTextureViewCreateInfo (presumed: PresumedGFXTextureViewInfo): TextureViewInfo | null {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _tryReset (): void {\r\n        this._tryDestroyTextureView();\r\n        this._tryDestroyTexture();\r\n        if (this._mipmapLevel === 0) {\r\n            return;\r\n        }\r\n        const device = this._getGFXDevice();\r\n        if (!device) {\r\n            return;\r\n        }\r\n        this._createTexture(device);\r\n        this._gfxTextureView = this._createTextureView(device);\r\n    }\r\n\r\n    /**\r\n     * @en Whether mipmaps are baked convolutional maps.\r\n     * @zh mipmaps 是否为烘焙出来的卷积图。\r\n     */\r\n    public isUsingOfflineMipmaps (): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _createTexture (device: Device): void {\r\n        if (this._width === 0 || this._height === 0) { return; }\r\n        let flags = TextureFlagBit.NONE;\r\n        if (this._mipFilter !== TextureFilter.NONE && canGenerateMipmap(device, this._width, this._height)) {\r\n            this._mipmapLevel = getMipLevel(this._width, this._height);\r\n            if (!this.isUsingOfflineMipmaps() && !this.isCompressed) {\r\n                flags = TextureFlagBit.GEN_MIPMAP;\r\n            }\r\n        }\r\n        const textureCreateInfo = this._getGfxTextureCreateInfo({\r\n            usage: TextureUsageBit.SAMPLED | TextureUsageBit.TRANSFER_DST | TextureUsageBit.COLOR_ATTACHMENT,\r\n            format: this._getGFXFormat(),\r\n            levelCount: this._mipmapLevel,\r\n            flags,\r\n        });\r\n        if (!textureCreateInfo) {\r\n            return;\r\n        }\r\n\r\n        const texture = device.createTexture(textureCreateInfo);\r\n        this._textureWidth = textureCreateInfo.width;\r\n        this._textureHeight = textureCreateInfo.height;\r\n\r\n        this._gfxTexture = texture;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _createTextureView (device: Device): Texture | null {\r\n        if (!this._gfxTexture) {\r\n            return null;\r\n        }\r\n        const maxLevel = this._maxLevel < this._mipmapLevel ? this._maxLevel : this._mipmapLevel - 1;\r\n        const textureViewCreateInfo = this._getGfxTextureViewCreateInfo({\r\n            texture: this._gfxTexture,\r\n            format: this._getGFXFormat(),\r\n            baseLevel: this._baseLevel,\r\n            levelCount: maxLevel - this._baseLevel + 1,\r\n        });\r\n        if (!textureViewCreateInfo) {\r\n            return null;\r\n        }\r\n\r\n        return device.createTexture(textureViewCreateInfo);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _tryDestroyTexture (): void {\r\n        if (this._gfxTexture) {\r\n            this._gfxTexture.destroy();\r\n            this._gfxTexture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _tryDestroyTextureView (): void {\r\n        if (this._gfxTextureView) {\r\n            this._gfxTextureView.destroy();\r\n            this._gfxTextureView = null;\r\n        }\r\n    }\r\n}\r\n\r\ncclegacy.SimpleTexture = SimpleTexture;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { ccclass, type } from 'cc.decorator';\r\nimport { TextureType, TextureInfo, TextureViewInfo } from '../../gfx';\r\nimport { PixelFormat } from './asset-enum';\r\nimport { ImageAsset } from './image-asset';\r\nimport { PresumedGFXTextureInfo, PresumedGFXTextureViewInfo, SimpleTexture } from './simple-texture';\r\nimport { js, cclegacy } from '../../core';\r\n\r\n/**\r\n * @en The create information for [[Texture2D]].\r\n * @zh 用来创建贴图的信息。\r\n */\r\nexport interface ITexture2DCreateInfo {\r\n    /**\r\n     * @en The pixel width.\r\n     * @zh 像素宽度。\r\n     */\r\n    width: number;\r\n\r\n    /**\r\n     * @en The pixel height.\r\n     * @zh 像素高度。\r\n     */\r\n    height: number;\r\n\r\n    /**\r\n     * @en The pixel format.\r\n     * @zh 像素格式。\r\n     * @default PixelFormat.RGBA8888\r\n     */\r\n    format?: PixelFormat;\r\n\r\n    /**\r\n     * @en The mipmap level count.\r\n     * @zh mipmap 层级。\r\n     * @default 1\r\n     */\r\n    mipmapLevel?: number;\r\n\r\n    /**\r\n     * @en The selected base mipmap level.\r\n     * @zh 选择使用的最小 mipmap 层级。\r\n     * @default 1\r\n     */\r\n    baseLevel?: number;\r\n\r\n    /**\r\n     * @en The selected maximum mipmap level.\r\n     * @zh 选择使用的最大 mipmap 层级。\r\n     * @default 1000\r\n     */\r\n    maxLevel?: number;\r\n}\r\n\r\n/**\r\n * @en The 2D texture asset. It supports mipmap, each level of mipmap use an [[ImageAsset]].\r\n * @zh 二维贴图资源。二维贴图资源的每个 Mipmap 层级都为一张 [[ImageAsset]]。\r\n */\r\n@ccclass('cc.Texture2D')\r\nexport class Texture2D extends SimpleTexture {\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * @en All levels of mipmap images, be noted, automatically generated mipmaps are not included.\r\n     * When setup mipmap, the size of the texture and pixel format could be modified.\r\n     * @zh 所有层级 Mipmap，注意，这里不包含自动生成的 Mipmap。\r\n     * 当设置 Mipmap 时，贴图的尺寸以及像素格式可能会改变。\r\n     */\r\n    get mipmaps (): ImageAsset[] {\r\n        return this._mipmaps;\r\n    }\r\n    set mipmaps (value) {\r\n        this._mipmaps = value;\r\n\r\n        const mipmaps: ImageAsset[] = [];\r\n        if (value.length === 1) {\r\n            // might contain auto generated mipmaps\r\n            const image = value[0];\r\n            mipmaps.push(...image.extractMipmaps());\r\n        } else if (value.length > 1) {\r\n            // image asset mip0 as mipmaps\r\n            for (let i = 0; i < value.length; ++i) {\r\n                const image = value[i];\r\n                mipmaps.push(image.extractMipmap0());\r\n            }\r\n        }\r\n\r\n        this._setMipmapParams(mipmaps);\r\n    }\r\n\r\n    /**\r\n     * TODO: See: cocos/cocos-engine#15305\r\n     */\r\n    private _setMipmapParams (value: ImageAsset[]): void {\r\n        this._generatedMipmaps = value;\r\n        this._setMipmapLevel(this._generatedMipmaps.length);\r\n        if (this._generatedMipmaps.length > 0) {\r\n            const imageAsset: ImageAsset = this._generatedMipmaps[0];\r\n            this.reset({\r\n                width: imageAsset.width,\r\n                height: imageAsset.height,\r\n                format: imageAsset.format,\r\n                mipmapLevel: this._generatedMipmaps.length,\r\n                baseLevel: this._baseLevel,\r\n                maxLevel: this._maxLevel,\r\n            });\r\n            this._generatedMipmaps.forEach((mipmap, level) => {\r\n                this._assignImage(mipmap, level);\r\n            });\r\n            //\r\n        } else {\r\n            this.reset({\r\n                width: 0,\r\n                height: 0,\r\n                mipmapLevel: this._generatedMipmaps.length,\r\n                baseLevel: this._baseLevel,\r\n                maxLevel: this._maxLevel,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Level 0 mipmap image.\r\n     * Be noted, `this.image = img` equals `this.mipmaps = [img]`,\r\n     * sets image will clear all previous mipmaps.\r\n     * @zh 0 级 Mipmap。\r\n     * 注意，`this.image = img` 等价于 `this.mipmaps = [img]`，\r\n     * 也就是说，通过 `this.image` 设置 0 级 Mipmap 时将隐式地清除之前的所有 Mipmap。\r\n     */\r\n    get image (): ImageAsset | null {\r\n        return this._mipmaps.length === 0 ? null : this._mipmaps[0];\r\n    }\r\n\r\n    set image (value) {\r\n        this.mipmaps = value ? [value] : [];\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @type([ImageAsset])\r\n    public _mipmaps: ImageAsset[] = [];\r\n\r\n    private _generatedMipmaps: ImageAsset[] = [];\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public initialize (): void {\r\n        this.mipmaps = this._mipmaps;\r\n    }\r\n\r\n    public onLoaded (): void {\r\n        this.initialize();\r\n    }\r\n\r\n    /**\r\n     * @en Reset the current texture with given size, pixel format and mipmap images.\r\n     * After reset, the gfx resource will become invalid, you must use [[uploadData]] explicitly to upload the new mipmaps to GPU resources.\r\n     * @zh 将当前贴图重置为指定尺寸、像素格式以及指定 mipmap 层级。重置后，贴图的像素数据将变为未定义。\r\n     * mipmap 图像的数据不会自动更新到贴图中，你必须显式调用 [[uploadData]] 来上传贴图数据。\r\n     * @param info @en The create information. @zh 创建贴图的相关信息。\r\n     */\r\n    public reset (info: ITexture2DCreateInfo): void {\r\n        this._width = info.width;\r\n        this._height = info.height;\r\n        this._setGFXFormat(info.format);\r\n        const mipLevels = info.mipmapLevel === undefined ? 1 : info.mipmapLevel;\r\n        this._setMipmapLevel(mipLevels);\r\n        const minLod = info.baseLevel === undefined ? 0 : info.baseLevel;\r\n        const maxLod = info.maxLevel === undefined ? 1000 : info.maxLevel;\r\n        this._setMipRange(minLod, maxLod);\r\n        this._tryReset();\r\n    }\r\n\r\n    /**\r\n     * @en Reset the current texture with given size, pixel format and mipmap images.\r\n     * After reset, the gfx resource will become invalid, you must use [[uploadData]] explicitly to upload the new mipmaps to GPU resources.\r\n     * @zh 将当前贴图重置为指定尺寸、像素格式以及指定 mipmap 层级。重置后，贴图的像素数据将变为未定义。\r\n     * mipmap 图像的数据不会自动更新到贴图中，你必须显式调用 [[uploadData]] 来上传贴图数据。\r\n     * @param width Pixel width\r\n     * @param height Pixel height\r\n     * @param format Pixel format\r\n     * @param mipmapLevel Mipmap level count\r\n     * @param baseLevel Mipmap base level\r\n     * @param maxLevel Mipmap maximum level\r\n     * @deprecated since v1.0 please use [[reset]] instead\r\n     */\r\n    public create (width: number, height: number, format = PixelFormat.RGBA8888, mipmapLevel = 1, baseLevel = 0, maxLevel = 1000): void {\r\n        this.reset({\r\n            width,\r\n            height,\r\n            format,\r\n            mipmapLevel,\r\n            baseLevel,\r\n            maxLevel,\r\n        });\r\n    }\r\n\r\n    public toString (): string {\r\n        return this._mipmaps.length !== 0 ? this._mipmaps[0].url : '';\r\n    }\r\n\r\n    public updateMipmaps (firstLevel = 0, count: number | undefined = undefined): void {\r\n        if (firstLevel >= this._generatedMipmaps.length) {\r\n            return;\r\n        }\r\n\r\n        const nUpdate = Math.min(\r\n            count === undefined ? this._generatedMipmaps.length : count,\r\n            this._generatedMipmaps.length - firstLevel,\r\n        );\r\n\r\n        for (let i = 0; i < nUpdate; ++i) {\r\n            const level = firstLevel + i;\r\n            this._assignImage(this._generatedMipmaps[level], level);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en If the level 0 mipmap image is a HTML element, then return it, otherwise return null.\r\n     * @zh 若此贴图 0 级 Mipmap 的图像资源的实际源存在并为 HTML 元素则返回它，否则返回 `null`。\r\n     * @returns @en HTMLElement or `null`. @zh HTML 元素或者 null。\r\n     * @deprecated Please use [[ImageAsset.data]] instead\r\n     */\r\n    public getHtmlElementObj (): HTMLCanvasElement | HTMLImageElement | null {\r\n        return (this._mipmaps[0] && (this._mipmaps[0].data instanceof HTMLElement)) ? this._mipmaps[0].data : null;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the current 2d texture, clear up all mipmap levels and the related GPU resources.\r\n     * @zh 销毁此贴图，清空所有 Mipmap 并释放占用的 GPU 资源。\r\n     */\r\n    public destroy (): boolean {\r\n        this._mipmaps = [];\r\n        this._generatedMipmaps = [];\r\n        return super.destroy();\r\n    }\r\n\r\n    /**\r\n     * @en Gets the description of the 2d texture.\r\n     * @zh 返回此贴图的描述。\r\n     * @returns @en The description. @zh 贴图的描述信息。\r\n     */\r\n    public description (): string {\r\n        const url = this._mipmaps[0] ? this._mipmaps[0].url : '';\r\n        return `<cc.Texture2D | Name = ${url} | Dimension = ${this.width} x ${this.height}>`;\r\n    }\r\n\r\n    /**\r\n     * @en Release used GPU resources.\r\n     * @zh 释放占用的 GPU 资源。\r\n     * @deprecated please use [[destroy]] instead.\r\n     */\r\n    public releaseTexture (): void {\r\n        this.destroy();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _serialize (ctxForExporting: any): {\r\n        base: any;\r\n        mipmaps: (string | null)[];\r\n    } | null {\r\n        if (EDITOR || TEST) {\r\n            return {\r\n                base: super._serialize(ctxForExporting),\r\n                mipmaps: this._mipmaps.map((mipmap) => {\r\n                    if (!mipmap || !mipmap._uuid) {\r\n                        return null;\r\n                    }\r\n                    let uuid = mipmap._uuid;\r\n                    if (ctxForExporting) {\r\n                        if (ctxForExporting._compressUuid) {\r\n                            uuid = EditorExtends.UuidUtils.compressUuid(mipmap._uuid, true);\r\n                        }\r\n                        if (uuid) {\r\n                            ctxForExporting.dependsOn('_textureSource', uuid);\r\n                        }\r\n                    }\r\n                    return uuid;\r\n                }),\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _deserialize (serializedData: any, handle: any): void {\r\n        const data = serializedData as ITexture2DSerializeData;\r\n        super._deserialize(data.base, handle);\r\n\r\n        this._mipmaps = new Array(data.mipmaps.length);\r\n        for (let i = 0; i < data.mipmaps.length; ++i) {\r\n            // Prevent resource load failed\r\n            this._mipmaps[i] = new ImageAsset();\r\n            if (!data.mipmaps[i]) {\r\n                continue;\r\n            }\r\n            const mipmapUUID = data.mipmaps[i];\r\n            handle.result.push(this._mipmaps, `${i}`, mipmapUUID, js.getClassId(ImageAsset));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected override _getGfxTextureCreateInfo (presumed: PresumedGFXTextureInfo): TextureInfo {\r\n        const texInfo = new TextureInfo(TextureType.TEX2D);\r\n        texInfo.width = this._width;\r\n        texInfo.height = this._height;\r\n        Object.assign(texInfo, presumed);\r\n        return texInfo;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected override _getGfxTextureViewCreateInfo (presumed: PresumedGFXTextureViewInfo): TextureViewInfo {\r\n        const texViewInfo = new TextureViewInfo();\r\n        texViewInfo.type = TextureType.TEX2D;\r\n        Object.assign(texViewInfo, presumed);\r\n        return texViewInfo;\r\n    }\r\n\r\n    public initDefault (uuid?: string): void {\r\n        super.initDefault(uuid);\r\n        const imageAsset = new ImageAsset();\r\n        imageAsset.initDefault();\r\n        this.image = imageAsset;\r\n    }\r\n\r\n    public validate (): boolean {\r\n        return this.mipmaps && this.mipmaps.length !== 0;\r\n    }\r\n}\r\n\r\ncclegacy.Texture2D = Texture2D;\r\n\r\nexport interface ITexture2DSerializeData {\r\n    base: string;\r\n    mipmaps: string[];\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, OPPO, TEST, VIVO, WECHAT, WECHAT_MINI_PROGRAM } from 'internal:constants';\r\nimport { ccclass, serializable } from 'cc.decorator';\r\nimport { TextureType, TextureInfo, TextureViewInfo, BufferTextureCopy } from '../../gfx';\r\nimport { ImageAsset } from './image-asset';\r\nimport { PresumedGFXTextureInfo, PresumedGFXTextureViewInfo, SimpleTexture } from './simple-texture';\r\nimport { ITexture2DCreateInfo, Texture2D } from './texture-2d';\r\nimport { legacyCC, ccwindow } from '../../core/global-exports';\r\nimport { errorID, js, sys } from '../../core';\r\nimport { OS } from '../../../pal/system-info/enum-type';\r\n\r\nexport type ITextureCubeCreateInfo = ITexture2DCreateInfo;\r\n/**\r\n * @en The MipmapAtlas region interface\r\n * @zh MipmapAtlas的region接口。\r\n */\r\ninterface IMipmapAtlasLayout {\r\n    left: number;\r\n    top: number;\r\n    width: number;\r\n    height: number;\r\n    level: number;\r\n}\r\n/**\r\n * @en The texture cube MipmapAtlas interface\r\n * @zh 立方体贴图的 MipmapAtlas 接口。\r\n */\r\ninterface ITextureCubeMipmapAtlas {\r\n    atlas: ITextureCubeMipmap;\r\n    layout: IMipmapAtlasLayout[];\r\n}\r\n\r\n/**\r\n * @en The texture cube mipmap interface\r\n * @zh 立方体贴图的 Mipmap 接口。\r\n */\r\ninterface ITextureCubeMipmap {\r\n    front: ImageAsset;\r\n    back: ImageAsset;\r\n    left: ImageAsset;\r\n    right: ImageAsset;\r\n    top: ImageAsset;\r\n    bottom: ImageAsset;\r\n}\r\n\r\n/**\r\n * @en The index for all faces of the cube\r\n * @zh 立方体每个面的约定索引。\r\n */\r\nenum FaceIndex {\r\n    right = 0,\r\n    left = 1,\r\n    top = 2,\r\n    bottom = 3,\r\n    front = 4,\r\n    back = 5,\r\n}\r\n/**\r\n * @en The way to fill mipmaps.\r\n * @zh 填充mipmaps的方式。\r\n */\r\nexport enum MipmapMode {\r\n    /**\r\n     * @zh\r\n     * 不使用mipmaps\r\n     * @en\r\n     * Not using mipmaps\r\n     * @readonly\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * @zh\r\n     * 使用自动生成的mipmaps\r\n     * @en\r\n     * Using the automatically generated mipmaps\r\n     * @readonly\r\n     */\r\n    AUTO = 1,\r\n    /**\r\n     * @zh\r\n     * 使用卷积图填充mipmaps\r\n     * @en\r\n     * Filling mipmaps with convolutional maps\r\n     * @readonly\r\n     */\r\n    BAKED_CONVOLUTION_MAP = 2,\r\n}\r\n\r\n/**\r\n * @en The texture cube asset.\r\n * Each mipmap level of a texture cube have 6 [[ImageAsset]], represents 6 faces of the cube.\r\n * @zh 立方体贴图资源。\r\n * 立方体贴图资源的每个 Mipmap 层级都为 6 张 [[ImageAsset]]，分别代表了立方体贴图的 6 个面。\r\n */\r\n@ccclass('cc.TextureCube')\r\nexport class TextureCube extends SimpleTexture {\r\n    public static FaceIndex = FaceIndex;\r\n\r\n    @serializable\r\n    isRGBE = false;\r\n\r\n    @serializable\r\n    _mipmapAtlas: ITextureCubeMipmapAtlas | null = null;\r\n\r\n    @serializable\r\n    _mipmapMode = MipmapMode.NONE;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * @en All levels of mipmap images, be noted, automatically generated mipmaps are not included.\r\n     * When setup mipmap, the size of the texture and pixel format could be modified.\r\n     * @zh 所有层级 Mipmap，注意，这里不包含自动生成的 Mipmap。\r\n     * 当设置 Mipmap 时，贴图的尺寸以及像素格式可能会改变。\r\n     */\r\n    get mipmaps (): ITextureCubeMipmap[] {\r\n        return this._mipmaps;\r\n    }\r\n\r\n    set mipmaps (value: ITextureCubeMipmap[]) {\r\n        this._mipmaps = value;\r\n\r\n        const cubeMaps: ITextureCubeMipmap[] = [];\r\n        if (value.length === 1) {\r\n            const cubeMipmap = value[0];\r\n            const front = cubeMipmap.front.extractMipmaps();\r\n            const back = cubeMipmap.back.extractMipmaps();\r\n            const left = cubeMipmap.left.extractMipmaps();\r\n            const right = cubeMipmap.right.extractMipmaps();\r\n            const top = cubeMipmap.top.extractMipmaps();\r\n            const bottom = cubeMipmap.bottom.extractMipmaps();\r\n\r\n            if (front.length !== back.length\r\n                || front.length !== left.length\r\n                || front.length !== right.length\r\n                || front.length !== top.length\r\n                || front.length !== bottom.length) {\r\n                errorID(16347);\r\n                this._setMipmapParams([]);\r\n                return;\r\n            }\r\n\r\n            const level = front.length;\r\n            for (let i = 0; i < level; ++i) {\r\n                const cubeMap: ITextureCubeMipmap = {\r\n                    front: front[i],\r\n                    back: back[i],\r\n                    left: left[i],\r\n                    right: right[i],\r\n                    top: top[i],\r\n                    bottom: bottom[i],\r\n                };\r\n                cubeMaps.push(cubeMap);\r\n            }\r\n        } else if (value.length > 1) {\r\n            value.forEach((mipmap): void => {\r\n                const cubeMap: ITextureCubeMipmap = {\r\n                    front: mipmap.front.extractMipmap0(),\r\n                    back: mipmap.back.extractMipmap0(),\r\n                    left: mipmap.left.extractMipmap0(),\r\n                    right: mipmap.right.extractMipmap0(),\r\n                    top: mipmap.top.extractMipmap0(),\r\n                    bottom: mipmap.bottom.extractMipmap0(),\r\n                };\r\n                cubeMaps.push(cubeMap);\r\n            });\r\n        }\r\n\r\n        this._setMipmapParams(cubeMaps);\r\n    }\r\n\r\n    private _setMipmapParams (value: ITextureCubeMipmap[]): void {\r\n        this._generatedMipmaps = value;\r\n        this._setMipmapLevel(this._generatedMipmaps.length);\r\n        if (this._generatedMipmaps.length > 0) {\r\n            const imageAsset: ImageAsset = this._generatedMipmaps[0].front;\r\n            this.reset({\r\n                width: imageAsset.width,\r\n                height: imageAsset.height,\r\n                format: imageAsset.format,\r\n                mipmapLevel: this._generatedMipmaps.length,\r\n                baseLevel: this._baseLevel,\r\n                maxLevel: this._maxLevel,\r\n            });\r\n            this._generatedMipmaps.forEach((mipmap, level): void => {\r\n                _forEachFace(mipmap, (face, faceIndex): void => {\r\n                    this._assignImage(face, level, faceIndex);\r\n                });\r\n            });\r\n        } else {\r\n            this.reset({\r\n                width: 0,\r\n                height: 0,\r\n                mipmapLevel: this._generatedMipmaps.length,\r\n                baseLevel: this._baseLevel,\r\n                maxLevel: this._maxLevel,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Fill mipmaps for cube map with atlas.\r\n     * @zh 使用 atlas 方式排布的图填充到立方体贴图的 mipmaps。\r\n     * @param value @en All mipmaps of each face of the cube map are stored in the form of atlas\r\n     * and the value contains the atlas of the 6 faces and the layout information of each mipmap layer.\r\n     * @zh 立方体贴图六个面的图，其中每张图中的全部 mip 数据都使用 atlas 方式排布\r\n     */\r\n    set mipmapAtlas (value: ITextureCubeMipmapAtlas | null) {\r\n        this._mipmapAtlas = value;\r\n        if (!this._mipmapAtlas) {\r\n            this.reset({\r\n                width: 0,\r\n                height: 0,\r\n                mipmapLevel: 0,\r\n            });\r\n            return;\r\n        }\r\n        const imageAtlasAsset: ImageAsset = this._mipmapAtlas.atlas.front;\r\n        if (!imageAtlasAsset.data) {\r\n            return;\r\n        }\r\n        //In ios wechat mini-game platform drawImage and getImageData can not get correct data,so upload to gfxTexture than use readPixels to get data\r\n        //The performance of upload to gfxTexture and readPixels is not good, so only use this way in the ios wechat mini-game platform\r\n        if (((WECHAT || WECHAT_MINI_PROGRAM) && sys.os === OS.IOS) || VIVO || OPPO) {\r\n            this._uploadAtlas();\r\n            return;\r\n        }\r\n        const faceAtlas = this._mipmapAtlas.atlas;\r\n        const layout = this._mipmapAtlas.layout;\r\n        const mip0Layout = layout[0];\r\n\r\n        const ctx = Object.assign(ccwindow.document.createElement('canvas'), {\r\n            width: imageAtlasAsset.width,\r\n            height: imageAtlasAsset.height,\r\n        }).getContext('2d')!;\r\n\r\n        this.reset({\r\n            width: mip0Layout.width,\r\n            height: mip0Layout.height,\r\n            format: imageAtlasAsset.format,\r\n            mipmapLevel: layout.length,\r\n        });\r\n\r\n        for (let j = 0; j < layout.length; j++) {\r\n            const layoutInfo = layout[j];\r\n            _forEachFace(faceAtlas, (face, faceIndex): void => {\r\n                ctx.clearRect(0, 0, imageAtlasAsset.width, imageAtlasAsset.height);\r\n                const drawImg = face.data as HTMLImageElement;\r\n                ctx.drawImage(drawImg, 0, 0);\r\n                const rawData = ctx.getImageData(layoutInfo.left, layoutInfo.top, layoutInfo.width, layoutInfo.height);\r\n\r\n                const bufferAsset = new ImageAsset({\r\n                    _data: rawData.data,\r\n                    _compressed: face.isCompressed,\r\n                    width: rawData.width,\r\n                    height: rawData.height,\r\n                    format: face.format,\r\n                });\r\n                this._assignImage(bufferAsset, layoutInfo.level, faceIndex);\r\n            });\r\n        }\r\n    }\r\n\r\n    get mipmapAtlas (): ITextureCubeMipmapAtlas | null {\r\n        return this._mipmapAtlas;\r\n    }\r\n\r\n    /**\r\n     * @en Whether mipmaps are baked convolutional maps.\r\n     * @zh mipmaps是否为烘焙出来的卷积图。\r\n     */\r\n    public isUsingOfflineMipmaps (): boolean {\r\n        return this._mipmapMode === MipmapMode.BAKED_CONVOLUTION_MAP;\r\n    }\r\n\r\n    /**\r\n     * @en Level 0 mipmap image.\r\n     * Be noted, `this.image = img` equals `this.mipmaps = [img]`,\r\n     * sets image will clear all previous mipmaps.\r\n     * @zh 0 级 Mipmap。\r\n     * 注意，`this.image = img` 等价于 `this.mipmaps = [img]`，\r\n     * 也就是说，通过 `this.image` 设置 0 级 Mipmap 时将隐式地清除之前的所有 Mipmap。\r\n     */\r\n    get image (): ITextureCubeMipmap | null {\r\n        return this._mipmaps.length === 0 ? null : this._mipmaps[0];\r\n    }\r\n\r\n    set image (value) {\r\n        this.mipmaps = value ? [value] : [];\r\n    }\r\n\r\n    /**\r\n     * @en Create a texture cube with an array of [[Texture2D]] which represents 6 faces of the texture cube.\r\n     * @zh 通过二维贴图数组指定每个 Mipmap 的每个面创建立方体贴图。\r\n     * @param textures Texture array, the texture count must be multiple of 6. Every 6 textures are 6 faces of a mipmap level.\r\n     * The order should obey [[FaceIndex]] order.\r\n     * @param out Output texture cube, if not given, will create a new texture cube.\r\n     * @returns The created texture cube.\r\n     * @example\r\n     * ```ts\r\n     * const textures = new Array<Texture2D>(6);\r\n     * textures[TextureCube.FaceIndex.front] = frontImage;\r\n     * textures[TextureCube.FaceIndex.back] = backImage;\r\n     * textures[TextureCube.FaceIndex.left] = leftImage;\r\n     * textures[TextureCube.FaceIndex.right] = rightImage;\r\n     * textures[TextureCube.FaceIndex.top] = topImage;\r\n     * textures[TextureCube.FaceIndex.bottom] = bottomImage;\r\n     * const textureCube = TextureCube.fromTexture2DArray(textures);\r\n     * ```\r\n     */\r\n\r\n    public static fromTexture2DArray (textures: Texture2D[], out?: TextureCube): TextureCube {\r\n        const mipmaps: ITextureCubeMipmap[] = [];\r\n        const nMipmaps = textures.length / 6;\r\n        for (let i = 0; i < nMipmaps; i++) {\r\n            const x = i * 6;\r\n            mipmaps.push({\r\n                front: textures[x + FaceIndex.front].image!,\r\n                back: textures[x + FaceIndex.back].image!,\r\n                left: textures[x + FaceIndex.left].image!,\r\n                right: textures[x + FaceIndex.right].image!,\r\n                top: textures[x + FaceIndex.top].image!,\r\n                bottom: textures[x + FaceIndex.bottom].image!,\r\n            });\r\n        }\r\n        out = out || new TextureCube();\r\n        out.mipmaps = mipmaps;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @serializable\r\n    public _mipmaps: ITextureCubeMipmap[] = [];\r\n\r\n    private _generatedMipmaps: ITextureCubeMipmap[] = [];\r\n\r\n    public onLoaded (): void {\r\n        if (this._mipmapMode === MipmapMode.BAKED_CONVOLUTION_MAP) {\r\n            this.mipmapAtlas = this._mipmapAtlas;\r\n        } else {\r\n            this.mipmaps = this._mipmaps;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Reset the current texture with given size, pixel format and mipmap images.\r\n     * After reset, the gfx resource will become invalid, you must use [[uploadData]] explicitly to upload the new mipmaps to GPU resources.\r\n     * @zh 将当前贴图重置为指定尺寸、像素格式以及指定 mipmap 层级。重置后，贴图的像素数据将变为未定义。\r\n     * mipmap 图像的数据不会自动更新到贴图中，你必须显式调用 [[uploadData]] 来上传贴图数据。\r\n     * @param info @en The create information. @zh 创建贴图的相关信息。\r\n     */\r\n    public reset (info: ITextureCubeCreateInfo): void {\r\n        this._width = info.width;\r\n        this._height = info.height;\r\n        this._setGFXFormat(info.format);\r\n        const mipLevels = info.mipmapLevel === undefined ? 1 : info.mipmapLevel;\r\n        this._setMipmapLevel(mipLevels);\r\n        const minLod = info.baseLevel === undefined ? 0 : info.baseLevel;\r\n        const maxLod = info.maxLevel === undefined ? 1000 : info.maxLevel;\r\n        this._setMipRange(minLod, maxLod);\r\n        this._tryReset();\r\n    }\r\n\r\n    /**\r\n     * @en Updates the given level mipmap image.\r\n     * @zh 更新指定层级范围内的 Mipmap。当 Mipmap 数据发生了改变时应调用此方法提交更改。\r\n     * 若指定的层级范围超出了实际已有的层级范围，只有覆盖的那些层级范围会被更新。\r\n     * @param firstLevel @en First level to be updated. @zh 更新指定层的 mipmap。\r\n     * @param count @en Mipmap level count to be updated。 @zh 指定要更新层的数量。\r\n     */\r\n    public updateMipmaps (firstLevel = 0, count: number | undefined = undefined): void {\r\n        if (firstLevel >= this._generatedMipmaps.length) {\r\n            return;\r\n        }\r\n\r\n        const nUpdate = Math.min(\r\n            count === undefined ? this._generatedMipmaps.length : count,\r\n            this._generatedMipmaps.length - firstLevel,\r\n        );\r\n\r\n        for (let i = 0; i < nUpdate; ++i) {\r\n            const level = firstLevel + i;\r\n            _forEachFace(this._generatedMipmaps[level], (face, faceIndex): void => {\r\n                this._assignImage(face, level, faceIndex);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroys this texture, clear all mipmaps and release GPU resources\r\n     * @zh 销毁此贴图，清空所有 Mipmap 并释放占用的 GPU 资源。\r\n     */\r\n    public destroy (): boolean {\r\n        this._mipmaps = [];\r\n        this._generatedMipmaps = [];\r\n        this._mipmapAtlas = null;\r\n        return super.destroy();\r\n    }\r\n\r\n    /**\r\n     * @en Release used GPU resources.\r\n     * @zh 释放占用的 GPU 资源。\r\n     * @deprecated please use [[destroy]] instead\r\n     */\r\n    public releaseTexture (): void {\r\n        this.destroy();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _serialize (ctxForExporting: any): Record<string, unknown> | null {\r\n        if (EDITOR || TEST) {\r\n            if (this._mipmapMode === MipmapMode.BAKED_CONVOLUTION_MAP) {\r\n                const atlas = this._mipmapAtlas!.atlas;\r\n                let uuids = {};\r\n                if (ctxForExporting && ctxForExporting._compressUuid) {\r\n                    uuids = {\r\n                        front: EditorExtends.UuidUtils.compressUuid(atlas.front._uuid, true),\r\n                        back: EditorExtends.UuidUtils.compressUuid(atlas.back._uuid, true),\r\n                        left: EditorExtends.UuidUtils.compressUuid(atlas.left._uuid, true),\r\n                        right: EditorExtends.UuidUtils.compressUuid(atlas.right._uuid, true),\r\n                        top: EditorExtends.UuidUtils.compressUuid(atlas.top._uuid, true),\r\n                        bottom: EditorExtends.UuidUtils.compressUuid(atlas.bottom._uuid, true),\r\n                    };\r\n                } else {\r\n                    uuids = {\r\n                        front: atlas.front._uuid,\r\n                        back: atlas.back._uuid,\r\n                        left: atlas.left._uuid,\r\n                        right: atlas.right._uuid,\r\n                        top: atlas.top._uuid,\r\n                        bottom: atlas.bottom._uuid,\r\n                    };\r\n                }\r\n                return {\r\n                    base: super._serialize(ctxForExporting),\r\n                    rgbe: this.isRGBE,\r\n                    mipmapMode: this._mipmapMode,\r\n                    mipmapAtlas: uuids,\r\n                    mipmapLayout: this._mipmapAtlas!.layout,\r\n                };\r\n            } else {\r\n                return {\r\n                    base: super._serialize(ctxForExporting),\r\n                    rgbe: this.isRGBE,\r\n                    mipmaps: this._mipmaps.map((mipmap) => ((ctxForExporting && ctxForExporting._compressUuid) ? {\r\n                        front: EditorExtends.UuidUtils.compressUuid(mipmap.front._uuid, true),\r\n                        back: EditorExtends.UuidUtils.compressUuid(mipmap.back._uuid, true),\r\n                        left: EditorExtends.UuidUtils.compressUuid(mipmap.left._uuid, true),\r\n                        right: EditorExtends.UuidUtils.compressUuid(mipmap.right._uuid, true),\r\n                        top: EditorExtends.UuidUtils.compressUuid(mipmap.top._uuid, true),\r\n                        bottom: EditorExtends.UuidUtils.compressUuid(mipmap.bottom._uuid, true),\r\n                    } : {\r\n                        front: mipmap.front._uuid,\r\n                        back: mipmap.back._uuid,\r\n                        left: mipmap.left._uuid,\r\n                        right: mipmap.right._uuid,\r\n                        top: mipmap.top._uuid,\r\n                        bottom: mipmap.bottom._uuid,\r\n                    })),\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _deserialize (serializedData: ITextureCubeSerializeData, handle: any): void {\r\n        const data = serializedData;\r\n        super._deserialize(data.base, handle);\r\n        this.isRGBE = data.rgbe;\r\n        this._mipmapMode = data.mipmapMode;\r\n        if (this._mipmapMode === MipmapMode.BAKED_CONVOLUTION_MAP) {\r\n            const mipmapAtlas = data.mipmapAtlas;\r\n            const mipmapLayout = data.mipmapLayout;\r\n            this._mipmapAtlas = {\r\n                atlas: {} as ITextureCubeMipmap,\r\n                layout: mipmapLayout,\r\n            };\r\n            this._mipmapAtlas.atlas = {\r\n                front: new ImageAsset(),\r\n                back: new ImageAsset(),\r\n                left: new ImageAsset(),\r\n                right: new ImageAsset(),\r\n                top: new ImageAsset(),\r\n                bottom: new ImageAsset(),\r\n            };\r\n            const imageAssetClassId = js.getClassId(ImageAsset);\r\n            handle.result.push(this._mipmapAtlas.atlas, `front`, mipmapAtlas.front, imageAssetClassId);\r\n            handle.result.push(this._mipmapAtlas.atlas, `back`, mipmapAtlas.back, imageAssetClassId);\r\n            handle.result.push(this._mipmapAtlas.atlas, `left`, mipmapAtlas.left, imageAssetClassId);\r\n            handle.result.push(this._mipmapAtlas.atlas, `right`, mipmapAtlas.right, imageAssetClassId);\r\n            handle.result.push(this._mipmapAtlas.atlas, `top`, mipmapAtlas.top, imageAssetClassId);\r\n            handle.result.push(this._mipmapAtlas.atlas, `bottom`, mipmapAtlas.bottom, imageAssetClassId);\r\n        } else {\r\n            this._mipmaps = new Array(data.mipmaps.length);\r\n            for (let i = 0; i < data.mipmaps.length; ++i) {\r\n                // Prevent resource load failed\r\n                this._mipmaps[i] = {\r\n                    front: new ImageAsset(),\r\n                    back: new ImageAsset(),\r\n                    left: new ImageAsset(),\r\n                    right: new ImageAsset(),\r\n                    top: new ImageAsset(),\r\n                    bottom: new ImageAsset(),\r\n                };\r\n                const mipmap = data.mipmaps[i];\r\n                const imageAssetClassId = js.getClassId(ImageAsset);\r\n                handle.result.push(this._mipmaps[i], `front`, mipmap.front, imageAssetClassId);\r\n                handle.result.push(this._mipmaps[i], `back`, mipmap.back, imageAssetClassId);\r\n                handle.result.push(this._mipmaps[i], `left`, mipmap.left, imageAssetClassId);\r\n                handle.result.push(this._mipmaps[i], `right`, mipmap.right, imageAssetClassId);\r\n                handle.result.push(this._mipmaps[i], `top`, mipmap.top, imageAssetClassId);\r\n                handle.result.push(this._mipmaps[i], `bottom`, mipmap.bottom, imageAssetClassId);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected override _getGfxTextureCreateInfo (presumed: PresumedGFXTextureInfo): TextureInfo {\r\n        const texInfo = new TextureInfo(TextureType.CUBE);\r\n        texInfo.width = this._width;\r\n        texInfo.height = this._height;\r\n        texInfo.layerCount = 6;\r\n        Object.assign(texInfo, presumed);\r\n        return texInfo;\r\n    }\r\n\r\n    protected override _getGfxTextureViewCreateInfo (presumed: PresumedGFXTextureViewInfo): TextureViewInfo {\r\n        const texViewInfo = new TextureViewInfo();\r\n        texViewInfo.type = TextureType.CUBE;\r\n        texViewInfo.baseLayer = 0;\r\n        texViewInfo.layerCount = 6;\r\n        Object.assign(texViewInfo, presumed);\r\n        return texViewInfo;\r\n    }\r\n\r\n    protected _uploadAtlas (): void {\r\n        const layout = this._mipmapAtlas!.layout;\r\n        const mip0Layout = layout[0];\r\n        this.reset({\r\n            width: mip0Layout.width,\r\n            height: mip0Layout.height,\r\n            format: this._mipmapAtlas!.atlas.front.format,\r\n            mipmapLevel: layout.length,\r\n        });\r\n\r\n        _forEachFace(this._mipmapAtlas!.atlas, (face, faceIndex): void => {\r\n            const tex = new Texture2D();\r\n            tex.image = face;\r\n            tex.reset({\r\n                width: face.width,\r\n                height: face.height,\r\n                format: face.format,\r\n            });\r\n            tex.uploadData(face.data!);\r\n\r\n            for (let i = 0; i < layout.length; i++) {\r\n                const layoutInfo = layout[i];\r\n\r\n                const size = tex.getGFXTexture()!.size;\r\n                const buffer = new Uint8Array(size); // should use the gfxTexture memory size\r\n                const region = new BufferTextureCopy();\r\n                region.texOffset.x = layoutInfo.left;\r\n                region.texOffset.y = layoutInfo.top;\r\n                region.texExtent.width = layoutInfo.width;\r\n                region.texExtent.height = layoutInfo.height;\r\n\r\n                this._getGFXDevice()!.copyTextureToBuffers(tex.getGFXTexture()!, [buffer], [region]);\r\n                const bufferAsset = new ImageAsset({\r\n                    _data: buffer,\r\n                    _compressed: face.isCompressed,\r\n                    width: layoutInfo.width,\r\n                    height: layoutInfo.height,\r\n                    format: face.format,\r\n                });\r\n                this._assignImage(bufferAsset, layoutInfo.level, faceIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    public initDefault (uuid?: string): void {\r\n        super.initDefault(uuid);\r\n\r\n        const imageAsset = new ImageAsset();\r\n        imageAsset.initDefault();\r\n        this.mipmaps = [{\r\n            front: imageAsset,\r\n            back: imageAsset,\r\n            top: imageAsset,\r\n            bottom: imageAsset,\r\n            left: imageAsset,\r\n            right: imageAsset,\r\n        }];\r\n    }\r\n\r\n    public validate (): boolean {\r\n        if (this._mipmapMode === MipmapMode.BAKED_CONVOLUTION_MAP) {\r\n            if (this.mipmapAtlas === null || this.mipmapAtlas.layout.length === 0) {\r\n                return false;\r\n            }\r\n            const atlas = this.mipmapAtlas.atlas;\r\n            return !!(atlas.top && atlas.bottom && atlas.front && atlas.back && atlas.left && atlas.right);\r\n        } else {\r\n            return this._mipmaps.length !== 0 && !this._mipmaps.find((x): boolean => !(x.top && x.bottom && x.front && x.back && x.left && x.right));\r\n        }\r\n    }\r\n}\r\n\r\nlegacyCC.TextureCube = TextureCube;\r\n\r\ninterface ITextureCubeSerializeData {\r\n    base: string;\r\n    rgbe: boolean;\r\n    mipmapMode: number;\r\n    mipmapAtlas: {\r\n        front: string;\r\n        back: string;\r\n        left: string;\r\n        right: string;\r\n        top: string;\r\n        bottom: string;\r\n    };\r\n    mipmapLayout: [];\r\n    mipmaps: {\r\n        front: string;\r\n        back: string;\r\n        left: string;\r\n        right: string;\r\n        top: string;\r\n        bottom: string;\r\n    }[];\r\n}\r\n\r\n/**\r\n * @param {Mipmap} mipmap\r\n * @param {(face: ImageAsset) => void} callback\r\n */\r\nfunction _forEachFace (mipmap: ITextureCubeMipmap, callback: (face: ImageAsset, faceIndex: number) => void): void {\r\n    callback(mipmap.front, FaceIndex.front);\r\n    callback(mipmap.back, FaceIndex.back);\r\n    callback(mipmap.left, FaceIndex.left);\r\n    callback(mipmap.right, FaceIndex.right);\r\n    callback(mipmap.top, FaceIndex.top);\r\n    callback(mipmap.bottom, FaceIndex.bottom);\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { EDITOR_NOT_IN_PREVIEW, TEST } from 'internal:constants';\r\nimport { Asset } from '../assets';\r\nimport { js, cclegacy } from '../../core';\r\nimport Cache from './cache';\r\nimport { decodeUuid, normalize } from './helper';\r\n\r\nexport interface IConfigOption {\r\n    importBase: string;\r\n    nativeBase: string;\r\n    base: string;\r\n    name: string;\r\n    deps: string[];\r\n    uuids: string[];\r\n    paths: Record<string, any[]>;\r\n    scenes: Record<string, string>;\r\n    packs: Record<string, string[]>;\r\n    versions: { import: string[], native: string[] };\r\n    redirect: string[];\r\n    debug: boolean;\r\n    types: string[];\r\n    extensionMap: Record<string, string[]>;\r\n}\r\n\r\n/**\r\n * @en Th asset's meta information. Used to obtain information about the asset.\r\n * @zh 资源的元信息。用于获取资源的相关信息。\r\n */\r\nexport interface IAssetInfo {\r\n    /**\r\n     * @en The uuid of asset.\r\n     * @zh 资源的 uuid.\r\n     */\r\n    uuid: string;\r\n    /**\r\n     * @en Information about the file where the asset is located. A asset can be in multiple merged files.\r\n     * @zh 资源所在文件的相关信息。一个资源可在多个合并文件中。\r\n     */\r\n    packs?: IPackInfo[];\r\n    /**\r\n     * @en The redirect bundle of this asset. When multiple bundles with different priorities reference to the same asset,\r\n     * the asset will be stored in the bundle with the higher priority first, while the other bundles will store a record\r\n     * and the `redirect` property of that record will point to the bundle that actually stores the resource.\r\n     * @zh 资源所重定向的 bundle。当多个 bundle 引用同一份资源，且优先级不一样时，资源会优先存储在优先级高的 bundle 中，\r\n     * 其他 bundle 则会存储一条记录，并且该记录的 redirect 属性将指向真实存储此资源的 bundle。\r\n     */\r\n    redirect?: string;\r\n    /**\r\n     * @en The version of the asset.\r\n     * @zh 资源的版本号。\r\n     */\r\n    ver?: string;\r\n    /**\r\n     * @en The version of the native dependency of the asset.\r\n     * @zh 资源的原生依赖的版本号。\r\n     */\r\n    nativeVer?: string;\r\n    /**\r\n     * @en The extension of the asset, or 'json' if it is null.\r\n     * This property is used to mark assets with special extensions like 'CCON'.\r\n     * @zh 资源的原生依赖的版本号。\r\n     */\r\n    extension?: string;\r\n}\r\n\r\n/**\r\n * @en Information about the merged files.\r\n * @zh 合并文件的信息。\r\n */\r\nexport interface IPackInfo {\r\n    /**\r\n     * @en The unique id of this merged file.\r\n     * @zh 此合并文件的唯一 id.\r\n     */\r\n    uuid: string;\r\n\r\n    /**\r\n     * @en The uuid of all the assets contained in this file.\r\n     * @zh 此文件中包含的所有资源的 uuid。\r\n     */\r\n    packedUuids: string[];\r\n\r\n    /**\r\n     * @en The extension of this merged file on the file system, default is 'json'.\r\n     * @zh 此合并文件在文件系统上的扩展名，默认为 'json'.\r\n     */\r\n    ext: string;\r\n}\r\n\r\n/**\r\n * @en Addressable asset information, you can look up the path of the asset in the project and the type of the asset.\r\n * @zh 可寻址资源的信息，你可以查询到该资源在项目中的路径与资源的类型。\r\n */\r\nexport interface IAddressableInfo extends IAssetInfo {\r\n    /**\r\n     * @en The relative path of this asset in the project relative to the bundle folder.\r\n     * @zh 此资源在项目中相对于 bundle 文件夹的相对路径。\r\n     */\r\n    path: string;\r\n    /**\r\n     * @en The type of the asset.\r\n     * @zh 此资源的类型。\r\n     */\r\n    ctor: Constructor<Asset>;\r\n}\r\n\r\n/**\r\n * @en Information about the scene asset.\r\n * @zh 场景资源的相关信息。\r\n */\r\nexport interface ISceneInfo extends IAssetInfo {\r\n    /**\r\n     * @en The path of the scene asset in the project relative to the bundle folder.\r\n     * @zh 场景资源在项目中相对 bundle 文件夹的路径。\r\n     */\r\n    url: string;\r\n}\r\n\r\nconst isMatchByWord = (path: string, test: string): boolean => {\r\n    if (path.length > test.length) {\r\n        const nextAscii = path.charCodeAt(test.length);\r\n        return nextAscii === 47; // '/'\r\n    }\r\n    return true;\r\n};\r\n\r\nconst processOptions = (options: IConfigOption): void => {\r\n    if (EDITOR_NOT_IN_PREVIEW || TEST) { return; }\r\n    let uuids = options.uuids;\r\n    const paths = options.paths;\r\n    const types = options.types;\r\n    const bundles = options.deps;\r\n    const realEntries = options.paths = Object.create(null);\r\n\r\n    if (options.debug === false) {\r\n        for (let i = 0, l = uuids.length; i < l; i++) {\r\n            uuids[i] = decodeUuid(uuids[i]);\r\n        }\r\n\r\n        for (const id in paths) {\r\n            const entry = paths[id];\r\n            const type = entry[1];\r\n            entry[1] = types[type];\r\n        }\r\n    } else {\r\n        const out = Object.create(null);\r\n        for (let i = 0, l = uuids.length; i < l; i++) {\r\n            const uuid = uuids[i];\r\n            uuids[i] = out[uuid] = decodeUuid(uuid);\r\n        }\r\n        uuids = out;\r\n    }\r\n\r\n    for (const id in paths) {\r\n        const entry = paths[id];\r\n        realEntries[uuids[id]] = entry;\r\n    }\r\n\r\n    const scenes = options.scenes;\r\n    for (const name in scenes) {\r\n        const uuid = scenes[name];\r\n        scenes[name] = uuids[uuid];\r\n    }\r\n\r\n    const packs = options.packs;\r\n    for (const packId in packs) {\r\n        const packedIds = packs[packId];\r\n        for (let j = 0; j < packedIds.length; ++j) {\r\n            packedIds[j] = uuids[packedIds[j]];\r\n        }\r\n    }\r\n\r\n    const versions = options.versions;\r\n    if (versions) {\r\n        for (const folder in versions) {\r\n            const entries = versions[folder];\r\n            for (let i = 0; i < entries.length; i += 2) {\r\n                const uuid = entries[i];\r\n                entries[i] = uuids[uuid] || uuid;\r\n            }\r\n        }\r\n    }\r\n\r\n    const redirect = options.redirect;\r\n    if (redirect) {\r\n        for (let i = 0; i < redirect.length; i += 2) {\r\n            redirect[i] = uuids[redirect[i]];\r\n            redirect[i + 1] = bundles[redirect[i + 1]];\r\n        }\r\n    }\r\n\r\n    const extensionMap = options.extensionMap;\r\n    if (extensionMap) {\r\n        for (const ext in options.extensionMap) {\r\n            if (!Object.prototype.hasOwnProperty.call(options.extensionMap, ext)) {\r\n                continue;\r\n            }\r\n            options.extensionMap[ext].forEach((uuid, index): void => {\r\n                options.extensionMap[ext][index] = uuids[uuid] || uuid;\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport default class Config {\r\n    public name = '';\r\n\r\n    public base = '';\r\n\r\n    public importBase = '';\r\n\r\n    public nativeBase = '';\r\n\r\n    public deps: string[] | null = null;\r\n\r\n    public assetInfos = new Cache<IAssetInfo>();\r\n\r\n    public scenes = new Cache<ISceneInfo>();\r\n\r\n    public paths = new Cache<IAddressableInfo[]>();\r\n\r\n    public init (options: IConfigOption): void {\r\n        processOptions(options);\r\n\r\n        this.importBase = options.importBase || '';\r\n        this.nativeBase = options.nativeBase || '';\r\n        this.base = options.base || '';\r\n        this.name = options.name || '';\r\n        this.deps = options.deps || [];\r\n        // init\r\n        this._initUuid(options.uuids);\r\n        this._initPath(options.paths);\r\n        this._initScene(options.scenes);\r\n        this._initPackage(options.packs, options.extensionMap['.cconb']);\r\n        this._initVersion(options.versions);\r\n        this._initRedirect(options.redirect);\r\n        for (const ext in options.extensionMap) {\r\n            if (!Object.prototype.hasOwnProperty.call(options.extensionMap, ext)) {\r\n                continue;\r\n            }\r\n            options.extensionMap[ext].forEach((uuid): void => {\r\n                const assetInfo = this.assetInfos.get(uuid);\r\n                if (assetInfo) {\r\n                    assetInfo.extension = ext;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public getInfoWithPath (path: string, type?: Constructor<Asset> | null): IAddressableInfo | null {\r\n        if (!path) {\r\n            return null;\r\n        }\r\n        path = normalize(path);\r\n        const items = this.paths.get(path);\r\n        if (items) {\r\n            if (type) {\r\n                for (let i = 0, l = items.length; i < l; i++) {\r\n                    const assetInfo = items[i];\r\n                    if (js.isChildClassOf(assetInfo.ctor, type)) {\r\n                        return assetInfo;\r\n                    }\r\n                }\r\n            } else {\r\n                return items[0];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getDirWithPath (path: string, type?: Constructor<Asset> | null, out?: IAddressableInfo[]): IAddressableInfo[] {\r\n        path = normalize(path);\r\n        if (path[path.length - 1] === '/') {\r\n            path = path.slice(0, -1);\r\n        }\r\n\r\n        const infos = out || [];\r\n        this.paths.forEach((items, p): void => {\r\n            if ((p.startsWith(path) && isMatchByWord(p, path)) || !path) {\r\n                for (let i = 0, l = items.length; i < l; i++) {\r\n                    const entry = items[i];\r\n                    if (!type || js.isChildClassOf(entry.ctor, type)) {\r\n                        infos.push(entry);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return infos;\r\n    }\r\n\r\n    public getAssetInfo (uuid: string): IAssetInfo | null {\r\n        return this.assetInfos.get(uuid) || null;\r\n    }\r\n\r\n    public getSceneInfo (name: string): ISceneInfo | null {\r\n        if (!name.endsWith('.scene')) {\r\n            name += '.scene';\r\n        }\r\n        if (name[0] !== '/' && !name.startsWith('db://')) {\r\n            name = `/${name}`;\r\n        }\r\n        // search scene\r\n        const info = this.scenes.find((val, key): boolean => key.endsWith(name));\r\n        return info;\r\n    }\r\n\r\n    public destroy (): void {\r\n        this.paths.destroy();\r\n        this.scenes.destroy();\r\n        this.assetInfos.destroy();\r\n    }\r\n\r\n    private _initUuid (uuidList: string[]): void {\r\n        if (!uuidList) {\r\n            return;\r\n        }\r\n        this.assetInfos.clear();\r\n        for (let i = 0, l = uuidList.length; i < l; i++) {\r\n            const uuid = uuidList[i];\r\n            this.assetInfos.add(uuid, { uuid });\r\n        }\r\n    }\r\n\r\n    private _initPath (pathList: Record<string, string[]>): void {\r\n        if (!pathList) { return; }\r\n        const paths = this.paths;\r\n        paths.clear();\r\n        for (const uuid in pathList) {\r\n            const info = pathList[uuid];\r\n            const path = info[0];\r\n            const type = info[1];\r\n            const isSubAsset = info.length === 3;\r\n\r\n            const assetInfo = this.assetInfos.get(uuid) as IAddressableInfo;\r\n            assetInfo.path = path;\r\n            assetInfo.ctor = js.getClassById(type) as Constructor<Asset>;\r\n            if (paths.has(path)) {\r\n                if (isSubAsset) {\r\n                    paths.get(path)!.push(assetInfo);\r\n                } else {\r\n                    paths.get(path)!.unshift(assetInfo);\r\n                }\r\n            } else {\r\n                paths.add(path, [assetInfo]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _initScene (sceneList: Record<string, string>): void {\r\n        if (!sceneList) { return; }\r\n        const scenes = this.scenes;\r\n        scenes.clear();\r\n        const assetInfos = this.assetInfos;\r\n        for (const sceneName in sceneList) {\r\n            const uuid = sceneList[sceneName];\r\n            const assetInfo = assetInfos.get(uuid) as ISceneInfo;\r\n            assetInfo.url = sceneName;\r\n            scenes.add(sceneName, assetInfo);\r\n        }\r\n    }\r\n\r\n    private _initPackage (packageList: Record<string, string[]>, cconbUuids: string[]): void {\r\n        if (!packageList) { return; }\r\n        const assetInfos = this.assetInfos;\r\n        for (const packUuid in packageList) {\r\n            const uuids = packageList[packUuid];\r\n            const isCconb = uuids?.length > 0 && cconbUuids?.includes(uuids[0]);\r\n            const ext = isCconb ? '.bin' : '.json';\r\n            const pack = { uuid: packUuid, packedUuids: uuids, ext };\r\n            assetInfos.add(packUuid, pack);\r\n\r\n            for (let i = 0, l = uuids.length; i < l; i++) {\r\n                const uuid = uuids[i];\r\n                const assetInfo = assetInfos.get(uuid)!;\r\n                const assetPacks = assetInfo.packs;\r\n                if (assetPacks) {\r\n                    if (l === 1) {\r\n                        assetPacks.unshift(pack);\r\n                    } else {\r\n                        assetPacks.push(pack);\r\n                    }\r\n                } else {\r\n                    assetInfo.packs = [pack];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _initVersion (versions: { import?: string[], native?: string[] }): void {\r\n        if (!versions) { return; }\r\n        const assetInfos = this.assetInfos;\r\n        let entries = versions.import;\r\n        if (entries) {\r\n            for (let i = 0, l = entries.length; i < l; i += 2) {\r\n                const uuid = entries[i];\r\n                const assetInfo = assetInfos.get(uuid)!;\r\n                assetInfo.ver = entries[i + 1];\r\n            }\r\n        }\r\n        entries = versions.native;\r\n        if (entries) {\r\n            for (let i = 0, l = entries.length; i < l; i += 2) {\r\n                const uuid = entries[i];\r\n                const assetInfo = assetInfos.get(uuid)!;\r\n                assetInfo.nativeVer = entries[i + 1];\r\n            }\r\n        }\r\n    }\r\n\r\n    private _initRedirect (redirect: string[]): void {\r\n        if (!redirect) { return; }\r\n        const assetInfos = this.assetInfos;\r\n        for (let i = 0, l = redirect.length; i < l; i += 2) {\r\n            const uuid = redirect[i];\r\n            const assetInfo = assetInfos.get(uuid)!;\r\n            assetInfo.redirect = redirect[i + 1];\r\n        }\r\n    }\r\n}\r\n\r\nif (TEST) {\r\n    cclegacy._Test.Config = Config;\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { Asset } from '../assets/asset';\r\nimport { isValid, js, misc } from '../../core';\r\nimport { Node, Scene } from '../../scene-graph';\r\nimport Cache from './cache';\r\nimport dependUtil from './depend-util';\r\nimport { assets, references } from './shared';\r\n\r\nfunction visitAsset (asset: Asset, deps: string[]): void {\r\n    // Skip assets generated programmatically or by user (e.g. label texture)\r\n    if (!asset._uuid) {\r\n        return;\r\n    }\r\n    deps.push(asset._uuid);\r\n}\r\n\r\nfunction visitComponent (comp: any, deps: string[]): void {\r\n    const props = Object.getOwnPropertyNames(comp);\r\n    for (let i = 0; i < props.length; i++) {\r\n        const propName = props[i];\r\n        if (propName === 'node' || propName === '__eventTargets') { continue; }\r\n        const value = comp[propName];\r\n        if (typeof value === 'object' && value) {\r\n            if (Array.isArray(value)) {\r\n                for (let j = 0; j < value.length; j++) {\r\n                    const val = value[j];\r\n                    if (val instanceof Asset) {\r\n                        visitAsset(val, deps);\r\n                    }\r\n                }\r\n            } else if (!value.constructor || value.constructor === Object) {\r\n                const keys = Object.getOwnPropertyNames(value);\r\n                for (let j = 0; j < keys.length; j++) {\r\n                    const val = value[keys[j]];\r\n                    if (val instanceof Asset) {\r\n                        visitAsset(val, deps);\r\n                    }\r\n                }\r\n            } else if (value instanceof Asset) {\r\n                visitAsset(value, deps);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction visitNode (node: any, deps: string[]): void {\r\n    for (let i = 0; i < node._components.length; i++) {\r\n        visitComponent(node._components[i], deps);\r\n    }\r\n    for (let i = 0; i < node._children.length; i++) {\r\n        visitNode(node._children[i], deps);\r\n    }\r\n}\r\n\r\nfunction descendOpRef (asset: Asset, refs: Record<string, number>, exclude: string[], op: number): void {\r\n    exclude.push(asset._uuid);\r\n    const depends = dependUtil.getDeps(asset._uuid);\r\n    for (let i = 0, l = depends.length; i < l; i++) {\r\n        const dependAsset = assets.get(depends[i]);\r\n        if (!dependAsset) { continue; }\r\n        const uuid = dependAsset._uuid;\r\n        if (!(uuid in refs)) {\r\n            refs[uuid] = dependAsset.refCount + op;\r\n        } else {\r\n            refs[uuid] += op;\r\n        }\r\n        if (exclude.includes(uuid)) { continue; }\r\n        descendOpRef(dependAsset, refs, exclude, op);\r\n    }\r\n}\r\n\r\nconst _temp = [];\r\nfunction checkCircularReference (asset: Asset): number {\r\n    // check circular reference\r\n    const refs: Record<string, number> = Object.create(null);\r\n    refs[asset._uuid] = asset.refCount;\r\n    descendOpRef(asset, refs, _temp, -1);\r\n    _temp.length = 0;\r\n    if (refs[asset._uuid] !== 0) { return refs[asset._uuid]; }\r\n\r\n    for (const uuid in refs) {\r\n        if (refs[uuid] !== 0) {\r\n            descendOpRef(assets.get(uuid)!, refs, _temp, 1);\r\n        }\r\n    }\r\n    _temp.length = 0;\r\n\r\n    return refs[asset._uuid];\r\n}\r\n\r\nexport class ReleaseManager {\r\n    private _persistNodeDeps = new Cache<string[]>();\r\n    private _toDelete = new Cache<Asset>();\r\n    private _eventListener = false;\r\n    private _dontDestroyAssets: string[] = [];\r\n\r\n    public addIgnoredAsset (asset: Asset): void {\r\n        this._dontDestroyAssets.push(asset._uuid);\r\n    }\r\n\r\n    public init (): void {\r\n        this._persistNodeDeps.clear();\r\n        this._toDelete.clear();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _addPersistNodeRef (node: Node): void {\r\n        const deps = [];\r\n        visitNode(node, deps);\r\n        for (let i = 0, l = deps.length; i < l; i++) {\r\n            const dependAsset = assets.get(deps[i]);\r\n            if (dependAsset) {\r\n                dependAsset.addRef();\r\n            }\r\n        }\r\n        this._persistNodeDeps.add(node.uuid, deps);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _removePersistNodeRef (node: Node): void {\r\n        if (!this._persistNodeDeps.has(node.uuid)) { return; }\r\n\r\n        const deps = this._persistNodeDeps.get(node.uuid) as string[];\r\n        for (let i = 0, l = deps.length; i < l; i++) {\r\n            const dependAsset = assets.get(deps[i]);\r\n            if (dependAsset) {\r\n                dependAsset.decRef();\r\n            }\r\n        }\r\n        this._persistNodeDeps.remove(node.uuid);\r\n    }\r\n\r\n    // do auto release\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _autoRelease (oldScene: Scene, newScene: Scene, persistNodes: Record<string, Node>): void {\r\n        if (oldScene) {\r\n            const childs = dependUtil.getDeps(oldScene.uuid);\r\n            for (let i = 0, l = childs.length; i < l; i++) {\r\n                const asset = assets.get(childs[i]);\r\n                if (asset) {\r\n                    asset.decRef(TEST || oldScene.autoReleaseAssets);\r\n                }\r\n            }\r\n\r\n            const dependencies = dependUtil._depends.get(oldScene.uuid);\r\n            if (dependencies && dependencies.persistDeps) {\r\n                const persistDeps = dependencies.persistDeps;\r\n                for (let i = 0, l = persistDeps.length; i < l; i++) {\r\n                    const asset = assets.get(persistDeps[i]);\r\n                    if (asset) {\r\n                        asset.decRef(TEST || oldScene.autoReleaseAssets);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (oldScene.uuid !== newScene.uuid) {\r\n                dependUtil.remove(oldScene.uuid);\r\n            }\r\n        }\r\n\r\n        // transfer refs from persist nodes to new scene\r\n        const sceneDeps = dependUtil._depends.get(newScene.uuid);\r\n        if (sceneDeps) { sceneDeps.persistDeps = []; }\r\n        for (const key in persistNodes) {\r\n            const node = persistNodes[key];\r\n            const deps = this._persistNodeDeps.get(node.uuid) as string[];\r\n            for (const dep of deps) {\r\n                const dependAsset = assets.get(dep);\r\n                if (dependAsset) {\r\n                    dependAsset.addRef();\r\n                }\r\n            }\r\n            if (!sceneDeps) { continue; }\r\n            sceneDeps.persistDeps!.push(...deps);\r\n        }\r\n    }\r\n\r\n    public tryRelease (asset: Asset, force = false): void {\r\n        if (!(asset instanceof Asset)) { return; }\r\n        if (force) {\r\n            this._free(asset, force);\r\n            return;\r\n        }\r\n\r\n        this._toDelete.add(asset._uuid, asset);\r\n        if (TEST) return;\r\n        if (!this._eventListener) {\r\n            this._eventListener = true;\r\n            misc.callInNextTick(this._freeAssets.bind(this));\r\n        }\r\n    }\r\n\r\n    private _freeAssets (): void {\r\n        this._eventListener = false;\r\n        this._toDelete.forEach((asset): void => {\r\n            this._free(asset);\r\n        });\r\n        this._toDelete.clear();\r\n    }\r\n\r\n    private _free (asset: Asset, force = false): void {\r\n        const uuid = asset._uuid;\r\n        this._toDelete.remove(uuid);\r\n\r\n        if (!isValid(asset, true) || this._dontDestroyAssets.indexOf(uuid) !== -1) { return; }\r\n\r\n        if (!force) {\r\n            if (asset.refCount > 0) {\r\n                if (checkCircularReference(asset) > 0) { return; }\r\n            }\r\n        }\r\n\r\n        // remove from cache\r\n        assets.remove(uuid);\r\n        const depends = dependUtil.getDeps(uuid);\r\n        for (let i = 0, l = depends.length; i < l; i++) {\r\n            const dependAsset = assets.get(depends[i]);\r\n            if (dependAsset) {\r\n                dependAsset.decRef(false);\r\n                // no need to release dependencies recursively in editor\r\n                if (!EDITOR) {\r\n                    this._free(dependAsset, false);\r\n                }\r\n            }\r\n        }\r\n        // only release non-gc asset in editor\r\n        if (!EDITOR) {\r\n            asset.destroy();\r\n        }\r\n        dependUtil.remove(uuid);\r\n        if (EDITOR) {\r\n            const dependant = references!.get(uuid);\r\n            if (dependant && dependant.length === 0) {\r\n                references!.remove(uuid);\r\n            }\r\n            references!.forEach((dependance, key): void => {\r\n                for (let i = dependance.length - 1; i >= 0; i--) {\r\n                    if (dependance[i][0].deref() === asset) {\r\n                        js.array.fastRemoveAt(dependance, i);\r\n                    }\r\n                }\r\n                if (dependance.length === 0) {\r\n                    references!.remove(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const releaseManager =  new ReleaseManager();\r\n","/* eslint-disable max-len */\r\n/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Asset } from '../assets/asset';\r\nimport { SceneAsset } from '../assets/scene-asset';\r\nimport { error, errorID, cclegacy } from '../../core';\r\nimport Config, { IAddressableInfo, IAssetInfo, IConfigOption, ISceneInfo } from './config';\r\nimport { releaseManager } from './release-manager';\r\nimport RequestItem from './request-item';\r\nimport { assets, bundles, RequestType } from './shared';\r\nimport { parseLoadResArgs, parseParameters } from './utilities';\r\nimport type { AssetManager } from './asset-manager';\r\n\r\n/**\r\n * @en\r\n * A bundle contains an amount of assets(includes scene), you can load, preload, release asset which is in this bundle.\r\n *\r\n * @zh\r\n * 一个包含一定数量资源（包括场景）的包，你可以加载，预加载，释放此包内的资源。\r\n *\r\n */\r\nexport default class Bundle {\r\n    private _config: Config = new Config();\r\n\r\n    constructor () {}\r\n\r\n    /**\r\n     * For internal use.\r\n     * @engineInternal\r\n     */\r\n    public get config (): Config {\r\n        return this._config;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The name of this bundle.\r\n     *\r\n     * @zh\r\n     * 此 bundle 的名称。\r\n     *\r\n     */\r\n    public get name (): string {\r\n        return this._config.name;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The dependent bundles of this bundle.\r\n     *\r\n     * @zh\r\n     * 此 bundle 的依赖包。\r\n     *\r\n     */\r\n    public get deps (): string[] {\r\n        return this._config.deps!;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The root path of this bundle, such like 'http://example.com/bundle1'.\r\n     *\r\n     * @zh\r\n     * 此 bundle 的根路径, 例如 'http://example.com/bundle1'。\r\n     *\r\n     */\r\n    public get base (): string {\r\n        return this._config.base;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets asset's info using path, only valid when asset is in bundle folder.\r\n     *\r\n     * @zh\r\n     * 使用 path 获取资源的配置信息。\r\n     *\r\n     * @param path @en The relative path of asset, such as 'images/a'. @zh 资源的相对路径，例如 `images/a`。\r\n     * @param type @en The constructor of asset, such as `Texture2D`. @zh 资源的类型，例如 [[Texture2D]]。\r\n     * @returns @en The asset info. @zh 资源的信息。\r\n     *\r\n     * @example\r\n     * const info = bundle.getInfoWithPath('image/a', Texture2D);\r\n     *\r\n     */\r\n    public getInfoWithPath (path: string, type?: Constructor<Asset> | null): IAddressableInfo | null {\r\n        return this._config.getInfoWithPath(path, type);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets all asset's info within specific folder.\r\n     *\r\n     * @zh\r\n     * 获取在某个指定文件夹下的所有资源信息。\r\n     *\r\n     * @param path @en The relative path of folder, such as 'images'. @zh 文件夹的相对路径，例如 `images`。\r\n     * @param type\r\n     * @en The asset type, can be used to find the information of the specified type of asset in the directory.\r\n     * @zh 资源的类型，指定后可以用来查找目录下指定类型的资源信息。\r\n     * @param out @en The output array. @zh 输出数组。\r\n     * @returns @en Queried asset information. @zh 查询到的资源信息。\r\n     *\r\n     * @example\r\n     * const infos = [];\r\n     * bundle.getDirWithPath('images', Texture2D, infos);\r\n     */\r\n    public getDirWithPath (path: string, type?: Constructor<Asset> | null, out?: IAddressableInfo[]): IAddressableInfo[] {\r\n        return this._config.getDirWithPath(path, type, out);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get asset's information with uuid.\r\n     *\r\n     * @zh\r\n     * 通过 uuid 获取资源信息。\r\n     *\r\n     * @param  uuid @en The asset's uuid. @zh 资源的 uuid。\r\n     * @returns @en The information of asset. @zh 资源的信息。\r\n     *\r\n     * @example\r\n     * const info = bundle.getAssetInfo('fcmR3XADNLgJ1ByKhqcC5Z');\r\n     *\r\n     */\r\n    public getAssetInfo (uuid: string): IAssetInfo | null {\r\n        return this._config.getAssetInfo(uuid);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets scene's information with name.\r\n     *\r\n     * @zh\r\n     * 通过场景名获取场景信息。\r\n     *\r\n     * @param name @en The name of scene. @zh 场景名称。\r\n     * @returns @en The information of scene. @zh 场景信息。\r\n     *\r\n     * @example\r\n     * const info = bundle.getSceneInfo('first.fire');\r\n     *\r\n     */\r\n    public getSceneInfo (name: string): ISceneInfo | null {\r\n        return this._config.getSceneInfo(name);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Initializes this bundle with options.\r\n     *\r\n     * @zh\r\n     * 初始化此 bundle。\r\n     *\r\n     * @param options\r\n     * @deprecate Since v3.7, this is an internal engine interface and you should not call this interface under any circumstances.\r\n     *\r\n     */\r\n    public init (options: IConfigOption): void {\r\n        this._config.init(options);\r\n        bundles.add(options.name, this);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Loads the asset within this bundle by the path which is relative to bundle's path.\r\n     *\r\n     * @zh\r\n     * 通过相对路径加载分包中的资源。路径是相对分包文件夹路径的相对路径。\r\n     *\r\n     * @param paths\r\n     * @en Paths of the target assets.These paths are relative to the bundle's folder, extension name must be omitted.\r\n     * @zh 需要加载的资源的路径。此路径为工程中相对于 bundle 文件夹的相对路径，路径中请不要带扩展名。\r\n     * @param type\r\n     * @en Asset type, if this parameter is passed, the asset of the corresponding type will be found in the assets of the corresponding path to finish loading.\r\n     * @zh 资源类型，如果传入此参数，则会在对应路径的资源中找到对应类型的资源完成加载。\r\n     * @param onProgress\r\n     * @en Callback invoked when the loading progress change.\r\n     * @zh 加载进度发生变化时执行的回调。\r\n     * @param onProgress.finish\r\n     * @en The number of request items that have been loaded.\r\n     * @zh 已经完成加载的资源数量。\r\n     * @param onProgress.total\r\n     * @en The number of all request items to be loaded.\r\n     * @zh 所有待加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的加载项。\r\n     * @param onComplete @en Callback invoked when all assets loaded. @zh 所有资源加载完成后的回调。\r\n     * @param onComplete.error @en Error message during loading, or null if loaded successfully. @zh 加载过程中的错误信息，如果加载成功则为 null。\r\n     * @param onComplete.assets @en The loaded asset, or null if an error occurred during loading. @zh 已加载的资源，如果加载过程中有错误发生，则为 null。\r\n     *\r\n     * @example\r\n     * // load the texture (${project}/assets/resources/textures/background.jpg) from resources\r\n     * resources.load('textures/background', Texture2D, (err, texture) => console.log(err));\r\n     *\r\n     * // load the audio (${project}/assets/resources/music/hit.mp3) from resources\r\n     * resources.load('music/hit', AudioClip, (err, audio) => console.log(err));\r\n     *\r\n     * // load the prefab (${project}/assets/bundle1/misc/character/cocos) from bundle1 folder\r\n     * bundle1.load('misc/character/cocos', Prefab, (err, prefab) => console.log(err));\r\n     *\r\n     * // load the sprite frame (${project}/assets/some/xxx/bundle2/imgs/cocos.png) from bundle2 folder\r\n     * bundle2.load('imgs/cocos', SpriteFrame, null, (err, spriteFrame) => console.log(err));\r\n     *\r\n     */\r\n    public load<T extends Asset> (\r\n        paths: string,\r\n        type: Constructor<T> | null,\r\n        onProgress: ((finished: number, total: number, item: RequestItem) => void) | null,\r\n        onComplete: ((err: Error | null, data: T) => void) | null): void;\r\n    public load<T extends Asset> (\r\n        paths: string[], type: Constructor<T> | null,\r\n        onProgress: ((finished: number, total: number, item: RequestItem) => void) | null,\r\n        onComplete: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public load<T extends Asset> (paths: string, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: T) => void) | null): void;\r\n    public load<T extends Asset> (paths: string[], onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public load<T extends Asset> (paths: string, onComplete?: ((err: Error | null, data: T) => void) | null): void;\r\n    public load<T extends Asset> (paths: string[], onComplete?: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public load<T extends Asset> (paths: string, type: Constructor<T> | null, onComplete?: ((err: Error | null, data: T) => void) | null): void;\r\n    public load<T extends Asset> (paths: string[], type: Constructor<T> | null, onComplete?: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public load<T extends Asset> (\r\n        paths: string|string[],\r\n        type?: Constructor<T> | ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: T|T[]) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: T|T[]) => void) | null,\r\n        onComplete?: ((err: Error | null, data: T|T[]) => void) | null,\r\n    ): void {\r\n        const { type: _type, onProgress: onProg, onComplete: onComp } = parseLoadResArgs(type, onProgress, onComplete);\r\n        const options = { __requestType__: RequestType.PATH, type: _type, bundle: this.name, __outputAsArray__: Array.isArray(paths) };\r\n        (cclegacy.assetManager as AssetManager).loadAny(paths, options, onProg, onComp);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Preloads the asset within this bundle by the path which is relative to bundle's path.\r\n     * After calling this method, you still need to finish loading by calling [[Bundle.load]].\r\n     * It will be totally fine to call [[Bundle.load]] at any time even if the preloading is not\r\n     * yet finished.\r\n     *\r\n     * @zh\r\n     * 通过相对路径预加载分包中的资源。路径是相对分包文件夹路径的相对路径。调用完后，你仍然需要通过 [[Bundle.load]] 来完成加载。\r\n     * 就算预加载还没完成，你也可以直接调用 [[Bundle.load]]。\r\n     *\r\n     * @param paths\r\n     * @en Paths of the target assets.These paths are relative to the bundle's folder, extension name must be omitted.\r\n     * @zh 需要加载的资源的路径。此路径为工程中相对于 bundle 文件夹的相对路径，路径中请不要带扩展名。\r\n     * @param type\r\n     * @en Asset type, if this parameter is passed, the asset of the corresponding type will be found in the assets of the corresponding path to finish preloading.\r\n     * @zh 资源类型，如果传入此参数，则会在对应路径的资源中找到对应类型的资源完成预加载。\r\n     * @param onProgress\r\n     * @en Callback invoked when the preloading progress change.\r\n     * @zh 预加载进度发生变化时执行的回调。\r\n     * @param onProgress.finish\r\n     * @en The number of request items that have been preloaded.\r\n     * @zh 已经完成预加载的资源数量。\r\n     * @param onProgress.total\r\n     * @en The number of all request items to be preloaded.\r\n     * @zh 所有待预加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的预加载项。\r\n     * @param onComplete @en Callback invoked when all assets preloaded. @zh 所有资源预加载完成后的回调。\r\n     * @param onComplete.error @en Error message during preloading, or null if preloaded successfully. @zh 预加载过程中的错误信息，如果预加载成功则为 null。\r\n     * @param onComplete.items @en The preloaded items. @zh 预加载项。\r\n     *\r\n     * @example\r\n     * // preload the texture (${project}/assets/resources/textures/background.jpg) from resources\r\n     * resources.preload('textures/background', Texture2D);\r\n     *\r\n     * // preload the audio (${project}/assets/resources/music/hit.mp3) from resources\r\n     * resources.preload('music/hit', AudioClip);\r\n     * // wait for while\r\n     * resources.load('music/hit', AudioClip, (err, audioClip) => {});\r\n     *\r\n     * * // preload the prefab (${project}/assets/bundle1/misc/character/cocos) from bundle1 folder\r\n     * bundle1.preload('misc/character/cocos', Prefab);\r\n     *\r\n     * // load the sprite frame of (${project}/assets/bundle2/imgs/cocos.png) from bundle2 folder\r\n     * bundle2.preload('imgs/cocos', SpriteFrame);\r\n     * // wait for while\r\n     * bundle2.load('imgs/cocos', SpriteFrame, (err, spriteFrame) => {});\r\n     *\r\n     */\r\n    public preload (paths: string|string[], type: Constructor<Asset>|null, onProgress: ((finished: number, total: number, item: RequestItem) => void)|null, onComplete: ((err: Error | null, data: RequestItem[]) => void)|null): void;\r\n    public preload (paths: string|string[], onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preload (paths: string|string[], onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preload (paths: string|string[], type: Constructor<Asset> | null, onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preload (\r\n        paths: string|string[],\r\n        type?: Constructor<Asset> | ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: RequestItem[]) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: RequestItem[]) => void) | null,\r\n        onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null,\r\n    ): void {\r\n        const { type: _type, onProgress: onProg, onComplete: onComp } = parseLoadResArgs(type, onProgress, onComplete);\r\n        (cclegacy.assetManager as AssetManager).preloadAny(paths, { __requestType__: RequestType.PATH, type: _type, bundle: this.name }, onProg, onComp);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Loads all assets under a folder inside the bundle folder.<br>\r\n     * <br>\r\n     * Note: All asset paths in Creator use forward slashes, paths using backslashes will not work.\r\n     *\r\n     * @zh\r\n     * 加载目标文件夹中的所有资源, 注意：路径中只能使用斜杠，反斜杠将停止工作。\r\n     *\r\n     * @param dir @en The path of the target folder. The path is relative to the bundle folder. @zh 目标文件夹路径，此路径为相对于 bundle 文件夹的路径。\r\n     * @param type @en The asset type. Only specify type asset will be loaded if this argument is supplied. @zh 资源类型，如果指定了此参数，则只会加载目标文件夹下此类型的资源。\r\n     * @param onProgress\r\n     * @en Callback invoked when the loading progress change.\r\n     * @zh 加载进度发生变化时执行的回调。\r\n     * @param onProgress.finish\r\n     * @en The number of request items that have been loaded.\r\n     * @zh 已经完成加载的资源数量。\r\n     * @param onProgress.total\r\n     * @en The number of all request items to be loaded.\r\n     * @zh 所有待加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的加载项。\r\n     * @param onComplete @en Callback invoked when all assets loaded. @zh 所有资源加载完成后的回调。\r\n     * @param onComplete.error @en Error message during loading, or null if loaded successfully. @zh 加载过程中的错误信息，如果加载成功则为 null。\r\n     * @param onComplete.assets @en An array of all loaded assets. @zh 完成加载的资源数组。\r\n     *\r\n     * @example\r\n     * // load all audios (resources/audios/)\r\n     * resources.loadDir('audios', AudioClip, (err, audios) => {});\r\n     *\r\n     * // load all textures in \"resources/imgs/\"\r\n     * resources.loadDir('imgs', Texture2D, null, function (err, textures) {\r\n     *     var texture1 = textures[0];\r\n     *     var texture2 = textures[1];\r\n     * });\r\n     *\r\n     * // load all prefabs (${project}/assets/bundle1/misc/characters/) from bundle1 folder\r\n     * bundle1.loadDir('misc/characters', Prefab, (err, prefabs) => console.log(err));\r\n     *\r\n     * // load all sprite frame (${project}/assets/some/xxx/bundle2/skills/) from bundle2 folder\r\n     * bundle2.loadDir('skills', SpriteFrame, null, (err, spriteFrames) => console.log(err));\r\n     *\r\n     */\r\n    public loadDir<T extends Asset> (dir: string, type: Constructor<T> | null, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public loadDir<T extends Asset> (dir: string, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public loadDir<T extends Asset> (dir: string, onComplete?: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public loadDir<T extends Asset> (dir: string, type: Constructor<T> | null, onComplete?: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public loadDir<T extends Asset> (\r\n        dir: string,\r\n        type?: Constructor<T> | ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: T[]) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: T[]) => void) | null,\r\n        onComplete?: ((err: Error | null, data: T[]) => void) | null,\r\n    ): void {\r\n        const { type: _type, onProgress: onProg, onComplete: onComp } = parseLoadResArgs(type, onProgress, onComplete);\r\n        (cclegacy.assetManager as AssetManager).loadAny(dir, { __requestType__: RequestType.DIR, type: _type, bundle: this.name, __outputAsArray__: true }, onProg, onComp);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Preloads all assets under a folder inside the bundle folder.<br> After calling this method, you still need to\r\n     * finish loading by calling [[Bundle.loadDir]].\r\n     * It will be totally fine to call [[Bundle.loadDir]] at any time even if the preloading is not yet finished.\r\n     *\r\n     * @zh\r\n     * 预加载目标文件夹中的所有资源。调用完后，你仍然需要通过 [[Bundle.loadDir]] 来完成加载。\r\n     * 就算预加载还没完成，你也可以直接调用 [[Bundle.loadDir]]。\r\n     *\r\n     * @param dir @en The path of the target folder. The path is relative to the bundle folder. @zh 目标文件夹路径，此路径为相对于 bundle 文件夹的路径。\r\n     * @param type @en The asset type. Only specify type asset will be preloaded if this argument is supplied. @zh 资源类型，如果指定了此参数，则只会预加载目标文件夹下此类型的资源。\r\n     * @param onProgress\r\n     * @en Callback invoked when the preloading progress change.\r\n     * @zh 预加载进度发生变化时执行的回调。\r\n     * @param onProgress.finish\r\n     * @en The number of request items that have been preloaded.\r\n     * @zh 已经完成预加载的资源数量。\r\n     * @param onProgress.total\r\n     * @en The number of all request items to be preloaded.\r\n     * @zh 所有待预加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的预加载项。\r\n     * @param onComplete @en Callback invoked when all assets preloaded. @zh 所有资源预加载完成后的回调。\r\n     * @param onComplete.error @en Error message during preloading, or null if preloaded successfully. @zh 预加载过程中的错误信息，如果预加载成功则为 null。\r\n     * @param onComplete.items @en The preloaded items. @zh 预加载项。\r\n     *\r\n     * @example\r\n     * // preload all audios (resources/audios/)\r\n     * resources.preloadDir('audios', AudioClip);\r\n     *\r\n     * // preload all textures in \"resources/imgs/\"\r\n     * resources.preloadDir('imgs', Texture2D);\r\n     * // wait for while\r\n     * resources.loadDir('imgs', Texture2D, (err, textures) => {});\r\n     *\r\n     * // preload all prefabs (${project}/assets/bundle1/misc/characters/) from bundle1 folder\r\n     * bundle1.preloadDir('misc/characters', Prefab);\r\n     *\r\n     * // preload all sprite frame (${project}/assets/some/xxx/bundle2/skills/) from bundle2 folder\r\n     * bundle2.preloadDir('skills', SpriteFrame);\r\n     * // wait for while\r\n     * bundle2.loadDir('skills', SpriteFrame, (err, spriteFrames) => {});\r\n     */\r\n    public preloadDir (dir: string, type: Constructor<Asset> | null, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preloadDir (dir: string, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preloadDir (dir: string, onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preloadDir (dir: string, type: Constructor<Asset> | null, onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preloadDir (\r\n        dir: string,\r\n        type?: Constructor<Asset> | ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: RequestItem[]) => void)| null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: RequestItem[]) => void)| null,\r\n        onComplete?: ((err: Error | null, data: RequestItem[]) => void)| null,\r\n    ): void {\r\n        const { type: _type, onProgress: onProg, onComplete: onComp } = parseLoadResArgs(type, onProgress, onComplete);\r\n        (cclegacy.assetManager as AssetManager).preloadAny(dir, { __requestType__: RequestType.DIR, type: _type, bundle: this.name }, onProg, onComp);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Loads the scene asset within this bundle by its name.\r\n     *\r\n     * @zh\r\n     * 通过场景名称加载分包中的场景资源。\r\n     *\r\n     * @param sceneName @en The name of the scene to be loaded. @zh 待加载的场景名称。\r\n     * @param options @en Some optional parameters. @zh 可选参数。\r\n     * @param onProgress\r\n     * @en Callback invoked when the loading progress change.\r\n     * @zh 加载进度发生变化时执行的回调。\r\n     * @param onProgress.finish\r\n     * @en The number of request items that have been loaded.\r\n     * @zh 已经完成加载的资源数量。\r\n     * @param onProgress.total\r\n     * @en The number of all request items to be loaded.\r\n     * @zh 所有待加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的加载项。\r\n     * @param onComplete @en Callback invoked when the scene loaded. @zh 场景加载完成后的回调。\r\n     * @param onComplete.error @en Error message during loading, or null if loaded successfully. @zh 加载过程中的错误信息，如果加载成功则为 null。\r\n     * @param onComplete.sceneAsset @en The scene asset. @zh 加载完成的场景资源。\r\n     *\r\n     * @example\r\n     * bundle1.loadScene('first', (err, sceneAsset) => director.runScene(sceneAsset));\r\n     *\r\n     */\r\n    public loadScene (sceneName: string, options: { [key: string]: any, preset?: 'string' } | null, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: SceneAsset) => void) | null): void;\r\n    public loadScene (sceneName: string, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: SceneAsset) => void) | null): void;\r\n    public loadScene (sceneName: string, options: { [key: string]: any, preset?: 'string' } | null, onComplete?: ((err: Error | null, data: SceneAsset) => void) | null): void;\r\n    public loadScene (sceneName: string, onComplete?: ((err: Error | null, data: SceneAsset) => void) | null): void;\r\n    public loadScene (\r\n        sceneName: string,\r\n        options?: { [key: string]: any, preset?: 'string' } | ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: SceneAsset) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: SceneAsset) => void) | null,\r\n        onComplete?: ((err: Error | null, data: SceneAsset) => void) | null,\r\n    ): void {\r\n        const { options: opts, onProgress: onProg, onComplete: onComp } = parseParameters<((err: Error | null, data: SceneAsset) => void)>(options, onProgress, onComplete);\r\n\r\n        opts.preset = opts.preset || 'scene';\r\n        opts.bundle = this.name;\r\n        (cclegacy.assetManager as AssetManager).loadAny({ scene: sceneName }, opts, onProg, (err, sceneAsset: SceneAsset): void => {\r\n            if (err) {\r\n                error(err.message, err.stack);\r\n            } else if (sceneAsset.scene) {\r\n                const scene = sceneAsset.scene;\r\n                scene.id = sceneAsset._uuid;\r\n                scene.name = sceneAsset.name;\r\n            } else {\r\n                err = new Error(`The asset ${sceneAsset._uuid} is not a scene`);\r\n            }\r\n            if (onComp) { onComp(err, sceneAsset); }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Preload the scene asset within this bundle by its name. After calling this method, you still need to finish loading\r\n     * by calling [[Bundle.loadScene]] or [[Director.loadScene]].It will be totally fine to call [[Bundle.loadScene]] at any\r\n     * time even if the preloading is not yet finished.\r\n     *\r\n     * @zh\r\n     * 通过场景名称预加载分包中的场景资源.调用完后，你仍然需要通过 [[Bundle.loadScene]] 或 [[Director.loadScene]] 来完成加载。\r\n     * 就算预加载还没完成，你也可以直接调用 [[Bundle.loadScene]] 或 [[Director.loadScene]]。\r\n     *\r\n     * @param sceneName @en The name of the scene to be preloaded. @zh 待预加载的场景名称。\r\n     * @param options  @en Some optional parameters. @zh 可选参数。\r\n     * @param onProgress\r\n     * @en Callback invoked when the preloading progress change.\r\n     * @zh 预加载进度发生变化时执行的回调。\r\n     * @param onProgress.finish\r\n     * @en The number of request items that have been preloaded.\r\n     * @zh 已经完成预加载的资源数量。\r\n     * @param onProgress.total\r\n     * @en The number of all request items to be preloaded.\r\n     * @zh 所有待预加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的预加载项。\r\n     * @param onComplete @en Callback invoked when the scene preloaded. @zh 场景预加载完成后的回调。\r\n     * @param onComplete.error @en Error message during preloading, or null if preloaded successfully. @zh 预加载过程中的错误信息，如果预加载成功则为 null。\r\n     *\r\n     * @example\r\n     * bundle1.preloadScene('first');\r\n     * // wait for a while\r\n     * bundle1.loadScene('first', (err, scene) => director.runScene(scene));\r\n     *\r\n     */\r\n    public preloadScene (sceneName: string, options: { [key: string]: any, preset?: 'string' } | null, onProgress: ((finished: number, total: number, item: RequestItem) => void), onComplete: ((err?: Error | null) => void) | null): void;\r\n    public preloadScene (sceneName: string, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err?: Error | null) => void) | null): void;\r\n    public preloadScene (sceneName: string, options: { [key: string]: any, preset?: 'string' } | null, onComplete?: ((err?: Error | null) => void) | null): void;\r\n    public preloadScene (sceneName: string, onComplete?: ((err?: Error | null) => void) | null): void;\r\n    public preloadScene (\r\n        sceneName: string,\r\n        options?: { [key: string]: any, preset?: 'string' } | ((finished: number, total: number, item: RequestItem) => void) | ((err?: Error | null) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err?: Error | null) => void) | null,\r\n        onComplete?: ((err?: Error | null) => void) | null,\r\n    ): void {\r\n        const { options: opts, onProgress: onProg, onComplete: onComp } = parseParameters<((err?: Error | null) => void)>(options, onProgress, onComplete);\r\n\r\n        opts.bundle = this.name;\r\n        (cclegacy.assetManager as AssetManager).preloadAny({ scene: sceneName }, opts, onProg, (err): void => {\r\n            if (err) {\r\n                errorID(1210, sceneName, err.message);\r\n            }\r\n            if (onComp) { onComp(err); }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets cached asset within this bundle by path and type. <br>\r\n     * After you load asset with [[load]] or [[loadDir]],\r\n     * you can acquire them by passing the path to this API.\r\n     *\r\n     * NOTE：When there are multiple asset with the same name, you can get the specific asset by specifying the type.\r\n     * Otherwise the first asset matching that name will be returned.\r\n     *\r\n     * @zh\r\n     * 通过路径与类型获取已缓存资源。在你使用 [[load]] 或者 [[loadDir]] 之后，\r\n     * 你能通过传路径通过这个 API 获取到这些资源。\r\n     *\r\n     * 注意：当有多个同名的资产时，你可以通过指定类型来获得具体的资产。\r\n     * 否则将返回与该名称相匹配的第一个资产。\r\n     *\r\n     * @param path @en The path of asset. @zh 资源的路径。\r\n     * @param type @en The asset type. Only specify type asset will be returned if this argument is supplied. @zh 资源类型，指定后只会返回该类型的资源。\r\n     * @returns @en The asset has been cached. @zh 已缓存的资源。\r\n     *\r\n     * @example\r\n     * bundle1.get('music/hit', AudioClip);\r\n     */\r\n    public get<T extends Asset> (path: string, type?: Constructor<T> | null): T | null {\r\n        const info = this.getInfoWithPath(path, type);\r\n        if (info) {\r\n            return assets.get(info.uuid) as T || null;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Releases the asset loaded by [[load]] or [[loadDir]].\r\n     * and it's dependencies. Refer to [[AssetManager.releaseAsset]] for detailed information.\r\n     *\r\n     * NOTE：When there are multiple asset with the same name, you can specify the asset to be released by specifying the type.\r\n     * Otherwise the first resource matching that name will be released.\r\n     *\r\n     * @zh\r\n     * 释放通过 [[load]] 或者 [[loadDir]] 加载的资源。\r\n     * 详细信息请参考 [[AssetManager.releaseAsset]]。\r\n     *\r\n     * 注意：当存在多个资源同名时，可以通过指定类型来指定要释放的资源，否则将释放第一个匹配该名称的资源。\r\n\r\n     *\r\n     * @param path @en The path of asset. @zh 资源的路径。\r\n     * @param type @en The type of asset. @zh 资源的类型。\r\n     *\r\n     * @example\r\n     * // release a texture which is no longer need\r\n     * bundle1.release('misc/character/cocos');\r\n     *\r\n     */\r\n    public release (path: string, type?: Constructor<Asset> | null): void {\r\n        const asset = this.get(path, type);\r\n        if (asset) {\r\n            releaseManager.tryRelease(asset, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Release all unused assets within this bundle. Refer to [[AssetManager.releaseAll]] for detailed information.\r\n     *\r\n     * @zh\r\n     * 释放此包中的所有没有用到的资源。详细信息请参考 [[AssetManager.releaseAll]]。\r\n     *\r\n     * @example\r\n     * // release all unused asset within bundle1\r\n     * bundle1.releaseUnusedAssets();\r\n     *\r\n     * @engineInternal\r\n     */\r\n    public releaseUnusedAssets (): void {\r\n        assets.forEach((asset): void => {\r\n            const info = this.getAssetInfo(asset._uuid);\r\n            if (info && !info.redirect) {\r\n                releaseManager.tryRelease(asset);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Release all assets within this bundle. Refer to [[AssetManager.releaseAll]] for detailed information.\r\n     *\r\n     * @zh\r\n     * 释放此包中的所有资源。详细信息请参考 [[AssetManager.releaseAll]]。\r\n     *\r\n     * @example\r\n     * // release all asset within bundle1\r\n     * bundle1.releaseAll();\r\n     */\r\n    public releaseAll (): void {\r\n        assets.forEach((asset): void => {\r\n            const info = this.getAssetInfo(asset._uuid);\r\n            if (info && !info.redirect) {\r\n                releaseManager.tryRelease(asset, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _destroy (): void {\r\n        this._config.destroy();\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * A [[Bundle]] instance to manage all assets in assets/resources.\r\n *\r\n * @zh\r\n * 一个 [[Bundle]] 实例，用于管理所有在 assets/resources 下的资源。\r\n */\r\nexport const resources: Bundle = new Bundle();\r\ncclegacy.resources = resources;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { XIAOMI } from 'internal:constants';\r\nimport { getError } from '../../core';\r\nimport { ccwindow } from '../../core/global-exports';\r\n\r\nexport default function downloadDomImage (\r\n    url: string,\r\n    options: Record<string, any>,\r\n    onComplete: ((err: Error | null, data?: HTMLImageElement | null) => void),\r\n): HTMLImageElement {\r\n    const img = new ccwindow.Image();\r\n\r\n    // NOTE: on xiaomi platform, we need to force setting img.crossOrigin as 'anonymous'\r\n    if (ccwindow.location.protocol !== 'file:' || XIAOMI) {\r\n        img.crossOrigin = 'anonymous';\r\n    }\r\n\r\n    function loadCallback (): void {\r\n        img.removeEventListener('load', loadCallback);\r\n        img.removeEventListener('error', errorCallback);\r\n        if (onComplete) { onComplete(null, img); }\r\n    }\r\n\r\n    function errorCallback (): void {\r\n        img.removeEventListener('load', loadCallback);\r\n        img.removeEventListener('error', errorCallback);\r\n        if (onComplete) { onComplete(new Error(getError(4930, url))); }\r\n    }\r\n\r\n    img.addEventListener('load', loadCallback);\r\n    img.addEventListener('error', errorCallback);\r\n    img.src = url;\r\n    return img;\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport type FileProgressCallback = (loaded: number, total: number) => void;\r\n\r\nexport default function downloadFile (\r\n    url: string,\r\n    options: Record<string, any>,\r\n    onProgress: FileProgressCallback | null | undefined,\r\n    onComplete: ((err: Error | null, data?: any) => void),\r\n): XMLHttpRequest {\r\n    const xhr = new XMLHttpRequest();\r\n    const errInfo = `download failed: ${url}, status: `;\r\n\r\n    xhr.open('GET', url, true);\r\n\r\n    if (options.xhrResponseType !== undefined) { xhr.responseType = options.xhrResponseType as XMLHttpRequestResponseType; }\r\n    if (options.xhrWithCredentials !== undefined) { xhr.withCredentials = options.xhrWithCredentials as boolean; }\r\n    if (options.xhrMimeType !== undefined && xhr.overrideMimeType) { xhr.overrideMimeType(options.xhrMimeType as string); }\r\n    if (options.xhrTimeout !== undefined) { xhr.timeout = options.xhrTimeout as number; }\r\n\r\n    if (options.xhrHeader) {\r\n        for (const header in options.xhrHeader) {\r\n            xhr.setRequestHeader(header, options.xhrHeader[header] as string);\r\n        }\r\n    }\r\n\r\n    xhr.onload = (): void => {\r\n        if (xhr.status === 200 || xhr.status === 0) {\r\n            if (onComplete) { onComplete(null, xhr.response); }\r\n        } else if (onComplete) { onComplete(new Error(`${errInfo}${xhr.status}(no response)`)); }\r\n    };\r\n\r\n    if (onProgress) {\r\n        xhr.onprogress = (e): void => {\r\n            if (e.lengthComputable) {\r\n                onProgress(e.loaded, e.total);\r\n            }\r\n        };\r\n    }\r\n\r\n    xhr.onerror = (): void => {\r\n        if (onComplete) { onComplete(new Error(`${errInfo}${xhr.status}(error)`)); }\r\n    };\r\n\r\n    xhr.ontimeout = (): void => {\r\n        if (onComplete) { onComplete(new Error(`${errInfo}${xhr.status}(time out)`)); }\r\n    };\r\n\r\n    xhr.onabort = (): void => {\r\n        if (onComplete) { onComplete(new Error(`${errInfo}${xhr.status}(abort)`)); }\r\n    };\r\n\r\n    xhr.send(null);\r\n\r\n    return xhr;\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { getError } from '../../core';\r\nimport { ccwindow } from '../../core/global-exports';\r\n\r\nconst ccdocument = ccwindow.document;\r\n\r\nconst downloaded = {};\r\n\r\nexport default function downloadScript (\r\n    url: string,\r\n    options: Record<string, any>,\r\n    onComplete: ((err: Error | null, data?: any | null) => void),\r\n): HTMLScriptElement | null {\r\n    // no need to load script again\r\n    if (downloaded[url]) {\r\n        if (onComplete) { onComplete(null); }\r\n        return null;\r\n    }\r\n\r\n    const script = ccdocument.createElement('script');\r\n\r\n    if (ccwindow.location.protocol !== 'file:') {\r\n        script.crossOrigin = 'anonymous';\r\n    }\r\n\r\n    script.async = options.scriptAsyncLoading || false;\r\n    script.src = url;\r\n    function loadHandler (): void {\r\n        script.parentNode!.removeChild(script);\r\n        script.removeEventListener('load', loadHandler, false);\r\n        script.removeEventListener('error', errorHandler, false);\r\n        downloaded[url] = true;\r\n        if (onComplete) { onComplete(null); }\r\n    }\r\n\r\n    function errorHandler (): void {\r\n        script.parentNode!.removeChild(script);\r\n        script.removeEventListener('load', loadHandler, false);\r\n        script.removeEventListener('error', errorHandler, false);\r\n        if (onComplete) { onComplete(new Error(getError(4928, url))); }\r\n    }\r\n\r\n    script.addEventListener('load', loadHandler, false);\r\n    script.addEventListener('error', errorHandler, false);\r\n    ccdocument.body.appendChild(script);\r\n    return script;\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BUILD, EDITOR, EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { sys, js, misc, path, cclegacy } from '../../core';\r\nimport Cache from './cache';\r\nimport downloadDomImage from './download-dom-image';\r\nimport downloadFile, { FileProgressCallback } from './download-file';\r\nimport downloadScript from './download-script';\r\nimport { files } from './shared';\r\nimport { retry, RetryFunction, urlAppendTimestamp } from './utilities';\r\nimport { IConfigOption } from './config';\r\nimport { CCON, decodeCCONBinary } from '../../serialization/ccon';\r\nimport type { AssetManager } from './asset-manager';\r\n\r\nexport type DownloadHandler = (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void;\r\n\r\ninterface IDownloadRequest {\r\n    id: string;\r\n    priority: number;\r\n    url: string;\r\n    options: Record<string, any>;\r\n    done: ((err: Error | null, data?: any) => void);\r\n    handler: DownloadHandler;\r\n}\r\n\r\nconst REGEX = /^(?:\\w+:\\/\\/|\\.+\\/).+/;\r\n\r\nconst downloadImage = (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)): void => {\r\n    // if createImageBitmap is valid, we can transform blob to ImageBitmap. Otherwise, just use HTMLImageElement to load\r\n    const func = sys.hasFeature(sys.Feature.IMAGE_BITMAP) && cclegacy.assetManager.allowImageBitmap ? downloadBlob : downloadDomImage;\r\n    func(url, options, onComplete);\r\n};\r\n\r\nconst downloadBlob = (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)): void => {\r\n    options.xhrResponseType = 'blob';\r\n    downloadFile(url, options, options.onFileProgress as FileProgressCallback, onComplete);\r\n};\r\n\r\nconst downloadJson = (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: Record<string, any> | null) => void)): void => {\r\n    options.xhrResponseType = 'json';\r\n    downloadFile(url, options, options.onFileProgress as FileProgressCallback, onComplete);\r\n};\r\n\r\nconst downloadArrayBuffer = (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)): void => {\r\n    options.xhrResponseType = 'arraybuffer';\r\n    downloadFile(url, options, options.onFileProgress as FileProgressCallback, onComplete);\r\n};\r\n\r\nconst downloadCCONB = (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: CCON | null) => void)): void => {\r\n    const handleArrayBuffer = (arrayBuffer: ArrayBuffer, onComplete: ((err: Error | null, data?: CCON | null) => void)): void => {\r\n        try {\r\n            const ccon = decodeCCONBinary(new Uint8Array(arrayBuffer));\r\n            onComplete(null, ccon);\r\n        } catch (err) {\r\n            onComplete(err as Error);\r\n        }\r\n    };\r\n    downloader._downloadArrayBuffer(url.replace('.cconb', '.bin'), options, (err, arrayBuffer: ArrayBuffer): void => {\r\n        if (err) {\r\n            downloader._downloadArrayBuffer(url, options, (err, arrayBuffer: ArrayBuffer): void => {\r\n                if (err) {\r\n                    onComplete(err);\r\n                    return;\r\n                }\r\n                handleArrayBuffer(arrayBuffer, onComplete);\r\n            });\r\n            return;\r\n        }\r\n        handleArrayBuffer(arrayBuffer, onComplete);\r\n    });\r\n};\r\n\r\nconst downloadText = (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)): void => {\r\n    options.xhrResponseType = 'text';\r\n    downloadFile(url, options, options.onFileProgress as FileProgressCallback, onComplete);\r\n};\r\n\r\nconst downloadBundle = (nameOrUrl: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)): void => {\r\n    const bundleName = path.basename(nameOrUrl);\r\n    let url = nameOrUrl;\r\n    if (!REGEX.test(url)) {\r\n        if (downloader.remoteBundles.indexOf(bundleName) !== -1) {\r\n            url = `${downloader.remoteServerAddress}remote/${bundleName}`;\r\n        } else {\r\n            url = `assets/${bundleName}`;\r\n        }\r\n    }\r\n    const version = options.version || downloader.bundleVers[bundleName];\r\n    let count = 0;\r\n    const config = `${url}/config.${version ? `${version}.` : ''}json`;\r\n    let out: IConfigOption | null = null;\r\n    let error: Error | null = null;\r\n    downloadJson(config, options, (err, response): void => {\r\n        error = err || error;\r\n        out = response as IConfigOption;\r\n        if (out) { out.base = `${url}/`; }\r\n        if (++count === 2) {\r\n            onComplete(error, out);\r\n        }\r\n    });\r\n\r\n    const jspath = `${url}/index.${version ? `${version}.` : ''}js`;\r\n    downloadScript(jspath, options, (err): void => {\r\n        error = err || error;\r\n        if (++count === 2) {\r\n            onComplete(error, out);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @en\r\n * Manages all download process, it is a singleton.\r\n * You can access it via [[AssetManager.downloader]], It can download various types of files.\r\n *\r\n * @zh\r\n * 管理所有下载过程，downloader 是个单例，你能通过 [[AssetManager.downloader]] 访问它，它能下载各种类型的文件。\r\n *\r\n */\r\nexport class Downloader {\r\n    /**\r\n     * @en Global singleton for [[Downloader]]. You can access it via [[AssetManager.downloader]].\r\n     * @zh [[Downloader]] 的全局单例. 你可以通过 [[AssetManager.downloader]] 访问.\r\n     */\r\n    public static get instance (): Downloader {\r\n        if (!Downloader._instance) {\r\n            Downloader._instance = new Downloader();\r\n        }\r\n        return Downloader._instance;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The maximum number of concurrent when downloading.\r\n     *\r\n     * @zh\r\n     * 下载时的最大并发数。\r\n     */\r\n    public maxConcurrency = 15;\r\n\r\n    /**\r\n     * @en\r\n     * The maximum number of request can be launched per frame when downloading.\r\n     *\r\n     * @zh\r\n     * 下载时每帧可以启动的最大请求数。\r\n     *\r\n     */\r\n    public maxRequestsPerFrame = 15;\r\n\r\n    /**\r\n     * @en\r\n     * The address of remote server.\r\n     *\r\n     * @zh\r\n     * 远程服务器地址。\r\n     *\r\n     */\r\n    public get remoteServerAddress (): string {\r\n        return this._remoteServerAddress;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The max number of retries when fail.\r\n     *\r\n     * @zh\r\n     * 失败重试次数。\r\n     *\r\n     */\r\n    public maxRetryCount = BUILD ? 3 : 0;\r\n\r\n    /**\r\n     * Whether to automatically add a timestamp after the url.\r\n     * This function is mainly used to prevent the browser from using cache in editor mode.\r\n     * You don't need to change it at runtime.\r\n     * @internal\r\n     */\r\n    public appendTimeStamp = !!EDITOR_NOT_IN_PREVIEW;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public limited = !EDITOR;\r\n\r\n    /**\r\n     * @en\r\n     * Wait for while before another retry, unit: ms.\r\n     *\r\n     * @zh\r\n     * 重试的间隔时间，单位为毫秒。\r\n     *\r\n     */\r\n    public retryInterval = 2000;\r\n\r\n    /**\r\n     * @en Version information of all bundles.\r\n     * @zh 所有包的版本信息。\r\n     */\r\n    public bundleVers: Record<string, string> = {};\r\n\r\n    /**\r\n     * @en The names of remote bundles.\r\n     * @zh 远程包名列表。\r\n     */\r\n    public remoteBundles: ReadonlyArray<string> = [];\r\n\r\n    /**\r\n     * @deprecated Since v3.7, this is an engine internal interface. You can easily implement the functionality of this API using HTMLImageElement.\r\n     */\r\n    public downloadDomImage = downloadDomImage;\r\n\r\n    /**\r\n     * @deprecated Since v3.7, this is an engine internal interface. You can easily implement the functionality of this API using HTMLAudioElement.\r\n     */\r\n    public downloadDomAudio: DownloadHandler | null = null;\r\n\r\n    /**\r\n     * @deprecated Since v3.7, this is an engine internal interface. You can easily implement the functionality of this API using XMLHttpRequest.\r\n     */\r\n    public downloadFile = downloadFile;\r\n\r\n    /**\r\n     * @deprecated Since v3.7, this is an engine internal interface. You can easily implement the functionality of this API using XMLHttpRequest.\r\n     */\r\n    public downloadScript = downloadScript;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _downloadArrayBuffer = downloadArrayBuffer;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public _downloadJson = downloadJson;\r\n\r\n    // default handler map\r\n    private _downloaders: Record<string, DownloadHandler> = {\r\n        // Images\r\n        '.png': downloadImage,\r\n        '.jpg': downloadImage,\r\n        '.bmp': downloadImage,\r\n        '.jpeg': downloadImage,\r\n        '.gif': downloadImage,\r\n        '.ico': downloadImage,\r\n        '.tiff': downloadImage,\r\n        '.webp': downloadImage,\r\n        '.image': downloadImage,\r\n        '.pvr': downloadArrayBuffer,\r\n        '.pkm': downloadArrayBuffer,\r\n        '.astc': downloadArrayBuffer,\r\n\r\n        // Txt\r\n        '.txt': downloadText,\r\n        '.xml': downloadText,\r\n        '.vsh': downloadText,\r\n        '.fsh': downloadText,\r\n        '.atlas': downloadText,\r\n\r\n        '.tmx': downloadText,\r\n        '.tsx': downloadText,\r\n\r\n        '.json': downloadJson,\r\n        '.ExportJson': downloadJson,\r\n        '.plist': downloadText,\r\n\r\n        '.cconb': downloadCCONB,\r\n\r\n        '.fnt': downloadText,\r\n\r\n        // Binary\r\n        '.binary': downloadArrayBuffer,\r\n        '.bin': downloadArrayBuffer,\r\n        '.dbbin': downloadArrayBuffer,\r\n        '.skel': downloadArrayBuffer,\r\n\r\n        '.js': downloadScript,\r\n\r\n        bundle: downloadBundle,\r\n\r\n        default: downloadText,\r\n    };\r\n\r\n    private _downloading = new Cache<((err: Error | null, data?: any) => void)[]>();\r\n    private _queue: IDownloadRequest[] = [];\r\n    private _queueDirty = false;\r\n    // the number of loading thread\r\n    private _totalNum = 0;\r\n    // the number of request that launched in this period\r\n    private _totalNumThisPeriod = 0;\r\n    // last time, if now - lastTime > period, refresh _totalNumThisPeriod.\r\n    private _lastDate = -1;\r\n    // if _totalNumThisPeriod equals max, move request to next period using setTimeOut.\r\n    private _checkNextPeriod = false;\r\n    private _remoteServerAddress = '';\r\n    private _maxInterval = 1 / 30;\r\n    private static _instance: Downloader;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public init (remoteServerAddress = '', bundleVers: Record<string, string> = {}, remoteBundles: string[] = []): void {\r\n        this._downloading.clear();\r\n        this._queue.length = 0;\r\n        this._remoteServerAddress = remoteServerAddress;\r\n        this.bundleVers = bundleVers;\r\n        this.remoteBundles = remoteBundles;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public get handlers (): Record<string, DownloadHandler> {\r\n        return this._downloaders;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register custom handler if you want to change default behavior or extend downloader to download other format file.\r\n     *\r\n     * @zh\r\n     * 当你想修改默认行为或者拓展 downloader 来下载其他格式文件时可以注册自定义的 handler。\r\n     *\r\n     * @param type\r\n     * @en Extension name likes '.jpg' or map likes {'.jpg': jpgHandler, '.png': pngHandler}.\r\n     * @zh 扩展名，或者形如 {'.jpg': jpgHandler, '.png': pngHandler} 的映射表。\r\n     * @param handler @en Customized handling for this extension. @zh 针对此扩展名的自定义的处理方法。\r\n     * @param handler.url @en The url to be downloaded. @zh 待下载的 url.\r\n     * @param handler.options @en Some optional parameters will be transferred to handler. @zh 传递到处理方法的可选参数。\r\n     * @param handler.onComplete\r\n     * @en Callback when finishing downloading. You need to call this method manually and pass in the execution result after the custom handler\r\n     * is executed.\r\n     * @zh 完成下载后的回调。你需要在自定义处理方法执行完后手动调用此方法，并将执行结果传入。\r\n     *\r\n     * @example\r\n     * downloader.register('.tga', (url, options, onComplete) => onComplete(null, null));\r\n     * downloader.register({'.tga': (url, options, onComplete) => onComplete(null, null),\r\n     *                      '.ext': (url, options, onComplete) => onComplete(null, null)});\r\n     *\r\n     */\r\n    public register (type: string, handler: (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void): void;\r\n    public register (map: Record<string, (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void>): void;\r\n    public register (\r\n        type: string | Record<string, (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void>,\r\n        handler?: (url: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void,\r\n    ): void {\r\n        if (typeof type === 'object') {\r\n            js.mixin(this._downloaders, type);\r\n        } else {\r\n            this._downloaders[type] = handler as DownloadHandler;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Use corresponding handler to download file under limitation.\r\n     *\r\n     * @zh\r\n     * 在限制下使用对应的 handler 来下载文件。\r\n     *\r\n     * @param id @en The unique id of this download. @zh 本次下载的唯一 id.\r\n     * @param url @en The url should be downloaded. @zh 待下载的 url。\r\n     * @param type @en The type indicates that which handler should be used to download, such as '.jpg'. @zh 要使用的处理方法的类型，例如 '.jpg'。\r\n     * @param options @en Some optional parameters will be transferred to the corresponding handler. @zh 传递到处理方法的一些可选参数。\r\n     * @param options.onFileProgress @en Progressive callback will be transferred to handler. @zh 传递到处理方法的进度回调。\r\n     * @param options.maxRetryCount @en How many times should retry when download failed. @zh 下载失败后的重试数量。\r\n     * @param options.maxConcurrency @en The maximum number of concurrent when downloading. @zh 下载的最大并行数。\r\n     * @param options.maxRequestsPerFrame @en The maximum number of request can be launched per frame when downloading. @zh 每帧能发起的最大请求数量，在下载时。\r\n     * @param options.priority @en The priority of this url, default is 0, the greater number is higher priority. @zh 下载的优先级，值越大优先级越高。\r\n     * @param onComplete @en Callback when finishing downloading. @zh 完成下载后的回调。\r\n     * @param onComplete.err @en The occurred error, null indicates success. @zh 下载过程中出现的错误，如果为 null 则表明下载成功。\r\n     * @param onComplete.content @en The downloaded file. @zh 下载下来的文件内容。\r\n     *\r\n     * @example\r\n     * download('http://example.com/test.tga', '.tga', { onFileProgress: (loaded, total) => console.log(loaded/total) },\r\n     *      onComplete: (err) => console.log(err));\r\n     */\r\n    public download (id: string, url: string, type: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)): void {\r\n        // if it is downloaded, don't download again\r\n        const file = files.get(id);\r\n        if (file) {\r\n            onComplete(null, file);\r\n            return;\r\n        }\r\n\r\n        const downloadCallbacks = this._downloading.get(id);\r\n        if (downloadCallbacks) {\r\n            downloadCallbacks.push(onComplete);\r\n            const request = this._queue.find((x): boolean => x.id === id);\r\n            if (!request) { return; }\r\n            const priority: number = options.priority || 0;\r\n            if (request.priority < priority) {\r\n                request.priority = priority;\r\n                this._queueDirty = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // if download fail, should retry\r\n        const maxRetryCount = typeof options.maxRetryCount !== 'undefined' ? options.maxRetryCount as number : this.maxRetryCount;\r\n        const maxConcurrency = typeof options.maxConcurrency !== 'undefined' ? options.maxConcurrency as number : this.maxConcurrency;\r\n        const maxRequestsPerFrame = typeof options.maxRequestsPerFrame !== 'undefined' ? options.maxRequestsPerFrame as number : this.maxRequestsPerFrame;\r\n        const handler = this._downloaders[type] || this._downloaders.default;\r\n\r\n        const process: RetryFunction = (index, callback): void => {\r\n            if (index === 0) {\r\n                this._downloading.add(id, [onComplete]);\r\n            }\r\n\r\n            if (!this.limited) {\r\n                handler(urlAppendTimestamp(url, this.appendTimeStamp), options, callback);\r\n                return;\r\n            }\r\n\r\n            // refresh\r\n            this._updateTime();\r\n\r\n            const done: ((err: Error | null, data?: any) => void) = (err, data): void => {\r\n                // when finish downloading, update _totalNum\r\n                this._totalNum--;\r\n                this._handleQueueInNextFrame(maxConcurrency, maxRequestsPerFrame);\r\n                callback(err, data);\r\n            };\r\n\r\n            if (this._totalNum < maxConcurrency && this._totalNumThisPeriod < maxRequestsPerFrame) {\r\n                handler(urlAppendTimestamp(url, this.appendTimeStamp), options, done);\r\n                this._totalNum++;\r\n                this._totalNumThisPeriod++;\r\n            } else {\r\n                // when number of request up to limitation, cache the rest\r\n                this._queue.push({ id, priority: options.priority || 0, url, options, done, handler });\r\n                this._queueDirty = true;\r\n\r\n                if (this._totalNum < maxConcurrency) { this._handleQueueInNextFrame(maxConcurrency, maxRequestsPerFrame); }\r\n            }\r\n        };\r\n\r\n        // when retry finished, invoke callbacks\r\n        const finale = (err: Error | null, result: any): void => {\r\n            if (!err) { files.add(id, result); }\r\n            const callbacks = this._downloading.remove(id) as ((err: Error | null, data?: any) => void)[];\r\n            for (let i = 0, l = callbacks.length; i < l; i++) {\r\n                callbacks[i](err, result);\r\n            }\r\n        };\r\n\r\n        retry(process, maxRetryCount, this.retryInterval, finale);\r\n    }\r\n\r\n    /**\r\n     * @en Load sub package with name.\r\n     * @zh 通过子包名加载子包。\r\n     * @param name @en Sub package name. @zh 子包名称。\r\n     * @param completeCallback @en Callback invoked when sub package loaded. @zh 子包加载完成后的回调。\r\n     * @param completeCallback.error @en Error information. Will be null if loaded successfully. @zh 错误信息。如果加载成功则为 null。\r\n     *\r\n     * @deprecated loader.downloader.loadSubpackage is deprecated, please use AssetManager.loadBundle instead.\r\n     */\r\n    public loadSubpackage (name: string, completeCallback?: ((err?: Error | null) => void)): void {\r\n        (cclegacy.assetManager as AssetManager).loadBundle(name, null, completeCallback);\r\n    }\r\n\r\n    private constructor () {}\r\n\r\n    private _updateTime (): void {\r\n        const now = performance.now();\r\n        // use deltaTime as interval\r\n        const deltaTime = cclegacy.game.deltaTime;\r\n        const interval = deltaTime > this._maxInterval ? this._maxInterval : deltaTime;\r\n        if (now - this._lastDate > interval * 1000) {\r\n            this._totalNumThisPeriod = 0;\r\n            this._lastDate = now;\r\n        }\r\n    }\r\n\r\n    // handle the rest request in next period\r\n    private _handleQueue (maxConcurrency: number, maxRequestsPerFrame: number): void {\r\n        this._checkNextPeriod = false;\r\n        this._updateTime();\r\n        while (this._queue.length > 0 && this._totalNum < maxConcurrency && this._totalNumThisPeriod < maxRequestsPerFrame) {\r\n            if (this._queueDirty) {\r\n                this._queue.sort((a, b): number => a.priority - b.priority);\r\n                this._queueDirty = false;\r\n            }\r\n            const request = this._queue.pop();\r\n            if (!request) {\r\n                break;\r\n            }\r\n            this._totalNum++;\r\n            this._totalNumThisPeriod++;\r\n            request.handler(urlAppendTimestamp(request.url, this.appendTimeStamp), request.options, request.done);\r\n        }\r\n\r\n        this._handleQueueInNextFrame(maxConcurrency, maxRequestsPerFrame);\r\n    }\r\n\r\n    private _handleQueueInNextFrame (maxConcurrency: number, maxRequestsPerFrame: number): void {\r\n        if (!this._checkNextPeriod && this._queue.length > 0) {\r\n            misc.callInNextTick(this._handleQueue.bind(this), maxConcurrency, maxRequestsPerFrame);\r\n            this._checkNextPeriod = true;\r\n        }\r\n    }\r\n}\r\nconst downloader = Downloader.instance;\r\nexport default Downloader.instance;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, editable } from 'cc.decorator';\r\nimport { Asset } from './asset';\r\nimport { cclegacy } from '../../core';\r\n\r\n/**\r\n * @en Json asset, it will automatically parse the json to a JS object.\r\n * @zh Json 资源。\r\n * Json 资源加载后将直接解析为对象。如果你希望获得 JSON 的原始文本，你需要使用文本资源（使用文件名后缀“.txt”）。\r\n */\r\n@ccclass('cc.JsonAsset')\r\nexport default class JsonAsset extends Asset {\r\n    /**\r\n     * @en The parsed JS object\r\n     * @zh 解析后的对象。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public json: Record<string, any> | null = null;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n}\r\n\r\ncclegacy.JsonAsset = JsonAsset;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, editable } from 'cc.decorator';\r\nimport { Asset } from './asset';\r\nimport { cclegacy } from '../../core';\r\n\r\n/**\r\n * @en The asset for text file.\r\n * @zh 文本资源。\r\n */\r\n@ccclass('cc.TextAsset')\r\nexport class TextAsset extends Asset {\r\n    /**\r\n     * @en The text content.\r\n     * @zh 此资源包含的文本。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public text = '';\r\n\r\n    public toString (): string {\r\n        return this.text;\r\n    }\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n}\r\n\r\ncclegacy.TextAsset = TextAsset;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, override } from 'cc.decorator';\r\nimport { assertIsNonNullable, cclegacy } from '../../core';\r\nimport { Asset } from './asset';\r\n\r\n/**\r\n * @en\r\n * `BufferAsset` is a kind of assets whose internal data is a section of memory buffer\r\n * that you can access through the [[BufferAsset.buffer]] function.\r\n * @zh\r\n * `BufferAsset` 是一类资产，其内部数据是一段内存缓冲，你可以通过 [[BufferAsset.buffer]] 函数获取其内部数据。\r\n */\r\n@ccclass('cc.BufferAsset')\r\nexport class BufferAsset extends Asset {\r\n    private _buffer: ArrayBuffer | null = null;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @override\r\n    get _nativeAsset (): ArrayBuffer | ArrayBufferView {\r\n        return this._buffer as ArrayBuffer;\r\n    }\r\n    set _nativeAsset (bin: ArrayBufferView | ArrayBuffer) {\r\n        if (bin instanceof ArrayBuffer) {\r\n            this._buffer = bin;\r\n        } else {\r\n            this._buffer = bin.buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh 获取此资源中的缓冲数据。\r\n     * @en Get the ArrayBuffer data of this asset.\r\n     * @returns @en The ArrayBuffer. @zh 缓冲数据。\r\n     */\r\n    public buffer (): ArrayBuffer {\r\n        assertIsNonNullable(this._buffer);\r\n        return this._buffer;\r\n    }\r\n\r\n    public validate (): boolean {\r\n        return !!this._buffer;\r\n    }\r\n}\r\n\r\ncclegacy.BufferAsset = BufferAsset;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR } from 'internal:constants';\r\nimport { ImageAsset } from '../assets/image-asset';\r\nimport JsonAsset from '../assets/json-asset';\r\nimport { TextAsset } from '../assets/text-asset';\r\nimport { Asset } from '../assets/asset';\r\nimport { BufferAsset } from '../assets/buffer-asset';\r\nimport Bundle, { resources } from './bundle';\r\nimport Cache from './cache';\r\nimport { IConfigOption } from './config';\r\nimport {\r\n    assets, BuiltinBundleName, bundles,\r\n} from './shared';\r\nimport { cache } from './utilities';\r\nimport { js } from '../../core';\r\n\r\nexport type CreateHandler = (id: string, data: any, options: Record<string, any>, onComplete: ((err: Error | null, data?: Asset | Bundle | null) => void)) => void;\r\n\r\nfunction createImageAsset (id: string, data: HTMLImageElement, options: Record<string, any>, onComplete: ((err: Error | null, data?: ImageAsset | null) => void)): void {\r\n    let out: ImageAsset | null = null;\r\n    let err: Error | null = null;\r\n    try {\r\n        out = new ImageAsset();\r\n        out._nativeUrl = id;\r\n        out._nativeAsset = data;\r\n    } catch (e) {\r\n        err = e as Error;\r\n    }\r\n    onComplete(err, out);\r\n}\r\n\r\nfunction createJsonAsset (id: string, data: Record<string, any>, options: Record<string, any>, onComplete: ((err: Error | null, data?: JsonAsset | null) => void)): void {\r\n    const out = new JsonAsset();\r\n    out.json = data;\r\n    onComplete(null, out);\r\n}\r\n\r\nfunction createTextAsset (id: string, data: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: TextAsset | null) => void)): void {\r\n    const out = new TextAsset();\r\n    out.text = data;\r\n    onComplete(null, out);\r\n}\r\n\r\nfunction createBufferAsset (id: string, data: ArrayBufferView, options: Record<string, any>, onComplete: ((err: Error | null, data?: BufferAsset | null) => void)): void {\r\n    const out = new BufferAsset();\r\n    out._nativeUrl = id;\r\n    out._nativeAsset = data;\r\n    onComplete(null, out);\r\n}\r\n\r\nfunction createAsset (id: string, data: any, options: Record<string, any>, onComplete: ((err: Error | null, data?: Asset | null) => void)): void {\r\n    const out = new Asset();\r\n    out._nativeUrl = id;\r\n    out._nativeAsset = data;\r\n    onComplete(null, out);\r\n}\r\n\r\nfunction createBundle (id: string, data: IConfigOption, options: Record<string, any>, onComplete: ((err: Error | null, data?: Bundle | null) => void)): void {\r\n    let bundle = bundles.get(data.name);\r\n    if (!bundle) {\r\n        bundle = data.name === BuiltinBundleName.RESOURCES ? resources : new Bundle();\r\n        data.base = data.base || `${id}/`;\r\n        bundle.init(data);\r\n    }\r\n    //HACK: Can not import scripts in GameView due to the difference of Scripting System between the GameView and Preview\r\n    if (!EDITOR) {\r\n        import(`virtual:///prerequisite-imports/${bundle.name}`).then((): void => {\r\n            onComplete(null, bundle);\r\n        }).catch(onComplete);\r\n    } else {\r\n        onComplete(null, bundle);\r\n    }\r\n}\r\n\r\nexport class Factory {\r\n    private _creating = new Cache<((err: Error | null, data?: any | null) => void)[]>();\r\n\r\n    private _producers: Record<string, CreateHandler> = {\r\n        // Images\r\n        '.png': createImageAsset,\r\n        '.jpg': createImageAsset,\r\n        '.bmp': createImageAsset,\r\n        '.jpeg': createImageAsset,\r\n        '.gif': createImageAsset,\r\n        '.ico': createImageAsset,\r\n        '.tiff': createImageAsset,\r\n        '.webp': createImageAsset,\r\n        '.image': createImageAsset,\r\n        '.pvr': createImageAsset,\r\n        '.pkm': createImageAsset,\r\n        '.astc': createImageAsset,\r\n\r\n        // Txt\r\n        '.txt': createTextAsset,\r\n        '.xml': createTextAsset,\r\n        '.vsh': createTextAsset,\r\n        '.fsh': createTextAsset,\r\n        '.atlas': createTextAsset,\r\n\r\n        '.tmx': createTextAsset,\r\n        '.tsx': createTextAsset,\r\n        '.fnt': createTextAsset,\r\n\r\n        '.json': createJsonAsset,\r\n        '.ExportJson': createJsonAsset,\r\n\r\n        // Binary\r\n        '.binary': createBufferAsset,\r\n        '.bin': createBufferAsset,\r\n        '.dbbin': createBufferAsset,\r\n        '.skel': createBufferAsset,\r\n\r\n        bundle: createBundle,\r\n\r\n        default: createAsset,\r\n    };\r\n\r\n    constructor () {}\r\n\r\n    public register (type: string | Record<string, CreateHandler>, handler?: CreateHandler): void {\r\n        if (typeof type === 'object') {\r\n            js.mixin(this._producers, type);\r\n        } else {\r\n            this._producers[type] = handler!;\r\n        }\r\n    }\r\n\r\n    public create (id: string, data: any, type: string, options: Record<string, any>, onComplete: ((err: Error | null, data?: Asset | Bundle | null) => void)): void {\r\n        const handler = this._producers[type] || this._producers.default;\r\n        const asset = assets.get(id);\r\n        if (!options.reloadAsset && asset) {\r\n            onComplete(null, asset);\r\n            return;\r\n        }\r\n        const creating = this._creating.get(id);\r\n        if (creating) {\r\n            creating.push(onComplete);\r\n            return;\r\n        }\r\n\r\n        this._creating.add(id, [onComplete]);\r\n        handler(id, data, options, (err, result): void => {\r\n            if (!err && result instanceof Asset) {\r\n                result._uuid = id;\r\n                cache(id, result, options.cacheAsset);\r\n            }\r\n            const callbacks = this._creating.remove(id);\r\n            for (let i = 0, l = callbacks!.length; i < l; i++) {\r\n                callbacks![i](err, result);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default new Factory();\r\n","/*\r\n Copyright (c) 2025 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * bin package format example.\r\n|PACK_BIN_TYPE - 4bytes|\r\n|VERSION - 4bytes|\r\n|FILES_COUNT - 4bytes|\r\n|FILE_1_OFFSET - 4bytes|\r\n|FILE_1_SIZE - 4bytes|\r\n|FILE_2_OFFSET - 4bytes|\r\n|FILE_2_SIZE - 4bytes|\r\n...\r\n|FILE_N_OFFSET - 4bytes|\r\n|FILE_N_SIZE - 4bytes|\r\n|PACKED_BIN|\r\n */\r\n\r\nconst PACK_BIN_TYPE = 'BINP';\r\nconst VERSION = 2;\r\nconst UNIT_SIZE = 4;\r\nconst LITTLE_ENDIAN = true;\r\n\r\ntype UnpackFunc = (arrayBuffer: ArrayBuffer, dataView: DataView) => Uint8Array[];\r\n\r\nexport function binPackageUnpack (arrayBuffer: ArrayBuffer): Uint8Array[] {\r\n    const dataView = new DataView(arrayBuffer, 0, arrayBuffer.byteLength);\r\n\r\n    const packBinType = String.fromCharCode(...new Uint8Array(arrayBuffer.slice(0, UNIT_SIZE)));\r\n    if (packBinType !== PACK_BIN_TYPE) {\r\n        throw new Error('Invalid bin package format');\r\n    }\r\n\r\n    const version = dataView.getUint32(UNIT_SIZE, LITTLE_ENDIAN);\r\n    if (version !== VERSION) {\r\n        return compatibleOlderVersion(arrayBuffer, dataView, version);\r\n    }\r\n    const filesCount = dataView.getUint32(UNIT_SIZE * 2, LITTLE_ENDIAN);\r\n    const filesPosition: { offset: number, size: number }[] = [];\r\n\r\n    const headOffset = UNIT_SIZE * (3 + filesCount * 2);\r\n    for (let i = 0; i < filesCount; i++) {\r\n        const offset = dataView.getUint32(UNIT_SIZE * (3 + i * 2), LITTLE_ENDIAN) + headOffset;\r\n        const size = dataView.getUint32(UNIT_SIZE * (3 + i * 2 + 1), LITTLE_ENDIAN);\r\n        filesPosition.push({ offset, size });\r\n    }\r\n\r\n    return filesPosition.map(({ offset, size }) => new Uint8Array(arrayBuffer, offset, size));\r\n}\r\n\r\nfunction compatibleOlderVersion (arrayBuffer: ArrayBuffer, dataView: DataView, version: number): Uint8Array[] {\r\n    const map: Record<number, UnpackFunc> = {\r\n        1: unpack_v1,\r\n    };\r\n    return map[version](arrayBuffer, dataView);\r\n}\r\n\r\n/**\r\n * bin package format example.\r\n|PACK_BIN_TYPE - 4bytes|\r\n|VERSION - 4bytes|\r\n|FILES_COUNT - 4bytes|\r\n|FILE_1_SIZE - 4bytes|\r\n|FILE_2_SIZE - 4bytes|\r\n...\r\n|FILE_N_SIZE - 4bytes|\r\n|PACKED_BIN|\r\n */\r\nfunction unpack_v1 (arrayBuffer: ArrayBuffer, dataView: DataView): Uint8Array[] {\r\n    const filesCount = dataView.getUint32(UNIT_SIZE * 2, LITTLE_ENDIAN);\r\n    const filesPosition: { offset: number, size: number }[] = [];\r\n\r\n    let offset = UNIT_SIZE * (3 + filesCount);\r\n    for (let i = 0; i < filesCount; i++) {\r\n        const size = dataView.getUint32(UNIT_SIZE * (3 + i), LITTLE_ENDIAN);\r\n        filesPosition.push({ offset, size });\r\n        offset += size;\r\n    }\r\n\r\n    return filesPosition.map(({ offset, size }) => new Uint8Array(arrayBuffer, offset, size));\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ImageAsset } from '../assets/image-asset';\r\nimport { Texture2D } from '../assets/texture-2d';\r\nimport { packCustomObjData, unpackJSONs } from '../../serialization/deserialize';\r\nimport { assertIsTrue, error, errorID, js } from '../../core';\r\nimport Cache from './cache';\r\nimport downloader from './downloader';\r\nimport { transform } from './helper';\r\nimport RequestItem from './request-item';\r\nimport { files } from './shared';\r\nimport { decodeCCONBinary } from '../../serialization/ccon';\r\nimport { binPackageUnpack } from './bin-package-unpack';\r\n\r\nexport type Unpacker = (\r\n    packUuid: string[],\r\n    data: any,\r\n    options: Record<string, any>,\r\n    onComplete: ((err: Error | null, data?: any) => void),\r\n) => void;\r\n\r\ninterface IUnpackRequest {\r\n    onComplete: ((err: Error | null, data?: any) => void);\r\n    id: string;\r\n}\r\n\r\n/**\r\n * @en\r\n * Handle the packed asset, include unpacking, loading, cache and so on. It is a singleton. All member can be accessed with `assetManager.packManager`\r\n *\r\n * @zh\r\n * 处理打包资源，包括拆包，加载，缓存等等，这是一个单例, 所有成员能通过 `assetManager.packManager` 访问\r\n *\r\n */\r\nexport class PackManager {\r\n    private _loading = new Cache<IUnpackRequest[]>();\r\n    private _unpackers: Record<string, Unpacker> = {\r\n        '.json': this.unpackJson,\r\n        '.bin': this.unpackBin,\r\n    };\r\n\r\n    /**\r\n     * @en\r\n     * Unpack the json, revert to what it was before packing\r\n     *\r\n     * @zh\r\n     * 拆解 json 包，恢复为打包之前的内容\r\n     *\r\n     * @param pack - The pack\r\n     * @param json - The content of pack\r\n     * @param options - Some optional parameters\r\n     * @param onComplete - Callback when finish unpacking\r\n     * @param onComplete.err - The occurred error, null indicates success\r\n     * @param onComplete.content - The unpacked assets\r\n     *\r\n     * @example\r\n     * downloader.downloadFile('pack.json', { xhrResponseType: 'json'}, null, (err, file) => {\r\n     *      packManager.unpackJson(['a', 'b'], file, null, (err, data) => console.log(err));\r\n     * });\r\n     *\r\n     */\r\n    public unpackJson (\r\n        pack: string[],\r\n        json: any,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: Record<string, any> | null) => void),\r\n    ): void {\r\n        const out: Record<string, any> = js.createMap(true);\r\n        let err: Error | null = null;\r\n\r\n        if (Array.isArray(json)) {\r\n            json = unpackJSONs(json as unknown as Parameters<typeof unpackJSONs>[0]);\r\n\r\n            if (json.length !== pack.length) {\r\n                errorID(4915);\r\n            }\r\n            for (let i = 0; i < pack.length; i++) {\r\n                out[`${pack[i]}@import`] = json[i];\r\n            }\r\n        } else {\r\n            const textureType = js.getClassId(Texture2D);\r\n            const imageAssetType = js.getClassId(ImageAsset);\r\n            if (json.type === textureType && json.data) {\r\n                const datas = json.data;\r\n                if (datas.length !== pack.length) {\r\n                    errorID(4915);\r\n                }\r\n                for (let i = 0; i < pack.length; i++) {\r\n                    out[`${pack[i]}@import`] = packCustomObjData(textureType, { base: datas[i][0], mipmaps: datas[i][1] });\r\n                }\r\n            } else if (json.type === imageAssetType && json.data) {\r\n                const datas = json.data;\r\n                if (datas.length !== pack.length) {\r\n                    errorID(4915);\r\n                }\r\n                for (let i = 0; i < pack.length; i++) {\r\n                    out[`${pack[i]}@import`] = datas[i];\r\n                }\r\n            } else {\r\n                err = new Error('unmatched type pack!');\r\n                onComplete(err, null);\r\n                return;\r\n            }\r\n        }\r\n        onComplete(err, out);\r\n    }\r\n\r\n    public unpackBin (\r\n        pack: string[],\r\n        buffer: ArrayBuffer,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: Record<string, any> | null) => void),\r\n    ): void {\r\n        const out: Record<string, any> = js.createMap(true);\r\n        let err: Error | null = null;\r\n        try {\r\n            const uint8Arrays = binPackageUnpack(buffer);\r\n            // TODO Maybe it can be optimized through read file stream on the native side.\r\n            pack.forEach((uuid, index) => out[`${uuid}@import`] = decodeCCONBinary(uint8Arrays[index]));\r\n        } catch (e) {\r\n            err = e as Error;\r\n        }\r\n        onComplete(err, out);\r\n    }\r\n\r\n    public init (): void {\r\n        this._loading.clear();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register custom handler if you want to change default behavior or extend packManager to unpack other format pack\r\n     *\r\n     * @zh\r\n     * 当你想修改默认行为或者拓展 packManager 来拆分其他格式的包时可以注册自定义的 handler\r\n     *\r\n     * @param type - Extension likes '.bin' or map likes {'.bin': binHandler, '.ab': abHandler}\r\n     * @param handler - handler\r\n     * @param handler.packUuid - The uuid of pack\r\n     * @param handler.data - The content of pack\r\n     * @param handler.options - Some optional parameters\r\n     * @param handler.onComplete - Callback when finishing unpacking\r\n     *\r\n     * @example\r\n     * packManager.register('.bin', (packUuid, file, options, onComplete) => onComplete(null, null));\r\n     * packManager.register({\r\n     *  '.bin': (packUuid, file, options, onComplete) => onComplete(null, null),\r\n     *  '.ab': (packUuid, file, options, onComplete) => onComplete(null, null),\r\n     * });\r\n     */\r\n    public register (type: string, handler: Unpacker): void;\r\n    public register (map: Record<string, Unpacker>): void;\r\n    public register (type: string | Record<string, Unpacker>, handler?: Unpacker): void {\r\n        if (typeof type === 'object') {\r\n            js.mixin(this._unpackers, type);\r\n        } else {\r\n            this._unpackers[type] = handler!;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Use corresponding handler to unpack package\r\n     *\r\n     * @zh\r\n     * 用对应的 handler 来进行解包\r\n     *\r\n     * @method unpack\r\n     * @param pack - The uuid of packed assets\r\n     * @param data - The packed data\r\n     * @param type - The type indicates that which handler should be used to download, such as '.jpg'\r\n     * @param options - Some optional parameter\r\n     * @param onComplete - callback when finishing unpacking\r\n     * @param onComplete.err -  The occurred error, null indicates success\r\n     * @param onComplete.data - Original assets\r\n     *\r\n     * @example\r\n     * downloader.downloadFile('pack.json', {xhrResponseType: 'json'}, null, (err, file) => {\r\n     *      packManager.unpack(['2fawq123d', '1zsweq23f'], file, '.json', null, (err, data) => console.log(err));\r\n     * });\r\n     *\r\n     */\r\n    public unpack (\r\n        pack: string[],\r\n        data: any,\r\n        type: string,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: any) => void),\r\n    ): void {\r\n        if (!data) {\r\n            onComplete(new Error('package data is wrong!'));\r\n            return;\r\n        }\r\n        const unpacker = this._unpackers[type];\r\n        unpacker(pack, data, options, onComplete);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Download request item, If item is not in any package, download as usual. Otherwise, download the corresponding package and unpack it.\r\n     * And then retrieve the corresponding content form it.\r\n     *\r\n     * @zh\r\n     * 下载请求对象，如果请求对象不在任何包内，则正常下载，否则下载对应的 package 并进行拆解，并取回包内对应的内容\r\n     *\r\n     * @param item - Some item you want to download\r\n     * @param options - Some optional parameters\r\n     * @param onComplete - Callback when finished\r\n     * @param onComplete.err - The occurred error, null indicates success\r\n     * @param onComplete.data - The unpacked data retrieved from package\r\n     *\r\n     * @example\r\n     * var requestItem = AssetManager.RequestItem.create();\r\n     * requestItem.uuid = 'fcmR3XADNLgJ1ByKhqcC5Z';\r\n     * requestItem.info = config.getAssetInfo('fcmR3XADNLgJ1ByKhqcC5Z');\r\n     * packManager.load(requestItem, null, (err, data) => console.log(err));\r\n     *\r\n     */\r\n    public load (item: RequestItem, options: Record<string, any> | null, onComplete: ((err: Error | null, data?: any) => void)): void {\r\n        // if not in any package, download as uausl\r\n        if (item.isNative || !item.info || !item.info.packs) {\r\n            downloader.download(item.id, item.url, item.ext, item.options, onComplete);\r\n            return;\r\n        }\r\n\r\n        if (files.has(item.id)) {\r\n            onComplete(null, files.get(item.id));\r\n            return;\r\n        }\r\n\r\n        const packs = item.info.packs;\r\n\r\n        // find a loading package\r\n        const loadingPack = packs.find((val): boolean => this._loading.has(val.uuid));\r\n\r\n        if (loadingPack) {\r\n            const req = this._loading.get(loadingPack.uuid);\r\n            assertIsTrue(req);\r\n            req.push({ onComplete, id: item.id });\r\n            return;\r\n        }\r\n\r\n        // download a new package\r\n        const pack = packs[0];\r\n        this._loading.add(pack.uuid, [{ onComplete, id: item.id }]);\r\n\r\n        // find the url of pack\r\n        assertIsTrue(item.config);\r\n        const url = transform(pack.uuid, { ext: pack.ext, bundle: item.config.name }) as string;\r\n        const done = <T>(err: Error | null, data: T): void => {\r\n            files.remove(pack.uuid);\r\n            if (err) {\r\n                error(err.message, err.stack);\r\n            }\r\n            // unpack package\r\n            this.unpack(pack.packedUuids, data, pack.ext, item.options, (err2, result): void => {\r\n                if (!err2) {\r\n                    for (const id in result) {\r\n                        files.add(id, result[id]);\r\n                    }\r\n                }\r\n                const callbacks = this._loading.remove(pack.uuid);\r\n                assertIsTrue(callbacks);\r\n                for (let i = 0, l = callbacks.length; i < l; i++) {\r\n                    const cb = callbacks[i];\r\n                    if (err || err2) {\r\n                        cb.onComplete(err || err2);\r\n                        continue;\r\n                    }\r\n\r\n                    const unpackedData = result[cb.id];\r\n                    if (!unpackedData) {\r\n                        cb.onComplete(new Error('can not retrieve data from package'));\r\n                    } else {\r\n                        cb.onComplete(null, unpackedData);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        if (pack.ext === '.bin') {\r\n            // FIXME _downloadArrayBuffer is not a public API\r\n            downloader._downloadArrayBuffer(url, item.options, done);\r\n        } else if (pack.ext === '.json') {\r\n            downloader.download(pack.uuid, url, pack.ext, item.options, done);\r\n        } else {\r\n            errorID(4916, pack.ext);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new PackManager();\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Asset } from '../assets';\r\nimport { error, cclegacy } from '../../core';\r\nimport packManager from './pack-manager';\r\nimport RequestItem from './request-item';\r\nimport { assets, fetchPipeline } from './shared';\r\nimport Task from './task';\r\nimport { clear, forEach, getDepends } from './utilities';\r\n\r\nexport default function fetch (task: Task, done: ((err?: Error | null) => void)): void {\r\n    let firstTask = false;\r\n    if (!task.progress) {\r\n        task.progress = { finish: 0, total: task.input.length, canInvoke: true };\r\n        firstTask = true;\r\n    }\r\n\r\n    const { options, progress } = task;\r\n    const depends = [];\r\n    const total = progress.total as number;\r\n    const exclude = options!.__exclude__ = options!.__exclude__ || Object.create(null);\r\n\r\n    task.output = [];\r\n\r\n    forEach(task.input as RequestItem[], (item, cb): void => {\r\n        if (!item.isNative && assets.has(item.uuid)) {\r\n            const asset = assets.get(item.uuid);\r\n            item.content = asset!.addRef();\r\n            task.output.push(item);\r\n            if (progress.canInvoke) {\r\n                task.dispatch('progress', ++progress.finish, progress.total, item);\r\n            }\r\n            cb();\r\n            return;\r\n        }\r\n\r\n        packManager.load(item, task.options, (err, data): void => {\r\n            if (err) {\r\n                if (!task.isFinished) {\r\n                    if (!cclegacy.assetManager.force || firstTask) {\r\n                        error(err.message, err.stack);\r\n                        progress.canInvoke = false;\r\n                        done(err);\r\n                    } else {\r\n                        task.output.push(item);\r\n                        if (progress.canInvoke) {\r\n                            task.dispatch('progress', ++progress.finish, progress.total, item);\r\n                        }\r\n                    }\r\n                }\r\n            } else if (!task.isFinished) {\r\n                item.file = data;\r\n                task.output.push(item);\r\n                if (!item.isNative) {\r\n                    exclude[item.uuid] = true;\r\n                    getDepends(item.uuid, data, exclude, depends, item.config!);\r\n                    progress.total = total + depends.length;\r\n                }\r\n                if (progress.canInvoke) {\r\n                    task.dispatch('progress', ++progress.finish, progress.total, item);\r\n                }\r\n            }\r\n            cb();\r\n        });\r\n    }, (): void => {\r\n        if (task.isFinished) {\r\n            clear(task, true);\r\n            task.dispatch('error');\r\n            return;\r\n        }\r\n        if (depends.length > 0) {\r\n            // stage 2 , download depend asset\r\n            const subTask = Task.create({\r\n                input: depends,\r\n                progress,\r\n                options,\r\n                onProgress: task.onProgress,\r\n                onError: Task.prototype.recycle,\r\n                onComplete: (err): void => {\r\n                    if (!err) {\r\n                        task.output.push(...subTask.output);\r\n                        subTask.recycle();\r\n                    }\r\n                    if (firstTask) { decreaseRef(task); }\r\n                    done(err);\r\n                },\r\n            });\r\n            fetchPipeline.async(subTask);\r\n            return;\r\n        }\r\n        if (firstTask) { decreaseRef(task); }\r\n        done();\r\n    });\r\n}\r\n\r\nfunction decreaseRef (task: Task): void {\r\n    const output = task.output as RequestItem[];\r\n    for (let i = 0, l = output.length; i < l; i++) {\r\n        if (output[i].content) {\r\n            (output[i].content as Asset).decRef(false);\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { warnID } from '../../core';\r\n\r\n/**\r\n * A SAX Parser\r\n * @class saxParser\r\n */\r\nexport class SAXParser {\r\n    private _parser: DOMParser | null = null;\r\n    constructor () {\r\n        if (globalThis.DOMParser) {\r\n            this._parser = new DOMParser();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @method parse\r\n     * @param {String} xmlTxt\r\n     * @return {Document}\r\n     */\r\n    public parse (xmlTxt: string): Document {\r\n        return this._parseXML(xmlTxt);\r\n    }\r\n\r\n    protected _parseXML (textxml: string): Document {\r\n        // get a reference to the requested corresponding xml file\r\n        if (this._parser) {\r\n            return this._parser.parseFromString(textxml, 'text/xml');\r\n        }\r\n        throw new Error('Dom parser is not supported in this platform!');\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * plistParser is a singleton object for parsing plist files\r\n * @class plistParser\r\n * @extends SAXParser\r\n */\r\nclass PlistParser extends SAXParser {\r\n    /**\r\n     * @en parse a xml string as plist object.\r\n     * @zh 将xml字符串解析为plist对象。\r\n     * @param xmlTxt - plist xml contents\r\n     * @return {*} plist object\r\n     */\r\n    public parse (xmlTxt: string): any {\r\n        const xmlDoc = this._parseXML(xmlTxt);\r\n        const plist = xmlDoc.documentElement;\r\n        if (plist.tagName !== 'plist') {\r\n            warnID(5100);\r\n            return {};\r\n        }\r\n\r\n        // Get first real node\r\n        let node: HTMLElement | null = null;\r\n        for (let i = 0, len = plist.childNodes.length; i < len; i++) {\r\n            node = plist.childNodes[i] as HTMLElement;\r\n            if (node.nodeType === 1) {\r\n                break;\r\n            }\r\n        }\r\n        return this._parseNode(node!);\r\n    }\r\n\r\n    private _parseNode (node: HTMLElement): unknown {\r\n        let data: any = null;\r\n        const tagName = node.tagName;\r\n        if (tagName === 'dict') {\r\n            data = this._parseDict(node);\r\n        } else if (tagName === 'array') {\r\n            data = this._parseArray(node);\r\n        } else if (tagName === 'string') {\r\n            if (node.childNodes.length === 1) {\r\n                data = node.firstChild!.nodeValue;\r\n            } else {\r\n                // handle Firefox's 4KB nodeValue limit\r\n                data = '';\r\n                for (let i = 0; i < node.childNodes.length; i++) {\r\n                    data += node.childNodes[i].nodeValue;\r\n                }\r\n            }\r\n        } else if (tagName === 'false') {\r\n            data = false;\r\n        } else if (tagName === 'true') {\r\n            data = true;\r\n        } else if (tagName === 'real') {\r\n            data = parseFloat(node.firstChild!.nodeValue!);\r\n        } else if (tagName === 'integer') {\r\n            data = parseInt(node.firstChild!.nodeValue!, 10);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private _parseArray (node: HTMLElement): unknown[] {\r\n        const data: any[] = [];\r\n        for (let i = 0, len = node.childNodes.length; i < len; i++) {\r\n            const child = node.childNodes[i];\r\n            if (child.nodeType !== 1) {\r\n                continue;\r\n            }\r\n            data.push(this._parseNode(child as HTMLElement));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private _parseDict (node: HTMLElement): Record<string, any> {\r\n        const data = {};\r\n        let key = '';\r\n        for (let i = 0, len = node.childNodes.length; i < len; i++) {\r\n            const child = node.childNodes[i] as HTMLElement;\r\n            if (child.nodeType !== 1) {\r\n                continue;\r\n            }\r\n\r\n            // Grab the key, next noe should be the value\r\n            if (child.tagName === 'key') {\r\n                key = child.firstChild!.nodeValue!;\r\n            } else {\r\n                data[key] = this._parseNode(child);\r\n            }                 // Parse the value node\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\n/**\r\n * @type {PlistParser}\r\n * @name plistParser\r\n * A Plist Parser\r\n */\r\nconst plistParser = new PlistParser();\r\n\r\nexport default plistParser;\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ImageAsset, IMemoryImageSource } from '../assets/image-asset';\r\nimport { getError, js, warn } from '../../core';\r\nimport Cache from './cache';\r\nimport deserialize from './deserialize';\r\nimport { isScene } from './helper';\r\nimport plistParser from './plist-parser';\r\nimport { files, parsed } from './shared';\r\nimport { CCON } from '../../serialization/ccon';\r\nimport { Asset } from '../assets';\r\n\r\nexport type ParseHandler = (file: any, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void;\r\n\r\n/**\r\n * @en\r\n * Parse the downloaded file, it's a singleton, you can access it via [[AssetManager.parser]].\r\n *\r\n * @zh\r\n * 解析已下载的文件，parser 是一个单例, 你能通过 [[assetManager.parser]] 访问它。\r\n *\r\n */\r\nexport class Parser {\r\n    private _parsing = new Cache<((err: Error | null, data?: any) => void)[]>();\r\n\r\n    private _parsers: Record<string, ParseHandler> = {\r\n        '.png': this.parseImage,\r\n        '.jpg': this.parseImage,\r\n        '.bmp': this.parseImage,\r\n        '.jpeg': this.parseImage,\r\n        '.gif': this.parseImage,\r\n        '.ico': this.parseImage,\r\n        '.tiff': this.parseImage,\r\n        '.webp': this.parseImage,\r\n        '.image': this.parseImage,\r\n        '.pvr': this.parsePVRTex,\r\n        '.pkm': this.parsePKMTex,\r\n        '.astc': this.parseASTCTex,\r\n\r\n        // plist\r\n        '.plist': this.parsePlist,\r\n        import: this.parseImport,\r\n\r\n        '.ccon': this.parseImport,\r\n        '.cconb': this.parseImport,\r\n    };\r\n\r\n    private static _instance: Parser;\r\n\r\n    public static get instance (): Parser {\r\n        if (!this._instance) {\r\n            this._instance = new Parser();\r\n        }\r\n        return this._instance;\r\n    }\r\n    private constructor () {}\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public parseImage (\r\n        file: HTMLImageElement | Blob,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: HTMLImageElement | ImageBitmap | null) => void),\r\n    ): void {\r\n        if (file instanceof HTMLImageElement) {\r\n            onComplete(null, file);\r\n            return;\r\n        }\r\n        createImageBitmap(file, { premultiplyAlpha: 'none' }).then((result): void => {\r\n            onComplete(null, result);\r\n        }, (err: Error | null): void => {\r\n            onComplete(err, null);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * Don't mangle this function since it's used in platform adapter code.\r\n     */\r\n    public parsePVRTex (\r\n        file: ArrayBuffer | ArrayBufferView,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: IMemoryImageSource | null) => void),\r\n    ): void {\r\n        let err: Error | null = null;\r\n        let out: IMemoryImageSource | null = null;\r\n        try {\r\n            out = ImageAsset.parseCompressedTextures(file, 0);\r\n        } catch (e) {\r\n            err = e as Error;\r\n            warn(err);\r\n        }\r\n        onComplete(err, out);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * Don't mangle this function since it's used in platform adapter code.\r\n     */\r\n    public parsePKMTex (\r\n        file: ArrayBuffer | ArrayBufferView,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: IMemoryImageSource | null) => void),\r\n    ): void {\r\n        let err: Error | null = null;\r\n        let out: IMemoryImageSource | null = null;\r\n        try {\r\n            out = ImageAsset.parseCompressedTextures(file, 1);\r\n        } catch (e) {\r\n            err = e as Error;\r\n            warn(err);\r\n        }\r\n        onComplete(err, out);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * Don't mangle this function since it's used in platform adapter code.\r\n     */\r\n    public parseASTCTex (\r\n        file: ArrayBuffer | ArrayBufferView,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: IMemoryImageSource | null) => void),\r\n    ): void {\r\n        let err: Error | null = null;\r\n        let out: IMemoryImageSource | null = null;\r\n        try {\r\n            out = ImageAsset.parseCompressedTextures(file, 2);\r\n        } catch (e) {\r\n            err = e as Error;\r\n            warn(err);\r\n        }\r\n        onComplete(err, out);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * Don't mangle this function since it's used in platform adapter code.\r\n     */\r\n    public parsePlist (\r\n        file: string,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: any) => void),\r\n    ): void {\r\n        let err: Error | null = null;\r\n        const result = plistParser.parse(file);\r\n        if (!result) { err = new Error('parse failed'); }\r\n        onComplete(err, result);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public parseImport (\r\n        file: Record<string, any> | CCON,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: Asset | null) => void),\r\n    ): void {\r\n        if (!file) {\r\n            onComplete(new Error(getError(3702, options.__uuid__ as string)));\r\n            return;\r\n        }\r\n        let result: Asset | null = null;\r\n        let err: Error | null = null;\r\n        try {\r\n            result = deserialize(file, options);\r\n        } catch (e) {\r\n            err = e as Error;\r\n        }\r\n        onComplete(err, result);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public init (): void {\r\n        this._parsing.clear();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register custom handler if you want to change default behavior or extend parser to parse other format file.\r\n     *\r\n     * @zh\r\n     * 当你想修改默认行为或者拓展 parser 来解析其他格式文件时可以注册自定义的 handler。\r\n     *\r\n     * @param type\r\n     * @en Extension name likes '.jpg' or map likes {'.jpg': jpgHandler, '.png': pngHandler}.\r\n     * @zh 形如 '.jpg' 的扩展名或形如 {'.jpg': jpgHandler, '.png': pngHandler} 的映射表。\r\n     * @param handler @en The corresponding handler. @zh 对应扩展名的处理方法。\r\n     * @param handler.file @en The file to be parsed. @zh 待解析的文件。\r\n     * @param handler.options @en Some optional parameters. @zh 一些可选的参数。\r\n     * @param handler.onComplete @en The callback invoked when parsing finished. @zh 完成解析的回调。\r\n     *\r\n     * @example\r\n     * parser.register('.tga', (file, options, onComplete) => onComplete(null, null));\r\n     * parser.register({'.tga': (file, options, onComplete) => onComplete(null, null),\r\n     *                  '.ext': (file, options, onComplete) => onComplete(null, null)});\r\n     *\r\n     */\r\n    public register (\r\n        type: string,\r\n        handler: (file: any,\r\n            options: Record<string, any>,\r\n            onComplete: ((err: Error | null, data?: any) => void)\r\n        ) => void\r\n    ): void;\r\n    public register (\r\n        map: Record<string, (file: any, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void>): void;\r\n    public register (\r\n        type: string | Record<string, (file: any, options: Record<string, any>, onComplete: ((err: Error | null, data?: any) => void)) => void>,\r\n        handler?: (file: any,\r\n            options: Record<string, any>,\r\n            onComplete: ((err: Error | null, data?: any) => void)\r\n        ) => void,\r\n    ): void {\r\n        if (typeof type === 'object') {\r\n            js.mixin(this._parsers, type);\r\n        } else {\r\n            this._parsers[type] = handler as ParseHandler;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Use corresponding handler to parse file.\r\n     *\r\n     * @zh\r\n     * 使用对应的 handler 来解析文件。\r\n     *\r\n     * @param id @en The id of file. @zh 文件的唯一 id。\r\n     * @param file @en The data of file. @zh 文件的数据。\r\n     * @param type @en The corresponding type of file, likes '.jpg'. @zh 需要使用的解析方法类型。\r\n     * @param options @en Some optional parameters will be transferred to the corresponding handler. @zh 传递到解析方法的额外参数。\r\n     * @param onComplete @en The callback invoked when finishing parsing. @zh 完成解析的回调。\r\n     * @param onComplete.err @en The occurred error, null indicates success. @zh 解析过程中发生的错误，null 表明解析成功。\r\n     * @param onComplete.content @en The parsed data. @zh 解析后的数据。\r\n     *\r\n     * @example\r\n     * downloader.download('test.jpg', 'test.jpg', '.jpg', {}, (err, file) => {\r\n     *      parser.parse('test.jpg', file, '.jpg', null, (err, img) => console.log(err));\r\n     * });\r\n     *\r\n     */\r\n    public parse (\r\n        id: string,\r\n        file: any,\r\n        type: string,\r\n        options: Record<string, any>,\r\n        onComplete: ((err: Error | null, data?: any) => void),\r\n    ): void {\r\n        const parsedAsset = parsed.get(id);\r\n        if (parsedAsset) {\r\n            onComplete(null, parsedAsset);\r\n            return;\r\n        }\r\n        const parsing = this._parsing.get(id);\r\n        if (parsing) {\r\n            parsing.push(onComplete);\r\n            return;\r\n        }\r\n\r\n        const parseHandler = this._parsers[type];\r\n        if (!parseHandler) {\r\n            onComplete(null, file);\r\n            return;\r\n        }\r\n\r\n        this._parsing.add(id, [onComplete]);\r\n        parseHandler(file, options, (err, data): void => {\r\n            if (err) {\r\n                files.remove(id);\r\n            } else if (!isScene(data)) {\r\n                parsed.add(id, data);\r\n            }\r\n            const callbacks = this._parsing.remove(id);\r\n            for (let i = 0, l = callbacks!.length; i < l; i++) {\r\n                callbacks![i](err, data);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Parser.instance;\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { BUILD, EDITOR, PREVIEW } from 'internal:constants';\r\nimport { Asset } from '../assets/asset';\r\nimport { error, cclegacy, errorID } from '../../core';\r\nimport packManager from './pack-manager';\r\nimport parser from './parser';\r\nimport { Pipeline } from './pipeline';\r\nimport RequestItem from './request-item';\r\nimport { assets, files, parsed, pipeline } from './shared';\r\nimport Task from './task';\r\nimport { cache, checkCircleReference, clear, forEach, gatherAsset, getDepends, setProperties } from './utilities';\r\nimport { nativeDependMap, onLoadedInvokedMap } from './depend-maps';\r\n\r\ninterface IProgress {\r\n    finish: number;\r\n    total: number;\r\n    canInvoke: boolean;\r\n}\r\n\r\ninterface ILoadingRequest {\r\n    content: Asset;\r\n    finish: boolean;\r\n    err?: Error | null;\r\n    callbacks: Array<{ done: ((err?: Error | null) => void); item: RequestItem }>;\r\n}\r\n\r\nexport default function load (task: Task, done: ((err?: Error | null) => void)): void {\r\n    let firstTask = false;\r\n    if (!task.progress) {\r\n        task.progress = { finish: 0, total: task.input.length, canInvoke: true };\r\n        firstTask = true;\r\n    }\r\n\r\n    const { options, progress } = task;\r\n\r\n    options!.__exclude__ = options!.__exclude__ || Object.create(null);\r\n\r\n    task.output = [];\r\n\r\n    forEach(task.input as RequestItem[], (item, cb): void => {\r\n        const subTask = Task.create({\r\n            input: item,\r\n            onProgress: task.onProgress,\r\n            options,\r\n            progress,\r\n            onComplete: (err, result): void => {\r\n                if (err && !task.isFinished) {\r\n                    if (!cclegacy.assetManager.force || firstTask) {\r\n                        if (BUILD) {\r\n                            error(err.message, err.stack);\r\n                        }\r\n                        progress.canInvoke = false;\r\n                        done(err);\r\n                    } else if (progress.canInvoke) {\r\n                        task.dispatch('progress', ++progress.finish, progress.total, item);\r\n                    }\r\n                }\r\n                task.output.push(result);\r\n                subTask.recycle();\r\n                cb(null);\r\n            },\r\n        });\r\n\r\n        loadOneAssetPipeline.async(subTask);\r\n    }, (): void => {\r\n        options!.__exclude__ = null;\r\n\r\n        if (task.isFinished) {\r\n            clear(task, true);\r\n            task.dispatch('error');\r\n            return;\r\n        }\r\n\r\n        gatherAsset(task);\r\n        clear(task, true);\r\n        done();\r\n    });\r\n}\r\n\r\nconst loadOneAssetPipeline = new Pipeline('loadOneAsset', [\r\n\r\n    function fetch (task, done): void {\r\n        const item = task.output = task.input as RequestItem;\r\n        const { options, isNative, uuid, file } = item;\r\n        const { reloadAsset } = options;\r\n\r\n        if (file || (!reloadAsset && !isNative && assets.has(uuid))) {\r\n            done();\r\n            return;\r\n        }\r\n\r\n        packManager.load(item, task.options, (err, data): void => {\r\n            item.file = data;\r\n            done(err);\r\n        });\r\n    },\r\n\r\n    function parse (task, done): void {\r\n        const item: RequestItem = task.output = task.input;\r\n        const progress: IProgress = task.progress;\r\n        const exclude: Record<string, ILoadingRequest> = task.options!.__exclude__;\r\n        const { id, file, options } = item;\r\n\r\n        if (item.isNative) {\r\n            parser.parse(id, file, item.ext, options, (err, asset): void => {\r\n                if (err) {\r\n                    done(err);\r\n                    return;\r\n                }\r\n                item.content = asset;\r\n                if (progress.canInvoke) {\r\n                    task.dispatch('progress', ++progress.finish, progress.total, item);\r\n                }\r\n                files.remove(id);\r\n                parsed.remove(id);\r\n                done();\r\n            });\r\n        } else {\r\n            const { uuid } = item;\r\n            if (uuid in exclude) {\r\n                const { finish, content, err, callbacks } = exclude[uuid];\r\n                if (progress.canInvoke) {\r\n                    task.dispatch('progress', ++progress.finish, progress.total, item);\r\n                }\r\n\r\n                if (finish || checkCircleReference(uuid, uuid, exclude)) {\r\n                    if (content) { content.addRef(); }\r\n                    item.content = content;\r\n                    done(err);\r\n                } else {\r\n                    callbacks.push({ done, item });\r\n                }\r\n            } else if (!options.reloadAsset && assets.has(uuid)) {\r\n                const asset = assets.get(uuid)!;\r\n                item.content = asset.addRef();\r\n                if (progress.canInvoke) {\r\n                    task.dispatch('progress', ++progress.finish, progress.total, item);\r\n                }\r\n                done();\r\n            } else {\r\n                options.__uuid__ = uuid;\r\n                parser.parse(id, file, 'import', options, (err, asset: Asset): void => {\r\n                    if (err) {\r\n                        done(err);\r\n                        return;\r\n                    }\r\n                    loadDepends(task, asset, done);\r\n                });\r\n            }\r\n        }\r\n    },\r\n]);\r\n\r\nfunction loadDepends (task: Task, asset: Asset, done: ((err?: Error | null) => void)): void {\r\n    const { input: item, progress } = task;\r\n    const { uuid, id, options, config } = item as RequestItem;\r\n    const { cacheAsset } = options;\r\n\r\n    const depends = [];\r\n    // add reference avoid being released during loading dependencies\r\n    if (asset.addRef) {\r\n        asset.addRef();\r\n    }\r\n    getDepends(uuid, asset, Object.create(null) as Record<string, any>, depends, config!);\r\n    if (progress.canInvoke) {\r\n        task.dispatch('progress', ++progress.finish, progress.total += depends.length, item);\r\n    }\r\n\r\n    const repeatItem: ILoadingRequest = task.options!.__exclude__[uuid] = { content: asset, finish: false, callbacks: [{ done, item }] };\r\n\r\n    const subTask = Task.create({\r\n        input: depends,\r\n        options: task.options,\r\n        onProgress: task.onProgress,\r\n        onError: Task.prototype.recycle,\r\n        progress,\r\n        onComplete: (err): void => {\r\n            if (asset.decRef) {\r\n                asset.decRef(false);\r\n            }\r\n            repeatItem.finish = true;\r\n            repeatItem.err = err;\r\n\r\n            if (!err) {\r\n                const output = Array.isArray(subTask.output) ? subTask.output : [subTask.output];\r\n                const map: Record<string, any> = Object.create(null);\r\n                for (const dependAsset of output) {\r\n                    if (!dependAsset) { continue; }\r\n                    map[dependAsset instanceof Asset ? `${dependAsset._uuid}@import` : `${uuid}@native`] = dependAsset;\r\n                }\r\n\r\n                setProperties(uuid, asset, map);\r\n                try {\r\n                    if (typeof asset.onLoaded === 'function' && !onLoadedInvokedMap.has(asset) && !nativeDependMap.has(asset)) {\r\n                        asset.onLoaded();\r\n                        onLoadedInvokedMap.add(asset);\r\n                    }\r\n                } catch (e) {\r\n                    errorID(16352, uuid, (e as Error).message, (e as Error).stack!);\r\n                    if (EDITOR || PREVIEW) {\r\n                        if (asset instanceof Asset) {\r\n                            asset.initDefault();\r\n                        } else {\r\n                            // TODO: remove it.\r\n                            // scene asset might be a json in editor or preview\r\n                            cclegacy.SceneAsset.prototype.initDefault.call(asset);\r\n                        }\r\n                    }\r\n                }\r\n                files.remove(id);\r\n                parsed.remove(id);\r\n                if (!BUILD && asset.validate && !asset.validate()) {\r\n                    error(`The asset ${uuid} is invalid for some reason and will be reverted to default asset, please check it out!`);\r\n                    asset.initDefault();\r\n                }\r\n                cache(uuid, asset, cacheAsset as boolean);\r\n                subTask.recycle();\r\n            }\r\n\r\n            const callbacks = repeatItem.callbacks;\r\n\r\n            for (let i = 0, l = callbacks.length; i < l; i++) {\r\n                const cb = callbacks[i];\r\n                if (asset.addRef) {\r\n                    asset.addRef();\r\n                }\r\n                cb.item.content = asset;\r\n                cb.done(err);\r\n            }\r\n\r\n            callbacks.length = 0;\r\n        },\r\n    });\r\n\r\n    pipeline.async(subTask);\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { RequestType, transformPipeline } from './shared';\r\nimport Task from './task';\r\n\r\nexport default function preprocess (task: Task, done: ((err?: Error | null) => void)): void {\r\n    const options = task.options;\r\n    const subOptions = Object.create(null);\r\n    const leftOptions = Object.create(null);\r\n\r\n    for (const op in options) {\r\n        switch (op) {\r\n        // can't set these attributes in options\r\n        case RequestType.PATH:\r\n        case RequestType.UUID:\r\n        case RequestType.DIR:\r\n        case RequestType.SCENE:\r\n        case RequestType.URL: break;\r\n            // only need these attributes to transform url\r\n        case '__requestType__':\r\n        case '__isNative__':\r\n        case 'ext':\r\n        case 'type':\r\n        case '__nativeName__':\r\n        case 'audioLoadMode':\r\n        case 'bundle':\r\n            subOptions[op] = options[op];\r\n            break;\r\n            // other settings, left to next pipe\r\n        case '__exclude__':\r\n        case '__outputAsArray__':\r\n            leftOptions[op] = options[op];\r\n            break;\r\n        default:\r\n            subOptions[op] = options[op];\r\n            leftOptions[op] = options[op];\r\n            break;\r\n        }\r\n    }\r\n    task.options = leftOptions;\r\n\r\n    // transform url\r\n    const subTask = Task.create({ input: task.input, options: subOptions });\r\n    let err: Error | null = null;\r\n    try {\r\n        task.output = task.source = transformPipeline.sync(subTask);\r\n    } catch (e) {\r\n        err = e as Error;\r\n        for (let i = 0, l = subTask.output.length; i < l; i++) {\r\n            subTask.output[i].recycle();\r\n        }\r\n    }\r\n    subTask.recycle();\r\n    done(err);\r\n}\r\n","/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport Config, { IAssetInfo } from './config';\r\n\r\n/**\r\n * @en\r\n * A collection of information about a request.\r\n *\r\n * @zh\r\n * 请求的相关信息集合。\r\n *\r\n */\r\nexport default class RequestItem {\r\n    /**\r\n     * @en\r\n     * The id of request, combined from uuid and isNative.\r\n     *\r\n     * @zh\r\n     * 请求的 id, 由 uuid 和 isNative 组合而成。\r\n     */\r\n    get id (): string {\r\n        if (!this._id) {\r\n            this._id = `${this.overrideUuid || this.uuid}@${this.isNative ? 'native' : 'import'}`;\r\n        }\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public static MAX_DEAD_NUM = 500;\r\n\r\n    /**\r\n     * @en\r\n     * Create a new request item from pool.\r\n     *\r\n     * @zh\r\n     * 从对象池中创建 requestItem。\r\n     *\r\n     * @returns @en return a newly created RequestItem. @zh 返回一个刚创建的 `RequestItem`。\r\n     *\r\n     */\r\n    public static create (): RequestItem {\r\n        let out: RequestItem;\r\n        if (RequestItem._deadPool.length !== 0) {\r\n            out = RequestItem._deadPool.pop() as RequestItem;\r\n        } else {\r\n            out = new RequestItem();\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    private static _deadPool: RequestItem[] = [];\r\n\r\n    /**\r\n     * @en\r\n     * The uuid of request.\r\n     *\r\n     * @zh\r\n     * 所请求资源的 uuid。\r\n     *\r\n     */\r\n    public uuid = '';\r\n\r\n    /**\r\n     * @engineInternal only used for L10N asset replacement.\r\n     */\r\n    public overrideUuid = '';\r\n\r\n    /**\r\n     * @en\r\n     * The final url of request.\r\n     *\r\n     * @zh\r\n     * 请求的最终 url。\r\n     *\r\n     */\r\n    public url = '';\r\n\r\n    /**\r\n     * @en\r\n     * The extension name of asset.\r\n     *\r\n     * @zh\r\n     * 资源的扩展名。\r\n     *\r\n     */\r\n    public ext = '.json';\r\n\r\n    /**\r\n     * @en\r\n     * The content of asset.\r\n     *\r\n     * @zh\r\n     * 资源的内容。\r\n     *\r\n     */\r\n    public content: any = null;\r\n\r\n    /**\r\n     * @en\r\n     * The file of asset.\r\n     *\r\n     * @zh\r\n     * 资源的文件。\r\n     *\r\n     */\r\n    public file: any = null;\r\n\r\n    /**\r\n     * @en\r\n     * The information of asset.\r\n     *\r\n     * @zh\r\n     * 资源的相关信息。\r\n     *\r\n     */\r\n    public info: IAssetInfo | null = null;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public config: Config | null = null;\r\n\r\n    /**\r\n     * @en\r\n     * Whether or not it is native asset.\r\n     *\r\n     * @zh\r\n     * 资源是否是原生资源。\r\n     *\r\n     */\r\n    public isNative = false;\r\n\r\n    /**\r\n     * @en\r\n     * Custom options.\r\n     *\r\n     * @zh\r\n     * 自定义参数。\r\n     *\r\n     */\r\n    public options: Record<string, any> = Object.create(null);\r\n\r\n    private _id = '';\r\n\r\n    /**\r\n     * @en\r\n     * Recycle this to be reused.\r\n     *\r\n     * @zh\r\n     * 回收 requestItem 用于复用。\r\n     *\r\n     */\r\n    public recycle (): void {\r\n        if (RequestItem._deadPool.length === RequestItem.MAX_DEAD_NUM) { return; }\r\n        this._id = '';\r\n        this.uuid = '';\r\n        this.overrideUuid = '';\r\n        this.url = '';\r\n        this.ext = '.json';\r\n        this.content = null;\r\n        this.file = null;\r\n        this.info = null;\r\n        this.config = null;\r\n        this.isNative = false;\r\n        this.options = Object.create(null);\r\n        RequestItem._deadPool.push(this);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, PREVIEW } from 'internal:constants';\r\nimport { warnID, js, path, cclegacy } from '../../core';\r\nimport Config, { IAddressableInfo, IAssetInfo } from './config';\r\nimport { decodeUuid } from './helper';\r\nimport RequestItem from './request-item';\r\nimport { assetsOverrideMap, bundles, presets, RequestType } from './shared';\r\nimport Task from './task';\r\n\r\nconst infos: IAddressableInfo[] = [];\r\n\r\nexport function parse (task: Task): null {\r\n    const options = task.options;\r\n    const input = Array.isArray(task.input) ? task.input : [task.input];\r\n\r\n    task.output = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n        let item = input[i];\r\n        let out: RequestItem | null = RequestItem.create();\r\n        let config: Config | null = null;\r\n        let info: IAssetInfo | null = null;\r\n        if (typeof item === 'string') {\r\n            item = Object.create(null);\r\n            item[options!.__requestType__ || RequestType.UUID] = input[i];\r\n        }\r\n        if (typeof item === 'object') {\r\n            // local options will overlap glabal options\r\n            js.addon(item, options);\r\n            if (item.preset) {\r\n                js.addon(item, presets[item.preset]);\r\n            }\r\n            for (const key in item) {\r\n                switch (key) {\r\n                case RequestType.UUID: {\r\n                    const uuid = out.uuid = decodeUuid(item.uuid);\r\n                    if (!item.bundle) {\r\n                        const bundle = bundles.find((bundle): boolean => !!bundle.getAssetInfo(uuid));\r\n                        item.bundle = (bundle && bundle.name);\r\n                    }\r\n                    if (bundles.has(item.bundle)) {\r\n                        config = bundles.get(item.bundle)!.config;\r\n                        info = config.getAssetInfo(uuid);\r\n                        if (info && info.redirect) {\r\n                            if (!bundles.has(info.redirect)) { throw new Error(`Please load bundle ${info.redirect} first`); }\r\n                            config = bundles.get(info.redirect)!.config;\r\n                            info = config.getAssetInfo(uuid);\r\n                        }\r\n                        out.config = config;\r\n                        out.info = info;\r\n                    }\r\n                    out.ext = item.ext || info?.extension || '.json';\r\n                    break;\r\n                }\r\n                case '__requestType__':\r\n                case 'ext':\r\n                case 'bundle':\r\n                case 'preset':\r\n                case 'type': break;\r\n                case RequestType.DIR:\r\n                    if (bundles.has(item.bundle)) {\r\n                        bundles.get(item.bundle)!.config.getDirWithPath(item.dir, item.type, infos);\r\n                        for (const assetInfo of infos) {\r\n                            input.push({ uuid: assetInfo.uuid, __isNative__: false, ext: assetInfo.extension || '.json', bundle: item.bundle });\r\n                        }\r\n                        infos.length = 0;\r\n                    }\r\n                    out.recycle();\r\n                    out = null;\r\n                    break;\r\n                case RequestType.PATH:\r\n                    if (bundles.has(item.bundle)) {\r\n                        config = bundles.get(item.bundle)!.config;\r\n                        info = config.getInfoWithPath(item.path, item.type);\r\n\r\n                        if (info && info.redirect) {\r\n                            if (!bundles.has(info.redirect)) { throw new Error(`you need to load bundle ${info.redirect} first`); }\r\n                            config = bundles.get(info.redirect)!.config;\r\n                            info = config.getAssetInfo(info.uuid);\r\n                        }\r\n\r\n                        if (!info) {\r\n                            out.recycle();\r\n                            throw new Error(`Bundle ${item.bundle} doesn't contain ${item.path}`);\r\n                        }\r\n                        out.config = config;\r\n                        out.uuid = info.uuid;\r\n                        out.info = info;\r\n                    }\r\n                    out.ext = item.ext || info?.extension || '.json';\r\n                    break;\r\n                case RequestType.SCENE:\r\n                    if (!item.bundle) {\r\n                        const bundle = bundles.find((bundle): boolean => !!bundle.getSceneInfo(item.scene));\r\n                        item.bundle = bundle && bundle.name;\r\n                    }\r\n                    if (bundles.has(item.bundle)) {\r\n                        config = bundles.get(item.bundle)!.config;\r\n                        info = config.getSceneInfo(item.scene);\r\n\r\n                        if (info && info.redirect) {\r\n                            if (!bundles.has(info.redirect)) { throw new Error(`you need to load bundle ${info.redirect} first`); }\r\n                            config = bundles.get(info.redirect)!.config;\r\n                            info = config.getAssetInfo(info.uuid);\r\n                        }\r\n                        if (!info) {\r\n                            out.recycle();\r\n                            throw new Error(`Bundle ${config.name} doesn't contain scene ${item.scene}`);\r\n                        }\r\n                        out.config = config;\r\n                        out.uuid = info.uuid;\r\n                        out.info = info;\r\n                    }\r\n                    break;\r\n                case '__isNative__':\r\n                    out.isNative = item.__isNative__;\r\n                    break;\r\n                case RequestType.URL:\r\n                    out.url = item.url;\r\n                    out.uuid = item.uuid || item.url;\r\n                    out.ext = item.ext || path.extname(item.url);\r\n                    out.isNative = item.__isNative__ !== undefined ? item.__isNative__ : true;\r\n                    break;\r\n                default: out.options[key] = item[key];\r\n                }\r\n                if (!out) { break; }\r\n            }\r\n        }\r\n        if (!out) { continue; }\r\n        task.output.push(out);\r\n        if (!out.uuid && !out.url) { throw new Error(`Can not parse this input:${JSON.stringify(item)}`); }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function replaceOverrideAsset (task: Task): void {\r\n    const input = task.output = task.input;\r\n    for (let i = 0; i < input.length; i++) {\r\n        const item = input[i] as RequestItem;\r\n        if (assetsOverrideMap.has(item.uuid)) {\r\n            const uuid = assetsOverrideMap.get(item.uuid)!;\r\n            if (EDITOR || PREVIEW) {\r\n                // In EDITOR, there is no bundle, so just change uuid.\r\n                item.overrideUuid = uuid;\r\n                item.ext = item.isNative ? item.ext : '.json';\r\n                continue;\r\n            }\r\n            const bundle = bundles.find((bundle): boolean => !!bundle.getAssetInfo(uuid));\r\n            if (bundle) {\r\n                item.overrideUuid = uuid;\r\n                let config = bundle.config;\r\n                let info = config.getAssetInfo(uuid);\r\n                if (info && info.redirect) {\r\n                    if (!bundles.has(info.redirect)) { throw new Error(`Please load bundle ${info.redirect} first`); }\r\n                    config = bundles.get(info.redirect)!.config;\r\n                    info = config.getAssetInfo(uuid);\r\n                }\r\n                item.config = config;\r\n                item.info = info;\r\n                item.ext = item.isNative ? item.ext : (info?.extension || '.json');\r\n            } else {\r\n                warnID(16201, uuid, item.uuid);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function combine (task: Task): any {\r\n    const input = task.output = task.input;\r\n    for (let i = 0; i < input.length; i++) {\r\n        const item = input[i] as RequestItem;\r\n        if (item.url) { continue; }\r\n\r\n        let url = '';\r\n        let base = '';\r\n        const config = item.config;\r\n        if (item.isNative) {\r\n            base = (config && config.nativeBase) ? (config.base + config.nativeBase) : cclegacy.assetManager.generalNativeBase;\r\n        } else {\r\n            base = (config && config.importBase) ? (config.base + config.importBase) : cclegacy.assetManager.generalImportBase;\r\n        }\r\n\r\n        const uuid = item.overrideUuid || item.uuid;\r\n\r\n        let ver = '';\r\n        if (item.info) {\r\n            if (item.isNative) {\r\n                ver = item.info.nativeVer ? (`.${item.info.nativeVer}`) : '';\r\n            } else {\r\n                ver = item.info.ver ? (`.${item.info.ver}`) : '';\r\n            }\r\n        }\r\n\r\n        // ugly hack, WeChat does not support loading font likes 'myfont.dw213.ttf'. So append hash to directory\r\n        if (item.ext === '.ttf') {\r\n            url = `${base}/${uuid.slice(0, 2)}/${uuid}${ver}/${item.options.__nativeName__}`;\r\n        } else {\r\n            url = `${base}/${uuid.slice(0, 2)}/${uuid}${ver}${item.ext}`;\r\n        }\r\n\r\n        item.url = url;\r\n    }\r\n    return null;\r\n}\r\n","/* eslint-disable max-len */\r\n/*\r\n Copyright (c) 2019-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { BUILD, EDITOR, PREVIEW } from 'internal:constants';\r\nimport { Asset } from '../assets/asset';\r\nimport { error, settings, path, cclegacy, EventTarget, SettingsCategory } from '../../core';\r\nimport Bundle from './bundle';\r\nimport Cache, { ICache } from './cache';\r\nimport CacheManager from './cache-manager';\r\nimport dependUtil, { DependUtil } from './depend-util';\r\nimport downloader, { Downloader } from './downloader';\r\nimport factory from './factory';\r\nimport fetch from './fetch';\r\nimport * as helper from './helper';\r\nimport load from './load';\r\nimport packManager from './pack-manager';\r\nimport parser, { Parser } from './parser';\r\nimport { Pipeline } from './pipeline';\r\nimport preprocess from './preprocess';\r\nimport { ReleaseManager, releaseManager } from './release-manager';\r\nimport RequestItem from './request-item';\r\nimport {\r\n    presets,\r\n    references,\r\n    assets, BuiltinBundleName, bundles, fetchPipeline, files, parsed, pipeline, transformPipeline, assetsOverrideMap, IRequest } from './shared';\r\n\r\nimport Task from './task';\r\nimport { combine, parse, replaceOverrideAsset } from './url-transformer';\r\nimport { asyncify, parseParameters } from './utilities';\r\n\r\nconst querySettings = settings.querySettings.bind(settings);\r\nconst SETTINGS_CATEGORY_ASSETS = SettingsCategory.ASSETS;\r\n\r\nconst EVENT_ASSET_MISSING = 'asset-missing';\r\n/**\r\n * @zh\r\n * AssetManager 配置。\r\n * @en\r\n * AssetManager configuration.\r\n */\r\nexport interface IAssetManagerOptions {\r\n    /* Only valid on Editor */\r\n    importBase?: string;\r\n    /* Only valid on Editor */\r\n    nativeBase?: string;\r\n    /* Only valid on native */\r\n    jsbDownloaderMaxTasks?: number;\r\n    /* Only valid on native */\r\n    jsbDownloaderTimeout?: number;\r\n\r\n    /**\r\n     * @zh\r\n     * 所有 bundle 的版本信息。\r\n     * @en\r\n     * Version for all bundles.\r\n     */\r\n    bundleVers?: Record<string, string>;\r\n\r\n    /**\r\n     * @zh\r\n     * 远程服务器地址。\r\n     * @en\r\n     * Remote server address.\r\n     */\r\n    server?: string;\r\n\r\n    /**\r\n     * @zh\r\n     * 配置为子包的 bundle。\r\n     * @en\r\n     * All subpackages.\r\n     */\r\n    subpackages?: string[];\r\n\r\n    /**\r\n     * @zh\r\n     * 配置为远程包的 bundle。\r\n     * @en\r\n     * All remote bundles.\r\n     */\r\n    remoteBundles?: string[];\r\n\r\n    /**\r\n     * @en\r\n     * The maximum number of concurrent when downloading.\r\n     *\r\n     * @zh\r\n     * 下载时的最大并发数。\r\n     */\r\n    downloadMaxConcurrency?: number;\r\n}\r\n\r\n/**\r\n * @en\r\n * This module controls asset's behaviors and information, include loading, releasing etc. it is a singleton\r\n * You can access it via [[assetManager]].\r\n *\r\n * @zh\r\n * 此模块管理资源的行为和信息，包括加载，释放等，这是一个单例，你能够通过 `assetManager` 访问它。\r\n */\r\nexport class AssetManager {\r\n    /**\r\n     * @en\r\n     * Normal loading pipeline. Asset manager uses this pipeline to load all assets, it has an additional asset parsing process compared to the fetchPipeline.\r\n     *\r\n     * @zh\r\n     * 正常加载管线。Asset manager 使用此管线来加载所有资源，他与 fetchPipeline 相比额外多了资源的解析过程。\r\n     */\r\n    public pipeline: Pipeline = pipeline.append(preprocess).append(load);\r\n\r\n    /**\r\n     * @en\r\n     * Fetching pipeline. Asset manager uses this pipeline to preload all assets, which lacks the asset parsing process compared to the pipeline.\r\n     *\r\n     * @zh\r\n     * 下载管线。Asset manager 使用此管线来预加载所有资源，他与 pipeline 相比缺少了资源的解析过程。\r\n     *\r\n     */\r\n    public fetchPipeline: Pipeline = fetchPipeline.append(preprocess).append(fetch);\r\n\r\n    /**\r\n     * @en\r\n     * Url transformer. Asset manager uses this pipeline to convert the uuid, path, etc. to the path of the final file path to be loaded.\r\n     * You can customize this pipeline to redirect the path to the path you want.\r\n     *\r\n     * @zh\r\n     * Url 转换器。Asset manager 使用此管线将 uuid, 路径等信息转换为最终要加载的文件路径。你可以自定义此管线将路径重定向到你想要的路径。\r\n     *\r\n     */\r\n    public transformPipeline: Pipeline = transformPipeline.append(parse).append(replaceOverrideAsset).append(combine);\r\n\r\n    /**\r\n     * @en\r\n     * The collection of bundle which is already loaded, you can remove cache with [[removeBundle]].\r\n     *\r\n     * @zh\r\n     * 已加载 bundle 的集合， 你能通过 [[removeBundle]] 来移除缓存。\r\n     *\r\n     */\r\n    public bundles: ICache<Bundle> = bundles;\r\n\r\n    /**\r\n     * @en\r\n     * The collection of asset which is already loaded, you can remove cache with [[releaseAsset]].\r\n     *\r\n     * @zh\r\n     * 已加载资源的集合， 你能通过 [[releaseAsset]] 来移除缓存。\r\n     */\r\n    public assets: ICache<Asset> = assets;\r\n\r\n    /**\r\n     * @internal only using in L10N for now.\r\n     */\r\n    public readonly assetsOverrideMap = assetsOverrideMap;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public generalImportBase = '';\r\n    /**\r\n     * @internal\r\n     */\r\n    public generalNativeBase = '';\r\n\r\n    /**\r\n     * @en\r\n     * Manage relationship between asset and its dependencies.\r\n     *\r\n     * @zh\r\n     * 管理资源间依赖关系。\r\n     */\r\n    public dependUtil = dependUtil;\r\n\r\n    /**\r\n     * @en\r\n     * A flag indicates whether to force loading assets and ignore errors.\r\n     *\r\n     * @zh\r\n     * 是否强制加载资源标志, 如果为 true，加载资源时将会忽略错误。\r\n     *\r\n     */\r\n    public force = EDITOR || PREVIEW;\r\n\r\n    /**\r\n     * @en\r\n     * Whether to use image bitmap to load image first. If enabled, images loading will become faster but memory usage will increase.\r\n     *\r\n     * @zh\r\n     * 是否优先使用 image bitmap 来加载图片，启用之后，图片加载速度会更快, 但内存占用会变高。\r\n     *\r\n     */\r\n    public allowImageBitmap = false;\r\n\r\n    /**\r\n     * @en\r\n     * Some useful functions, such as the convert function between url and uuid.\r\n     *\r\n     * @zh\r\n     * 一些有用的方法, 例如 url 与 uuid 之间的转换方法。\r\n     *\r\n     */\r\n    public utils = helper;\r\n\r\n    /**\r\n     * @en\r\n     * The downloader used by `assetManager`.It manages all downloading tasks.\r\n     *\r\n     * @zh\r\n     * `assetManager` 所使用的下载器，管理所有下载任务。\r\n     *\r\n     */\r\n    public downloader = downloader;\r\n\r\n    /**\r\n     * @en\r\n     * The parser used by `assetManager`.It manages all parsing tasks.\r\n     *\r\n     * @zh\r\n     * `assetManager` 所使用的解析器，管理所有解析任务。\r\n     *\r\n     */\r\n    public parser = parser;\r\n\r\n    /**\r\n     * @en\r\n     * Manage all packed assets.\r\n     *\r\n     * @zh\r\n     * 管理所有合并后的资源。\r\n     *\r\n     * @deprecated Since v3.7, this is an engine internal interface. You usually don't need to care about how resources are merged and split.\r\n     */\r\n    public packManager = packManager;\r\n\r\n    /**\r\n     * @en\r\n     * Whether to cache loaded assets.\r\n     *\r\n     * @zh\r\n     * 是否缓存已加载的资源。\r\n     *\r\n     */\r\n    public cacheAsset = true;\r\n\r\n    /**\r\n     * @en\r\n     * Cache manager is a module which controls all caches downloaded from server in non-web platform.\r\n     *\r\n     * @zh\r\n     * 缓存管理器是一个模块，在非 WEB 平台上，用于管理所有从服务器上下载下来的缓存。\r\n     *\r\n     */\r\n    public cacheManager: CacheManager | null = null;\r\n\r\n    /**\r\n     * @en\r\n     * The preset of options.\r\n     *\r\n     * @zh\r\n     * 可选参数的预设集。\r\n     *\r\n     */\r\n    public presets = presets;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public factory = factory;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public preprocessPipe = preprocess;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public fetchPipe = fetch;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public loadPipe = load;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public references = references;\r\n\r\n    private _releaseManager = releaseManager;\r\n    private _files = files;\r\n    private _parsed = parsed;\r\n    private _parsePipeline = BUILD ? null : new Pipeline('parse existing json', [this.loadPipe]);\r\n    private _projectBundles: string[] = [];\r\n    private static _instance: AssetManager;\r\n    private _eventTarget = new EventTarget();\r\n\r\n    /**\r\n     * @en\r\n     * A global singleton instance of [[AssetManager]], which you can access directly through [[assetManager]].\r\n     *\r\n     * @zh\r\n     * [[AssetManager]] 的全局单例，你可以直接通过 [[assetManager]] 访问。\r\n     */\r\n    static get instance (): AssetManager {\r\n        if (!this._instance) {\r\n            this._instance = new AssetManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    private constructor () {}\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public get files (): Cache {\r\n        return this._files;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public getReleaseManager (): ReleaseManager {\r\n        return this._releaseManager;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The builtin 'main' bundle.\r\n     *\r\n     * @zh\r\n     * 内置 main 包。\r\n     */\r\n    public get main (): Bundle | null {\r\n        return bundles.get(BuiltinBundleName.MAIN) || null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The builtin 'resources' bundle.\r\n     *\r\n     * @zh\r\n     * 内置 resources 包。\r\n     *\r\n     */\r\n    public get resources (): Bundle | null {\r\n        return bundles.get(BuiltinBundleName.RESOURCES) || null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a delegate which will be invoked when asset is missing.\r\n     *\r\n     * @zh\r\n     * 添加当资源丢失时调用的委托。\r\n     *\r\n     * @param func - @en The missing asset delegate. @zh 资源丢失委托。\r\n     * @param target - @en The target of the missing asset delegate, can be null. @zh 资源丢失委托的目标对象，可以为空。\r\n     * @internal\r\n     * @engineInternal\r\n     */\r\n    public onAssetMissing (func: (parentAsset: Asset, owner: any, propName: string, uuid: string) => void, target?: any): void {\r\n        this._eventTarget.on(EVENT_ASSET_MISSING, func, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Remove the delegate when asset is missing.\r\n     * @zh\r\n     * 移除资源丢失时调用的委托。\r\n     * @param func - @en The missing asset delegate. @zh 资源丢失委托。\r\n     * @param target - @en The target of the missing asset delegate, can be null. @zh 资源丢失委托的目标对象，可以为空。\r\n     * @internal\r\n     * @engineInternal\r\n     */\r\n    public offAssetMissing (func: (parentAsset: Asset, owner: any, propName: string, uuid: string) => void, target?: any): void {\r\n        this._eventTarget.off(EVENT_ASSET_MISSING, func, target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Dispatch event when asset is missing.\r\n     * @zh\r\n     * 触发资源丢失时事件。\r\n     * @param parentAsset - @en The parent asset of the missing asset. @zh 丢失的资源的父资源。\r\n     * @param owner - @en The owner of the missing asset. @zh 丢失的资源的拥有者。\r\n     * @param propName - @en The property name of the missing asset. @zh 丢失的资源的属性名称。\r\n     * @param uuid - @en The uuid of the missing asset. @zh 丢失的资源的 uuid。\r\n     * @internal\r\n     * @engineInternal\r\n     */\r\n    public dispatchAssetMissing (parentAsset: Asset, owner: any, propName: string, uuid: string): void {\r\n        this._eventTarget.emit(EVENT_ASSET_MISSING, parentAsset, owner, propName, uuid);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Initializes assetManager with options.\r\n     * This method will be called automatically when the engine starts, you should not call this method manually at any time.\r\n     *\r\n     * @zh\r\n     * 初始化资源管理器，引擎在启动时，将会自动调用此方法，你不应该在任何时候手动调用此方法。\r\n     *\r\n     * @param options @en The configuration of asset manager. @zh 资源管理器的配置选项。\r\n     * @internal\r\n     */\r\n    public init (options: IAssetManagerOptions = {}): void {\r\n        const server = options.server || querySettings(SETTINGS_CATEGORY_ASSETS, 'server') || '';\r\n        const bundleVers = options.bundleVers || querySettings(SETTINGS_CATEGORY_ASSETS, 'bundleVers') || {};\r\n        const remoteBundles = options.remoteBundles || querySettings(SETTINGS_CATEGORY_ASSETS, 'remoteBundles') || [];\r\n        const downloadMaxConcurrency = options.downloadMaxConcurrency || querySettings(SETTINGS_CATEGORY_ASSETS, 'downloadMaxConcurrency');\r\n        if (downloadMaxConcurrency && downloadMaxConcurrency > 0) {\r\n            this.downloader.maxConcurrency = downloadMaxConcurrency;\r\n        }\r\n\r\n        this._files.clear();\r\n        this._parsed.clear();\r\n        this._releaseManager.init();\r\n        this.assets.clear();\r\n        this.bundles.clear();\r\n        this.packManager.init();\r\n        this.downloader.init(server, bundleVers, remoteBundles);\r\n        this.parser.init();\r\n        this.dependUtil.init();\r\n        let importBase = options.importBase || querySettings(SETTINGS_CATEGORY_ASSETS, 'importBase') || '';\r\n        if (importBase && importBase.endsWith('/')) {\r\n            importBase = importBase.substring(0, importBase.length - 1);\r\n        }\r\n        let nativeBase = options.nativeBase || querySettings(SETTINGS_CATEGORY_ASSETS, 'nativeBase') || '';\r\n        if (nativeBase && nativeBase.endsWith('/')) {\r\n            nativeBase = nativeBase.substring(0, nativeBase.length - 1);\r\n        }\r\n        this.generalImportBase = importBase;\r\n        this.generalNativeBase = nativeBase;\r\n        this._projectBundles = querySettings(SETTINGS_CATEGORY_ASSETS, 'projectBundles') || [];\r\n        const assetsOverride = querySettings(SETTINGS_CATEGORY_ASSETS, 'assetsOverrides') || {};\r\n        for (const key in assetsOverride) {\r\n            this.assetsOverrideMap.set(key, assetsOverride[key] as string);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the bundle which has been loaded with the name of bundle.\r\n     *\r\n     * @zh\r\n     * 通过包名称获取已加载的分包。\r\n     *\r\n     * @param name @en The name of bundle. @zh 资源包的名称。\r\n     * @returns @en The loaded bundle. @zh 已加载的资源包。\r\n     *\r\n     * @example\r\n     * // ${project}/assets/test1\r\n     * assetManager.getBundle('test1');\r\n     *\r\n     * assetManager.getBundle('resources');\r\n     *\r\n     */\r\n    public getBundle (name: string): Bundle | null {\r\n        return bundles.get(name) || null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes this bundle. NOTE: The asset within this bundle will not be released automatically,\r\n     * you can call [[AssetManager.Bundle.releaseAll]] manually before removing it if you need.\r\n     *\r\n     * @zh\r\n     * 移除此包, 注意：这个包内的资源不会自动释放, 如果需要的话你可以在摧毁之前手动调用 [[AssetManager.Bundle.releaseAll]] 进行释放。\r\n     *\r\n     * @param bundle @en The bundle to be removed. @zh 准备移除的 Bundle。\r\n     *\r\n     */\r\n    public removeBundle (bundle: Bundle): void {\r\n        bundle._destroy();\r\n        bundles.remove(bundle.name);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * General interface used to load assets with a progression callback and a complete callback.\r\n     * It is highly recommended that you use more simple API, such as `load`, `loadDir` etc. You can pass\r\n     * some additional data via the `options` parameter, and the parameters in `options` will affect this loading.\r\n     * The optional parameter will be transferred to handler of `downloader` and `parser` as `options`. You can\r\n     * register you own handler downloader or parser to collect these custom parameters for some effect.\r\n     *\r\n     * Reserved Keywords for additional parameters: `uuid`, `url`, `path`, `dir`, `scene`, `type`, `priority`, `preset`, `audioLoadMode`, `ext`,\r\n     * `bundle`, `onFileProgress`, `maxConcurrency`, `maxRequestsPerFrame`, `maxRetryCount`, `version`, `xhrResponseType`,\r\n     * `xhrWithCredentials`, `xhrMimeType`, `xhrTimeout`, `xhrHeader`, `reloadAsset`, `cacheAsset`, `cacheEnabled`,\r\n     * Please DO NOT use these words as your own options!\r\n     *\r\n     * @zh\r\n     * 通用加载资源接口，可传入进度回调以及完成回调，建议你使用更简单的API，例如 `load`、`loadDir` 等。你可以通过 `options` 参数额外传递一些数据，`options` 中的参数将会影响本次加载。\r\n     * 额外参数会传入加载流程中的 `downloader`, `parser` 的处理方法中, 你可以扩展 `downloader`, `parser` 收集参数完成想实现的效果。\r\n     *\r\n     * 额外参数保留关键字: `uuid`, `url`, `path`, `dir`, `scene`, `type`, `priority`, `preset`, `audioLoadMode`, `ext`, `bundle`, `onFileProgress`,\r\n     *  `maxConcurrency`, `maxRequestsPerFrame`, `maxRetryCount`, `version`, `xhrResponseType`, `xhrWithCredentials`, `xhrMimeType`, `xhrTimeout`, `xhrHeader`,\r\n     *  `reloadAsset`, `cacheAsset`, `cacheEnabled`, 请不要使用这些字段为你自己的参数!\r\n     *\r\n     * @param requests @en The loading requests. @zh 加载请求。\r\n     * @param options @en Optional parameters. @zh 可选参数。\r\n     * @param onProgress @en Callback invoked when the loading progress change. @zh 加载进度发生变化时执行的回调。\r\n     * @param onProgress.finished\r\n     * @en The number of request items that have finished loading.\r\n     * @zh 已经完成加载的资源数量。\r\n     * @param onProgress.total @en The number of all request items to be loaded. @zh 所有待加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的加载项。\r\n     * @param onComplete @en Callback invoked when all assets loaded. @zh 所有资源加载完成后的回调。\r\n     * @param onComplete.err @en Error message during loading, or null if loaded successfully. @zh 加载过程中的错误信息，如果加载成功则为 null。\r\n     * @param onComplete.data @en The loaded data, or null if an error occurred during loading. @zh 已加载的数据，如果加载过程中有错误发生，则为 null。\r\n     *\r\n     * @example\r\n     * assetManager.loadAny({url: 'http://example.com/a.png'}, (err, img) => log(img));\r\n     * assetManager.loadAny(['60sVXiTH1D/6Aft4MRt9VC'], (err, assets) => log(assets));\r\n     * assetManager.loadAny([{ uuid: '0cbZa5Y71CTZAccaIFluuZ'}, {url: 'http://example.com/a.png'}], (err, assets) => log(assets));\r\n     * assetManager.downloader.register('.asset', (url, options, onComplete) => {\r\n     *      url += '?userName=' + options.userName + \"&password=\" + options.password;\r\n     *      // other logic.\r\n     * });\r\n     * assetManager.parser.register('.asset', (file, options, onComplete) => {\r\n     *      var json = JSON.parse(file);\r\n     *      var skin = json[options.skin];\r\n     *      var model = json[options.model];\r\n     *      onComplete(null, {skin, model});\r\n     * });\r\n     * assetManager.loadAny({ url: 'http://example.com/my.asset' }, { skin: 'xxx', model: 'xxx', userName: 'xxx', password: 'xxx' });\r\n     *\r\n     */\r\n    public loadAny (requests: string | string[] | IRequest | Array<IRequest>, options: { [key: string]: any, preset?: string } | null, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: any) => void) | null): void;\r\n    public loadAny (requests: string | string[] | IRequest | Array<IRequest>, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: any) => void) | null): void;\r\n    public loadAny (requests: string | string[] | IRequest | Array<IRequest>, options: { [key: string]: any, preset?: string } | null, onComplete?: ((err: Error | null, data: any) => void) | null): void;\r\n    public loadAny<T extends Asset> (requests: string, onComplete?: ((err: Error | null, data: T) => void) | null): void;\r\n    public loadAny<T extends Asset> (requests: string[], onComplete?: ((err: Error | null, data: T[]) => void) | null): void;\r\n    public loadAny (requests: string | string[] | IRequest | Array<IRequest>, onComplete?: ((err: Error | null, data: any) => void) | null): void;\r\n    public loadAny (\r\n        requests: string | string[] | IRequest | Array<IRequest>,\r\n        options?: { [key: string]: any, preset?: string } | ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: any) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: any) => void) | null,\r\n        onComplete?: ((err: Error | null, data: any) => void) | null,\r\n    ): void {\r\n        const { options: opts, onProgress: onProg, onComplete: onComp } = parseParameters(options, onProgress, onComplete);\r\n        opts.preset = opts.preset || 'default';\r\n        requests = Array.isArray(requests) ? requests.slice() : requests;\r\n        const task = Task.create({ input: requests, onProgress: onProg, onComplete: asyncify(onComp), options: opts });\r\n        pipeline.async(task);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * General interface used to preload assets with a progression callback and a complete callback.It is highly recommended that you use\r\n     * more simple API, such as `preloadRes`, `preloadResDir` etc. Everything about preload is just likes `assetManager.loadAny`, the\r\n     * difference is `assetManager.preloadAny` will only download asset but not parse asset. You need to invoke `assetManager.loadAny()`\r\n     * to finish loading asset\r\n     *\r\n     * @zh\r\n     * 通用预加载资源接口，可传入进度回调以及完成回调，非常建议你使用更简单的 API ，例如 `preloadRes`, `preloadResDir` 等。`preloadAny` 和 `loadAny`\r\n     * 几乎一样，区别在于 `preloadAny` 只会下载资源，不会去解析资源，你需要调用 `assetManager.loadAny()` 来完成资源加载。\r\n     *\r\n     * @param requests @en The preloading requests. @zh 预加载请求。\r\n     * @param options @en Optional parameters. @zh 可选参数。\r\n     * @param onProgress @en Callback invoked when the preloading progress change. @zh 预加载进度发生变化时执行的回调。\r\n     * @param onProgress.finished\r\n     * @en The number of request items that have finished preloading.\r\n     * @zh 已经完成加载的资源数量。\r\n     * @param onProgress.total @en The number of all request items to be preloaded. @zh 所有待预加载的资源数量。\r\n     * @param onProgress.item @en The finished request item. @zh 当前完成的预加载项。\r\n     * @param onComplete @en Callback invoked when all assets preloaded. @zh 所有资源预加载完成后的回调。\r\n     * @param onComplete.err\r\n     * @en The error occurred in preloading process. Or null if preloaded successfully.\r\n     * @zh 预加载过程中的发生的错误，如果预加载成功则为 null。\r\n     * @param onComplete.items @en The preloaded content. @zh 完成预加载的内容。\r\n     *\r\n     * @example\r\n     * assetManager.preloadAny('0cbZa5Y71CTZAccaIFluuZ', (err) => assetManager.loadAny('0cbZa5Y71CTZAccaIFluuZ'));\r\n     *\r\n     */\r\n    public preloadAny (\r\n        requests: string | string[] | IRequest | Array<IRequest>,\r\n        options: { [key: string]: any, preset?: string } | null,\r\n        onProgress: ((finished: number, total: number, item: RequestItem) => void) | null,\r\n        onComplete: ((err: Error | null, data: RequestItem[]) => void)|null): void;\r\n    public preloadAny (requests: string | string[] | IRequest | Array<IRequest>, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preloadAny (requests: string | string[] | IRequest | Array<IRequest>, options: { [key: string]: any, preset?: string } | null, onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preloadAny (requests: string | string[] | IRequest | Array<IRequest>, onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null): void;\r\n    public preloadAny (\r\n        requests: string | string[] | IRequest | Array<IRequest>,\r\n        options?: { [key: string]: any, preset?: string } | ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: RequestItem[]) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: RequestItem[]) => void) | null,\r\n        onComplete?: ((err: Error | null, data: RequestItem[]) => void) | null,\r\n    ): void {\r\n        const { options: opts, onProgress: onProg, onComplete: onComp } = parseParameters(options, onProgress, onComplete);\r\n        opts.preset = opts.preset || 'preload';\r\n        requests = Array.isArray(requests) ? requests.slice() : requests;\r\n        const task = Task.create({ input: requests, onProgress: onProg, onComplete: asyncify(onComp), options: opts });\r\n        fetchPipeline.async(task);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Loads remote asset with url, such as audio, image, text and so on.\r\n     * Note that `loadRemote` uses the extension name in the url to determine how to load the asset.\r\n     * If you pass in a url without the extension name, you need to specify the `ext` parameter\r\n     * in the `options` to indicate how you want the asset loaded. See the third example below.\r\n     *\r\n     * @zh\r\n     * 使用 url 加载远程资源，例如音频，图片，文本等等。需要注意的是 `loadRemote` 是通过 url 中的扩展名判断以何种方式加载该资源，\r\n     * 如果你传入的 url 中没有携带后缀名，你需要额外指定 `options` 中的 `ext` 参数来表明你需要何种方式加载该资源。请参考下面的第三个示例。\r\n     *\r\n     * @param url @en The url of asset. @zh 资源的 URL 链接。\r\n     * @param options @en Some optional parameters. @zh 一些可选参数。\r\n     * @param options.ext\r\n     * @en If the url does not have an extension name, you can specify one manually. This will affect the way the assets are loaded.\r\n     * @zh 如果 URL 链接中没有包含扩展名，你可以手动指定一个扩展名。这将会影响资源的加载方式。\r\n     * @param onComplete @en Callback invoked when finish loading. @zh 当完成加载时触发的回调函数。\r\n     * @param onComplete.err @en The error occurred in loading process. Or null if loaded successfully. @zh 加载过程中出现的错误，如果加载成功则为 null。\r\n     * @param onComplete.asset\r\n     * @en The loaded asset. If there is an error in the loading process, this asset will be null.\r\n     * @zh 加载好的资源，如果加载过程出现了错误，资源将会 null。\r\n     *\r\n     * @example\r\n     * assetManager.loadRemote('http://www.cloud.com/test1.jpg', (err, texture) => console.log(err));\r\n     * assetManager.loadRemote('http://www.cloud.com/test2.mp3', (err, audioClip) => console.log(err));\r\n     * assetManager.loadRemote('http://www.cloud.com/test3', { ext: '.png' }, (err, texture) => console.log(err));\r\n     *\r\n     */\r\n    public loadRemote<T extends Asset> (url: string, options: { [k: string]: any, ext?: string } | null, onComplete?: ((err: Error | null, data: T) => void) | null): void;\r\n    public loadRemote<T extends Asset> (url: string, onComplete?: ((err: Error | null, data: T) => void) | null): void;\r\n    public loadRemote<T extends Asset> (url: string, options?: { [k: string]: any, ext?: string } | ((err: Error | null, data: T) => void) | null, onComplete?: ((err: Error | null, data: T) => void) | null): void {\r\n        const { options: opts, onComplete: onComp } = parseParameters<((err: Error | null, data: T) => void)>(options, undefined, onComplete);\r\n\r\n        if (!opts.reloadAsset && this.assets.has(url)) {\r\n            asyncify(onComp)(null, this.assets.get(url));\r\n            return;\r\n        }\r\n\r\n        opts.__isNative__ = true;\r\n        opts.preset = opts.preset || 'remote';\r\n        this.loadAny({ url }, opts, null, (err, data): void => {\r\n            if (err) {\r\n                error(err.message, err.stack);\r\n                if (onComp) { onComp(err, data as T); }\r\n            } else {\r\n                factory.create(url, data, (opts.ext as string) || path.extname(url), opts, (p1, p2): void => {\r\n                    if (onComp) { onComp(p1, p2 as T); }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * loads bundle with bundle name or URL. When you have configured a bundle in your project, you can load the bundle by the name configured in your project.\r\n     * Or when you put the bundle on the server, you can also load it by the full url address.\r\n     *\r\n     * Note: When you load a remote bundle by name, the bundle will be cached locally after download and will continue to use that cache in future, even if\r\n     * the version of the bundle file on your server has changed. When you need to load the latest bundle, you can pass an additional `version` parameter in the\r\n     * optional parameters and the asset system will compare this version number with the local cache, if the comparison fails, the asset system will pull\r\n     * the latest version of the bundle data from the server again.\r\n     *\r\n     * @zh\r\n     * 通过包名称或 url 加载资源包。当你在项目中配置了 Bundle 后，你可以通过项目中配置的名称来加载该 Bundle。\r\n     * 或者当你将 bundle 放在服务器上时，你也可以通过完整的 url 地址进行加载。\r\n     *\r\n     * 注意：当你用名称加载远程 bundle 时，该 bundle 在下载后将会缓存在本地并在后续持续使用该缓存，即使你服务器上的 bundle 文件版本已经发生变化。当你需要加载\r\n     * 最新的 bundle 时，你可以在可选参数中额外传入一个 `version` 参数，资源系统将比对此版本号与本地缓存是否一致，如果比对失败，则资源系统将重新从服务器上拉取\r\n     * 最新版本的 bundle 数据。\r\n     *\r\n     * @param nameOrUrl @en The name or root path of bundle. @zh 待加载的 bundle 在项目中的名称或在服务器上的 url 路径。\r\n     * @param options @en Some optional parameters. @zh 一些可选参数。\r\n     * @param options.version\r\n     * @en The version of the bundle, which you can get in the editor's build system, or directly by looking at the md5 hash value in the `config.json` path in the bundle directory after the build.\r\n     * @zh bundle 的版本号，你可以在编辑器的构建系统中获取，或者直接查看构建后的 bundle 目录中 config.json 路径中的 md5 hash 值。\r\n     * @param onComplete @en Callback invoked when bundle loaded or failed. @zh bundle 加载完成的回调。\r\n     * @param onComplete.err @en The occurred error during the loading, Or null if loaded successfully. @zh 加载过程中发生的错误，如果加载成功则为 null。\r\n     * @param onComplete.bundle\r\n     * @en The loaded bundle. If there is an error in the loading process, this bundle will be null.\r\n     * @zh 加载完成的 bundle。如果加载过程中出现了错误，则为 null。\r\n     *\r\n     * @example\r\n     * loadBundle('myBundle', (err, bundle) => console.log(bundle));\r\n     * loadBundle('http://localhost:8080/test', null, (err, bundle) => console.log(err));\r\n     *\r\n     */\r\n    public loadBundle (nameOrUrl: string, options: { [k: string]: any, version?: string } | null, onComplete?: ((err: Error | null, data: Bundle) => void) | null): void;\r\n    public loadBundle (nameOrUrl: string, onComplete?: ((err: Error | null, data: Bundle) => void) | null): void;\r\n    public loadBundle (nameOrUrl: string, options?: { [k: string]: any, version?: string } | ((err: Error | null, data: Bundle) => void) | null, onComplete?: ((err: Error | null, data: Bundle) => void) | null): void {\r\n        const { options: opts, onComplete: onComp } = parseParameters<((err: Error | null, data: Bundle) => void)>(options, undefined, onComplete);\r\n\r\n        const bundleName = path.basename(nameOrUrl);\r\n\r\n        if (this.bundles.has(bundleName)) {\r\n            asyncify(onComp)(null, this.getBundle(bundleName));\r\n            return;\r\n        }\r\n\r\n        opts.preset = opts.preset || 'bundle';\r\n        opts.ext = 'bundle';\r\n        opts.__isNative__ = true;\r\n        this.loadAny({ url: nameOrUrl }, opts, null, (err, data): void => {\r\n            if (err) {\r\n                error(err.message, err.stack);\r\n                if (onComp) { onComp(err, data as Bundle); }\r\n            } else {\r\n                factory.create(nameOrUrl, data, 'bundle', opts, (p1, p2): void => {\r\n                    if (onComp) { onComp(p1, p2 as Bundle); }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Release asset and it's dependencies.\r\n     * This method will not only remove the cache of the asset in assetManager, but also clean up its content.\r\n     * For example, if you release a texture, the texture asset and its gl texture data will be freed up.\r\n     * Notice, this method may cause the texture to be unusable, if there are still other nodes use the same texture,\r\n     * they may turn to black and report gl errors.\r\n     *\r\n     * @zh\r\n     * 释放资源以及其依赖资源, 这个方法不仅会从 assetManager 中删除资源的缓存引用，还会清理它的资源内容。\r\n     * 比如说，当你释放一个 texture 资源，这个 texture 和它的 gl 贴图数据都会被释放。\r\n     * 注意，这个函数可能会导致资源贴图或资源所依赖的贴图不可用，如果场景中存在节点仍然依赖同样的贴图，它们可能会变黑并报 GL 错误。\r\n     *\r\n     * @param asset @en The asset to be released. @zh 被释放的资源。\r\n     *\r\n     * @example\r\n     * // release a texture which is no longer need\r\n     * assetManager.releaseAsset(texture);\r\n     *\r\n     */\r\n    public releaseAsset (asset: Asset): void {\r\n        releaseManager.tryRelease(asset, true);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Release all unused assets. Refer to [[releaseAsset]] for detailed information.\r\n     *\r\n     * @zh\r\n     * 释放所有没有用到的资源。详细信息请参考 [[releaseAsset]]。\r\n     *\r\n     * @engineInternal\r\n     *\r\n     */\r\n    public releaseUnusedAssets (): void {\r\n        assets.forEach((asset): void => {\r\n            releaseManager.tryRelease(asset);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Release all assets. Refer to [[releaseAsset]] for detailed information.\r\n     *\r\n     * @zh\r\n     * 释放所有资源。详细信息请参考 [[releaseAsset]]。\r\n     *\r\n     */\r\n    public releaseAll (): void {\r\n        assets.forEach((asset): void => {\r\n            releaseManager.tryRelease(asset, true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * For internal usage.\r\n     * @param json\r\n     * @param options\r\n     * @param onComplete\r\n     * @internal\r\n     */\r\n    public loadWithJson<T extends Asset> (\r\n        json: Record<string, any>,\r\n        options: { [key: string]: any, assetId?: string } | null,\r\n        onProgress: ((finished: number, total: number, item: RequestItem) => void) | null,\r\n        onComplete: ((err: Error | null, data: T) => void) | null): void;\r\n    public loadWithJson<T extends Asset> (json: Record<string, any>, onProgress: ((finished: number, total: number, item: RequestItem) => void) | null, onComplete: ((err: Error | null, data: T) => void) | null): void;\r\n    public loadWithJson<T extends Asset> (json: Record<string, any>, options: { [key: string]: any, assetId?: string }, onComplete?: ((err: Error | null, data: T) => void) | null): void;\r\n    public loadWithJson<T extends Asset> (json: Record<string, any>, onComplete?: ((err: Error | null, data: T) => void) | null): void;\r\n    public loadWithJson<T extends Asset> (\r\n        json: Record<string, any>,\r\n        options?: { [key: string]: any, assetId?: string } | ((err: Error | null, data: T) => void) | null,\r\n        onProgress?: ((finished: number, total: number, item: RequestItem) => void) | ((err: Error | null, data: T) => void) | null,\r\n        onComplete?: ((err: Error | null, data: T) => void) | null,\r\n    ): void {\r\n        if (BUILD) { throw new Error('Only valid in Editor'); }\r\n\r\n        const { options: opts, onProgress: onProg, onComplete: onComp } = parseParameters<((err: Error | null, data: T) => void)>(options, onProgress, onComplete);\r\n\r\n        const item = RequestItem.create();\r\n        item.isNative = false;\r\n        item.uuid = opts.assetId || (`${new Date().getTime()}${Math.random()}`);\r\n        item.file = json;\r\n        item.ext = '.json';\r\n\r\n        const task = Task.create({\r\n            input: [item],\r\n            onProgress: onProg,\r\n            options: opts,\r\n            onComplete: asyncify((err: Error | null, data: T): void => {\r\n                if (!err) {\r\n                    if (!opts.assetId) {\r\n                        data._uuid = '';\r\n                    }\r\n                }\r\n                if (onComp) { onComp(err, data); }\r\n            }),\r\n        });\r\n        this._parsePipeline!.async(task);\r\n    }\r\n}\r\n\r\nAssetManager.Pipeline = Pipeline;\r\nAssetManager.Task = Task;\r\nAssetManager.Cache = Cache;\r\nAssetManager.RequestItem = RequestItem;\r\nAssetManager.Bundle = Bundle;\r\nAssetManager.BuiltinBundleName = BuiltinBundleName;\r\nAssetManager.CacheManager = CacheManager;\r\nAssetManager.Downloader = Downloader;\r\nAssetManager.Parser = Parser;\r\nAssetManager.DependUtil = DependUtil;\r\n\r\nexport declare namespace AssetManager {\r\n    export { Pipeline };\r\n    export { Task };\r\n    export { Cache };\r\n    export { RequestItem };\r\n    export { Bundle };\r\n    export { BuiltinBundleName };\r\n    export { CacheManager };\r\n    // Can not export interface in namespace for now.\r\n    // export { ICache };\r\n    // export { IAssetInfo, IPackInfo, IAddressableInfo, ISceneInfo, IRequest };\r\n    export { DependUtil };\r\n    export { Downloader };\r\n    export { Parser };\r\n}\r\n\r\n/**\r\n * @en `assetManager` is a global singleton instance of [[AssetManager]].\r\n * The engine uses `assetManager` to manage all asset and asset bundle, including loading, releasing, etc.\r\n * @zh `assetManager` 为 [[AssetManager]] 的全局单例，引擎使用 `assetManager` 来完成所有资源和资源包的管理工作，包括加载，释放等。\r\n */\r\nconst assetManager = cclegacy.assetManager = AssetManager.instance;\r\nexport default assetManager;\r\ncclegacy.AssetManager = AssetManager;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport Cache from './cache';\r\n\r\n/**\r\n * @en\r\n * Cache manager is a module which controls all caches downloaded from server in non-web platform, it is a singleton\r\n * You can access it via [[AssetManager.cacheManager]].\r\n *\r\n * @zh\r\n * 缓存管理器是一个模块，在非 WEB 平台上，用于管理所有从服务器上下载下来的缓存，这是一个单例，你能通过 [[AssetManager.cacheManager]] 访问它。\r\n *\r\n */\r\nexport default abstract class CacheManager {\r\n    /**\r\n     * @en\r\n     * The name of cache directory.\r\n     *\r\n     * @zh\r\n     * 缓存目录的名称。\r\n     */\r\n    public abstract cacheDir: string;\r\n\r\n    /**\r\n     * @en\r\n     * Whether to cache file into user's storage space, this property only works on mini-game platforms.\r\n     *\r\n     * @zh\r\n     * 是否缓存文件到用户存储空间，此属性只在小游戏平台有效。\r\n     *\r\n     */\r\n    public abstract cacheEnabled: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * Whether to clear cache automatically when storage ran out, this property only works on mini-game platforms.\r\n     *\r\n     * @zh\r\n     * 是否在存储空间满了后自动清理缓存，此属性只在小游戏平台有效。\r\n     *\r\n     */\r\n    public abstract autoClear: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * The interval between caching file, this property only works on mini-game platforms, unit: ms.\r\n     *\r\n     * @zh\r\n     * 缓存文件的间隔时间，此属性只在小游戏平台有效，单位：毫秒。\r\n     *\r\n     */\r\n    public abstract cacheInterval: number;\r\n\r\n    /**\r\n     * @en\r\n     * The interval between deleting file, when you use `cleanLRU`, the file will be deleted as this interval, unit: ms.\r\n     *\r\n     * @zh\r\n     * 清理资源的间隔时间，当你使用 `cleanLRU` 时，资源将以此间隔被删除，单位：毫秒。\r\n     *\r\n     */\r\n    public abstract deleteInterval: number;\r\n\r\n    /**\r\n     * @en\r\n     * List of all cached files.\r\n     *\r\n     * @zh\r\n     * 所有缓存文件列表。\r\n     *\r\n     */\r\n    public abstract cachedFiles: Cache<{ bundle: string, url: string, lastTime: number }>;\r\n\r\n    /**\r\n     * @en\r\n     * Gets cached path with origin url.\r\n     *\r\n     * @zh\r\n     * 通过原始 url 获取缓存后的路径。\r\n     *\r\n     * @param originUrl @en The origin url of file. @zh 文件的原始 url。\r\n     * @returns @en The path where the file is cached. @zh 该文件所缓存的路径。\r\n     */\r\n    public abstract getCache (originUrl: string): string;\r\n\r\n    /**\r\n     * @en\r\n     * Gets temporary path with origin url, this method only works on mini-game platforms.\r\n     *\r\n     * @zh\r\n     * 通过原始 url 获取临时文件的路径，此方法只在小游戏平台有效。\r\n     *\r\n     * @param originUrl @en The origin url of file. @zh 文件的原始 url。\r\n     * @returns @en The temporary path where the file is stored. @zh 该文件所存储的临时路径。\r\n     */\r\n    public abstract getTemp (originUrl: string): string;\r\n\r\n    /**\r\n     * @en\r\n     * Clear all caches, please use with caution, If necessary, we recommend using it before the game is launched.\r\n     *\r\n     * @zh\r\n     * 清空所有缓存，请谨慎使用，如果必要的话，我们建议在游戏启动之前使用。\r\n     *\r\n     */\r\n    public abstract clearCache (): void;\r\n\r\n    /**\r\n     * @en\r\n     * Clear part of caches with LRU strategy.\r\n     *\r\n     * @zh\r\n     * 使用 LRU 策略清空部分缓存。\r\n     *\r\n     */\r\n    public abstract clearLRU (): void;\r\n\r\n    /**\r\n     * @en\r\n     * Removes cache with origin url.\r\n     *\r\n     * @zh\r\n     * 通过原始 url 移除缓存。\r\n     *\r\n     * @param originUrl @en The origin url to remove from cache. @zh 要从缓存中移除的原始 url。\r\n     */\r\n    public abstract removeCache (originUrl: string): void;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, EDITOR_NOT_IN_PREVIEW, TEST } from 'internal:constants';\r\nimport { Asset } from '../assets/asset';\r\nimport { ImageAsset, ImageSource } from '../assets/image-asset';\r\nimport { SpriteFrame } from '../../2d/assets/sprite-frame';\r\nimport { Texture2D } from '../assets/texture-2d';\r\nimport { TextureCube } from '../assets/texture-cube';\r\nimport assetManager from './asset-manager';\r\nimport { BuiltinBundleName } from './shared';\r\nimport Bundle from './bundle';\r\nimport { settings, cclegacy, SettingsCategory } from '../../core';\r\nimport { releaseManager } from './release-manager';\r\nimport { Material } from '../assets';\r\nimport { TextureFilter, PixelFormat } from '../assets/asset-enum';\r\n\r\nexport class BuiltinResMgr {\r\n    protected _resources: Record<string, Asset> = {};\r\n    protected _materialsToBeCompiled: Material[] = [];\r\n\r\n    constructor () {}\r\n\r\n    // this should be called after renderer initialized\r\n    public init (): void {\r\n        const resources = this._resources;\r\n        const len = 2;\r\n        const numChannels = 4;\r\n        const byteLength = len * len * numChannels;\r\n\r\n        const blackValueView   = new Uint8Array(byteLength);\r\n        const emptyValueView   = new Uint8Array(byteLength);\r\n        const greyValueView    = new Uint8Array(byteLength);\r\n        const whiteValueView   = new Uint8Array(byteLength);\r\n        const normalValueView  = new Uint8Array(byteLength);\r\n\r\n        let offset = 0;\r\n        for (let i = 0; i < len * len; i++) {\r\n            blackValueView[offset]     = 0;\r\n            blackValueView[offset + 1] = 0;\r\n            blackValueView[offset + 2] = 0;\r\n            blackValueView[offset + 3] = 255;\r\n\r\n            emptyValueView[offset]     = 0;\r\n            emptyValueView[offset + 1] = 0;\r\n            emptyValueView[offset + 2] = 0;\r\n            emptyValueView[offset + 3] = 0;\r\n\r\n            greyValueView[offset]     = 119;\r\n            greyValueView[offset + 1] = 119;\r\n            greyValueView[offset + 2] = 119;\r\n            greyValueView[offset + 3] = 255;\r\n\r\n            whiteValueView[offset]     = 255;\r\n            whiteValueView[offset + 1] = 255;\r\n            whiteValueView[offset + 2] = 255;\r\n            whiteValueView[offset + 3] = 255;\r\n\r\n            normalValueView[offset]     = 127;\r\n            normalValueView[offset + 1] = 127;\r\n            normalValueView[offset + 2] = 255;\r\n            normalValueView[offset + 3] = 255;\r\n\r\n            offset += numChannels;\r\n        }\r\n\r\n        const defaultSize = 16;\r\n        const halfDefaultSize = defaultSize / 2;\r\n        const defaultValueView = new Uint8Array(defaultSize * defaultSize * numChannels);\r\n\r\n        offset = 0;\r\n        for (let i = 0; i < defaultSize * defaultSize; i++) {\r\n            defaultValueView[offset]     = 221;\r\n            defaultValueView[offset + 1] = 221;\r\n            defaultValueView[offset + 2] = 221;\r\n            defaultValueView[offset + 3] = 255;\r\n\r\n            offset += numChannels;\r\n        }\r\n        offset = 0;\r\n        for (let i = 0; i < halfDefaultSize; i++) {\r\n            for (let j = 0; j < halfDefaultSize; j++) {\r\n                defaultValueView[offset]     = 85;\r\n                defaultValueView[offset + 1] = 85;\r\n                defaultValueView[offset + 2] = 85;\r\n                defaultValueView[offset + 3] = 255;\r\n\r\n                offset += numChannels;\r\n            }\r\n            offset += halfDefaultSize * numChannels;\r\n        }\r\n        offset += halfDefaultSize * numChannels;\r\n        for (let i = 0; i < halfDefaultSize; i++) {\r\n            for (let j = 0; j < halfDefaultSize; j++) {\r\n                defaultValueView[offset]     = 85;\r\n                defaultValueView[offset + 1] = 85;\r\n                defaultValueView[offset + 2] = 85;\r\n                defaultValueView[offset + 3] = 255;\r\n\r\n                offset += numChannels;\r\n            }\r\n            offset += halfDefaultSize * numChannels;\r\n        }\r\n\r\n        const blackMemImageSource: ImageSource = {\r\n            width: len,\r\n            height: len,\r\n            _data: blackValueView,\r\n            _compressed: false,\r\n            format: PixelFormat.RGBA8888,\r\n        };\r\n\r\n        const emptyMemImageSource: ImageSource = {\r\n            width: len,\r\n            height: len,\r\n            _data: emptyValueView,\r\n            _compressed: false,\r\n            format: PixelFormat.RGBA8888,\r\n        };\r\n\r\n        const greyMemImageSource: ImageSource = {\r\n            width: len,\r\n            height: len,\r\n            _data: greyValueView,\r\n            _compressed: false,\r\n            format: PixelFormat.RGBA8888,\r\n        };\r\n\r\n        const whiteMemImageSource: ImageSource = {\r\n            width: len,\r\n            height: len,\r\n            _data: whiteValueView,\r\n            _compressed: false,\r\n            format: PixelFormat.RGBA8888,\r\n        };\r\n\r\n        const normalMemImageSource: ImageSource = {\r\n            width: len,\r\n            height: len,\r\n            _data: normalValueView,\r\n            _compressed: false,\r\n            format: PixelFormat.RGBA8888,\r\n        };\r\n\r\n        const defaultMemImageSource: ImageSource = {\r\n            width: defaultSize,\r\n            height: defaultSize,\r\n            _data: defaultValueView,\r\n            _compressed: false,\r\n            format: PixelFormat.RGBA8888,\r\n        };\r\n\r\n        // ============================\r\n        // builtin textures\r\n        // type string postfix according to getStringFromType()\r\n        // ============================\r\n\r\n        // black texture\r\n        const imgAsset = new ImageAsset(blackMemImageSource);\r\n        const blackTexture = new Texture2D();\r\n        blackTexture._uuid = 'black-texture';\r\n        blackTexture.image = imgAsset;\r\n        resources[blackTexture._uuid] = blackTexture;\r\n\r\n        // empty texture\r\n        const emptyImgAsset = new ImageAsset(emptyMemImageSource);\r\n        const emptyTexture = new Texture2D();\r\n        emptyTexture._uuid = 'empty-texture';\r\n        emptyTexture.image = emptyImgAsset;\r\n        resources[emptyTexture._uuid] = emptyTexture;\r\n\r\n        // black cube texture\r\n        const blackCubeTexture = new TextureCube();\r\n        blackCubeTexture._uuid = 'black-cube-texture';\r\n        blackCubeTexture.setMipFilter(TextureFilter.NEAREST);\r\n        blackCubeTexture.image = {\r\n            front: new ImageAsset(blackMemImageSource),\r\n            back: new ImageAsset(blackMemImageSource),\r\n            left: new ImageAsset(blackMemImageSource),\r\n            right: new ImageAsset(blackMemImageSource),\r\n            top: new ImageAsset(blackMemImageSource),\r\n            bottom: new ImageAsset(blackMemImageSource),\r\n        };\r\n        resources[blackCubeTexture._uuid] = blackCubeTexture;\r\n\r\n        // grey texture\r\n        const greyImgAsset = new ImageAsset(greyMemImageSource);\r\n        const greyTexture = new Texture2D();\r\n        greyTexture._uuid = 'grey-texture';\r\n        greyTexture.image = greyImgAsset;\r\n        resources[greyTexture._uuid] = greyTexture;\r\n\r\n        // grey cube texture\r\n        const greyCubeTexture = new TextureCube();\r\n        greyCubeTexture._uuid = 'grey-cube-texture';\r\n        greyCubeTexture.setMipFilter(TextureFilter.NEAREST);\r\n        greyCubeTexture.image = {\r\n            front: new ImageAsset(greyMemImageSource),\r\n            back: new ImageAsset(greyMemImageSource),\r\n            left: new ImageAsset(greyMemImageSource),\r\n            right: new ImageAsset(greyMemImageSource),\r\n            top: new ImageAsset(greyMemImageSource),\r\n            bottom: new ImageAsset(greyMemImageSource),\r\n        };\r\n        resources[greyCubeTexture._uuid] = greyCubeTexture;\r\n\r\n        // white texture\r\n        const whiteImgAsset = new ImageAsset(whiteMemImageSource);\r\n        const whiteTexture = new Texture2D();\r\n        whiteTexture._uuid = 'white-texture';\r\n        whiteTexture.image = whiteImgAsset;\r\n        resources[whiteTexture._uuid] = whiteTexture;\r\n\r\n        // white cube texture\r\n        const whiteCubeTexture = new TextureCube();\r\n        whiteCubeTexture._uuid = 'white-cube-texture';\r\n        whiteCubeTexture.setMipFilter(TextureFilter.NEAREST);\r\n        whiteCubeTexture.image = {\r\n            front: new ImageAsset(whiteMemImageSource),\r\n            back: new ImageAsset(whiteMemImageSource),\r\n            left: new ImageAsset(whiteMemImageSource),\r\n            right: new ImageAsset(whiteMemImageSource),\r\n            top: new ImageAsset(whiteMemImageSource),\r\n            bottom: new ImageAsset(whiteMemImageSource),\r\n        };\r\n        resources[whiteCubeTexture._uuid] = whiteCubeTexture;\r\n\r\n        // normal texture\r\n        const normalImgAsset = new ImageAsset(normalMemImageSource);\r\n        const normalTexture = new Texture2D();\r\n        normalTexture._uuid = 'normal-texture';\r\n        normalTexture.image = normalImgAsset;\r\n        resources[normalTexture._uuid] = normalTexture;\r\n\r\n        // default texture\r\n        const defaultImgAsset = new ImageAsset(defaultMemImageSource);\r\n        const defaultTexture = new Texture2D();\r\n        defaultTexture._uuid = 'default-texture';\r\n        defaultTexture.image = defaultImgAsset;\r\n        resources[defaultTexture._uuid] = defaultTexture;\r\n\r\n        // default cube texture\r\n        const defaultCubeTexture = new TextureCube();\r\n        defaultCubeTexture.setMipFilter(TextureFilter.NEAREST);\r\n        defaultCubeTexture._uuid = 'default-cube-texture';\r\n        defaultCubeTexture.image = {\r\n            front: new ImageAsset(defaultMemImageSource),\r\n            back: new ImageAsset(defaultMemImageSource),\r\n            left: new ImageAsset(defaultMemImageSource),\r\n            right: new ImageAsset(defaultMemImageSource),\r\n            top: new ImageAsset(defaultMemImageSource),\r\n            bottom: new ImageAsset(defaultMemImageSource),\r\n        };\r\n        resources[defaultCubeTexture._uuid] = defaultCubeTexture;\r\n\r\n        if (cclegacy.SpriteFrame) {\r\n            const spriteFrame = new cclegacy.SpriteFrame() as SpriteFrame;\r\n            const image = imgAsset;\r\n            const texture = new Texture2D();\r\n            texture.image = image;\r\n            spriteFrame.texture = texture;\r\n            spriteFrame._uuid = 'default-spriteframe';\r\n            resources[spriteFrame._uuid] = spriteFrame;\r\n        }\r\n\r\n        if (EDITOR) {\r\n            const builtinAssets = settings.querySettings<string[]>(SettingsCategory.ENGINE, 'builtinAssets');\r\n            const builtinBundle = new Bundle();\r\n            builtinBundle.init({\r\n                name: BuiltinBundleName.INTERNAL,\r\n                uuids: builtinAssets || [],\r\n                deps: [],\r\n                importBase: '',\r\n                nativeBase: '',\r\n                base: '',\r\n                paths: {},\r\n                scenes: {},\r\n                packs: {},\r\n                versions: { import: [], native: [] },\r\n                redirect: [],\r\n                debug: false,\r\n                types: [],\r\n                extensionMap: {},\r\n            });\r\n        }\r\n    }\r\n\r\n    public addAsset (key: string, asset: Asset): void {\r\n        this._resources[key] = asset;\r\n    }\r\n\r\n    public get<T extends Asset> (uuid: string): T {\r\n        return this._resources[uuid] as T;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public loadBuiltinAssets (): Promise<void> {\r\n        const builtinAssets = settings.querySettings<string[]>(SettingsCategory.ENGINE, 'builtinAssets');\r\n        if (TEST || !builtinAssets) return Promise.resolve();\r\n        const resources = this._resources;\r\n        return new Promise<void>((resolve, reject): void => {\r\n            assetManager.loadBundle(BuiltinBundleName.INTERNAL, (err, bundle): void => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                assetManager.loadAny(builtinAssets, (err, assets): void => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        assets.forEach((asset): void => {\r\n                            resources[asset.name] = asset;\r\n                            // In Editor, no need to ignore asset destroy, we use auto gc to handle destroy\r\n                            if (!EDITOR_NOT_IN_PREVIEW) { releaseManager.addIgnoredAsset(asset); }\r\n                            if (asset instanceof cclegacy.Material) {\r\n                                this._materialsToBeCompiled.push(asset as Material);\r\n                            }\r\n                        });\r\n                        resolve();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public compileBuiltinMaterial (): void {\r\n        // NOTE: Builtin material should be compiled again after the render pipeline setup\r\n        for (let i = 0; i < this._materialsToBeCompiled.length; ++i) {\r\n            const mat = this._materialsToBeCompiled[i];\r\n            for (let j = 0; j < mat.passes.length; ++j) {\r\n                mat.passes[j].tryCompile();\r\n            }\r\n        }\r\n        this._materialsToBeCompiled.length = 0;\r\n    }\r\n}\r\n\r\nconst builtinResMgr = cclegacy.builtinResMgr = new BuiltinResMgr();\r\nexport { builtinResMgr };\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nexport const getPhaseID = ((): (phaseName: string | number) => number => {\r\n    const phases: Map<string, number> = new Map<string, number>();\r\n    let phaseNum = 0;\r\n    return (phaseName: string | number): number => {\r\n        if (typeof phaseName === 'number') { return phaseName; }\r\n        if (!phases.has(phaseName)) {\r\n            phases.set(phaseName, 1 << phaseNum);\r\n            phaseNum++;\r\n        }\r\n        return phases.get(phaseName)!;\r\n    };\r\n})();\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Type } from '../../gfx';\r\nimport { Color, Mat3, Mat4, Vec2, Vec3, Vec4, Quat, IVec2Like, IVec3Like, IVec4Like, IMat3Like, IMat4Like, warnID } from '../../core';\r\n\r\nconst typeMask    = 0xfc000000; //  6 bits => 64 types\r\nconst bindingMask = 0x03f00000; //  6 bits => 64 bindings\r\nconst countMask   = 0x000ff000; //  8 bits => 256 vectors\r\nconst offsetMask  = 0x00000fff; // 12 bits => 1024 vectors\r\n\r\nexport const genHandle = (binding: number, type: Type, count: number, offset = 0): number => ((type << 26) & typeMask)\r\n    | ((binding << 20) & bindingMask) | (count << 12) & countMask | (offset & offsetMask);\r\nexport const getTypeFromHandle = (handle: number): number => (handle & typeMask) >>> 26;\r\nexport const getBindingFromHandle = (handle: number): number => (handle & bindingMask) >>> 20;\r\nexport const getCountFromHandle = (handle: number): number => (handle & countMask) >>> 12;\r\nexport const getOffsetFromHandle = (handle: number): number => (handle & offsetMask);\r\nexport const customizeType = (handle: number, type: Type): number => (handle & ~typeMask) | ((type << 26) & typeMask);\r\n\r\n/**\r\n * @en Vector type uniforms\r\n * @zh 向量类型 uniform\r\n */\r\nexport type MaterialProperty = number | Vec2 | Vec3 | Vec4 | Color | Mat3 | Mat4 | Quat;\r\n\r\nexport const type2reader = {\r\n    [Type.UNKNOWN]: (a: Float32Array, v: number, idx = 0): void => warnID(12010, idx),\r\n    [Type.INT]: (a: Int32Array, v: number, idx = 0): number => a[idx],\r\n    [Type.INT2]: (a: Int32Array, v: IVec2Like, idx = 0): IVec2Like => Vec2.fromArray(v, a, idx),\r\n    [Type.INT3]: (a: Int32Array, v: IVec3Like, idx = 0): IVec3Like => Vec3.fromArray(v, a, idx),\r\n    [Type.INT4]: (a: Int32Array, v: IVec4Like, idx = 0): IVec4Like => Vec4.fromArray(v, a, idx),\r\n    [Type.FLOAT]: (a: Float32Array, v: number, idx = 0): number => a[idx],\r\n    [Type.FLOAT2]: (a: Float32Array, v: IVec2Like, idx = 0): IVec2Like => Vec2.fromArray(v, a, idx),\r\n    [Type.FLOAT3]: (a: Float32Array, v: IVec3Like, idx = 0): IVec3Like => Vec3.fromArray(v, a, idx),\r\n    [Type.FLOAT4]: (a: Float32Array, v: IVec4Like, idx = 0): IVec4Like => Vec4.fromArray(v, a, idx),\r\n    [Type.MAT3]: (a: Float32Array, v: IMat3Like, idx = 0): IMat3Like => Mat3.fromArray(v, a, idx),\r\n    [Type.MAT4]: (a: Float32Array, v: IMat4Like, idx = 0): IMat4Like => Mat4.fromArray(v, a, idx),\r\n};\r\n\r\nexport const type2writer = {\r\n    [Type.UNKNOWN]: (a: Float32Array, v: number, idx = 0): void => warnID(12010, idx),\r\n    [Type.INT]: (a: Int32Array, v: number, idx = 0): number => a[idx] = v,\r\n    [Type.INT2]: (a: Int32Array, v: Vec2, idx = 0): Int32Array => Vec2.toArray(a, v, idx),\r\n    [Type.INT3]: (a: Int32Array, v: Vec3, idx = 0): Int32Array => Vec3.toArray(a, v, idx),\r\n    [Type.INT4]: (a: Int32Array, v: Vec4, idx = 0): Int32Array => Vec4.toArray(a, v, idx),\r\n    [Type.FLOAT]: (a: Float32Array, v: number, idx = 0): number => a[idx] = v,\r\n    [Type.FLOAT2]: (a: Float32Array, v: Vec2, idx = 0): Float32Array => Vec2.toArray(a, v, idx),\r\n    [Type.FLOAT3]: (a: Float32Array, v: Vec3, idx = 0): Float32Array => Vec3.toArray(a, v, idx),\r\n    [Type.FLOAT4]: (a: Float32Array, v: Vec4, idx = 0): Float32Array => Vec4.toArray(a, v, idx),\r\n    [Type.MAT3]: (a: Float32Array, v: Mat3, idx = 0): Float32Array => Mat3.toArray(a, v, idx),\r\n    [Type.MAT4]: (a: Float32Array, v: Mat4, idx = 0): Float32Array => Mat4.toArray(a, v, idx),\r\n};\r\n\r\nexport const type2validator = {\r\n    [Type.INT]: (v: number): boolean => typeof v === 'number',\r\n    [Type.FLOAT]: (v: number): boolean => typeof v === 'number',\r\n    [Type.INT2]: (v: Vec2): boolean => !!(v instanceof Vec2),\r\n    [Type.FLOAT2]: (v: Vec2): boolean => !!(v instanceof Vec2),\r\n    [Type.INT3]: (v: Vec3): boolean => !!(v instanceof Vec3),\r\n    [Type.FLOAT3]: (v: Vec3): boolean => !!(v instanceof Vec3),\r\n    [Type.INT4]: (v: Vec4): boolean => !!(v instanceof Vec4),\r\n    [Type.FLOAT4]: (v: Vec4 | Color | Quat): boolean => !!((v instanceof Vec4) || (v instanceof Color) || (v instanceof Quat)),\r\n    [Type.MAT3]: (v: Mat3): boolean => !!(v instanceof Mat3),\r\n    [Type.MAT4]: (v: Mat4): boolean => !!(v instanceof Mat4),\r\n};\r\n\r\nconst defaultValues = [\r\n    Object.freeze([0]),\r\n    Object.freeze([0, 0]),\r\n    Object.freeze([0, 0, 0, 0]),\r\n    Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),\r\n];\r\n\r\n/**\r\n * @en Gets the default values for the given type of uniform\r\n * @zh 根据指定的 Uniform 类型来获取默认值\r\n * @param type The type of the uniform\r\n */\r\nexport function getDefaultFromType (type: Type): readonly number[] | string {\r\n    switch (type) {\r\n    case Type.BOOL:\r\n    case Type.INT:\r\n    case Type.UINT:\r\n    case Type.FLOAT:\r\n        return defaultValues[0];\r\n    case Type.BOOL2:\r\n    case Type.INT2:\r\n    case Type.UINT2:\r\n    case Type.FLOAT2:\r\n        return defaultValues[1];\r\n    case Type.BOOL4:\r\n    case Type.INT4:\r\n    case Type.UINT4:\r\n    case Type.FLOAT4:\r\n        return defaultValues[2];\r\n    case Type.MAT4:\r\n        return defaultValues[3];\r\n    case Type.SAMPLER2D:\r\n        return 'default-texture';\r\n    case Type.SAMPLER_CUBE:\r\n        return 'default-cube-texture';\r\n    case Type.SAMPLER2D_ARRAY:\r\n        return 'default-array-texture';\r\n    case Type.SAMPLER3D:\r\n        return 'default-3d-texture';\r\n    default:\r\n    }\r\n    return defaultValues[0];\r\n}\r\n\r\nexport function getStringFromType (type: Type) : string {\r\n    switch (type) {\r\n    case Type.SAMPLER2D:\r\n        return '-texture';\r\n    case Type.SAMPLER_CUBE:\r\n        return '-cube-texture';\r\n    case Type.SAMPLER2D_ARRAY:\r\n        return '-array-texture';\r\n    case Type.SAMPLER3D:\r\n        return '-3d-texture';\r\n    default:\r\n        return '-unknown';\r\n    }\r\n}\r\n\r\n/**\r\n * @en Combination of preprocess macros\r\n * @zh 预处理宏组合\r\n */\r\nexport type MacroRecord = Record<string, number | boolean | string>;\r\n\r\n/**\r\n * @en Override the preprocess macros\r\n * @zh 覆写预处理宏\r\n * @param target Target preprocess macros to be overridden\r\n * @param source Preprocess macros used for override\r\n */\r\nexport function overrideMacros (target: MacroRecord, source: MacroRecord): boolean {\r\n    const entries = Object.entries(source);\r\n    let isDifferent = false;\r\n    for (let i = 0; i < entries.length; i++) {\r\n        if (target[entries[i][0]] !== entries[i][1]) {\r\n            target[entries[i][0]] = entries[i][1];\r\n            isDifferent = true;\r\n        }\r\n    }\r\n    return isDifferent;\r\n}\r\n","/****************************************************************************\r\n Copyright (c) 2021-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n****************************************************************************/\r\n\r\nimport { EffectAsset } from '../../asset/assets/effect-asset';\r\nimport { errorID, warnID } from '../../core/platform/debug';\r\nimport { Attribute, GetTypeSize, ShaderInfo, Uniform } from '../../gfx/base/define';\r\nimport { UBOForwardLight, UBOForwardLightEnum, UBOSkinning } from '../../rendering/define';\r\nimport { genHandle, MacroRecord } from './pass-utils';\r\nimport { IProgramInfo } from './program-lib';\r\n\r\nexport interface IMacroInfo {\r\n    name: string;\r\n    value: string;\r\n    isDefault: boolean;\r\n}\r\n\r\nfunction mapDefine (info: EffectAsset.IDefineInfo, def: number | string | boolean): string {\r\n    switch (info.type) {\r\n    case 'boolean': return typeof def === 'number' ? def.toString() : (def ? '1' : '0');\r\n    case 'string': return def !== undefined ? def as string : info.options![0];\r\n    case 'number': return def !== undefined ? def.toString() : info.range![0].toString();\r\n    default:\r\n        warnID(16369);\r\n        return '-1'; // should neven happen\r\n    }\r\n}\r\n\r\nexport function prepareDefines (defs: MacroRecord, tDefs: EffectAsset.IDefineInfo[]): IMacroInfo[] {\r\n    const macros: IMacroInfo[] = [];\r\n    for (let i = 0; i < tDefs.length; i++) {\r\n        const tmpl = tDefs[i];\r\n        const name = tmpl.name;\r\n        const v = defs[name];\r\n        const value = mapDefine(tmpl, v);\r\n        const isDefault = !v || v === '0';\r\n        macros.push({ name, value, isDefault });\r\n    }\r\n    return macros;\r\n}\r\n\r\nexport function getShaderInstanceName (name: string, macros: IMacroInfo[]): string {\r\n    return name + macros.reduce((acc, cur): string => (cur.isDefault ? acc : `${acc}|${cur.name}${cur.value}`), '');\r\n}\r\n\r\nfunction dependencyCheck (dependencies: string[], defines: MacroRecord): boolean {\r\n    for (let i = 0; i < dependencies.length; i++) {\r\n        const d = dependencies[i];\r\n        if (d[0] === '!') { // negative dependency\r\n            if (defines[d.slice(1)]) { return false; }\r\n        } else if (!defines[d]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function getActiveAttributes (tmpl: IProgramInfo, gfxAttributes: Attribute[], defines: MacroRecord): Attribute[] {\r\n    const out: Attribute[] = [];\r\n    const attributes = tmpl.attributes;\r\n    for (let i = 0; i < attributes.length; i++) {\r\n        if (!dependencyCheck(attributes[i].defines, defines)) { continue; }\r\n        out.push(gfxAttributes[i]);\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function getVariantKey (programInfo: IProgramInfo, defines: MacroRecord): string {\r\n    const tmplDefs = programInfo.defines;\r\n    if (programInfo.uber) {\r\n        let key = '';\r\n        for (let i = 0; i < tmplDefs.length; i++) {\r\n            const tmplDef = tmplDefs[i];\r\n            const value = defines[tmplDef.name];\r\n            if (!value || !tmplDef._map) {\r\n                continue;\r\n            }\r\n            const mapped = tmplDef._map(value);\r\n            const offset = tmplDef._offset;\r\n            key += `${offset}${mapped}|`;\r\n        }\r\n        return `${key}${programInfo.hash}`;\r\n    }\r\n    let key = 0;\r\n    for (let i = 0; i < tmplDefs.length; i++) {\r\n        const tmplDef = tmplDefs[i];\r\n        const value = defines[tmplDef.name];\r\n        if (!value || !tmplDef._map) {\r\n            continue;\r\n        }\r\n        const mapped = tmplDef._map(value);\r\n        const offset = tmplDef._offset;\r\n        key |= mapped << offset;\r\n    }\r\n    return `${key.toString(16)}|${programInfo.hash}`;\r\n}\r\n\r\nconst defaultUniformCounts = new Map<string, number>();\r\ndefaultUniformCounts.set('cc_joints', UBOSkinning.LAYOUT.members[0].count);\r\ndefaultUniformCounts.set('cc_lightPos', UBOForwardLightEnum.LIGHTS_PER_PASS);\r\ndefaultUniformCounts.set('cc_lightColor', UBOForwardLightEnum.LIGHTS_PER_PASS);\r\ndefaultUniformCounts.set('cc_lightSizeRangeAngle', UBOForwardLightEnum.LIGHTS_PER_PASS);\r\ndefaultUniformCounts.set('cc_lightDir', UBOForwardLightEnum.LIGHTS_PER_PASS);\r\ndefaultUniformCounts.set('cc_lightBoundingSizeVS', UBOForwardLightEnum.LIGHTS_PER_PASS);\r\n\r\nfunction getUniformSize (prevSize: number, m: Uniform): number {\r\n    if (m.count) {\r\n        return prevSize + GetTypeSize(m.type) * m.count;\r\n    } else {\r\n        const count = defaultUniformCounts.get(m.name);\r\n        if (count !== undefined) {\r\n            return prevSize + GetTypeSize(m.type) * count;\r\n        }\r\n        errorID(16345, m.name);\r\n    }\r\n    return prevSize;\r\n}\r\n\r\nexport function getSize (blockMembers: Uniform[]): number {\r\n    return blockMembers.reduce(getUniformSize, 0);\r\n}\r\n\r\nexport function genHandles (tmpl: EffectAsset.IShaderInfo | ShaderInfo): Record<string, number> {\r\n    const handleMap: Record<string, number> = {};\r\n    // block member handles\r\n    for (let i = 0; i < tmpl.blocks.length; i++) {\r\n        const block = tmpl.blocks[i];\r\n        const members = block.members;\r\n        let offset = 0;\r\n        for (let j = 0; j < members.length; j++) {\r\n            const uniform = members[j];\r\n            handleMap[uniform.name] = genHandle(block.binding, uniform.type, uniform.count, offset);\r\n            offset += (GetTypeSize(uniform.type) >> 2) * uniform.count; // assumes no implicit padding, which is guaranteed by effect compiler\r\n        }\r\n    }\r\n    // samplerTexture handles\r\n    for (let i = 0; i < tmpl.samplerTextures.length; i++) {\r\n        const samplerTexture = tmpl.samplerTextures[i];\r\n        handleMap[samplerTexture.name] = genHandle(samplerTexture.binding, samplerTexture.type, samplerTexture.count);\r\n    }\r\n    return handleMap;\r\n}\r\n\r\nfunction getBitCount (cnt: number): number {\r\n    return Math.ceil(Math.log2(Math.max(cnt, 2)));\r\n}\r\n\r\nexport function populateMacros (tmpl: IProgramInfo): void {\r\n    // calculate option mask offset\r\n    let offset = 0;\r\n    for (let i = 0; i < tmpl.defines.length; i++) {\r\n        const def = tmpl.defines[i];\r\n        let cnt = 1;\r\n        if (def.type === 'number') {\r\n            const range = def.range!;\r\n            cnt = getBitCount(range[1] - range[0] + 1); // inclusive on both ends\r\n            def._map = (value: number): number => value - range[0];\r\n        } else if (def.type === 'string') {\r\n            cnt = getBitCount(def.options!.length);\r\n            def._map = (value: any): number => Math.max(0, def.options!.findIndex((s): boolean => s === value));\r\n        } else if (def.type === 'boolean') {\r\n            def._map = (value: any): number => (value ? 1 : 0);\r\n        }\r\n        def._offset = offset;\r\n        offset += cnt;\r\n    }\r\n    if (offset > 31) { tmpl.uber = true; }\r\n    // generate constant macros\r\n    tmpl.constantMacros = '';\r\n    for (const key in tmpl.builtins.statistics) {\r\n        tmpl.constantMacros += `#define ${key} ${tmpl.builtins.statistics[key]}\\n`;\r\n    }\r\n}\r\n\r\nexport function getCombinationDefines (combination: EffectAsset.IPreCompileInfo): Record<string, string | number | boolean>[] {\r\n    const defines = Object.keys(combination).reduce((out, name): Record<string, string | number | boolean>[] => out.reduce((acc, cur): Record<string, string | number | boolean>[] => {\r\n        const choices = combination[name];\r\n        for (let i = 0; i < choices.length; ++i) {\r\n            const defines = { ...cur };\r\n            defines[name] = choices[i];\r\n            acc.push(defines);\r\n        }\r\n        return acc;\r\n    }, [] as MacroRecord[]), [{}] as MacroRecord[]);\r\n    return defines;\r\n}\r\n\r\nexport function addEffectDefaultProperties (effect: EffectAsset): void {\r\n    for (let i = 0; i < effect.techniques.length; i++) {\r\n        const tech = effect.techniques[i];\r\n        for (let j = 0; j < tech.passes.length; j++) {\r\n            const pass = tech.passes[j];\r\n            // grab default property declaration if there is none\r\n            if (pass.propertyIndex !== undefined && pass.properties === undefined) {\r\n                pass.properties = tech.passes[pass.propertyIndex].properties;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport * as env from 'internal:constants';\r\nimport { EffectAsset } from '../../asset/assets/effect-asset';\r\nimport { SetIndex, IDescriptorSetLayoutInfo, globalDescriptorSetLayout, localDescriptorSetLayout } from '../../rendering/define';\r\nimport { PipelineRuntime } from '../../rendering/custom/pipeline';\r\nimport { MacroRecord } from './pass-utils';\r\nimport {\r\n    PipelineLayoutInfo, Device, Attribute, UniformBlock, ShaderInfo,\r\n    Uniform, ShaderStage, DESCRIPTOR_SAMPLER_TYPE, DESCRIPTOR_BUFFER_TYPE,\r\n    DescriptorSetLayout, DescriptorSetLayoutBinding, DescriptorSetLayoutInfo,\r\n    DescriptorType, ShaderStageFlagBit, API, UniformSamplerTexture, PipelineLayout,\r\n    Shader, UniformStorageBuffer, UniformStorageImage, UniformSampler, UniformTexture, UniformInputAttachment,\r\n} from '../../gfx';\r\nimport { genHandles, getActiveAttributes, getShaderInstanceName, getSize,\r\n    getVariantKey, IMacroInfo, populateMacros, prepareDefines } from './program-utils';\r\nimport { debug, cclegacy, errorID, warnID } from '../../core';\r\n\r\nconst _dsLayoutInfo = new DescriptorSetLayoutInfo();\r\n\r\nexport interface IDefineRecord extends EffectAsset.IDefineInfo {\r\n    _map: (value: any) => number;\r\n    _offset: number;\r\n}\r\n\r\nexport interface ITemplateInfo {\r\n    gfxAttributes: Attribute[];\r\n    shaderInfo: ShaderInfo;\r\n    blockSizes: number[];\r\n    setLayouts: DescriptorSetLayout[];\r\n    pipelineLayout: PipelineLayout;\r\n    handleMap: Record<string, number>;\r\n    bindings: DescriptorSetLayoutBinding[];\r\n    samplerStartBinding: number;\r\n}\r\n\r\nexport interface IProgramInfo extends EffectAsset.IShaderInfo {\r\n    effectName: string;\r\n    defines: IDefineRecord[];\r\n    constantMacros: string;\r\n    uber: boolean; // macro number exceeds default limits, will fallback to string hash\r\n}\r\n\r\nfunction insertBuiltinBindings (\r\n    tmpl: IProgramInfo,\r\n    tmplInfo: ITemplateInfo,\r\n    source: IDescriptorSetLayoutInfo,\r\n    type: 'locals' | 'globals',\r\n    outBindings?: DescriptorSetLayoutBinding[],\r\n): void {\r\n    const target = tmpl.builtins[type];\r\n    const tempBlocks: UniformBlock[] = [];\r\n    for (let i = 0; i < target.blocks.length; i++) {\r\n        const b = target.blocks[i];\r\n        const info = source.layouts[b.name] as UniformBlock | undefined;\r\n        const binding = info && source.bindings.find((bd): boolean => bd.binding === info.binding);\r\n        if (!info || !binding || !(binding.descriptorType & DESCRIPTOR_BUFFER_TYPE)) {\r\n            warnID(16348, b.name);\r\n            continue;\r\n        }\r\n        tempBlocks.push(info);\r\n        if (outBindings && !outBindings.includes(binding)) outBindings.push(binding);\r\n    }\r\n    Array.prototype.unshift.apply(tmplInfo.shaderInfo.blocks, tempBlocks);\r\n    const tempSamplerTextures: UniformSamplerTexture[] = [];\r\n    for (let i = 0; i < target.samplerTextures.length; i++) {\r\n        const s = target.samplerTextures[i];\r\n        const info = source.layouts[s.name] as UniformSamplerTexture;\r\n        const binding = info && source.bindings.find((bd): boolean => bd.binding === info.binding);\r\n        if (!info || !binding || !(binding.descriptorType & DESCRIPTOR_SAMPLER_TYPE)) {\r\n            warnID(16349, s.name);\r\n            continue;\r\n        }\r\n        tempSamplerTextures.push(info);\r\n        if (outBindings && !outBindings.includes(binding)) outBindings.push(binding);\r\n    }\r\n    Array.prototype.unshift.apply(tmplInfo.shaderInfo.samplerTextures, tempSamplerTextures);\r\n    if (outBindings) outBindings.sort((a, b): number => a.binding - b.binding);\r\n}\r\n\r\n// find those location which won't be affected by defines, and replace by ascending order of existing slot if location > 15\r\nfunction findDefineIndependent (source: string, tmpl: IProgramInfo, attrMap: Map<string, number>, locSet: Set<number>): string {\r\n    const locExistingRegStr = `layout\\\\(location = (\\\\d+)\\\\)\\\\s+in.*?\\\\s(\\\\w+)[;,\\\\)]`;\r\n    const locExistingReg = new RegExp(locExistingRegStr, 'g');\r\n    let locExistingRes = locExistingReg.exec(source);\r\n    let code = source;\r\n    // layout(location = 3) in mediump vec3 v_normal;\r\n    // 3\r\n    // v_normal\r\n    while (locExistingRes) {\r\n        const attrName = locExistingRes[2];\r\n        const attrInfo = tmpl.attributes.find((ele): boolean => ele.name === attrName);\r\n        // no define required.\r\n        const preExisted = attrInfo?.defines.length === 0 || attrInfo?.defines.every((ele): boolean => ele === '');\r\n        if (preExisted) {\r\n            let loc = parseInt(locExistingRes[1]);\r\n            if (loc > 15) {\r\n                // fill hole by ascending order if location > 15\r\n                let n = 0;\r\n                while (locSet.has(n)) {\r\n                    n++;\r\n                }\r\n                loc = n;\r\n                // flatten location index\r\n                const locDefStr = locExistingRes[0].replace(locExistingRes[1], `${loc}`);\r\n                code = source.replace(locExistingRes[0], locDefStr);\r\n            }\r\n            locSet.add(loc);\r\n            attrMap.set(locExistingRes[2], loc);\r\n        }\r\n        locExistingRes = locExistingReg.exec(source);\r\n    }\r\n    return code;\r\n}\r\n\r\n// replace those which could be affected by defines\r\nfunction replaceVertexMutableLocation (\r\n    source: string,\r\n    tmpl: IProgramInfo,\r\n    macroInfo: IMacroInfo[],\r\n    inOrOut: string,\r\n    attrMap: Map<string, number>,\r\n    locSet: Set<number> = new Set<number>(),\r\n): string {\r\n    const locHolderRegStr = `layout\\\\(location = ([^\\\\)]+)\\\\)\\\\s+${inOrOut}.*?\\\\s(\\\\w+)[;,\\\\)]`;\r\n    const locHolderReg = new RegExp(locHolderRegStr, 'g');\r\n\r\n    let code = source;\r\n    // layout(location = 3) in mediump vec3 v_normal;\r\n    // 3\r\n    // v_normal\r\n    let locHolder = locHolderReg.exec(source);\r\n    while (locHolder) {\r\n        const attrName = locHolder[2];\r\n        if (!attrMap.has(attrName)) {\r\n            const attrInfo = tmpl.attributes.find((ele): boolean => ele.name === attrName);\r\n            let active = true;\r\n            let location = 0;\r\n            // only vertexshader input is checked\r\n            if (inOrOut === 'in') {\r\n                const targetStr = source.slice(0, locHolder.index);\r\n                // attrInfo?.defines store defines need to be satisfied\r\n                // macroInfo stores value of defines\r\n                // '!CC_USE_XXX' starts with a '!' is inverse condition.\r\n                // all defines satisfied?\r\n                active = !!attrInfo?.defines.every((defStrIn): boolean => {\r\n                    const inverseCond = defStrIn.startsWith('!');\r\n                    const defStr = inverseCond ? defStrIn.slice(1) : defStrIn;\r\n                    const v = macroInfo.find((ele): boolean => ele.name === defStr);\r\n                    let res = !!v;\r\n                    if (v) {\r\n                        res = !(v.value === '0' || v.value === 'false' || v.value === 'FALSE');\r\n                    }\r\n                    res = inverseCond ? !res : res;\r\n                    if (res) {\r\n                        // #if CC_RENDER_MODE == xx ......\r\n                        // 'CC_RENDER_MODE == 1' or ' CC_RENDER_MODE == 1 ||  CC_RENDER_MODE == 4'\r\n                        const lastIfRegStr = `[\\\\n|\\\\s]+#(?:if|elif)(.*?${defStr}.*?(?:(?!#if|#elif).)*)[\\\\n|\\\\s]+$`;\r\n                        const lastIfReg = new RegExp(lastIfRegStr, 'g');\r\n                        const lastIfRes = lastIfReg.exec(targetStr);\r\n                        if (lastIfRes) {\r\n                            const evalStr = lastIfRes[1];\r\n                            const evalORElements = evalStr.split('||');\r\n                            // simple grammar, no parenthesses support yet.\r\n                            const evalRes = evalORElements.some((eleOrTestStr): boolean => {\r\n                                const evalANDElements = eleOrTestStr.split('&&');\r\n                                return evalANDElements.every((eleAndTestStr): boolean => {\r\n                                    let evalEleRes = true;\r\n                                    if (eleAndTestStr.includes('==')) {\r\n                                        const opVars = eleAndTestStr.split('==');\r\n                                        if ((opVars[0] as any).replaceAll(' ', '') === defStr) {\r\n                                            evalEleRes = (opVars[1] as any).replaceAll(' ', '') === v!.value;\r\n                                        }\r\n                                    } else if (eleAndTestStr.includes('!=')) {\r\n                                        const opVars = eleAndTestStr.split('!=');\r\n                                        if ((opVars[0] as any).replaceAll(' ', '') === defStr) {\r\n                                            evalEleRes = (opVars[1] as any).replaceAll(' ', '') !== v!.value;\r\n                                        }\r\n                                    } else {\r\n                                        // no compare just define or not\r\n                                        // expect to be true\r\n                                    }\r\n                                    return evalEleRes;\r\n                                });\r\n                            });\r\n                            res = res && evalRes;\r\n                        }\r\n                    }\r\n                    return res;\r\n                });\r\n            }\r\n\r\n            // those didn't pass the check above are deactive, ignore\r\n            if (active) {\r\n                while (locSet.has(location)) {\r\n                    location++;\r\n                }\r\n                locSet.add(location);\r\n                // const attrInfo = tmpl.attributes.find((ele) => ele.name === attrName);\r\n                if (attrInfo) {\r\n                    attrInfo.location = location;\r\n                }\r\n\r\n                attrMap.set(attrName, location);\r\n            }\r\n\r\n            const locInstStr = locHolder[0].replace(locHolder[1], `${location}`);\r\n            code = code.replace(locHolder[0], locInstStr);\r\n        }\r\n        locHolder = locHolderReg.exec(source);\r\n    }\r\n    return code;\r\n}\r\n\r\nfunction replaceFragmentLocation (\r\n    source: string,\r\n    inOrOut: string,\r\n    attrMap: Map<string, number>,\r\n): string {\r\n    let code = source;\r\n    const locHolderRegStr = `layout\\\\(location = ([^\\\\)]+)\\\\)\\\\s+${inOrOut}.*?\\\\s(\\\\w+)[;,\\\\)]`;\r\n    const locHolderReg = new RegExp(locHolderRegStr, 'g');\r\n\r\n    // layout(location = 3) in mediump vec3 v_normal;\r\n    // 3\r\n    // v_normal\r\n    let locHolder = locHolderReg.exec(source);\r\n    while (locHolder) {\r\n        const attrName = locHolder[2];\r\n        if (!attrMap.has(attrName)) {\r\n            let location = 0;\r\n\r\n            if (inOrOut === 'in') {\r\n                // {...fragment_in} === {...vertex_out}\r\n                location = attrMap.get(attrName) || 0;\r\n\r\n                const locInstStr = locHolder[0].replace(locHolder[1], `${location}`);\r\n                code = code.replace(locHolder[0], locInstStr);\r\n            }\r\n        }\r\n        locHolder = locHolderReg.exec(source);\r\n    }\r\n    return code;\r\n}\r\n\r\n// eslint-disable-next-line max-len\r\nexport function flattenShaderLocation (\r\n    source: string,\r\n    tmpl: IProgramInfo,\r\n    macroInfo: IMacroInfo[],\r\n    shaderStage,\r\n    attrMap: Map<string, number>,\r\n): string {\r\n    let code = source;\r\n    if (shaderStage === 'vert') {\r\n        const locSet = new Set<number>();\r\n        code = findDefineIndependent(source, tmpl, attrMap, locSet);\r\n        code = replaceVertexMutableLocation(code, tmpl, macroInfo, 'in', attrMap, locSet);\r\n\r\n        code = replaceVertexMutableLocation(code, tmpl, macroInfo, 'out', attrMap);\r\n    } else if (shaderStage === 'frag') {\r\n        code = replaceFragmentLocation(code, 'in', attrMap);\r\n    } else {\r\n        // error\r\n    }\r\n\r\n    return code;\r\n}\r\n\r\nfunction processShaderInfo (\r\n    tmpl: IProgramInfo,\r\n    macroInfo: IMacroInfo[],\r\n    shaderInfo: ShaderInfo,\r\n): void {\r\n    // during configuring vertex state when make a pipelinestate\r\n    // webgpu request max location of vertex attribute should not be greater than 15\r\n    // shader source comes from offline effect-compiler can't have sense what macro is activate\r\n    // so here we flatten attribute location in runtime\r\n    const attrMap = new Map<string, number>();\r\n\r\n    shaderInfo.stages[0].source = flattenShaderLocation(shaderInfo.stages[0].source, tmpl, macroInfo, 'vert', attrMap);\r\n    shaderInfo.stages[1].source = flattenShaderLocation(shaderInfo.stages[1].source, tmpl, macroInfo, 'frag', attrMap);\r\n    // don't forget to change location 'shaderInfo.attributes' which comes from serialization\r\n    // to keep consistency with shader source\r\n    for (let i = 0; i < shaderInfo.attributes.length; ++i) {\r\n        const name = shaderInfo.attributes[i].name;\r\n        let loc = 0;\r\n        if (attrMap.has(name)) {\r\n            loc = attrMap.get(name)!;\r\n            shaderInfo.attributes[i].location = loc;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en The global maintainer of all shader resources.\r\n * @zh 维护 shader 资源实例的全局管理器。\r\n */\r\nexport class ProgramLib {\r\n    protected _templates: Record<string, IProgramInfo> = {}; // per shader\r\n    protected _cache: Record<string, Shader> = {};\r\n    protected _templateInfos: Record<number, ITemplateInfo> = {};\r\n\r\n    public register (effect: EffectAsset): void {\r\n        for (let i = 0; i < effect.shaders.length; i++) {\r\n            const tmpl = this.define(effect.shaders[i]);\r\n            tmpl.effectName = effect.name;\r\n        }\r\n        for (let i = 0; i < effect.techniques.length; i++) {\r\n            const tech = effect.techniques[i];\r\n            for (let j = 0; j < tech.passes.length; j++) {\r\n                const pass = tech.passes[j];\r\n                // grab default property declaration if there is none\r\n                if (pass.propertyIndex !== undefined && pass.properties === undefined) {\r\n                    pass.properties = tech.passes[pass.propertyIndex].properties;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Register the shader template with the given info\r\n     * @zh 注册 shader 模板。\r\n     */\r\n    public define (shader: EffectAsset.IShaderInfo): IProgramInfo {\r\n        const curTmpl = this._templates[shader.name];\r\n        if (curTmpl && curTmpl.hash === shader.hash) { return curTmpl; }\r\n        const tmpl = ({ ...shader }) as IProgramInfo;\r\n\r\n        // update defines and constant macros\r\n        populateMacros(tmpl);\r\n\r\n        // store it\r\n        this._templates[shader.name] = tmpl;\r\n        if (!this._templateInfos[tmpl.hash]) {\r\n            const tmplInfo = {} as ITemplateInfo;\r\n            // cache material-specific descriptor set layout\r\n            tmplInfo.samplerStartBinding = tmpl.blocks.length;\r\n            tmplInfo.shaderInfo = new ShaderInfo();\r\n            tmplInfo.blockSizes = []; tmplInfo.bindings = [];\r\n            for (let i = 0; i < tmpl.blocks.length; i++) {\r\n                const block = tmpl.blocks[i];\r\n                tmplInfo.blockSizes.push(getSize(block.members));\r\n                tmplInfo.bindings.push(new DescriptorSetLayoutBinding(\r\n                    block.binding,\r\n                    DescriptorType.UNIFORM_BUFFER,\r\n                    1,\r\n                    block.stageFlags,\r\n                ));\r\n                tmplInfo.shaderInfo.blocks.push(new UniformBlock(\r\n                    SetIndex.MATERIAL,\r\n                    block.binding,\r\n                    block.name,\r\n                    block.members.map((m): Uniform => new Uniform(m.name, m.type, m.count)),\r\n                    1,\r\n                )); // effect compiler guarantees block count = 1\r\n            }\r\n            for (let i = 0; i < tmpl.samplerTextures.length; i++) {\r\n                const samplerTexture = tmpl.samplerTextures[i];\r\n                tmplInfo.bindings.push(new DescriptorSetLayoutBinding(\r\n                    samplerTexture.binding,\r\n                    DescriptorType.SAMPLER_TEXTURE,\r\n                    samplerTexture.count,\r\n                    samplerTexture.stageFlags,\r\n                ));\r\n                tmplInfo.shaderInfo.samplerTextures.push(new UniformSamplerTexture(SetIndex.MATERIAL, samplerTexture.binding, samplerTexture.name, samplerTexture.type, samplerTexture.count));\r\n            }\r\n            for (let i = 0; i < tmpl.samplers.length; i++) {\r\n                const sampler = tmpl.samplers[i];\r\n                tmplInfo.bindings.push(new DescriptorSetLayoutBinding(\r\n                    sampler.binding,\r\n                    DescriptorType.SAMPLER,\r\n                    sampler.count,\r\n                    sampler.stageFlags,\r\n                ));\r\n                tmplInfo.shaderInfo.samplers.push(new UniformSampler(SetIndex.MATERIAL, sampler.binding, sampler.name, sampler.count));\r\n            }\r\n            for (let i = 0; i < tmpl.textures.length; i++) {\r\n                const texture = tmpl.textures[i];\r\n                tmplInfo.bindings.push(new DescriptorSetLayoutBinding(\r\n                    texture.binding,\r\n                    DescriptorType.TEXTURE,\r\n                    texture.count,\r\n                    texture.stageFlags,\r\n                ));\r\n                tmplInfo.shaderInfo.textures.push(new UniformTexture(SetIndex.MATERIAL, texture.binding, texture.name, texture.type, texture.count));\r\n            }\r\n            for (let i = 0; i < tmpl.buffers.length; i++) {\r\n                const buffer = tmpl.buffers[i];\r\n                tmplInfo.bindings.push(new DescriptorSetLayoutBinding(\r\n                    buffer.binding,\r\n                    DescriptorType.STORAGE_BUFFER,\r\n                    1,\r\n                    buffer.stageFlags,\r\n                ));\r\n                tmplInfo.shaderInfo.buffers.push(new UniformStorageBuffer(SetIndex.MATERIAL, buffer.binding, buffer.name, 1, buffer.memoryAccess)); // effect compiler guarantees buffer count = 1\r\n            }\r\n            for (let i = 0; i < tmpl.images.length; i++) {\r\n                const image = tmpl.images[i];\r\n                tmplInfo.bindings.push(new DescriptorSetLayoutBinding(\r\n                    image.binding,\r\n                    DescriptorType.STORAGE_IMAGE,\r\n                    image.count,\r\n                    image.stageFlags,\r\n                ));\r\n                tmplInfo.shaderInfo.images.push(new UniformStorageImage(SetIndex.MATERIAL, image.binding, image.name, image.type, image.count, image.memoryAccess));\r\n            }\r\n            for (let i = 0; i < tmpl.subpassInputs.length; i++) {\r\n                const subpassInput = tmpl.subpassInputs[i];\r\n                tmplInfo.bindings.push(new DescriptorSetLayoutBinding(\r\n                    subpassInput.binding,\r\n                    DescriptorType.INPUT_ATTACHMENT,\r\n                    subpassInput.count,\r\n                    subpassInput.stageFlags,\r\n                ));\r\n                tmplInfo.shaderInfo.subpassInputs.push(new UniformInputAttachment(SetIndex.MATERIAL, subpassInput.binding, subpassInput.name, subpassInput.count));\r\n            }\r\n            tmplInfo.gfxAttributes = [];\r\n            for (let i = 0; i < tmpl.attributes.length; i++) {\r\n                const attr = tmpl.attributes[i];\r\n                tmplInfo.gfxAttributes.push(new Attribute(attr.name, attr.format, attr.isNormalized, 0, attr.isInstanced, attr.location));\r\n            }\r\n            insertBuiltinBindings(tmpl, tmplInfo, localDescriptorSetLayout, 'locals');\r\n\r\n            tmplInfo.shaderInfo.stages.push(new ShaderStage(ShaderStageFlagBit.VERTEX, ''));\r\n            tmplInfo.shaderInfo.stages.push(new ShaderStage(ShaderStageFlagBit.FRAGMENT, ''));\r\n            tmplInfo.handleMap = genHandles(tmpl);\r\n            tmplInfo.setLayouts = [];\r\n\r\n            this._templateInfos[tmpl.hash] = tmplInfo;\r\n        }\r\n\r\n        return tmpl;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the shader template with its name\r\n     * @zh 通过名字获取 Shader 模板\r\n     * @param name Target shader name\r\n     */\r\n    public getTemplate (name: string): IProgramInfo {\r\n        return this._templates[name];\r\n    }\r\n\r\n    /**\r\n     * @en Gets the shader template info with its name\r\n     * @zh 通过名字获取 Shader 模版信息\r\n     * @param name Target shader name\r\n     */\r\n    public getTemplateInfo (name: string): ITemplateInfo {\r\n        const hash = this._templates[name].hash;\r\n        return this._templateInfos[hash];\r\n    }\r\n\r\n    /**\r\n     * @en Gets the pipeline layout of the shader template given its name\r\n     * @zh 通过名字获取 Shader 模板相关联的管线布局\r\n     * @param name Target shader name\r\n     */\r\n    public getDescriptorSetLayout (device: Device, name: string, isLocal = false): DescriptorSetLayout {\r\n        const tmpl = this._templates[name];\r\n        const tmplInfo = this._templateInfos[tmpl.hash];\r\n        if (!tmplInfo.setLayouts.length) {\r\n            _dsLayoutInfo.bindings = tmplInfo.bindings;\r\n            tmplInfo.setLayouts[SetIndex.MATERIAL] = device.createDescriptorSetLayout(_dsLayoutInfo);\r\n            _dsLayoutInfo.bindings = localDescriptorSetLayout.bindings;\r\n            tmplInfo.setLayouts[SetIndex.LOCAL] = device.createDescriptorSetLayout(_dsLayoutInfo);\r\n        }\r\n        return tmplInfo.setLayouts[isLocal ? SetIndex.LOCAL : SetIndex.MATERIAL];\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Does this library has the specified program\r\n     * @zh\r\n     * 当前是否有已注册的指定名字的 shader\r\n     * @param name Target shader name\r\n     */\r\n    public hasProgram (name: string): boolean {\r\n        return this._templates[name] !== undefined;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the shader key with the name and a macro combination\r\n     * @zh 根据 shader 名和预处理宏列表获取 shader key。\r\n     * @param name Target shader name\r\n     * @param defines The combination of preprocess macros\r\n     */\r\n    public getKey (name: string, defines: MacroRecord): string {\r\n        const tmpl = this._templates[name];\r\n        return getVariantKey(tmpl, defines);\r\n    }\r\n\r\n    /**\r\n     * @en Destroy all shader instance match the preprocess macros\r\n     * @zh 销毁所有完全满足指定预处理宏特征的 shader 实例。\r\n     * @param defines The preprocess macros as filter\r\n     */\r\n    public destroyShaderByDefines (defines: MacroRecord): void {\r\n        const names = Object.keys(defines); if (!names.length) { return; }\r\n        const regexes = names.map((cur): RegExp => {\r\n            let val = defines[cur];\r\n            if (typeof val === 'boolean') { val = val ? '1' : '0'; }\r\n            return new RegExp(`${cur}${val}`);\r\n        });\r\n        const keys = Object.keys(this._cache).filter((k): boolean => regexes.every((re): boolean => re.test(this._cache[k].name)));\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const k = keys[i];\r\n            const prog = this._cache[k];\r\n            debug(`destroyed shader ${prog.name}`);\r\n            prog.destroy();\r\n            delete this._cache[k];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets the shader resource instance with given information\r\n     * @zh 获取指定 shader 的渲染资源实例\r\n     * @param name Shader name\r\n     * @param defines Preprocess macros\r\n     * @param pipeline The [[RenderPipeline]] which owns the render command\r\n     * @param key The shader cache key, if already known\r\n     */\r\n    public getGFXShader (device: Device, name: string, defines: MacroRecord, pipeline: PipelineRuntime, key?: string): Shader {\r\n        Object.assign(defines, pipeline.macros);\r\n        if (!key) key = this.getKey(name, defines);\r\n        const res = this._cache[key];\r\n        if (res) { return res; }\r\n\r\n        const tmpl = this._templates[name];\r\n        const tmplInfo = this._templateInfos[tmpl.hash];\r\n        if (!tmplInfo.pipelineLayout) {\r\n            this.getDescriptorSetLayout(device, name); // ensure set layouts have been created\r\n            insertBuiltinBindings(tmpl, tmplInfo, globalDescriptorSetLayout, 'globals');\r\n            tmplInfo.setLayouts[SetIndex.GLOBAL] = pipeline.descriptorSetLayout;\r\n            tmplInfo.pipelineLayout = device.createPipelineLayout(new PipelineLayoutInfo(tmplInfo.setLayouts));\r\n        }\r\n\r\n        const macroArray = prepareDefines(defines, tmpl.defines);\r\n        const prefix = pipeline.constantMacros + tmpl.constantMacros\r\n            + macroArray.reduce((acc, cur): string => `${acc}#define ${cur.name} ${cur.value}\\n`, '');\r\n\r\n        let src = tmpl.glsl3;\r\n        const deviceShaderVersion = getDeviceShaderVersion(device);\r\n        if (deviceShaderVersion) {\r\n            src = tmpl[deviceShaderVersion];\r\n        } else {\r\n            errorID(16346);\r\n        }\r\n        tmplInfo.shaderInfo.stages[0].source = prefix + src.vert;\r\n        tmplInfo.shaderInfo.stages[1].source = prefix + src.frag;\r\n\r\n        // strip out the active attributes only, instancing depend on this\r\n        tmplInfo.shaderInfo.attributes = getActiveAttributes(tmpl, tmplInfo.gfxAttributes, defines);\r\n\r\n        tmplInfo.shaderInfo.name = getShaderInstanceName(name, macroArray);\r\n\r\n        let shaderInfo = tmplInfo.shaderInfo;\r\n        if (env.WEBGPU) {\r\n            // keep 'tmplInfo.shaderInfo' originally\r\n            shaderInfo = new ShaderInfo();\r\n            shaderInfo.copy(tmplInfo.shaderInfo);\r\n            processShaderInfo(tmpl, macroArray, shaderInfo);\r\n        }\r\n\r\n        return this._cache[key] = device.createShader(shaderInfo);\r\n    }\r\n}\r\n\r\nexport function getDeviceShaderVersion (device: Device): string {\r\n    switch (device.gfxAPI) {\r\n    case API.GLES2:\r\n    case API.WEBGL: return 'glsl1';\r\n    case API.GLES3:\r\n    case API.WEBGL2: return 'glsl3';\r\n    default: return 'glsl4';\r\n    }\r\n}\r\n\r\nexport const programLib = new ProgramLib();\r\ncclegacy.programLib = programLib;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG, EDITOR } from 'internal:constants';\r\nimport { Root } from '../../root';\r\nimport { TextureBase } from '../../asset/assets/texture-base';\r\nimport { builtinResMgr } from '../../asset/asset-manager/builtin-res-mgr';\r\nimport { getPhaseID } from '../../rendering/pass-phase';\r\nimport { murmurhash2_32_gc, errorID, assertID, cclegacy, warnID } from '../../core';\r\nimport {\r\n    BufferUsageBit, DynamicStateFlagBit, DynamicStateFlags, Feature, GetTypeSize, MemoryUsageBit, PrimitiveMode, Type, Color,\r\n    BlendState, BlendTarget, Buffer, BufferInfo, BufferViewInfo, DepthStencilState, DescriptorSet,\r\n    DescriptorSetInfo, DescriptorSetLayout, Device, RasterizerState, Sampler, Texture, Shader, PipelineLayout, deviceManager, UniformBlock,\r\n} from '../../gfx';\r\nimport { EffectAsset } from '../../asset/assets/effect-asset';\r\nimport { IProgramInfo, programLib } from './program-lib';\r\nimport {\r\n    MacroRecord, MaterialProperty, customizeType, getBindingFromHandle, getDefaultFromType, getStringFromType,\r\n    getOffsetFromHandle, getTypeFromHandle, type2reader, type2writer, getCountFromHandle, type2validator,\r\n} from './pass-utils';\r\nimport { RenderPassStage, RenderPriority, SetIndex } from '../../rendering/define';\r\nimport { InstancedBuffer } from '../../rendering/instanced-buffer';\r\nimport { ProgramLibrary } from '../../rendering/custom/private';\r\n\r\nexport interface IPassInfoFull extends EffectAsset.IPassInfo {\r\n    // generated part\r\n    passIndex: number;\r\n    defines: MacroRecord;\r\n    stateOverrides?: PassOverrides;\r\n}\r\nexport type PassOverrides = RecursivePartial<EffectAsset.IPassStates>;\r\n\r\nexport interface IMacroPatch {\r\n    name: string;\r\n    value: boolean | number | string;\r\n}\r\n\r\ninterface IPassDynamics {\r\n    [type: number]: {\r\n        dirty: boolean;\r\n        value: number;\r\n    };\r\n}\r\n\r\nconst _bufferInfo = new BufferInfo(\r\n    BufferUsageBit.UNIFORM | BufferUsageBit.TRANSFER_DST,\r\n    MemoryUsageBit.DEVICE,\r\n);\r\n\r\nconst _bufferViewInfo = new BufferViewInfo(null!);\r\n\r\nconst _dsInfo = new DescriptorSetInfo(null!);\r\n\r\nconst _materialSet = 1;\r\n\r\nexport enum BatchingSchemes {\r\n    NONE = 0,\r\n    INSTANCING = 1,\r\n}\r\n\r\nexport declare namespace Pass {\r\n    export type getTypeFromHandle = typeof Pass.getTypeFromHandle;\r\n    export type getBindingFromHandle = typeof Pass.getBindingFromHandle;\r\n    export type fillPipelineInfo = typeof Pass.fillPipelineInfo;\r\n    export type getPassHash = typeof Pass.getPassHash;\r\n    export type getCountFromHandle = typeof Pass.getCountFromHandle;\r\n}\r\n\r\n/**\r\n * @en Render pass, store actual resources for the rendering process\r\n * @zh 渲染 pass，储存实际描述绘制过程的各项资源。\r\n */\r\nexport class Pass {\r\n    /**\r\n     * @en Get the type of member in uniform buffer object with the handle\r\n     * @zh 根据 handle 获取 uniform 的具体类型。\r\n     */\r\n    public static getTypeFromHandle = getTypeFromHandle;\r\n\r\n    /**\r\n     * @en Get the binding with handle\r\n     * @zh 根据 handle 获取 binding。\r\n     */\r\n    public static getBindingFromHandle = getBindingFromHandle;\r\n\r\n    /**\r\n     * @en Get the array length with handle\r\n     * @zh 根据 handle 获取数组长度。\r\n     */\r\n    public static getCountFromHandle = getCountFromHandle;\r\n\r\n    protected static getOffsetFromHandle = getOffsetFromHandle;\r\n\r\n    /**\r\n     * @en Fill a pass represented by the given pass handle with the given override info\r\n     * @param hPass The pass handle point to the pass\r\n     * @param info The pass override info\r\n     */\r\n    public static fillPipelineInfo (pass: Pass, info: PassOverrides): void {\r\n        if (info.priority !== undefined) { pass._priority = info.priority; }\r\n        if (info.primitive !== undefined) { pass._primitive = info.primitive; }\r\n        if (info.stage !== undefined) { pass._stage = info.stage; }\r\n        if (info.dynamicStates !== undefined) { pass._dynamicStates = info.dynamicStates; }\r\n        if (info.phase !== undefined) {\r\n            pass._phase = getPhaseID(info.phase);\r\n        }\r\n\r\n        const bs = pass._bs;\r\n        if (info.blendState) {\r\n            const bsInfo = info.blendState;\r\n            const { targets } = bsInfo;\r\n            if (targets) {\r\n                targets.forEach((t, i): void => {\r\n                    bs.setTarget(i, t as BlendTarget);\r\n                });\r\n            }\r\n\r\n            if (bsInfo.isA2C !== undefined) { bs.isA2C = bsInfo.isA2C; }\r\n            if (bsInfo.isIndepend !== undefined) { bs.isIndepend = bsInfo.isIndepend; }\r\n            if (bsInfo.blendColor !== undefined) { bs.blendColor = bsInfo.blendColor as Color; }\r\n        }\r\n        pass._rs.assign(info.rasterizerState as RasterizerState);\r\n        pass._dss.assign(info.depthStencilState as DepthStencilState);\r\n    }\r\n\r\n    /**\r\n     * @en Get pass hash value by [[renderer.Pass]] hash information.\r\n     * @zh 根据 [[renderer.Pass]] 的哈希信息获取哈希值。\r\n     *\r\n     * @param hPass Handle of the pass info used to compute hash value.\r\n     */\r\n    public static getPassHash (pass: Pass): number {\r\n        let shaderKey = '';\r\n        if (cclegacy.rendering && cclegacy.rendering.enableEffectImport) {\r\n            const key = (cclegacy.rendering.programLib as ProgramLibrary)\r\n                .getKey(pass._phaseID, pass.program, pass.defines);\r\n            shaderKey = `${pass._phaseID.toString()},${key}`;\r\n        } else {\r\n            shaderKey = programLib.getKey(pass.program, pass.defines);\r\n        }\r\n        let res = `${shaderKey},${pass._primitive},${pass._dynamicStates}`;\r\n        res += serializeBlendState(pass._bs);\r\n        res += serializeDepthStencilState(pass._dss);\r\n        res += serializeRasterizerState(pass._rs);\r\n\r\n        return murmurhash2_32_gc(res, 666);\r\n    }\r\n\r\n    // internal resources\r\n    protected _rootBuffer: Buffer | null = null;\r\n    protected _buffers: Buffer[] = [];\r\n    protected _descriptorSet: DescriptorSet = null!;\r\n    protected _pipelineLayout: PipelineLayout = null!;\r\n    // internal data\r\n    protected _passIndex = 0;\r\n    protected _propertyIndex = 0;\r\n    protected _programName = '';\r\n    protected _dynamics: IPassDynamics = {};\r\n    protected _propertyHandleMap: Record<string, number> = {};\r\n    protected _rootBlock: ArrayBuffer | null = null;\r\n    protected _blocksInt: Int32Array[] = [];\r\n    protected _blocks: Float32Array[] = [];\r\n    protected _shaderInfo: IProgramInfo = null!;\r\n    protected _defines: MacroRecord = {};\r\n    protected _properties: Record<string, EffectAsset.IPropertyInfo> = {};\r\n    protected _shader: Shader | null = null;\r\n    protected _bs: BlendState = new BlendState();\r\n    protected _dss: DepthStencilState = new DepthStencilState();\r\n    protected _rs: RasterizerState = new RasterizerState();\r\n    protected _priority: RenderPriority = RenderPriority.DEFAULT;\r\n    protected _stage: RenderPassStage = RenderPassStage.DEFAULT;\r\n    protected _phase = getPhaseID('default');\r\n    protected _passID = 0xFFFFFFFF;\r\n    protected _subpassID = 0xFFFFFFFF;\r\n    protected _phaseID = 0xFFFFFFFF;\r\n    protected _primitive: PrimitiveMode = PrimitiveMode.TRIANGLE_LIST;\r\n    protected _batchingScheme: BatchingSchemes = BatchingSchemes.NONE;\r\n    protected _dynamicStates: DynamicStateFlagBit = DynamicStateFlagBit.NONE;\r\n    protected _instancedBuffers: Record<number, InstancedBuffer> = {};\r\n    protected _hash = 0;\r\n    // external references\r\n    protected declare _root: Root;\r\n    protected declare _device: Device;\r\n    protected _rootBufferDirty = false;\r\n\r\n    constructor (root: Root) {\r\n        this._root = root;\r\n        this._device = deviceManager.gfxDevice;\r\n    }\r\n\r\n    /**\r\n     * @en Initialize the pass with given pass info, shader will be compiled in the init process\r\n     * @zh 根据指定参数初始化当前 pass，shader 会在这一阶段就尝试编译。\r\n     */\r\n    public initialize (info: IPassInfoFull): void {\r\n        this._doInit(info);\r\n        this.resetUBOs();\r\n        this.resetTextures();\r\n        this.tryCompile();\r\n    }\r\n\r\n    /**\r\n     * @en Get the handle of a UBO member, or specific channels of it.\r\n     * @zh 获取指定 UBO 成员，或其更具体分量的读写句柄。默认以成员自身的类型为目标读写类型（即读写时必须传入与成员类型相同的变量）。\r\n     * @param name Name of the target UBO member.\r\n     * @param offset Channel offset into the member.\r\n     * @param targetType Target type of the handle, i.e. the type of data when read/write to it.\r\n     * @example\r\n     * ```\r\n     * import { Vec3, gfx } from 'cc';\r\n     * // say 'pbrParams' is a uniform vec4\r\n     * const hParams = pass.getHandle('pbrParams'); // get the default handle\r\n     * pass.setUniform(hAlbedo, new Vec3(1, 0, 0)); // wrong! pbrParams.w is NaN now\r\n     *\r\n     * // say 'albedoScale' is a uniform vec4, and we only want to modify the w component in the form of a single float\r\n     * const hThreshold = pass.getHandle('albedoScale', 3, gfx.Type.FLOAT);\r\n     * pass.setUniform(hThreshold, 0.5); // now, albedoScale.w = 0.5\r\n     * ```\r\n     */\r\n    public getHandle (name: string, offset = 0, targetType = Type.UNKNOWN): number {\r\n        let handle = this._propertyHandleMap[name]; if (!handle) { return 0; }\r\n        if (targetType) {\r\n            handle = customizeType(handle, targetType);\r\n        } else if (offset) {\r\n            handle = customizeType(handle, getTypeFromHandle(handle) - offset);\r\n        }\r\n        return handle + offset;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the uniform binding with its name\r\n     * @zh 获取指定 uniform 的 binding。\r\n     * @param name The name of target uniform\r\n     */\r\n    public getBinding (name: string): number {\r\n        const handle = this.getHandle(name);\r\n        if (!handle) { return -1; }\r\n        return getBindingFromHandle(handle);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a vector type uniform value, if a uniform requires frequent update, please use this method.\r\n     * @zh 设置指定普通向量类 uniform 的值，如果需要频繁更新请尽量使用此接口。\r\n     * @param handle The handle for the target uniform\r\n     * @param value New value\r\n     */\r\n    public setUniform (handle: number, value: MaterialProperty): void {\r\n        const binding = getBindingFromHandle(handle);\r\n        const type = getTypeFromHandle(handle);\r\n        const ofs = getOffsetFromHandle(handle);\r\n        const block = this._getBlockView(type, binding);\r\n        if (DEBUG) {\r\n            const validator = type2validator[type];\r\n            assertID(Boolean(validator && validator(value)), 12011, binding, Type[type]);\r\n        }\r\n        type2writer[type](block, value, ofs);\r\n        this._rootBufferDirty = true;\r\n    }\r\n\r\n    /**\r\n     * @en Gets a uniform's value.\r\n     * @zh 获取指定普通向量类 uniform 的值。\r\n     * @param handle The handle for the target uniform\r\n     * @param out The output property to store the result\r\n     */\r\n    public getUniform<T extends MaterialProperty> (handle: number, out: T): T {\r\n        const binding = getBindingFromHandle(handle);\r\n        const type = getTypeFromHandle(handle);\r\n        const ofs = getOffsetFromHandle(handle);\r\n        const block = this._getBlockView(type, binding);\r\n        return type2reader[type](block, out, ofs) as T;\r\n    }\r\n\r\n    /**\r\n     * @en Sets an array type uniform value, if a uniform requires frequent update, please use this method.\r\n     * @zh 设置指定数组类 uniform 的值，如果需要频繁更新请尽量使用此接口。\r\n     * @param handle The handle for the target uniform\r\n     * @param value New value\r\n     */\r\n    public setUniformArray (handle: number, value: MaterialProperty[]): void {\r\n        const binding = getBindingFromHandle(handle);\r\n        const type = getTypeFromHandle(handle);\r\n        const stride = GetTypeSize(type) >> 2;\r\n        const block = this._getBlockView(type, binding);\r\n        let ofs = getOffsetFromHandle(handle);\r\n        for (let i = 0; i < value.length; i++, ofs += stride) {\r\n            if (value[i] === null) { continue; }\r\n            type2writer[type](block, value[i], ofs);\r\n        }\r\n        this._rootBufferDirty = true;\r\n    }\r\n\r\n    /**\r\n     * @en Bind a GFX [[gfx.Texture]] the given uniform binding\r\n     * @zh 绑定实际 GFX [[gfx.Texture]] 到指定 binding。\r\n     * @param binding The binding for target uniform of texture type\r\n     * @param value Target texture\r\n     */\r\n    public bindTexture (binding: number, value: Texture, index?: number): void {\r\n        this._descriptorSet.bindTexture(binding, value, index || 0);\r\n    }\r\n\r\n    /**\r\n     * @en Bind a GFX [[gfx.Sampler]] the given uniform binding\r\n     * @zh 绑定实际 GFX [[gfx.Sampler]] 到指定 binding。\r\n     * @param binding The binding for target uniform of sampler type\r\n     * @param value Target sampler\r\n     */\r\n    public bindSampler (binding: number, value: Sampler, index?: number): void {\r\n        this._descriptorSet.bindSampler(binding, value, index || 0);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the dynamic pipeline state property at runtime\r\n     * @zh 设置运行时 pass 内可动态更新的管线状态属性。\r\n     * @param state Target dynamic state\r\n     * @param value Target value\r\n     */\r\n    public setDynamicState (state: DynamicStateFlagBit, value: number): void {\r\n        const ds = this._dynamics[state];\r\n        if (ds && ds.value === value) { return; }\r\n        ds.value = value; ds.dirty = true;\r\n    }\r\n\r\n    /**\r\n     * @en Override all pipeline states with the given pass override info.\r\n     * @zh 重载当前所有管线状态。\r\n     * @param original The original pass info\r\n     * @param value The override pipeline state info\r\n     */\r\n    public overridePipelineStates (original: EffectAsset.IPassInfo, overrides: PassOverrides): void {\r\n        warnID(12102);\r\n    }\r\n\r\n    /**\r\n     * @en Update the current uniforms data.\r\n     * @zh 更新当前 Uniform 数据。\r\n     */\r\n    public update (): void {\r\n        if (!this._descriptorSet) {\r\n            errorID(12006);\r\n            return;\r\n        }\r\n\r\n        if (this._rootBuffer && this._rootBufferDirty) {\r\n            this._rootBuffer.update(this._rootBlock!);\r\n            this._rootBufferDirty = false;\r\n        }\r\n        this._descriptorSet.update();\r\n    }\r\n\r\n    public getInstancedBuffer (extraKey = 0): InstancedBuffer {\r\n        return this._instancedBuffers[extraKey] || (this._instancedBuffers[extraKey] = new InstancedBuffer(this));\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the current pass.\r\n     * @zh 销毁当前 pass。\r\n     */\r\n    public destroy (): void {\r\n        for (let i = 0; i < this._shaderInfo.blocks.length; i++) {\r\n            const u = this._shaderInfo.blocks[i];\r\n            this._buffers[u.binding].destroy();\r\n        }\r\n        this._buffers = [];\r\n\r\n        if (this._rootBuffer) {\r\n            this._rootBuffer.destroy();\r\n            this._rootBuffer = null;\r\n        }\r\n\r\n        for (const ib in this._instancedBuffers) {\r\n            this._instancedBuffers[ib].destroy();\r\n        }\r\n\r\n        this._descriptorSet.destroy();\r\n        this._rs.destroy();\r\n        this._dss.destroy();\r\n        this._bs.destroy();\r\n    }\r\n\r\n    /**\r\n     * @en Resets the value of the given uniform by name to the default value in [[EffectAsset]].\r\n     * This method does not support array type uniform.\r\n     * @zh 重置指定（非数组） Uniform 为 [[EffectAsset]] 默认值。\r\n     */\r\n    public resetUniform (name: string): void {\r\n        const handle = this.getHandle(name);\r\n        if (!handle) { return; }\r\n        const type = getTypeFromHandle(handle);\r\n        const binding = getBindingFromHandle(handle);\r\n        const ofs = getOffsetFromHandle(handle);\r\n        const count = getCountFromHandle(handle);\r\n        const block = this._getBlockView(type, binding);\r\n        const info = this._properties[name];\r\n        const givenDefault = info && info.value;\r\n        const value = (givenDefault || getDefaultFromType(type)) as number[];\r\n        const size = (GetTypeSize(type) >> 2) * count;\r\n        for (let k = 0; k + value.length <= size; k += value.length) { block.set(value, ofs + k); }\r\n        this._rootBufferDirty = true;\r\n    }\r\n\r\n    /**\r\n     * @en Resets the value of the given texture by name to the default value in [[EffectAsset]].\r\n     * @zh 重置指定贴图为 [[EffectAsset]] 默认值。\r\n     */\r\n    public resetTexture (name: string, index?: number): void {\r\n        const handle = this.getHandle(name);\r\n        if (!handle) { return; }\r\n        const type = getTypeFromHandle(handle);\r\n        const binding = getBindingFromHandle(handle);\r\n        const info = this._properties[name];\r\n        const value = info && info.value;\r\n        let textureBase: TextureBase;\r\n        if (typeof value === 'string') {\r\n            textureBase = builtinResMgr.get<TextureBase>(`${value}${getStringFromType(type)}`);\r\n        } else {\r\n            textureBase = value as TextureBase || builtinResMgr.get<TextureBase>(getDefaultFromType(type) as string);\r\n        }\r\n        const texture = textureBase && textureBase.getGFXTexture()!;\r\n        const samplerInfo = info && info.samplerHash !== undefined\r\n            ? Sampler.unpackFromHash(info.samplerHash) : textureBase && textureBase.getSamplerInfo();\r\n        const sampler = this._device.getSampler(samplerInfo);\r\n        this._descriptorSet.bindSampler(binding, sampler, index || 0);\r\n        this._descriptorSet.bindTexture(binding, texture, index || 0);\r\n    }\r\n\r\n    /**\r\n     * @en Resets all uniform buffer objects to the default values in [[EffectAsset]]\r\n     * @zh 重置所有 UBO 为默认值。\r\n     */\r\n    public resetUBOs (): void {\r\n        for (let i = 0; i < this._shaderInfo.blocks.length; i++) {\r\n            const u = this._shaderInfo.blocks[i];\r\n            let ofs = 0;\r\n            for (let j = 0; j < u.members.length; j++) {\r\n                const cur = u.members[j];\r\n                const block = this._getBlockView(cur.type, u.binding);\r\n                const info = this._properties[cur.name];\r\n                const givenDefault = info && info.value;\r\n                const value = (givenDefault || getDefaultFromType(cur.type)) as number[];\r\n                const size = (GetTypeSize(cur.type) >> 2) * cur.count;\r\n                for (let k = 0; k + value.length <= size; k += value.length) { block.set(value, ofs + k); }\r\n                ofs += size;\r\n            }\r\n        }\r\n        this._rootBufferDirty = true;\r\n    }\r\n\r\n    /**\r\n     * @en Resets all textures and samplers to the default values in [[EffectAsset]]\r\n     * @zh 重置所有 texture 和 sampler 为初始默认值。\r\n     */\r\n    public resetTextures (): void {\r\n        if (cclegacy.rendering) {\r\n            const set = this._shaderInfo.descriptors[SetIndex.MATERIAL];\r\n            set.samplerTextures.forEach((combined) => {\r\n                for (let j = 0; j < combined.count; ++j) {\r\n                    this.resetTexture(combined.name, j);\r\n                }\r\n            });\r\n        } else {\r\n            for (let i = 0; i < this._shaderInfo.samplerTextures.length; i++) {\r\n                const u = this._shaderInfo.samplerTextures[i];\r\n                for (let j = 0; j < u.count; j++) {\r\n                    this.resetTexture(u.name, j);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Try to compile the shader and retrieve related resources references.\r\n     * @zh 尝试编译 shader 并获取相关资源引用。\r\n     */\r\n    public tryCompile (): boolean {\r\n        const { pipeline } = this._root;\r\n        if (!pipeline) {\r\n            return false;\r\n        }\r\n        this._syncBatchingScheme();\r\n\r\n        if (cclegacy.rendering && cclegacy.rendering.enableEffectImport) {\r\n            const programLib = cclegacy.rendering.programLib as ProgramLibrary;\r\n            const program = programLib.getProgramVariant(\r\n                this._device,\r\n                this._phaseID,\r\n                this._programName,\r\n                this._defines,\r\n            );\r\n            if (!program) {\r\n                warnID(12103, this._programName);\r\n                return false;\r\n            }\r\n            this._shader = program.shader;\r\n            this._pipelineLayout = programLib.getPipelineLayout(this.device, this._phaseID, this._programName);\r\n        } else {\r\n            const shader = programLib.getGFXShader(this._device, this._programName, this._defines, pipeline);\r\n            if (!shader) {\r\n                warnID(12104, this._programName);\r\n                return false;\r\n            }\r\n            this._shader = shader;\r\n            this._pipelineLayout = programLib.getTemplateInfo(this._programName).pipelineLayout;\r\n        }\r\n\r\n        this._hash = Pass.getPassHash(this);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the shader variant of the current pass and given macro patches\r\n     * @zh 结合指定的编译宏组合获取当前 Pass 的 Shader Variant\r\n     * @param patches The macro patches\r\n     */\r\n    public getShaderVariant (patches: Readonly<IMacroPatch[] | null> = null): Shader | null {\r\n        if (!this._shader && !this.tryCompile()) {\r\n            warnID(12105);\r\n            return null;\r\n        }\r\n\r\n        if (!patches) {\r\n            return this._shader;\r\n        }\r\n\r\n        if (EDITOR) {\r\n            for (let i = 0; i < patches.length; i++) {\r\n                if (!patches[i].name.startsWith('CC_')) {\r\n                    warnID(12106);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        const { pipeline } = this._root;\r\n        for (let i = 0; i < patches.length; i++) {\r\n            const patch = patches[i];\r\n            this._defines[patch.name] = patch.value;\r\n        }\r\n\r\n        if (this._isBlend) {\r\n            this._defines.CC_IS_TRANSPARENCY_PASS = 1;\r\n        }\r\n\r\n        let shader: Shader | null = null;\r\n        if (cclegacy.rendering && cclegacy.rendering.enableEffectImport) {\r\n            const program = (cclegacy.rendering.programLib as ProgramLibrary)\r\n                .getProgramVariant(this._device, this._phaseID, this._programName, this._defines);\r\n            if (program) {\r\n                shader = program.shader;\r\n            }\r\n        } else {\r\n            shader = programLib.getGFXShader(this._device, this._programName, this._defines, pipeline);\r\n        }\r\n\r\n        for (let i = 0; i < patches.length; i++) {\r\n            const patch = patches[i];\r\n            delete this._defines[patch.name];\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    protected get _isBlend (): boolean {\r\n        return this.blendState.targets.some((target) => target.blend);\r\n    }\r\n\r\n    // internal use\r\n    /**\r\n     * @private\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public beginChangeStatesSilently (): void {}\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public endChangeStatesSilently (): void {}\r\n\r\n    protected _doInit (info: IPassInfoFull, copyDefines = false): void {\r\n        this._priority = RenderPriority.DEFAULT;\r\n        this._stage = RenderPassStage.DEFAULT;\r\n        const enableEffectImport: boolean = cclegacy.rendering?.enableEffectImport;\r\n        if (enableEffectImport) {\r\n            const r = cclegacy.rendering;\r\n            if (typeof info.phase === 'number') {\r\n                this._passID = (info as Pass)._passID;\r\n                this._subpassID = (info as Pass)._subpassID;\r\n                this._phaseID = (info as Pass)._phaseID;\r\n            } else {\r\n                this._passID = r.getPassID(info.pass);\r\n                if (this._passID !== r.INVALID_ID) {\r\n                    if (info.subpass) {\r\n                        this._subpassID = r.getSubpassID(this._passID, info.subpass);\r\n                        this._phaseID = r.getPhaseID(this._subpassID, info.phase);\r\n                    } else {\r\n                        this._phaseID = r.getPhaseID(this._passID, info.phase);\r\n                    }\r\n                }\r\n            }\r\n            if (this._passID === r.INVALID_ID) {\r\n                errorID(12107, info.program);\r\n                return;\r\n            }\r\n            if (this._phaseID === r.INVALID_ID) {\r\n                errorID(12108, info.program);\r\n                return;\r\n            }\r\n        } else  {\r\n            // Here we are in legacy-pipeline\r\n            // eslint-disable-next-line no-lonely-if\r\n            if (typeof info.phase === 'number') {\r\n                this._passID = (info as Pass)._passID;\r\n            } else if (info.pass && info.pass !== 'default') {\r\n                // In legacy pipeline, user might select invalid material,\r\n                // whose pass name is not 'default'.\r\n                // We should filter these passes.\r\n                // Here we set _passID to 0, if pass is not 'default'.\r\n                assertID(this._passID === 0xFFFFFFFF, 12110);\r\n                this._passID = 0;\r\n            }\r\n        }\r\n        this._phase = getPhaseID('default');\r\n        this._primitive = PrimitiveMode.TRIANGLE_LIST;\r\n\r\n        this._passIndex = info.passIndex;\r\n        this._propertyIndex = info.propertyIndex !== undefined ? info.propertyIndex : info.passIndex;\r\n        this._programName = info.program;\r\n        this._defines = copyDefines ? ({ ...info.defines }) : info.defines;\r\n        if (enableEffectImport) {\r\n            this._shaderInfo = (cclegacy.rendering.programLib as ProgramLibrary)\r\n                .getProgramInfo(this._phaseID, this._programName);\r\n        } else {\r\n            this._shaderInfo = programLib.getTemplate(info.program);\r\n        }\r\n        this._properties = info.properties || this._properties;\r\n\r\n        // init gfx\r\n        const device = this._device;\r\n        Pass.fillPipelineInfo(this, info);\r\n        if (info.stateOverrides) { Pass.fillPipelineInfo(this, info.stateOverrides); }\r\n\r\n        // init descriptor set\r\n        if (enableEffectImport) {\r\n            _dsInfo.layout = (cclegacy.rendering.programLib as ProgramLibrary)\r\n                .getMaterialDescriptorSetLayout(this._device, this._phaseID, info.program);\r\n        } else {\r\n            _dsInfo.layout = programLib.getDescriptorSetLayout(this._device, info.program);\r\n        }\r\n        this._descriptorSet = this._device.createDescriptorSet(_dsInfo);\r\n\r\n        // calculate total size required\r\n        const blocks = this._shaderInfo.blocks;\r\n        let blockSizes: number[];\r\n        let handleMap: Record<string, number>;\r\n        if (enableEffectImport) {\r\n            const programLib = (cclegacy.rendering.programLib as ProgramLibrary);\r\n            blockSizes = programLib.getBlockSizes(this._phaseID, this._programName);\r\n            handleMap = programLib.getHandleMap(this._phaseID, this._programName);\r\n        } else {\r\n            const tmplInfo = programLib.getTemplateInfo(info.program);\r\n            blockSizes = tmplInfo.blockSizes;\r\n            handleMap = tmplInfo.handleMap;\r\n        }\r\n\r\n        // build uniform blocks\r\n        if (enableEffectImport) {\r\n            const programLib = (cclegacy.rendering.programLib as ProgramLibrary);\r\n            const shaderInfo = programLib.getShaderInfo(this._phaseID, this.program);\r\n            this._buildMaterialUniformBlocks(device, shaderInfo.blocks, blockSizes);\r\n        } else {\r\n            this._buildUniformBlocks(device, blocks, blockSizes);\r\n        }\r\n\r\n        // store handles\r\n        const directHandleMap = this._propertyHandleMap = handleMap;\r\n        const indirectHandleMap: Record<string, number> = {};\r\n        for (const name in this._properties) {\r\n            const prop = this._properties[name];\r\n            if (!prop.handleInfo) { continue; }\r\n            indirectHandleMap[name] = this.getHandle.apply(this, prop.handleInfo)!;\r\n        }\r\n        Object.assign(directHandleMap, indirectHandleMap);\r\n    }\r\n\r\n    private _buildUniformBlocks (device: Device, blocks: EffectAsset.IBlockInfo[], blockSizes: number[]): void {\r\n        const alignment = device.capabilities.uboOffsetAlignment;\r\n        const startOffsets: number[] = [];\r\n        let lastSize = 0; let lastOffset = 0;\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const size = blockSizes[i];\r\n            startOffsets.push(lastOffset);\r\n            lastOffset += Math.ceil(size / alignment) * alignment;\r\n            lastSize = size;\r\n        }\r\n        // create gfx buffer resource\r\n        // lastSize is aligned to 16, the same as _bufferViewInfo.range.\r\n        const totalSize = startOffsets[startOffsets.length - 1] + Math.ceil(lastSize / 16) * 16;\r\n        if (totalSize) {\r\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=988988\r\n            _bufferInfo.size = Math.ceil(totalSize / 16) * 16;\r\n            this._rootBuffer = device.createBuffer(_bufferInfo);\r\n            this._rootBlock = new ArrayBuffer(totalSize);\r\n        }\r\n        // create buffer views\r\n        for (let i = 0, count = 0; i < blocks.length; i++) {\r\n            const { binding } = blocks[i];\r\n            const size = blockSizes[i];\r\n            _bufferViewInfo.buffer = this._rootBuffer!;\r\n            _bufferViewInfo.offset = startOffsets[count++];\r\n            _bufferViewInfo.range = Math.ceil(size / 16) * 16;\r\n            const bufferView = this._buffers[binding] = device.createBuffer(_bufferViewInfo);\r\n            // non-builtin UBO data pools, note that the effect compiler\r\n            // guarantees these bindings to be consecutive, starting from 0 and non-array-typed\r\n            this._blocks[binding] = new Float32Array(\r\n                this._rootBlock!,\r\n                _bufferViewInfo.offset,\r\n                size / Float32Array.BYTES_PER_ELEMENT,\r\n            );\r\n            this._blocksInt[binding] = new Int32Array(this._blocks[binding].buffer, this._blocks[binding].byteOffset, this._blocks[binding].length);\r\n            this._descriptorSet.bindBuffer(binding, bufferView);\r\n        }\r\n    }\r\n\r\n    private _buildMaterialUniformBlocks (device: Device, blocks: UniformBlock[], blockSizes: number[]): void {\r\n        const alignment = device.capabilities.uboOffsetAlignment;\r\n        const startOffsets: number[] = [];\r\n        let lastSize = 0; let lastOffset = 0;\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i];\r\n            if (block.set !== _materialSet) {\r\n                continue;\r\n            }\r\n            const size = blockSizes[i];\r\n            startOffsets.push(lastOffset);\r\n            lastOffset += Math.ceil(size / alignment) * alignment;\r\n            lastSize = size;\r\n        }\r\n        // create gfx buffer resource\r\n        if (lastSize !== 0) {\r\n            const totalSize = startOffsets[startOffsets.length - 1] + lastSize;\r\n            if (totalSize) {\r\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=988988\r\n                _bufferInfo.size = Math.ceil(totalSize / 16) * 16;\r\n                this._rootBuffer = device.createBuffer(_bufferInfo);\r\n                this._rootBlock = new ArrayBuffer(totalSize);\r\n            }\r\n        }\r\n        // create buffer views\r\n        for (let i = 0, count = 0; i < blocks.length; i++) {\r\n            const block = blocks[i];\r\n            if (block.set !== _materialSet) {\r\n                continue;\r\n            }\r\n            const { binding } = blocks[i];\r\n            const size = blockSizes[i];\r\n            _bufferViewInfo.buffer = this._rootBuffer!;\r\n            _bufferViewInfo.offset = startOffsets[count++];\r\n            _bufferViewInfo.range = Math.ceil(size / 16) * 16;\r\n            const bufferView = this._buffers[binding] = device.createBuffer(_bufferViewInfo);\r\n            // non-builtin UBO data pools, note that the effect compiler\r\n            // guarantees these bindings to be consecutive, starting from 0 and non-array-typed\r\n            this._blocks[binding] = new Float32Array(\r\n                this._rootBlock!,\r\n                _bufferViewInfo.offset,\r\n                size / Float32Array.BYTES_PER_ELEMENT,\r\n            );\r\n            this._blocksInt[binding] = new Int32Array(this._blocks[binding].buffer, this._blocks[binding].byteOffset, this._blocks[binding].length);\r\n            this._descriptorSet.bindBuffer(binding, bufferView);\r\n        }\r\n    }\r\n\r\n    protected _syncBatchingScheme (): void {\r\n        if (this._defines.USE_INSTANCING) {\r\n            if (this._device.hasFeature(Feature.INSTANCED_ARRAYS)) {\r\n                this._batchingScheme = BatchingSchemes.INSTANCING;\r\n            } else {\r\n                this._defines.USE_INSTANCING = false;\r\n                this._batchingScheme = BatchingSchemes.NONE;\r\n            }\r\n        } else {\r\n            this._batchingScheme = BatchingSchemes.NONE;\r\n        }\r\n    }\r\n\r\n    private _getBlockView (type: Type, binding: number): Int32Array | Float32Array {\r\n        return type < Type.FLOAT ? this._blocksInt[binding] : this._blocks[binding];\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     * Only for UI\r\n     */\r\n    public _initPassFromTarget (target: Pass, dss: DepthStencilState, hashFactor: number): void {\r\n        this._priority = target.priority;\r\n        this._stage = target.stage;\r\n        this._phase = target.phase;\r\n        this._phaseID = target._phaseID;\r\n        this._passID = target._passID;\r\n        this._batchingScheme = target.batchingScheme;\r\n        this._primitive = target.primitive;\r\n        this._dynamicStates = target.dynamicStates;\r\n        this._bs = target.blendState;\r\n        this._dss = dss;\r\n        this._descriptorSet = target.descriptorSet;\r\n        this._rs = target.rasterizerState;\r\n        this._passIndex = target.passIndex;\r\n        this._propertyIndex = target.propertyIndex;\r\n        this._programName = target.program;\r\n        this._defines = target.defines;\r\n        this._shaderInfo = target._shaderInfo;\r\n        this._properties = target._properties;\r\n\r\n        this._blocks = target._blocks;\r\n        this._blocksInt = target._blocksInt;\r\n        this._dynamics = target._dynamics;\r\n\r\n        this._shader = target._shader;\r\n\r\n        if (cclegacy.rendering && cclegacy.rendering.enableEffectImport) {\r\n            this._pipelineLayout = (cclegacy.rendering.programLib as ProgramLibrary)\r\n                .getPipelineLayout(this.device, this._phaseID, this._programName);\r\n        } else {\r\n            this._pipelineLayout = programLib.getTemplateInfo(this._programName).pipelineLayout;\r\n        }\r\n        this._hash = target._hash ^ hashFactor;\r\n    }\r\n\r\n    // Only for UI\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _updatePassHash (): void {\r\n        this._hash = Pass.getPassHash(this);\r\n    }\r\n\r\n    // infos\r\n    get root (): Root { return this._root; }\r\n    get device (): Device { return this._device; }\r\n    get shaderInfo (): IProgramInfo { return this._shaderInfo; }\r\n    get localSetLayout (): DescriptorSetLayout {\r\n        if (cclegacy.rendering && cclegacy.rendering.enableEffectImport) {\r\n            return (cclegacy.rendering.programLib as ProgramLibrary)\r\n                .getLocalDescriptorSetLayout(this._device, this._phaseID, this._programName);\r\n        } else {\r\n            return programLib.getDescriptorSetLayout(this._device, this._programName, true);\r\n        }\r\n    }\r\n    get program (): string { return this._programName; }\r\n    get properties (): Record<string, EffectAsset.IPropertyInfo> { return this._properties; }\r\n    get defines (): Record<string, string | number | boolean> { return this._defines; }\r\n    get passIndex (): number { return this._passIndex; }\r\n    get propertyIndex (): number { return this._propertyIndex; }\r\n    // data\r\n    get dynamics (): IPassDynamics { return this._dynamics; }\r\n    get blocks (): Float32Array[] { return this._blocks; }\r\n    get blocksInt (): Int32Array[] { return this._blocksInt; }\r\n    get rootBufferDirty (): boolean { return this._rootBufferDirty; }\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     * Currently, can not just mark setter as engine internal, so change to a function.\r\n     */\r\n    setRootBufferDirty (val: boolean): void { this._rootBufferDirty = val; }\r\n    // states\r\n    get priority (): RenderPriority { return this._priority; }\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     * Currently, can not just mark setter as engine internal, so change to a function.\r\n     */\r\n    setPriority (val: RenderPriority): void { this._priority = val; }\r\n    get primitive (): PrimitiveMode { return this._primitive; }\r\n    get stage (): RenderPassStage { return this._stage; }\r\n    get phase (): number { return this._phase; }\r\n    get passID (): number { return this._passID; }\r\n    get phaseID (): number { return this._phaseID; }\r\n    get rasterizerState (): RasterizerState { return this._rs; }\r\n    get depthStencilState (): DepthStencilState { return this._dss; }\r\n    get blendState (): BlendState { return this._bs; }\r\n    get dynamicStates (): DynamicStateFlags { return this._dynamicStates; }\r\n    get batchingScheme (): BatchingSchemes { return this._batchingScheme; }\r\n    get descriptorSet (): DescriptorSet { return this._descriptorSet; }\r\n    get hash (): number { return this._hash; }\r\n    get pipelineLayout (): PipelineLayout { return this._pipelineLayout; }\r\n}\r\n\r\nfunction serializeBlendState (bs: BlendState): string {\r\n    let res = `,bs,${bs.isA2C}`;\r\n    bs.targets.forEach((t) => {\r\n        res += `,bt,${t.blend},${t.blendEq},${t.blendAlphaEq},${t.blendColorMask}`;\r\n        res += `,${t.blendSrc},${t.blendDst},${t.blendSrcAlpha},${t.blendDstAlpha}`;\r\n    });\r\n    return res;\r\n}\r\n\r\nfunction serializeRasterizerState (rs: RasterizerState): string {\r\n    return `,rs,${rs.cullMode},${rs.depthBias},${rs.isFrontFaceCCW}`;\r\n}\r\n\r\nfunction serializeDepthStencilState (dss: DepthStencilState): string {\r\n    let res = `,dss,${dss.depthTest},${dss.depthWrite},${dss.depthFunc}`;\r\n    res += `,${dss.stencilTestFront},${dss.stencilFuncFront},${dss.stencilRefFront},${dss.stencilReadMaskFront}`;\r\n    res += `,${dss.stencilFailOpFront},${dss.stencilZFailOpFront},${dss.stencilPassOpFront},${dss.stencilWriteMaskFront}`;\r\n    res += `,${dss.stencilTestBack},${dss.stencilFuncBack},${dss.stencilRefBack},${dss.stencilReadMaskBack}`;\r\n    res += `,${dss.stencilFailOpBack},${dss.stencilZFailOpBack},${dss.stencilPassOpBack},${dss.stencilWriteMaskBack}`;\r\n    return res;\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, editable, editorOnly } from 'cc.decorator';\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { Root } from '../../root';\r\nimport { BlendState, DepthStencilState, RasterizerState,\r\n    DynamicStateFlags, PrimitiveMode, ShaderStageFlags, Type, Uniform, MemoryAccess, Format, deviceManager, ShaderInfo, Shader,\r\n    SampleType } from '../../gfx';\r\nimport { RenderPassStage } from '../../rendering/define';\r\nimport { MacroRecord } from '../../render-scene/core/pass-utils';\r\nimport { programLib } from '../../render-scene/core/program-lib';\r\nimport { Asset } from './asset';\r\nimport { cclegacy, warnID } from '../../core';\r\nimport { ProgramLibrary } from '../../rendering/custom/private';\r\nimport { addEffectDefaultProperties, getCombinationDefines } from '../../render-scene/core/program-utils';\r\nimport { TextureBase } from './texture-base';\r\n\r\nexport declare namespace EffectAsset {\r\n    export interface IPropertyInfo {\r\n        type: number; // auto-extracted from shader\r\n        handleInfo?: [string, number, number]; // auto-generated from 'target'\r\n        samplerHash?: number; // auto-generated from 'sampler'\r\n        value?: number[] | string | TextureBase; // default value\r\n        linear?: boolean; // whether to convert the input to linear space first before applying\r\n    }\r\n    // Pass instance itself are compliant to IPassStates too\r\n    export interface IPassStates {\r\n        priority?: number;\r\n        primitive?: PrimitiveMode;\r\n        stage?: RenderPassStage;\r\n        rasterizerState?: RasterizerState;\r\n        depthStencilState?: DepthStencilState;\r\n        blendState?: BlendState;\r\n        dynamicStates?: DynamicStateFlags;\r\n        phase?: string | number;\r\n        pass?: string;\r\n        subpass?: string;\r\n    }\r\n    export interface IPassInfo extends IPassStates {\r\n        program: string; // auto-generated from 'vert' and 'frag'\r\n        embeddedMacros?: MacroRecord;\r\n        propertyIndex?: number;\r\n        switch?: string;\r\n        properties?: Record<string, IPropertyInfo>;\r\n        shader?: IShaderInfo;\r\n    }\r\n    export interface ITechniqueInfo {\r\n        passes: IPassInfo[];\r\n        name?: string;\r\n    }\r\n\r\n    export interface IBlockInfo {\r\n        binding: number;\r\n        name: string;\r\n        members: Uniform[];\r\n        stageFlags: ShaderStageFlags;\r\n    }\r\n    export interface ISamplerTextureInfo {\r\n        binding: number;\r\n        name: string;\r\n        type: Type;\r\n        count: number;\r\n        stageFlags: ShaderStageFlags;\r\n        sampleType: SampleType;\r\n    }\r\n    export interface ISamplerInfo {\r\n        set: number;\r\n        binding: number;\r\n        name: string;\r\n        count: number;\r\n        stageFlags: ShaderStageFlags;\r\n    }\r\n    export interface ITextureInfo {\r\n        set: number;\r\n        binding: number;\r\n        name: string;\r\n        type: Type;\r\n        count: number;\r\n        stageFlags: ShaderStageFlags;\r\n        sampleType: SampleType;\r\n    }\r\n    export interface IBufferInfo {\r\n        binding: number;\r\n        name: string;\r\n        memoryAccess: MemoryAccess;\r\n        stageFlags: ShaderStageFlags;\r\n    }\r\n    export interface IImageInfo {\r\n        binding: number;\r\n        name: string;\r\n        type: Type;\r\n        count: number;\r\n        memoryAccess: MemoryAccess;\r\n        stageFlags: ShaderStageFlags;\r\n    }\r\n\r\n    export interface IInputAttachmentInfo {\r\n        set: number;\r\n        binding: number;\r\n        name: string;\r\n        count: number;\r\n        stageFlags: ShaderStageFlags;\r\n    }\r\n    export interface IAttributeInfo {\r\n        name: string;\r\n        format: Format;\r\n        isNormalized: boolean;\r\n        stream: number;\r\n        isInstanced: boolean;\r\n        location: number;\r\n        defines: string[];\r\n    }\r\n    export interface IDefineInfo {\r\n        name: string;\r\n        type: string;\r\n        range?: number[];\r\n        options?: string[];\r\n        default?: string;\r\n    }\r\n    export interface IBuiltin {\r\n        name: string;\r\n        defines: string[];\r\n        binding?: number;\r\n    }\r\n    export interface IBuiltinInfo {\r\n        buffers: IBuiltin[];\r\n        blocks: IBuiltin[];\r\n        samplerTextures: IBuiltin[];\r\n        images: IBuiltin[];\r\n    }\r\n    export interface IDescriptorInfo {\r\n        rate: number;\r\n        blocks: IBlockInfo[];\r\n        samplerTextures: ISamplerTextureInfo[];\r\n        samplers: ISamplerInfo[];\r\n        textures: ITextureInfo[];\r\n        buffers: IBufferInfo[];\r\n        images: IImageInfo[];\r\n        subpassInputs: IInputAttachmentInfo[];\r\n    }\r\n    export interface IShaderInfo {\r\n        name: string;\r\n        hash: number;\r\n        glsl4: { vert: string, frag: string, compute?: string };\r\n        glsl3: { vert: string, frag: string, compute?: string };\r\n        glsl1: { vert: string, frag: string };\r\n        builtins: { globals: IBuiltinInfo, locals: IBuiltinInfo, statistics: Record<string, number> };\r\n        defines: IDefineInfo[];\r\n        attributes: IAttributeInfo[];\r\n        blocks: IBlockInfo[];\r\n        samplerTextures: ISamplerTextureInfo[];\r\n        samplers: ISamplerInfo[];\r\n        textures: ITextureInfo[];\r\n        buffers: IBufferInfo[];\r\n        images: IImageInfo[];\r\n        subpassInputs: IInputAttachmentInfo[];\r\n        descriptors: IDescriptorInfo[];\r\n    }\r\n    export interface IPreCompileInfo {\r\n        [name: string]: boolean[] | number[] | string[];\r\n    }\r\n}\r\n\r\nconst legacyBuiltinEffectNames = [\r\n    'planar-shadow',\r\n    'skybox',\r\n    'deferred-lighting',\r\n    'bloom',\r\n    'hbao',\r\n    'copy-pass',\r\n    'post-process',\r\n    'profiler',\r\n    'splash-screen',\r\n    'unlit',\r\n    'sprite',\r\n    'particle',\r\n    'particle-gpu',\r\n    'particle-trail',\r\n    'billboard',\r\n    'terrain',\r\n    'graphics',\r\n    'clear-stencil',\r\n    'spine',\r\n    'occlusion-query',\r\n    'geometry-renderer',\r\n    'debug-renderer',\r\n    'ssss-blur',\r\n    'float-output-process',\r\n];\r\n\r\n/**\r\n * @en Effect asset is the base template for instantiating material, all effects should be unique globally.\r\n * All effects are managed in a static map of EffectAsset.\r\n * @zh Effect 资源，作为材质实例初始化的模板，每个 effect 资源都应是全局唯一的。\r\n * 所有 Effect 资源都由此类的一个静态对象管理。\r\n */\r\n@ccclass('cc.EffectAsset')\r\nexport class EffectAsset extends Asset {\r\n    /**\r\n     * @en Register the effect asset to the static map.\r\n     * @zh 将指定 effect 注册到全局管理器。\r\n     *\r\n     * @param asset @en The effect asset to be registered. @zh 待注册的 effect asset。\r\n     */\r\n    public static register (asset: EffectAsset): void {\r\n        EffectAsset._effects[asset.name] = asset;\r\n        EffectAsset._layoutValid = false;\r\n    }\r\n\r\n    /**\r\n     * @en Unregister the effect asset from the static map\r\n     * @zh 将指定 effect 从全局管理器移除。\r\n     *\r\n     * @param asset - @en The effect asset to be removed. @zh 待移除的 effect asset。\r\n     */\r\n    public static remove (asset: EffectAsset | string): void {\r\n        if (typeof asset !== 'string') {\r\n            if (EffectAsset._effects[asset.name] && EffectAsset._effects[asset.name] === asset) {\r\n                delete EffectAsset._effects[asset.name];\r\n            }\r\n        } else {\r\n            if (EffectAsset._effects[asset]) { delete EffectAsset._effects[asset]; return; }\r\n            for (const n in EffectAsset._effects) {\r\n                if (EffectAsset._effects[n]._uuid === asset) {\r\n                    delete EffectAsset._effects[n];\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets the effect asset by the given name.\r\n     * @zh 获取指定名字的 effect 资源。\r\n     *\r\n     * @param name - @en The name of effect you want to get. @zh 想要获取的 effect 的名字。\r\n     * @returns @en The effect. @zh 你查询的 effect.\r\n     */\r\n    public static get (name: string): EffectAsset | null {\r\n        if (EffectAsset._effects[name]) { return EffectAsset._effects[name]; }\r\n        for (const n in EffectAsset._effects) {\r\n            if (EffectAsset._effects[n]._uuid === name) {\r\n                return EffectAsset._effects[n];\r\n            }\r\n        }\r\n        if (legacyBuiltinEffectNames.includes(name)) {\r\n            warnID(16101, name);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Gets all registered effect assets.\r\n     * @zh 获取所有已注册的 effect 资源。\r\n     * @returns @en All registered effects. @zh 所有已注册的 effect 资源。\r\n     */\r\n    public static getAll (): Record<string, EffectAsset> { return EffectAsset._effects; }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected static _effects: Record<string, EffectAsset> = {};\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public static isLayoutValid (): boolean { return EffectAsset._layoutValid; }\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public static setLayoutValid (): void { EffectAsset._layoutValid = true; }\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    protected static _layoutValid = true;\r\n\r\n    /**\r\n     * @en The techniques used by the current effect.\r\n     * @zh 当前 effect 的所有可用 technique。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public techniques: EffectAsset.ITechniqueInfo[] = [];\r\n\r\n    /**\r\n     * @en The shaders used by the current effect.\r\n     * @zh 当前 effect 使用的所有 shader。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public shaders: EffectAsset.IShaderInfo[] = [];\r\n\r\n    /**\r\n     * @en The preprocess macro combinations for the shader\r\n     * @zh 每个 shader 需要预编译的宏定义组合。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public combinations: EffectAsset.IPreCompileInfo[] = [];\r\n\r\n    /**\r\n     * @en Whether to hide in editor mode.\r\n     * @zh 是否在编辑器内隐藏。\r\n     */\r\n    @serializable\r\n    @editorOnly\r\n    public hideInEditor = false;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * @en The loaded callback which should be invoked by the [[AssetManager]], will automatically register the effect.\r\n     * @zh 通过 [[AssetManager]] 加载完成时的回调，将自动注册 effect 资源。\r\n     */\r\n    public onLoaded (): void {\r\n        if (cclegacy.rendering && cclegacy.rendering.enableEffectImport) {\r\n            addEffectDefaultProperties(this);\r\n            const programLib = cclegacy.rendering.programLib;\r\n            programLib.addEffect(this);\r\n            programLib.init(deviceManager.gfxDevice);\r\n        } else {\r\n            programLib.register(this);\r\n        }\r\n        EffectAsset.register(this);\r\n        if (!EDITOR_NOT_IN_PREVIEW) { cclegacy.game.once(cclegacy.Game.EVENT_RENDERER_INITED, this._precompile, this); }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _precompile (): void {\r\n        if (cclegacy.rendering && cclegacy.rendering.enableEffectImport) {\r\n            (cclegacy.rendering.programLib as ProgramLibrary).precompileEffect(deviceManager.gfxDevice, this);\r\n            return;\r\n        }\r\n        const root = cclegacy.director.root as Root;\r\n        for (let i = 0; i < this.shaders.length; i++) {\r\n            const shader = this.shaders[i];\r\n            const combination = this.combinations[i];\r\n            if (!combination) {\r\n                continue;\r\n            }\r\n            const defines = getCombinationDefines(combination);\r\n            defines.forEach(\r\n                (defines): Shader => programLib.getGFXShader(deviceManager.gfxDevice, shader.name, defines, root.pipeline),\r\n            );\r\n        }\r\n    }\r\n\r\n    public destroy (): boolean {\r\n        EffectAsset.remove(this);\r\n        return super.destroy();\r\n    }\r\n\r\n    public initDefault (uuid?: string): void {\r\n        super.initDefault(uuid);\r\n        const effect = EffectAsset.get('builtin-unlit');\r\n        this.name = 'builtin-unlit';\r\n        this.shaders = effect!.shaders;\r\n        this.combinations = effect!.combinations;\r\n        this.techniques = effect!.techniques;\r\n    }\r\n\r\n    public validate (): boolean {\r\n        return this.techniques.length > 0 && this.shaders.length > 0;\r\n    }\r\n}\r\n\r\ncclegacy.EffectAsset = EffectAsset;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, type } from 'cc.decorator';\r\nimport { Asset } from './asset';\r\nimport { EffectAsset } from './effect-asset';\r\nimport { Texture, Type } from '../../gfx';\r\nimport { TextureBase } from './texture-base';\r\nimport { IPassInfoFull, Pass, PassOverrides } from '../../render-scene/core/pass';\r\nimport { getTypeFromHandle, MacroRecord, MaterialProperty } from '../../render-scene/core/pass-utils';\r\nimport { Color, warnID, Vec4, cclegacy } from '../../core';\r\nimport { SRGBToLinear } from '../../rendering/pipeline-funcs';\r\nimport { Renderer } from '../../misc/renderer';\r\nimport type { Root } from '../../root';\r\n\r\nconst v4_1 = new Vec4();\r\n\r\n/**\r\n * @en The basic infos for material initialization.\r\n * @zh 用来初始化材质的基本信息。\r\n */\r\nexport interface IMaterialInfo {\r\n    /**\r\n     * @en The EffectAsset to use. Must provide if `effectName` is not specified.\r\n     * @zh\r\n     * 这个材质将使用的 EffectAsset，直接提供资源引用，和 `effectName` 至少要指定一个。\r\n     */\r\n    effectAsset?: EffectAsset | null;\r\n    /**\r\n     * @en\r\n     * The name of the EffectAsset to use. Must provide if `effectAsset` is not specified.\r\n     * @zh\r\n     * 这个材质将使用的 EffectAsset，通过 effect 名指定，和 `effectAsset` 至少要指定一个。\r\n     */\r\n    effectName?: string;\r\n    /**\r\n     * @en\r\n     * The index of the technique to use.\r\n     * @zh\r\n     * 这个材质将使用第几个 technique，默认为 0。\r\n     */\r\n    technique?: number;\r\n    /**\r\n     * @en\r\n     * The shader macro definitions. Default to 0 or the specified value in [[EffectAsset]].\r\n     * @zh\r\n     * 这个材质定义的预处理宏，默认全为 0，或 [[EffectAsset]] 中的指定值。\r\n     */\r\n    defines?: MacroRecord | MacroRecord[];\r\n    /**\r\n     * @en\r\n     * The override values on top of the pipeline states specified in [[EffectAsset]].\r\n     * @zh\r\n     * 这个材质的自定义管线状态，将覆盖 effect 中的属性。<br>\r\n     * 注意在可能的情况下请尽量少的自定义管线状态，以减小对渲染效率的影响。\r\n     */\r\n    states?: PassOverrides | PassOverrides[];\r\n}\r\n\r\nexport type MaterialPropertyFull = MaterialProperty | TextureBase | Texture | null;\r\n\r\n/**\r\n * @en The material asset, specifies in details how a model is drawn on screen.\r\n * @zh 材质资源类，包含模型绘制方式的全部细节描述。\r\n */\r\n@ccclass('cc.Material')\r\nexport class Material extends Asset {\r\n    /**\r\n     * @en Get hash for a material\r\n     * @zh 获取一个材质的哈希值\r\n     * @param material\r\n     */\r\n    public static getHash (material: Material): number {\r\n        let hash = 0;\r\n        for (const pass of material.passes) {\r\n            hash ^= pass.hash;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    @type(EffectAsset)\r\n    protected _effectAsset: EffectAsset | null = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    @serializable\r\n    protected _techIdx = 0;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    @serializable\r\n    protected _defines: MacroRecord[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    @serializable\r\n    protected _states: PassOverrides[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    @serializable\r\n    protected _props: Record<string, MaterialPropertyFull | MaterialPropertyFull[]>[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _passes: Pass[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _hash = 0;\r\n\r\n    constructor (name?: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * @en The current [[EffectAsset]].\r\n     * @zh 当前使用的 [[EffectAsset]] 资源。\r\n     */\r\n    get effectAsset (): EffectAsset | null {\r\n        return this._effectAsset;\r\n    }\r\n\r\n    /**\r\n     * @en Name of the current [[EffectAsset]].\r\n     * @zh 当前使用的 [[EffectAsset]] 资源名。\r\n     */\r\n    get effectName (): string {\r\n        return this._effectAsset ? this._effectAsset.name : '';\r\n    }\r\n\r\n    /**\r\n     * @en The current technique index.\r\n     * @zh 当前的 technique 索引。\r\n     */\r\n    get technique (): number {\r\n        return this._techIdx;\r\n    }\r\n\r\n    /**\r\n     * @en The passes defined in this material.\r\n     * @zh 当前正在使用的 pass 数组。\r\n     */\r\n    get passes (): Pass[] {\r\n        return this._passes;\r\n    }\r\n\r\n    /**\r\n     * @en The hash value of this material.\r\n     * @zh 材质的 hash。\r\n     */\r\n    get hash (): number {\r\n        return this._hash;\r\n    }\r\n\r\n    /**\r\n     * @en The parent material.\r\n     * @zh 父材质。\r\n     */\r\n    get parent (): Material | null {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en The owner render component.\r\n     * @zh 该材质所归属的渲染组件。\r\n     */\r\n    get owner (): Renderer | null {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Initialize this material with the given information.\r\n     * @zh 根据所给信息初始化这个材质，初始化正常结束后材质即可立即用于渲染。\r\n     * @param info @en Material description info. @zh 材质描述信息\r\n     */\r\n    public initialize (info: IMaterialInfo): void {\r\n        if (this._passes.length) {\r\n            warnID(12005);\r\n            return;\r\n        }\r\n\r\n        if (!this._defines) { this._defines = []; }\r\n        if (!this._states) { this._states = []; }\r\n        if (!this._props) { this._props = []; }\r\n        this._fillInfo(info);\r\n        this._update();\r\n    }\r\n\r\n    /**\r\n     * @en Reset the material with the given information.\r\n     * @zh 使用指定的信息重置该材质。\r\n     *\r\n     * @param info @en Material description info. @zh 材质描述信息。\r\n     */\r\n    public reset (info: IMaterialInfo): void { // to be consistent with other assets\r\n        this.initialize(info);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Destroy the material definitively.<br>\r\n     * Cannot re-initialize after destroy.<br>\r\n     * Modifications on active materials can be acheived by<br>\r\n     * creating a new Material, invoke the `copy` function<br>\r\n     * with the desired overrides, and assigning it to the target components.\r\n     * @zh\r\n     * 彻底销毁材质，注意销毁后无法重新初始化。<br>\r\n     * 如需修改现有材质，请创建一个新材质，<br>\r\n     * 调用 copy 函数传入需要的 overrides 并赋给目标组件。\r\n     */\r\n    public destroy (): boolean {\r\n        this._doDestroy();\r\n        return super.destroy();\r\n    }\r\n\r\n    /**\r\n     * @en Recompile the shader with the specified macro overrides. Allowed only on material instances.\r\n     * @zh 使用指定预处理宏重新编译当前 pass（数组）中的 shader。只允许对材质实例执行。\r\n     * @param overrides @en The shader macro override values. @zh 宏的覆盖值，用于编译不同 Shader 变体。\r\n     * @param passIdx @en The pass to apply to. Will apply to all passes if not specified. @zh 要重编的 pass 索引，如果没有指定，则重编所有 pass。\r\n     */\r\n    public recompileShaders (overrides: MacroRecord, passIdx?: number): void {\r\n        warnID(16370, this.name);\r\n    }\r\n\r\n    /**\r\n     * @en Override the passes with the specified pipeline states. Allowed only on material instances.\r\n     * @zh 使用指定管线状态重载当前的 pass（数组）。只允许对材质实例执行。\r\n     * @param overrides The pipeline state override values.\r\n     * @param passIdx The pass to apply to. Will apply to all passes if not specified.\r\n     */\r\n    public overridePipelineStates (overrides: PassOverrides, passIdx?: number): void {\r\n        warnID(16371, this.name);\r\n    }\r\n\r\n    /**\r\n     * @en Callback function after material is loaded in [[AssetManager]]. Initialize the resources automatically.\r\n     * @zh 通过 [[AssetManager]] 加载完成时的回调，将自动初始化材质资源。\r\n     */\r\n    public onLoaded (): void {\r\n        this._update();\r\n    }\r\n\r\n    /**\r\n     * @en Reset all the uniforms to the default value specified in [[EffectAsset]].\r\n     * @zh 重置材质的所有 uniform 参数数据为 [[EffectAsset]] 中的默认初始值。\r\n     * @param clearPasses @en Whether to clear the rendering data too. @zh 是否同时清空渲染数据。\r\n     */\r\n    public resetUniforms (clearPasses = true): void {\r\n        this._props.length = this._passes.length;\r\n        for (let i = 0; i < this._props.length; i++) { this._props[i] = {}; }\r\n        if (!clearPasses) { return; }\r\n        for (const pass of this._passes) {\r\n            pass.resetUBOs();\r\n            pass.resetTextures();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Convenient property setter provided for quick material setup.<br>\r\n     * [[renderer.Pass.setUniform]] should be used instead if you need to do per-frame uniform update.\r\n     * @zh\r\n     * 设置材质 uniform 参数的统一入口。<br>\r\n     * 注意如果需要每帧更新 uniform，建议使用 [[renderer.Pass.setUniform]] 以获得更好的性能。\r\n     * @param name @en The target uniform name. @zh 目标 Uniform 名称。\r\n     * @param val @en The target value. @zh 需要设置的目标值。\r\n     * @param passIdx\r\n     * @en The pass to apply to. Will apply to all passes if not specified.\r\n     * @zh 设置此属性的 pass 索引，如果没有指定，则会设置此属性到所有 pass 上。\r\n     */\r\n    public setProperty (name: string, val: MaterialPropertyFull | MaterialPropertyFull[], passIdx?: number): void {\r\n        let success = false;\r\n        if (passIdx === undefined) { // try set property for all applicable passes\r\n            const passes = this._passes;\r\n            const len = passes.length;\r\n            for (let i = 0; i < len; i++) {\r\n                const pass = passes[i];\r\n                if (this._uploadProperty(pass, name, val)) {\r\n                    this._props[pass.propertyIndex][name] = val;\r\n                    success = true;\r\n                }\r\n            }\r\n        } else {\r\n            if (passIdx >= this._passes.length) {\r\n                warnID(16372, passIdx);\r\n            }\r\n            const pass = this._passes[passIdx];\r\n            if (this._uploadProperty(pass, name, val)) {\r\n                this._props[pass.propertyIndex][name] = val;\r\n                success = true;\r\n            }\r\n        }\r\n        if (!success) {\r\n            warnID(16373, name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the specified uniform value for this material.<br>\r\n     * Note that only uniforms set through [[Material.setProperty]] can be acquired here.<br>\r\n     * For the complete rendering data, use [[renderer.Pass.getUniform]] instead.\r\n     * @zh\r\n     * 获取当前材质的指定 uniform 参数的值。<br>\r\n     * 注意只有通过 [[Material.setProperty]] 函数设置的参数才能从此函数取出，<br>\r\n     * 如需取出完整的渲染数据，请使用 [[renderer.Pass.getUniform]]。\r\n     * @param name @en The property or uniform name. @zh 属性或 Uniform 的名称。\r\n     * @param passIdx\r\n     * @en The target pass index. If not specified, return the first found value in all passes.\r\n     * @zh 目标 pass 索引，如果没指定，则返回所有 pass 中第一个找到的值。\r\n     * @return @en The acquired material properties. @zh 获取的材质属性。\r\n     */\r\n    public getProperty (name: string, passIdx?: number): Readonly<MaterialPropertyFull | MaterialPropertyFull[]> {\r\n        if (passIdx === undefined) { // try get property in all possible passes\r\n            const propsArray = this._props;\r\n            const len = propsArray.length;\r\n            for (let i = 0; i < len; i++) {\r\n                const props = propsArray[i];\r\n                if (name in props) { return props[name]; }\r\n            }\r\n        } else {\r\n            if (passIdx >= this._passes.length) {\r\n                warnID(16372, passIdx);\r\n                return null;\r\n            }\r\n            const props = this._props[this._passes[passIdx].propertyIndex];\r\n            if (name in props) { return props[name]; }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Copy the target material, with optional overrides.\r\n     * @zh 复制目标材质到当前实例，允许提供重载信息。\r\n     * @param mat @en The material to be copied. @zh 需要拷贝的原始材质。\r\n     * @param overrides @en The overriding states on top of the original material. @zh 需要在原始材质上覆盖的状态。\r\n     */\r\n    public copy (mat: Material, overrides?: IMaterialInfo): void {\r\n        this._techIdx = mat._techIdx;\r\n        this._props.length = mat._props.length;\r\n        for (let i = 0; i < mat._props.length; i++) {\r\n            this._props[i] = { ...mat._props[i] };\r\n        }\r\n        this._defines.length = mat._defines.length;\r\n        for (let i = 0; i < mat._defines.length; i++) {\r\n            this._defines[i] = { ...mat._defines[i] };\r\n        }\r\n        this._states.length = mat._states.length;\r\n        for (let i = 0; i < mat._states.length; i++) {\r\n            this._states[i] = { ...mat._states[i] };\r\n        }\r\n        this._effectAsset = mat._effectAsset;\r\n        if (overrides) this._fillInfo(overrides);\r\n        this._update();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _fillInfo (info: IMaterialInfo): void {\r\n        if (info.technique !== undefined) { this._techIdx = info.technique; }\r\n        if (info.effectAsset) {\r\n            this._effectAsset = info.effectAsset;\r\n        } else if (info.effectName) {\r\n            this._effectAsset = EffectAsset.get(info.effectName);\r\n        }\r\n        if (info.defines) { this._prepareInfo(info.defines, this._defines); }\r\n        if (info.states) { this._prepareInfo(info.states, this._states); }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _prepareInfo (patch: Record<string, unknown> | Record<string, unknown>[], cur: Record<string, unknown>[]): void {\r\n        let patchArray = patch;\r\n        if (!Array.isArray(patchArray)) { // fill all the passes if not specified\r\n            const len = this._effectAsset ? this._effectAsset.techniques[this._techIdx].passes.length : 1;\r\n            patchArray = Array(len).fill(patchArray);\r\n        }\r\n        for (let i = 0; i < patchArray.length; ++i) {\r\n            Object.assign(cur[i] || (cur[i] = {}), patchArray[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _createPasses (): Pass[] {\r\n        const tech = this._effectAsset!.techniques[this._techIdx || 0];\r\n        if (!tech) { return []; }\r\n        const passNum = tech.passes.length;\r\n        const passes: Pass[] = [];\r\n        for (let k = 0; k < passNum; ++k) {\r\n            const passInfo = tech.passes[k] as IPassInfoFull;\r\n            const propIdx = passInfo.passIndex = k;\r\n            const defines = passInfo.defines = this._defines[propIdx] || (this._defines[propIdx] = {});\r\n            passInfo.stateOverrides = this._states[propIdx] || (this._states[propIdx] = {});\r\n            if (passInfo.propertyIndex !== undefined) {\r\n                Object.assign(defines, this._defines[passInfo.propertyIndex]);\r\n            }\r\n            if (passInfo.embeddedMacros !== undefined) {\r\n                Object.assign(defines, passInfo.embeddedMacros);\r\n            }\r\n            if (passInfo.switch && !defines[passInfo.switch]) { continue; }\r\n            const pass = new Pass(cclegacy.director.root as Root);\r\n            pass.initialize(passInfo);\r\n            passes.push(pass);\r\n        }\r\n        return passes;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _update (keepProps = true): void {\r\n        if (this._effectAsset) {\r\n            this._passes = this._createPasses();\r\n            // handle property values\r\n            const totalPasses = this._effectAsset.techniques[this._techIdx].passes.length;\r\n            this._props.length = totalPasses;\r\n            if (keepProps) {\r\n                this._passes.forEach((pass, i): void => {\r\n                    let props = this._props[i];\r\n                    if (!props) { props = this._props[i] = {}; }\r\n                    if (pass.propertyIndex !== undefined) {\r\n                        Object.assign(props, this._props[pass.propertyIndex]);\r\n                    }\r\n                    for (const p in props) {\r\n                        this._uploadProperty(pass, p, props[p]);\r\n                    }\r\n                });\r\n            } else {\r\n                for (let i = 0; i < this._props.length; i++) { this._props[i] = {}; }\r\n            }\r\n        }\r\n        this._hash = Material.getHash(this);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _uploadProperty (pass: Pass, name: string, val: MaterialPropertyFull | MaterialPropertyFull[]): boolean {\r\n        const handle = pass.getHandle(name);\r\n        if (!handle) { return false; }\r\n        const type = getTypeFromHandle(handle);\r\n        if (type < (Type.SAMPLER1D as number)) {\r\n            if (Array.isArray(val)) {\r\n                pass.setUniformArray(handle, val as MaterialProperty[]);\r\n            } else if (val !== null) {\r\n                if (pass.properties[name]?.linear) {\r\n                    const v4 = val as Vec4;\r\n                    SRGBToLinear(v4_1, v4);\r\n                    v4_1.w = v4.w;\r\n                    val = v4_1;\r\n                }\r\n                pass.setUniform(handle, val as MaterialProperty);\r\n            } else {\r\n                pass.resetUniform(name);\r\n            }\r\n        } else if (Array.isArray(val)) {\r\n            val.forEach((v, i) => {\r\n                this._bindTexture(pass, handle, v, i);\r\n            });\r\n        } else if (val) {\r\n            this._bindTexture(pass, handle, val);\r\n        } else {\r\n            pass.resetTexture(name);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _bindTexture (pass: Pass, handle: number, val: MaterialPropertyFull, index?: number): void {\r\n        const binding = Pass.getBindingFromHandle(handle);\r\n        if (val instanceof Texture) {\r\n            pass.bindTexture(binding, val, index);\r\n        } else if (val instanceof TextureBase) {\r\n            const texture: Texture | null = val.getGFXTexture();\r\n            if (!texture || !texture.width || !texture.height) {\r\n                // warn(`material '${this._uuid}' received incomplete texture asset '${val._uuid}'`);\r\n                return;\r\n            }\r\n            pass.bindTexture(binding, texture, index);\r\n            pass.bindSampler(binding, val.getGFXSampler(), index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    protected _doDestroy (): void {\r\n        if (this._passes && this._passes.length) {\r\n            for (const pass of this._passes) {\r\n                pass.destroy();\r\n            }\r\n        }\r\n        this._passes.length = 0;\r\n    }\r\n\r\n    public initDefault (uuid?: string): void {\r\n        super.initDefault(uuid);\r\n        this.initialize({\r\n            effectName: 'builtin-unlit',\r\n            defines: { USE_COLOR: true },\r\n            technique: 0,\r\n        });\r\n        this.setProperty('mainColor', new Color('#ff00ff'));\r\n    }\r\n\r\n    public validate (): boolean {\r\n        return !!this._effectAsset && !this._effectAsset.isDefault && this.passes.length > 0;\r\n    }\r\n}\r\n\r\ncclegacy.Material = Material;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG } from 'internal:constants';\r\nimport { Material } from '../../asset/assets/material';\r\nimport { Color, Mat4, Vec3, Vec2, Enum, assert, geometry, cclegacy } from '../../core';\r\nimport type { ShadowsInfo } from '../../scene-graph/scene-globals';\r\nimport { IMacroPatch } from '../core/pass';\r\nimport { Shader } from '../../gfx';\r\n\r\n/**\r\n * @zh 阴影贴图分辨率。\r\n * @en The shadow map size.\r\n * @static\r\n * @enum Shadows.ShadowSize\r\n */\r\nexport const ShadowSize = Enum({\r\n    /**\r\n     * @zh 分辨率 256 * 256。\r\n     * @en shadow resolution 256 * 256.\r\n     * @readonly\r\n     */\r\n    Low_256x256: 256,\r\n\r\n    /**\r\n     * @zh 分辨率 512 * 512。\r\n     * @en shadow resolution 512 * 512.\r\n     * @readonly\r\n     */\r\n    Medium_512x512: 512,\r\n\r\n    /**\r\n     * @zh 分辨率 1024 * 1024。\r\n     * @en shadow resolution 1024 * 1024.\r\n     * @readonly\r\n     */\r\n    High_1024x1024: 1024,\r\n\r\n    /**\r\n     * @zh 分辨率 2048 * 2048。\r\n     * @en shadow resolution 2048 * 2048.\r\n     * @readonly\r\n     */\r\n    Ultra_2048x2048: 2048,\r\n});\r\n\r\n/**\r\n * @zh 阴影类型。\r\n * @en The shadow type\r\n * @enum Shadows.ShadowType\r\n */\r\nexport const ShadowType = Enum({\r\n    /**\r\n     * @zh 平面阴影。\r\n     * @en Planar shadow\r\n     * @property Planar\r\n     * @readonly\r\n     */\r\n    Planar: 0,\r\n\r\n    /**\r\n     * @zh 阴影贴图。\r\n     * @en Shadow type\r\n     * @property ShadowMap\r\n     * @readonly\r\n     */\r\n    ShadowMap: 1,\r\n});\r\n\r\n/**\r\n * @zh pcf阴影等级。\r\n * @en The pcf type\r\n * @static\r\n * @enum Shadows.PCFType\r\n */\r\nexport const PCFType = Enum({\r\n    /**\r\n     * @zh x1 次采样\r\n     * @en x1 times\r\n     * @readonly\r\n     */\r\n    HARD: 0,\r\n\r\n    /**\r\n     * @zh x4 次采样\r\n     * @en x4 times\r\n     * @readonly\r\n     */\r\n    SOFT: 1,\r\n\r\n    /**\r\n     * @zh x9 次采样\r\n     * @en x9 times\r\n     * @readonly\r\n     */\r\n    SOFT_2X: 2,\r\n\r\n    /**\r\n     * @zh x16 次采样\r\n     * @en x16 times\r\n     * @readonly\r\n     */\r\n    SOFT_4X: 3,\r\n});\r\n\r\n/**\r\n * @zh 级联阴影贴图层级。\r\n * @en The CSM shadow level\r\n * @enum Shadows.CSMLevel\r\n */\r\nexport const CSMLevel = Enum({\r\n    /**\r\n     * @zh 1 个层级\r\n     * @en level 1\r\n     * @readonly\r\n     */\r\n    LEVEL_1: 1,\r\n\r\n    /**\r\n     * @zh 2 个层级\r\n     * @en level 2\r\n     * @readonly\r\n     */\r\n    LEVEL_2: 2,\r\n\r\n    /**\r\n     * @zh 3 个层级\r\n     * @en level 3\r\n     * @readonly\r\n     */\r\n    LEVEL_3: 3,\r\n\r\n    /**\r\n     * @zh 4 个层级\r\n     * @en level 4\r\n     * @readonly\r\n     */\r\n    LEVEL_4: 4,\r\n});\r\n\r\n/**\r\n * @zh 级联阴影性能优化模式。\r\n * @en The CSM performance optimization mode\r\n * @enum Shadows.CSMOptimizationMode\r\n */\r\nexport const CSMOptimizationMode = Enum({\r\n    /**\r\n     * @zh 没有性能优化\r\n     * @en has no performance optimization\r\n     * @readonly\r\n     */\r\n    NONE: 1,\r\n\r\n    /**\r\n     * @zh 剔除层与层之间重复物体\r\n     * @en Eliminate duplicate objects between layers\r\n     * @readonly\r\n     */\r\n    RemoveDuplicates: 2,\r\n\r\n    /**\r\n      * @zh 取消稳抖\r\n      * @en Disable rotation fix\r\n      * @readonly\r\n      */\r\n    DisableRotationFix: 3,\r\n});\r\n\r\nconst SHADOW_TYPE_NONE = ShadowType.ShadowMap + 1;\r\n\r\n/**\r\n * @en The global shadow's configuration of the render scene\r\n * @zh 渲染场景的全局阴影配置\r\n */\r\nexport class Shadows {\r\n    /**\r\n     * @en MAX_FAR. This is shadow camera max far.\r\n     * @zh 阴影相机的最远视距。\r\n     */\r\n    public static readonly MAX_FAR: number = 2000.0;\r\n\r\n    /**\r\n     * @en EXPANSION_RATIO. This is shadow boundingBox Coefficient of expansion.\r\n     * @zh 阴影包围盒扩大系数。\r\n     */\r\n    public static readonly COEFFICIENT_OF_EXPANSION: number = 2.0 * Math.sqrt(3.0);\r\n\r\n    /**\r\n     * @en Whether activate planar shadow.\r\n     * @zh 是否启用平面阴影？\r\n     */\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled (val: boolean) {\r\n        this._enabled = val;\r\n        this.activate();\r\n    }\r\n\r\n    /**\r\n     * @en Shadow type.\r\n     * @zh 阴影类型。\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n    set type (val: number) {\r\n        this._type = this.enabled ? val : SHADOW_TYPE_NONE;\r\n        this.activate();\r\n    }\r\n\r\n    /**\r\n     * @en The normal of the plane which receives shadow.\r\n     * @zh 阴影接收平面的法线。\r\n     */\r\n    get normal (): Vec3 {\r\n        return this._normal;\r\n    }\r\n\r\n    set normal (val: Vec3) {\r\n        Vec3.copy(this._normal, val);\r\n    }\r\n\r\n    /**\r\n     * @en The distance from coordinate origin to the receiving plane.\r\n     * @zh 阴影接收平面与原点的距离。\r\n     */\r\n    get distance (): number {\r\n        return this._distance;\r\n    }\r\n\r\n    set distance (val: number) {\r\n        this._distance = val;\r\n    }\r\n\r\n    /**\r\n     * @en Positional offset values in planar shading calculations.\r\n     * @zh 平面阴影计算中的位置偏移值。\r\n     */\r\n    get planeBias (): number {\r\n        return this._planeBias;\r\n    }\r\n\r\n    set planeBias (val: number) {\r\n        this._planeBias = val;\r\n    }\r\n\r\n    /**\r\n     * @en Shadow color.\r\n     * @zh 阴影颜色。\r\n     */\r\n    get shadowColor (): Color {\r\n        return this._shadowColor;\r\n    }\r\n\r\n    set shadowColor (color: Color) {\r\n        this._shadowColor = color;\r\n    }\r\n\r\n    /**\r\n     * @en get or set shadow camera orthoSize.\r\n     * @zh 获取或者设置阴影纹理大小。\r\n     */\r\n    public get size (): Vec2 {\r\n        return this._size;\r\n    }\r\n    public set size (val: Vec2) {\r\n        this._size.set(val);\r\n    }\r\n\r\n    /**\r\n     * @en shadow Map size has been modified.\r\n     * @zh 阴影贴图大小是否被修改。\r\n     */\r\n    public get shadowMapDirty (): boolean {\r\n        return this._shadowMapDirty;\r\n    }\r\n    public set shadowMapDirty (val: boolean) {\r\n        this._shadowMapDirty = val;\r\n    }\r\n\r\n    /**\r\n     * @en The transform matrix of the light source\r\n     * @zh 光源的变换矩阵\r\n     */\r\n    public get matLight (): Mat4 {\r\n        return this._matLight;\r\n    }\r\n\r\n    public get material (): Material {\r\n        return this._material!;\r\n    }\r\n\r\n    public get instancingMaterial (): Material {\r\n        return this._instancingMaterial!;\r\n    }\r\n\r\n    /**\r\n     * @en The bounding sphere of the shadow map.\r\n     * @zh 用于计算固定区域阴影 Shadow map 的场景包围球.\r\n     */\r\n    public fixedSphere: geometry.Sphere = new geometry.Sphere(0.0, 0.0, 0.0, 0.01);\r\n\r\n    /**\r\n     * @en get or set shadow max received.\r\n     * @zh 阴影接收的最大灯光数量。\r\n     */\r\n    public maxReceived = 4;\r\n\r\n    // local set\r\n    protected _matLight = new Mat4();\r\n    protected _material: Material | null = null;\r\n    protected _instancingMaterial: Material | null = null;\r\n\r\n    // public properties of shadow\r\n    protected _enabled = false;\r\n    protected _type = SHADOW_TYPE_NONE;\r\n    protected _distance = 0;\r\n    protected _planeBias = 1.0;\r\n    protected _normal = new Vec3(0, 1, 0);\r\n    protected _shadowColor = new Color(0, 0, 0, 76);\r\n    protected _size: Vec2 = new Vec2(1024, 1024);\r\n    protected _shadowMapDirty = false;\r\n\r\n    /**\r\n     * @en Get the shader for the planar shadow with macro patches\r\n     * @zh 通过指定宏获取平面阴影的 Shader 对象\r\n     * @param patches The macro patches for the shader\r\n     * @returns The shader for the planar shadow\r\n     */\r\n    public getPlanarShader (patches: Readonly<IMacroPatch[] | null>): Shader | null {\r\n        if (!this._material) {\r\n            this._material = new Material();\r\n            this._material.initialize({ effectName: 'pipeline/planar-shadow' });\r\n        }\r\n\r\n        const passes = this._material.passes;\r\n        if (DEBUG) {\r\n            assert(passes.length > 0, 'passes should not be empty!');\r\n        }\r\n        return passes.length > 0 ? passes[0].getShaderVariant(patches) : null;\r\n    }\r\n\r\n    public initialize (shadowsInfo: ShadowsInfo): void {\r\n        this._enabled = shadowsInfo.enabled;\r\n        this._type = this.enabled ? shadowsInfo.type : SHADOW_TYPE_NONE;\r\n\r\n        this.normal = shadowsInfo.planeDirection;\r\n        this.distance = shadowsInfo.planeHeight;\r\n        this.planeBias = shadowsInfo.planeBias;\r\n        this.shadowColor = shadowsInfo.shadowColor as Color;\r\n        this.maxReceived = shadowsInfo.maxReceived;\r\n        if (shadowsInfo.shadowMapSize !== this._size.x) {\r\n            this.size.set(shadowsInfo.shadowMapSize, shadowsInfo.shadowMapSize);\r\n            this._shadowMapDirty = true;\r\n        }\r\n    }\r\n\r\n    public activate (): void {\r\n        if (this._enabled) {\r\n            if (this.type === ShadowType.Planar) {\r\n                this._updatePlanarInfo();\r\n            } else {\r\n                const root = cclegacy.director.root;\r\n                const pipeline = root.pipeline;\r\n                pipeline.macros.CC_SHADOW_TYPE = 2;\r\n                root.onGlobalPipelineStateChanged();\r\n            }\r\n        } else {\r\n            const root = cclegacy.director.root;\r\n            const pipeline = root.pipeline;\r\n            pipeline.macros.CC_SHADOW_TYPE = 0;\r\n            root.onGlobalPipelineStateChanged();\r\n        }\r\n    }\r\n\r\n    protected _updatePlanarInfo (): void {\r\n        if (!this._material) {\r\n            this._material = new Material();\r\n            this._material.initialize({ effectName: 'pipeline/planar-shadow' });\r\n        }\r\n        const root = cclegacy.director.root;\r\n        const pipeline = root.pipeline;\r\n        pipeline.macros.CC_SHADOW_TYPE = 1;\r\n        root.onGlobalPipelineStateChanged();\r\n    }\r\n\r\n    public destroy (): void {\r\n        if (this._material) {\r\n            this._material.destroy();\r\n        }\r\n\r\n        if (this._instancingMaterial) {\r\n            this._instancingMaterial.destroy();\r\n        }\r\n        this.fixedSphere.destroy();\r\n    }\r\n}\r\n\r\ncclegacy.Shadows = Shadows;\r\n","/*\r\n Copyright (c) 2025 Xiamen Yaji Software Co., Ltd.\r\n https://www.cocos.com/\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { cclegacy } from '../core/global-exports';\r\nimport type { Director } from '../game/director';\r\nimport type { PipelineSceneData } from './pipeline-scene-data';\r\n\r\nexport function getPipelineSceneData (): PipelineSceneData {\r\n    return (cclegacy.director as Director).root!.pipeline.pipelineSceneData;\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec4, cclegacy } from '../../core';\r\nimport { getPipelineSceneData } from '../../rendering/pipeline-scene-data-utils';\r\nimport { AmbientInfo } from '../../scene-graph/scene-globals';\r\n\r\n/**\r\n * @en Ambient lighting representation in the render scene.\r\n * The initial data is setup in [[SceneGlobals.ambient]].\r\n * @zh 渲染场景中的环境光照设置。\r\n * 初始值是由 [[SceneGlobals.ambient]] 设置的。\r\n */\r\nexport class Ambient {\r\n    /**\r\n     * @en Default sun illuminance\r\n     * @zh 默认太阳亮度\r\n     */\r\n    public static SUN_ILLUM = 65000.0;\r\n    /**\r\n     * @en Default sky illuminance\r\n     * @zh 默认天空亮度\r\n     */\r\n    public static SKY_ILLUM = 20000.0;\r\n\r\n    /**\r\n     * @en Enable ambient\r\n     * @zh 是否开启环境光\r\n     */\r\n    set enabled (val: boolean) {\r\n        this._enabled = val;\r\n    }\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n    /**\r\n     * @en Sky color\r\n     * @zh 天空颜色\r\n     */\r\n    get skyColor (): Vec4 {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._skyColorHDR;\r\n        } else {\r\n            return this._skyColorLDR;\r\n        }\r\n    }\r\n    set skyColor (color: Vec4) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this._skyColorHDR.set(color);\r\n        } else {\r\n            this._skyColorLDR.set(color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Sky illuminance\r\n     * @zh 天空亮度\r\n     */\r\n    get skyIllum (): number {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._skyIllumHDR;\r\n        } else {\r\n            return this._skyIllumLDR;\r\n        }\r\n    }\r\n    set skyIllum (illum: number) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this._skyIllumHDR = illum;\r\n        } else {\r\n            this._skyIllumLDR = illum;\r\n        }\r\n    }\r\n    /**\r\n     * @en Ground color\r\n     * @zh 地面颜色\r\n     */\r\n    get groundAlbedo (): Vec4 {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._groundAlbedoHDR;\r\n        } else {\r\n            return this._groundAlbedoLDR;\r\n        }\r\n    }\r\n    set groundAlbedo (color: Vec4) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this._groundAlbedoHDR.set(color);\r\n        } else {\r\n            this._groundAlbedoLDR.set(color);\r\n        }\r\n    }\r\n\r\n    protected _groundAlbedoHDR = new Vec4(0.2, 0.2, 0.2, 1.0);\r\n    protected _skyColorHDR = new Vec4(0.2, 0.5, 0.8, 1.0);\r\n    protected _skyIllumHDR = 0;\r\n\r\n    protected _groundAlbedoLDR = new Vec4(0.2, 0.2, 0.2, 1.0);\r\n    protected _skyColorLDR = new Vec4(0.2, 0.5, 0.8, 1.0);\r\n    protected _skyIllumLDR = 0;\r\n\r\n    protected _mipmapCount = 1;\r\n\r\n    protected _enabled = false;\r\n\r\n    public initialize (ambientInfo: AmbientInfo): void {\r\n        // Init HDR/LDR from serialized data on load\r\n        this._skyColorHDR = ambientInfo.skyColorHDR;\r\n        this._groundAlbedoHDR.set(ambientInfo.groundAlbedoHDR);\r\n        this._skyIllumHDR = ambientInfo.skyIllumHDR;\r\n\r\n        this._skyColorLDR = ambientInfo.skyColorLDR;\r\n        this._groundAlbedoLDR.set(ambientInfo.groundAlbedoLDR);\r\n        this._skyIllumLDR = ambientInfo.skyIllumLDR;\r\n    }\r\n}\r\n\r\ncclegacy.Ambient = Ambient;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EffectAsset } from '../../asset/assets/effect-asset';\r\nimport { MaterialInstance } from './material-instance';\r\nimport { BatchingSchemes, Pass, PassOverrides } from './pass';\r\nimport { overrideMacros, MacroRecord } from './pass-utils';\r\n\r\n/**\r\n * @en A pass instance defines an variant version of the [[renderer.Pass]]\r\n * @zh 表示 [[renderer.Pass]] 的一种特殊实例\r\n */\r\nexport class PassInstance extends Pass {\r\n    /**\r\n     * @en The parent pass\r\n     * @zh 相关联的原始 Pass\r\n     */\r\n    get parent (): Pass { return this._parent; }\r\n\r\n    private declare _parent: Pass;\r\n\r\n    private declare _owner: MaterialInstance;\r\n\r\n    private _dontNotify = false;\r\n\r\n    constructor (parent: Pass, owner: MaterialInstance) {\r\n        super(parent.root);\r\n        this._parent = parent;\r\n        this._owner = owner;\r\n        this._doInit(this._parent, true); // defines may change now\r\n\r\n        this._shaderInfo.blocks.forEach((u) => {\r\n            const block = this._blocks[u.binding];\r\n            const parentBlock = this._parent.blocks[u.binding];\r\n            block.set(parentBlock);\r\n        });\r\n        this._rootBufferDirty = true;\r\n        const parentInstance = this._parent as PassInstance;\r\n        const thisDescriptorSet = this._descriptorSet;\r\n        this._shaderInfo.samplerTextures.forEach((u) => {\r\n            for (let j = 0; j < u.count; j++) {\r\n                const parentDescriptorSet = parentInstance._descriptorSet;\r\n                const binding = u.binding;\r\n                const sampler = parentDescriptorSet.getSampler(binding, j);\r\n                const texture = parentDescriptorSet.getTexture(binding, j);\r\n                thisDescriptorSet.bindSampler(binding, sampler, j);\r\n                thisDescriptorSet.bindTexture(binding, texture, j);\r\n            }\r\n        });\r\n        super.tryCompile();\r\n    }\r\n\r\n    /**\r\n     * @en Override pipeline states with the given pass override info.\r\n     * This won't affect the original pass\r\n     * @zh 重载当前 Pass 的管线状态。这不会影响原始 Pass\r\n     * @param original The original pass info\r\n     * @param value The override pipeline state info\r\n     */\r\n    public overridePipelineStates (original: EffectAsset.IPassInfo, overrides: PassOverrides): void {\r\n        this._bs.reset();\r\n        this._rs.reset();\r\n        this._dss.reset();\r\n\r\n        Pass.fillPipelineInfo(this, original);\r\n        Pass.fillPipelineInfo(this, overrides);\r\n        this._onStateChange();\r\n    }\r\n\r\n    public tryCompile (defineOverrides?: MacroRecord): boolean {\r\n        if (defineOverrides) {\r\n            if (!overrideMacros(this._defines, defineOverrides)) {\r\n                return false;\r\n            }\r\n        }\r\n        const res = super.tryCompile();\r\n        this._onStateChange();\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * @en Prepare to change states of the pass and do not notify the material to rebuild the pipeline state object\r\n     * @zh 开始静默修改 Pass 相关状态，不会通知材质去重新构建管线状态对象。\r\n     */\r\n    public beginChangeStatesSilently (): void {\r\n        this._dontNotify = true;\r\n    }\r\n\r\n    /**\r\n     * @en End the silent states changing process, all state changes will be notified.\r\n     * @zh 结束静默状态修改，所有修改将会开始通知材质。\r\n     */\r\n    public endChangeStatesSilently (): void {\r\n        this._dontNotify = false;\r\n    }\r\n\r\n    protected _syncBatchingScheme (): void {\r\n        this._defines.USE_INSTANCING = false;\r\n        this._batchingScheme = BatchingSchemes.NONE;\r\n    }\r\n\r\n    protected _onStateChange (): void {\r\n        this._hash = Pass.getPassHash(this);\r\n        this._owner.onPassStateChange(this._dontNotify);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { builtinResMgr } from '../../asset/asset-manager/builtin-res-mgr';\r\nimport { Material } from '../../asset/assets/material';\r\nimport { Mesh } from '../../3d/assets/mesh';\r\nimport { TextureCube } from '../../asset/assets/texture-cube';\r\nimport { UNIFORM_ENVIRONMENT_BINDING, UNIFORM_DIFFUSEMAP_BINDING } from '../../rendering/define';\r\nimport { MaterialInstance } from '../core/material-instance';\r\nimport { Model } from './model';\r\nimport type { SkyboxInfo } from '../../scene-graph/scene-globals';\r\nimport { Root } from '../../root';\r\nimport { GlobalDSManager } from '../../rendering/global-descriptor-set-manager';\r\nimport { deviceManager } from '../../gfx';\r\nimport { Enum, cclegacy } from '../../core';\r\nimport { getPipelineSceneData } from '../../rendering/pipeline-scene-data-utils';\r\n\r\nlet skybox_mesh: Mesh | null = null;\r\nlet skybox_material: Material | null = null;\r\n\r\nexport enum EnvironmentLightingType {\r\n    /**\r\n     * @zh\r\n     * 半球漫反射\r\n     * @en\r\n     * hemisphere diffuse\r\n     * @readonly\r\n     */\r\n    HEMISPHERE_DIFFUSE = 0,\r\n    /**\r\n     * @zh\r\n     * 半球漫反射和环境反射\r\n     * @en\r\n     * hemisphere diffuse and Environment reflection\r\n     * @readonly\r\n     */\r\n    AUTOGEN_HEMISPHERE_DIFFUSE_WITH_REFLECTION = 1,\r\n    /**\r\n     * @zh\r\n     * 漫反射卷积图和环境反射\r\n     * @en\r\n     * diffuse convolution map and environment reflection\r\n     * @readonly\r\n     */\r\n    DIFFUSEMAP_WITH_REFLECTION = 2,\r\n}\r\nEnum(EnvironmentLightingType);\r\n\r\n/**\r\n * @en The skybox configuration of the render scene,\r\n * currently some rendering options like hdr and ibl lighting configuration is also here.\r\n * @zh 渲染场景的天空盒配置，目前一些渲染配置，比如 HDR 模式和环境光照配置也在 Skybox 中。\r\n */\r\nexport class Skybox {\r\n    /**\r\n     * @en The Model object of the skybox\r\n     * @zh 天空盒的 Model 对象\r\n     */\r\n    get model (): Model | null {\r\n        return this._model;\r\n    }\r\n\r\n    /**\r\n     * @en Whether activate skybox in the scene\r\n     * @zh 是否启用天空盒？\r\n     */\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled (val: boolean) {\r\n        this._enabled = val;\r\n        if (val) this.activate(); else this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @en Whether HDR mode is enabled\r\n     * @zh 是否启用HDR？\r\n     */\r\n    get useHDR (): boolean {\r\n        return this._useHDR;\r\n    }\r\n\r\n    set useHDR (val: boolean) {\r\n        this._useHDR = val;\r\n        this.setEnvMaps(this._envmapHDR, this._envmapLDR);\r\n    }\r\n\r\n    /**\r\n     * @en Whether use image based lighting for PBR materials\r\n     * @zh 是否启用IBL？\r\n     */\r\n    get useIBL (): boolean {\r\n        return this._useIBL;\r\n    }\r\n\r\n    set useIBL (val: boolean) {\r\n        this._useIBL = val;\r\n        this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @en Whether use diffuse convolution map lighting\r\n     * @zh 是否为IBL启用漫反射卷积图？\r\n     */\r\n    get useDiffuseMap (): boolean {\r\n        return this._useDiffuseMap;\r\n    }\r\n\r\n    set useDiffuseMap (val: boolean) {\r\n        this._useDiffuseMap = val;\r\n        this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @en Whether enable RGBE data support in skybox shader\r\n     * @zh 是否需要开启 shader 内的 RGBE 数据支持？\r\n     */\r\n    get isRGBE (): boolean {\r\n        if (this.envmap) {\r\n            return this.envmap.isRGBE;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether to use offline baked convolutional maps\r\n     * @zh 是否使用离线烘焙的卷积图？\r\n     */\r\n    get useConvolutionMap (): boolean {\r\n        if (this.reflectionMap) {\r\n            return this.reflectionMap.isUsingOfflineMipmaps();\r\n        }\r\n        if (this.envmap) {\r\n            return this.envmap.isUsingOfflineMipmaps();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en The texture cube used for the skybox\r\n     * @zh 使用的立方体贴图\r\n     */\r\n    get envmap (): TextureCube | null {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._envmapHDR;\r\n        } else {\r\n            return this._envmapLDR;\r\n        }\r\n    }\r\n    set envmap (val: TextureCube | null) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this.setEnvMaps(val, this._envmapLDR);\r\n        } else {\r\n            this.setEnvMaps(this._envmapHDR, val);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The texture cube used diffuse convolution map\r\n     * @zh 使用的漫反射卷积图\r\n     */\r\n    get diffuseMap (): TextureCube | null {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._diffuseMapHDR;\r\n        } else {\r\n            return this._diffuseMapLDR;\r\n        }\r\n    }\r\n    set diffuseMap (val: TextureCube | null) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this.setDiffuseMaps(val, this._diffuseMapLDR);\r\n        } else {\r\n            this.setDiffuseMaps(this._diffuseMapHDR, val);\r\n        }\r\n    }\r\n\r\n    get reflectionMap (): TextureCube | null {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._reflectionHDR;\r\n        } else {\r\n            return this._reflectionLDR;\r\n        }\r\n    }\r\n\r\n    get editableMaterial (): MaterialInstance | null {\r\n        return this._editableMaterial;\r\n    }\r\n\r\n    protected _envmapLDR: TextureCube | null = null;\r\n    protected _envmapHDR: TextureCube | null = null;\r\n    protected _diffuseMapLDR: TextureCube | null = null;\r\n    protected _diffuseMapHDR: TextureCube | null = null;\r\n    protected _globalDSManager: GlobalDSManager | null = null;\r\n    protected _model: Model | null = null;\r\n    protected _default: TextureCube | null = null;\r\n    protected _enabled = false;\r\n    protected _useIBL = false;\r\n    protected _useHDR = true;\r\n    protected _useDiffuseMap = false;\r\n    protected _editableMaterial: MaterialInstance | null = null;\r\n    protected _activated = false;\r\n    protected _reflectionHDR: TextureCube | null = null;\r\n    protected _reflectionLDR: TextureCube | null = null;\r\n    protected _rotationAngle = 0;\r\n\r\n    public initialize (skyboxInfo: SkyboxInfo): void {\r\n        this._activated = false;\r\n        this._enabled = skyboxInfo.enabled;\r\n        this._useIBL = skyboxInfo.useIBL;\r\n        this._useDiffuseMap = skyboxInfo.applyDiffuseMap;\r\n        this._useHDR = skyboxInfo.useHDR;\r\n    }\r\n\r\n    /**\r\n     * @en Set the environment maps for HDR and LDR mode\r\n     * @zh 为 HDR 和 LDR 模式设置环境贴图\r\n     * @param envmapHDR @en Environment map for HDR mode @zh HDR 模式下的环境贴图\r\n     * @param envmapLDR @en Environment map for LDR mode @zh LDR 模式下的环境贴图\r\n     */\r\n    public setEnvMaps (envmapHDR: TextureCube | null, envmapLDR: TextureCube | null): void {\r\n        this._envmapHDR = envmapHDR;\r\n        this._envmapLDR = envmapLDR;\r\n\r\n        this._updateGlobalBinding();\r\n        this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @en Set the diffuse maps\r\n     * @zh 设置环境光漫反射贴图\r\n     * @param diffuseMapHDR @en Diffuse map for HDR mode @zh HDR 模式下的漫反射贴图\r\n     * @param diffuseMapLDR  @en Diffuse map for LDR mode @zh LDR 模式下的漫反射贴图\r\n     */\r\n    public setDiffuseMaps (diffuseMapHDR: TextureCube | null, diffuseMapLDR: TextureCube | null): void {\r\n        this._diffuseMapHDR = diffuseMapHDR;\r\n        this._diffuseMapLDR = diffuseMapLDR;\r\n        this._updateGlobalBinding();\r\n        this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @en Set custom skybox material\r\n     * @zh 设置自定义的天空盒材质\r\n     * @param skyboxMat  @en Skybox material @zh 天空盒材质\r\n     */\r\n    public setSkyboxMaterial (skyboxMat: Material | null): void {\r\n        if (skyboxMat) {\r\n            this._editableMaterial = new MaterialInstance({ parent: skyboxMat });\r\n            this._editableMaterial.recompileShaders({ USE_RGBE_CUBEMAP: this.isRGBE });\r\n        } else {\r\n            this._editableMaterial = null;\r\n        }\r\n        this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @en Set the environment reflection convolution map\r\n     * @zh 设置环境反射卷积图\r\n     * @param reflectionHDR  @en Reflection convolution map for HDR mode @zh HDR 模式下的反射卷积图\r\n     * @param reflectionLDR  @en Reflection convolution map for LDR mode @zh LDR 模式下的反射卷积图\r\n     */\r\n    public setReflectionMaps (reflectionHDR: TextureCube | null, reflectionLDR: TextureCube | null): void {\r\n        this._reflectionHDR = reflectionHDR;\r\n        this._reflectionLDR = reflectionLDR;\r\n        this._updateGlobalBinding();\r\n        this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @en Set skybox rotation angle\r\n     * @zh 设置天空盒旋转角度\r\n     * @param angle  @en rotation angle @zh 旋转角度\r\n     */\r\n    public setRotationAngle (angle: number): void {\r\n        this._rotationAngle = angle;\r\n    }\r\n\r\n    public getRotationAngle (): number {\r\n        return this._rotationAngle;\r\n    }\r\n\r\n    public updateMaterialRenderInfo (): void {\r\n        this._updateGlobalBinding();\r\n        this._updatePipeline();\r\n    }\r\n\r\n    public activate (): void {\r\n        const pipeline = cclegacy.director.root.pipeline;\r\n        this._globalDSManager = pipeline.globalDSManager;\r\n        this._default = builtinResMgr.get<TextureCube>('default-cube-texture');\r\n\r\n        if (!this._model) {\r\n            this._model = (cclegacy.director.root as Root).createModel(cclegacy.renderer.scene.Model as typeof Model);\r\n            //The skybox material has added properties of 'environmentMap' that need local ubo\r\n            //this._model._initLocalDescriptors = () => {};\r\n            //this._model._initWorldBoundDescriptors = () => {};\r\n        }\r\n        let isRGBE = this._default.isRGBE;\r\n        let isUseConvolutionMap = this._default.isUsingOfflineMipmaps();\r\n        if (this.envmap) {\r\n            isRGBE = this.envmap.isRGBE;\r\n            isUseConvolutionMap = this.envmap.isUsingOfflineMipmaps();\r\n        }\r\n\r\n        if (!skybox_material) {\r\n            const mat = new Material();\r\n            mat.initialize({ effectName: 'pipeline/skybox', defines: { USE_RGBE_CUBEMAP: isRGBE } });\r\n            skybox_material = new MaterialInstance({ parent: mat });\r\n        }\r\n\r\n        if (this.enabled) {\r\n            if (!skybox_mesh) {\r\n                skybox_mesh = cclegacy.utils.createMesh(cclegacy.primitives.box({ width: 2, height: 2, length: 2 })) as Mesh;\r\n            }\r\n            if (this._editableMaterial) {\r\n                this._model.initSubModel(0, skybox_mesh.renderingSubMeshes[0], this._editableMaterial);\r\n            } else {\r\n                this._model.initSubModel(0, skybox_mesh.renderingSubMeshes[0], skybox_material);\r\n            }\r\n        }\r\n\r\n        if (!this.envmap) {\r\n            this.envmap = this._default;\r\n        }\r\n\r\n        if (!this.diffuseMap) {\r\n            this.diffuseMap = this._default;\r\n        }\r\n\r\n        this._updateGlobalBinding();\r\n        this._updatePipeline();\r\n\r\n        this._activated = true;\r\n    }\r\n\r\n    protected _updatePipeline (): void {\r\n        const root = cclegacy.director.root as Root;\r\n        const pipeline = root.pipeline;\r\n\r\n        const useIBLValue = this.useIBL ? (this.isRGBE ? 2 : 1) : 0;\r\n        const useDiffuseMapValue = (this.useIBL && this.useDiffuseMap && this.diffuseMap && this.diffuseMap !== this._default)\r\n            ? (this.isRGBE ? 2 : 1) : 0;\r\n        const useHDRValue = this.useHDR;\r\n        const useConvMapValue = this.useConvolutionMap;\r\n\r\n        if (pipeline.macros.CC_USE_IBL !== useIBLValue\r\n            || pipeline.macros.CC_USE_DIFFUSEMAP !== useDiffuseMapValue\r\n            || pipeline.macros.CC_USE_HDR !== useHDRValue\r\n            || pipeline.macros.CC_IBL_CONVOLUTED !== useConvMapValue) {\r\n            pipeline.macros.CC_USE_IBL = useIBLValue;\r\n            pipeline.macros.CC_USE_DIFFUSEMAP = useDiffuseMapValue;\r\n            pipeline.macros.CC_USE_HDR = useHDRValue;\r\n            pipeline.macros.CC_IBL_CONVOLUTED = useConvMapValue;\r\n\r\n            if (this._activated) {\r\n                root.onGlobalPipelineStateChanged();\r\n            }\r\n        }\r\n\r\n        if (this.enabled) {\r\n            const envmap = this.envmap ? this.envmap : this._default;\r\n            const skyboxMat = this._editableMaterial ? this._editableMaterial : skybox_material;\r\n            if (skyboxMat) {\r\n                skyboxMat.setProperty('environmentMap', envmap);\r\n                skyboxMat.recompileShaders({ USE_RGBE_CUBEMAP: this.isRGBE });\r\n            }\r\n            if (this._model) {\r\n                this._model.setSubModelMaterial(0, skyboxMat!);\r\n                this._updateSubModes();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _updateGlobalBinding (): void {\r\n        // If it is a new pipeline, you should not set it up because it has its own configuration logic.\r\n        if (cclegacy.rendering) {\r\n            return;\r\n        }\r\n        if (this._globalDSManager) {\r\n            const device = deviceManager.gfxDevice;\r\n            if (this.reflectionMap) {\r\n                const texture = this.reflectionMap.getGFXTexture()!;\r\n                const sampler = device.getSampler(this.reflectionMap.getSamplerInfo());\r\n                this._globalDSManager.bindSampler(UNIFORM_ENVIRONMENT_BINDING, sampler);\r\n                this._globalDSManager.bindTexture(UNIFORM_ENVIRONMENT_BINDING, texture);\r\n            } else {\r\n                const envmap = this.envmap ? this.envmap : this._default;\r\n                if (envmap) {\r\n                    const texture = envmap.getGFXTexture()!;\r\n                    const sampler = device.getSampler(envmap.getSamplerInfo());\r\n                    this._globalDSManager.bindSampler(UNIFORM_ENVIRONMENT_BINDING, sampler);\r\n                    this._globalDSManager.bindTexture(UNIFORM_ENVIRONMENT_BINDING, texture);\r\n                }\r\n            }\r\n\r\n            const diffuseMap = this.diffuseMap ? this.diffuseMap : this._default;\r\n            if (diffuseMap) {\r\n                const texture = diffuseMap.getGFXTexture()!;\r\n                const sampler = device.getSampler(diffuseMap.getSamplerInfo());\r\n                this._globalDSManager.bindSampler(UNIFORM_DIFFUSEMAP_BINDING, sampler);\r\n                this._globalDSManager.bindTexture(UNIFORM_DIFFUSEMAP_BINDING, texture);\r\n            }\r\n\r\n            this._globalDSManager.update();\r\n        }\r\n    }\r\n\r\n    protected _updateSubModes (): void {\r\n        if (this._model) {\r\n            const subModels = this._model.subModels;\r\n            for (let i = 0; i < subModels.length; i++) {\r\n                subModels[i].update();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ncclegacy.Skybox = Skybox;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Material } from '../../asset/assets/material';\r\nimport { PassInstance } from './pass-instance';\r\nimport { MacroRecord } from './pass-utils';\r\nimport { PassOverrides } from './pass';\r\nimport { Renderer } from '../../misc/renderer';\r\n\r\nexport interface IMaterialInstanceInfo {\r\n    parent: Material;\r\n    owner?: Renderer;\r\n    subModelIdx?: number;\r\n}\r\n\r\n/**\r\n * @zh\r\n * 材质实例，当有材质修改需求时，根据材质资源创建的，可任意定制的实例。\r\n */\r\nexport class MaterialInstance extends Material {\r\n    get parent (): Material {\r\n        return this._parent;\r\n    }\r\n\r\n    get owner (): Renderer | null {\r\n        return this._owner;\r\n    }\r\n\r\n    protected _passes: PassInstance[] = [];\r\n\r\n    private declare _parent: Material;\r\n    private declare _owner: Renderer | null;\r\n    private _subModelIdx = 0;\r\n\r\n    constructor (info: IMaterialInstanceInfo) {\r\n        super();\r\n        this._parent = info.parent;\r\n        this._owner = info.owner || null;\r\n        this._subModelIdx = info.subModelIdx || 0;\r\n        this.copy(this._parent);\r\n    }\r\n\r\n    public recompileShaders (overrides: MacroRecord, passIdx?: number): void {\r\n        if (!this._passes || !this.effectAsset) { return; }\r\n        if (passIdx === undefined) {\r\n            this._passes.forEach((pass) => {\r\n                pass.tryCompile(overrides);\r\n            });\r\n        } else {\r\n            this._passes[passIdx].tryCompile(overrides);\r\n        }\r\n    }\r\n\r\n    public overridePipelineStates (overrides: PassOverrides, passIdx?: number): void {\r\n        if (!this._passes || !this.effectAsset) { return; }\r\n        const passInfos = this.effectAsset.techniques[this.technique].passes;\r\n        if (passIdx === undefined) {\r\n            for (let i = 0; i < this._passes.length; i++) {\r\n                const pass = this._passes[i];\r\n                const state = this._states[i] || (this._states[i] = {});\r\n                for (const key in overrides) { state[key] = overrides[key]; }\r\n                pass.overridePipelineStates(passInfos[pass.passIndex], state);\r\n            }\r\n        } else {\r\n            const state = this._states[passIdx] || (this._states[passIdx] = {});\r\n            for (const key in overrides) { state[key] = overrides[key]; }\r\n            this._passes[passIdx].overridePipelineStates(passInfos[passIdx], state);\r\n        }\r\n    }\r\n\r\n    public destroy (): boolean {\r\n        this._doDestroy();\r\n        return true;\r\n    }\r\n\r\n    public onPassStateChange (dontNotify: boolean): void {\r\n        this._hash = Material.getHash(this);\r\n        if (!dontNotify && this._owner) {\r\n            this._owner._onRebuildPSO(this._subModelIdx, this);\r\n        }\r\n    }\r\n\r\n    protected _createPasses (): PassInstance[] {\r\n        const passes: PassInstance[] = [];\r\n        const parentPasses = this._parent.passes;\r\n        if (!parentPasses) { return passes; }\r\n        for (let k = 0; k < parentPasses.length; ++k) {\r\n            passes.push(new PassInstance(parentPasses[k], this));\r\n        }\r\n        return passes;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Enum, Color, Vec4, cclegacy } from '../../core';\r\nimport { FogInfo } from '../../scene-graph/scene-globals';\r\nimport { SRGBToLinear } from '../../rendering/pipeline-funcs';\r\nimport { Root } from '../../root';\r\n\r\nconst _v4 = new Vec4();\r\n\r\n/**\r\n * @zh\r\n * 全局雾类型。\r\n * @en\r\n * The global fog type\r\n * @static\r\n * @enum FogInfo.FogType\r\n */\r\nexport const FogType = Enum({\r\n    /**\r\n     * @zh\r\n     * 线性雾。\r\n     * @en\r\n     * Linear fog\r\n     * @readonly\r\n     */\r\n    LINEAR: 0,\r\n    /**\r\n     * @zh\r\n     * 指数雾。\r\n     * @en\r\n     * Exponential fog\r\n     * @readonly\r\n     */\r\n    EXP: 1,\r\n    /**\r\n     * @zh\r\n     * 指数平方雾。\r\n     * @en\r\n     * Exponential square fog\r\n     * @readonly\r\n     */\r\n    EXP_SQUARED: 2,\r\n    /**\r\n     * @zh\r\n     * 层叠雾。\r\n     * @en\r\n     * Layered fog\r\n     * @readonly\r\n     */\r\n    LAYERED: 3,\r\n});\r\n\r\nexport const FOG_TYPE_NONE = FogType.LAYERED + 1;\r\n\r\n/**\r\n * @en The fog representation in the render scene.\r\n * @zh 渲染场景中的全局雾效配置\r\n */\r\nexport class Fog {\r\n    constructor () {}\r\n    /**\r\n     * @zh 是否启用全局雾效\r\n     * @en Enable global fog\r\n     */\r\n    set enabled (val: boolean) {\r\n        this._enabled = val;\r\n        if (!val) {\r\n            this._type = FOG_TYPE_NONE;\r\n            this._updatePipeline();\r\n        } else {\r\n            this.activate();\r\n        }\r\n    }\r\n\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    /**\r\n     * @zh 是否启用精确雾效(像素雾)计算\r\n     * @en Enable accurate fog (pixel fog)\r\n     */\r\n    set accurate (val: boolean) {\r\n        this._accurate = val;\r\n        this._updatePipeline();\r\n    }\r\n\r\n    get accurate (): boolean {\r\n        return this._accurate;\r\n    }\r\n\r\n    /**\r\n     * @zh 全局雾颜色\r\n     * @en Global fog color\r\n     */\r\n    set fogColor (val: Readonly<Color>) {\r\n        this._fogColor.set(val);\r\n\r\n        _v4.set(val.x, val.y, val.z, val.w);\r\n        SRGBToLinear(this._colorArray, _v4);\r\n    }\r\n\r\n    get fogColor (): Color {\r\n        return this._fogColor;\r\n    }\r\n\r\n    /**\r\n     * @zh 当前雾化类型。\r\n     * @en The current global fog type.\r\n     * @returns {FogType}\r\n     * Returns the current global fog type\r\n     * - -1:Disable global Fog\r\n     * - 0:Linear fog\r\n     * - 1:Exponential fog\r\n     * - 2:Exponential square fog\r\n     * - 3:Layered fog\r\n     */\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n    set type (val: number) {\r\n        this._type = this.enabled ? val : FOG_TYPE_NONE;\r\n        if (this.enabled) this._updatePipeline();\r\n    }\r\n\r\n    /**\r\n     * @zh 全局雾浓度\r\n     * @en Global fog density\r\n     */\r\n    get fogDensity (): number {\r\n        return this._fogDensity;\r\n    }\r\n\r\n    set fogDensity (val: number) {\r\n        this._fogDensity = val;\r\n    }\r\n    /**\r\n     * @zh 雾效起始位置，只适用于线性雾\r\n     * @en Global fog start position, only for linear fog\r\n     */\r\n    get fogStart (): number {\r\n        return this._fogStart;\r\n    }\r\n\r\n    set fogStart (val: number) {\r\n        this._fogStart = val;\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效结束位置，只适用于线性雾\r\n     * @en Global fog end position, only for linear fog\r\n     */\r\n    get fogEnd (): number {\r\n        return this._fogEnd;\r\n    }\r\n\r\n    set fogEnd (val: number) {\r\n        this._fogEnd = val;\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效衰减\r\n     * @en Global fog attenuation\r\n     */\r\n    get fogAtten (): number {\r\n        return this._fogAtten;\r\n    }\r\n\r\n    set fogAtten (val: number) {\r\n        this._fogAtten = val;\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效顶部范围，只适用于层级雾\r\n     * @en Global fog top range, only for layered fog\r\n     */\r\n    get fogTop (): number {\r\n        return this._fogTop;\r\n    }\r\n\r\n    set fogTop (val: number) {\r\n        this._fogTop = val;\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效范围，只适用于层级雾\r\n     * @en Global fog range, only for layered fog\r\n     */\r\n    get fogRange (): number {\r\n        return this._fogRange;\r\n    }\r\n\r\n    set fogRange (val: number) {\r\n        this._fogRange = val;\r\n    }\r\n    get colorArray (): Readonly<Vec4> {\r\n        return this._colorArray;\r\n    }\r\n    protected _fogColor = new Color('#C8C8C8');\r\n    protected _colorArray: Vec4 = new Vec4(0.2, 0.2, 0.2, 1.0);\r\n    protected _enabled = false;\r\n    protected _accurate = false;\r\n    protected _type = 0;\r\n    protected _fogDensity = 0.3;\r\n    protected _fogStart = 0.5;\r\n    protected _fogEnd = 300;\r\n    protected _fogAtten = 5;\r\n    protected _fogTop = 1.5;\r\n    protected _fogRange = 1.2;\r\n    protected _activated = false;\r\n\r\n    public initialize (fogInfo: FogInfo): void {\r\n        this._activated = false;\r\n        this.fogColor = fogInfo.fogColor;\r\n        this._enabled = fogInfo.enabled;\r\n        this._type = this.enabled ? fogInfo.type : FOG_TYPE_NONE;\r\n        this._accurate = fogInfo.accurate;\r\n        this.fogDensity = fogInfo.fogDensity;\r\n        this.fogStart = fogInfo.fogStart;\r\n        this.fogEnd = fogInfo.fogEnd;\r\n        this.fogAtten = fogInfo.fogAtten;\r\n        this.fogTop = fogInfo.fogTop;\r\n        this.fogRange = fogInfo.fogRange;\r\n    }\r\n\r\n    public activate (): void {\r\n        this._updatePipeline();\r\n        this._activated = true;\r\n    }\r\n\r\n    protected _updatePipeline (): void {\r\n        const root = cclegacy.director.root as Root;\r\n        const value = this.enabled ? this.type : FOG_TYPE_NONE;\r\n        const accurateValue = this.accurate ? 1 : 0;\r\n        const pipeline = root.pipeline;\r\n        if (pipeline.macros.CC_USE_FOG === value && pipeline.macros.CC_USE_ACCURATE_FOG === accurateValue) {\r\n            return;\r\n        }\r\n        pipeline.macros.CC_USE_FOG = value;\r\n        pipeline.macros.CC_USE_ACCURATE_FOG = accurateValue;\r\n        if (this._activated) {\r\n            root.onGlobalPipelineStateChanged();\r\n        }\r\n    }\r\n}\r\n\r\ncclegacy.Fog = Fog;\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { Enum } from '../core/value-types';\r\n\r\n/**\r\n * @en Node's coordinate space\r\n * @zh 节点的坐标空间\r\n */\r\nexport enum NodeSpace {\r\n    LOCAL,\r\n    WORLD,\r\n}\r\n\r\n/**\r\n * @en Bit masks for node's transformation\r\n * @zh 节点的空间变换位标记\r\n */\r\nexport enum TransformBit {\r\n    /**\r\n     * @en No change\r\n     * @zh 无改变\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * @en Translation changed\r\n     * @zh 节点位置改变\r\n     */\r\n    POSITION = (1 << 0),\r\n    /**\r\n     * @en Rotation changed\r\n     * @zh 节点旋转\r\n     */\r\n    ROTATION = (1 << 1),\r\n    /**\r\n     * @en Scale changed\r\n     * @zh 节点缩放\r\n     */\r\n    SCALE = (1 << 2),\r\n    /**\r\n     * @en Skew changed\r\n     * @zh 节点斜切\r\n     */\r\n    SKEW = (1 << 3),\r\n    /**\r\n     * @en Rotation or scale changed\r\n     * @zh 节点旋转及缩放\r\n     */\r\n    RS = TransformBit.ROTATION | TransformBit.SCALE,\r\n\r\n    /**\r\n     * @en Rotation, scale or skew changed\r\n     */\r\n    RSS = TransformBit.ROTATION | TransformBit.SCALE | TransformBit.SKEW,\r\n    /**\r\n     * @en Translation, rotation or scale changed\r\n     * @zh 节点平移，旋转及缩放\r\n     */\r\n    TRS = TransformBit.POSITION | TransformBit.ROTATION | TransformBit.SCALE,\r\n    /**\r\n     * @en Invert mask of [[TRS]]\r\n     * @zh [[TRS]] 的反向掩码\r\n     */\r\n    TRS_MASK = ~TransformBit.TRS,\r\n}\r\n\r\nlegacyCC.internal.TransformBit = TransformBit;\r\n\r\n/**\r\n * @en Node's mobility\r\n * @zh 节点的移动性\r\n */\r\nexport const MobilityMode = Enum({\r\n    /**\r\n     * @en Static node\r\n     * @zh 静态节点\r\n     */\r\n    Static: 0,\r\n\r\n    /**\r\n     * @en Stationary node\r\n     * @zh 固定节点\r\n     */\r\n    Stationary: 1,\r\n\r\n    /**\r\n     * @en Movable node\r\n     * @zh 可移动节点\r\n     */\r\n    Movable: 2,\r\n});\r\n","import { Enum, cclegacy } from '../../core';\r\nimport { PostSettingsInfo } from '../../scene-graph/scene-globals';\r\n\r\nexport const ToneMappingType = Enum({\r\n    DEFAULT: 0,\r\n    LINEAR: 1,\r\n});\r\n\r\nexport  class PostSettings {\r\n    protected _toneMappingType = ToneMappingType.DEFAULT;\r\n    protected _activated = false;\r\n\r\n    set toneMappingType (val) {\r\n        this._toneMappingType = val;\r\n        this._updatePipeline();\r\n    }\r\n    get toneMappingType (): number {\r\n        return this._toneMappingType;\r\n    }\r\n    public initialize (postSettingsInfo: PostSettingsInfo): void {\r\n        this._toneMappingType = postSettingsInfo.toneMappingType;\r\n    }\r\n\r\n    public activate (): void {\r\n        this._updatePipeline();\r\n        this._activated = true;\r\n    }\r\n\r\n    protected _updatePipeline (): void {\r\n        const root = cclegacy.director.root;\r\n        const pipeline = root.pipeline;\r\n        pipeline.macros.CC_TONE_MAPPING_TYPE = this._toneMappingType;\r\n        if (this._activated) {\r\n            root.onGlobalPipelineStateChanged();\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { JSB } from 'internal:constants';\r\nimport { UIRenderer } from '../2d/framework/ui-renderer';\r\nimport { warnID } from '../core/platform/debug';\r\nimport { UIMeshRenderer } from '../2d';\r\nimport type { Node } from './node';\r\nimport type { UITransform } from '../2d/framework';\r\nimport type { UISkew } from '../2d/framework/ui-skew';\r\n\r\n/**\r\n * @en Node's UI properties abstraction\r\n * @zh 节点上 UI 相关的属性抽象类\r\n */\r\nexport class NodeUIProperties {\r\n    /**\r\n     * @en The UI transform component\r\n     * @zh UI 变换组件\r\n     */\r\n    get uiTransformComp (): UITransform | null {\r\n        if (!this._uiTransformComp) {\r\n            this._uiTransformComp = this._node.getComponent('cc.UITransform') as UITransform;\r\n        }\r\n\r\n        return this._uiTransformComp;\r\n    }\r\n    set uiTransformComp (value: UITransform | null) {\r\n        this._uiTransformComp = value;\r\n    }\r\n\r\n    /**\r\n     * @en The base UI component\r\n     * @zh UI 基类组件\r\n     */\r\n    get uiComp (): UIMeshRenderer | UIRenderer | null {\r\n        return this._uiComp;\r\n    }\r\n    set uiComp (comp: UIMeshRenderer | UIRenderer | null) {\r\n        if (this._uiComp && comp) {\r\n            warnID(12002);\r\n            return;\r\n        }\r\n        this._uiComp = comp;\r\n    }\r\n\r\n    private _uiComp: UIMeshRenderer | UIRenderer | null = null;\r\n\r\n    /**\r\n     * @en The opacity of the UI node for final rendering\r\n     * @zh 最终显示的 UI 透明度，受父节点透明度影响\r\n     */\r\n    private _opacity = 1;\r\n    /**\r\n     * NOTE: engineInternal tag cannot only mark opacity setter as internal.\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public setOpacity (v: number): void { this._opacity = v; }\r\n    public get opacity (): number {\r\n        if (JSB) {\r\n            this._opacity = (this._node as any)._getFinalOpacity();\r\n        }\r\n        return this._opacity;\r\n    }\r\n\r\n    /**\r\n     * @en The opacity of the UI node itself\r\n     * @zh 本节点的 UI 透明度\r\n     */\r\n    private _localOpacity = 1;\r\n    get localOpacity (): number { return this._localOpacity; }\r\n    set localOpacity (val) {\r\n        this._localOpacity = val;\r\n        this.colorDirty = true;\r\n        if (JSB) {\r\n            const node = this._node as any;\r\n            node._colorDirty = true;\r\n            node._setLocalOpacity(val);\r\n        }\r\n    }\r\n\r\n    public colorDirty = true;\r\n    protected _uiTransformComp: UITransform | null = null;\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _uiSkewComp: UISkew | null = null;\r\n    private declare _node: Node;\r\n\r\n    constructor (node: Node) {\r\n        this._node = node;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.4\r\n     */\r\n    public applyOpacity (effectOpacity: number): void {\r\n        this._opacity = this._localOpacity * effectOpacity;\r\n    }\r\n\r\n    /**\r\n     * @en Make the opacity state of node tree is dirty, not effect anymore\r\n     * @zh 为结点树的透明度状态设置脏标签，不再有效果\r\n     * @deprecated since v3.4\r\n     */\r\n    public static markOpacityTree (node, isDirty = true): void {}\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, DEV, TEST } from 'internal:constants';\r\nimport { CCObjectFlags } from '../core/data/object';\r\nimport * as js from '../core/utils/js';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { error, errorID, getError } from '../core/platform/debug';\r\nimport { Component } from './component';\r\n\r\nconst Destroying = CCObjectFlags.Destroying;\r\nconst IS_PREVIEW = !!legacyCC.GAME_VIEW;\r\n\r\nexport function nodePolyfill (Node): void {\r\n    if ((EDITOR && !IS_PREVIEW) || TEST) {\r\n        Node.prototype._onPreDestroy = function (): boolean {\r\n            const destroyByParent: boolean = this._onPreDestroyBase();\r\n            if (!destroyByParent) {\r\n                // ensure this node can reattach to scene by undo system\r\n                // (simulate some destruct logic to make undo system work correctly)\r\n                this._parent = null;\r\n            }\r\n            return destroyByParent;\r\n        };\r\n    }\r\n\r\n    if (EDITOR || TEST) {\r\n        Node.prototype._checkMultipleComp = function (ctor): boolean {\r\n            const existing = this.getComponent(ctor._disallowMultiple);\r\n            if (existing) {\r\n                if (existing.constructor === ctor) {\r\n                    throw Error(getError(3805, js.getClassName(ctor), this._name as string));\r\n                } else {\r\n                    throw Error(getError(3806, js.getClassName(ctor), this._name as string, js.getClassName(existing)));\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * @method _getDependComponent\r\n         * @param {Component} depended\r\n         * @return {Component[]}\r\n         */\r\n        Node.prototype._getDependComponent = function (depended): Component[] {\r\n            const dependant: Component[] = [];\r\n            for (let i = 0; i < this._components.length; i++) {\r\n                const comp: Component = this._components[i];\r\n                if (comp !== depended && comp.isValid && !legacyCC.Object._willDestroy(comp)) {\r\n                    const reqComps = (comp.constructor as typeof Component)._requireComponent;\r\n                    if (reqComps) {\r\n                        if (Array.isArray(reqComps)) {\r\n                            for (let i = 0; i < reqComps.length; i++) {\r\n                                if (depended instanceof reqComps[i]) {\r\n                                    dependant.push(comp);\r\n                                }\r\n                            }\r\n                        } else if (depended instanceof reqComps) {\r\n                            dependant.push(comp);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return dependant;\r\n        };\r\n        /**\r\n         * This api should only used by undo system\r\n         * @method _addComponentAt\r\n         * @param {Component} comp\r\n         * @param {Number} index\r\n         */\r\n        Node.prototype._addComponentAt = function (comp: Component, index: number): void {\r\n            if (this._objFlags & Destroying) {\r\n                return error('isDestroying');\r\n            }\r\n            if (!(comp instanceof legacyCC.Component)) {\r\n                return errorID(3811);\r\n            }\r\n            if (index > this._components.length) {\r\n                return errorID(3812);\r\n            }\r\n\r\n            // recheck attributes because script may changed\r\n            const ctor = comp.constructor as any;\r\n            if (ctor._disallowMultiple) {\r\n                if (!this._checkMultipleComp(ctor)) {\r\n                    return undefined;\r\n                }\r\n            }\r\n\r\n            // remove dependency and return directly by editor\r\n            // const ReqComp = ctor._requireComponent;\r\n            // if (ReqComp && !this.getComponent(ReqComp)) {\r\n            //     if (index === this._components.length) {\r\n            //         // If comp should be last component, increase the index because required component added\r\n            //         ++index;\r\n            //     }\r\n            //     const depended = this.addComponent(ReqComp);\r\n            //     if (!depended) {\r\n            //         // depend conflicts\r\n            //         return null;\r\n            //     }\r\n            // }\r\n\r\n            comp.node = this;\r\n            this._components.splice(index, 0, comp);\r\n            if (EDITOR && !IS_PREVIEW && EditorExtends.Node && EditorExtends.Component) {\r\n                const node = EditorExtends.Node.getNode(this._id as string);\r\n                if (node) {\r\n                    EditorExtends.Component.add(comp._id, comp);\r\n                }\r\n            }\r\n            if (this._activeInHierarchy) {\r\n                legacyCC.director._nodeActivator.activateComp(comp);\r\n            }\r\n            return undefined;\r\n        };\r\n\r\n        Node.prototype.onRestore = function (): void {\r\n            // check activity state\r\n            const shouldActiveNow = this._active && !!(this._parent && this._parent._activeInHierarchy);\r\n            if (this._activeInHierarchy !== shouldActiveNow) {\r\n                legacyCC.director._nodeActivator.activateNode(this, shouldActiveNow);\r\n            }\r\n        };\r\n        Node.prototype._onRestoreBase = Node.prototype.onRestore;\r\n\r\n        Node.prototype._registerIfAttached = function (register): void {\r\n            if (!this._id) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(`Node(${this && this.name}}) is invalid or its data is corrupted.`);\r\n                return;\r\n            }\r\n            if (EditorExtends.Node && EditorExtends.Component) {\r\n                if (register) {\r\n                    EditorExtends.Node.add(this._id as string, this);\r\n\r\n                    for (let i = 0; i < this._components.length; i++) {\r\n                        const comp = this._components[i];\r\n                        if (!comp || !comp._id) {\r\n                            // eslint-disable-next-line no-console\r\n                            console.warn(`Component attached to node:${this.name} is corrupted`);\r\n                        } else {\r\n                            EditorExtends.Component.add(comp._id as string, comp);\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < this._components.length; i++) {\r\n                        const comp = this._components[i];\r\n                        if (!comp || !comp._id) {\r\n                            // eslint-disable-next-line no-console\r\n                            console.warn(`Component attached to node:${this.name} is corrupted`);\r\n                        } else {\r\n                            EditorExtends.Component.remove(comp._id as string);\r\n                        }\r\n                    }\r\n\r\n                    EditorExtends.Node.remove(this._id as string);\r\n                }\r\n            }\r\n\r\n            const children = this._children;\r\n            for (let i = 0, len = children.length; i < len; ++i) {\r\n                const child = children[i];\r\n                child._registerIfAttached!(register);\r\n            }\r\n        };\r\n    }\r\n\r\n    if (DEV) {\r\n        // promote debug info\r\n        js.get(Node.prototype as Record<string, any>, ' INFO ', function (this: any) {\r\n            let path = '';\r\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n            let node: any = this;\r\n            while (node && !(node instanceof legacyCC.Scene)) {\r\n                if (path) {\r\n                    path = `${node.name}/${path}`;\r\n                } else {\r\n                    path = node.name;\r\n                }\r\n                node = node._parent;\r\n            }\r\n            return `${this.name}, path: ${path}`;\r\n        });\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { CallbacksInvoker } from '../core/event/callbacks-invoker';\r\nimport { Event, EventMouse, EventTouch, Touch } from '../input/types';\r\nimport { Vec2 } from '../core/math/vec2';\r\nimport type { Node } from './node';\r\nimport { cclegacy } from '../core/global-exports';\r\nimport { Component } from './component';\r\nimport { NodeEventType } from './node-event';\r\nimport { InputEventType, SystemEventTypeUnion } from '../input/types/event-enum';\r\nimport { Pool } from '../core';\r\n\r\nconst _arrayPool = new Pool((): Array<Node> => new Array<Node>(16), 3);\r\nlet _currentHovered: Node | null = null;\r\nconst pos = new Vec2();\r\n\r\nconst _touchEvents = [\r\n    NodeEventType.TOUCH_START,\r\n    NodeEventType.TOUCH_MOVE,\r\n    NodeEventType.TOUCH_END,\r\n    NodeEventType.TOUCH_CANCEL,\r\n];\r\n\r\nconst _mouseEvents = [\r\n    NodeEventType.MOUSE_DOWN,\r\n    NodeEventType.MOUSE_ENTER,\r\n    NodeEventType.MOUSE_MOVE,\r\n    NodeEventType.MOUSE_LEAVE,\r\n    NodeEventType.MOUSE_UP,\r\n    NodeEventType.MOUSE_WHEEL,\r\n];\r\n\r\nexport interface IMask {\r\n    index: number;\r\n    comp: Component;\r\n}\r\n\r\nexport enum DispatcherEventType {\r\n    ADD_POINTER_EVENT_PROCESSOR,\r\n    REMOVE_POINTER_EVENT_PROCESSOR,\r\n    MARK_LIST_DIRTY,\r\n}\r\n\r\nconst globalCallbacksInvoker = new CallbacksInvoker<DispatcherEventType>();\r\n\r\n/**\r\n * @en The event processor for Node\r\n * @zh 节点事件类。\r\n */\r\nexport class NodeEventProcessor {\r\n    /**\r\n     * @internal\r\n     */\r\n    public static _maskComp: Constructor<Component> | null = null;\r\n    /**\r\n     * @internal\r\n     */\r\n    public static callbacksInvoker = globalCallbacksInvoker;\r\n\r\n    /**\r\n     * Whether the node event is enabled\r\n     */\r\n    public get isEnabled (): boolean {\r\n        return this._isEnabled;\r\n    }\r\n\r\n    /**\r\n     * The list of claimed touch ids\r\n     */\r\n    public claimedTouchIdList: number[] = [];\r\n\r\n    /**\r\n     * The masks in the parent chain of the node\r\n     */\r\n    public maskList: IMask[] | null = null;\r\n\r\n    /**\r\n     * To cache camera priority.\r\n     */\r\n    public cachedCameraPriority = 0;\r\n\r\n    /**\r\n     * To record whether the mouse move in at the previous mouse event.\r\n     */\r\n    public previousMouseIn = false;\r\n\r\n    /**\r\n     * The owner of node event processor.\r\n     */\r\n    public get node (): Node {\r\n        return this._node;\r\n    }\r\n\r\n    /**\r\n     * Target in bubbling phase.\r\n     */\r\n    public bubblingTarget: CallbacksInvoker<SystemEventTypeUnion> | null = null;\r\n\r\n    /**\r\n     * Target in capturing phase.\r\n     */\r\n    public capturingTarget: CallbacksInvoker<SystemEventTypeUnion> | null = null;\r\n\r\n    /**\r\n     * Whether the node has registered the mouse event callback\r\n     */\r\n    public shouldHandleEventMouse = false;\r\n    /**\r\n     * Whether the node has registered the touch event callback\r\n     */\r\n    public shouldHandleEventTouch = false;\r\n\r\n    // Whether dispatch cancel event when node is destroyed.\r\n    private _dispatchingTouch: Touch | null = null;\r\n    private _isEnabled = false;\r\n    private declare _node: Node;\r\n    // Indicate whether the mouse leaves window(only support one window). If it is\r\n    // true, then will not continue dispatching mouse events, such as mouse move events.\r\n    // Tested on macOS, mouse move events will be triggered once even mouse leaves the window.\r\n    private _isMouseLeaveWindow = false;\r\n\r\n    constructor (node: Node) {\r\n        this._node = node;\r\n    }\r\n\r\n    /**\r\n     * Set enable state of the node event processor\r\n     * @param value Enable state\r\n     * @param recursive Recursively set the state or not\r\n     * @returns void\r\n     */\r\n    public setEnabled (value: boolean, recursive = false): void {\r\n        if (this._isEnabled === value) {\r\n            return;\r\n        }\r\n        this._isEnabled = value;\r\n        const node = this.node;\r\n        const children = node.children;\r\n        if (value) {\r\n            this._attachMask();\r\n        }\r\n        globalCallbacksInvoker.emit(DispatcherEventType.MARK_LIST_DIRTY);\r\n        if (recursive && children.length > 0) {\r\n            for (let i = 0; i < children.length; ++i) {\r\n                const child = children[i];\r\n                child.eventProcessor.setEnabled(value, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    public reattach (): void {\r\n        this.node.walk((node) => {\r\n            const eventProcessor = node.eventProcessor;\r\n            // NOTE: When reattaching the current node, the masks of all its descendants need to be recalculated\r\n            const currentMaskList = eventProcessor._searchComponentsInParent(NodeEventProcessor._maskComp);\r\n            eventProcessor.maskList = currentMaskList;\r\n        });\r\n    }\r\n\r\n    public destroy (): void {\r\n        if (_currentHovered === this._node) {\r\n            _currentHovered = null;\r\n        }\r\n\r\n        if (this.capturingTarget) this.capturingTarget.clear();\r\n        if (this.bubblingTarget) this.bubblingTarget.clear();\r\n        globalCallbacksInvoker.emit(DispatcherEventType.REMOVE_POINTER_EVENT_PROCESSOR, this);\r\n        if (this._dispatchingTouch) {\r\n            // Dispatch touch cancel event when node is destroyed.\r\n            const cancelEvent = new EventTouch([this._dispatchingTouch], true, InputEventType.TOUCH_CANCEL);\r\n            cancelEvent.touch = this._dispatchingTouch;\r\n            this.dispatchEvent(cancelEvent);\r\n            this._dispatchingTouch = null;\r\n        }\r\n    }\r\n\r\n    public on (type: NodeEventType, callback: AnyFunction, target?: unknown, useCapture?: boolean): AnyFunction {\r\n        this._tryEmittingAddEvent(type);\r\n        useCapture = !!useCapture;\r\n        let invoker: CallbacksInvoker<SystemEventTypeUnion>;\r\n        if (useCapture) {\r\n            invoker = this.capturingTarget ??= this._newCallbacksInvoker();\r\n        } else {\r\n            invoker = this.bubblingTarget ??= this._newCallbacksInvoker();\r\n        }\r\n        invoker.on(type, callback, target);\r\n        return callback;\r\n    }\r\n\r\n    public once (type: NodeEventType, callback: AnyFunction, target?: unknown, useCapture?: boolean): AnyFunction {\r\n        this._tryEmittingAddEvent(type);\r\n        useCapture = !!useCapture;\r\n        let invoker: CallbacksInvoker<SystemEventTypeUnion>;\r\n        if (useCapture) {\r\n            invoker = this.capturingTarget ??= this._newCallbacksInvoker();\r\n        } else {\r\n            invoker = this.bubblingTarget ??= this._newCallbacksInvoker();\r\n        }\r\n\r\n        invoker.on(type, callback, target, true);\r\n        return callback;\r\n    }\r\n\r\n    public off (type: NodeEventType, callback?: AnyFunction, target?: unknown, useCapture?: boolean): void {\r\n        useCapture = !!useCapture;\r\n        let invoker: CallbacksInvoker<SystemEventTypeUnion> | null;\r\n        if (useCapture) {\r\n            invoker = this.capturingTarget;\r\n        } else {\r\n            invoker = this.bubblingTarget;\r\n        }\r\n        invoker?.off(type, callback, target);\r\n    }\r\n\r\n    public targetOff (target: unknown): void {\r\n        this.capturingTarget?.removeAll(target);\r\n        this.bubblingTarget?.removeAll(target);\r\n\r\n        // emit event\r\n        if (this.shouldHandleEventTouch && !this._hasTouchListeners()) {\r\n            this.shouldHandleEventTouch = false;\r\n        }\r\n        if (this.shouldHandleEventMouse && !this._hasMouseListeners()) {\r\n            this.shouldHandleEventMouse = false;\r\n        }\r\n        if (!this._hasPointerListeners()) {\r\n            globalCallbacksInvoker.emit(DispatcherEventType.REMOVE_POINTER_EVENT_PROCESSOR, this);\r\n        }\r\n    }\r\n\r\n    public emit (type: SystemEventTypeUnion, arg0?: any, arg1?: any, arg2?: any, arg3?: any, arg4?: any): void {\r\n        this.bubblingTarget?.emit(type, arg0, arg1, arg2, arg3, arg4);\r\n    }\r\n\r\n    public dispatchEvent (event: Event): void {\r\n        const owner = this.node;\r\n        let target: Node;\r\n        let i = 0;\r\n        event.target = owner;\r\n\r\n        // Event.CAPTURING_PHASE\r\n        const cachedArray = _arrayPool.alloc();\r\n        cachedArray.length = 0;\r\n        this.getCapturingTargets(event.type, cachedArray);\r\n        // capturing\r\n        event.eventPhase = 1;\r\n        for (i = cachedArray.length - 1; i >= 0; --i) {\r\n            target = cachedArray[i];\r\n            if (target.eventProcessor.capturingTarget) {\r\n                event.currentTarget = target;\r\n                // fire event\r\n                target.eventProcessor.capturingTarget.emit(event.type, event, cachedArray);\r\n                // check if propagation stopped\r\n                if (event.propagationStopped) {\r\n                    _arrayPool.free(cachedArray);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Event.AT_TARGET\r\n        // checks if destroyed in capturing callbacks\r\n        event.eventPhase = 2;\r\n        event.currentTarget = owner;\r\n        if (this.capturingTarget) {\r\n            this.capturingTarget.emit(event.type, event);\r\n        }\r\n        if (!event.propagationImmediateStopped && this.bubblingTarget) {\r\n            this.bubblingTarget.emit(event.type, event);\r\n        }\r\n\r\n        if (!event.propagationStopped && event.bubbles) {\r\n            // Event.BUBBLING_PHASE\r\n            cachedArray.length = 0;\r\n            this.getBubblingTargets(event.type, cachedArray);\r\n            // propagate\r\n            event.eventPhase = 3;\r\n            for (i = 0; i < cachedArray.length; ++i) {\r\n                target = cachedArray[i];\r\n                if (target.eventProcessor.bubblingTarget) {\r\n                    event.currentTarget = target;\r\n                    // fire event\r\n                    target.eventProcessor.bubblingTarget.emit(event.type, event);\r\n                    // check if propagation stopped\r\n                    if (event.propagationStopped) {\r\n                        _arrayPool.free(cachedArray);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        _arrayPool.free(cachedArray);\r\n    }\r\n\r\n    public hasEventListener (type: SystemEventTypeUnion, callback?: AnyFunction, target?: unknown): boolean {\r\n        let has = false;\r\n        if (this.bubblingTarget) {\r\n            has = this.bubblingTarget.hasEventListener(type, callback, target);\r\n        }\r\n        if (!has && this.capturingTarget) {\r\n            has = this.capturingTarget.hasEventListener(type, callback, target);\r\n        }\r\n        return has;\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 获得所提供的事件类型在目标捕获阶段监听的所有目标。\r\n     * 捕获阶段包括从根节点到目标节点的过程。\r\n     * 结果保存在数组参数中，并且必须从子节点排序到父节点。\r\n     *\r\n     * @param type - 一个监听事件类型的字符串。\r\n     * @param array - 接收目标的数组。\r\n     */\r\n    public getCapturingTargets (type: string, targets: Node[]): void {\r\n        let parent = this._node.parent;\r\n        while (parent) {\r\n            if (parent.eventProcessor.capturingTarget?.hasEventListener(type)) {\r\n                targets.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 获得所提供的事件类型在目标冒泡阶段监听的所有目标。\r\n     * 冒泡阶段目标节点到根节点的过程。\r\n     * 结果保存在数组参数中，并且必须从子节点排序到父节点。\r\n     *\r\n     * @param type - 一个监听事件类型的字符串。\r\n     * @param array - 接收目标的数组。\r\n     */\r\n    public getBubblingTargets (type: string, targets: Node[]): void {\r\n        let parent = this._node.parent;\r\n        while (parent) {\r\n            if (parent.eventProcessor.bubblingTarget?.hasEventListener(type)) {\r\n                targets.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n    }\r\n\r\n    public onUpdatingSiblingIndex (): void {\r\n        globalCallbacksInvoker.emit(DispatcherEventType.MARK_LIST_DIRTY);\r\n    }\r\n\r\n    private _searchComponentsInParent<T extends Component> (ctor: Constructor<T> | null): IMask[] | null {\r\n        const node = this.node;\r\n        if (ctor) {\r\n            let index = 0;\r\n            let list: IMask[] = [];\r\n            for (let curr: Node | null = node; curr && cclegacy.Node.isNode(curr); curr = curr.parent, ++index) {\r\n                const comp = curr.getComponent(ctor);\r\n                if (comp) {\r\n                    const next = {\r\n                        index,\r\n                        comp,\r\n                    };\r\n\r\n                    if (list) {\r\n                        list.push(next);\r\n                    } else {\r\n                        list = [next];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return list.length > 0 ? list : null;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private _attachMask (): void {\r\n        this.maskList = this._searchComponentsInParent(NodeEventProcessor._maskComp);\r\n    }\r\n\r\n    private _isTouchEvent (type: NodeEventType): boolean {\r\n        const index = _touchEvents.indexOf(type);\r\n        return index !== -1;\r\n    }\r\n\r\n    private _isMouseEvent (type: NodeEventType): boolean {\r\n        const index = _mouseEvents.indexOf(type);\r\n        return index !== -1;\r\n    }\r\n\r\n    private _hasTouchListeners (): boolean {\r\n        for (let i = 0; i < _touchEvents.length; ++i) {\r\n            const eventType = _touchEvents[i];\r\n            if (this.hasEventListener(eventType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _hasMouseListeners (): boolean {\r\n        for (let i = 0; i < _mouseEvents.length; ++i) {\r\n            const eventType = _mouseEvents[i];\r\n            if (this.hasEventListener(eventType)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _hasPointerListeners (): boolean {\r\n        const has = this._hasTouchListeners();\r\n        if (has) {\r\n            return true;\r\n        }\r\n        return this._hasMouseListeners();\r\n    }\r\n\r\n    private _tryEmittingAddEvent (typeToAdd: NodeEventType): void {\r\n        const isTouchEvent = this._isTouchEvent(typeToAdd);\r\n        const isMouseEvent = this._isMouseEvent(typeToAdd);\r\n        if (isTouchEvent) {\r\n            this.shouldHandleEventTouch = true;\r\n        } else if (isMouseEvent) {\r\n            this.shouldHandleEventMouse = true;\r\n        }\r\n        if ((isTouchEvent || isMouseEvent) && !this._hasPointerListeners()) {\r\n            globalCallbacksInvoker.emit(DispatcherEventType.ADD_POINTER_EVENT_PROCESSOR, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fix when reigster 'once' event callback, `this.off` method isn't be invoked after event is emitted.\r\n     * We need to inject some nodeEventProcessor's logic into the `callbacksInvoker.off` method.\r\n     * @returns {CallbacksInvoker<SystemEventTypeUnion>} decorated callbacks invoker\r\n     */\r\n    private _newCallbacksInvoker (): CallbacksInvoker<SystemEventTypeUnion> {\r\n        const callbacksInvoker = new CallbacksInvoker<SystemEventTypeUnion>();\r\n        callbacksInvoker._registerOffCallback(() => {\r\n            if (this.shouldHandleEventTouch && !this._hasTouchListeners()) {\r\n                this.shouldHandleEventTouch = false;\r\n            }\r\n            if (this.shouldHandleEventMouse && !this._hasMouseListeners()) {\r\n                this.shouldHandleEventMouse = false;\r\n            }\r\n            if (!this._hasPointerListeners()) {\r\n                globalCallbacksInvoker.emit(DispatcherEventType.REMOVE_POINTER_EVENT_PROCESSOR, this);\r\n            }\r\n        });\r\n        return callbacksInvoker;\r\n    }\r\n\r\n    // #region handle mouse event\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _handleEventMouse (eventMouse: EventMouse): boolean {\r\n        switch (eventMouse.type) {\r\n        case InputEventType.MOUSE_DOWN:\r\n            return this._handleMouseDown(eventMouse);\r\n        case InputEventType.MOUSE_MOVE:\r\n            return this._handleMouseMove(eventMouse);\r\n        case InputEventType.MOUSE_UP:\r\n            return this._handleMouseUp(eventMouse);\r\n        case InputEventType.MOUSE_WHEEL:\r\n            return this._handleMouseWheel(eventMouse);\r\n        case InputEventType.MOUSE_LEAVE:\r\n            return this._handleMouseLeave(eventMouse);\r\n        case InputEventType.MOUSE_ENTER:\r\n            return this._handleMouseEnter(eventMouse);\r\n        default:\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private _handleMouseDown (event: EventMouse): boolean {\r\n        const node = this._node;\r\n        const uiTransformComp = node._getUITransformComp();\r\n        if (!node || !uiTransformComp) {\r\n            return false;\r\n        }\r\n\r\n        event.getLocation(pos);\r\n\r\n        if (uiTransformComp.hitTest(pos, event.windowId)) {\r\n            event.type = NodeEventType.MOUSE_DOWN;\r\n            event.bubbles = true;\r\n            node.dispatchEvent(event);\r\n            event.propagationStopped = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _handleMouseMove (event: EventMouse): boolean {\r\n        const node = this._node;\r\n        const uiTransformComp = node._getUITransformComp();\r\n        if (!node || !uiTransformComp || this._isMouseLeaveWindow) {\r\n            return false;\r\n        }\r\n\r\n        event.getLocation(pos);\r\n\r\n        const hit = uiTransformComp.hitTest(pos, event.windowId);\r\n        if (hit) {\r\n            if (!this.previousMouseIn) {\r\n                // Fix issue when hover node switched, previous hovered node won't get MOUSE_LEAVE notification\r\n                if (_currentHovered && _currentHovered !== node) {\r\n                    event.type = NodeEventType.MOUSE_LEAVE;\r\n                    _currentHovered.dispatchEvent(event);\r\n                    _currentHovered.eventProcessor.previousMouseIn = false;\r\n                }\r\n                _currentHovered = node;\r\n                event.type = NodeEventType.MOUSE_ENTER;\r\n                node.dispatchEvent(event);\r\n                this.previousMouseIn = true;\r\n            }\r\n            event.type = NodeEventType.MOUSE_MOVE;\r\n            event.bubbles = true;\r\n            node.dispatchEvent(event);\r\n            event.propagationStopped = true;\r\n            return true;\r\n        } else if (this.previousMouseIn) {\r\n            event.type = NodeEventType.MOUSE_LEAVE;\r\n            node.dispatchEvent(event);\r\n            this.previousMouseIn = false;\r\n            _currentHovered = null;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _handleMouseUp (event: EventMouse): boolean {\r\n        const node = this._node;\r\n        const uiTransformComp = node._getUITransformComp();\r\n        if (!node || !uiTransformComp) {\r\n            return false;\r\n        }\r\n\r\n        event.getLocation(pos);\r\n\r\n        if (uiTransformComp.hitTest(pos, event.windowId)) {\r\n            event.type = NodeEventType.MOUSE_UP;\r\n            event.bubbles = true;\r\n            node.dispatchEvent(event);\r\n            event.propagationStopped = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _handleMouseWheel (event: EventMouse): boolean {\r\n        const node = this._node;\r\n        const uiTransformComp = node._getUITransformComp();\r\n        if (!node || !uiTransformComp) {\r\n            return false;\r\n        }\r\n\r\n        event.getLocation(pos);\r\n\r\n        if (uiTransformComp.hitTest(pos, event.windowId)) {\r\n            event.type = NodeEventType.MOUSE_WHEEL;\r\n            event.bubbles = true;\r\n            node.dispatchEvent(event);\r\n            // event.propagationStopped = true;\r\n            event.propagationStopped = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _handleMouseLeave (event: EventMouse): boolean {\r\n        this._isMouseLeaveWindow = true;\r\n        if (this.previousMouseIn) {\r\n            event.type = NodeEventType.MOUSE_LEAVE;\r\n            this._node.dispatchEvent(event);\r\n            this.previousMouseIn = false;\r\n            _currentHovered = null;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _handleMouseEnter (event: EventMouse): boolean {\r\n        this._isMouseLeaveWindow = false;\r\n        return false;\r\n    }\r\n\r\n    // #endregion handle mouse event\r\n\r\n    // #region handle touch event\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _handleEventTouch (eventTouch: EventTouch): boolean | void {\r\n        try {\r\n            switch (eventTouch.type) {\r\n            case InputEventType.TOUCH_START:\r\n                return this._handleTouchStart(eventTouch);\r\n            case InputEventType.TOUCH_MOVE:\r\n                return this._handleTouchMove(eventTouch);\r\n            case InputEventType.TOUCH_END:\r\n                return this._handleTouchEnd(eventTouch);\r\n            case InputEventType.TOUCH_CANCEL:\r\n                return this._handleTouchCancel(eventTouch);\r\n            default:\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            this.claimedTouchIdList.length = 0;\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private _handleTouchStart (event: EventTouch): boolean {\r\n        const node = this.node;\r\n        const uiTransformComp = node._getUITransformComp();\r\n        if (!node || !uiTransformComp) {\r\n            return false;\r\n        }\r\n\r\n        event.getLocation(pos);\r\n\r\n        if (uiTransformComp.hitTest(pos, event.windowId)) {\r\n            event.type = NodeEventType.TOUCH_START;\r\n            event.bubbles = true;\r\n            this._dispatchingTouch = event.touch;\r\n            node.dispatchEvent(event);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private _handleTouchMove (event: EventTouch): boolean {\r\n        const node = this.node;\r\n        if (!node || !node._getUITransformComp()) {\r\n            return false;\r\n        }\r\n\r\n        event.type = NodeEventType.TOUCH_MOVE;\r\n        event.bubbles = true;\r\n        this._dispatchingTouch = event.touch;\r\n        node.dispatchEvent(event);\r\n        return true;\r\n    }\r\n\r\n    private _handleTouchEnd (event: EventTouch): void {\r\n        const node = this.node;\r\n        const uiTransformComp = node._getUITransformComp();\r\n        if (!node || !uiTransformComp) {\r\n            return;\r\n        }\r\n\r\n        event.getLocation(pos);\r\n\r\n        if (uiTransformComp.hitTest(pos, event.windowId)) {\r\n            event.type = NodeEventType.TOUCH_END;\r\n        } else {\r\n            event.type = NodeEventType.TOUCH_CANCEL;\r\n        }\r\n        event.bubbles = true;\r\n        node.dispatchEvent(event);\r\n        this._dispatchingTouch = null;\r\n    }\r\n\r\n    private _handleTouchCancel (event: EventTouch): void {\r\n        const node = this.node;\r\n        if (!node || !node._getUITransformComp()) {\r\n            return;\r\n        }\r\n\r\n        event.type = NodeEventType.TOUCH_CANCEL;\r\n        event.bubbles = true;\r\n        node.dispatchEvent(event);\r\n        this._dispatchingTouch = null;\r\n    }\r\n\r\n    // #endregion handle touch event\r\n}\r\n\r\ncclegacy.NodeEventProcessor = NodeEventProcessor;\r\n","/*\r\n Copyright (c) 2025 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { mat4, Mat4 } from '../../core';\r\nimport type { Node } from '../../scene-graph/node';\r\nimport type { UISkew } from './ui-skew';\r\n\r\nconst m4_1 = mat4();\r\nconst tempNodes: Node[] = [];\r\nconst DEG_TO_RAD = Math.PI / 180.0;\r\n\r\n/**\r\n * Check whether the node or its parent has skew components and return the original world matrix without skew to `out` parameter.\r\n * @param node The node and its parent for finding skew.\r\n * @param out The node's original world matrix without skew.\r\n * @return true if the node or its parent has skew components, otherwise returns false.\r\n */\r\nexport function findSkewAndGetOriginalWorldMatrix (node: Node | null, out: Mat4): boolean {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    tempNodes.length = 0;\r\n    const ancestors: Node[] = tempNodes;\r\n    let startNode: Node | null = null;\r\n    for (let cur: Node | null = node; cur; cur = cur.parent) {\r\n        ancestors.push(cur);\r\n        if (cur._uiProps._uiSkewComp) {\r\n            startNode = cur;\r\n        }\r\n    }\r\n\r\n    let ret = false;\r\n    if (startNode) {\r\n        out.set(startNode.parent!._mat); // Set the first no-skew node's world matrix to out.\r\n        const start = ancestors.indexOf(startNode);\r\n        for (let i = start; i >= 0; --i) {\r\n            const cur = ancestors[i];\r\n            Mat4.fromSRT(m4_1, cur.rotation, cur.position, cur.scale);\r\n            Mat4.multiply(out, out, m4_1);\r\n        }\r\n        ret = true;\r\n    } else {\r\n        out.set(node._mat);\r\n    }\r\n\r\n    tempNodes.length = 0;\r\n    return ret;\r\n}\r\n\r\nexport function updateLocalMatrixBySkew (uiSkewComp: UISkew, outLocalMatrix: Mat4): void {\r\n    if (!uiSkewComp.isSkewEnabled()) return;\r\n    if (uiSkewComp.x === 0 && uiSkewComp.y === 0) return;\r\n\r\n    if (uiSkewComp.rotational) {\r\n        const radiansX = -(uiSkewComp.x * DEG_TO_RAD);\r\n        const radiansY = (uiSkewComp.y * DEG_TO_RAD);\r\n        const cx = Math.cos(radiansX);\r\n        const sx = Math.sin(radiansX);\r\n        const cy = Math.cos(radiansY);\r\n        const sy = Math.sin(radiansY);\r\n\r\n        const m00 = outLocalMatrix.m00;\r\n        const m01 = outLocalMatrix.m01;\r\n        const m04 = outLocalMatrix.m04;\r\n        const m05 = outLocalMatrix.m05;\r\n\r\n        outLocalMatrix.m00 = cy * m00 - sx * m01;\r\n        outLocalMatrix.m01 = sy * m00 + cx * m01;\r\n        outLocalMatrix.m04 = cy * m04 - sx * m05;\r\n        outLocalMatrix.m05 = sy * m04 + cx * m05;\r\n    } else {\r\n        const skewX = Math.tan(uiSkewComp.x * DEG_TO_RAD);\r\n        const skewY = Math.tan(uiSkewComp.y * DEG_TO_RAD);\r\n        const a = outLocalMatrix.m00;\r\n        const b = outLocalMatrix.m01;\r\n        const c = outLocalMatrix.m04;\r\n        const d = outLocalMatrix.m05;\r\n        outLocalMatrix.m00 = a + c * skewY;\r\n        outLocalMatrix.m01 = b + d * skewY;\r\n        outLocalMatrix.m04 = c + a * skewX;\r\n        outLocalMatrix.m05 = d + b * skewX;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, editable, serializable, type } from 'cc.decorator';\r\nimport { DEV, DEBUG, EDITOR, EDITOR_NOT_IN_PREVIEW, USE_UI_SKEW } from 'internal:constants';\r\nimport { Layers } from './layers';\r\nimport { NodeUIProperties } from './node-ui-properties';\r\nimport { cclegacy } from '../core/global-exports';\r\nimport { nodePolyfill } from './node-dev';\r\nimport { ISchedulable } from '../core/scheduler';\r\nimport { approx, EPSILON, Mat3, mat4, Mat4, quat, Quat, v3, Vec3 } from '../core/math';\r\nimport { MobilityMode, NodeSpace, TransformBit } from './node-enum';\r\nimport { CustomSerializable, editorExtrasTag, SerializationContext, SerializationOutput, serializeTag } from '../core/data';\r\nimport { errorID, warnID, error, log, getError } from '../core/platform/debug';\r\nimport { Component } from './component';\r\nimport { property } from '../core/data/decorators/property';\r\nimport { CCObject, CCObjectFlags, js } from '../core';\r\nimport { PrefabInfo, PrefabInstance } from './prefab/prefab-info';\r\nimport { NodeEventType } from './node-event';\r\nimport { Event } from '../input/types';\r\nimport { DispatcherEventType, NodeEventProcessor } from './node-event-processor';\r\nimport { findSkewAndGetOriginalWorldMatrix, updateLocalMatrixBySkew } from '../2d/framework/ui-skew-utils';\r\n\r\nimport type { Scene } from './scene';\r\nimport type { Director } from '../game/director';\r\nimport type { Game } from '../game/game';\r\nimport type { UITransform } from '../2d/framework';\r\nimport type { UISkew } from '../2d/framework/ui-skew';\r\n\r\nconst Destroying = CCObjectFlags.Destroying;\r\nconst DontDestroy = CCObjectFlags.DontDestroy;\r\nconst Deactivating = CCObjectFlags.Deactivating;\r\nconst TRANSFORM_CHANGED = NodeEventType.TRANSFORM_CHANGED;\r\nconst ACTIVE_CHANGED = NodeEventType.ACTIVE_CHANGED;\r\n\r\nexport const TRANSFORM_ON = 1 << 0;\r\nconst ACTIVE_ON = 1 << 1;\r\n\r\nconst idGenerator = new js.IDGenerator('Node');\r\n\r\nfunction getConstructor<T> (typeOrClassName: string | Constructor<T> | AbstractedConstructor<T>): Constructor<T> | AbstractedConstructor<T> | null | undefined {\r\n    if (!typeOrClassName) {\r\n        errorID(3804);\r\n        return null;\r\n    }\r\n    if (typeof typeOrClassName === 'string') {\r\n        return js.getClassByName(typeOrClassName) as Constructor<T> | undefined;\r\n    }\r\n\r\n    return typeOrClassName;\r\n}\r\n\r\nconst v3_a = v3();\r\nconst v3_b = v3();\r\nconst q_a = quat();\r\nconst q_b = quat();\r\nconst qt_1 = quat();\r\nconst m3_1 = new Mat3();\r\nconst m4_1 = mat4();\r\nconst m4_2 = mat4();\r\nconst dirtyNodes: Node[] = [];\r\n\r\nconst reserveContentsForAllSyncablePrefabTag = Symbol('ReserveContentsForAllSyncablePrefab');\r\nlet globalFlagChangeVersion = 0;\r\n\r\nlet skewCompCount = 0;\r\n\r\n/**\r\n * @zh\r\n * 场景树中的基本节点，基本特性有：\r\n * * 具有层级关系\r\n * * 持有各类组件\r\n * * 维护空间变换（坐标、旋转、缩放）信息\r\n */\r\n\r\n/**\r\n * @en\r\n * Class of all entities in Cocos Creator scenes.\r\n * Basic functionalities include:\r\n * * Hierarchy management with parent and children\r\n * * Components management\r\n * * Coordinate system with position, scale, rotation in 3d space\r\n * @zh\r\n * Cocos Creator 场景中的所有节点类。\r\n * 基本特性有：\r\n * * 具有层级关系\r\n * * 持有各类组件\r\n * * 维护 3D 空间左边变换（坐标、旋转、缩放）信息\r\n */\r\n@ccclass('cc.Node')\r\nexport class Node extends CCObject implements ISchedulable, CustomSerializable {\r\n    // --------------------- legacy BaseNode ---------------------\r\n    /**\r\n     * @en Gets all components attached to this node.\r\n     * @zh 获取附加到此节点的所有组件。\r\n     */\r\n    get components (): ReadonlyArray<Component> {\r\n        return this._components;\r\n    }\r\n\r\n    /**\r\n     * @en If true, the node is an persist node which won't be destroyed during scene transition.\r\n     * If false, the node will be destroyed automatically when loading a new scene. Default is false.\r\n     * @zh 如果为true，则该节点是一个常驻节点，不会在场景转换期间被销毁。\r\n     * 如果为false，节点将在加载新场景时自动销毁。默认为 false。\r\n     * @default false\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @property\r\n    get _persistNode (): boolean {\r\n        return (this._objFlags & DontDestroy) > 0;\r\n    }\r\n    set _persistNode (value) {\r\n        if (value) {\r\n            this._objFlags |= DontDestroy;\r\n        } else {\r\n            this._objFlags &= ~DontDestroy;\r\n        }\r\n    }\r\n\r\n    // API\r\n\r\n    /**\r\n     * @en Name of node.\r\n     * @zh 该节点名称。\r\n     */\r\n    @editable\r\n    get name (): string {\r\n        return this._name;\r\n    }\r\n    set name (value) {\r\n        if (DEV && value.indexOf('/') !== -1) {\r\n            errorID(1632);\r\n            return;\r\n        }\r\n        this._name = value;\r\n    }\r\n\r\n    /**\r\n     * @en The uuid for editor, will be stripped after building project.\r\n     * @zh 主要用于编辑器的 uuid，在编辑器下可用于持久化存储，在项目构建之后将变成自增的 id。\r\n     * @readOnly\r\n     */\r\n    get uuid (): string {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @en All children nodes.\r\n     * @zh 节点的所有子节点。\r\n     * @readOnly\r\n     */\r\n    @editable\r\n    get children (): Node[] {\r\n        return this._children as Node[]; // TODO:remove as Node[]?\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The local active state of this node.\r\n     * Note that a Node may be inactive because a parent is not active, even if this returns true.\r\n     * Use [[activeInHierarchy]]\r\n     * if you want to check if the Node is actually treated as active in the scene.\r\n     * @zh\r\n     * 当前节点的自身激活状态。\r\n     * 值得注意的是，一个节点的父节点如果不被激活，那么即使它自身设为激活，它仍然无法激活。\r\n     * 如果你想检查节点在场景中实际的激活状态可以使用 [[activeInHierarchy]]\r\n     * @default true\r\n     */\r\n    @editable\r\n    get active (): boolean {\r\n        return this._active;\r\n    }\r\n    set active (isActive: boolean) {\r\n        isActive = !!isActive;\r\n\r\n        if (this._active !== isActive) {\r\n            this._active = isActive;\r\n            const parent = this._parent;\r\n            if (parent) {\r\n                const couldActiveInScene = parent._activeInHierarchy;\r\n                if (couldActiveInScene) {\r\n                    (cclegacy.director as Director)._nodeActivator.activateNode(this, isActive);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal please don't use this method.\r\n     * @mangle\r\n     */\r\n    public _setActiveInHierarchy (v: boolean): void {\r\n        this._activeInHierarchy = v;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether this node is active in the scene.\r\n     * @zh 表示此节点是否在场景中激活。\r\n     */\r\n    @editable\r\n    get activeInHierarchy (): boolean {\r\n        return this._activeInHierarchy;\r\n    }\r\n\r\n    /**\r\n      * @en The parent node\r\n      * @zh 父节点\r\n      */\r\n    @editable\r\n    get parent (): Node | null {\r\n        return this._parent;\r\n    }\r\n    set parent (value: Node | null) {\r\n        this.setParent(value);\r\n    }\r\n\r\n    /**\r\n     * @en Which scene this node belongs to.\r\n     * @zh 此节点属于哪个场景。\r\n     * @readonly\r\n     */\r\n    get scene (): Scene {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * @en The event processor of the current node, it provides EventTarget ability.\r\n     * @zh 当前节点的事件处理器，提供 EventTarget 能力。\r\n     * @readonly\r\n     *\r\n     * @deprecated since v3.4.0\r\n     */\r\n    get eventProcessor (): NodeEventProcessor {\r\n        return this._eventProcessor;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected static idGenerator = idGenerator;\r\n\r\n    /**\r\n     * for walk\r\n     * @internal\r\n     */\r\n    protected static _stacks: Array<Array<(Node | null)>> = [[]];\r\n    /**\r\n     * @internal\r\n     */\r\n    protected static _stackId = 0;\r\n\r\n    /**\r\n     * Call `_updateScene` of specified node.\r\n     * @internal\r\n     * @param node The node.\r\n     */\r\n    protected static _setScene (node: Node): void {\r\n        node._updateScene();\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    static _incSkewCompCount (): void {\r\n        ++skewCompCount;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    static _decSkewCompCount (): void {\r\n        --skewCompCount;\r\n    }\r\n\r\n    protected static _findComponent<T extends Component> (node: Node, constructor: Constructor<T> | AbstractedConstructor<T>): T | null {\r\n        const cls = constructor;\r\n        const comps = node._components;\r\n        // NOTE: internal rtti property\r\n        if ((cls as any)._sealed) {\r\n            for (let i = 0; i < comps.length; ++i) {\r\n                const comp = comps[i];\r\n                if (comp.constructor === constructor) {\r\n                    return comp as T;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < comps.length; ++i) {\r\n                const comp = comps[i];\r\n                if (comp instanceof constructor) {\r\n                    return comp;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected static _findComponents<T extends Component> (node: Node, constructor: Constructor<T> | AbstractedConstructor<T>, components: Component[]): void {\r\n        const cls = constructor;\r\n        const comps = node._components;\r\n        // NOTE: internal rtti property\r\n        if ((cls as any)._sealed) {\r\n            for (let i = 0; i < comps.length; ++i) {\r\n                const comp = comps[i];\r\n                if (comp.constructor === constructor) {\r\n                    components.push(comp);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < comps.length; ++i) {\r\n                const comp = comps[i];\r\n                if (comp instanceof constructor) {\r\n                    components.push(comp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected static _findChildComponent<T extends Component> (children: Node[], constructor: Constructor<T> | AbstractedConstructor<T>): T | null {\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const node = children[i];\r\n            let comp = Node._findComponent(node, constructor);\r\n            if (comp) {\r\n                return comp;\r\n            }\r\n\r\n            if (node._children.length > 0) {\r\n                comp = Node._findChildComponent(node._children, constructor);\r\n                if (comp) {\r\n                    return comp;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected static _findChildComponents<T extends Component> (\r\n        children: Node[],\r\n        constructor: Constructor<T> | AbstractedConstructor<T>,\r\n        components: Component[],\r\n    ): void {\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const node = children[i];\r\n            Node._findComponents(node, constructor, components);\r\n            if (node._children.length > 0) {\r\n                Node._findChildComponents(node._children, constructor, components);\r\n            }\r\n        }\r\n    }\r\n\r\n    @serializable\r\n    protected _parent: this | null = null;\r\n\r\n    @serializable\r\n    protected _children: this[] = [];\r\n\r\n    @serializable\r\n    protected _active = true;\r\n\r\n    /**\r\n     * NOTE: components getter is typeof ReadonlyArray\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public getWritableComponents (): Component[] { return this._components; }\r\n    @serializable\r\n    protected _components: Component[] = [];\r\n\r\n    /**\r\n     * TODO(PP_Pro): this property should be exported to editor only, we should support editorOnly tag.\r\n     * Tracking issue: https://github.com/cocos/cocos-engine/issues/14613\r\n     */\r\n    @serializable\r\n    protected _prefab: PrefabInfo | null = null;\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public get prefab (): PrefabInfo | null { return this._prefab; }\r\n\r\n    protected _scene: Scene = null!;\r\n\r\n    protected _activeInHierarchy = false;\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public set id (v: string) { this._id = v; }\r\n    protected _id: string = idGenerator.getNewId();\r\n\r\n    protected _eventProcessor: NodeEventProcessor = new NodeEventProcessor(this);\r\n\r\n    /**\r\n     * @dontmangle Ensure _eventMask not to be mangled since it is visited by UISkew._updateNodeTransformFlags with 'any' conversion.\r\n     */\r\n    protected _eventMask = 0;\r\n\r\n    protected _siblingIndex = 0;\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public get siblingIndex (): number { return this._siblingIndex; }\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    public set siblingIndex (val: number) { this._siblingIndex = val; }\r\n\r\n    /**\r\n     * @en\r\n     * record scene's id when set this node as persist node\r\n     * @zh\r\n     * 当设置节点为常驻节点时记录场景的 id\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _originalSceneId = '';\r\n\r\n    /**\r\n     * Set `_scene` field of this node.\r\n     * The derived `Scene` overrides this method to behavior differently.\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    protected _updateScene (): void {\r\n        if (this._parent == null) {\r\n            errorID(1640, this.name, this.uuid);\r\n        } else {\r\n            this._scene = this._parent._scene;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Properties configuration function.\r\n     * All properties in attrs will be set to the node,\r\n     * when the setter of the node is available,\r\n     * the property will be set via setter function.\r\n     * @zh 属性配置函数。在 attrs 的所有属性将被设置为节点属性。\r\n     * @param attrs - Properties to be set to node\r\n     * @example\r\n     * ```\r\n     * var attrs = { name: 'New Name', active: false };\r\n     * node.attr(attrs);\r\n     * ```\r\n     */\r\n    public attr (attrs: unknown): void {\r\n        js.mixin(this, attrs);\r\n    }\r\n\r\n    /**\r\n     * @en Get parent of the node.\r\n     * @zh 获取该节点的父节点。\r\n     */\r\n    public getParent (): Node | null {\r\n        return this._parent;\r\n    }\r\n\r\n    /**\r\n     * As there are setter and setParent(), and both of them not just modify _parent, but have\r\n     * other logic. So add a new function that only modify _parent value.\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public modifyParent (parent: this | null): void {\r\n        this._parent = parent;\r\n    }\r\n\r\n    /**\r\n     * @en Set parent of the node.\r\n     * @zh 设置该节点的父节点。\r\n     * @param value Parent node\r\n     * @param keepWorldTransform Whether keep node's current world transform unchanged after this operation\r\n     */\r\n    public setParent (value: Node | null, keepWorldTransform = false): void {\r\n        if (keepWorldTransform) { this.updateWorldTransform(); }\r\n\r\n        if (this._parent === value) {\r\n            return;\r\n        }\r\n        const oldParent = this._parent;\r\n        const newParent = value as this;\r\n        if (DEBUG && oldParent\r\n            // Change parent when old parent deactivating or activating\r\n            && (oldParent._objFlags & Deactivating)) {\r\n            errorID(3821);\r\n        }\r\n\r\n        this._parent = newParent;\r\n        // Reset sibling index\r\n        this._siblingIndex = 0;\r\n\r\n        this._onSetParent(oldParent, keepWorldTransform);\r\n\r\n        if (this.emit) {\r\n            this.emit(NodeEventType.PARENT_CHANGED, oldParent);\r\n        }\r\n\r\n        if (oldParent) {\r\n            if (!(oldParent._objFlags & Destroying)) {\r\n                const removeAt = oldParent._children.indexOf(this);\r\n                if (DEV && removeAt < 0) {\r\n                    errorID(1633);\r\n                    return;\r\n                }\r\n                oldParent._children.splice(removeAt, 1);\r\n                oldParent._updateSiblingIndex();\r\n                if (oldParent.emit) {\r\n                    oldParent.emit(NodeEventType.CHILD_REMOVED, this);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newParent) {\r\n            if (DEBUG && (newParent._objFlags & Deactivating)) {\r\n                errorID(3821);\r\n            }\r\n            newParent._children.push(this);\r\n            this._siblingIndex = newParent._children.length - 1;\r\n            if (newParent.emit) {\r\n                newParent.emit(NodeEventType.CHILD_ADDED, this);\r\n            }\r\n        }\r\n\r\n        this._onHierarchyChanged(oldParent);\r\n    }\r\n\r\n    /**\r\n     * @en Returns a child with the same uuid.\r\n     * @zh 通过 uuid 获取节点的子节点。\r\n     * @param uuid - The uuid to find the child node.\r\n     * @return a Node whose uuid equals to the input parameter\r\n     */\r\n    public getChildByUuid (uuid: string): Node | null {\r\n        if (!uuid) {\r\n            log('Invalid uuid');\r\n            return null;\r\n        }\r\n\r\n        const locChildren = this._children;\r\n        for (let i = 0, len = locChildren.length; i < len; i++) {\r\n            if (locChildren[i]._id === uuid) {\r\n                return locChildren[i] as Node;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a child with the same name.\r\n     * @zh 通过名称获取节点的子节点。\r\n     * @param name - A name to find the child node.\r\n     * @return a CCNode object whose name equals to the input parameter\r\n     * @example\r\n     * ```\r\n     * var child = node.getChildByName(\"Test Node\");\r\n     * ```\r\n     */\r\n    public getChildByName (name: string): Node | null {\r\n        if (!name) {\r\n            log('Invalid name');\r\n            return null;\r\n        }\r\n\r\n        const locChildren = this._children;\r\n        for (let i = 0, len = locChildren.length; i < len; i++) {\r\n            if (locChildren[i]._name === name) {\r\n                return locChildren[i] as Node;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a child with the given path.\r\n     * @zh 通过路径获取节点的子节点。\r\n     * @param path - A path to find the child node.\r\n     * @return a Node object whose path equals to the input parameter\r\n     * @example\r\n     * ```\r\n     * var child = node.getChildByPath(\"subNode/Test Node\");\r\n     * ```\r\n     */\r\n    public getChildByPath (path: string): Node | null {\r\n        const segments = path.split('/');\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let lastNode: Node = this;\r\n        for (let i = 0; i < segments.length; ++i) {\r\n            const segment = segments[i];\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            const next = lastNode.children.find((childNode) => childNode.name === segment);\r\n            if (!next) {\r\n                return null;\r\n            }\r\n            lastNode = next;\r\n        }\r\n        return lastNode;\r\n    }\r\n\r\n    /**\r\n     * @en Add a child to the current node.\r\n     * @zh 添加一个子节点。\r\n     * @param child - the child node to be added\r\n     */\r\n    public addChild (child: Node): void {\r\n        child.setParent(this);\r\n    }\r\n\r\n    /**\r\n     * @en Inserts a child to the node at a specified index.\r\n     * @zh 插入子节点到指定位置\r\n     * @param child - the child node to be inserted\r\n     * @param siblingIndex - the sibling index to place the child in\r\n     * @example\r\n     * ```\r\n     * node.insertChild(child, 2);\r\n     * ```\r\n     */\r\n    public insertChild (child: Node, siblingIndex: number): void {\r\n        child.setParent(this);\r\n        child.setSiblingIndex(siblingIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Get the sibling index of the current node in its parent's children array.\r\n     * @zh 获取当前节点在父节点的 children 数组中的位置。\r\n     */\r\n    public getSiblingIndex (): number {\r\n        return this._siblingIndex;\r\n    }\r\n\r\n    /**\r\n     * @en Set the sibling index of the current node in its parent's children array.\r\n     * @zh 设置当前节点在父节点的 children 数组中的位置。\r\n     */\r\n    public setSiblingIndex (index: number): void {\r\n        if (!this._parent) {\r\n            return;\r\n        }\r\n        if (this._parent._objFlags & Deactivating) {\r\n            errorID(3821);\r\n            return;\r\n        }\r\n        const siblings = this._parent._children;\r\n        index = index >= 0 ? index : siblings.length + index;\r\n        const oldIndex = siblings.indexOf(this);\r\n        if (index !== oldIndex) {\r\n            siblings.splice(oldIndex, 1);\r\n            if (index < siblings.length) {\r\n                siblings.splice(index, 0, this);\r\n            } else {\r\n                siblings.push(this);\r\n            }\r\n            this._parent._updateSiblingIndex();\r\n            if (this._onSiblingIndexChanged) {\r\n                this._onSiblingIndexChanged(index);\r\n            }\r\n            this._eventProcessor.onUpdatingSiblingIndex();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Walk though the sub children tree of the current node.\r\n     * Each node, including the current node, in the sub tree will be visited two times,\r\n     * before all children and after all children.\r\n     * This function call is not recursive, it's based on stack.\r\n     * Please don't walk any other node inside the walk process.\r\n     * @zh 遍历该节点的子树里的所有节点并按规则执行回调函数。\r\n     * 对子树中的所有节点，包含当前节点，会执行两次回调，preFunc 会在访问它的子节点之前调用，postFunc 会在访问所有子节点之后调用。\r\n     * 这个函数的实现不是基于递归的，而是基于栈展开递归的方式。\r\n     * 请不要在 walk 过程中对任何其他的节点嵌套执行 walk。\r\n     * @param preFunc The callback to process node when reach the node for the first time\r\n     * @param postFunc The callback to process node when re-visit the node after walked all children in its sub tree\r\n     * @example\r\n     * ```\r\n     * node.walk(function (target) {\r\n     *     console.log('Walked through node ' + target.name + ' for the first time');\r\n     * }, function (target) {\r\n     *     console.log('Walked through node ' + target.name + ' after walked all children in its sub tree');\r\n     * });\r\n     * ```\r\n     */\r\n    public walk (preFunc: (target: this) => void, postFunc?: (target: this) => void): void {\r\n        let index = 1;\r\n        let children: this[] | null = null;\r\n        let curr: this | null = null;\r\n        let i = 0;\r\n        let stack = Node._stacks[Node._stackId];\r\n        if (!stack) {\r\n            stack = [];\r\n            Node._stacks.push(stack);\r\n        }\r\n        Node._stackId++;\r\n\r\n        stack.length = 0;\r\n        stack[0] = this;\r\n        let parent: this | null = null;\r\n        let afterChildren = false;\r\n        while (index) {\r\n            index--;\r\n            curr = stack[index] as (this | null);\r\n            if (!curr) {\r\n                continue;\r\n            }\r\n            if (!afterChildren && preFunc) {\r\n                // pre call\r\n                preFunc(curr);\r\n            } else if (afterChildren && postFunc) {\r\n                // post call\r\n                postFunc(curr);\r\n            }\r\n\r\n            // Avoid memory leak\r\n            stack[index] = null;\r\n            // Do not repeatedly visit child tree, just do post call and continue walk\r\n            if (afterChildren) {\r\n                if (parent === this._parent) break;\r\n                afterChildren = false;\r\n            } else {\r\n                // Children not proceeded and has children, proceed to child tree\r\n                if (curr._children.length > 0) {\r\n                    parent = curr;\r\n                    children = curr._children;\r\n                    i = 0;\r\n                    stack[index] = children[i];\r\n                    index++;\r\n                } else {\r\n                    stack[index] = curr;\r\n                    index++;\r\n                    afterChildren = true;\r\n                }\r\n                continue;\r\n            }\r\n            // curr has no sub tree, so look into the siblings in parent children\r\n            if (children) {\r\n                i++;\r\n                // Proceed to next sibling in parent children\r\n                if (children[i]) {\r\n                    stack[index] = children[i];\r\n                    index++;\r\n                } else if (parent) {\r\n                    stack[index] = parent;\r\n                    index++;\r\n                    // Setup parent walk env\r\n                    afterChildren = true;\r\n                    if (parent._parent) {\r\n                        children = parent._parent._children;\r\n                        i = children.indexOf(parent);\r\n                        parent = parent._parent;\r\n                    } else {\r\n                        // At root\r\n                        parent = null;\r\n                        children = null;\r\n                    }\r\n\r\n                    // ERROR\r\n                    if (i < 0) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        stack.length = 0;\r\n        Node._stackId--;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Remove itself from its parent node.\r\n     * If the node have no parent, then nothing happens.\r\n     * @zh\r\n     * 从父节点中删除该节点。\r\n     * 如果这个节点是一个孤立节点，那么什么都不会发生。\r\n     */\r\n    public removeFromParent (): void {\r\n        if (this._parent) {\r\n            this._parent.removeChild(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Removes a child from the container.\r\n     * @zh 移除节点中指定的子节点。\r\n     * @param child - The child node which will be removed.\r\n     */\r\n    public removeChild (child: this | Node): void {\r\n        if (this._children.indexOf(child as this) > -1) {\r\n            // invoke the parent setter\r\n            child.parent = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Removes all children from the container.\r\n     * @zh 移除节点所有的子节点。\r\n     */\r\n    public removeAllChildren (): void {\r\n        // not using detachChild improves speed here\r\n        const children = this._children;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            const node = children[i];\r\n            if (node) {\r\n                node.parent = null;\r\n            }\r\n        }\r\n        this._children.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @en Is this node a child of the given node?\r\n     * @zh 是否是指定节点的子节点？\r\n     * @return True if this node is a child, deep child or identical to the given node.\r\n     */\r\n    public isChildOf (parent: this | Scene | null): boolean {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let child: Node | null = this;\r\n        do {\r\n            if (child === parent) {\r\n                return true;\r\n            }\r\n            child = child._parent;\r\n        }\r\n        while (child);\r\n        return false;\r\n    }\r\n\r\n    // COMPONENT\r\n\r\n    /**\r\n     * @en\r\n     * Returns the component of supplied type if the node has one attached, null if it doesn't.\r\n     * You can also get component in the node by passing in the name of the script.\r\n     * @zh\r\n     * 获取节点上指定类型的组件，如果节点有附加指定类型的组件，则返回，如果没有则为空。\r\n     * 传入参数也可以是脚本的名称。\r\n     * @param classConstructor The class of the target component\r\n     * @example\r\n     * ```\r\n     * // get sprite component.\r\n     * var sprite = node.getComponent(Sprite);\r\n     * ```\r\n     */\r\n    public getComponent<T extends Component>(classConstructor: Constructor<T> | AbstractedConstructor<T>): T | null;\r\n\r\n    /**\r\n     * @en\r\n     * Returns the component of supplied type if the node has one attached, null if it doesn't.\r\n     * You can also get component in the node by passing in the name of the script.\r\n     * @zh\r\n     * 获取节点上指定类型的组件，如果节点有附加指定类型的组件，则返回，如果没有则为空。\r\n     * 传入参数也可以是脚本的名称。\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * // get custom test class.\r\n     * var test = node.getComponent(\"Test\") as Test | null;\r\n     * ```\r\n     */\r\n    public getComponent(className: string): Component | null;\r\n\r\n    /**\r\n     * @en\r\n     * Returns the component of supplied type if the node has one attached, null if it doesn't.\r\n     * You can also get component in the node by passing in the name of the script.\r\n     * @zh\r\n     * 获取节点上指定类型的组件，如果节点有附加指定类型的组件，则返回，如果没有则为空。\r\n     * 传入参数也可以是脚本的名称。\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * // get custom test class.\r\n     * var test = node.getComponent<Test>(\"Test\");\r\n     * ```\r\n     */\r\n    public getComponent<T extends Component>(className: string): T | null;\r\n\r\n    public getComponent<T extends Component> (typeOrClassName: string | Constructor<T> | AbstractedConstructor<T>): T | null {\r\n        const constructor = getConstructor(typeOrClassName);\r\n        if (constructor) {\r\n            return Node._findComponent(this, constructor);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Returns all components of given type in the node.\r\n     * @zh 返回节点上指定类型的所有组件。\r\n     * @param classConstructor The class of the target component\r\n     */\r\n    public getComponents<T extends Component>(classConstructor: Constructor<T> | AbstractedConstructor<T>): T[];\r\n\r\n    /**\r\n     * @en Returns all components of given type in the node.\r\n     * @zh 返回节点上指定类型的所有组件。\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * var test = node.getComponents('Test') as Test[];\r\n     * ```\r\n     */\r\n    public getComponents(className: string): Component[];\r\n\r\n    /**\r\n     * @en Returns all components of given type in the node.\r\n     * @zh 返回节点上指定类型的所有组件。\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * var test = node.getComponents<Test>('Test');\r\n     * ```\r\n     */\r\n    public getComponents<T extends Component>(className: string): T[];\r\n\r\n    public getComponents<T extends Component> (typeOrClassName: string | Constructor<T> | AbstractedConstructor<T>): T[] {\r\n        const constructor = getConstructor(typeOrClassName);\r\n        const components: T[] = [];\r\n        if (constructor) {\r\n            Node._findComponents(this, constructor, components);\r\n        }\r\n        return components;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the component of given type in any of its children using depth first search.\r\n     * @zh 递归查找所有子节点中第一个匹配指定类型的组件。\r\n     * @param classConstructor The class of the target component\r\n     * @example\r\n     * ```\r\n     * var sprite = node.getComponentInChildren(Sprite);\r\n     * ```\r\n     */\r\n    public getComponentInChildren<T extends Component>(classConstructor: Constructor<T> | AbstractedConstructor<T>): T | null;\r\n\r\n    /**\r\n     * @en Returns the component of given type in any of its children using depth first search.\r\n     * @zh 递归查找所有子节点中第一个匹配指定类型的组件。\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * var test = node.getComponentInChildren(\"Test\") as Test | null;\r\n     * ```\r\n     */\r\n    public getComponentInChildren(className: string): Component | null;\r\n\r\n    /**\r\n     * @en Returns the component of given type in any of its children using depth first search.\r\n     * @zh 递归查找所有子节点中第一个匹配指定类型的组件。\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * var test = node.getComponentInChildren<Test>(\"Test\");\r\n     * ```\r\n     */\r\n    public getComponentInChildren<T extends Component>(className: string): T | null;\r\n\r\n    public getComponentInChildren<T extends Component> (typeOrClassName: string | Constructor<T> | AbstractedConstructor<T>): T | null {\r\n        const constructor = getConstructor(typeOrClassName);\r\n        if (constructor) {\r\n            return Node._findChildComponent(this._children, constructor);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Returns all components of given type in self or any of its children.\r\n     * @zh 递归查找自身或所有子节点中指定类型的组件\r\n     * @param classConstructor The class of the target component\r\n     * @example\r\n     * ```\r\n     * var sprites = node.getComponentsInChildren(Sprite);\r\n     * ```\r\n     */\r\n    public getComponentsInChildren<T extends Component>(classConstructor: Constructor<T> | AbstractedConstructor<T>): T[];\r\n\r\n    /**\r\n     * @en Returns all components of given type in self or any of its children.\r\n     * @zh 递归查找自身或所有子节点中指定类型的组件\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * var tests = node.getComponentsInChildren(\"Test\") as Test[];\r\n     * ```\r\n     */\r\n    public getComponentsInChildren(className: string): Component[];\r\n\r\n    /**\r\n     * @en Returns all components of given type in self or any of its children.\r\n     * @zh 递归查找自身或所有子节点中指定类型的组件\r\n     * @param className The class name of the target component\r\n     * @example\r\n     * ```\r\n     * var tests = node.getComponentsInChildren<Test>(\"Test\");\r\n     * ```\r\n     */\r\n    public getComponentsInChildren<T extends Component>(className: string): T[];\r\n\r\n    public getComponentsInChildren<T extends Component> (typeOrClassName: string | Constructor<T> | AbstractedConstructor<T>): T[] {\r\n        const constructor = getConstructor(typeOrClassName);\r\n        const components: T[] = [];\r\n        if (constructor) {\r\n            Node._findComponents(this, constructor, components);\r\n            Node._findChildComponents(this._children, constructor, components);\r\n        }\r\n        return components;\r\n    }\r\n\r\n    /**\r\n     * @en Adds a component class to the node. You can also add component to node by passing in the name of the script.\r\n     * @zh 向节点添加一个指定类型的组件类，你还可以通过传入脚本的名称来添加组件。\r\n     * @param classConstructor The class of the component to add\r\n     * @throws `TypeError` if the `classConstructor` does not specify a cc-class constructor extending the `Component`.\r\n     * @example\r\n     * ```\r\n     * var sprite = node.addComponent(Sprite);\r\n     * ```\r\n     */\r\n    public addComponent<T extends Component>(classConstructor: Constructor<T>): T;\r\n\r\n    /**\r\n     * @en Adds a component class to the node. You can also add component to node by passing in the name of the script.\r\n     * @zh 向节点添加一个指定类型的组件类，你还可以通过传入脚本的名称来添加组件。\r\n     * @param className The class name of the component to add\r\n     * @throws `TypeError` if the `className` does not specify a cc-class constructor extending the `Component`.\r\n     * @example\r\n     * ```\r\n     * var test = node.addComponent(\"Test\") as Test;\r\n     * ```\r\n     */\r\n    public addComponent(className: string): Component;\r\n\r\n    /**\r\n     * @en Adds a component class to the node. You can also add component to node by passing in the name of the script.\r\n     * @zh 向节点添加一个指定类型的组件类，你还可以通过传入脚本的名称来添加组件。\r\n     * @param className The class name of the component to add\r\n     * @throws `TypeError` if the `className` does not specify a cc-class constructor extending the `Component`.\r\n     * @example\r\n     * ```\r\n     * var test = node.addComponent<Test>(\"Test\");\r\n     * ```\r\n     */\r\n    public addComponent<T extends Component>(className: string): T;\r\n\r\n    public addComponent<T extends Component> (typeOrClassName: string | Constructor<T>): T {\r\n        if (EDITOR && (this._objFlags & Destroying)) {\r\n            throw Error('isDestroying');\r\n        }\r\n\r\n        // get component\r\n\r\n        let constructor: Constructor<T> | null | undefined;\r\n        if (typeof typeOrClassName === 'string') {\r\n            constructor = js.getClassByName(typeOrClassName) as Constructor<T> | undefined;\r\n            if (!constructor) {\r\n                if (cclegacy._RF.peek()) {\r\n                    errorID(3808, typeOrClassName);\r\n                }\r\n                throw TypeError(getError(3807, typeOrClassName));\r\n            }\r\n        } else {\r\n            if (!typeOrClassName) {\r\n                throw TypeError(getError(3804));\r\n            }\r\n            constructor = typeOrClassName;\r\n        }\r\n\r\n        // check component\r\n\r\n        if (typeof constructor !== 'function') {\r\n            throw TypeError(getError(3809));\r\n        }\r\n        if (!js.isChildClassOf(constructor, cclegacy.Component)) {\r\n            throw TypeError(getError(3810));\r\n        }\r\n\r\n        if (EDITOR && (constructor as typeof constructor & { _disallowMultiple?: unknown })._disallowMultiple) {\r\n            this._checkMultipleComp!(constructor);\r\n        }\r\n\r\n        // check requirement\r\n\r\n        const reqComps = (constructor as typeof constructor & { _requireComponent?: typeof Component })._requireComponent;\r\n        if (reqComps) {\r\n            // FIXME: why it can be array here?\r\n            if (Array.isArray(reqComps)) {\r\n                for (let i = 0; i < reqComps.length; i++) {\r\n                    const reqComp = reqComps[i] as Constructor<Component>;\r\n                    if (!this.getComponent(reqComp)) {\r\n                        this.addComponent(reqComp);\r\n                    }\r\n                }\r\n            } else {\r\n                const reqComp = reqComps;\r\n                if (!this.getComponent(reqComp)) {\r\n                    this.addComponent(reqComp);\r\n                }\r\n            }\r\n        }\r\n\r\n        /// / check conflict\r\n        //\r\n        // if (EDITOR && !_Scene.DetectConflict.beforeAddComponent(this, constructor)) {\r\n        //    return null;\r\n        // }\r\n\r\n        //\r\n\r\n        const component = new constructor();\r\n        component.node = (this as unknown as Node); // TODO: HACK here\r\n        this._components.push(component);\r\n        if (EDITOR && EditorExtends.Node && EditorExtends.Component) {\r\n            const node = EditorExtends.Node.getNode(this._id);\r\n            if (node) {\r\n                EditorExtends.Component.add(component._id, component);\r\n            }\r\n        }\r\n        this.emit(NodeEventType.COMPONENT_ADDED, component);\r\n        if (this._activeInHierarchy) {\r\n            (cclegacy.director as Director)._nodeActivator.activateComp(component);\r\n        }\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            component.resetInEditor?.();\r\n        }\r\n\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes a component identified by the given name or removes the component object given.\r\n     * You can also use component.destroy() if you already have the reference.\r\n     * @zh\r\n     * 删除节点上的指定组件，传入参数可以是一个组件构造函数或组件名，也可以是已经获得的组件引用。\r\n     * 如果你已经获得组件引用，你也可以直接调用 component.destroy()\r\n     * @param classConstructor The class of the component to remove\r\n     * @deprecated please destroy the component to remove it.\r\n     * @example\r\n     * ```\r\n     * node.removeComponent(Sprite);\r\n     * ```\r\n     */\r\n    public removeComponent<T extends Component>(classConstructor: Constructor<T> | AbstractedConstructor<T>): void;\r\n\r\n    /**\r\n     * @en\r\n     * Removes a component identified by the given name or removes the component object given.\r\n     * You can also use component.destroy() if you already have the reference.\r\n     * @zh\r\n     * 删除节点上的指定组件，传入参数可以是一个组件构造函数或组件名，也可以是已经获得的组件引用。\r\n     * 如果你已经获得组件引用，你也可以直接调用 component.destroy()\r\n     * @param classNameOrInstance The class name of the component to remove or the component instance to be removed\r\n     * @deprecated please destroy the component to remove it.\r\n     * @example\r\n     * ```\r\n     * import { Sprite } from 'cc';\r\n     * const sprite = node.getComponent(Sprite);\r\n     * if (sprite) {\r\n     *     node.removeComponent(sprite);\r\n     * }\r\n     * node.removeComponent('Sprite');\r\n     * ```\r\n     */\r\n    public removeComponent(classNameOrInstance: string | Component): void;\r\n\r\n    public removeComponent (component: any): void {\r\n        if (!component) {\r\n            errorID(3813);\r\n            return;\r\n        }\r\n\r\n        let componentInstance: Component | null = null;\r\n        if (component instanceof Component) {\r\n            componentInstance = component;\r\n        } else {\r\n            // \"component as string\": Just make eslint happy.\r\n            componentInstance = this.getComponent(component as string);\r\n        }\r\n        if (componentInstance) {\r\n            componentInstance.destroy();\r\n        }\r\n    }\r\n\r\n    // EVENT PROCESSING\r\n\r\n    /**\r\n     * @en\r\n     * Register a callback of a specific event type on Node.\r\n     * Use this method to register touch or mouse event permit propagation based on scene graph,\r\n     * These kinds of event are triggered with dispatchEvent, the dispatch process has three steps:\r\n     * 1. Capturing phase: dispatch in capture targets, e.g. parents in node tree, from root to the real target\r\n     * 2. At target phase: dispatch to the listeners of the real target\r\n     * 3. Bubbling phase: dispatch in bubble targets, e.g. parents in node tree, from the real target to root\r\n     * In any moment of the dispatching process, it can be stopped via `event.stopPropagation()` or `event.stopPropagationImmediate()`.\r\n     * You can also register custom event and use `emit` to trigger custom event on Node.\r\n     * For such events, there won't be capturing and bubbling phase,\r\n     * your event will be dispatched directly to its listeners registered on the same node.\r\n     * You can also pass event callback parameters with `emit` by passing parameters after `type`.\r\n     * @zh\r\n     * 在节点上注册指定类型的回调函数，也可以设置 target 用于绑定响应函数的 this 对象。\r\n     * 鼠标或触摸事件会被系统调用 dispatchEvent 方法触发，触发的过程包含三个阶段：\r\n     * 1. 捕获阶段：派发事件给捕获目标，比如，节点树中注册了捕获阶段的父节点，从根节点开始派发直到目标节点。\r\n     * 2. 目标阶段：派发给目标节点的监听器。\r\n     * 3. 冒泡阶段：派发事件给冒泡目标，比如，节点树中注册了冒泡阶段的父节点，从目标节点开始派发直到根节点。\r\n     * 同时您可以将事件派发到父节点或者通过调用 stopPropagation 拦截它。\r\n     * 你也可以注册自定义事件到节点上，并通过 emit 方法触发此类事件，对于这类事件，不会发生捕获冒泡阶段，只会直接派发给注册在该节点上的监听器\r\n     * 你可以通过在 emit 方法调用时在 type 之后传递额外的参数作为事件回调的参数列表\r\n     * @param type - A string representing the event type to listen for.<br>See [[Node.EventType.POSITION_CHANGED]] for all builtin events.\r\n     * @param callback - The callback that will be invoked when the event is dispatched.\r\n     * The callback is ignored if it is a duplicate (the callbacks are unique).\r\n     * @param target - The target (this object) to invoke the callback, can be null\r\n     * @param useCapture - When set to true, the listener will be triggered at capturing phase which is ahead of the final target emit,\r\n     * otherwise it will be triggered during bubbling phase.\r\n     * @return - Just returns the incoming callback so you can save the anonymous function easier.\r\n     * @example\r\n     * ```ts\r\n     * this.node.on(NodeEventType.TOUCH_START, this.memberFunction, this);  // if \"this\" is component and the \"memberFunction\" declared in CCClass.\r\n     * node.on(NodeEventType.TOUCH_START, callback, this);\r\n     * node.on(NodeEventType.TOUCH_MOVE, callback, this);\r\n     * node.on(NodeEventType.TOUCH_END, callback, this);\r\n     * ```\r\n     */\r\n    public on (type: string | NodeEventType, callback: AnyFunction, target?: unknown, useCapture: boolean = false): void {\r\n        switch (type) {\r\n        case TRANSFORM_CHANGED:\r\n            this._eventMask |= TRANSFORM_ON;\r\n            break;\r\n        case ACTIVE_CHANGED:\r\n            this._eventMask |= ACTIVE_ON;\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n        this._eventProcessor.on(type as NodeEventType, callback, target, useCapture);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes the callback previously registered with the same type, callback, target and or useCapture.\r\n     * This method is merely an alias to removeEventListener.\r\n     * @zh 删除之前与同类型，回调，目标或 useCapture 注册的回调。\r\n     * @param type - A string representing the event type being removed.\r\n     * @param callback - The callback to remove.\r\n     * @param target - The target (this object) to invoke the callback, if it's not given, only callback without target will be removed\r\n     * @param useCapture - When set to true, the listener will be triggered at capturing phase\r\n     * which is ahead of the final target emit, otherwise it will be triggered during bubbling phase.\r\n     * @example\r\n     * ```ts\r\n     * this.node.off(NodeEventType.TOUCH_START, this.memberFunction, this);\r\n     * node.off(NodeEventType.TOUCH_START, callback, this.node);\r\n     * ```\r\n     */\r\n    public off (type: string, callback?: AnyFunction, target?: unknown, useCapture: boolean = false): void {\r\n        this._eventProcessor.off(type as NodeEventType, callback, target, useCapture);\r\n\r\n        const hasListeners = this._eventProcessor.hasEventListener(type);\r\n        // All listener removed\r\n        if (!hasListeners) {\r\n            switch (type) {\r\n            case TRANSFORM_CHANGED:\r\n                this._eventMask &= ~TRANSFORM_ON;\r\n                break;\r\n            case ACTIVE_CHANGED:\r\n                this._eventMask &= ~ACTIVE_ON;\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Register an callback of a specific event type on the Node,\r\n     * the callback will remove itself after the first time it is triggered.\r\n     * @zh\r\n     * 注册节点的特定事件类型回调，回调会在第一时间被触发后删除自身。\r\n     *\r\n     * @param type - A string representing the event type to listen for.\r\n     * @param callback - The callback that will be invoked when the event is dispatched.\r\n     *                              The callback is ignored if it is a duplicate (the callbacks are unique).\r\n     * @param target - The target (this object) to invoke the callback, can be null\r\n     */\r\n    public once (type: string, callback: AnyFunction, target?: unknown, useCapture?: boolean): void {\r\n        this._eventProcessor.once(type as NodeEventType, callback, target, useCapture);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Trigger an event directly with the event name and necessary arguments.\r\n     * @zh\r\n     * 通过事件名发送自定义事件\r\n     * @param type - event type\r\n     * @param arg1 - First argument in callback\r\n     * @param arg2 - Second argument in callback\r\n     * @param arg3 - Third argument in callback\r\n     * @param arg4 - Fourth argument in callback\r\n     * @param arg5 - Fifth argument in callback\r\n     * @example\r\n     * ```ts\r\n     * eventTarget.emit('fire', event);\r\n     * eventTarget.emit('fire', message, emitter);\r\n     * ```\r\n     */\r\n    public emit (type: string, arg0?: any, arg1?: any, arg2?: any, arg3?: any, arg4?: any): void {\r\n        this._eventProcessor.emit(type, arg0, arg1, arg2, arg3, arg4);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Dispatches an event into the event flow.\r\n     * The event target is the EventTarget object upon which the dispatchEvent() method is called.\r\n     * @zh 分发事件到事件流中。\r\n     * @param event - The Event object that is dispatched into the event flow\r\n     */\r\n    public dispatchEvent (event: Event): void {\r\n        this._eventProcessor.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * @en Checks whether the EventTarget object has any callback registered for a specific type of event.\r\n     * @zh 检查事件目标对象是否有为特定类型的事件注册的回调。\r\n     * @param type - The type of event.\r\n     * @param callback - The callback function of the event listener, if absent all event listeners for the given type will be removed\r\n     * @param target - The callback callee of the event listener\r\n     * @return True if a callback of the specified type is registered; false otherwise.\r\n     */\r\n    public hasEventListener (type: string, callback?: AnyFunction, target?: unknown): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this._eventProcessor.hasEventListener(type, callback, target);\r\n    }\r\n\r\n    /**\r\n     * @en Removes all callbacks previously registered with the same target.\r\n     * @zh 移除目标上的所有注册事件。\r\n     * @param target - The target to be searched for all related callbacks\r\n     */\r\n    public targetOff (target: unknown): void {\r\n        this._eventProcessor.targetOff(target);\r\n        // Check for event mask reset\r\n        if ((this._eventMask & TRANSFORM_ON) && !this._eventProcessor.hasEventListener(TRANSFORM_CHANGED)) {\r\n            this._eventMask &= ~TRANSFORM_ON;\r\n        }\r\n\r\n        if ((this._eventMask & ACTIVE_ON) && !this._eventProcessor.hasEventListener(ACTIVE_CHANGED)) {\r\n            this._eventMask &= ~ACTIVE_ON;\r\n        }\r\n    }\r\n\r\n    public destroy (): boolean {\r\n        if (super.destroy()) {\r\n            this.active = false;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Destroy all children from the node, and release all their own references to other objects.\r\n     * Actual destruct operation will delayed until before rendering.\r\n     * @zh\r\n     * 销毁所有子节点，并释放所有它们对其它对象的引用。\r\n     * 实际销毁操作会延迟到当前帧渲染前执行。\r\n     */\r\n    public destroyAllChildren (): void {\r\n        const children = this._children;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            children[i].destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Do remove component, only used internally.\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _removeComponent (component: Component): void {\r\n        if (!component) {\r\n            errorID(3814);\r\n            return;\r\n        }\r\n\r\n        if (!(this._objFlags & Destroying)) {\r\n            const i = this._components.indexOf(component);\r\n            if (i !== -1) {\r\n                this._components.splice(i, 1);\r\n                if (EDITOR && EditorExtends.Component) {\r\n                    EditorExtends.Component.remove(component._id);\r\n                }\r\n                this.emit(NodeEventType.COMPONENT_REMOVED, component);\r\n            } else if (component.node !== (this as unknown as Node)) {\r\n                errorID(3815);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _updateSiblingIndex (): void {\r\n        for (let i = 0; i < this._children.length; ++i) {\r\n            this._children[i]._siblingIndex = i;\r\n        }\r\n\r\n        this.emit(NodeEventType.CHILDREN_ORDER_CHANGED);\r\n    }\r\n\r\n    /**\r\n     * @dontmangle\r\n     * NOTE: the protected method `_instantiate` is invoked by dynamically without type information.\r\n     * See `instantiate` in cocos/serialization/instantiate.ts.\r\n     * ```ts\r\n     * clone = original._instantiate(null, true); // original is any, so _instantiate should not be mangled.\r\n     * ```\r\n     */\r\n    protected _instantiate (cloned?: Node | null, isSyncedNode: boolean = false): Node {\r\n        if (!cloned) {\r\n            cloned = cclegacy.instantiate._clone(this, this) as Node;\r\n        }\r\n\r\n        const newPrefabInfo = cloned._prefab;\r\n        if (EDITOR && newPrefabInfo) {\r\n            if (cloned === newPrefabInfo.root) {\r\n                // when instantiate prefab in Editor,should add prefab instance info for root node\r\n                EditorExtends.PrefabUtils.addPrefabInstance?.(cloned);\r\n                // newPrefabInfo.fileId = '';\r\n            } else {\r\n                // var PrefabUtils = Editor.require('scene://utils/prefab');\r\n                // PrefabUtils.unlinkPrefab(cloned);\r\n            }\r\n        }\r\n\r\n        // reset and init\r\n        cloned._parent = null;\r\n        cloned._onBatchCreated(isSyncedNode);\r\n\r\n        return cloned;\r\n    }\r\n\r\n    protected _onHierarchyChangedBase (oldParent: this | null): void {\r\n        const newParent = this._parent;\r\n        if (this._persistNode && !(newParent instanceof cclegacy.Scene)) {\r\n            cclegacy.game.removePersistRootNode(this);\r\n            if (EDITOR) {\r\n                warnID(1623);\r\n            }\r\n        }\r\n\r\n        if (EDITOR) {\r\n            const scene = (cclegacy.director as Director).getScene() as this | null;\r\n            const inCurrentSceneBefore = oldParent && oldParent.isChildOf(scene);\r\n            const inCurrentSceneNow = newParent && newParent.isChildOf(scene);\r\n            if (!inCurrentSceneBefore && inCurrentSceneNow) {\r\n                // attached\r\n                // TODO: `_registerIfAttached` is injected property\r\n                // issue: https://github.com/cocos/cocos-engine/issues/14643\r\n                (this as any)._registerIfAttached!(true);\r\n            } else if (inCurrentSceneBefore && !inCurrentSceneNow) {\r\n                // detached\r\n                // TODO: `_registerIfAttached` is injected property\r\n                // issue: https://github.com/cocos/cocos-engine/issues/14643\r\n                (this as any)._registerIfAttached!(false);\r\n            }\r\n\r\n            // conflict detection\r\n            // _Scene.DetectConflict.afterAddChild(this);\r\n        }\r\n\r\n        const shouldActiveNow = this._active && !!(newParent && newParent._activeInHierarchy);\r\n        if (this._activeInHierarchy !== shouldActiveNow) {\r\n            (cclegacy.director as Director)._nodeActivator.activateNode(this, shouldActiveNow);\r\n        }\r\n    }\r\n\r\n    protected _onPreDestroyBase (): boolean {\r\n        // marked as destroying\r\n        this._objFlags |= Destroying;\r\n\r\n        // detach self and children from editor\r\n        const parent = this._parent;\r\n        const destroyByParent: boolean = (!!parent) && ((parent._objFlags & Destroying) !== 0);\r\n        if (!destroyByParent && EDITOR) {\r\n            // TODO: `_registerIfAttached` is injected property\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14643\r\n            (this as any)._registerIfAttached!(false);\r\n        }\r\n\r\n        // remove from persist\r\n        if (this._persistNode) {\r\n            (cclegacy.game as Game).removePersistRootNode(this);\r\n        }\r\n\r\n        if (!destroyByParent) {\r\n            // remove from parent\r\n            if (parent) {\r\n                this.emit(NodeEventType.PARENT_CHANGED, this);\r\n                // During destroy process, sibling index is not reliable\r\n                const childIndex = parent._children.indexOf(this);\r\n                parent._children.splice(childIndex, 1);\r\n                this._siblingIndex = 0;\r\n                parent._updateSiblingIndex();\r\n                if (parent.emit) {\r\n                    parent.emit(NodeEventType.CHILD_REMOVED, this);\r\n                }\r\n            }\r\n        }\r\n\r\n        // emit node destroy event (this should before event processor destroy)\r\n        this.emit(NodeEventType.NODE_DESTROYED, this);\r\n\r\n        // Destroy node event processor\r\n        this._eventProcessor.destroy();\r\n\r\n        // destroy children\r\n        const children = this._children;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            // destroy immediate so its _onPreDestroy can be called\r\n            children[i]._destroyImmediate();\r\n        }\r\n\r\n        // destroy self components\r\n        const comps = this._components;\r\n        for (let i = 0; i < comps.length; ++i) {\r\n            // destroy immediate so its _onPreDestroy can be called\r\n            // TO DO\r\n            comps[i]._destroyImmediate();\r\n        }\r\n\r\n        return destroyByParent;\r\n    }\r\n\r\n    protected _onSiblingIndexChanged?(siblingIndex: number): void;\r\n\r\n    /**\r\n     * @en\r\n     * Ensures that this node has already had the specified component(s). If not, this method throws.\r\n     * @zh\r\n     * 检查节点已经包含对应的组件，如果没有，则抛出异常\r\n     * @param constructor Constructor of the component.\r\n     * @throws If one or more component of same type have been existed in this node.\r\n     */\r\n    protected _checkMultipleComp?<T extends Component>(constructor: Constructor<T>): void;\r\n\r\n    // ---------------------- Node ------------------------\r\n    /**\r\n     * @en Event types emitted by Node\r\n     * @zh 节点可能发出的事件类型\r\n     */\r\n    public static EventType = NodeEventType;\r\n\r\n    /**\r\n     * @en Coordinates space\r\n     * @zh 空间变换操作的坐标系\r\n     */\r\n    public static NodeSpace = NodeSpace;\r\n\r\n    /**\r\n     * @en Bit masks for Node transformation parts\r\n     * @zh 节点变换更新的具体部分\r\n     * @deprecated please use [[Node.TransformBit]]\r\n     */\r\n    public static TransformDirtyBit = TransformBit;\r\n\r\n    /**\r\n     * @en Bit masks for Node transformation parts, can be used to determine which part changed in [[NodeEventType.TRANSFORM_CHANGED]] event\r\n     * @zh 节点变换更新的具体部分，可用于判断 [[NodeEventType.TRANSFORM_CHANGED]] 事件的具体类型\r\n     */\r\n    public static TransformBit = TransformBit;\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public static reserveContentsForAllSyncablePrefabTag = reserveContentsForAllSyncablePrefabTag;\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _uiProps = new NodeUIProperties(this);\r\n\r\n    /**\r\n     * @en Counter to clear node array\r\n     * @zh 清除节点数组计时器\r\n     */\r\n    private static ClearFrame = 0;\r\n    private static ClearRound = 1000;\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _static = false;\r\n    /**\r\n     * @engineInternal NOTE: this is engineInternal interface that doesn't have a side effect of updating the transforms\r\n     */\r\n    public declare _pos: Vec3;\r\n    /**\r\n     * @engineInternal NOTE: this is engineInternal interface that doesn't have a side effect of updating the transforms\r\n     */\r\n    public declare _rot: Quat;\r\n    /**\r\n     * @engineInternal NOTE: this is engineInternal interface that doesn't have a side effect of updating the transforms\r\n     */\r\n    public declare _scale: Vec3;\r\n    /**\r\n     * @engineInternal NOTE: this is engineInternal interface that doesn't have a side effect of updating the transforms\r\n     */\r\n    public declare _mat: Mat4;\r\n\r\n    // local transform\r\n    @serializable\r\n    protected _lpos = new Vec3();\r\n\r\n    @serializable\r\n    protected _lrot = new Quat();\r\n\r\n    @serializable\r\n    protected _lscale = new Vec3(1, 1, 1);\r\n\r\n    @serializable\r\n    protected _mobility = MobilityMode.Static;\r\n\r\n    @serializable\r\n    protected _layer = Layers.Enum.DEFAULT; // the layer this node belongs to\r\n\r\n    // local rotation in euler angles, maintained here so that rotation angles could be greater than 360 degree.\r\n    @serializable\r\n    protected _euler = new Vec3();\r\n\r\n    protected _transformFlags = TransformBit.TRS | TransformBit.SKEW; // does the world transform need to update?\r\n    protected _eulerDirty = false;\r\n\r\n    protected _flagChangeVersion = 0;\r\n    protected _hasChangedFlags = 0;\r\n\r\n    constructor (name?: string) {\r\n        if (name === undefined) name = 'New Node';\r\n        super(name);\r\n\r\n        this._pos = new Vec3();\r\n        this._rot = new Quat();\r\n        this._scale = new Vec3(1, 1, 1);\r\n        this._mat = new Mat4();\r\n    }\r\n\r\n    /**\r\n     * @en Determine whether the given object is a normal Node. Will return false if [[Scene]] given.\r\n     * @zh 指定对象是否是普通的节点？如果传入 [[Scene]] 会返回 false。\r\n     */\r\n    public static isNode (obj: unknown): obj is Node {\r\n        return obj instanceof Node && (obj.constructor === Node || !(obj instanceof cclegacy.Scene));\r\n    }\r\n\r\n    protected _onPreDestroy (): boolean {\r\n        return this._onPreDestroyBase();\r\n    }\r\n\r\n    /**\r\n     * @en Position in local coordinate system\r\n     * @zh 本地坐标系下的坐标\r\n     */\r\n    // @constget\r\n    public get position (): Readonly<Vec3> {\r\n        return this._lpos;\r\n    }\r\n\r\n    public set position (val: Readonly<Vec3>) {\r\n        this.setPosition(val as Vec3);\r\n    }\r\n\r\n    /**\r\n     * @en Get x axis value in local coordinate system\r\n     * @zh 获取本地 x 轴坐标分量\r\n     */\r\n    get x (): number {\r\n        return this._lpos.x;\r\n    }\r\n\r\n    /**\r\n     * @en Set x axis value in local coordinate system\r\n     * @zh 设置本地 x 轴坐标分量\r\n     */\r\n    set x (val: number) {\r\n        this.setPosition(val, this._lpos.y, this._lpos.z);\r\n    }\r\n\r\n    /**\r\n     * @en Get y axis value in local coordinate system\r\n     * @zh 获取本地 y 轴坐标分量\r\n     */\r\n    get y (): number {\r\n        return this._lpos.y;\r\n    }\r\n\r\n    /**\r\n     * @en Set y axis value in local coordinate system\r\n     * @zh 设置本地 y 轴坐标分量\r\n     */\r\n    set y (val: number) {\r\n        this.setPosition(this._lpos.x, val, this._lpos.z);\r\n    }\r\n\r\n    /**\r\n     * @en Get z axis value in local coordinate system\r\n     * @zh 获取本地 z 轴坐标分量\r\n     */\r\n    get z (): number {\r\n        return this._lpos.z;\r\n    }\r\n\r\n    /**\r\n     * @en Set z axis value in local coordinate system\r\n     * @zh 设置本地 z 轴坐标分量\r\n     */\r\n    set z (val: number) {\r\n        this.setPosition(this._lpos.x, this._lpos.y, val);\r\n    }\r\n\r\n    /**\r\n     * @en Position in world coordinate system\r\n     * @zh 世界坐标系下的坐标\r\n     */\r\n    // @constget\r\n    public get worldPosition (): Readonly<Vec3> {\r\n        this.updateWorldTransform();\r\n        return this._pos;\r\n    }\r\n\r\n    public set worldPosition (val: Readonly<Vec3>) {\r\n        this.setWorldPosition(val as Vec3);\r\n    }\r\n\r\n    /**\r\n     * @en Get x axis value in world coordinate system\r\n     * @zh 获取世界坐标 x 轴分量\r\n     */\r\n    get worldPositionX (): number {\r\n        this.updateWorldTransform();\r\n        return this._pos.x;\r\n    }\r\n\r\n    /**\r\n     * @en Set x axis value in world coordinate system\r\n     * @zh 设置世界坐标 x 轴分量\r\n     */\r\n    set worldPositionX (val: number) {\r\n        this.setWorldPosition(val, this._pos.y, this._pos.z);\r\n    }\r\n\r\n    /**\r\n     * @en Get y axis value in world coordinate system\r\n     * @zh 获取世界坐标 y 轴分量\r\n     */\r\n    get worldPositionY (): number {\r\n        this.updateWorldTransform();\r\n        return this._pos.y;\r\n    }\r\n\r\n    /**\r\n     * @en Set y axis value in world coordinate system\r\n     * @zh 设置世界坐标 y 轴分量\r\n     */\r\n    set worldPositionY (val: number) {\r\n        this.setWorldPosition(this._pos.x, val, this._pos.z);\r\n    }\r\n\r\n    /**\r\n     * @en Get z axis value in world coordinate system\r\n     * @zh 获取世界坐标 z 轴分量\r\n     */\r\n    get worldPositionZ (): number {\r\n        this.updateWorldTransform();\r\n        return this._pos.z;\r\n    }\r\n\r\n    /**\r\n     * @en Set z axis value in world coordinate system\r\n     * @zh 设置世界坐标 z 轴分量\r\n     */\r\n    set worldPositionZ (val: number) {\r\n        this.setWorldPosition(this._pos.x, this._pos.y, val);\r\n    }\r\n\r\n    /**\r\n     * @en Rotation in local coordinate system, represented by a quaternion\r\n     * @zh 本地坐标系下的旋转，用四元数表示\r\n     */\r\n    // @constget\r\n    public get rotation (): Readonly<Quat> {\r\n        return this._lrot;\r\n    }\r\n\r\n    public set rotation (val: Readonly<Quat>) {\r\n        this.setRotation(val as Quat);\r\n    }\r\n\r\n    /**\r\n     * @en Rotation in local coordinate system, represented by euler angles\r\n     * @zh 本地坐标系下的旋转，用欧拉角表示\r\n     */\r\n    @type(Vec3)\r\n    set eulerAngles (val: Readonly<Vec3>) {\r\n        this.setRotationFromEuler(val.x, val.y, val.z);\r\n    }\r\n\r\n    get eulerAngles (): Readonly<Vec3> {\r\n        if (this._eulerDirty) {\r\n            Quat.toEuler(this._euler, this._lrot);\r\n            this._eulerDirty = false;\r\n        }\r\n        return this._euler;\r\n    }\r\n\r\n    /**\r\n     * @en Rotation in local coordinate system, represented by euler angles, but limited on z axis\r\n     * @zh 本地坐标系下的旋转，用欧拉角表示，但是限定在 z 轴上。\r\n     */\r\n    @editable\r\n    get angle (): number {\r\n        return this.eulerAngles.z;\r\n    }\r\n\r\n    set angle (val: number) {\r\n        Vec3.set(this._euler, 0, 0, val);\r\n        Quat.fromAngleZ(this._lrot, val);\r\n        this._eulerDirty = false;\r\n\r\n        this.invalidateChildren(TransformBit.ROTATION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.ROTATION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Rotation in world coordinate system, represented by a quaternion\r\n     * @zh 世界坐标系下的旋转，用四元数表示\r\n     */\r\n    // @constget\r\n    public get worldRotation (): Readonly<Quat> {\r\n        this.updateWorldTransform();\r\n        return this._rot;\r\n    }\r\n\r\n    public set worldRotation (val: Readonly<Quat>) {\r\n        this.setWorldRotation(val as Quat);\r\n    }\r\n\r\n    /**\r\n     * @en Scale in local coordinate system\r\n     * @zh 本地坐标系下的缩放\r\n     */\r\n    // @constget\r\n    public get scale (): Readonly<Vec3> {\r\n        return this._lscale;\r\n    }\r\n\r\n    public set scale (val: Readonly<Vec3>) {\r\n        this.setScale(val as Vec3);\r\n    }\r\n\r\n    /**\r\n     * @en Scale in world coordinate system\r\n     * @zh 世界坐标系下的缩放\r\n     */\r\n    // @constget\r\n    public get worldScale (): Readonly<Vec3> {\r\n        this.updateWorldTransform();\r\n        return this._scale;\r\n    }\r\n\r\n    public set worldScale (val: Readonly<Vec3>) {\r\n        this.setWorldScale(val as Vec3);\r\n    }\r\n\r\n    /**\r\n     * @en Local transformation matrix\r\n     * @zh 本地坐标系变换矩阵\r\n     */\r\n    public set matrix (val: Readonly<Mat4>) {\r\n        Mat4.toSRT(val, this._lrot, this._lpos, this._lscale);\r\n        this.invalidateChildren(TransformBit.TRS);\r\n        this._eulerDirty = true;\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.TRS);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en World transformation matrix\r\n     * @zh 世界坐标系变换矩阵\r\n     */\r\n    // @constget\r\n    public get worldMatrix (): Readonly<Mat4> {\r\n        this.updateWorldTransform();\r\n        return this._mat;\r\n    }\r\n\r\n    /**\r\n     * @en The vector representing forward direction in local coordinate system, it's the minus z direction by default\r\n     * @zh 当前节点面向的前方方向，默认前方为 -z 方向\r\n     */\r\n    get forward (): Vec3 {\r\n        return Vec3.transformQuat(new Vec3(), Vec3.FORWARD, this.worldRotation);\r\n    }\r\n\r\n    set forward (dir: Vec3) {\r\n        const len = dir.length();\r\n        Vec3.multiplyScalar(v3_a, dir, -1 / len);\r\n        Quat.fromViewUp(q_a, v3_a);\r\n        this.setWorldRotation(q_a);\r\n    }\r\n\r\n    /**\r\n     * @en Return the up direction vertor of this node in world space.\r\n     * @zh 返回当前节点在世界空间中朝上的方向向量\r\n     */\r\n    get up (): Vec3 {\r\n        return Vec3.transformQuat(new Vec3(), Vec3.UP, this.worldRotation);\r\n    }\r\n\r\n    /**\r\n     * @en Return the right direction vector of this node in world space.\r\n     * @zh 返回当前节点在世界空间中朝右的方向向量\r\n     */\r\n    get right (): Vec3 {\r\n        return Vec3.transformQuat(new Vec3(), Vec3.RIGHT, this.worldRotation);\r\n    }\r\n\r\n    @editable\r\n    @type(MobilityMode)\r\n    set mobility (m: number) {\r\n        if (this._mobility === m) {\r\n            return;\r\n        }\r\n\r\n        this._mobility = m;\r\n        this.emit(NodeEventType.MOBILITY_CHANGED);\r\n    }\r\n\r\n    get mobility (): number {\r\n        return this._mobility;\r\n    }\r\n\r\n    /**\r\n     * @en Layer of the current Node, it affects raycast, physics etc, refer to [[Layers]]\r\n     * @zh 节点所属层，主要影响射线检测、物理碰撞等，参考 [[Layers]]\r\n     */\r\n    @editable\r\n    set layer (l: number) {\r\n        const self = this;\r\n        if (self._layer === l) {\r\n            return;\r\n        }\r\n\r\n        self._layer = l;\r\n\r\n        const uiComp = self._uiProps && self._uiProps.uiComp;\r\n        if (uiComp) {\r\n            uiComp.setNodeDirty();\r\n            uiComp._markForUpdateRenderData();\r\n        }\r\n        self.emit(NodeEventType.LAYER_CHANGED, self._layer);\r\n    }\r\n\r\n    get layer (): number {\r\n        return this._layer;\r\n    }\r\n\r\n    /**\r\n     * @zh 节点的变换改动版本号。\r\n     * @en The transformation change version number of the node.\r\n     * @engineInternal\r\n     * @internal\r\n     */\r\n    get flagChangedVersion (): number {\r\n        return this._flagChangeVersion;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the node's transformation have changed during the current frame.\r\n     * @zh 这个节点的空间变换信息在当前帧内是否有变过？\r\n     */\r\n    get hasChangedFlags (): number {\r\n        return this._flagChangeVersion === globalFlagChangeVersion ? this._hasChangedFlags : 0;\r\n    }\r\n\r\n    set hasChangedFlags (val: number) {\r\n        this._flagChangeVersion = globalFlagChangeVersion;\r\n        this._hasChangedFlags = val;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public [serializeTag] (serializationOutput: SerializationOutput, context: SerializationContext): void {\r\n        if (!EDITOR) {\r\n            serializationOutput.writeThis();\r\n            return;\r\n        }\r\n\r\n        // Detects if this node is mounted node of `PrefabInstance`\r\n        // TODO: optimize\r\n        const isMountedChild = (): boolean => !!(this[editorExtrasTag] as any)?.mountedRoot;\r\n\r\n        // Returns if this node is under `PrefabInstance`\r\n        // eslint-disable-next-line arrow-body-style\r\n        const isSyncPrefab = (): boolean | PrefabInstance | undefined => {\r\n            // 1. Under `PrefabInstance`, but not mounted\r\n            // 2. If the mounted node is a `PrefabInstance`, it's also a \"sync prefab\".\r\n            return this._prefab?.root?._prefab?.instance && (this?._prefab?.instance || !isMountedChild());\r\n        };\r\n\r\n        const canDiscardByPrefabRoot = (): boolean => !(context.customArguments[(reserveContentsForAllSyncablePrefabTag) as any]\r\n            || !isSyncPrefab() || context.root === this);\r\n\r\n        if (canDiscardByPrefabRoot()) {\r\n            // discard props disallow to synchronize\r\n            const isRoot = this._prefab?.root === this;\r\n            if (isRoot) {\r\n                // if B prefab is in A prefab,B can be referenced by component.We should discard it.because B is not the root of prefab\r\n                let isNestedPrefab = false;\r\n                let parent = this.getParent();\r\n                while (parent) {\r\n                    const nestedRoots = parent._prefab?.nestedPrefabInstanceRoots;\r\n                    if (nestedRoots && nestedRoots.length > 0) {\r\n                        // if this node is not in nestedPrefabInstanceRoots,it means this node is not the root of prefab,so it should be discarded.\r\n                        isNestedPrefab = !nestedRoots.some((root) => root === this);\r\n                        break;\r\n                    }\r\n                    parent = parent.getParent();\r\n                }\r\n                if (!isNestedPrefab) {\r\n                    serializationOutput.writeProperty('_objFlags', this._objFlags);\r\n                    serializationOutput.writeProperty('_parent', this._parent);\r\n                    serializationOutput.writeProperty('_prefab', this._prefab);\r\n                    if (context.customArguments.keepNodeUuid) {\r\n                        serializationOutput.writeProperty('_id', this._id);\r\n                    }\r\n                }\r\n                // TODO: editorExtrasTag may be a symbol in the future\r\n                serializationOutput.writeProperty(editorExtrasTag, this[editorExtrasTag]);\r\n            } else {\r\n                // should not serialize child node of synchronizable prefab\r\n            }\r\n        } else {\r\n            serializationOutput.writeThis();\r\n        }\r\n    }\r\n\r\n    // ===============================\r\n    // hierarchy\r\n    // ===============================\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onSetParent (oldParent: this | null, keepWorldTransform = false): void {\r\n        const self = this;\r\n        const parent = self._parent;\r\n        if (parent) {\r\n            if ((oldParent == null || oldParent._scene !== parent._scene) && parent._scene != null) {\r\n                self.walk(Node._setScene);\r\n            }\r\n        }\r\n\r\n        if (keepWorldTransform) {\r\n            if (parent) {\r\n                parent.updateWorldTransform();\r\n                if (approx(Mat4.determinant(parent._mat), 0, EPSILON)) {\r\n                    warnID(14300);\r\n                    self._transformFlags |= TransformBit.TRS;\r\n                    self.updateWorldTransform();\r\n                } else {\r\n                    let newParentMatWithoutSkew = parent._mat;\r\n                    if (USE_UI_SKEW) {\r\n                        const hasSkew = skewCompCount > 0;\r\n                        if (hasSkew) {\r\n                            if (oldParent) {\r\n                                // Calculate old parent's world matrix without skew side effect.\r\n                                const foundSkewInOldParent = findSkewAndGetOriginalWorldMatrix(oldParent, m4_2);\r\n                                Mat4.fromSRT(m4_1, self._lrot, self._lpos, self._lscale);\r\n                                const oldParentMatWithoutSkew = foundSkewInOldParent ? m4_2 : oldParent._mat;\r\n                                // Calculate current node's world matrix without skew side effect.\r\n                                Mat4.multiply(self._mat, oldParentMatWithoutSkew, m4_1);\r\n                            }\r\n\r\n                            // Calculate new parent's world matrix without skew side effect.\r\n                            const foundSkewInNewParent = findSkewAndGetOriginalWorldMatrix(parent, m4_2);\r\n                            if (foundSkewInNewParent) {\r\n                                newParentMatWithoutSkew = m4_2;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Calculate current node's new local transform\r\n                    Mat4.multiply(m4_1, Mat4.invert(m4_1, newParentMatWithoutSkew), self._mat);\r\n                    Mat4.toSRT(m4_1, self._lrot, self._lpos, self._lscale);\r\n                }\r\n            } else {\r\n                Vec3.copy(self._lpos, self._pos);\r\n                Quat.copy(self._lrot, self._rot);\r\n                Vec3.copy(self._lscale, self._scale);\r\n            }\r\n            self._eulerDirty = true;\r\n        }\r\n\r\n        self.invalidateChildren(TransformBit.TRS);\r\n    }\r\n\r\n    protected _onHierarchyChanged (oldParent: this | null): void {\r\n        this.eventProcessor.reattach();\r\n        this._onHierarchyChangedBase(oldParent);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onBatchCreated (dontSyncChildPrefab: boolean): void {\r\n        if (this._eventMask & ACTIVE_ON) {\r\n            if (!this._activeInHierarchy) {\r\n                this.emit(ACTIVE_CHANGED, this, false);\r\n            }\r\n        }\r\n\r\n        this.hasChangedFlags = TransformBit.TRS;\r\n        this._children.forEach((child: Node, i: number) => {\r\n            child._siblingIndex = i;\r\n            child._onBatchCreated(dontSyncChildPrefab);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onBeforeSerialize (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n        this.eulerAngles; // make sure we save the correct eulerAngles\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onPostActivated (active: boolean): void {\r\n        const self = this;\r\n        if (self._eventMask & ACTIVE_ON) {\r\n            self.emit(ACTIVE_CHANGED, self, active);\r\n        }\r\n\r\n        const eventProcessor = this._eventProcessor;\r\n        // If the 'enable' state of event processor is equal to the node's active state, we should mark the list dirty for the global callback invoker\r\n        // which will trigger re-sorting logic in PointerEventDispatcher._sortPointerEventProcessorList.\r\n        // Otherwise, pointerEventProcessorList will not be sorted correctly since the 'enable' state may not change and the following\r\n        // eventProcessor.setEnabled(active) may return directly.\r\n        // Think of the case:\r\n        //   this.node.pauseSystemEvents(true);  // child's eventProcessor will be disabled.\r\n        //   child.active = false;               // child's active state is false and its eventProcessor keeps disabled.\r\n        //   this.node.resumeSystemEvents(true); // child's eventProcessor will be enabled, MARK_LIST_DIRTY will be emitted,\r\n        //                                          but the node is not active, so the resorting logic will take the child to the end of the list,\r\n        //                                          see PointerEventDispatcher._sortByPriority.\r\n        //   child.active = true;                // child's eventProcessor has already been enabled, eventProcessor.setEnabled(true) will do nothing.\r\n        if (eventProcessor.isEnabled === active) {\r\n            NodeEventProcessor.callbacksInvoker.emit(DispatcherEventType.MARK_LIST_DIRTY);\r\n        }\r\n\r\n        eventProcessor.setEnabled(active);\r\n\r\n        if (active) { // activated\r\n            // in case transform updated during deactivated period\r\n            self.invalidateChildren(TransformBit.TRS);\r\n            // ALL Node renderData dirty flag will set on here\r\n            const uiComp = self._uiProps && self._uiProps.uiComp;\r\n            if (uiComp) {\r\n                uiComp.setNodeDirty();\r\n                uiComp.setTextureDirty(); // for dynamic atlas\r\n                uiComp._markForUpdateRenderData();\r\n            }\r\n        }\r\n    }\r\n\r\n    // ===============================\r\n    // transform helper, convenient but not the most efficient\r\n    // ===============================\r\n\r\n    /**\r\n     * @en Perform a translation on the node\r\n     * @zh 移动节点\r\n     * @param trans The increment on position\r\n     * @param ns The operation coordinate space\r\n     */\r\n    public translate (trans: Vec3, ns?: NodeSpace): void {\r\n        const space = ns || NodeSpace.LOCAL;\r\n        if (space === NodeSpace.LOCAL) {\r\n            Vec3.transformQuat(v3_a, trans, this._lrot);\r\n            this._lpos.x += v3_a.x;\r\n            this._lpos.y += v3_a.y;\r\n            this._lpos.z += v3_a.z;\r\n        } else if (space === NodeSpace.WORLD) {\r\n            if (this._parent) {\r\n                Quat.invert(q_a, this._parent.worldRotation);\r\n                Vec3.transformQuat(v3_a, trans, q_a);\r\n                const scale = this.worldScale;\r\n                this._lpos.x += v3_a.x / scale.x;\r\n                this._lpos.y += v3_a.y / scale.y;\r\n                this._lpos.z += v3_a.z / scale.z;\r\n            } else {\r\n                this._lpos.x += trans.x;\r\n                this._lpos.y += trans.y;\r\n                this._lpos.z += trans.z;\r\n            }\r\n        }\r\n        this.invalidateChildren(TransformBit.POSITION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.POSITION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Perform a rotation on the node\r\n     * @zh 旋转节点\r\n     * @param rot The increment on rotation\r\n     * @param ns The operation coordinate space\r\n     */\r\n    public rotate (rot: Quat, ns?: NodeSpace): void {\r\n        const space = ns || NodeSpace.LOCAL;\r\n        Quat.normalize(q_a, rot);\r\n\r\n        if (space === NodeSpace.LOCAL) {\r\n            Quat.multiply(this._lrot, this._lrot, q_a);\r\n        } else if (space === NodeSpace.WORLD) {\r\n            const worldRot = this.worldRotation;\r\n            Quat.multiply(q_b, q_a, worldRot);\r\n            Quat.invert(q_a, worldRot);\r\n            Quat.multiply(q_b, q_a, q_b);\r\n            Quat.multiply(this._lrot, this._lrot, q_b);\r\n        }\r\n        this._eulerDirty = true;\r\n        this.invalidateChildren(TransformBit.ROTATION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.ROTATION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set the orientation of the node to face the target position, the node is facing minus z direction by default\r\n     * @zh 设置当前节点旋转为面向目标位置，默认前方为 -z 方向\r\n     * @param pos Target position\r\n     * @param up Up direction\r\n     */\r\n    public lookAt (pos: Readonly<Vec3>, up?: Readonly<Vec3>): void {\r\n        this.getWorldPosition(v3_a);\r\n        Vec3.subtract(v3_a, v3_a, pos);\r\n        Vec3.normalize(v3_a, v3_a);\r\n        Quat.fromViewUp(q_a, v3_a, up);\r\n        this.setWorldRotation(q_a);\r\n    }\r\n\r\n    /**\r\n     * @en Invalidate the world transform information\r\n     * for this node and all its children recursively\r\n     * @zh 递归标记节点世界变换为 dirty\r\n     * @param dirtyBit The dirty bits to setup to children, can be composed with multiple dirty bits\r\n     */\r\n    public invalidateChildren (dirtyBit: TransformBit): void {\r\n        let i = 0;\r\n        let j = 0;\r\n        let l = 0;\r\n        let cur: Node;\r\n        let children: Node[];\r\n        let hasChangedFlags = 0;\r\n        const childDirtyBit = dirtyBit | TransformBit.POSITION;\r\n\r\n        dirtyNodes[0] = this;\r\n\r\n        while (i >= 0) {\r\n            cur = dirtyNodes[i--];\r\n            hasChangedFlags = cur.hasChangedFlags;\r\n            if (cur.isValid && !cur.isSkipTransformUpdate && (cur._transformFlags & hasChangedFlags & dirtyBit) !== dirtyBit) {\r\n                cur._transformFlags |= dirtyBit;\r\n                cur.hasChangedFlags = hasChangedFlags | dirtyBit;\r\n\r\n                children = cur._children;\r\n                l = children.length;\r\n                for (j = 0; j < l; j++) {\r\n                    dirtyNodes[++i] = children[j];\r\n                }\r\n            }\r\n            dirtyBit = childDirtyBit;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Update the world transform information if outdated\r\n     * @zh 更新节点的世界变换信息\r\n     */\r\n    public updateWorldTransform (): void {\r\n        if (!this._transformFlags) { return; }\r\n        // we need to recursively iterate this\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let cur: Node | null = this;\r\n        let i = 0;\r\n        while (cur && cur._transformFlags) {\r\n            // top level node\r\n            dirtyNodes[i++] = cur;\r\n            cur = cur._parent;\r\n        }\r\n        let child: Node;\r\n        let childMat: Mat4;\r\n        let childPos: Vec3;\r\n        let dirtyBits = 0;\r\n        let positionDirty = 0;\r\n        let rotationScaleSkewDirty = 0;\r\n        let uiSkewComp: UISkew | null = null;\r\n        let foundSkewInAncestor = false;\r\n\r\n        while (i) {\r\n            child = dirtyNodes[--i];\r\n            childMat = child._mat;\r\n            childPos = child._pos;\r\n            dirtyBits |= child._transformFlags;\r\n            positionDirty = dirtyBits & TransformBit.POSITION;\r\n            rotationScaleSkewDirty = dirtyBits & TransformBit.RSS;\r\n            if (cur) {\r\n                if (positionDirty && !rotationScaleSkewDirty) {\r\n                    Vec3.transformMat4(childPos, child._lpos, cur._mat);\r\n                    childMat.m12 = childPos.x;\r\n                    childMat.m13 = childPos.y;\r\n                    childMat.m14 = childPos.z;\r\n                }\r\n                if (rotationScaleSkewDirty) {\r\n                    let originalWorldMatrix = childMat;\r\n                    Mat4.fromSRT(m4_1, child._lrot, child._lpos, child._lscale); // m4_1 stores local matrix\r\n                    if (USE_UI_SKEW && skewCompCount > 0) {\r\n                        foundSkewInAncestor = findSkewAndGetOriginalWorldMatrix(cur, m4_2); // m4_2 stores parent's world matrix without skew\r\n                        uiSkewComp = child._uiProps._uiSkewComp;\r\n                        if (uiSkewComp || foundSkewInAncestor) {\r\n                            // Save the original world matrix without skew side effect.\r\n                            Mat4.multiply(m4_2, m4_2, m4_1); // m4_2 stores orignal world matrix without skew\r\n                            if (uiSkewComp) {\r\n                                updateLocalMatrixBySkew(uiSkewComp, m4_1);\r\n                            }\r\n                            originalWorldMatrix = m4_2;\r\n                        }\r\n                    }\r\n\r\n                    Mat4.multiply(childMat, cur._mat, m4_1); // m4_1 stores local matrix with skew\r\n\r\n                    const rotTmp = dirtyBits & TransformBit.ROTATION ? child._rot : null;\r\n                    Mat4.toSRT(originalWorldMatrix, rotTmp, childPos, child._scale);\r\n\r\n                    if (USE_UI_SKEW && foundSkewInAncestor) {\r\n                        // NOTE: world position from Mat4.toSRT(originalWorldMatrix, ...) will not consider the skew factor.\r\n                        // So we need to update the world position manually here.\r\n                        Vec3.transformMat4(childPos, child._lpos, cur._mat);\r\n                    }\r\n                }\r\n            } else {\r\n                if (positionDirty) {\r\n                    Vec3.copy(childPos, child._lpos);\r\n                    childMat.m12 = childPos.x;\r\n                    childMat.m13 = childPos.y;\r\n                    childMat.m14 = childPos.z;\r\n                }\r\n                if (rotationScaleSkewDirty) {\r\n                    if (dirtyBits & TransformBit.ROTATION) {\r\n                        Quat.copy(child._rot, child._lrot);\r\n                    }\r\n                    if (dirtyBits & TransformBit.SCALE) {\r\n                        Vec3.copy(child._scale, child._lscale);\r\n                    }\r\n                    Mat4.fromSRT(childMat, child._rot, child._pos, child._scale);\r\n\r\n                    if (USE_UI_SKEW && skewCompCount > 0) {\r\n                        uiSkewComp = child._uiProps._uiSkewComp;\r\n                        if (uiSkewComp) {\r\n                            updateLocalMatrixBySkew(uiSkewComp, childMat);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            child._transformFlags = TransformBit.NONE;\r\n            cur = child;\r\n        }\r\n    }\r\n\r\n    // ===============================\r\n    // transform\r\n    // ===============================\r\n\r\n    /**\r\n     * @en Set position in local coordinate system\r\n     * @zh 设置本地坐标\r\n     * @param position Target position\r\n     */\r\n    public setPosition(position: Readonly<Vec3>): void;\r\n\r\n    /**\r\n     * @en Set position in local coordinate system\r\n     * @zh 设置本地坐标\r\n     * @param x X axis position\r\n     * @param y Y axis position\r\n     * @param z Z axis position\r\n     */\r\n    public setPosition(x: number, y: number, z?: number): void;\r\n\r\n    public setPosition (val: Readonly<Vec3> | number, y?: number, z?: number): void {\r\n        const localPosition = this._lpos;\r\n\r\n        if (y === undefined) {\r\n            Vec3.copy(localPosition, val as Vec3);\r\n        } else {\r\n            if (z === undefined) {\r\n                z = localPosition.z;\r\n            }\r\n\r\n            Vec3.set(localPosition, val as number, y, z);\r\n        }\r\n\r\n        this.invalidateChildren(TransformBit.POSITION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.POSITION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get position in local coordinate system, please try to pass `out` vector and reuse it to avoid garbage.\r\n     * @zh 获取本地坐标，注意，尽可能传递复用的 [[Vec3]] 以避免产生垃圾。\r\n     * @param out Set the result to out vector\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new vector will be generated and return\r\n     */\r\n    public getPosition (out?: Vec3): Vec3 {\r\n        if (out) {\r\n            return Vec3.set(out, this._lpos.x, this._lpos.y, this._lpos.z);\r\n        }\r\n        return Vec3.copy(new Vec3(), this._lpos);\r\n    }\r\n\r\n    /**\r\n     * @en Set rotation in local coordinate system with a quaternion representing the rotation.\r\n     * Please make sure the rotation is normalized.\r\n     * @zh 用四元数设置本地旋转, 请确保设置的四元数已归一化。\r\n     * @param rotation Rotation in quaternion\r\n     */\r\n    public setRotation(rotation: Readonly<Quat>): void;\r\n\r\n    /**\r\n     * @en Set rotation in local coordinate system with a quaternion representing the rotation.\r\n     * Please make sure the rotation is normalized.\r\n     * @zh 用四元数设置本地旋转, 请确保设置的四元数已归一化。\r\n     * @param x X value in quaternion\r\n     * @param y Y value in quaternion\r\n     * @param z Z value in quaternion\r\n     * @param w W value in quaternion\r\n     */\r\n    public setRotation(x: number, y: number, z: number, w: number): void;\r\n\r\n    public setRotation (val: Readonly<Quat> | number, y?: number, z?: number, w?: number): void {\r\n        if (y === undefined) {\r\n            Quat.copy(this._lrot, val as Quat);\r\n        } else {\r\n            Quat.set(this._lrot, val as number, y, z!, w!);\r\n        }\r\n\r\n        this._eulerDirty = true;\r\n        this.invalidateChildren(TransformBit.ROTATION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.ROTATION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set rotation in local coordinate system with a vector representing euler angles\r\n     * @zh 用欧拉角设置本地旋转\r\n     * @param rotation Rotation in vector\r\n     */\r\n    public setRotationFromEuler(rotation: Vec3): void;\r\n\r\n    /**\r\n     * @en Set rotation in local coordinate system with euler angles\r\n     * @zh 用欧拉角设置本地旋转\r\n     * @param x X axis rotation\r\n     * @param y Y axis rotation\r\n     * @param zOpt Z axis rotation\r\n     */\r\n    public setRotationFromEuler(x: number, y: number, zOpt?: number): void;\r\n\r\n    public setRotationFromEuler (val: Vec3 | number, y?: number, zOpt?: number): void {\r\n        if (y === undefined) {\r\n            Vec3.copy(this._euler, val as Vec3);\r\n            Quat.fromEuler(this._lrot, (val as Vec3).x, (val as Vec3).y, (val as Vec3).z);\r\n        } else {\r\n            const z = zOpt === undefined ? this._euler.z : zOpt;\r\n            Vec3.set(this._euler, val as number, y, z);\r\n            Quat.fromEuler(this._lrot, val as number, y, z);\r\n        }\r\n\r\n        this._eulerDirty = false;\r\n\r\n        this.invalidateChildren(TransformBit.ROTATION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.ROTATION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get rotation as quaternion in local coordinate system, please try to pass `out` quaternion and reuse it to avoid garbage.\r\n     * @zh 获取本地旋转，注意，尽可能传递复用的 [[Quat]] 以避免产生垃圾。\r\n     * @param out Set the result to out quaternion\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new quaternion will be generated and return\r\n     */\r\n    public getRotation (out?: Quat): Quat {\r\n        if (out) {\r\n            return Quat.set(out, this._lrot.x, this._lrot.y, this._lrot.z, this._lrot.w);\r\n        }\r\n        return Quat.copy(new Quat(), this._lrot);\r\n    }\r\n\r\n    /**\r\n     * @en Set scale in local coordinate system\r\n     * @zh 设置本地缩放\r\n     * @param scale Target scale\r\n     */\r\n    public setScale(scale: Readonly<Vec3>): void;\r\n\r\n    /**\r\n     * @en Set scale in local coordinate system\r\n     * @zh 设置本地缩放\r\n     * @param x X axis scale\r\n     * @param y Y axis scale\r\n     * @param z Z axis scale\r\n     */\r\n    public setScale(x: number, y: number, z?: number): void;\r\n\r\n    public setScale (val: Readonly<Vec3> | number, y?: number, z?: number): void {\r\n        const localScale = this._lscale;\r\n\r\n        if (y === undefined) {\r\n            Vec3.copy(localScale, val as Vec3);\r\n        } else {\r\n            if (z === undefined) {\r\n                z = localScale.z;\r\n            }\r\n            Vec3.set(localScale, val as number, y, z);\r\n        }\r\n\r\n        this.invalidateChildren(TransformBit.SCALE);\r\n\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.SCALE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get scale in local coordinate system, please try to pass `out` vector and reuse it to avoid garbage.\r\n     * @zh 获取本地缩放，注意，尽可能传递复用的 [[Vec3]] 以避免产生垃圾。\r\n     * @param out Set the result to out vector\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new vector will be generated and return\r\n     */\r\n    public getScale (out?: Vec3): Vec3 {\r\n        if (out) {\r\n            return Vec3.set(out, this._lscale.x, this._lscale.y, this._lscale.z);\r\n        }\r\n        return Vec3.copy(new Vec3(), this._lscale);\r\n    }\r\n\r\n    /**\r\n     * @en Inversely transform a point from world coordinate system to local coordinate system.\r\n     * @zh 逆向变换一个空间点，一般用于将世界坐标转换到本地坐标系中。\r\n     * @param out The result point in local coordinate system will be stored in this vector\r\n     * @param p A position in world coordinate system\r\n     */\r\n    public inverseTransformPoint (out: Vec3, p: Vec3): Vec3 {\r\n        Vec3.copy(out, p);\r\n        // we need to recursively iterate this\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let cur: Node = this;\r\n        let i = 0;\r\n        while (cur._parent) {\r\n            dirtyNodes[i++] = cur;\r\n            cur = cur._parent;\r\n        }\r\n        while (i >= 0) {\r\n            Vec3.transformInverseRTS(out, out, cur._lrot, cur._lpos, cur._lscale);\r\n            cur = dirtyNodes[--i];\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Set position in world coordinate system\r\n     * @zh 设置世界坐标\r\n     * @param position Target position\r\n     */\r\n    public setWorldPosition(position: Vec3): void;\r\n\r\n    /**\r\n     * @en Set position in world coordinate system\r\n     * @zh 设置世界坐标\r\n     * @param x X axis position\r\n     * @param y Y axis position\r\n     * @param z Z axis position\r\n     */\r\n    public setWorldPosition(x: number, y: number, z: number): void;\r\n\r\n    public setWorldPosition (val: Vec3 | number, y?: number, z?: number): void {\r\n        const worldPosition = this._pos;\r\n\r\n        if (y === undefined) {\r\n            Vec3.copy(worldPosition, val as Vec3);\r\n        } else {\r\n            Vec3.set(worldPosition, val as number, y, z!);\r\n        }\r\n\r\n        const parent = this._parent;\r\n        const local = this._lpos;\r\n        if (parent) {\r\n            // TODO: benchmark these approaches\r\n            /* */\r\n            parent.updateWorldTransform();\r\n            Vec3.transformMat4(local, worldPosition, Mat4.invert(m4_1, parent._mat));\r\n            /* *\r\n            parent.inverseTransformPoint(local, this._pos);\r\n            /* */\r\n        } else {\r\n            Vec3.copy(local, worldPosition);\r\n        }\r\n\r\n        this.invalidateChildren(TransformBit.POSITION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.POSITION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get position in world coordinate system, please try to pass `out` vector and reuse it to avoid garbage.\r\n     * @zh 获取世界坐标，注意，尽可能传递复用的 [[Vec3]] 以避免产生垃圾。\r\n     * @param out Set the result to out vector\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new vector will be generated and return\r\n     */\r\n    public getWorldPosition (out?: Vec3): Vec3 {\r\n        this.updateWorldTransform();\r\n        if (out) {\r\n            return Vec3.copy(out, this._pos);\r\n        }\r\n        return Vec3.copy(new Vec3(), this._pos);\r\n    }\r\n\r\n    /**\r\n     * @en Set rotation in world coordinate system with a quaternion representing the rotation\r\n     * @zh 用四元数设置世界坐标系下的旋转\r\n     * @param rotation Rotation in quaternion\r\n     */\r\n    public setWorldRotation(rotation: Quat): void;\r\n\r\n    /**\r\n     * @en Set rotation in world coordinate system with a quaternion representing the rotation\r\n     * @zh 用四元数设置世界坐标系下的旋转\r\n     * @param x X value in quaternion\r\n     * @param y Y value in quaternion\r\n     * @param z Z value in quaternion\r\n     * @param w W value in quaternion\r\n     */\r\n    public setWorldRotation(x: number, y: number, z: number, w: number): void;\r\n\r\n    public setWorldRotation (val: Quat | number, y?: number, z?: number, w?: number): void {\r\n        const worldRotation = this._rot;\r\n        if (y === undefined) {\r\n            Quat.copy(worldRotation, val as Quat);\r\n        } else {\r\n            Quat.set(worldRotation, val as number, y, z!, w!);\r\n        }\r\n\r\n        if (this._parent) {\r\n            this._parent.updateWorldTransform();\r\n            Quat.multiply(this._lrot, Quat.conjugate(this._lrot, this._parent._rot), worldRotation);\r\n        } else {\r\n            Quat.copy(this._lrot, worldRotation);\r\n        }\r\n        this._eulerDirty = true;\r\n\r\n        this.invalidateChildren(TransformBit.ROTATION);\r\n        if (this._eventMask & TRANSFORM_ON) {\r\n            this.emit(TRANSFORM_CHANGED, TransformBit.ROTATION);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set rotation in world coordinate system with euler angles\r\n     * @zh 用欧拉角设置世界坐标系下的旋转\r\n     * @param x X axis rotation\r\n     * @param y Y axis rotation\r\n     * @param z Z axis rotation\r\n     */\r\n    public setWorldRotationFromEuler (x: number, y: number, z: number): void {\r\n        Quat.fromEuler(q_a, x, y, z);\r\n        this.setWorldRotation(q_a);\r\n    }\r\n\r\n    /**\r\n     * @en Get rotation as quaternion in world coordinate system, please try to pass `out` quaternion and reuse it to avoid garbage.\r\n     * @zh 获取世界坐标系下的旋转，注意，尽可能传递复用的 [[Quat]] 以避免产生垃圾。\r\n     * @param out Set the result to out quaternion\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new quaternion will be generated and return\r\n     */\r\n    public getWorldRotation (out?: Quat): Quat {\r\n        this.updateWorldTransform();\r\n        if (out) {\r\n            return Quat.copy(out, this._rot);\r\n        }\r\n        return Quat.copy(new Quat(), this._rot);\r\n    }\r\n\r\n    /**\r\n     * @en Set scale in world coordinate system\r\n     * @zh 设置世界坐标系下的缩放\r\n     * @param scale Target scale\r\n     */\r\n    public setWorldScale(scale: Vec3): void;\r\n\r\n    /**\r\n     * @en Set scale in world coordinate system\r\n     * @zh 设置世界坐标系下的缩放\r\n     * @param x X axis scale\r\n     * @param y Y axis scale\r\n     * @param z Z axis scale\r\n     */\r\n    public setWorldScale(x: number, y: number, z: number): void;\r\n\r\n    public setWorldScale (val: Vec3 | number, y?: number, z?: number): void {\r\n        const self = this;\r\n        const parent = self._parent;\r\n        if (parent) {\r\n            self.updateWorldTransform();\r\n        }\r\n\r\n        const worldScale = self._scale;\r\n        if (y === undefined) {\r\n            Vec3.copy(worldScale, val as Vec3);\r\n        } else {\r\n            Vec3.set(worldScale, val as number, y, z!);\r\n        }\r\n\r\n        let rotationFlag = TransformBit.NONE;\r\n        if (parent) {\r\n            const worldMatrix = self._mat;\r\n            const uiSkewComp = self._uiProps._uiSkewComp;\r\n            if (uiSkewComp) {\r\n                Mat4.fromSRT(m4_1, self._lrot, self._lpos, self._lscale);\r\n                Mat4.multiply(worldMatrix, parent._mat, m4_1);\r\n            }\r\n            const xScale = Vec3.set(v3_b, worldMatrix.m00, worldMatrix.m01, worldMatrix.m02).length();\r\n            const yScale = Vec3.set(v3_b, worldMatrix.m04, worldMatrix.m05, worldMatrix.m06).length();\r\n            const zScale = Vec3.set(v3_b, worldMatrix.m08, worldMatrix.m09, worldMatrix.m10).length();\r\n            if (xScale === 0) {\r\n                v3_a.x = worldScale.x;\r\n                worldMatrix.m00 = 1;\r\n                rotationFlag = TransformBit.ROTATION;\r\n            } else {\r\n                v3_a.x = worldScale.x / xScale;\r\n            }\r\n\r\n            if (yScale === 0) {\r\n                v3_a.y = worldScale.y;\r\n                worldMatrix.m05 = 1;\r\n                rotationFlag = TransformBit.ROTATION;\r\n            } else {\r\n                v3_a.y = worldScale.y / yScale;\r\n            }\r\n\r\n            if (zScale === 0) {\r\n                v3_a.z = worldScale.z;\r\n                worldMatrix.m10 = 1;\r\n                rotationFlag = TransformBit.ROTATION;\r\n            } else {\r\n                v3_a.z = worldScale.z / zScale;\r\n            }\r\n\r\n            Mat4.scale(m4_1, worldMatrix, v3_a);\r\n            Mat4.multiply(m4_2, Mat4.invert(m4_2, parent._mat), m4_1);\r\n            Mat3.fromQuat(m3_1, Quat.conjugate(qt_1, self._lrot));\r\n            Mat3.multiplyMat4(m3_1, m3_1, m4_2);\r\n\r\n            const localScale = self._lscale;\r\n            localScale.x = Vec3.set(v3_a, m3_1.m00, m3_1.m01, m3_1.m02).length();\r\n            localScale.y = Vec3.set(v3_a, m3_1.m03, m3_1.m04, m3_1.m05).length();\r\n            localScale.z = Vec3.set(v3_a, m3_1.m06, m3_1.m07, m3_1.m08).length();\r\n            if (localScale.x === 0 || localScale.y === 0 || localScale.z === 0) {\r\n                rotationFlag = TransformBit.ROTATION;\r\n            }\r\n        } else {\r\n            Vec3.copy(self._lscale, worldScale);\r\n        }\r\n\r\n        self.invalidateChildren(TransformBit.SCALE | rotationFlag);\r\n        if (self._eventMask & TRANSFORM_ON) {\r\n            self.emit(TRANSFORM_CHANGED, TransformBit.SCALE | rotationFlag);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get scale in world coordinate system, please try to pass `out` vector and reuse it to avoid garbage.\r\n     * @zh 获取世界缩放，注意，尽可能传递复用的 [[Vec3]] 以避免产生垃圾。\r\n     * @param out Set the result to out vector\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new vector will be generated and return\r\n     */\r\n    public getWorldScale (out?: Vec3): Vec3 {\r\n        this.updateWorldTransform();\r\n        if (out) {\r\n            return Vec3.copy(out, this._scale);\r\n        }\r\n        return Vec3.copy(new Vec3(), this._scale);\r\n    }\r\n\r\n    /**\r\n     * @en Get a world transform matrix\r\n     * @zh 获取世界变换矩阵\r\n     * @param out Set the result to out matrix\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new matrix will be generated and return\r\n     */\r\n    public getWorldMatrix (out?: Mat4): Mat4 {\r\n        this.updateWorldTransform();\r\n        const target = out || new Mat4();\r\n        return Mat4.copy(target, this._mat);\r\n    }\r\n\r\n    /**\r\n     * @en Get a world transform matrix with only rotation and scale\r\n     * @zh 获取只包含旋转和缩放的世界变换矩阵\r\n     * @param out Set the result to out matrix\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new matrix will be generated and return\r\n     */\r\n    public getWorldRS (out?: Mat4): Mat4 {\r\n        this.updateWorldTransform();\r\n        const target = out || new Mat4();\r\n        Mat4.copy(target, this._mat);\r\n        target.m12 = 0; target.m13 = 0; target.m14 = 0;\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     * @en Get a world transform matrix with only rotation and translation\r\n     * @zh 获取只包含旋转和位移的世界变换矩阵\r\n     * @param out Set the result to out matrix\r\n     * @return If `out` given, the return value equals to `out`, otherwise a new matrix will be generated and return\r\n     */\r\n    public getWorldRT (out?: Mat4): Mat4 {\r\n        this.updateWorldTransform();\r\n        const target = out || new Mat4();\r\n        return Mat4.fromRT(target, this._rot, this._pos);\r\n    }\r\n\r\n    /**\r\n     * @en Set local transformation with rotation, position and scale separately.\r\n     * @zh 一次性设置所有局部变换（平移、旋转、缩放）信息\r\n     * @param rot The rotation\r\n     * @param pos The position\r\n     * @param scale The scale\r\n     */\r\n    public setRTS (rot?: Quat | Vec3, pos?: Vec3, scale?: Vec3): void {\r\n        let dirtyBit: TransformBit = 0;\r\n        if (rot) {\r\n            dirtyBit |= TransformBit.ROTATION;\r\n            if ((rot as Quat).w !== undefined) {\r\n                Quat.copy(this._lrot, rot as Quat);\r\n                this._eulerDirty = true;\r\n            } else {\r\n                Vec3.copy(this._euler, rot);\r\n                Quat.fromEuler(this._lrot, rot.x, rot.y, rot.z);\r\n                this._eulerDirty = false;\r\n            }\r\n        }\r\n        if (pos) {\r\n            Vec3.copy(this._lpos, pos);\r\n            dirtyBit |= TransformBit.POSITION;\r\n        }\r\n        if (scale) {\r\n            Vec3.copy(this._lscale, scale);\r\n            dirtyBit |= TransformBit.SCALE;\r\n        }\r\n        if (dirtyBit) {\r\n            this.invalidateChildren(dirtyBit);\r\n            if (this._eventMask & TRANSFORM_ON) {\r\n                this.emit(TRANSFORM_CHANGED, dirtyBit);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Does the world transform information of this node need to be updated?\r\n     * @zh 这个节点的空间变换信息是否需要更新？\r\n     */\r\n    public isTransformDirty (): boolean {\r\n        return this._transformFlags !== TransformBit.NONE;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pause all system events which is dispatched by [[SystemEvent]].\r\n     * If recursive is set to true, then this API will pause the node system events for the node and all nodes in its sub node tree.\r\n     * @zh\r\n     * 暂停所有 [[SystemEvent]] 派发的系统事件。\r\n     * 如果传递 recursive 为 true，那么这个 API 将暂停本节点和它的子树上所有节点的节点系统事件。\r\n     *\r\n     * @param recursive Whether pause system events recursively for the child node tree\r\n     */\r\n    public pauseSystemEvents (recursive: boolean): void {\r\n        this._eventProcessor.setEnabled(false, recursive);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Resume all paused system events which is dispatched by [[SystemEvent]].\r\n     * If recursive is set to true, then this API will resume the node system events for the node and all nodes in its sub node tree.\r\n     *\r\n     * @zh\r\n     * 恢复所有 [[SystemEvent]] 派发的系统事件。\r\n     * 如果传递 recursive 为 true，那么这个 API 将恢复本节点和它的子树上所有节点的节点系统事件。\r\n     *\r\n     * @param recursive Whether resume system events recursively for the child node tree\r\n     */\r\n    public resumeSystemEvents (recursive: boolean): void {\r\n        this._eventProcessor.setEnabled(true, recursive);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * clear all node dirty state.\r\n     * @zh\r\n     * 清除所有节点的脏标记。\r\n     */\r\n    public static resetHasChangedFlags (): void {\r\n        globalFlagChangeVersion += 1;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * clear node array\r\n     * @zh\r\n     * 清除节点数组\r\n     */\r\n    public static clearNodeArray (): void {\r\n        if (Node.ClearFrame < Node.ClearRound && !EDITOR) {\r\n            Node.ClearFrame++;\r\n        } else {\r\n            Node.ClearFrame = 0;\r\n            dirtyNodes.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the complete path of the current node in the hierarchy.\r\n     *\r\n     * @zh\r\n     * 获得当前节点在 hierarchy 中的完整路径。\r\n     */\r\n    public getPathInHierarchy (): string {\r\n        let result = this.name;\r\n        let curNode: Node | null = this.parent;\r\n        while (curNode && !(curNode instanceof cclegacy.Scene)) {\r\n            result = `${curNode.name}/${result}`;\r\n            curNode = curNode.parent;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @mangle\r\n     * @engineInternal\r\n     */\r\n    _getUITransformComp (): UITransform | null {\r\n        return this._uiProps.uiTransformComp;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    set isSkipTransformUpdate (skip: boolean) {\r\n        if (skip) {\r\n            this._objFlags |= CCObjectFlags.IsSkipTransformUpdate;\r\n        } else {\r\n            this._objFlags &= ~CCObjectFlags.IsSkipTransformUpdate;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     */\r\n    get isSkipTransformUpdate (): boolean {\r\n        return (this._objFlags & CCObjectFlags.IsSkipTransformUpdate) !== 0;\r\n    }\r\n}\r\n\r\nnodePolyfill(Node);\r\n\r\ncclegacy.Node = Node;\r\n","/* eslint-disable func-names */\r\n/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n http://www.cocos.com\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport {\r\n    ccclass, visible, type, displayOrder, readOnly, slide, range, rangeStep,\r\n    editable, serializable, rangeMin, tooltip, formerlySerializedAs, displayName,\r\n} from 'cc.decorator';\r\n\r\nimport { TextureCube } from '../asset/assets/texture-cube';\r\nimport { CCFloat, CCInteger } from '../core/data/utils/attribute';\r\nimport { Color, Quat, Vec3, Vec2, Vec4, v3 } from '../core/math';\r\nimport { Ambient } from '../render-scene/scene/ambient';\r\nimport { Shadows, ShadowType, ShadowSize } from '../render-scene/scene/shadows';\r\nimport { Skybox, EnvironmentLightingType } from '../render-scene/scene/skybox';\r\nimport { Octree } from '../render-scene/scene/octree';\r\nimport { Skin } from '../render-scene/scene/skin';\r\nimport { Fog, FogType } from '../render-scene/scene/fog';\r\nimport { LightProbesData, LightProbes } from '../gi/light-probe/light-probe';\r\nimport { Node } from './node';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { Root } from '../root';\r\nimport { warnID } from '../core/platform/debug';\r\nimport { Material, MaterialPropertyFull } from '../asset/assets/material';\r\nimport { cclegacy } from '../core';\r\nimport { Scene } from './scene';\r\nimport { NodeEventType } from './node-event';\r\nimport { PostSettings, ToneMappingType } from '../render-scene/scene/post-settings';\r\nimport { getPipelineSceneData } from '../rendering/pipeline-scene-data-utils';\r\n\r\nconst _up = new Vec3(0, 1, 0);\r\nconst _v3 = new Vec3();\r\nconst _v4 = new Vec4();\r\nconst _col = new Color();\r\nconst _qt = new Quat();\r\n\r\n// Normalize HDR color\r\nconst normalizeHDRColor = (color: Vec4): void => {\r\n    const intensity = 1.0 / Math.max(Math.max(Math.max(color.x, color.y), color.z), 0.0001);\r\n    if (intensity < 1.0) {\r\n        color.x *= intensity;\r\n        color.y *= intensity;\r\n        color.z *= intensity;\r\n    }\r\n};\r\n/**\r\n * @en Environment lighting configuration in the Scene\r\n * @zh 场景的环境光照相关配置\r\n */\r\n@ccclass('cc.AmbientInfo')\r\nexport class AmbientInfo {\r\n    /**\r\n     * @en The sky color in HDR mode\r\n     * @zh HDR 模式下的天空光照色\r\n     */\r\n    get skyColorHDR (): Readonly<Vec4> {\r\n        return this._skyColorHDR;\r\n    }\r\n\r\n    /**\r\n     * @en The ground color in HDR mode\r\n     * @zh HDR 模式下的地面光照色\r\n     */\r\n    get groundAlbedoHDR (): Readonly<Vec4> {\r\n        return this._groundAlbedoHDR;\r\n    }\r\n\r\n    /**\r\n     * @en Sky illuminance in HDR mode\r\n     * @zh HDR 模式下的天空亮度\r\n     */\r\n    get skyIllumHDR (): number {\r\n        return this._skyIllumHDR;\r\n    }\r\n\r\n    /**\r\n     * @en The sky color in LDR mode\r\n     * @zh LDR 模式下的天空光照色\r\n     */\r\n    get skyColorLDR (): Readonly<Vec4> {\r\n        return this._skyColorLDR;\r\n    }\r\n\r\n    /**\r\n     * @en The ground color in LDR mode\r\n     * @zh LDR 模式下的地面光照色\r\n     */\r\n    get groundAlbedoLDR (): Readonly<Vec4> {\r\n        return this._groundAlbedoLDR;\r\n    }\r\n\r\n    /**\r\n     * @en Sky illuminance in LDR mode\r\n     * @zh LDR 模式下的天空亮度\r\n     */\r\n    get skyIllumLDR (): number {\r\n        return this._skyIllumLDR;\r\n    }\r\n\r\n    /**\r\n     * @en Sky lighting color configurable in editor with color picker\r\n     * @zh 编辑器中可配置的天空光照颜色（通过颜色拾取器）\r\n     */\r\n    @visible(() => {\r\n        const scene = legacyCC.director.getScene();\r\n        const skybox = scene.globals.skybox;\r\n        if (skybox.useIBL && skybox.applyDiffuseMap) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    })\r\n    @editable\r\n    @tooltip('i18n:ambient.skyLightingColor')\r\n    set skyLightingColor (val: Color) {\r\n        _v4.set(val.x, val.y, val.z, val.w);\r\n        if (getPipelineSceneData().isHDR) {\r\n            this._skyColorHDR.set(_v4);\r\n        } else {\r\n            this._skyColorLDR.set(_v4);\r\n        }\r\n        if (this._resource) { this._resource.skyColor.set(_v4); }\r\n    }\r\n    get skyLightingColor (): Color {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        _v4.set(isHDR ? this._skyColorHDR : this._skyColorLDR);\r\n        normalizeHDRColor(_v4);\r\n        return _col.set(_v4.x * 255, _v4.y * 255, _v4.z * 255, 255);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set skyColor (val: Vec4) {\r\n        if (getPipelineSceneData().isHDR) {\r\n            this._skyColorHDR.set(val);\r\n        } else {\r\n            this._skyColorLDR.set(val);\r\n        }\r\n        if (this._resource) { this._resource.skyColor.set(val); }\r\n    }\r\n\r\n    /**\r\n     * @en Sky illuminance\r\n     * @zh 天空亮度\r\n     */\r\n    @editable\r\n    @type(CCFloat)\r\n    @tooltip('i18n:ambient.skyIllum')\r\n    @range([0, Number.POSITIVE_INFINITY, 100])\r\n    set skyIllum (val: number) {\r\n        if (getPipelineSceneData().isHDR) {\r\n            this._skyIllumHDR = val;\r\n        } else {\r\n            this._skyIllumLDR = val;\r\n        }\r\n\r\n        if (this._resource) { this._resource.skyIllum = val; }\r\n    }\r\n    get skyIllum (): number {\r\n        if (getPipelineSceneData().isHDR) {\r\n            return this._skyIllumHDR;\r\n        } else {\r\n            return this._skyIllumLDR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Ground lighting color configurable in editor with color picker\r\n     * @zh 编辑器中可配置的地面光照颜色（通过颜色拾取器）\r\n     */\r\n    @visible(() => {\r\n        const scene = legacyCC.director.getScene();\r\n        const skybox = scene.globals.skybox;\r\n        if (skybox.useIBL && skybox.applyDiffuseMap) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    })\r\n    @editable\r\n    @tooltip('i18n:ambient.groundLightingColor')\r\n    set groundLightingColor (val: Color) {\r\n        _v4.set(val.x, val.y, val.z, val.w);\r\n        if (getPipelineSceneData().isHDR) {\r\n            this._groundAlbedoHDR.set(_v4);\r\n        } else {\r\n            this._groundAlbedoLDR.set(_v4);\r\n        }\r\n        if (this._resource) { this._resource.groundAlbedo.set(_v4); }\r\n    }\r\n    get groundLightingColor (): Color {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        _v4.set(isHDR ? this._groundAlbedoHDR : this._groundAlbedoLDR);\r\n        normalizeHDRColor(_v4);\r\n        return _col.set(_v4.x * 255, _v4.y * 255, _v4.z * 255, 255);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set groundAlbedo (val: Vec4) {\r\n        if (getPipelineSceneData().isHDR) {\r\n            this._groundAlbedoHDR.set(val);\r\n        } else {\r\n            this._groundAlbedoLDR.set(val);\r\n        }\r\n        if (this._resource) { this._resource.groundAlbedo.set(val); }\r\n    }\r\n\r\n    @serializable\r\n    @formerlySerializedAs('_skyColor')\r\n    protected _skyColorHDR = new Vec4(0.2, 0.5, 0.8, 1.0);\r\n    @serializable\r\n    @formerlySerializedAs('_skyIllum')\r\n    protected _skyIllumHDR = Ambient.SKY_ILLUM;\r\n    @serializable\r\n    @formerlySerializedAs('_groundAlbedo')\r\n    protected _groundAlbedoHDR = new Vec4(0.2, 0.2, 0.2, 1.0);\r\n\r\n    @serializable\r\n    protected _skyColorLDR = new Vec4(0.2, 0.5, 0.8, 1.0);\r\n    @serializable\r\n    protected _skyIllumLDR = Ambient.SKY_ILLUM;\r\n    @serializable\r\n    protected _groundAlbedoLDR = new Vec4(0.2, 0.2, 0.2, 1.0);\r\n\r\n    protected _resource: Ambient | null = null;\r\n\r\n    /**\r\n     * @en Activate the ambient lighting configuration in the render scene, no need to invoke manually.\r\n     * @zh 在渲染场景中启用环境光照设置，不需要手动调用\r\n     * @param resource The ambient configuration object in the render scene\r\n     */\r\n    public activate (resource: Ambient): void {\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n    }\r\n}\r\nlegacyCC.AmbientInfo = AmbientInfo;\r\n\r\n/**\r\n * @en Skybox related configuration\r\n * @zh 天空盒相关配置\r\n */\r\n@ccclass('cc.SkyboxInfo')\r\nexport class SkyboxInfo {\r\n    /**\r\n     * @en Whether to use diffuse convolution map. Enabled -> Will use map specified. Disabled -> Will revert to hemispheric lighting\r\n     * @zh 是否为IBL启用漫反射卷积图？不启用的话将使用默认的半球光照\r\n     */\r\n    set applyDiffuseMap (val) {\r\n        if (this._resource) {\r\n            this._resource.useDiffuseMap = val;\r\n        }\r\n    }\r\n    get applyDiffuseMap (): boolean {\r\n        if (EnvironmentLightingType.DIFFUSEMAP_WITH_REFLECTION === this._envLightingType) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @en Whether activate skybox in the scene\r\n     * @zh 是否启用天空盒？\r\n     */\r\n    @editable\r\n    @tooltip('i18n:skybox.enabled')\r\n    set enabled (val) {\r\n        if (this._enabled === val) return;\r\n        this._enabled = val;\r\n\r\n        if (this._resource) {\r\n            this._resource.enabled = this._enabled;\r\n        }\r\n    }\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    /**\r\n     * @zh 环境反射类型\r\n     * @en environment reflection type\r\n     */\r\n    @editable\r\n    @type(EnvironmentLightingType)\r\n    @tooltip('i18n:skybox.EnvironmentLightingType')\r\n    set envLightingType (val) {\r\n        if (!this.envmap && EnvironmentLightingType.HEMISPHERE_DIFFUSE !== val) {\r\n            this.useIBL = false;\r\n            this.applyDiffuseMap = false;\r\n            this._envLightingType = EnvironmentLightingType.HEMISPHERE_DIFFUSE;\r\n            warnID(15001);\r\n        } else {\r\n            if (EnvironmentLightingType.HEMISPHERE_DIFFUSE === val) {\r\n                this.useIBL = false;\r\n                this.applyDiffuseMap = false;\r\n            } else if (EnvironmentLightingType.AUTOGEN_HEMISPHERE_DIFFUSE_WITH_REFLECTION === val) {\r\n                this.useIBL = true;\r\n                this.applyDiffuseMap = false;\r\n            } else if (EnvironmentLightingType.DIFFUSEMAP_WITH_REFLECTION === val) {\r\n                this.useIBL = true;\r\n                this.applyDiffuseMap = true;\r\n            }\r\n            this._envLightingType = val;\r\n        }\r\n    }\r\n    get envLightingType (): number {\r\n        return this._envLightingType;\r\n    }\r\n    /**\r\n     * @en Whether use environment lighting\r\n     * @zh 是否启用环境光照？\r\n     */\r\n    set useIBL (val) {\r\n        if (this._resource) {\r\n            this._resource.useIBL = val;\r\n        }\r\n    }\r\n    get useIBL (): boolean {\r\n        if (EnvironmentLightingType.HEMISPHERE_DIFFUSE !== this._envLightingType) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Toggle HDR (TODO: This SHOULD be moved into it's own subgroup away from skybox)\r\n     * @zh 是否启用HDR？\r\n     */\r\n    @editable\r\n    @tooltip('i18n:skybox.useHDR')\r\n    set useHDR (val) {\r\n        getPipelineSceneData().isHDR = val;\r\n        this._useHDR = val;\r\n        const resource = this._resource;\r\n\r\n        // Switch UI to and from LDR/HDR textures depends on HDR state\r\n        if (resource) {\r\n            if (this.envLightingType === EnvironmentLightingType.DIFFUSEMAP_WITH_REFLECTION) {\r\n                if (this.diffuseMap === null) {\r\n                    this.envLightingType = EnvironmentLightingType.AUTOGEN_HEMISPHERE_DIFFUSE_WITH_REFLECTION;\r\n                    warnID(15000);\r\n                } else if (this.diffuseMap.isDefault) {\r\n                    warnID(15002);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (resource) {\r\n            resource.useHDR = this._useHDR;\r\n            resource.updateMaterialRenderInfo();\r\n        }\r\n    }\r\n    get useHDR (): boolean {\r\n        getPipelineSceneData().isHDR = this._useHDR;\r\n        return this._useHDR;\r\n    }\r\n\r\n    /**\r\n     * @en The texture cube used for the skybox\r\n     * @zh 使用的立方体贴图\r\n     */\r\n    @editable\r\n    @type(TextureCube)\r\n    @tooltip('i18n:skybox.envmap')\r\n    set envmap (val) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this._envmapHDR = val;\r\n            this._reflectionHDR = null;\r\n        } else {\r\n            this._envmapLDR = val;\r\n            this._reflectionLDR = null;\r\n        }\r\n        if (!val) {\r\n            if (isHDR) {\r\n                this._diffuseMapHDR = null;\r\n            } else {\r\n                this._diffuseMapLDR = null;\r\n            }\r\n            this.applyDiffuseMap = false;\r\n            this.useIBL = false;\r\n            this.envLightingType = EnvironmentLightingType.HEMISPHERE_DIFFUSE;\r\n            warnID(15001);\r\n        }\r\n\r\n        const resource = this._resource;\r\n        if (resource) {\r\n            resource.setEnvMaps(this._envmapHDR, this._envmapLDR);\r\n            resource.setDiffuseMaps(this._diffuseMapHDR, this._diffuseMapLDR);\r\n            resource.setReflectionMaps(this._reflectionHDR, this._reflectionLDR);\r\n            resource.useDiffuseMap = this.applyDiffuseMap;\r\n            resource.envmap = val;\r\n        }\r\n    }\r\n    get envmap (): TextureCube | null {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._envmapHDR;\r\n        } else {\r\n            return this._envmapLDR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Rotate the skybox\r\n     * @zh 旋转天空盒\r\n     */\r\n    @type(CCFloat)\r\n    @range([0, 360, 1])\r\n    @slide\r\n    @tooltip('i18n:skybox.rotationAngle')\r\n    set rotationAngle (val: number) {\r\n        this._rotationAngle = val;\r\n        if (this._resource) { this._resource.setRotationAngle(this._rotationAngle); }\r\n    }\r\n    get rotationAngle (): number {\r\n        return this._rotationAngle;\r\n    }\r\n\r\n    /**\r\n     * @en The optional diffusion convolution map used in tandem with IBL\r\n     * @zh 使用的漫反射卷积图\r\n     */\r\n    @visible(function (this: SkyboxInfo): boolean {\r\n        if (this.useIBL && this.applyDiffuseMap) {\r\n            return true;\r\n        }\r\n        return false;\r\n    })\r\n    @editable\r\n    @readOnly\r\n    @type(TextureCube)\r\n    @displayOrder(100)\r\n    set diffuseMap (val: TextureCube | null) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this._diffuseMapHDR = val;\r\n        } else {\r\n            this._diffuseMapLDR = val;\r\n        }\r\n\r\n        if (this._resource) {\r\n            this._resource.setDiffuseMaps(this._diffuseMapHDR, this._diffuseMapLDR);\r\n        }\r\n    }\r\n    get diffuseMap (): TextureCube | null {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._diffuseMapHDR;\r\n        } else {\r\n            return this._diffuseMapLDR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Convolutional map using environmental reflections\r\n     * @zh 使用环境反射卷积图\r\n     */\r\n    @visible(function (this: SkyboxInfo) {\r\n        if (this._resource?.reflectionMap) {\r\n            return true;\r\n        }\r\n        return false;\r\n    })\r\n    @editable\r\n    @readOnly\r\n    @type(TextureCube)\r\n    @displayOrder(100)\r\n    set reflectionMap (val: TextureCube | null) {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            this._reflectionHDR = val;\r\n        } else {\r\n            this._reflectionLDR = val;\r\n        }\r\n        if (this._resource) {\r\n            this._resource.setReflectionMaps(this._reflectionHDR, this._reflectionLDR);\r\n        }\r\n    }\r\n    get reflectionMap (): TextureCube | null {\r\n        const isHDR = getPipelineSceneData().isHDR;\r\n        if (isHDR) {\r\n            return this._reflectionHDR;\r\n        } else {\r\n            return this._reflectionLDR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Use custom skybox material\r\n     * @zh 使用自定义的天空盒材质\r\n     */\r\n    @editable\r\n    @type(Material)\r\n    @tooltip('i18n:skybox.material')\r\n    set skyboxMaterial (val: Material | null) {\r\n        this._editableMaterial = val;\r\n        if (this._resource) {\r\n            this._resource.setSkyboxMaterial(this._editableMaterial);\r\n        }\r\n    }\r\n    get skyboxMaterial (): Material | null {\r\n        return this._editableMaterial;\r\n    }\r\n\r\n    @serializable\r\n    protected _envLightingType = EnvironmentLightingType.HEMISPHERE_DIFFUSE;\r\n    @serializable\r\n    @type(TextureCube)\r\n    @formerlySerializedAs('_envmap')\r\n    protected _envmapHDR: TextureCube | null = null;\r\n    @serializable\r\n    @type(TextureCube)\r\n    protected _envmapLDR: TextureCube | null = null;\r\n    @serializable\r\n    @type(TextureCube)\r\n    protected _diffuseMapHDR: TextureCube | null = null;\r\n    @serializable\r\n    @type(TextureCube)\r\n    protected _diffuseMapLDR: TextureCube | null = null;\r\n    @serializable\r\n    protected _enabled = false;\r\n    @serializable\r\n    protected _useHDR = true;\r\n    @serializable\r\n    @type(Material)\r\n    protected _editableMaterial: Material | null = null;\r\n    @serializable\r\n    @type(TextureCube)\r\n    protected _reflectionHDR: TextureCube | null = null;\r\n    @serializable\r\n    @type(TextureCube)\r\n    protected _reflectionLDR: TextureCube | null = null;\r\n    @serializable\r\n    protected _rotationAngle = 0;\r\n\r\n    protected _resource: Skybox | null = null;\r\n\r\n    /**\r\n     * @en Activate the skybox configuration in the render scene, no need to invoke manually.\r\n     * @zh 在渲染场景中启用天空盒设置，不需要手动调用\r\n     * @param resource The skybox configuration object in the render scene\r\n     */\r\n    public activate (resource: Skybox): void {\r\n        this.envLightingType = this._envLightingType;\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n        resource.setEnvMaps(this._envmapHDR, this._envmapLDR);\r\n        resource.setDiffuseMaps(this._diffuseMapHDR, this._diffuseMapLDR);\r\n        resource.setSkyboxMaterial(this._editableMaterial);\r\n        resource.setReflectionMaps(this._reflectionHDR, this._reflectionLDR);\r\n        resource.setRotationAngle(this._rotationAngle);\r\n        resource.activate(); // update global DS first\r\n    }\r\n\r\n    /**\r\n     * @en When the environment map changed will call this function to update scene.\r\n     * @zh 环境贴图发生变化时，会调用此函数更新场景。\r\n     * @param val environment map\r\n     */\r\n    public updateEnvMap (val: TextureCube): void {\r\n        if (!val) {\r\n            this.applyDiffuseMap = false;\r\n            this.useIBL = false;\r\n            this.envLightingType = EnvironmentLightingType.HEMISPHERE_DIFFUSE;\r\n            warnID(15001);\r\n        }\r\n        const resource = this._resource;\r\n        if (resource) {\r\n            resource.setEnvMaps(this._envmapHDR, this._envmapLDR);\r\n            resource.setDiffuseMaps(this._diffuseMapHDR, this._diffuseMapLDR);\r\n            resource.setReflectionMaps(this._reflectionHDR, this._reflectionLDR);\r\n            resource.useDiffuseMap = this.applyDiffuseMap;\r\n            resource.envmap = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set custom skybox material properties.\r\n     * @zh\r\n     * 设置自定义的天空盒材质属性。\r\n     * @param name @en The target property name. @zh 目标 property 名称。\r\n     * @param val @en The target value. @zh 需要设置的目标值。\r\n     * @param passIdx\r\n     * @en The pass to apply to. Will apply to all passes if not specified.\r\n     * @zh 设置此属性的 pass 索引，如果没有指定，则会设置此属性到所有 pass 上。\r\n     */\r\n    public setMaterialProperty (name: string, val: MaterialPropertyFull | MaterialPropertyFull[], passIdx?: number): void {\r\n        const resource = this._resource;\r\n        if (!resource) return;\r\n        const editableMaterial = resource.editableMaterial;\r\n        if (resource.enabled && editableMaterial) {\r\n            editableMaterial.setProperty(name, val, passIdx);\r\n            editableMaterial.passes.forEach((pass) => {\r\n                pass.update();\r\n            });\r\n        }\r\n    }\r\n}\r\nlegacyCC.SkyboxInfo = SkyboxInfo;\r\n\r\n/**\r\n * @zh 全局雾相关配置\r\n * @en Global fog configuration\r\n */\r\n@ccclass('cc.FogInfo')\r\nexport class FogInfo {\r\n    public static FogType = FogType;\r\n\r\n    /**\r\n     * @zh 是否启用全局雾效\r\n     * @en Enable global fog\r\n     */\r\n    @editable\r\n    @tooltip('i18n:fog.enabled')\r\n    @displayOrder(0)\r\n    set enabled (val: boolean) {\r\n        if (this._enabled === val) return;\r\n        this._enabled = val;\r\n        const resource = this._resource;\r\n        if (resource) {\r\n            resource.enabled = val;\r\n            if (val) {\r\n                resource.type = this._type;\r\n            }\r\n        }\r\n    }\r\n\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    /**\r\n     * @zh 是否启用精确雾效(像素雾)计算\r\n     * @en Enable accurate fog (pixel fog)\r\n     */\r\n    @editable\r\n    @tooltip('i18n:fog.accurate')\r\n    @displayOrder(0)\r\n    set accurate (val: boolean) {\r\n        if (this._accurate === val) return;\r\n        this._accurate = val;\r\n        const resource = this._resource;\r\n        if (resource) {\r\n            resource.accurate = val;\r\n            if (val) {\r\n                resource.type = this._type;\r\n            }\r\n        }\r\n    }\r\n\r\n    get accurate (): boolean {\r\n        return this._accurate;\r\n    }\r\n\r\n    /**\r\n     * @zh 全局雾颜色\r\n     * @en Global fog color\r\n     */\r\n    @editable\r\n    @tooltip('i18n:fog.fogColor')\r\n    set fogColor (val: Readonly<Color>) {\r\n        this._fogColor.set(val);\r\n        if (this._resource) { this._resource.fogColor = this._fogColor; }\r\n    }\r\n\r\n    get fogColor (): Readonly<Color> {\r\n        return this._fogColor;\r\n    }\r\n\r\n    /**\r\n     * @zh 全局雾类型\r\n     * @en Global fog type\r\n     */\r\n    @editable\r\n    @type(FogType)\r\n    @displayOrder(1)\r\n    @tooltip('i18n:fog.type')\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    set type (val) {\r\n        this._type = val;\r\n        if (this._resource) { this._resource.type = val; }\r\n    }\r\n\r\n    /**\r\n     * @zh 全局雾浓度\r\n     * @en Global fog density\r\n     */\r\n    @visible(function (this: FogInfo) {\r\n        return this._type !== FogType.LAYERED && this._type !== FogType.LINEAR;\r\n    })\r\n    @type(CCFloat)\r\n    @range([0, 1, 0.01])\r\n    @slide\r\n    @tooltip('i18n:fog.fogDensity')\r\n    get fogDensity (): number {\r\n        return this._fogDensity;\r\n    }\r\n\r\n    set fogDensity (val) {\r\n        this._fogDensity = val;\r\n        if (this._resource) { this._resource.fogDensity = val; }\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效起始位置\r\n     * @en Global fog start position\r\n     */\r\n    @visible(function (this: FogInfo) { return this._type !== FogType.LAYERED; })\r\n    @type(CCFloat)\r\n    @rangeStep(0.01)\r\n    @tooltip('i18n:fog.fogStart')\r\n    get fogStart (): number {\r\n        return this._fogStart;\r\n    }\r\n\r\n    set fogStart (val) {\r\n        this._fogStart = val;\r\n        if (this._resource) { this._resource.fogStart = val; }\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效结束位置，只适用于线性雾\r\n     * @en Global fog end position, only for linear fog\r\n     */\r\n    @visible(function (this: FogInfo) { return this._type === FogType.LINEAR; })\r\n    @type(CCFloat)\r\n    @rangeStep(0.01)\r\n    @tooltip('i18n:fog.fogEnd')\r\n    get fogEnd (): number {\r\n        return this._fogEnd;\r\n    }\r\n\r\n    set fogEnd (val) {\r\n        this._fogEnd = val;\r\n        if (this._resource) { this._resource.fogEnd = val; }\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效衰减\r\n     * @en Global fog attenuation\r\n     */\r\n    @visible(function (this: FogInfo) { return this._type !== FogType.LINEAR; })\r\n    @type(CCFloat)\r\n    @rangeMin(0.01)\r\n    @rangeStep(0.01)\r\n    @tooltip('i18n:fog.fogAtten')\r\n    get fogAtten (): number {\r\n        return this._fogAtten;\r\n    }\r\n\r\n    set fogAtten (val) {\r\n        this._fogAtten = val;\r\n        if (this._resource) { this._resource.fogAtten = val; }\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效顶部范围，只适用于层级雾\r\n     * @en Global fog top range, only for layered fog\r\n     */\r\n    @visible(function (this: FogInfo) { return this._type === FogType.LAYERED; })\r\n    @type(CCFloat)\r\n    @rangeStep(0.01)\r\n    @tooltip('i18n:fog.fogTop')\r\n    get fogTop (): number {\r\n        return this._fogTop;\r\n    }\r\n\r\n    set fogTop (val) {\r\n        this._fogTop = val;\r\n        if (this._resource) { this._resource.fogTop = val; }\r\n    }\r\n\r\n    /**\r\n     * @zh 雾效范围，只适用于层级雾\r\n     * @en Global fog range, only for layered fog\r\n     */\r\n    @visible(function (this: FogInfo) { return this._type === FogType.LAYERED; })\r\n    @type(CCFloat)\r\n    @rangeStep(0.01)\r\n    @tooltip('i18n:fog.fogRange')\r\n    get fogRange (): number {\r\n        return this._fogRange;\r\n    }\r\n\r\n    set fogRange (val) {\r\n        this._fogRange = val;\r\n        if (this._resource) { this._resource.fogRange = val; }\r\n    }\r\n\r\n    @serializable\r\n    protected _type = FogType.LINEAR;\r\n    @serializable\r\n    protected _fogColor = new Color('#C8C8C8');\r\n    @serializable\r\n    protected _enabled = false;\r\n    @serializable\r\n    protected _fogDensity = 0.3;\r\n    @serializable\r\n    protected _fogStart = 0.5;\r\n    @serializable\r\n    protected _fogEnd = 300;\r\n    @serializable\r\n    protected _fogAtten = 5;\r\n    @serializable\r\n    protected _fogTop = 1.5;\r\n    @serializable\r\n    protected _fogRange = 1.2;\r\n    @serializable\r\n    protected _accurate = false;\r\n    protected _resource: Fog | null = null;\r\n\r\n    /**\r\n     * @en Activate the fog configuration in the render scene, no need to invoke manually.\r\n     * @zh 在渲染场景中启用雾效设置，不需要手动调用\r\n     * @param resource The fog configuration object in the render scene\r\n     */\r\n    public activate (resource: Fog): void {\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n        resource.activate();\r\n    }\r\n}\r\n\r\n/**\r\n * @en Scene level shadow related configuration\r\n * @zh 场景级别阴影相关的配置\r\n */\r\n@ccclass('cc.ShadowsInfo')\r\nexport class ShadowsInfo {\r\n    /**\r\n     * @en Whether activate planar shadow\r\n     * @zh 是否启用平面阴影？\r\n     */\r\n    @editable\r\n    @tooltip('i18n:shadow.enabled')\r\n    set enabled (val: boolean) {\r\n        if (this._enabled === val) return;\r\n        this._enabled = val;\r\n        const resource = this._resource;\r\n        if (resource) {\r\n            resource.enabled = val;\r\n            if (val) {\r\n                resource.type = this._type;\r\n            }\r\n        }\r\n    }\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    /**\r\n     * @en The type of the shadow\r\n     * @zh 阴影渲染的类型\r\n     */\r\n    @tooltip('i18n:shadow.type')\r\n    @editable\r\n    @type(ShadowType)\r\n    set type (val) {\r\n        this._type = val;\r\n        if (this._resource) { this._resource.type = val; }\r\n    }\r\n    get type (): number {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * @en Shadow color\r\n     * @zh 阴影颜色\r\n     */\r\n    @tooltip('i18n:shadow.shadowColor')\r\n    @visible(function (this: ShadowsInfo) { return this._type === ShadowType.Planar; })\r\n    set shadowColor (val: Readonly<Color>) {\r\n        this._shadowColor.set(val);\r\n        if (this._resource) { this._resource.shadowColor = val as Color; }\r\n    }\r\n    get shadowColor (): Readonly<Color> {\r\n        return this._shadowColor;\r\n    }\r\n\r\n    /**\r\n     * @en The normal of the plane which receives shadow\r\n     * @zh 阴影接收平面的法线\r\n     */\r\n    @tooltip('i18n:shadow.planeDirection')\r\n    @visible(function (this: ShadowsInfo) { return this._type === ShadowType.Planar; })\r\n    set planeDirection (val: Readonly<Vec3>) {\r\n        Vec3.copy(this._normal, val);\r\n        if (this._resource) { this._resource.normal = val; }\r\n    }\r\n    get planeDirection (): Readonly<Vec3> {\r\n        return this._normal;\r\n    }\r\n\r\n    /**\r\n     * @en The distance from coordinate origin to the receiving plane.\r\n     * @zh 阴影接收平面与原点的距离\r\n     */\r\n    @tooltip('i18n:shadow.planeHeight')\r\n    @editable\r\n    @type(CCFloat)\r\n    @visible(function (this: ShadowsInfo) { return this._type === ShadowType.Planar; })\r\n    set planeHeight (val: number) {\r\n        this._distance = val;\r\n        if (this._resource) { this._resource.distance = val; }\r\n    }\r\n    get planeHeight (): number {\r\n        return this._distance;\r\n    }\r\n\r\n    /**\r\n     * @en Positional offset values in planar shading calculations.\r\n     * @zh 平面阴影计算中的位置偏移值。\r\n     */\r\n    @tooltip('i18n:shadow.planeBias')\r\n    @editable\r\n    @type(CCFloat)\r\n    @visible(function (this: ShadowsInfo) { return this._type === ShadowType.Planar; })\r\n    set planeBias (val: number) {\r\n        this._planeBias = val;\r\n        if (this._resource) { this._resource.planeBias = val; }\r\n    }\r\n    get planeBias (): number {\r\n        return this._planeBias;\r\n    }\r\n\r\n    /**\r\n     * @en get or set shadow max received\r\n     * @zh 获取或者设置阴影接收的最大光源数量\r\n     */\r\n    @tooltip('i18n:shadow.maxReceived')\r\n    @type(CCInteger)\r\n    @visible(function (this: ShadowsInfo) { return this._type === ShadowType.ShadowMap; })\r\n    set maxReceived (val: number) {\r\n        this._maxReceived = val;\r\n        if (this._resource) { this._resource.maxReceived = val; }\r\n    }\r\n    get maxReceived (): number {\r\n        return this._maxReceived;\r\n    }\r\n\r\n    /**\r\n     * @en get or set shadow map size\r\n     * @zh 获取或者设置阴影纹理大小\r\n     */\r\n    @tooltip('i18n:shadow.shadowMapSize')\r\n    @type(ShadowSize)\r\n    @visible(function (this: ShadowsInfo) { return this._type === ShadowType.ShadowMap; })\r\n    set shadowMapSize (value: number) {\r\n        const resource = this._resource;\r\n        this._size.set(value, value);\r\n        if (resource) {\r\n            resource.size.set(value, value);\r\n            resource.shadowMapDirty = true;\r\n        }\r\n    }\r\n    get shadowMapSize (): number {\r\n        return this._size.x;\r\n    }\r\n\r\n    @serializable\r\n    protected _enabled = false;\r\n    @serializable\r\n    protected _type = ShadowType.Planar;\r\n    @serializable\r\n    protected _normal = new Vec3(0, 1, 0);\r\n    @serializable\r\n    protected _distance = 0;\r\n    @serializable\r\n    protected _planeBias = 1.0;\r\n    @serializable\r\n    protected _shadowColor = new Color(0, 0, 0, 76);\r\n    @serializable\r\n    protected _maxReceived = 4;\r\n    @serializable\r\n    protected _size = new Vec2(1024, 1024);\r\n\r\n    protected _resource: Shadows | null = null;\r\n\r\n    /**\r\n     * @en Set plane which receives shadow with the given node's world transformation\r\n     * @zh 根据指定节点的世界变换设置阴影接收平面的信息\r\n     * @param node The node for setting up the plane\r\n     */\r\n    public setPlaneFromNode (node: Node): void {\r\n        node.getWorldRotation(_qt);\r\n        this.planeDirection = Vec3.transformQuat(_v3, _up, _qt);\r\n        node.getWorldPosition(_v3);\r\n        this.planeHeight = Vec3.dot(this._normal, _v3);\r\n    }\r\n\r\n    /**\r\n     * @en Activate the shadow configuration in the render scene, no need to invoke manually.\r\n     * @zh 在渲染场景中启用阴影设置，不需要手动调用\r\n     * @param resource The shadow configuration object in the render scene\r\n     */\r\n    public activate (resource: Shadows): void {\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n        resource.activate();\r\n    }\r\n}\r\nlegacyCC.ShadowsInfo = ShadowsInfo;\r\n\r\nexport const DEFAULT_WORLD_MIN_POS = new Vec3(-1024.0, -1024.0, -1024.0);\r\nexport const DEFAULT_WORLD_MAX_POS = new Vec3(1024.0, 1024.0, 1024.0);\r\nexport const DEFAULT_OCTREE_DEPTH = 8;\r\n\r\n/**\r\n * @en Scene management and culling configuration based on octree\r\n * @zh 基于八叉树的场景剔除配置\r\n */\r\n@ccclass('cc.OctreeInfo')\r\nexport class OctreeInfo {\r\n    /**\r\n     * @en Whether activate scene culling based on octree\r\n     * @zh 是否启用八叉树加速剔除？\r\n     */\r\n    @editable\r\n    @tooltip('i18n:octree_culling.enabled')\r\n    set enabled (val: boolean) {\r\n        if (this._enabled === val) return;\r\n        this._enabled = val;\r\n        if (this._resource) {\r\n            this._resource.enabled = val;\r\n        }\r\n    }\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    /**\r\n     * @en The minimal position of the scene bounding box.\r\n     * Objects entirely outside the bounding box will be culled, other objects will be managed dynamically.\r\n     * @zh 场景包围盒的最小位置，完全超出包围盒的物体会被剔除，其他物体根据情况被动态剔除。\r\n     */\r\n    @editable\r\n    @tooltip('i18n:octree_culling.minPos')\r\n    @displayName('World MinPos')\r\n    set minPos (val: Vec3) {\r\n        this._minPos = val;\r\n        if (this._resource) { this._resource.minPos = val; }\r\n    }\r\n    get minPos (): Vec3 {\r\n        return this._minPos;\r\n    }\r\n\r\n    /**\r\n     * @en The maximum position of the scene bounding box.\r\n     * Objects entirely outside the bounding box will be culled, other objects will be managed dynamically.\r\n     * @zh 场景包围盒的最大位置，完全超出包围盒的物体会被剔除，其他物体根据情况被动态剔除。\r\n     */\r\n    @editable\r\n    @tooltip('i18n:octree_culling.maxPos')\r\n    @displayName('World MaxPos')\r\n    set maxPos (val: Vec3) {\r\n        this._maxPos = val;\r\n        if (this._resource) { this._resource.maxPos = val; }\r\n    }\r\n    get maxPos (): Vec3 {\r\n        return this._maxPos;\r\n    }\r\n\r\n    /**\r\n     * @en The depth of the octree.\r\n     * @zh 八叉树的深度。\r\n     */\r\n    @editable\r\n    @range([4, 12, 1])\r\n    @slide\r\n    @type(CCInteger)\r\n    @tooltip('i18n:octree_culling.depth')\r\n    set depth (val: number) {\r\n        this._depth = val;\r\n        if (this._resource) { this._resource.depth = val; }\r\n    }\r\n    get depth (): number {\r\n        return this._depth;\r\n    }\r\n\r\n    @serializable\r\n    protected _enabled = false;\r\n    @serializable\r\n    protected _minPos = new Vec3(DEFAULT_WORLD_MIN_POS);\r\n    @serializable\r\n    protected _maxPos = new Vec3(DEFAULT_WORLD_MAX_POS);\r\n    @serializable\r\n    protected _depth = DEFAULT_OCTREE_DEPTH;\r\n\r\n    protected _resource: Octree | null = null;\r\n\r\n    /**\r\n     * @en Activate the octree configuration in the render scene, no need to invoke manually.\r\n     * @zh 在渲染场景中启用八叉树设置，不需要手动调用\r\n     * @param resource The octree configuration object in the render scene\r\n     */\r\n    public activate (resource: Octree): void {\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n    }\r\n}\r\nlegacyCC.OctreeInfo = OctreeInfo;\r\n\r\n/**\r\n * @en Global skin in the render scene.\r\n * @zh 渲染场景中的全局皮肤后处理设置。\r\n */\r\n@ccclass('cc.SkinInfo')\r\nexport class SkinInfo {\r\n    /**\r\n     * @en Enable skip.\r\n     * @zh 是否开启皮肤后效。\r\n     */\r\n    @editable\r\n    @readOnly\r\n    @tooltip('i18n:skin.enabled')\r\n    set enabled (val: boolean) {\r\n        if (this._enabled === val) return;\r\n        this._enabled = val;\r\n        if (this._resource) {\r\n            this._resource.enabled = val;\r\n        }\r\n    }\r\n    get enabled (): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    /**\r\n     * @en Getter/Setter sampler width.\r\n     * @zh 设置或者获取采样宽度。\r\n     */\r\n    @visible(false)\r\n    @editable\r\n    @range([0.0, 0.1, 0.001])\r\n    @slide\r\n    @type(CCFloat)\r\n    @tooltip('i18n:skin.blurRadius')\r\n    set blurRadius (val: number) {\r\n        this._blurRadius = val;\r\n        if (this._resource) { this._resource.blurRadius = val; }\r\n    }\r\n    get blurRadius (): number {\r\n        return this._blurRadius;\r\n    }\r\n\r\n    /**\r\n     * @en Getter/Setter depth unit scale.\r\n     * @zh 设置或者获取深度单位比例。\r\n     */\r\n    @editable\r\n    @range([0.0, 10.0, 0.1])\r\n    @slide\r\n    @type(CCFloat)\r\n    @tooltip('i18n:skin.sssIntensity')\r\n    set sssIntensity (val: number) {\r\n        this._sssIntensity = val;\r\n        if (this._resource) { this._resource.sssIntensity = val; }\r\n    }\r\n    get sssIntensity (): number {\r\n        return this._sssIntensity;\r\n    }\r\n\r\n    @serializable\r\n    protected _enabled = true;\r\n    @serializable\r\n    protected _blurRadius = 0.01;\r\n    @serializable\r\n    protected _sssIntensity = 3.0;\r\n\r\n    protected _resource: Skin | null = null;\r\n\r\n    /**\r\n     * @en Activate the skin configuration in the render scene, no need to invoke manually.\r\n     * @zh 在渲染场景中启用皮肤设置，不需要手动调用\r\n     * @param resource The skin configuration object in the render scene\r\n     */\r\n    public activate (resource: Skin): void {\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n    }\r\n}\r\nlegacyCC.SkinInfo = SkinInfo;\r\n\r\n@ccclass('cc.PostSettingsInfo')\r\nexport class PostSettingsInfo {\r\n    /**\r\n     * @zh 色调映射类型\r\n     * @en Tone mapping type\r\n     */\r\n    @editable\r\n    @type(ToneMappingType)\r\n    @tooltip('i18n:tone_mapping.toneMappingType')\r\n    set toneMappingType (val) {\r\n        this._toneMappingType = val;\r\n        if (this._resource) {\r\n            this._resource.toneMappingType = val;\r\n        }\r\n    }\r\n\r\n    get toneMappingType (): number {\r\n        return this._toneMappingType;\r\n    }\r\n\r\n    @serializable\r\n    protected _toneMappingType = ToneMappingType.DEFAULT;\r\n\r\n    protected _resource: PostSettings | null = null;\r\n\r\n    public activate (resource: PostSettings): void {\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n        resource.activate();\r\n    }\r\n}\r\n\r\nlegacyCC.PostSettingsInfo = PostSettingsInfo;\r\n\r\nexport interface ILightProbeNode {\r\n    node: Node;\r\n    probes: Vec3[] | null;\r\n}\r\n\r\n/**\r\n * @en light probe configuration\r\n * @zh 光照探针配置\r\n */\r\n@ccclass('cc.LightProbeInfo')\r\nexport class LightProbeInfo {\r\n    /**\r\n     * @en GI multiplier\r\n     * @zh GI乘数\r\n     */\r\n    @editable\r\n    @range([0, 100, 1])\r\n    @type(CCFloat)\r\n    @tooltip('i18n:light_probe.giScale')\r\n    @displayName('GIScale')\r\n    set giScale (val: number) {\r\n        if (this._giScale === val) return;\r\n        this._giScale = val;\r\n        if (this._resource) {\r\n            this._resource.giScale = val;\r\n        }\r\n    }\r\n    get giScale (): number {\r\n        return this._giScale;\r\n    }\r\n\r\n    /**\r\n     * @en GI sample counts\r\n     * @zh GI 采样数量\r\n     */\r\n    @editable\r\n    @range([64, 65535, 1])\r\n    @type(CCInteger)\r\n    @tooltip('i18n:light_probe.giSamples')\r\n    @displayName('GISamples')\r\n    set giSamples (val: number) {\r\n        if (this._giSamples === val) return;\r\n        this._giSamples = val;\r\n        if (this._resource) {\r\n            this._resource.giSamples = val;\r\n        }\r\n    }\r\n    get giSamples (): number {\r\n        return this._giSamples;\r\n    }\r\n\r\n    /**\r\n     * @en light bounces\r\n     * @zh 光照反弹次数\r\n     */\r\n    @editable\r\n    @range([1, 4, 1])\r\n    @type(CCInteger)\r\n    @tooltip('i18n:light_probe.bounces')\r\n    set bounces (val: number) {\r\n        if (this._bounces === val) return;\r\n        this._bounces = val;\r\n        if (this._resource) {\r\n            this._resource.bounces = val;\r\n        }\r\n    }\r\n    get bounces (): number {\r\n        return this._bounces;\r\n    }\r\n\r\n    /**\r\n     * @en Reduce ringing of light probe\r\n     * @zh 减少光照探针的振铃效果\r\n     */\r\n    @editable\r\n    @range([0.0, 0.05, 0.001])\r\n    @slide\r\n    @type(CCFloat)\r\n    @tooltip('i18n:light_probe.reduceRinging')\r\n    set reduceRinging (val: number) {\r\n        if (this._reduceRinging === val) return;\r\n        this._reduceRinging = val;\r\n        if (this._resource) {\r\n            this._resource.reduceRinging = val;\r\n        }\r\n    }\r\n    get reduceRinging (): number {\r\n        return this._reduceRinging;\r\n    }\r\n\r\n    /**\r\n     * @en Whether to show light probe\r\n     * @zh 是否显示光照探针\r\n     */\r\n    set showProbe (val: boolean) {\r\n        if (this._showProbe === val) return;\r\n        this._showProbe = val;\r\n        if (this._resource) {\r\n            this._resource.showProbe = val;\r\n        }\r\n    }\r\n    get showProbe (): boolean {\r\n        return this._showProbe;\r\n    }\r\n\r\n    /**\r\n     * @en Whether to show light probe's connection\r\n     * @zh 是否显示光照探针连线\r\n     */\r\n    @editable\r\n    @tooltip('i18n:light_probe.showWireframe')\r\n    set showWireframe (val: boolean) {\r\n        if (this._showWireframe === val) return;\r\n        this._showWireframe = val;\r\n        if (this._resource) {\r\n            this._resource.showWireframe = val;\r\n        }\r\n    }\r\n    get showWireframe (): boolean {\r\n        return this._showWireframe;\r\n    }\r\n\r\n    /**\r\n     * @en Whether to show light probe's convex\r\n     * @zh 是否显示光照探针凸包\r\n     */\r\n    @editable\r\n    @tooltip('i18n:light_probe.showConvex')\r\n    set showConvex (val: boolean) {\r\n        if (this._showConvex === val) return;\r\n        this._showConvex = val;\r\n        if (this._resource) {\r\n            this._resource.showConvex = val;\r\n        }\r\n    }\r\n    get showConvex (): boolean {\r\n        return this._showConvex;\r\n    }\r\n\r\n    /**\r\n     * @en light probe's vertex and tetrahedron data\r\n     * @zh 光照探针顶点及四面体数据\r\n     */\r\n    set data (val: LightProbesData | null) {\r\n        if (this._data === val) return;\r\n        this._data = val;\r\n        if (this._resource) {\r\n            this._resource.data = val;\r\n        }\r\n    }\r\n    get data (): LightProbesData | null {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * @en The value of all light probe sphere display size\r\n     * @zh 光照探针全局显示大小\r\n     */\r\n    @editable\r\n    @range([0, 100, 1])\r\n    @type(CCFloat)\r\n    @tooltip('i18n:light_probe.lightProbeSphereVolume')\r\n    set lightProbeSphereVolume (val: number) {\r\n        if (this._lightProbeSphereVolume === val) return;\r\n        this._lightProbeSphereVolume = val;\r\n        if (this._resource) {\r\n            this._resource.lightProbeSphereVolume = val;\r\n        }\r\n    }\r\n    get lightProbeSphereVolume (): number {\r\n        return this._lightProbeSphereVolume;\r\n    }\r\n\r\n    @serializable\r\n    protected _giScale = 1.0;\r\n    @serializable\r\n    protected _giSamples = 1024;\r\n    @serializable\r\n    protected _bounces = 2;\r\n    @serializable\r\n    protected _reduceRinging = 0.0;\r\n    @serializable\r\n    protected _showProbe = true;\r\n    @serializable\r\n    protected _showWireframe = true;\r\n    @serializable\r\n    protected _showConvex = false;\r\n    @serializable\r\n    protected _data: LightProbesData | null = null;\r\n    @serializable\r\n    protected _lightProbeSphereVolume = 1.0;\r\n\r\n    protected _nodes: ILightProbeNode[] = [];\r\n    protected _scene: Scene | null = null;\r\n    protected _resource: LightProbes | null = null;\r\n\r\n    public activate (scene: Scene, resource: LightProbes): void {\r\n        this._scene = scene;\r\n        this._resource = resource;\r\n        resource.initialize(this);\r\n    }\r\n\r\n    public onProbeBakeFinished (): void {\r\n        this.onProbeBakingChanged(this._scene);\r\n    }\r\n\r\n    public onProbeBakeCleared (): void {\r\n        this.clearSHCoefficients();\r\n        this.onProbeBakingChanged(this._scene);\r\n    }\r\n\r\n    private onProbeBakingChanged (node: Node | null): void {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        node.emit(NodeEventType.LIGHT_PROBE_BAKING_CHANGED);\r\n\r\n        node.children.forEach((child) => {\r\n            this.onProbeBakingChanged(child);\r\n        });\r\n    }\r\n\r\n    public clearSHCoefficients (): void {\r\n        if (!this._data) {\r\n            return;\r\n        }\r\n\r\n        this._data.probes.forEach((probe) => {\r\n            probe.coefficients.length = 0;\r\n        });\r\n\r\n        this.clearAllSHUBOs();\r\n    }\r\n\r\n    public isUniqueNode (): boolean {\r\n        return this._nodes.length === 1;\r\n    }\r\n\r\n    public addNode (node: Node): boolean {\r\n        if (!node) {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i < this._nodes.length; i++) {\r\n            if (this._nodes[i].node === node) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this._nodes.push({ node, probes: null });\r\n\r\n        return true;\r\n    }\r\n\r\n    public removeNode (node: Node): boolean {\r\n        if (!node) {\r\n            return false;\r\n        }\r\n\r\n        const index = this._nodes.findIndex((element) => element.node === node);\r\n        if (index === -1) {\r\n            return false;\r\n        }\r\n\r\n        this._nodes.splice(index, 1);\r\n\r\n        return true;\r\n    }\r\n\r\n    public syncData (node: Node, probes: Vec3[]): void {\r\n        for (let i = 0; i < this._nodes.length; i++) {\r\n            if (this._nodes[i].node === node) {\r\n                this._nodes[i].probes = probes;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public update (updateTet = true): void {\r\n        if (!cclegacy.internal.LightProbesData) {\r\n            return;\r\n        }\r\n\r\n        if (!this._data) {\r\n            this._data = new cclegacy.internal.LightProbesData();\r\n            if (this._resource) {\r\n                this._resource.data = this._data;\r\n            }\r\n        }\r\n\r\n        const points: Vec3[] = [];\r\n        for (let i = 0; i < this._nodes.length; i++) {\r\n            const probeNode = this._nodes[i];\r\n            const node = probeNode.node;\r\n            const probes = probeNode.probes;\r\n            const worldPosition = node.worldPosition;\r\n\r\n            if (!probes) {\r\n                continue;\r\n            }\r\n\r\n            for (let j = 0; j < probes.length; j++) {\r\n                const position = v3();\r\n                Vec3.add(position, probes[j], worldPosition);\r\n                points.push(position);\r\n            }\r\n        }\r\n\r\n        const pointCount = points.length;\r\n        if (pointCount < 4) {\r\n            this.resetAllTetraIndices();\r\n            this._data!.reset();\r\n            return;\r\n        }\r\n\r\n        this._data!.updateProbes(points);\r\n\r\n        if (updateTet) {\r\n            this.resetAllTetraIndices();\r\n            this._data!.updateTetrahedrons();\r\n        }\r\n    }\r\n\r\n    private clearAllSHUBOs (): void {\r\n        if (!this._scene) {\r\n            return;\r\n        }\r\n\r\n        const renderScene = this._scene.renderScene;\r\n        if (!renderScene) {\r\n            return;\r\n        }\r\n\r\n        const models = renderScene.models;\r\n        models.forEach((model) => {\r\n            model.clearSHUBOs();\r\n        });\r\n    }\r\n\r\n    private resetAllTetraIndices (): void {\r\n        if (!this._scene) {\r\n            return;\r\n        }\r\n\r\n        const renderScene = this._scene.renderScene;\r\n        if (!renderScene) {\r\n            return;\r\n        }\r\n\r\n        const models = renderScene.models;\r\n        models.forEach((model) => {\r\n            model.tetrahedronIndex = -1;\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * @en All scene related global parameters, it affects all content in the corresponding scene\r\n * @zh 各类场景级别的渲染参数，将影响全场景的所有物体\r\n */\r\n@ccclass('cc.SceneGlobals')\r\nexport class SceneGlobals {\r\n    /**\r\n     * @en The environment lighting configuration\r\n     * @zh 场景的环境光照相关配置\r\n     */\r\n    @serializable\r\n    @editable\r\n    public ambient = new AmbientInfo();\r\n    /**\r\n     * @en Scene level shadow related configuration\r\n     * @zh 平面阴影相关配置\r\n     */\r\n    @serializable\r\n    @editable\r\n    public shadows = new ShadowsInfo();\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @serializable\r\n    public _skybox = new SkyboxInfo();\r\n    /**\r\n     * @en Global fog configuration\r\n     * @zh 全局雾相关配置\r\n     */\r\n    @editable\r\n    @serializable\r\n    public fog = new FogInfo();\r\n\r\n    /**\r\n     * @en Skybox related configuration\r\n     * @zh 天空盒相关配置\r\n     */\r\n    @editable\r\n    @type(SkyboxInfo)\r\n    get skybox (): SkyboxInfo {\r\n        return this._skybox;\r\n    }\r\n    set skybox (value) {\r\n        this._skybox = value;\r\n    }\r\n\r\n    /**\r\n     * @en Octree related configuration\r\n     * @zh 八叉树相关配置\r\n     */\r\n    @editable\r\n    @serializable\r\n    public octree = new OctreeInfo();\r\n\r\n    /**\r\n     * @en Octree related configuration\r\n     * @zh 八叉树相关配置\r\n     */\r\n    @editable\r\n    @serializable\r\n    public skin = new SkinInfo();\r\n\r\n    /**\r\n     * @en Light probe related configuration\r\n     * @zh 光照探针相关配置\r\n     */\r\n    @editable\r\n    @serializable\r\n    public lightProbeInfo = new LightProbeInfo();\r\n\r\n    /**\r\n     * @en Tone mapping related configuration\r\n     * @zh 色调映射相关配置\r\n     */\r\n    @editable\r\n    @serializable\r\n    public postSettings = new PostSettingsInfo();\r\n\r\n    /**\r\n     * @en bake with stationary main light\r\n     * @zh 主光源是否以静止状态烘培\r\n     */\r\n    @editable\r\n    @serializable\r\n    public bakedWithStationaryMainLight = false;\r\n\r\n    /**\r\n     * @en bake lightmap with highp mode\r\n     * @zh 是否使用高精度模式烘培光照图\r\n     */\r\n    @editable\r\n    @serializable\r\n    public bakedWithHighpLightmap = false;\r\n\r\n    /**\r\n     * @en disable light map\r\n     * @zh 关闭光照图效果\r\n     */\r\n    public disableLightmap = false;\r\n\r\n    /**\r\n     * @en Activate and initialize the global configurations of the scene, no need to invoke manually.\r\n     * @zh 启用和初始化场景全局配置，不需要手动调用\r\n     */\r\n    public activate (scene: Scene): void {\r\n        const sceneData = (legacyCC.director.root as Root).pipeline.pipelineSceneData;\r\n        this.skybox.activate(sceneData.skybox);\r\n        this.ambient.activate(sceneData.ambient);\r\n\r\n        this.shadows.activate(sceneData.shadows);\r\n        this.fog.activate(sceneData.fog);\r\n        this.octree.activate(sceneData.octree);\r\n        this.skin.activate(sceneData.skin);\r\n        this.postSettings.activate(sceneData.postSettings);\r\n        if (this.lightProbeInfo && sceneData.lightProbes) {\r\n            this.lightProbeInfo.activate(scene, sceneData.lightProbes);\r\n        }\r\n\r\n        const root = legacyCC.director.root as Root;\r\n        root.onGlobalPipelineStateChanged();\r\n    }\r\n}\r\nlegacyCC.SceneGlobals = SceneGlobals;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, editable, type } from 'cc.decorator';\r\nimport { EDITOR } from 'internal:constants';\r\nimport { cclegacy } from '../../core';\r\nimport { Prefab } from './prefab';\r\nimport { CCObject, CCString } from '../../core/data';\r\nimport { Component } from '../component';\r\nimport { Node } from '../node';\r\n\r\nfunction compareStringArray (array1: string[] | undefined, array2: string[] | undefined): boolean {\r\n    if (!array1 || !array2) {\r\n        return false;\r\n    }\r\n\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n\r\n    return array1.every((value, index) => value === array2[index]);\r\n}\r\n\r\n@ccclass('cc.TargetInfo')\r\nexport class TargetInfo {\r\n    constructor () {}\r\n    // as the target's fileId in prefab asset,used to find the target when prefab expanded.\r\n    @serializable\r\n    @type([CCString])\r\n    public localID: string[] = [];\r\n}\r\n@ccclass('cc.TargetOverrideInfo')\r\nexport class TargetOverrideInfo {\r\n    constructor () {}\r\n\r\n    @serializable\r\n    @type(CCObject)\r\n    public source: Component | Node | null = null;\r\n    // if owner is in a prefab, use TargetInfo to index it\r\n    @serializable\r\n    @type(TargetInfo)\r\n    public sourceInfo: TargetInfo | null = null;\r\n    @serializable\r\n    @type([CCString])\r\n    public propertyPath: string[] = [];\r\n    @serializable\r\n    @type(Node)\r\n    public target: Node | null = null;\r\n    // if target is in a prefab, use TargetInfo to index it\r\n    @serializable\r\n    @type(TargetInfo)\r\n    public targetInfo: TargetInfo | null = null;\r\n}\r\n\r\n@ccclass('cc.CompPrefabInfo')\r\nexport class CompPrefabInfo {\r\n    constructor () {}\r\n\r\n    // To identify current component in a prefab asset, so only needs to be unique.\r\n    @serializable\r\n    @editable\r\n    public fileId = '';\r\n}\r\n\r\n@ccclass('CCPropertyOverrideInfo')\r\nexport class PropertyOverrideInfo {\r\n    constructor () {}\r\n    @serializable\r\n    @type(TargetInfo)\r\n    public targetInfo: TargetInfo | null = null;\r\n    @serializable\r\n    @type([CCString])\r\n    public propertyPath: string[] = [];\r\n    @serializable\r\n    public value: any;\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    public isTarget (localID: string[], propPath: string[]): boolean | undefined {\r\n        if (EDITOR) {\r\n            return compareStringArray(this.targetInfo?.localID, localID)\r\n                && compareStringArray(this.propertyPath, propPath);\r\n        }\r\n    }\r\n}\r\n\r\n@ccclass('cc.MountedChildrenInfo')\r\nexport class MountedChildrenInfo {\r\n    constructor () {}\r\n\r\n    @serializable\r\n    @type(TargetInfo)\r\n    public targetInfo: TargetInfo | null = null;\r\n    @serializable\r\n    @type([Node])\r\n    public nodes: Node[] = [];\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    public isTarget (localID: string[]): boolean | undefined {\r\n        if (EDITOR) {\r\n            return compareStringArray(this.targetInfo?.localID, localID);\r\n        }\r\n    }\r\n}\r\n\r\n@ccclass('cc.MountedComponentsInfo')\r\nexport class MountedComponentsInfo {\r\n    constructor () {}\r\n\r\n    @serializable\r\n    @type(TargetInfo)\r\n    public targetInfo: TargetInfo | null = null;\r\n    @serializable\r\n    @type([Component])\r\n    public components: Component[] = [];\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    public isTarget (localID: string[]): boolean | undefined {\r\n        if (EDITOR) {\r\n            return compareStringArray(this.targetInfo?.localID, localID);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Prefab实例类\r\n * @internal\r\n */\r\n@ccclass('cc.PrefabInstance')\r\nexport class PrefabInstance {\r\n    constructor () {}\r\n\r\n    // Identify current prefabInstance;\r\n    @serializable\r\n    public fileId = '';\r\n\r\n    // record the node with the Prefab that this prefabInstance belongs to.\r\n    @serializable\r\n    @type(Node)\r\n    public prefabRootNode?: Node;\r\n\r\n    // record children nodes that exist in this prefabInstance but not in prefab asset.\r\n    @serializable\r\n    @type([MountedChildrenInfo])\r\n    public mountedChildren: MountedChildrenInfo[] = [];\r\n\r\n    // record components that exist in this prefabInstance but not in prefab asset.\r\n    @serializable\r\n    @type([MountedComponentsInfo])\r\n    public mountedComponents: MountedComponentsInfo[] = [];\r\n\r\n    // override properties info in this prefabInstance.\r\n    @serializable\r\n    @type([PropertyOverrideInfo])\r\n    public propertyOverrides: PropertyOverrideInfo[] = [];\r\n\r\n    // record components that exist in ths prefab asset but not in prefabInstance.\r\n    @serializable\r\n    @type([TargetInfo])\r\n    public removedComponents: TargetInfo[] = [];\r\n\r\n    public targetMap: TargetMap = {};\r\n\r\n    /**\r\n     * make sure prefab instance expand only once\r\n     * @internal\r\n     */\r\n    public expanded = false;\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    public findPropertyOverride (localID: string[], propPath: string[]): Prefab._utils.PropertyOverrideInfo | null | undefined {\r\n        if (EDITOR) {\r\n            for (let i = 0; i < this.propertyOverrides.length; i++) {\r\n                const propertyOverride = this.propertyOverrides[i];\r\n                if (propertyOverride.isTarget(localID, propPath)) {\r\n                    return propertyOverride;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public removePropertyOverride (localID: string[], propPath: string[]): void {\r\n        if (EDITOR) {\r\n            for (let i = 0; i < this.propertyOverrides.length; i++) {\r\n                const propertyOverride = this.propertyOverrides[i];\r\n                if (propertyOverride.isTarget(localID, propPath)) {\r\n                    this.propertyOverrides.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface TargetMap { [k: string]: TargetMap | Node | Component }\r\n\r\n@ccclass('cc.PrefabInfo')\r\nexport class PrefabInfo {\r\n    constructor () {}\r\n\r\n    // the most top node of this prefab in the scene\r\n    @serializable\r\n    @type(Node)\r\n    public root?: Node;\r\n\r\n    // reference to the prefab asset file.\r\n    // In Editor, only asset._uuid is usable because asset will be changed.\r\n    @serializable\r\n    public asset?: Prefab;\r\n\r\n    // prefabInfo's id,unique in the asset.\r\n    @serializable\r\n    @editable\r\n    public fileId = '';\r\n\r\n    // Instance of a prefabAsset\r\n    @serializable\r\n    @type(PrefabInstance)\r\n    public instance?: PrefabInstance;\r\n\r\n    @serializable\r\n    @type([TargetOverrideInfo])\r\n    public targetOverrides?: TargetOverrideInfo[];\r\n\r\n    // record outMost prefabInstance nodes in descendants\r\n    // collected when saving sceneAsset or prefabAsset\r\n    @serializable\r\n    public nestedPrefabInstanceRoots?: Node[];\r\n}\r\n\r\ncclegacy._PrefabInfo = PrefabInfo;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, SUPPORT_JIT } from 'internal:constants';\r\nimport { cclegacy, errorID, warn, editorExtrasTag } from '../../core';\r\nimport { Node } from '../node';\r\nimport { Component } from '../component';\r\nimport {\r\n    MountedChildrenInfo,\r\n    PropertyOverrideInfo,\r\n    MountedComponentsInfo,\r\n    TargetInfo, TargetMap,\r\n    PrefabInstance,\r\n    TargetOverrideInfo,\r\n} from './prefab-info';\r\nimport { ValueType } from '../../core/value-types';\r\n\r\nexport * from './prefab-info';\r\n\r\nexport function createNodeWithPrefab (node: Node): void {\r\n    const prefabInfo = node?.prefab;\r\n    if (!prefabInfo) {\r\n        return;\r\n    }\r\n\r\n    const prefabInstance = prefabInfo.instance;\r\n\r\n    if (!prefabInstance) {\r\n        return;\r\n    }\r\n\r\n    if (!prefabInfo.asset) {\r\n        if (EDITOR) {\r\n            // TODO show message in editor\r\n        } else {\r\n            errorID(3701, node.name);\r\n        }\r\n\r\n        prefabInfo.instance = undefined;\r\n        return;\r\n    }\r\n\r\n    // save root's preserved props to avoid overwritten by prefab\r\n    const _objFlags = node._objFlags;\r\n    const _parent = node.getParent();\r\n    const _id = node.uuid;\r\n    // TODO(PP_Pro): after we support editorOnly tag, we could remove this any type assertion.\r\n    // Tracking issue: https://github.com/cocos/cocos-engine/issues/14613\r\n    const editorExtras = node[editorExtrasTag];\r\n\r\n    // instantiate prefab\r\n    cclegacy.game._isCloning = true;\r\n    if (SUPPORT_JIT) {\r\n        prefabInfo.asset._doInstantiate(node);\r\n    } else {\r\n        // root in prefab asset is always synced\r\n        const prefabRoot = prefabInfo.asset.data;\r\n\r\n        // use node as the instantiated prefabRoot to make references to prefabRoot in prefab redirect to node\r\n        prefabRoot._iN$t = node;\r\n\r\n        // instantiate prefab and apply to node\r\n        cclegacy.instantiate._clone(prefabRoot, prefabRoot);\r\n    }\r\n    cclegacy.game._isCloning = false;\r\n\r\n    // restore preserved props\r\n    node._objFlags = _objFlags;\r\n    node.modifyParent(_parent);\r\n    node.id = _id;\r\n    if (EDITOR) {\r\n        node[editorExtrasTag] = editorExtras;\r\n    }\r\n\r\n    if (node.prefab) {\r\n        // just keep the instance\r\n        node.prefab.instance = prefabInfo.instance;\r\n    }\r\n}\r\n\r\n// TODO: more efficient id->Node/Component map\r\nexport function generateTargetMap (node: Node, targetMap: TargetMap, isRoot: boolean): void {\r\n    if (!targetMap) {\r\n        return;\r\n    }\r\n\r\n    if (!node) {\r\n        return;\r\n    }\r\n\r\n    let curTargetMap = targetMap;\r\n\r\n    const prefabInstance = node.prefab?.instance;\r\n    if (!isRoot && prefabInstance) {\r\n        targetMap[prefabInstance.fileId] = {};\r\n        curTargetMap = targetMap[prefabInstance.fileId] as TargetMap;\r\n    }\r\n\r\n    const prefabInfo = node.prefab;\r\n    if (prefabInfo) {\r\n        curTargetMap[prefabInfo.fileId] = node;\r\n    }\r\n\r\n    node.components.forEach((comp) => {\r\n        if (comp.__prefab) {\r\n            curTargetMap[comp.__prefab.fileId] = comp;\r\n        }\r\n    });\r\n\r\n    node.children.forEach((childNode) => {\r\n        generateTargetMap(childNode, curTargetMap, false);\r\n    });\r\n}\r\n\r\nexport function getTarget (localID: string[], targetMap: any): Node | Component | null {\r\n    if (!localID) {\r\n        return null;\r\n    }\r\n\r\n    let target: Component | Node | null = null;\r\n    let targetIter: any = targetMap;\r\n    for (let i = 0; i < localID.length; i++) {\r\n        if (!targetIter) {\r\n            return null;\r\n        }\r\n        targetIter = targetIter[localID[i]];\r\n    }\r\n\r\n    target = targetIter;\r\n\r\n    return target;\r\n}\r\n\r\nexport function applyMountedChildren (node: Node, mountedChildren: MountedChildrenInfo[], targetMap: TargetMap): void {\r\n    if (!mountedChildren) {\r\n        return;\r\n    }\r\n\r\n    for (let i = 0; i < mountedChildren.length; i++) {\r\n        const childInfo = mountedChildren[i];\r\n        if (childInfo && childInfo.targetInfo) {\r\n            const target = getTarget(childInfo.targetInfo.localID, targetMap) as Node;\r\n            if (!target) {\r\n                continue;\r\n            }\r\n\r\n            let curTargetMap = targetMap;\r\n            const localID = childInfo.targetInfo.localID;\r\n            if (localID.length > 0) {\r\n                for (let i = 0; i < localID.length - 1; i++) {\r\n                    curTargetMap = curTargetMap[localID[i]] as TargetMap;\r\n                }\r\n            }\r\n            if (childInfo.nodes) {\r\n                for (let i = 0; i < childInfo.nodes.length; i++) {\r\n                    const childNode = childInfo.nodes[i];\r\n\r\n                    if (!childNode || target.children.includes(childNode)) {\r\n                        continue;\r\n                    }\r\n\r\n                    target.children.push(childNode);\r\n                    childNode.modifyParent(target);\r\n                    if (EDITOR) {\r\n                        if (!childNode[editorExtrasTag]) {\r\n                            childNode[editorExtrasTag] = {};\r\n                        }\r\n                        // NOTE: editor polyfill\r\n                        (childNode[editorExtrasTag] as any).mountedRoot = node;\r\n                    }\r\n                    // mounted node need to add to the target map\r\n                    generateTargetMap(childNode, curTargetMap, false);\r\n                    childNode.siblingIndex = target.children.length - 1;\r\n                    expandPrefabInstanceNode(childNode, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyMountedComponents (node: Node, mountedComponents: MountedComponentsInfo[], targetMap: TargetMap): void {\r\n    if (!mountedComponents) {\r\n        return;\r\n    }\r\n\r\n    for (let i = 0; i < mountedComponents.length; i++) {\r\n        const componentsInfo = mountedComponents[i];\r\n        if (componentsInfo && componentsInfo.targetInfo) {\r\n            const target = getTarget(componentsInfo.targetInfo.localID, targetMap) as Node;\r\n            if (!target) {\r\n                continue;\r\n            }\r\n\r\n            if (componentsInfo.components) {\r\n                for (let i = 0; i < componentsInfo.components.length; i++) {\r\n                    const comp = componentsInfo.components[i];\r\n                    if (!comp) {\r\n                        continue;\r\n                    }\r\n\r\n                    comp.node = target;\r\n                    if (EDITOR) {\r\n                        if (!comp[editorExtrasTag]) {\r\n                            comp[editorExtrasTag] = {};\r\n                        }\r\n                        // TODO: editor polyfill\r\n                        (comp[editorExtrasTag] as any).mountedRoot = node;\r\n                    }\r\n                    target.getWritableComponents().push(comp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyRemovedComponents (node: Node, removedComponents: TargetInfo[], targetMap: TargetMap): void {\r\n    if (!removedComponents) {\r\n        return;\r\n    }\r\n\r\n    for (let i = 0; i < removedComponents.length; i++) {\r\n        const targetInfo = removedComponents[i];\r\n        if (targetInfo) {\r\n            const target = getTarget(targetInfo.localID, targetMap) as Component;\r\n            if (!target || !target.node) {\r\n                continue;\r\n            }\r\n\r\n            const index = target.node.components.indexOf(target);\r\n            if (index >= 0) {\r\n                target.node.getWritableComponents().splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyPropertyOverrides (node: Node, propertyOverrides: PropertyOverrideInfo[], targetMap: TargetMap): void {\r\n    if (propertyOverrides.length <= 0) {\r\n        return;\r\n    }\r\n\r\n    let target: any = null;\r\n    for (let i = 0; i < propertyOverrides.length; i++) {\r\n        const propOverride = propertyOverrides[i];\r\n        if (propOverride && propOverride.targetInfo) {\r\n            const targetInfo = propOverride.targetInfo;\r\n            target = getTarget(targetInfo.localID, targetMap);\r\n            if (!target) {\r\n                // Can't find target\r\n                continue;\r\n            }\r\n\r\n            let targetPropOwner: any = target;\r\n            const propertyPath = propOverride.propertyPath.slice();\r\n            if (propertyPath.length > 0) {\r\n                const targetPropName = propertyPath.pop();\r\n                if (!targetPropName) {\r\n                    continue;\r\n                }\r\n\r\n                for (let i = 0; i < propertyPath.length; i++) {\r\n                    const propName = propertyPath[i];\r\n                    targetPropOwner = targetPropOwner[propName];\r\n                    if (!targetPropOwner) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!targetPropOwner) {\r\n                    continue;\r\n                }\r\n\r\n                if (Array.isArray(targetPropOwner)) {\r\n                    // if set element of a array, the length of a array must has been defined.\r\n                    if (targetPropName === 'length') {\r\n                        targetPropOwner[targetPropName] = propOverride.value;\r\n                    } else {\r\n                        const index = Number.parseInt(targetPropName);\r\n                        if (Number.isInteger(index) && index < targetPropOwner.length) {\r\n                            targetPropOwner[targetPropName] = propOverride.value;\r\n                        }\r\n                    }\r\n                } else if (targetPropOwner[targetPropName] instanceof ValueType) {\r\n                    targetPropOwner[targetPropName].set(propOverride.value);\r\n                } else {\r\n                    targetPropOwner[targetPropName] = propOverride.value;\r\n                }\r\n            } else if (EDITOR) {\r\n                warn('property path is empty');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyTargetOverrides (node: Node): void {\r\n    const targetOverrides = node.prefab?.targetOverrides as TargetOverrideInfo[];\r\n    if (targetOverrides) {\r\n        for (let i = 0; i < targetOverrides.length; i++) {\r\n            const targetOverride = targetOverrides[i];\r\n\r\n            let source: Node | Component | null = targetOverride.source;\r\n            const sourceInfo = targetOverride.sourceInfo;\r\n            if (sourceInfo) {\r\n                const src = targetOverride.source as Node;\r\n                const sourceInstance = src?.prefab?.instance;\r\n                if (sourceInstance && sourceInstance.targetMap) {\r\n                    source = getTarget(sourceInfo.localID, sourceInstance.targetMap);\r\n                }\r\n            }\r\n\r\n            if (!source) {\r\n                // Can't find source\r\n                continue;\r\n            }\r\n\r\n            let target: Node | Component | null = null;\r\n            const targetInfo = targetOverride.targetInfo;\r\n            if (!targetInfo) {\r\n                continue;\r\n            }\r\n            const targetAsNode = targetOverride.target as Node;\r\n            const targetInstance = targetAsNode?.prefab?.instance;\r\n            if (!targetInstance || !targetInstance.targetMap) {\r\n                continue;\r\n            }\r\n            target = getTarget(targetInfo.localID, targetInstance.targetMap);\r\n            if (!target) {\r\n                // Can't find target\r\n                continue;\r\n            }\r\n\r\n            const propertyPath = targetOverride.propertyPath.slice();\r\n            let targetPropOwner: any = source;\r\n            if (propertyPath.length > 0) {\r\n                const targetPropName = propertyPath.pop();\r\n                if (!targetPropName) {\r\n                    return;\r\n                }\r\n\r\n                for (let i = 0; i < propertyPath.length; i++) {\r\n                    const propName = propertyPath[i];\r\n                    targetPropOwner = targetPropOwner[propName];\r\n                    if (!targetPropOwner) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!targetPropOwner) {\r\n                    continue;\r\n                }\r\n\r\n                targetPropOwner[targetPropName] = target;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function expandPrefabInstanceNode (node: Node, recursively = false): void {\r\n    const prefabInstance = node?.prefab?.instance as PrefabInstance;\r\n    if (prefabInstance && !prefabInstance.expanded) {\r\n        createNodeWithPrefab(node);\r\n        // nested prefab should expand before parent(property override order)\r\n        if (recursively) {\r\n            if (node && node.children) {\r\n                node.children.forEach((child) => {\r\n                    expandPrefabInstanceNode(child, true);\r\n                });\r\n            }\r\n        }\r\n\r\n        const targetMap = {};\r\n        prefabInstance.targetMap = targetMap;\r\n        generateTargetMap(node, targetMap, true);\r\n        applyMountedChildren(node, prefabInstance.mountedChildren, targetMap);\r\n        applyRemovedComponents(node, prefabInstance.removedComponents, targetMap);\r\n        applyMountedComponents(node, prefabInstance.mountedComponents, targetMap);\r\n        applyPropertyOverrides(node, prefabInstance.propertyOverrides, targetMap);\r\n        prefabInstance.expanded = true;\r\n    } else if (recursively) {\r\n        if (node && node.children) {\r\n            node.children.forEach((child) => {\r\n                expandPrefabInstanceNode(child, true);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport function expandNestedPrefabInstanceNode (node: Node): void {\r\n    const prefabInfo = node.prefab;\r\n\r\n    if (prefabInfo && prefabInfo.nestedPrefabInstanceRoots) {\r\n        prefabInfo.nestedPrefabInstanceRoots.forEach((instanceNode: Node) => {\r\n            expandPrefabInstanceNode(instanceNode);\r\n            // when expanding the prefab,it's children will be change,so need to apply after expanded\r\n            // if (!EDITOR) {\r\n            //     applyNodeAndComponentId(instanceNode, (instanceNode as any)._prefab?.instance?.fileId ?? '');\r\n            // }\r\n        });\r\n    }\r\n}\r\n\r\n// make sure prefab instance's children id is fixed\r\nexport function applyNodeAndComponentId (prefabInstanceNode: Node, rootId: string): void {\r\n    const { components, children } = prefabInstanceNode;\r\n    for (let i = 0; i < components.length; i++) {\r\n        const comp = components[i];\r\n        const fileID = comp.__prefab?.fileId ?? '';\r\n        comp._id = `${rootId}${fileID}`;\r\n    }\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // TODO(PP_Pro): after we support editorOnly tag, we could remove this any type assertion.\r\n        // Tracking issue: https://github.com/cocos/cocos-engine/issues/14613\r\n        const prefabInfo = child.prefab!;\r\n        const fileId = prefabInfo?.instance ? prefabInfo.instance.fileId : prefabInfo?.fileId;\r\n        if (!fileId) continue;\r\n        child.id = `${rootId}${fileId}`;\r\n\r\n        // ignore prefab instance,because it will be apply in 'nestedPrefabInstanceRoots' for loop;\r\n        if (!prefabInfo?.instance) {\r\n            applyNodeAndComponentId(child, rootId);\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, serializable, editable } from 'cc.decorator';\r\nimport { EDITOR, TEST } from 'internal:constants';\r\nimport { CCObject } from '../core/data/object';\r\nimport { assert, getError } from '../core/platform/debug';\r\nimport { RenderScene } from '../render-scene/core/render-scene';\r\nimport { Node } from './node';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { Component } from './component';\r\nimport { SceneGlobals } from './scene-globals';\r\nimport { applyTargetOverrides, expandNestedPrefabInstanceNode } from './prefab/utils';\r\n\r\n/**\r\n * @en\r\n * Scene is a subclass of [[Node]], composed by nodes, representing the root of a runnable environment in the game.\r\n * It's managed by [[Director]] and user can switch from a scene to another using [[Director.loadScene]]\r\n * @zh\r\n * Scene 是 [[Node]] 的子类，由节点所构成，代表着游戏中可运行的某一个整体环境。\r\n * 它由 [[Director]] 管理，用户可以使用 [[Director.loadScene]] 来切换场景\r\n */\r\n@ccclass('cc.Scene')\r\nexport class Scene extends Node {\r\n    /**\r\n     * @en The renderer scene, normally user don't need to use it\r\n     * @zh 渲染层场景，一般情况下用户不需要关心它\r\n     */\r\n    get renderScene (): RenderScene | null {\r\n        return this._renderScene;\r\n    }\r\n\r\n    @editable\r\n    get globals (): SceneGlobals {\r\n        return this._globals;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether all (directly or indirectly) static referenced assets of this scene are releasable by default after scene unloading.\r\n     * @zh 指示该场景中直接或间接静态引用到的所有资源是否默认在场景切换后自动释放。\r\n     */\r\n    @serializable\r\n    @editable\r\n    public autoReleaseAssets = false;\r\n\r\n    /**\r\n     * @en Per-scene level rendering info\r\n     * @zh 场景级别的渲染信息\r\n     *\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    @serializable\r\n    public _globals = new SceneGlobals();\r\n\r\n    public dependAssets = null; // cache all depend assets for auto release\r\n\r\n    protected _renderScene: RenderScene | null = null;\r\n\r\n    protected declare _inited: boolean;\r\n\r\n    protected _prefabSyncedInLiveReload = false;\r\n\r\n    protected _updateScene (): void {\r\n        this._scene = this;\r\n    }\r\n\r\n    constructor (name: string) {\r\n        super(name);\r\n        this._activeInHierarchy = false;\r\n        if (legacyCC.director && legacyCC.director.root) {\r\n            this._renderScene = legacyCC.director.root.createScene({});\r\n        }\r\n        this._inited = legacyCC.game ? !legacyCC.game._isCloning : true;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the current scene and all its nodes, this action won't destroy related assets\r\n     * @zh 销毁当前场景中的所有节点，这个操作不会销毁资源\r\n     */\r\n    public destroy (): boolean {\r\n        const success = CCObject.prototype.destroy.call(this);\r\n        if (success) {\r\n            const children = this._children;\r\n            for (let i = 0; i < children.length; ++i) {\r\n                children[i].active = false;\r\n            }\r\n        }\r\n        if (this._renderScene) legacyCC.director.root.destroyScene(this._renderScene);\r\n        this._active = false;\r\n        this._activeInHierarchy = false;\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * @en Only for compatibility purpose, user should not add any component to the scene\r\n     * @zh 仅为兼容性保留，用户不应该在场景上直接添加任何组件\r\n     */\r\n    public addComponent(...args: any[]): Component;\r\n\r\n    /**\r\n     * @en Only for compatibility purpose, user should not add any component to the scene\r\n     * @zh 仅为兼容性保留，用户不应该在场景上直接添加任何组件\r\n     */\r\n    public addComponent (): Component {\r\n        throw new Error(getError(3822));\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onHierarchyChanged (): void {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onPostActivated (active: boolean): void {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _onBatchCreated (dontSyncChildPrefab: boolean): void {\r\n        const len = this._children.length;\r\n        for (let i = 0; i < len; ++i) {\r\n            this._children[i]._siblingIndex = i;\r\n            this._children[i]._onBatchCreated(dontSyncChildPrefab);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Refer to [[Node.updateWorldTransform]]\r\n     * @zh\r\n     * 参考 [[Node.updateWorldTransform]]\r\n     */\r\n    public updateWorldTransform (): void {\r\n        // do nothing\r\n    }\r\n\r\n    // life-cycle call backs\r\n\r\n    protected _instantiate (cloned?: Node | null, isSyncedNode: boolean = false): Node {\r\n        // Can not initialize scene.\r\n        return null as unknown as Node;\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _load (): void {\r\n        if (!this._inited) {\r\n            if (TEST) {\r\n                assert(!this._activeInHierarchy, 'Should deactivate ActionManager by default');\r\n            }\r\n\r\n            expandNestedPrefabInstanceNode(this);\r\n            applyTargetOverrides(this);\r\n            this._onBatchCreated(EDITOR && this._prefabSyncedInLiveReload);\r\n            this._inited = true;\r\n        }\r\n        // static method can't use this as parameter type\r\n        this.walk(Node._setScene);\r\n    }\r\n\r\n    /**\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _activate (active = true): void {\r\n        if (EDITOR) {\r\n            // register all nodes to editor\r\n            // TODO: `_registerIfAttached` is injected property\r\n            // issue: https://github.com/cocos/cocos-engine/issues/14643\r\n            (this as any)._registerIfAttached!(active);\r\n        }\r\n        legacyCC.director._nodeActivator.activateNode(this, active);\r\n        // The test environment does not currently support the renderer\r\n        if (!TEST) {\r\n            this._globals.activate(this);\r\n        }\r\n    }\r\n}\r\n\r\nlegacyCC.Scene = Scene;\r\n"],"names":["CustomPixelFormat","PixelFormat","WrapMode","TextureFilter","device","renderPass","cmdBuff","profiler","camera","isEnableEffect","enabled","profilerCamera","_profiler$subModels$","subModels","inputAssembler","passes","shaders","descriptorSet","profilerViewport","width","profilerScissor","window","height","pso","PipelineStateManager","getOrCreatePipelineState","setViewport","setScissor","bindPipelineState","bindDescriptorSet","SetIndex","MATERIAL","LOCAL","bindInputAssembler","draw","onProgress","defaultProgressCallback","l","r","ls","sortRender","rs","hash","shaderId","cameras","i","length","swapchain","Format","R5G6B5","RGB5A1","RGBA4","RGB8","RGB32F","RGBA8","BGRA8","RGBA32F","A8","L8","LA8","PVRTC_RGB2","PVRTC_RGBA2","VALUE","PVRTC_RGB4","PVRTC_RGBA4","ETC_RGB8","ETC2_RGB8","ETC2_RGBA8","ASTC_RGBA_4X4","ASTC_RGBA_5X4","ASTC_RGBA_5X5","ASTC_RGBA_6X5","ASTC_RGBA_6X6","ASTC_RGBA_8X5","ASTC_RGBA_8X6","ASTC_RGBA_8X8","ASTC_RGBA_10X5","ASTC_RGBA_10X6","ASTC_RGBA_10X8","ASTC_RGBA_10X10","ASTC_RGBA_12X10","ASTC_RGBA_12X12","exports","Address","WRAP","CLAMP","MIRROR","BORDER","Filter","NONE","LINEAR","POINT","COMPRESSED_MIPMAP_MAGIC","compressType","Enum","PVR","PKM","ASTC","getASTCFormat","xdim","ydim","RGBA_ASTC_4x4","RGBA_ASTC_5x4","RGBA_ASTC_5x5","RGBA_ASTC_6x5","RGBA_ASTC_6x6","RGBA_ASTC_8x5","RGBA_ASTC_8x6","RGBA_ASTC_8x8","RGBA_ASTC_10x5","RGBA_ASTC_10x6","RGBA_ASTC_10x8","RGBA_ASTC_10x10","RGBA_ASTC_12x10","RGBA_ASTC_12x12","readBEUint16","header","offset","isImageBitmap","imageSource","sys","hasFeature","Feature","IMAGE_BITMAP","ImageBitmap","ImageAsset","ccclass","_dec","_class3","_Asset","_inheritsLoose","mergeCompressedTextureMips","files","out","Uint8Array","_step","fileHeaderLength","COMPRESSED_HEADER_LENGTH","fileLength","_iterator","_createForOfIteratorHelperLoose","done","value","byteLength","outView","DataView","buffer","byteOffset","setUint32","dataOffset","file","ArrayBuffer","srcArray","set","e","warn","parseCompressedTextures","type","_data","_compressed","format","mipmapLevelDataSize","bufferView","getUint32","mipmapLevelNumber","fileHeaderByteLength","parseCompressedTexture","beginOffset","endOffset","levelIndex","parsePVRTexture","parsePKMTexture","parseASTCTexture","Int32Array","srcView","dstView","Error","ASTC_HEADER_MAGIC","zdim","ASTC_HEADER_SIZE_X_BEGIN","ASTC_HEADER_SIZE_Y_BEGIN","_proto","prototype","nativeAsset","_this","call","this","_nativeData","_exportedExts","undefined","_format","RGBA8888","_width","_height","reset","extractMipmap0","mipmapSize","data","mipmap","_uuid","extractMipmaps","images","_step2","_iterator2","Math","max","push","HTMLElement","destroy","HTMLImageElement","src","_setRawAsset","_this$data","close","_serialize","_deserialize","fmtStr","w","h","fmt","_step4","deviceManager","gfxDevice","extensionIDs","split","preferedExtensionIndex","Number","MAX_VALUE","ext","SupportTextureFormats","macro","SUPPORT_TEXTURE_FORMATS","_iterator4","extFormat","parseInt","tmpExt","extnames","index","indexOf","getFormatFeatures","FormatFeatureBit","SAMPLED_TEXTURE","RGB_ETC1","RGBA_ETC1","RGB_ETC2","RGBA_ETC2","WEBP","warnID","initDefault","uuid","_sharedPlaceHolderCanvas","canvas","ccwindow","document","createElement","context","getContext","fillStyle","fillRect","validate","_createClass","key","get","HTMLCanvasElement","RGB_A_PVRTC_2BPPV1","nativeUrl","Asset","_applyDecoratedDescriptor","_class2","override","Object","getOwnPropertyDescriptor","_class","cclegacy","ccenum","idGenerator","js","TextureBase","name","_initializer","_minFilter","_initializer2","_magFilter","_initializer3","_mipFilter","_initializer4","_wrapS","_initializer5","_wrapT","_initializer6","_wrapR","_initializer7","_anisotropy","_initializer8","_samplerInfo","SamplerInfo","_gfxSampler","_gfxDevice","_textureHash","_id","getNewId","_getGFXDevice","murmurhash2_32_gc","getId","getPixelFormat","getAnisotropy","setWrapMode","wrapS","wrapT","wrapR","addressU","addressV","addressW","getSampler","setFilters","minFilter","magFilter","setMipFilter","mipFilter","setAnisotropy","anisotropy","min","maxAnisotropy","_cclegacy$director$ro","destroyed","director","root","batcher2D","_releaseDescriptorSetCache","getHash","getGFXTexture","getSamplerInfo","getGFXSampler","errorID","serializedData","fields","unshift","_getGFXFormat","_getGFXPixelFormat","_setGFXFormat","RGB_A_PVRTC_4BPPV1","RGB_PVRTC_4BPPV1","RGB_PVRTC_2BPPV1","serializable","_applyDecoratedInitializer","REPEAT","MissingScript","_Component","_$erialized","safeFindClass","id","cls","deserialize","reportMissingClass","onLoad","node","Component","editorOnly","_MissingScript","props","__values__","join","Decoder","_offset","_buffer","_view","isView","_array","Array","parse","_map","_str","utf8Read","_bin","slice","prefix","getUint8","hi","lo","getUint16","getInt8","ns","getInt32","Date","getFloat32","getFloat64","pow","getInt16","view","string","chr","end","byte","toString","String","fromCharCode","notepackDecode","decoder","CCON","chunks","_document","_chunks","decodeCCONBinary","bytes","InvalidCCONError","getError","dataView","version","chunksStart","jsonDataLength","json","jsonData","jsonString","decodeJson","JSON","err","chunkDataLength","TextDecoder","decode","globalThis","Buffer","from","_Error","apply","arguments","_wrapNativeSuper","compileObjectTypeJit","sources","defaultValue","accessorToSet","propNameLiteralToSet","assumeHavePropIfIsValue","ValueType","ctorCode","BufferBuilder","_viewOrPaddings","_length","alignAs","align","remainder","padding","append","result","counter","forEach","viewOrPadding","internal","compileDeserialize","self","klass","attrs","CCClass","Attr","getClassAttrs","fastMode","canBeDeserializedInFastMode","p","propName","IDENTIFIER_RE","test","escapeForJS","accessorToGet","POSTFIX_FORMERLY_SERIALIZED_AS","propNameToRead","JSB","getDefault","POSTFIX_DEFAULT","userType","POSTFIX_TYPE","isPrimitivePropertyByDefaultOrType","Node","Function","DELIMITER","DELIMETER","misc","PrimitiveType","ENUM_TAG","BITMASK_TAG","defaultType","DeserializerPool","_js$Pool","deserializer","clear","details","classFinder","customEnv","ignoreEditorOnly","cache","_get","_Deserializer","deserializedList","deserializedData","_classFinder","_reportMissingClass","_onDereferenced","onDereferenced","jsonObj","fromCCON","assertIsTrue","_mainBinChunk","_serializedData","_context","serializedRootObject","isArray","_deserializeObject","serialized","globalIndex","owner","__type__","_deserializeTypedArrayView","_deserializeTypedArrayViewRef","_deserializeTypeTaggedObject","_deserializeArray","_deserializePlainObject","ctor","array","constructorName","prop","obj","_deserializeAndAssignField","_fillPlainObject","constructor","createObject","_deserializeInto","object","skipCustomized","deserializeTag","content","Class","_isCCClass","_deserializeFireClass","_deserializeFastDefinedObject","_runCustomizedDeserialize","_this2","serializationInput","readProperty","serializedField","_deserializeObjectField","readThis","readSuper","superConstructor","hasOwnProperty","__deserialize__","rawDeserialize","deserialized","stringify","__id__","field","_this$_onDereferenced","source","__uuid__","expectedType","__expectedType__","instance","Vec2","x","y","Vec3","z","Color","Size","error","g","b","a","_ignoreEditorOnly","deserializeDynamic","options","_options$reportMissin","createAssetRefs","platform","Platform","EDITOR_CORE","init","pool","game","_isCloning","res","put","assignAssetsBy","EditorExtends","serialize","asAsset","constructorMap","Vec4","Quat","Rect","Mat4","vec4LikeSetter","setterMap","fromUint32","fromArray","SUPPORT_MIN_FORMAT_VERSION","EMPTY_PLACEHOLDER","CLASS_TYPE","CLASS_KEYS","CLASS_PROP_TYPE_OFFSET","MASK_CLASS","OBJ_DATA_MASK","Refs","EACH_RECORD_LENGTH","OWNER_OFFSET","KEY_OFFSET","TARGET_OFFSET","File","Version","Context","SharedUuids","SharedStrings","SharedClasses","SharedMasks","Instances","InstanceTypes","DependObjs","DependKeys","DependUuidIndices","ARRAY_LENGTH","PACKED_SECTIONS","Details","uuidObjList","uuidPropList","uuidList","uuidTypeList","dereference","refs","instances","strings","dataLength","instanceOffset","target","keyIndex","deserializeCCObject","objectData","mask","clazz","keys","classTypeOffset","maskTypeOffset","op","ASSIGNMENTS","deserializeCustomCCObject","assignInstanceRef","genArrayParser","parser","parseAssetRefByInnerObj","parseClass","parseInstances","instanceTypes","instanceTypesLen","rootIndex","normalObjectCount","insIndex","classes","typeIndex","eachData","getMissingClass","hasCustomFinder","doLookupClass","container","silent","c","t","actualClass","lookupClasses","customFinder","klassLayout","cacheMasks","masks","parseResult","sharedStrings","dependSharedUuids","dependObjs","dependKeys","dependUuids","isCompiledJson","FileInfo","initializeDeserializationContext","_options","preprocessed","_version","isBorrowedDetails","borrowedDetails","runtimeData","setter","dict","DICT_JSON_LAYOUT","subKey","subType","subValue","unpackJSONs","sharedUuids","sharedClasses","sharedMasks","sections","packCustomObjData","hasNativeDep","parseUuidDependencies","map","dependMap","WeakMap","nativeDependMap","WeakSet","onLoadedInvokedMap","deserializeAsset","asset","tdInfo","objList","propList","typeList","depends","dependUuid","decodeUuid","_native","add","DependUtil","_depends","Cache","getNativeDep","depend","nativeDep","getDeps","has","deps","getDepsRecursively","exclude","create","_descend","remove","rootInfo","_parseDepsFromAsset","parsed","_parseDepsFromJson","parsedFromExistAsset","assertIsNonNullable","_nativeDep","_instance","_regions","BufferTextureCopy","getMipLevel","size","level","isPOT","n","canGenerateMipmap","gfxAPI","API","WEBGL","SimpleTexture","_TextureBase","_gfxTexture","_gfxTextureView","_mipmapLevel","_textureWidth","_textureHeight","_baseLevel","_maxLevel","_tryDestroyTextureView","_tryDestroyTexture","updateImage","updateMipmaps","uploadData","arrayIndex","region","texExtent","texSubres","mipLevel","baseArrayLayer","copyBuffersToTexture","copyTexImagesToTexture","_assignImage","image","_checkTextureLoaded","CLEANUP_IMAGE_CACHE","dependUtil","decRef","_textureReady","loaded","emit","_setMipmapLevel","_setMipRange","baseLevel","maxLevel","setMipRange","assertID","textureView","_createTextureView","_getGfxTextureCreateInfo","_getGfxTextureViewCreateInfo","_tryReset","_createTexture","isUsingOfflineMipmaps","flags","TextureFlagBit","isCompressed","GEN_MIPMAP","textureCreateInfo","usage","TextureUsageBit","SAMPLED","TRANSFER_DST","COLOR_ATTACHMENT","levelCount","texture","createTexture","textureViewCreateInfo","Texture2D","FaceIndex","MipmapMode","_SimpleTexture","_mipmaps","_generatedMipmaps","_setMipmapParams","imageAsset","mipmapLevel","initialize","mipmaps","onLoaded","info","mipLevels","minLod","maxLod","url","firstLevel","count","nUpdate","getHtmlElementObj","description","releaseTexture","handle","base","mipmapUUID","presumed","texInfo","TextureInfo","TextureType","TEX2D","assign","texViewInfo","TextureViewInfo","_dec2","TextureCube","isRGBE","_mipmapAtlas","_mipmapMode","front","_forEachFace","face","faceIndex","BAKED_CONVOLUTION_MAP","fromTexture2DArray","textures","nMipmaps","back","left","right","top","bottom","mipmapAtlas","_this3","_loop","rgbe","mipmapMode","mipmapLayout","atlas","layout","imageAssetClassId","CUBE","layerCount","baseLayer","_uploadAtlas","_this4","mip0Layout","tex","layoutInfo","texOffset","copyTextureToBuffers","bufferAsset","find","cubeMaps","cubeMipmap","cubeMap","_this5","imageAtlasAsset","faceAtlas","ctx","_loop2","j","clearRect","drawImg","drawImage","rawData","getImageData","callback","legacyCC","isMatchByWord","path","charCodeAt","processOptions","uuids","paths","types","bundles","realEntries","debug","entry","scenes","packs","packId","packedIds","versions","folder","entries","redirect","extensionMap","Config","importBase","nativeBase","assetInfos","_initUuid","_initPath","_initScene","_initPackage","_initVersion","_initRedirect","assetInfo","extension","getInfoWithPath","normalize","items","getDirWithPath","infos","startsWith","getAssetInfo","getSceneInfo","endsWith","val","pathList","isSubAsset","sceneList","sceneName","packageList","cconbUuids","packUuid","pack","packedUuids","includes","assetPacks","ver","nativeVer","visitAsset","visitComponent","comp","getOwnPropertyNames","visitNode","_components","_children","descendOpRef","dependAsset","assets","refCount","_temp","checkCircularReference","ReleaseManager","_persistNodeDeps","_toDelete","_eventListener","_dontDestroyAssets","addIgnoredAsset","_addPersistNodeRef","addRef","_removePersistNodeRef","_autoRelease","oldScene","newScene","persistNodes","childs","autoReleaseAssets","dependencies","persistDeps","sceneDeps","_ref","dep","tryRelease","force","_free","_freeAssets","bind","isValid","releaseManager","task","input","item","isNative","recycle","urlAppendTimestamp","now","retry","process","times","wait","onComplete","setTimeout","getDepends","config","bundle","_extends","message","stack","cacheAsset","assetManager","isScene","isDefault","setProperties","assetsMap","missingAsset","dispatchAssetMissing","placeHolder","_nativeAsset","gatherAsset","__outputAsArray__","output","errs","cb","parseParameters","optionsOut","onProgressOut","onCompleteOut","isCallback","parseLoadResArgs","typeOut","isValidType","checkCircleReference","checked","asyncify","p1","p2","Bundle","_config","load","_parseLoadResArgs","_type","onProg","onComp","__requestType__","RequestType","PATH","loadAny","preload","_parseLoadResArgs2","preloadAny","loadDir","dir","_parseLoadResArgs3","DIR","preloadDir","_parseLoadResArgs4","loadScene","_parseParameters","opts","preset","scene","sceneAsset","preloadScene","_parseParameters2","release","releaseUnusedAssets","releaseAll","_destroy","resources","downloadDomImage","img","Image","loadCallback","removeEventListener","errorCallback","location","protocol","XIAOMI","crossOrigin","addEventListener","downloadFile","xhr","XMLHttpRequest","errInfo","open","xhrResponseType","responseType","xhrWithCredentials","withCredentials","xhrMimeType","overrideMimeType","xhrTimeout","timeout","xhrHeader","setRequestHeader","onload","status","response","onprogress","lengthComputable","total","onerror","ontimeout","onabort","send","ccdocument","downloaded","downloadScript","script","loadHandler","parentNode","removeChild","errorHandler","async","scriptAsyncLoading","body","appendChild","REGEX","downloadImage","allowImageBitmap","downloadBlob","onFileProgress","downloadJson","downloadArrayBuffer","downloadCCONB","handleArrayBuffer","arrayBuffer","downloader","_downloadArrayBuffer","replace","downloadText","downloadBundle","nameOrUrl","bundleName","remoteBundles","remoteServerAddress","bundleVers","Downloader","maxConcurrency","maxRequestsPerFrame","maxRetryCount","appendTimeStamp","EDITOR_NOT_IN_PREVIEW","limited","EDITOR","retryInterval","downloadDomAudio","_downloadJson","_downloaders","default","_downloading","_queue","_queueDirty","_totalNum","_totalNumThisPeriod","_lastDate","_checkNextPeriod","_remoteServerAddress","_maxInterval","register","handler","download","downloadCallbacks","request","priority","_updateTime","_handleQueueInNextFrame","callbacks","loadSubpackage","completeCallback","loadBundle","performance","deltaTime","interval","_handleQueue","sort","pop","JsonAsset","TextAsset","text","BufferAsset","bin","createImageAsset","_nativeUrl","createJsonAsset","createTextAsset","createBufferAsset","createAsset","createBundle","BuiltinBundleName","RESOURCES","module","import","then","Factory","_creating","_producers","reloadAsset","creating","factory","LITTLE_ENDIAN","binPackageUnpack","compatibleOlderVersion","filesCount","UNIT_SIZE","filesPosition","headOffset","unpack_v1","_ref2","PackManager","_loading","_unpackers","unpackJson","unpackBin","textureType","imageAssetType","datas","uint8Arrays","unpack","unpacker","loadingPack","req","transform","err2","unpackedData","packManager","fetch","firstTask","progress","finish","canInvoke","__exclude__","dispatch","isFinished","subTask","Task","onError","_task$output","decreaseRef","fetchPipeline","SAXParser","PlistParser","_SAXParser","_proto2","xmlTxt","plist","_parseXML","documentElement","tagName","len","childNodes","nodeType","_parseNode","_parseDict","_parseArray","firstChild","nodeValue","parseFloat","child","_parser","DOMParser","textxml","parseFromString","plistParser","Parser","_parsing","_parsers","parseImage","parsePVRTex","parsePKMTex","parseASTCTex","parsePlist","parseImport","createImageBitmap","premultiplyAlpha","parsedAsset","parsing","parseHandler","loadOneAssetPipeline","Pipeline","loadDepends","repeatItem","pipeline","preprocess","subOptions","leftOptions","UUID","SCENE","URL","transformPipeline","sync","RequestItem","overrideUuid","_deadPool","MAX_DEAD_NUM","presets","_info2","_info","__isNative__","replaceOverrideAsset","_loop3","assetsOverrideMap","_info3","combine","generalNativeBase","generalImportBase","__nativeName__","querySettings","settings","SETTINGS_CATEGORY_ASSETS","SettingsCategory","ASSETS","EVENT_ASSET_MISSING","AssetManager","PREVIEW","utils","helper","cacheManager","preprocessPipe","fetchPipe","loadPipe","references","_releaseManager","_files","_parsed","_parsePipeline","_projectBundles","_eventTarget","EventTarget","getReleaseManager","onAssetMissing","func","on","offAssetMissing","off","parentAsset","server","downloadMaxConcurrency","substring","assetsOverride","getBundle","removeBundle","requests","loadRemote","_parseParameters3","_parseParameters4","releaseAsset","loadWithJson","MAIN","CacheManager","cacheDir","cacheEnabled","autoClear","cacheInterval","deleteInterval","cachedFiles","BuiltinResMgr","phases","phaseNum","_resources","_materialsToBeCompiled","blackValueView","emptyValueView","greyValueView","whiteValueView","normalValueView","defaultValueView","defaultSize","halfDefaultSize","blackMemImageSource","emptyMemImageSource","greyMemImageSource","whiteMemImageSource","normalMemImageSource","defaultMemImageSource","imgAsset","blackTexture","emptyImgAsset","emptyTexture","blackCubeTexture","NEAREST","greyImgAsset","greyTexture","greyCubeTexture","whiteImgAsset","whiteTexture","whiteCubeTexture","normalImgAsset","normalTexture","defaultImgAsset","defaultTexture","defaultCubeTexture","SpriteFrame","spriteFrame","addAsset","loadBuiltinAssets","builtinAssets","ENGINE","Promise","resolve","reject","INTERNAL","Material","compileBuiltinMaterial","mat","tryCompile","builtinResMgr","getPhaseID","Map","phaseName","typeMask","bindingMask","countMask","genHandle","binding","getTypeFromHandle","getBindingFromHandle","getCountFromHandle","getOffsetFromHandle","customizeType","type2reader","Type","UNKNOWN","v","idx","INT","INT2","INT3","INT4","FLOAT","FLOAT2","FLOAT3","FLOAT4","MAT3","Mat3","MAT4","_type2reader","type2writer","toArray","_type2writer","type2validator","_type2validator","defaultValues","freeze","getDefaultFromType","BOOL","UINT","BOOL2","UINT2","BOOL4","UINT4","SAMPLER2D","SAMPLER_CUBE","SAMPLER2D_ARRAY","SAMPLER3D","getStringFromType","overrideMacros","isDifferent","mapDefine","def","range","prepareDefines","defs","tDefs","macros","tmpl","getShaderInstanceName","reduce","acc","cur","dependencyCheck","defines","d","getActiveAttributes","gfxAttributes","attributes","getVariantKey","programInfo","tmplDefs","uber","tmplDef","mapped","defaultUniformCounts","getUniformSize","prevSize","m","GetTypeSize","getSize","blockMembers","genHandles","handleMap","blocks","block","members","uniform","samplerTextures","samplerTexture","getBitCount","cnt","ceil","log2","populateMacros","findIndex","s","constantMacros","builtins","statistics","getCombinationDefines","combination","choices","addEffectDefaultProperties","effect","techniques","tech","pass","propertyIndex","properties","UBOSkinning","LAYOUT","UBOForwardLightEnum","LIGHTS_PER_PASS","_dsLayoutInfo","DescriptorSetLayoutInfo","insertBuiltinBindings","tmplInfo","tempBlocks","layouts","bindings","bd","descriptorType","DESCRIPTOR_BUFFER_TYPE","shaderInfo","tempSamplerTextures","DESCRIPTOR_SAMPLER_TYPE","ProgramLib","_templates","_cache","_templateInfos","define","effectName","shader","curTmpl","samplerStartBinding","ShaderInfo","blockSizes","DescriptorSetLayoutBinding","DescriptorType","UNIFORM_BUFFER","stageFlags","UniformBlock","Uniform","SAMPLER_TEXTURE","UniformSamplerTexture","samplers","sampler","SAMPLER","UniformSampler","TEXTURE","UniformTexture","buffers","STORAGE_BUFFER","UniformStorageBuffer","memoryAccess","STORAGE_IMAGE","UniformStorageImage","subpassInputs","subpassInput","INPUT_ATTACHMENT","UniformInputAttachment","attr","Attribute","isNormalized","isInstanced","localDescriptorSetLayout","stages","ShaderStage","ShaderStageFlagBit","VERTEX","FRAGMENT","setLayouts","getTemplate","getTemplateInfo","getDescriptorSetLayout","isLocal","createDescriptorSetLayout","hasProgram","getKey","destroyShaderByDefines","names","regexes","RegExp","filter","k","every","re","prog","getGFXShader","pipelineLayout","globalDescriptorSetLayout","GLOBAL","descriptorSetLayout","createPipelineLayout","PipelineLayoutInfo","macroArray","glsl3","deviceShaderVersion","getDeviceShaderVersion","vert","frag","createShader","GLES2","GLES3","WEBGL2","programLib","BatchingSchemes","InstancedBuffer","hasPendingModels","dynamicOffsets","_device","_passPool","getPassPool","vb","ia","merge","subModel","passIdx","shaderImplant","instancedAttributeBlock","stride","sourceIA","subModelDescriptorSet","lightingMap","getTexture","UNIFORM_LIGHTMAP_TEXTURE_BINDING","reflectionProbeCubemap","UNIFORM_REFLECTION_PROBE_CUBEMAP_BINDING","reflectionProbePlanarMap","UNIFORM_REFLECTION_PROBE_TEXTURE_BINDING","useReflectionProbeType","typedID","_instance$ia$indexBuf","_sourceIA$indexBuffer","indexBuffer","objectID","capacity","newSize","oldData","resize","createBuffer","BufferInfo","BufferUsageBit","MemoryUsageBit","HOST","DEVICE","vertexBuffers","newAttr","iaInfo","InputAssemblerInfo","createInputAssembler","reflectionProbeBlendCubemap","uploadBuffers","instanceCount","updateBuffer","_bufferInfo","UNIFORM","_bufferViewInfo","BufferViewInfo","_dsInfo","DescriptorSetInfo","Pass","_rootBuffer","_buffers","_descriptorSet","_pipelineLayout","_passIndex","_propertyIndex","_programName","_dynamics","_propertyHandleMap","_rootBlock","_blocksInt","_blocks","_shaderInfo","_defines","_properties","_shader","_bs","BlendState","_dss","DepthStencilState","_rs","RasterizerState","_priority","RenderPriority","DEFAULT","_stage","RenderPassStage","_phase","_passID","_subpassID","_phaseID","_primitive","PrimitiveMode","TRIANGLE_LIST","_batchingScheme","_dynamicStates","DynamicStateFlagBit","_instancedBuffers","_hash","_rootBufferDirty","_root","fillPipelineInfo","primitive","stage","dynamicStates","phase","bs","blendState","bsInfo","targets","setTarget","isA2C","isIndepend","blendColor","rasterizerState","depthStencilState","getPassHash","shaderKey","rendering","enableEffectImport","program","serializeBlendState","serializeDepthStencilState","cullMode","depthBias","isFrontFaceCCW","_doInit","resetUBOs","resetTextures","getHandle","targetType","getBinding","setUniform","ofs","_getBlockView","validator","Boolean","getUniform","setUniformArray","bindTexture","bindSampler","setDynamicState","state","ds","dirty","overridePipelineStates","update","getInstancedBuffer","extraKey","u","ib","resetUniform","resetTexture","textureBase","samplerInfo","samplerHash","Sampler","unpackFromHash","descriptors","combined","_syncBatchingScheme","getProgramVariant","getPipelineLayout","getShaderVariant","patches","patch","_isBlend","CC_IS_TRANSPARENCY_PASS","beginChangeStatesSilently","endChangeStatesSilently","copyDefines","_cclegacy$rendering","getPassID","INVALID_ID","subpass","getSubpassID","passIndex","getProgramInfo","stateOverrides","getMaterialDescriptorSetLayout","createDescriptorSet","getBlockSizes","getHandleMap","getShaderInfo","_buildMaterialUniformBlocks","_buildUniformBlocks","directHandleMap","indirectHandleMap","handleInfo","alignment","capabilities","uboOffsetAlignment","startOffsets","lastSize","lastOffset","totalSize","Float32Array","BYTES_PER_ELEMENT","bindBuffer","USE_INSTANCING","INSTANCED_ARRAYS","INSTANCING","_initPassFromTarget","dss","hashFactor","batchingScheme","_updatePassHash","setRootBufferDirty","setPriority","some","blend","getLocalDescriptorSetLayout","blendEq","blendAlphaEq","blendColorMask","blendSrc","blendDst","blendSrcAlpha","blendDstAlpha","depthTest","depthWrite","depthFunc","stencilTestFront","stencilFuncFront","stencilRefFront","stencilReadMaskFront","stencilFailOpFront","stencilZFailOpFront","stencilPassOpFront","stencilWriteMaskFront","stencilTestBack","stencilFuncBack","stencilRefBack","stencilReadMaskBack","stencilFailOpBack","stencilZFailOpBack","stencilPassOpBack","stencilWriteMaskBack","legacyBuiltinEffectNames","EffectAsset","combinations","hideInEditor","_effects","_layoutValid","getAll","isLayoutValid","setLayoutValid","addEffect","once","Game","EVENT_RENDERER_INITED","_precompile","precompileEffect","Viewport","SRGBToLinear","gamma","v4_1","_effectAsset","_techIdx","_states","_props","_passes","material","_fillInfo","_update","_doDestroy","recompileShaders","resetUniforms","clearPasses","setProperty","success","_uploadProperty","getProperty","propsArray","copy","overrides","technique","effectAsset","_prepareInfo","states","patchArray","fill","_createPasses","passNum","passInfo","propIdx","embeddedMacros","keepProps","totalPasses","SAMPLER1D","_pass$properties$name","linear","v4","_bindTexture","Texture","_step3","_iterator3","USE_COLOR","ShadowSize","Low_256x256","Medium_512x512","High_1024x1024","Ultra_2048x2048","ShadowType","Planar","ShadowMap","SHADOW_TYPE_NONE","HARD","SOFT","SOFT_2X","SOFT_4X","LEVEL_1","LEVEL_2","LEVEL_3","LEVEL_4","RemoveDuplicates","DisableRotationFix","Shadows","fixedSphere","geometry","maxReceived","_matLight","_material","_instancingMaterial","_enabled","_distance","_planeBias","_normal","_shadowColor","_size","_shadowMapDirty","getPlanarShader","assert","shadowsInfo","normal","planeDirection","distance","planeHeight","planeBias","shadowColor","shadowMapSize","activate","_updatePlanarInfo","CC_SHADOW_TYPE","onGlobalPipelineStateChanged","color","getPipelineSceneData","pipelineSceneData","MAX_FAR","COEFFICIENT_OF_EXPANSION","sqrt","Ambient","_groundAlbedoHDR","_skyColorHDR","_skyIllumHDR","_groundAlbedoLDR","_skyColorLDR","_skyIllumLDR","_mipmapCount","ambientInfo","skyColorHDR","groundAlbedoHDR","skyIllumHDR","skyColorLDR","groundAlbedoLDR","skyIllumLDR","isHDR","illum","SUN_ILLUM","SKY_ILLUM","EnvironmentLightingType","PassInstance","_Pass","parent","_dontNotify","_parent","_owner","parentBlock","parentInstance","thisDescriptorSet","parentDescriptorSet","_assertThisInitialized","original","_onStateChange","defineOverrides","onPassStateChange","MaterialInstance","_Material","_subModelIdx","subModelIdx","passInfos","dontNotify","_onRebuildPSO","parentPasses","skybox_mesh","skybox_material","Skybox","_envmapLDR","_envmapHDR","_diffuseMapLDR","_diffuseMapHDR","_globalDSManager","_model","_default","_useIBL","_useHDR","_useDiffuseMap","_editableMaterial","_activated","_reflectionHDR","_reflectionLDR","_rotationAngle","skyboxInfo","useIBL","applyDiffuseMap","useHDR","setEnvMaps","envmapHDR","envmapLDR","_updateGlobalBinding","_updatePipeline","setDiffuseMaps","diffuseMapHDR","diffuseMapLDR","setSkyboxMaterial","skyboxMat","USE_RGBE_CUBEMAP","setReflectionMaps","reflectionHDR","reflectionLDR","setRotationAngle","angle","getRotationAngle","updateMaterialRenderInfo","globalDSManager","createModel","renderer","Model","envmap","createMesh","primitives","box","initSubModel","renderingSubMeshes","diffuseMap","useIBLValue","useDiffuseMapValue","useDiffuseMap","useHDRValue","useConvMapValue","useConvolutionMap","CC_USE_IBL","CC_USE_DIFFUSEMAP","CC_USE_HDR","CC_IBL_CONVOLUTED","setSubModelMaterial","_updateSubModes","reflectionMap","UNIFORM_ENVIRONMENT_BINDING","UNIFORM_DIFFUSEMAP_BINDING","NodeSpace","TransformBit","_v4","FogType","EXP","EXP_SQUARED","LAYERED","FOG_TYPE_NONE","Fog","_fogColor","_colorArray","_accurate","_fogDensity","_fogStart","_fogEnd","_fogAtten","_fogTop","_fogRange","fogInfo","fogColor","accurate","fogDensity","fogStart","fogEnd","fogAtten","fogTop","fogRange","accurateValue","CC_USE_FOG","CC_USE_ACCURATE_FOG","ROTATION","SCALE","SKEW","POSITION","TRS","MobilityMode","Static","Stationary","Movable","ToneMappingType","NodeUIProperties","PostSettings","_toneMappingType","postSettingsInfo","toneMappingType","CC_TONE_MAPPING_TYPE","_uiComp","_opacity","_localOpacity","colorDirty","_uiTransformComp","_uiSkewComp","_node","setOpacity","applyOpacity","effectOpacity","markOpacityTree","getComponent","CCObjectFlags","Destroying","GAME_VIEW","DispatcherEventType","_arrayPool","Pool","_currentHovered","pos","_touchEvents","NodeEventType","TOUCH_START","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","_mouseEvents","MOUSE_DOWN","MOUSE_ENTER","MOUSE_MOVE","MOUSE_LEAVE","MOUSE_UP","MOUSE_WHEEL","globalCallbacksInvoker","CallbacksInvoker","NodeEventProcessor","claimedTouchIdList","maskList","cachedCameraPriority","previousMouseIn","bubblingTarget","capturingTarget","shouldHandleEventMouse","shouldHandleEventTouch","_dispatchingTouch","_isEnabled","_isMouseLeaveWindow","setEnabled","recursive","children","_attachMask","MARK_LIST_DIRTY","eventProcessor","reattach","walk","currentMaskList","_searchComponentsInParent","_maskComp","REMOVE_POINTER_EVENT_PROCESSOR","cancelEvent","EventTouch","InputEventType","touch","dispatchEvent","useCapture","_this$capturingTarget","_this$bubblingTarget","_tryEmittingAddEvent","_newCallbacksInvoker","_this$capturingTarget2","_this$bubblingTarget2","_invoker","invoker","targetOff","_this$capturingTarget3","_this$bubblingTarget3","removeAll","_hasTouchListeners","_hasMouseListeners","_hasPointerListeners","arg0","arg1","arg2","arg3","arg4","_this$bubblingTarget4","event","cachedArray","alloc","getCapturingTargets","eventPhase","currentTarget","propagationStopped","free","propagationImmediateStopped","bubbles","getBubblingTargets","hasEventListener","_parent$eventProcesso","_parent$eventProcesso2","onUpdatingSiblingIndex","list","curr","isNode","next","_isTouchEvent","_isMouseEvent","eventType","typeToAdd","isTouchEvent","isMouseEvent","ADD_POINTER_EVENT_PROCESSOR","callbacksInvoker","_registerOffCallback","_handleEventMouse","eventMouse","_handleMouseDown","_handleMouseMove","_handleMouseUp","_handleMouseWheel","_handleMouseLeave","_handleMouseEnter","uiTransformComp","_getUITransformComp","getLocation","hitTest","windowId","_handleEventTouch","eventTouch","_handleTouchStart","_handleTouchMove","_handleTouchEnd","_handleTouchCancel","m4_1","mat4","tempNodes","DEG_TO_RAD","PI","findSkewAndGetOriginalWorldMatrix","ancestors","startNode","_uiProps","ret","_mat","fromSRT","rotation","position","scale","multiply","updateLocalMatrixBySkew","uiSkewComp","outLocalMatrix","isSkewEnabled","rotational","radiansX","radiansY","cx","cos","sx","sin","cy","sy","m00","m01","m04","m05","skewX","tan","skewY","DontDestroy","Deactivating","TRANSFORM_CHANGED","ACTIVE_CHANGED","TRANSFORM_ON","getConstructor","typeOrClassName","v3_a","v3","v3_b","q_a","quat","q_b","qt_1","m3_1","m4_2","dirtyNodes","reserveContentsForAllSyncablePrefabTag","Symbol","globalFlagChangeVersion","skewCompCount","_dec3","_CCObject","_active","_prefab","_scene","_activeInHierarchy","_eventProcessor","_eventMask","_siblingIndex","_originalSceneId","_static","_lpos","_lrot","_lscale","_mobility","_initializer9","_layer","_initializer10","_euler","_initializer11","_transformFlags","_eulerDirty","_flagChangeVersion","_hasChangedFlags","_pos","_rot","_scale","_setActiveInHierarchy","_setScene","_updateScene","_incSkewCompCount","_decSkewCompCount","_findComponent","comps","_sealed","_findComponents","components","_findChildComponent","_findChildComponents","getWritableComponents","getParent","modifyParent","setParent","keepWorldTransform","updateWorldTransform","oldParent","newParent","_objFlags","_onSetParent","PARENT_CHANGED","removeAt","splice","_updateSiblingIndex","CHILD_REMOVED","CHILD_ADDED","_onHierarchyChanged","getChildByUuid","log","locChildren","getChildByName","_name","getChildByPath","_ret","segments","lastNode","segment","childNode","addChild","insertChild","siblingIndex","setSiblingIndex","getSiblingIndex","siblings","oldIndex","_onSiblingIndexChanged","preFunc","postFunc","_stacks","_stackId","afterChildren","removeFromParent","removeAllChildren","isChildOf","getComponents","getComponentInChildren","getComponentsInChildren","addComponent","_RF","peek","TypeError","reqComps","_requireComponent","reqComp","component","COMPONENT_ADDED","_nodeActivator","activateComp","removeComponent","componentInstance","active","destroyAllChildren","_removeComponent","COMPONENT_REMOVED","CHILDREN_ORDER_CHANGED","_instantiate","cloned","isSyncedNode","instantiate","_clone","_onBatchCreated","_onHierarchyChangedBase","_persistNode","Scene","removePersistRootNode","shouldActiveNow","activateNode","_onPreDestroyBase","destroyByParent","childIndex","NODE_DESTROYED","_destroyImmediate","_onPreDestroy","serializeTag","serializationOutput","writeThis","approx","determinant","EPSILON","newParentMatWithoutSkew","foundSkewInOldParent","oldParentMatWithoutSkew","invert","toSRT","invalidateChildren","dontSyncChildPrefab","hasChangedFlags","_onBeforeSerialize","eulerAngles","_onPostActivated","isEnabled","uiComp","setNodeDirty","setTextureDirty","_markForUpdateRenderData","translate","trans","space","transformQuat","WORLD","worldRotation","worldScale","rotate","rot","worldRot","lookAt","up","getWorldPosition","subtract","fromViewUp","setWorldRotation","dirtyBit","childDirtyBit","isSkipTransformUpdate","childMat","childPos","dirtyBits","positionDirty","rotationScaleSkewDirty","foundSkewInAncestor","RSS","transformMat4","m12","m13","m14","originalWorldMatrix","rotTmp","setPosition","localPosition","getPosition","setRotation","setRotationFromEuler","zOpt","fromEuler","getRotation","setScale","localScale","getScale","inverseTransformPoint","transformInverseRTS","setWorldPosition","worldPosition","local","conjugate","setWorldRotationFromEuler","getWorldRotation","setWorldScale","rotationFlag","worldMatrix","xScale","m02","yScale","m06","zScale","m08","m09","m10","fromQuat","multiplyMat4","m03","m07","getWorldScale","getWorldMatrix","getWorldRS","getWorldRT","fromRT","setRTS","isTransformDirty","pauseSystemEvents","resumeSystemEvents","resetHasChangedFlags","clearNodeArray","ClearFrame","ClearRound","getPathInHierarchy","curNode","isActive","toEuler","fromAngleZ","FORWARD","multiplyScalar","UP","RIGHT","MOBILITY_CHANGED","LAYER_CHANGED","IsSkipTransformUpdate","skip","CCObject","EventType","TransformDirtyBit","property","Layers","_up","_v3","_col","_qt","normalizeHDRColor","intensity","AmbientInfo","CCFloat","formerlySerializedAs","_dec4","_resource","resource","skyColor","skyIllum","groundAlbedo","_dec5","SkyboxInfo","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_class5","_envLightingType","_initializer12","_initializer13","_initializer14","_initializer15","_initializer16","_initializer17","envLightingType","updateEnvMap","HEMISPHERE_DIFFUSE","setMaterialProperty","editableMaterial","DIFFUSEMAP_WITH_REFLECTION","AUTOGEN_HEMISPHERE_DIFFUSE_WITH_REFLECTION","_class4","FogInfo","_dec24","_dec25","_dec21","_class9","_initializer18","_initializer19","_initializer20","_initializer21","_initializer22","_initializer23","_initializer24","_initializer25","_initializer26","_initializer27","_class8","_dec22","_dec23","_dec26","_dec27","_dec28","_class7","ShadowsInfo","_dec29","_dec31","_dec32","CCInteger","_dec34","_class11","_initializer28","_initializer29","_initializer30","_initializer31","_initializer32","_initializer33","_maxReceived","_initializer34","_initializer35","_proto4","setPlaneFromNode","dot","shadowMapDirty","_dec30","_dec33","_class10","DEFAULT_WORLD_MIN_POS","DEFAULT_WORLD_MAX_POS","DEFAULT_OCTREE_DEPTH","OctreeInfo","_dec35","_class14","_initializer36","_minPos","_initializer37","_maxPos","_initializer38","_depth","_initializer39","minPos","maxPos","depth","_dec36","_class13","SkinInfo","_dec37","_dec38","_dec39","_class17","_initializer40","_blurRadius","_initializer41","_sssIntensity","_initializer42","blurRadius","sssIntensity","_class16","PostSettingsInfo","_dec40","_class20","_initializer43","_dec41","_class19","LightProbeInfo","_dec42","_dec44","_dec45","_dec47","_class23","_giScale","_initializer44","_giSamples","_initializer45","_bounces","_initializer46","_reduceRinging","_initializer47","_showProbe","_initializer48","_showWireframe","_initializer49","_showConvex","_initializer50","_initializer51","_lightProbeSphereVolume","_initializer52","_nodes","_proto8","onProbeBakeFinished","onProbeBakingChanged","onProbeBakeCleared","clearSHCoefficients","LIGHT_PROBE_BAKING_CHANGED","probes","probe","coefficients","clearAllSHUBOs","isUniqueNode","addNode","removeNode","element","syncData","updateTet","LightProbesData","points","probeNode","resetAllTetraIndices","updateProbes","updateTetrahedrons","renderScene","models","model","clearSHUBOs","tetrahedronIndex","giScale","giSamples","bounces","reduceRinging","showProbe","showWireframe","showConvex","lightProbeSphereVolume","_dec43","_dec46","_class22","SceneGlobals","_dec48","_class26","ambient","_initializer53","shadows","_initializer54","_skybox","_initializer55","fog","_initializer56","octree","_initializer57","skin","_initializer58","lightProbeInfo","_initializer59","postSettings","_initializer60","bakedWithStationaryMainLight","_initializer61","bakedWithHighpLightmap","_initializer62","disableLightmap","sceneData","skybox","lightProbes","_dec49","_class25","TargetInfo","CCString","localID","TargetOverrideInfo","sourceInfo","propertyPath","targetInfo","CompPrefabInfo","fileId","PropertyOverrideInfo","isTarget","MountedChildrenInfo","nodes","MountedComponentsInfo","PrefabInstance","prefabRootNode","mountedChildren","mountedComponents","propertyOverrides","removedComponents","targetMap","expanded","findPropertyOverride","removePropertyOverride","PrefabInfo","targetOverrides","nestedPrefabInstanceRoots","createNodeWithPrefab","prefabInfo","prefab","editorExtrasTag","_doInstantiate","generateTargetMap","isRoot","_node$prefab","curTargetMap","prefabInstance","__prefab","getTarget","targetIter","applyMountedChildren","childInfo","expandPrefabInstanceNode","applyMountedComponents","componentsInfo","applyRemovedComponents","applyPropertyOverrides","propOverride","targetPropOwner","targetPropName","isInteger","applyTargetOverrides","_node$prefab2","_targetAsNode$prefab","targetOverride","_src$prefab","sourceInstance","targetAsNode","targetInstance","recursively","_node$prefab3","expandNestedPrefabInstanceNode","instanceNode","_PrefabInfo","applyNodeAndComponentId","prefabInstanceNode","rootId","_comp$__prefab$fileId","_comp$__prefab","fileID","_Node","_globals","dependAssets","_renderScene","_prefabSyncedInLiveReload","createScene","_inited","destroyScene","_load","_activate"],"mappings":"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"}