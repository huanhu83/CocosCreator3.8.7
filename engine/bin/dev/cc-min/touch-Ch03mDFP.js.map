{"version":3,"file":"touch-Ch03mDFP.js","sources":["../../../cocos/input/types/event/event.ts","../../../cocos/input/types/event-enum.ts","../../../cocos/input/types/event/event-acceleration.ts","../../../cocos/input/types/event/event-keyboard.ts","../../../cocos/input/types/event/event-mouse.ts","../../../cocos/input/types/event/event-touch.ts","../../../cocos/input/types/key-code.ts","../../../cocos/input/types/event/event-gamepad.ts","../../../cocos/input/types/event/event-handle.ts","../../../cocos/input/types/event/event-hmd.ts","../../../cocos/input/types/event/event-handheld.ts","../../../cocos/input/types/touch.ts"],"sourcesContent":["/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { cclegacy } from '../../../core';\r\nimport { SystemEventTypeUnion } from '../event-enum';\r\n\r\n/**\r\n * @en\r\n * Base class of all kinds of events.\r\n *\r\n * @zh\r\n * 所有事件对象的基类，包含事件相关基本信息。\r\n */\r\nexport class Event {\r\n    // Event types\r\n\r\n    /**\r\n     * @en\r\n     * Code for event without type.\r\n     *\r\n     * @zh\r\n     * 没有类型的事件。\r\n     */\r\n    public static NO_TYPE = 'no_type';\r\n\r\n    /**\r\n     * @en\r\n     * The type code of Touch event.\r\n     *\r\n     * @zh\r\n     * 触摸事件类型。\r\n     *\r\n     * @deprecated since v3.3, please use SystemEvent.EventType.TOUCH_START, SystemEvent.EventType.TOUCH_MOVE, SystemEvent.EventType.TOUCH_END and SystemEvent.EventType.TOUCH_CANCEL instead\r\n     */\r\n    public static TOUCH = 'touch';\r\n    /**\r\n     * @en\r\n     * The type code of Mouse event.\r\n     *\r\n     * @zh\r\n     * 鼠标事件类型。\r\n     *\r\n     * @deprecated since v3.3, please use SystemEvent.EventType.MOUSE_DOWN, SystemEvent.EventType.MOUSE_MOVE, SystemEvent.EventType.MOUSE_UP, SystemEvent.EventType.MOUSE_WHEEL, Node.EventType.MOUSE_ENTER and Node.EventType.MOUSE_LEAVE instead\r\n     */\r\n    public static MOUSE = 'mouse';\r\n    /**\r\n     * @en\r\n     * The type code of Keyboard event.\r\n     *\r\n     * @zh\r\n     * 键盘事件类型。\r\n     *\r\n     * @deprecated since v3.3, please use SystemEvent.EventType.KEY_DOWN and SystemEvent.EventType.KEY_UP instead\r\n     */\r\n    public static KEYBOARD = 'keyboard';\r\n    /**\r\n     * @en\r\n     * The type code of Acceleration event.\r\n     *\r\n     * @zh\r\n     * 加速器事件类型。\r\n     *\r\n     * @deprecated since v3.3, please use SystemEvent.EventType.DEVICEMOTION instead\r\n     */\r\n    public static ACCELERATION = 'acceleration';\r\n\r\n    // Event phases\r\n\r\n    /**\r\n     * @en\r\n     * Events not currently dispatched are in this phase.\r\n     *\r\n     * @zh\r\n     * 尚未派发事件阶段。\r\n     */\r\n    public static NONE = 0;\r\n\r\n    /**\r\n     * @en\r\n     * The capturing phase comprises the journey from the root to the last node before the event target's node\r\n     * [markdown](http://www.w3.org/TR/DOM-Level-3-Events/#event-flow)\r\n     *\r\n     * @zh\r\n     * 捕获阶段，包括事件目标节点之前从根节点到最后一个节点的过程。\r\n     */\r\n    public static CAPTURING_PHASE = 1;\r\n\r\n    /**\r\n     * @en\r\n     * The target phase comprises only the event target node\r\n     * [markdown] (http://www.w3.org/TR/DOM-Level-3-Events/#event-flow)\r\n     *\r\n     * @zh\r\n     * 目标阶段仅包括事件目标节点。\r\n     */\r\n    public static AT_TARGET = 2;\r\n\r\n    /**\r\n     * @en\r\n     * The bubbling phase comprises any subsequent nodes encountered on the return trip to the root of the hierarchy\r\n     * [markdown] (http://www.w3.org/TR/DOM-Level-3-Events/#event-flow)\r\n     *\r\n     * @zh\r\n     * 冒泡阶段， 包括回程遇到到层次根节点的任何后续节点。\r\n     */\r\n    public static BUBBLING_PHASE = 3;\r\n\r\n    /**\r\n     * @en\r\n     * The name of the event\r\n     *\r\n     * @zh\r\n     * 事件类型。\r\n     */\r\n    public declare type: SystemEventTypeUnion;\r\n\r\n    /**\r\n     * @en\r\n     * Indicate whether the event bubbles up through the hierarchy or not.\r\n     *\r\n     * @zh\r\n     * 表示该事件是否进行冒泡。\r\n     */\r\n    public declare bubbles: boolean;\r\n\r\n    /**\r\n     * @en\r\n     * A reference to the target to which the event was originally dispatched.\r\n     *\r\n     * @zh\r\n     * 最初事件触发的目标。\r\n     */\r\n    public target: any = null;\r\n\r\n    /**\r\n     * @en\r\n     * A reference to the currently registered target for the event.\r\n     *\r\n     * @zh\r\n     * 当前目标。\r\n     */\r\n    public currentTarget: any = null;\r\n\r\n    /**\r\n     * @en\r\n     * Indicates which phase of the event flow is currently being evaluated.\r\n     * Returns an integer value represented by 4 constants:\r\n     *  - Event.NONE = 0\r\n     *  - Event.CAPTURING_PHASE = 1\r\n     *  - Event.AT_TARGET = 2\r\n     *  - Event.BUBBLING_PHASE = 3\r\n     * The phases are explained in the [section 3.1, Event dispatch and DOM event flow]\r\n     * [markdown](http://www.w3.org/TR/DOM-Level-3-Events/#event-flow), of the DOM Level 3 Events specification.\r\n     *\r\n     * @zh\r\n     * 事件阶段。\r\n     */\r\n    public eventPhase = 0;\r\n\r\n    /**\r\n     * @en\r\n     * Stops propagation for current event.\r\n     *\r\n     * @zh\r\n     * 停止传递当前事件。\r\n     */\r\n    public propagationStopped = false;\r\n\r\n    /**\r\n     * @en\r\n     * Stops propagation for current event immediately,\r\n     * the event won't even be dispatched to the listeners attached in the current target.\r\n     *\r\n     * @zh\r\n     * 立即停止当前事件的传递，事件甚至不会被分派到所连接的当前目标。\r\n     */\r\n    public propagationImmediateStopped = false;\r\n\r\n    /**\r\n     * @param type - The name of the event (case-sensitive), e.g. \"click\", \"fire\", or \"submit\"\r\n     * @param bubbles - A boolean indicating whether the event bubbles up through the tree or not\r\n     */\r\n    constructor (type: SystemEventTypeUnion, bubbles?: boolean) {\r\n        this.type = type;\r\n        this.bubbles = !!bubbles;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Reset the event for being stored in the object pool.\r\n     *\r\n     * @zh\r\n     * 重置事件对象以便在对象池中存储。\r\n     */\r\n    public unuse (): void {\r\n        this.type = Event.NO_TYPE;\r\n        this.target = null;\r\n        this.currentTarget = null;\r\n        this.eventPhase = Event.NONE;\r\n        this.propagationStopped = false;\r\n        this.propagationImmediateStopped = false;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Reinitialize the event for being used again after retrieved from the object pool.\r\n     * @zh\r\n     * 重新初始化让对象池中取出的事件可再次使用。\r\n     * @param type - The name of the event (case-sensitive), e.g. \"click\", \"fire\", or \"submit\"\r\n     * @param bubbles - A boolean indicating whether the event bubbles up through the tree or not\r\n     */\r\n    public reuse (type: SystemEventTypeUnion, bubbles?: boolean): void {\r\n        this.type = type;\r\n        this.bubbles = bubbles || false;\r\n    }\r\n\r\n    // /**\r\n    //  * @en Stops propagation for current event.\r\n    //  * @zh 停止传递当前事件。\r\n    //  */\r\n    // public stopPropagation () {\r\n    //     this.propagationStopped = true;\r\n    // }\r\n\r\n    // /**\r\n    //  * @en Stops propagation for current event immediately,\r\n    //  * the event won't even be dispatched to the listeners attached in the current target.\r\n    //  * @zh 立即停止当前事件的传递，事件甚至不会被分派到所连接的当前目标。\r\n    //  */\r\n    // public stopPropagationImmediate () {\r\n    //     this.propagationImmediateStopped = true;\r\n    // }\r\n\r\n    /**\r\n     * @en\r\n     * Checks whether the event has been stopped.\r\n     *\r\n     * @zh\r\n     * 检查该事件是否已经停止传递。\r\n     */\r\n    public isStopped (): boolean {\r\n        return this.propagationStopped || this.propagationImmediateStopped;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets current target of the event                                                            <br/>\r\n     * note: It only be available when the event listener is associated with node.                <br/>\r\n     * It returns 0 when the listener is associated with fixed priority.\r\n     * @zh\r\n     * 获取当前目标节点\r\n     * @returns - The target with which the event associates.\r\n     */\r\n    public getCurrentTarget (): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.currentTarget;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Gets the event type.\r\n     * @zh\r\n     * 获取事件类型。\r\n     */\r\n    public getType (): string {\r\n        return this.type;\r\n    }\r\n}\r\n\r\n/* tslint:disable:no-string-literal */\r\ncclegacy.Event = Event;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { cclegacy } from '../../core';\r\nimport { NodeEventType } from '../../scene-graph/node-event';\r\n\r\n/**\r\n * @en The event type supported by SystemEvent and Node events\r\n * @zh SystemEvent 支持的事件类型以及节点事件类型\r\n *\r\n * @deprecated since v3.3.0, please use Input.EventType instead\r\n */\r\nexport enum SystemEventType {\r\n    /**\r\n     * @en\r\n     * The event type for touch start event\r\n     *\r\n     * @zh\r\n     * 手指开始触摸事件。\r\n     */\r\n    TOUCH_START = 'touch-start',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for touch move event\r\n     *\r\n     * @zh\r\n     * 当手指在屏幕上移动时。\r\n     */\r\n    TOUCH_MOVE = 'touch-move',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for touch end event\r\n     *\r\n     * @zh\r\n     * 手指结束触摸事件。\r\n     */\r\n    TOUCH_END = 'touch-end',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for touch end event\r\n     *\r\n     * @zh\r\n     * 当手指在目标节点区域外离开屏幕时。\r\n     */\r\n    TOUCH_CANCEL = 'touch-cancel',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse down events\r\n     *\r\n     * @zh\r\n     * 当鼠标按下时触发一次。\r\n     */\r\n    MOUSE_DOWN = 'mouse-down',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse move events\r\n     *\r\n     * @zh\r\n     * 当鼠标在目标节点在目标节点区域中移动时，不论是否按下。\r\n     */\r\n    MOUSE_MOVE = 'mouse-move',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse up events\r\n     *\r\n     * @zh\r\n     * 当鼠标从按下状态松开时触发一次。\r\n     */\r\n    MOUSE_UP = 'mouse-up',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse wheel events\r\n     *\r\n     * @zh 当滚动鼠标滚轮或操作其它类似输入设备时会触发滚轮事件。\r\n     */\r\n    MOUSE_WHEEL = 'mouse-wheel',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse leave target events\r\n     *\r\n     * @zh\r\n     * 当鼠标移入目标节点区域时，不论是否按下.\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.MOUSE_ENTER instead.\r\n     */\r\n    MOUSE_ENTER = 'mouse-enter',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse leave target events\r\n     *\r\n     * @zh\r\n     * 当鼠标移出目标节点区域时，不论是否按下。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.MOUSE_LEAVE instead.\r\n     */\r\n    MOUSE_LEAVE = 'mouse-leave',\r\n\r\n    /**\r\n     * @en The event type for the key down event, the event will be continuously dispatched in the key pressed state\r\n     * @zh 当按下按键时触发的事件, 该事件在按下状态会持续派发\r\n     */\r\n    KEY_DOWN = 'keydown',\r\n\r\n    /**\r\n     * @en The event type for the key up event\r\n     * @zh 当松开按键时触发的事件\r\n     */\r\n    KEY_UP = 'keyup',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for the devicemotion event\r\n     *\r\n     * @zh\r\n     * 重力感应\r\n     */\r\n    DEVICEMOTION = 'devicemotion',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for position, rotation, scale changed.Use the type parameter as [[Node.TransformBit]] to check which part is changed\r\n     *\r\n     * @zh\r\n     * 节点改变位置、旋转或缩放事件。如果具体需要判断是哪一个事件，可通过判断回调的第一个参数类型是 [[Node.TransformBit]] 中的哪一个来获取\r\n     * @example\r\n     * ```\r\n     * this.node.on(Node.EventType.TRANSFORM_CHANGED, (type)=>{\r\n     *  if (type & Node.TransformBit.POSITION) {\r\n     *       //...\r\n     *   }\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.TRANSFORM_CHANGED instead\r\n     */\r\n    TRANSFORM_CHANGED = 'transform-changed',\r\n\r\n    /**\r\n     * @en The event type for notifying the host scene has been changed for a persist node.\r\n     * @zh 当场景常驻节点的场景发生改变时触发的事件，一般在切换场景过程中触发。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.SCENE_CHANGED_FOR_PERSISTS instead\r\n     */\r\n    SCENE_CHANGED_FOR_PERSISTS = 'scene-changed-for-persists',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for size change events.\r\n     * Performance note, this event will be triggered every time corresponding properties being changed,\r\n     * if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.\r\n     *\r\n     * @zh\r\n     * 当节点尺寸改变时触发的事件。\r\n     * 性能警告：这个事件会在每次对应的属性被修改时触发，如果事件回调损耗较高，有可能对性能有很大的负面影响，请尽量避免这种情况。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.SIZE_CHANGED instead\r\n     */\r\n    SIZE_CHANGED = 'size-changed',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for anchor point change events.\r\n     * Performance note, this event will be triggered every time corresponding properties being changed,\r\n     * if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.\r\n     *\r\n     * @zh\r\n     * 当节点的 UITransform 锚点改变时触发的事件。\r\n     * 性能警告：这个事件会在每次对应的属性被修改时触发，如果事件回调损耗较高，有可能对性能有很大的负面影响，请尽量避免这种情况。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.ANCHOR_CHANGED instead\r\n     */\r\n    ANCHOR_CHANGED = 'anchor-changed',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for color change events.\r\n     * Performance note, this event will be triggered every time corresponding properties being changed,\r\n     * if the event callback have heavy logic it may have great performance impact, try to avoid such scenario.\r\n     *\r\n     * @zh\r\n     * 当节点的 UI 渲染组件颜色属性改变时触发的事件。\r\n     * 性能警告：这个事件会在每次对应的属性被修改时触发，如果事件回调损耗较高，有可能对性能有很大的负面影响，请尽量避免这种情况。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.COLOR_CHANGED instead\r\n     */\r\n    COLOR_CHANGED = 'color-changed',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for adding a new child node to the target node.\r\n     *\r\n     * @zh\r\n     * 给目标节点添加子节点时触发的事件。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.CHILD_ADDED instead\r\n     */\r\n    CHILD_ADDED = 'child-added',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for removing a child node from the target node.\r\n     *\r\n     * @zh\r\n     * 给目标节点移除子节点时触发的事件。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.CHILD_REMOVED instead\r\n     */\r\n    CHILD_REMOVED = 'child-removed',\r\n\r\n    /**\r\n     * @en The event type for changing the parent of the target node\r\n     * @zh 目标节点的父节点改变时触发的事件。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.PARENT_CHANGED instead\r\n     */\r\n    PARENT_CHANGED = 'parent-changed',\r\n\r\n    /**\r\n     * @en The event type for destroying the target node\r\n     * @zh 目标节点被销毁时触发的事件。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.NODE_DESTROYED instead\r\n     */\r\n    NODE_DESTROYED = 'node-destroyed',\r\n\r\n    /**\r\n     * @en The event type for node layer change events.\r\n     * @zh 节点 layer 改变时触发的事件。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.LAYER_CHANGED instead\r\n     */\r\n    LAYER_CHANGED = 'layer-changed',\r\n\r\n    /**\r\n     * @en The event type for node's sibling order changed.\r\n     * @zh 当节点在兄弟节点中的顺序发生变化时触发的事件。\r\n     *\r\n     * @deprecated since v3.3, please use Node.EventType.CHILDREN_ORDER_CHANGED instead\r\n     */\r\n    SIBLING_ORDER_CHANGED = 'sibling-order-changed',\r\n}\r\n\r\n/**\r\n * @en The input event type\r\n * @zh 输入事件类型\r\n */\r\nexport enum InputEventType {\r\n    /**\r\n     * @en\r\n     * The event type for touch start event\r\n     *\r\n     * @zh\r\n     * 手指开始触摸事件。\r\n     */\r\n    TOUCH_START = 'touch-start',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for touch move event\r\n     *\r\n     * @zh\r\n     * 当手指在屏幕上移动时。\r\n     */\r\n    TOUCH_MOVE = 'touch-move',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for touch end event\r\n     *\r\n     * @zh\r\n     * 手指结束触摸事件。\r\n     */\r\n    TOUCH_END = 'touch-end',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for touch end event\r\n     *\r\n     * @zh\r\n     * 当手指在目标节点区域外离开屏幕时。\r\n     */\r\n    TOUCH_CANCEL = 'touch-cancel',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse down events\r\n     *\r\n     * @zh\r\n     * 当鼠标按下时触发一次。\r\n     */\r\n    MOUSE_DOWN = 'mouse-down',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse move events\r\n     *\r\n     * @zh\r\n     * 当鼠标在目标节点在目标节点区域中移动时，不论是否按下。\r\n     */\r\n    MOUSE_MOVE = 'mouse-move',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse up events\r\n     *\r\n     * @zh\r\n     * 当鼠标从按下状态松开时触发一次。\r\n     */\r\n    MOUSE_UP = 'mouse-up',\r\n\r\n    /**\r\n     * @en The event type indicates mouse leaves the window or canvas. Only Windows, macOS or web PC can\r\n     * trigger this event.\r\n     * @zh 当鼠标离开窗口或者 canvas 时发出该消息。只有 Windows、macOS 或者 PC web 会触发该事件。\r\n     */\r\n    MOUSE_LEAVE = 'mouse-leave-window',\r\n\r\n    /**\r\n     * @en The event type indicates mouse enters the window or canvas. Only Windows, macOS or web PC can\r\n     * trigger this event.\r\n     * @zh 当鼠标进入窗口或者 canvas 时发出该消息。只有 Windows、macOS 或者 PC web 会触发该事件。\r\n     */\r\n    MOUSE_ENTER = 'mouse-enter-window',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for mouse wheel events\r\n     *\r\n     * @zh 手指开始触摸事件\r\n     */\r\n    MOUSE_WHEEL = 'mouse-wheel',\r\n\r\n    /**\r\n     * @en The event type for the key down event\r\n     * @zh 当按下按键时触发的事件\r\n     */\r\n    KEY_DOWN = 'keydown',\r\n\r\n    /**\r\n     * @en The event type for the key pressing event, the event will be continuously dispatched in the key pressed state\r\n     * @zh 当按着按键时触发的事件, 该事件在按下状态会持续派发\r\n     */\r\n    KEY_PRESSING = 'key-pressing',\r\n\r\n    /**\r\n     * @en The event type for the key up event\r\n     * @zh 当松开按键时触发的事件\r\n     */\r\n    KEY_UP = 'keyup',\r\n\r\n    /**\r\n     * @en\r\n     * The event type for the devicemotion event\r\n     *\r\n     * @zh\r\n     * 重力感应\r\n     */\r\n    DEVICEMOTION = 'devicemotion',\r\n\r\n    /**\r\n     * @en The event type for gamepad input\r\n     * @zh 手柄输入事件\r\n     */\r\n    GAMEPAD_INPUT = 'gamepad-input',\r\n    /**\r\n     * @en The event type for gamepad device change, including gamepad connecting and disconnecting\r\n     * @zh 手柄设备改变时触发的事件，包括手柄连接，手柄断开连接\r\n     */\r\n    GAMEPAD_CHANGE = 'gamepad-change',\r\n\r\n    /**\r\n     * @en The event type for 6DOF handle input\r\n     * @zh 6DOF手柄输入事件\r\n     */\r\n    HANDLE_INPUT = 'handle-input',\r\n\r\n    /**\r\n     * @en The event type for handle pose input\r\n     * @zh 手柄姿态输入事件\r\n     */\r\n    HANDLE_POSE_INPUT = 'handle-pose-input',\r\n\r\n    /**\r\n     * @en The event type for hmd pose input\r\n     * @zh 头戴显示器姿态输入事件\r\n     */\r\n    HMD_POSE_INPUT = 'hmd-pose-input',\r\n\r\n    /**\r\n     * @en The event type for handheld pose input\r\n     * @zh 手持设备相机姿态输入事件\r\n     */\r\n    HANDHELD_POSE_INPUT = 'handheld-pose-input'\r\n}\r\n\r\nexport type SystemEventTypeUnion = SystemEventType | NodeEventType | InputEventType | string;\r\n\r\ncclegacy.SystemEventType = SystemEventType;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Event } from './event';\r\nimport { Acceleration } from '../acceleration';\r\nimport { SystemEventType } from '../event-enum';\r\n\r\n/**\r\n * @en\r\n * The acceleration event.\r\n * @zh\r\n * 加速计事件。\r\n */\r\nexport class EventAcceleration extends Event {\r\n    /**\r\n     * @en The acceleration object\r\n     * @zh 加速度对象\r\n     */\r\n    public declare acc: Acceleration;\r\n\r\n    /**\r\n     * @param acc - The acceleration\r\n     * @param bubbles - Indicate whether the event bubbles up through the hierarchy or not.\r\n     */\r\n    constructor (acc: Acceleration, bubbles?: boolean) {\r\n        super(SystemEventType.DEVICEMOTION, bubbles);\r\n        this.acc = acc;\r\n    }\r\n}\r\n\r\n// TODO: this is an injected property, should be deprecated\r\n// issue: https://github.com/cocos/cocos-engine/issues/14643\r\n(Event as any).EventAcceleration = EventAcceleration;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Event } from './event';\r\nimport { SystemEventTypeUnion, SystemEventType } from '../event-enum';\r\nimport { KeyCode } from '../key-code';\r\n\r\n/**\r\n * @en\r\n * The keyboard event.\r\n * @zh\r\n * 键盘事件。\r\n */\r\nexport class EventKeyboard extends Event {\r\n    /**\r\n     * @en The unique ID of window which triggered the event.\r\n     * @zh 触发键盘事件的窗口 ID\r\n     */\r\n    public declare windowId: number;\r\n\r\n    /**\r\n     * @en The KeyCode enum value of current keyboard event.\r\n     * @zh 当前键盘事件的 KeyCode 枚举值\r\n     */\r\n    public declare keyCode: KeyCode;\r\n\r\n    /**\r\n     * @en Raw DOM KeyboardEvent.\r\n     * @zh 原始 DOM KeyboardEvent 事件对象\r\n     *\r\n     * @deprecated since v3.3, can't access rawEvent anymore\r\n     */\r\n    public rawEvent?: KeyboardEvent;\r\n\r\n    private declare _isPressed: boolean;\r\n    /**\r\n     * @en Indicates whether the current key is being pressed\r\n     * @zh 表示当前按键是否正在被按下\r\n     */\r\n    public get isPressed (): boolean {\r\n        return this._isPressed;\r\n    }\r\n\r\n    /**\r\n     * @param keyCode - The key code of the current key or the DOM KeyboardEvent\r\n     * @param isPressed - Indicates whether the current key is being pressed, this is the DEPRECATED parameter.\r\n     * @param bubbles - Indicates whether the event bubbles up through the hierarchy or not.\r\n     */\r\n    constructor (keyCode: number | KeyboardEvent, isPressed: boolean, bubbles?: boolean);\r\n    /**\r\n     * @param keyCode - The key code of the current key or the DOM KeyboardEvent\r\n     * @param eventType - The type of the event\r\n     * @param bubbles - Indicates whether the event bubbles up through the hierarchy or not.\r\n     */\r\n    constructor (keyCode: KeyCode | KeyboardEvent, eventType: SystemEventTypeUnion, bubbles?: boolean);\r\n    constructor (keyCode: any, eventType: SystemEventTypeUnion | boolean, bubbles?: boolean) {\r\n        if (typeof eventType === 'boolean') {\r\n            const isPressed = eventType;\r\n            eventType = isPressed ? SystemEventType.KEY_DOWN : SystemEventType.KEY_UP;\r\n        }\r\n        super(eventType, bubbles);\r\n        this._isPressed = eventType !== SystemEventType.KEY_UP;\r\n\r\n        if (typeof keyCode === 'number') {\r\n            this.keyCode = keyCode;\r\n        } else {\r\n            this.keyCode = keyCode.keyCode;\r\n            this.rawEvent = keyCode;\r\n        }\r\n        this.windowId = 0;\r\n    }\r\n}\r\n\r\n// TODO: this is an injected property, should be deprecated\r\n// issue: https://github.com/cocos/cocos-engine/issues/14643\r\n(Event as any).EventKeyboard = EventKeyboard;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Event } from './event';\r\nimport { Vec2, cclegacy } from '../../../core';\r\nimport { SystemEventTypeUnion } from '../event-enum';\r\nimport type { View } from '../../../ui/view';\r\n\r\n/**\r\n * @en The mouse event\r\n * @zh 鼠标事件类型\r\n */\r\nexport class EventMouse extends Event {\r\n    /**\r\n     * @en The default tag when no button is pressed\r\n     * @zh 按键默认的缺省状态\r\n     */\r\n    public static BUTTON_MISSING = -1;\r\n\r\n    /**\r\n     * @en The tag of mouse's left button.\r\n     * @zh 鼠标左键的标签。\r\n     */\r\n    public static BUTTON_LEFT = 0;\r\n\r\n    /**\r\n     * @en The tag of mouse's right button  (The right button number is 2 on browser).\r\n     * @zh 鼠标右键的标签。\r\n     */\r\n    public static BUTTON_RIGHT = 2;\r\n\r\n    /**\r\n     * @en The tag of mouse's middle button.\r\n     * @zh 鼠标中键的标签。\r\n     */\r\n    public static BUTTON_MIDDLE = 1;\r\n\r\n    /**\r\n     * @en The tag of mouse's button 4.\r\n     * @zh 鼠标按键 4 的标签。\r\n     */\r\n    public static BUTTON_4 = 3;\r\n\r\n    /**\r\n     * @en The tag of mouse's button 5.\r\n     * @zh 鼠标按键 5 的标签。\r\n     */\r\n    public static BUTTON_5 = 4;\r\n\r\n    /**\r\n     * @en The tag of mouse's button 6.\r\n     * @zh 鼠标按键 6 的标签。\r\n     */\r\n    public static BUTTON_6 = 5;\r\n\r\n    /**\r\n     * @en The tag of mouse's button 7.\r\n     * @zh 鼠标按键 7 的标签。\r\n     */\r\n    public static BUTTON_7 = 6;\r\n\r\n    /**\r\n     * @en The tag of mouse's button 8.\r\n     * @zh 鼠标按键 8 的标签。\r\n     */\r\n    public static BUTTON_8 = 7;\r\n\r\n    /**\r\n     * @en Mouse movement on x axis of the UI coordinate system.\r\n     * @zh 鼠标在 UI 坐标系下 X 轴上的移动距离\r\n     */\r\n    public movementX = 0;\r\n\r\n    /**\r\n     * @en Mouse movement on y axis of the UI coordinate system.\r\n     * @zh 鼠标在 UI 坐标系下 Y 轴上的移动距离\r\n     */\r\n    public movementY = 0;\r\n\r\n    /**\r\n     * @en The unique ID of SystemWindow, which triggerd the event\r\n     * @zh 触发此事件的系统窗口 ID\r\n     */\r\n    public windowId = 0;\r\n\r\n    /**\r\n     * @en Set whether to prevent events from being swallowed by nodes, which is false by default.\r\n     * If set to true, the event is allowed to be dispatched to nodes at the bottom layer.\r\n     * NOTE: Setting to true will reduce the efficiency of event dispatching.\r\n     *\r\n     * @zh 设置是否阻止事件被节点吞噬, 默认为 false 。\r\n     * 如果设置为 true，则事件允许派发给渲染在下一层级的节点。\r\n     * 注意：设置为 true 会降低事件派发的效率。\r\n     *\r\n     * @experimental May be optimized in the future.\r\n     */\r\n    public preventSwallow = false;\r\n\r\n    private declare _eventType: SystemEventTypeUnion;\r\n    /**\r\n     * @en The type of the event\r\n     * @zh 鼠标事件类型\r\n     *\r\n     * @deprecated since v3.3, please use EventMouse.prototype.type instead.\r\n     */\r\n    public get eventType (): string {\r\n        return this._eventType;\r\n    }\r\n\r\n    private _button: number = EventMouse.BUTTON_MISSING;\r\n\r\n    private _x = 0;\r\n\r\n    private _y = 0;\r\n\r\n    private _prevX = 0;\r\n\r\n    private _prevY = 0;\r\n\r\n    private _scrollX = 0;\r\n\r\n    private _scrollY = 0;\r\n\r\n    /**\r\n     * @param eventType - The type of the event\r\n     * @param bubbles - Indicate whether the event bubbles up through the hierarchy or not.\r\n     */\r\n    constructor (eventType: SystemEventTypeUnion, bubbles?: boolean, prevLoc?: Vec2, windowId?: number) {\r\n        super(eventType, bubbles);\r\n        this._eventType = eventType;\r\n        if (prevLoc) {\r\n            this._prevX = prevLoc.x;\r\n            this._prevY = prevLoc.y;\r\n        }\r\n        this.windowId = windowId ?? this.windowId;\r\n    }\r\n\r\n    /**\r\n     * @en Sets scroll data of the mouse.\r\n     * @zh 设置鼠标滚轮的滚动数据。\r\n     * @param scrollX - The scroll value on x axis\r\n     * @param scrollY - The scroll value on y axis\r\n     */\r\n    public setScrollData (scrollX: number, scrollY: number): void {\r\n        this._scrollX = scrollX;\r\n        this._scrollY = scrollY;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the scroll value on x axis.\r\n     * @zh 获取鼠标滚动的 X 轴距离，只有滚动时才有效。\r\n     */\r\n    public getScrollX (): number {\r\n        return this._scrollX;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the scroll value on y axis.\r\n     * @zh 获取滚轮滚动的 Y 轴距离，只有滚动时才有效。\r\n     */\r\n    public getScrollY (): number {\r\n        return this._scrollY;\r\n    }\r\n\r\n    /**\r\n     * @en Sets cursor location.\r\n     * @zh 设置当前鼠标位置。\r\n     * @param x - The location on x axis\r\n     * @param y - The location on y axis\r\n     */\r\n    public setLocation (x: number, y: number): void {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n    /**\r\n     * @en Returns cursor location.\r\n     * @zh 获取鼠标相对于左下角位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        Vec2.set(out, this._x, this._y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current cursor location in game view coordinates.\r\n     * @zh 获取当前事件在游戏窗口内的坐标位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getLocationInView (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        Vec2.set(out, this._x, (cclegacy.view as View)._designResolutionSize.height - this._y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current cursor location in ui coordinates.\r\n     * @zh 获取当前事件在 UI 窗口内的坐标位置，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUILocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        Vec2.set(out, this._x, this._y);\r\n        (cclegacy.view as View)._convertToUISpace(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the previous touch location.\r\n     * @zh 获取鼠标点击在上一次事件时的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getPreviousLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        Vec2.set(out, this._prevX, this._prevY);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the previous touch location.\r\n     * @zh 获取鼠标点击在上一次事件时的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUIPreviousLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        Vec2.set(out, this._prevX, this._prevY);\r\n        (cclegacy.view as View)._convertToUISpace(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the delta distance from the previous location to current location.\r\n     * @zh 获取鼠标距离上一次事件移动的距离对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getDelta (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        Vec2.set(out, this._x - this._prevX, this._y - this._prevY);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the X axis delta distance from the previous location to current location.\r\n     * @zh 获取鼠标距离上一次事件移动的 X 轴距离。\r\n     */\r\n    public getDeltaX (): number {\r\n        return this._x - this._prevX;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the Y axis delta distance from the previous location to current location.\r\n     * @zh 获取鼠标距离上一次事件移动的 Y 轴距离。\r\n     */\r\n    public getDeltaY (): number {\r\n        return this._y - this._prevY;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the delta distance from the previous location to current location in the UI coordinates.\r\n     * @zh 获取鼠标距离上一次事件移动在 UI 坐标系下的距离对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUIDelta (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n        const view = cclegacy.view as View;\r\n        Vec2.set(out, (this._x - this._prevX) / view.getScaleX(), (this._y - this._prevY) / view.getScaleY());\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the X axis delta distance from the previous location to current location in the UI coordinates.\r\n     * @zh 获取鼠标距离上一次事件移动在 UI 坐标系下的 X 轴距离。\r\n     */\r\n    public getUIDeltaX (): number {\r\n        return (this._x - this._prevX) / (cclegacy.view as View).getScaleX();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the Y axis delta distance from the previous location to current location in the UI coordinates.\r\n     * @zh 获取鼠标距离上一次事件移动在 UI 坐标系下的 Y 轴距离。\r\n     */\r\n    public getUIDeltaY (): number {\r\n        return (this._y - this._prevY) / (cclegacy.view as View).getScaleY();\r\n    }\r\n\r\n    /**\r\n     * @en Sets mouse button code.\r\n     * @zh 设置鼠标按键。\r\n     * @param button - The button code\r\n     */\r\n    public setButton (button: number): void {\r\n        this._button = button;\r\n    }\r\n\r\n    /**\r\n     * @en Returns mouse button code.\r\n     * @zh 获取鼠标按键。\r\n     */\r\n    public getButton (): number {\r\n        return this._button;\r\n    }\r\n\r\n    /**\r\n     * @en Returns location data on X axis.\r\n     * @zh 获取鼠标当前 X 轴位置。\r\n     */\r\n    public getLocationX (): number {\r\n        return this._x;\r\n    }\r\n\r\n    /**\r\n     * @en Returns location data on Y axis.\r\n     * @zh 获取鼠标当前 Y 轴位置。\r\n     */\r\n    public getLocationY (): number {\r\n        return this._y;\r\n    }\r\n\r\n    /**\r\n     * @en Returns location data on X axis.\r\n     * @zh 获取鼠标当前 X 轴位置。\r\n     */\r\n    public getUILocationX (): number {\r\n        const view = cclegacy.view as View;\r\n        const viewport = view.getViewportRect();\r\n        return (this._x - viewport.x) / view.getScaleX();\r\n    }\r\n\r\n    /**\r\n     * @en Returns location data on Y axis.\r\n     * @zh 获取鼠标当前 Y 轴位置。\r\n     */\r\n    public getUILocationY (): number {\r\n        const view = cclegacy.view as View;\r\n        const viewport = view.getViewportRect();\r\n        return (this._y - viewport.y) / view.getScaleY();\r\n    }\r\n}\r\n\r\n// TODO: this is an injected property, should be deprecated\r\n// issue: https://github.com/cocos/cocos-engine/issues/14643\r\n(Event as any).EventMouse = EventMouse;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Event } from './event';\r\nimport { Vec2 } from '../../../core';\r\nimport { Touch } from '../touch';\r\nimport { SystemEventTypeUnion } from '../event-enum';\r\n\r\nconst _vec2 = new Vec2();\r\n\r\n/**\r\n * @en\r\n * The touch event.\r\n *\r\n * @zh\r\n * 触摸事件。\r\n */\r\nexport class EventTouch extends Event {\r\n    /**\r\n     * @en The maximum touch point numbers simultaneously\r\n     * @zh 同时存在的最大触点数量。\r\n     */\r\n    public static MAX_TOUCHES = 5;\r\n\r\n    /**\r\n     * @en The current touch object\r\n     * @zh 当前触点对象\r\n     */\r\n    public touch: Touch | null = null;\r\n    /**\r\n     * @en Indicate whether the touch event is simulated or real\r\n     * @zh 表示触摸事件是真实触点触发的还是模拟的\r\n     */\r\n    public simulate = false;\r\n\r\n    /**\r\n     * @en The unique ID of SystemWindow, which triggerd the event\r\n     * @zh 触发此事件的系统窗口 ID\r\n     */\r\n    public windowId = 0;\r\n\r\n    /**\r\n     * @en Set whether to prevent events from being swallowed by nodes, which is false by default.\r\n     * If set to true, the event is allowed to be dispatched to nodes at the bottom layer.\r\n     * NOTE: Setting to true will reduce the efficiency of event dispatching.\r\n     *\r\n     * @zh 设置是否阻止事件被节点吞噬, 默认为 false 。\r\n     * 如果设置为 true，则事件允许派发给渲染在下一层级的节点。\r\n     * 注意：设置为 true 会降低事件派发的效率。\r\n     *\r\n     * @experimental May be optimized in the future.\r\n     */\r\n    public preventSwallow = false;\r\n\r\n    private declare _eventCode: SystemEventTypeUnion;  // deprecated since v3.3\r\n\r\n    private declare _touches: Touch[];\r\n\r\n    private declare _allTouches: Touch[];\r\n\r\n    /**\r\n     * @param touches - An array of current touches\r\n     * @param bubbles - Indicate whether the event bubbles up through the hierarchy or not.\r\n     * @param eventType - The type of the event\r\n     */\r\n    constructor (changedTouches: Touch[], bubbles: boolean, eventType: SystemEventTypeUnion, touches: Touch[] = []) {\r\n        super(eventType, bubbles);\r\n        this._eventCode = eventType;\r\n        this._touches = changedTouches || [];\r\n        this._allTouches = touches;\r\n    }\r\n\r\n    /**\r\n     * @en Returns event type code.\r\n     * @zh 获取触摸事件类型。\r\n     *\r\n     * @deprecated since v3.3, please use EventTouch.prototype.type instead.\r\n     */\r\n    public getEventCode (): string {\r\n        return this._eventCode;\r\n    }\r\n\r\n    /**\r\n     * @en Returns touches of event.\r\n     * @zh 获取有变动的触摸点的列表。\r\n     * 注意：第一根手指按下不动，接着按第二根手指，这时候触点信息就只有变动的这根手指（第二根手指）的信息。\r\n     * 如果需要获取全部手指的信息，请使用 `getAllTouches`。\r\n     */\r\n    public getTouches (): Touch[] {\r\n        return this._touches;\r\n    }\r\n\r\n    /**\r\n     * @en Returns touches of event.\r\n     * @zh 获取所有触摸点的列表。\r\n     * 注意：如果手指行为是 touch end，这个时候列表是没有该手指信息的。如需知道该手指信息，可通过 `getTouches` 获取识别。\r\n     */\r\n    public getAllTouches (): Touch[] {\r\n        return this._allTouches;\r\n    }\r\n\r\n    /**\r\n     * @en Sets touch location.\r\n     * @zh 设置当前触点位置\r\n     * @param x - The current touch location on the x axis\r\n     * @param y - The current touch location on the y axis\r\n     */\r\n    public setLocation (x: number, y: number): void {\r\n        if (this.touch) {\r\n            this.touch.setTouchInfo(this.touch.getID(), x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current touch location.\r\n     * @zh 获取触点位置。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getLocation (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getLocation(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current touch location in UI coordinates.\r\n     * @zh 获取 UI 坐标系下的触点位置。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUILocation (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getUILocation(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current touch location in game screen coordinates.\r\n     * @zh 获取当前触点在游戏窗口中的位置。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getLocationInView (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getLocationInView(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the previous touch location.\r\n     * @zh 获取触点在上一次事件时的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getPreviousLocation (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getPreviousLocation(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the start touch location.\r\n     * @zh 获取触点落下时的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getStartLocation (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getStartLocation(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the start touch location in UI coordinates.\r\n     * @zh 获取触点落下时的 UI 世界下位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUIStartLocation (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getUIStartLocation(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the id of the current touch point.\r\n     * @zh 获取触点的标识 ID，可以用来在多点触摸中跟踪触点。\r\n     */\r\n    public getID (): number | null {\r\n        return this.touch ? this.touch.getID() : null;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the delta distance from the previous location to current location.\r\n     * @zh 获取触点距离上一次事件移动的距离对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getDelta (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getDelta(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the delta distance from the previous location to current location.\r\n     * @zh 获取触点距离上一次事件 UI 世界下移动的距离对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n    */\r\n    public getUIDelta (out?: Vec2): Vec2 {\r\n        return this.touch ? this.touch.getUIDelta(out) : new Vec2();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the X axis delta distance from the previous location to current location.\r\n     * @zh 获取触点距离上一次事件移动的 x 轴距离。\r\n     */\r\n    public getDeltaX (): number {\r\n        return this.touch ? this.touch.getDelta(_vec2).x : 0;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the Y axis delta distance from the previous location to current location.\r\n     * @zh 获取触点距离上一次事件移动的 y 轴距离。\r\n     */\r\n    public getDeltaY (): number {\r\n        return this.touch ? this.touch.getDelta(_vec2).y : 0;\r\n    }\r\n\r\n    /**\r\n     * @en Returns location X axis data.\r\n     * @zh 获取当前触点 X 轴位置。\r\n     */\r\n    public getLocationX (): number {\r\n        return this.touch ? this.touch.getLocationX() : 0;\r\n    }\r\n\r\n    /**\r\n     * @en Returns location Y axis data.\r\n     * @zh 获取当前触点 Y 轴位置。\r\n     */\r\n    public getLocationY (): number {\r\n        return this.touch ? this.touch.getLocationY() : 0;\r\n    }\r\n}\r\n\r\n// TODO: this is an injected property, should be deprecated\r\n// issue: https://github.com/cocos/cocos-engine/issues/14643\r\n(Event as any).EventTouch = EventTouch;\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @en Enum type of keyCode for key event\r\n * @zh 按键事件的按键码\r\n */\r\nexport enum KeyCode {\r\n    /**\r\n    * @en None\r\n    * @zh 没有分配\r\n    */\r\n    NONE = 0,\r\n\r\n    /**\r\n     * @en The back key on mobile phone\r\n     * @zh 移动端返回键\r\n     */\r\n    MOBILE_BACK = 6,\r\n\r\n    /**\r\n    * @en The backspace key\r\n    * @zh 退格键\r\n    */\r\n    BACKSPACE = 8,\r\n\r\n    /**\r\n    * @en The tab key\r\n    * @zh Tab 键\r\n    */\r\n    TAB = 9,\r\n\r\n    /**\r\n    * @en The enter key\r\n    * @zh 回车键\r\n    */\r\n    ENTER = 13,\r\n\r\n    /**\r\n    * @en The left shift key\r\n    * @zh 左 Shift 键\r\n    */\r\n    SHIFT_LEFT = 16,\r\n\r\n    /**\r\n    * @en The left ctrl key\r\n    * @zh 左 Ctrl 键\r\n    */\r\n    CTRL_LEFT = 17,\r\n\r\n    /**\r\n    * @en The left alt key\r\n    * @zh 左 Alt 键\r\n    */\r\n    ALT_LEFT = 18,\r\n\r\n    /**\r\n    * @en The pause key\r\n    * @zh 暂停键\r\n    */\r\n    PAUSE = 19,\r\n\r\n    /**\r\n    * @en The caps lock key\r\n    * @zh 大写锁定键\r\n    */\r\n    CAPS_LOCK = 20,\r\n\r\n    /**\r\n    * @en The esc key\r\n    * @zh ESC 键\r\n    */\r\n    ESCAPE = 27,\r\n\r\n    /**\r\n    * @en The space key\r\n    * @zh 空格键\r\n    */\r\n    SPACE = 32,\r\n\r\n    /**\r\n    * @en The page up key\r\n    * @zh 向上翻页键\r\n    */\r\n    PAGE_UP = 33,\r\n\r\n    /**\r\n    * @en The page down key\r\n    * @zh 向下翻页键\r\n    */\r\n    PAGE_DOWN = 34,\r\n\r\n    /**\r\n    * @en The end key\r\n    * @zh 结束键\r\n    */\r\n    END = 35,\r\n\r\n    /**\r\n    * @en The home key\r\n    * @zh 主菜单键\r\n    */\r\n    HOME = 36,\r\n\r\n    /**\r\n    * @en The left key\r\n    * @zh 向左箭头键\r\n    */\r\n    ARROW_LEFT = 37,\r\n\r\n    /**\r\n    * @en The up key\r\n    * @zh 向上箭头键\r\n    */\r\n    ARROW_UP = 38,\r\n\r\n    /**\r\n    * @en The right key\r\n    * @zh 向右箭头键\r\n    */\r\n    ARROW_RIGHT = 39,\r\n\r\n    /**\r\n    * @en The down key\r\n    * @zh 向下箭头键\r\n    */\r\n    ARROW_DOWN = 40,\r\n\r\n    /**\r\n    * @en The insert key\r\n    * @zh 插入键\r\n    */\r\n    INSERT = 45,\r\n\r\n    /**\r\n    * @en The Delete key\r\n    * @zh 删除键\r\n    */\r\n    DELETE = 46,\r\n\r\n    /**\r\n    * @en The '0' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 0 键\r\n    */\r\n    DIGIT_0 = 48,\r\n\r\n    /**\r\n    * @en The '1' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 1 键\r\n    */\r\n    DIGIT_1 = 49,\r\n\r\n    /**\r\n    * @en The '2' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 2 键\r\n    */\r\n    DIGIT_2 = 50,\r\n\r\n    /**\r\n    * @en The '3' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 3 键\r\n    */\r\n    DIGIT_3 = 51,\r\n\r\n    /**\r\n    * @en The '4' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 4 键\r\n    */\r\n    DIGIT_4 = 52,\r\n\r\n    /**\r\n    * @en The '5' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 5 键\r\n    */\r\n    DIGIT_5 = 53,\r\n\r\n    /**\r\n    * @en The '6' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 6 键\r\n    */\r\n    DIGIT_6 = 54,\r\n\r\n    /**\r\n    * @en The '7' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 7 键\r\n    */\r\n    DIGIT_7 = 55,\r\n\r\n    /**\r\n    * @en The '8' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 8 键\r\n    */\r\n    DIGIT_8 = 56,\r\n\r\n    /**\r\n    * @en The '9' key on the top of the alphanumeric keyboard.\r\n    * @zh 字母键盘上的 9 键\r\n    */\r\n    DIGIT_9 = 57,\r\n\r\n    /**\r\n    * @en The a key\r\n    * @zh A 键\r\n    */\r\n    KEY_A = 65,\r\n\r\n    /**\r\n    * @en The b key\r\n    * @zh B 键\r\n    */\r\n    KEY_B = 66,\r\n\r\n    /**\r\n    * @en The c key\r\n    * @zh C 键\r\n    */\r\n    KEY_C = 67,\r\n\r\n    /**\r\n    * @en The d key\r\n    * @zh D 键\r\n    */\r\n    KEY_D = 68,\r\n\r\n    /**\r\n    * @en The e key\r\n    * @zh E 键\r\n    */\r\n    KEY_E = 69,\r\n\r\n    /**\r\n    * @en The f key\r\n    * @zh F 键\r\n    */\r\n    KEY_F = 70,\r\n\r\n    /**\r\n    * @en The g key\r\n    * @zh G 键\r\n    */\r\n    KEY_G = 71,\r\n\r\n    /**\r\n    * @en The h key\r\n    * @zh H 键\r\n    */\r\n    KEY_H = 72,\r\n\r\n    /**\r\n    * @en The i key\r\n    * @zh I 键\r\n    */\r\n    KEY_I = 73,\r\n\r\n    /**\r\n    * @en The j key\r\n    * @zh J 键\r\n    */\r\n    KEY_J = 74,\r\n\r\n    /**\r\n    * @en The k key\r\n    * @zh K 键\r\n    */\r\n    KEY_K = 75,\r\n\r\n    /**\r\n    * @en The l key\r\n    * @zh L 键\r\n    */\r\n    KEY_L = 76,\r\n\r\n    /**\r\n    * @en The m key\r\n    * @zh M 键\r\n    */\r\n    KEY_M = 77,\r\n\r\n    /**\r\n    * @en The n key\r\n    * @zh N 键\r\n    */\r\n    KEY_N = 78,\r\n\r\n    /**\r\n    * @en The o key\r\n    * @zh O 键\r\n    */\r\n    KEY_O = 79,\r\n\r\n    /**\r\n    * @en The p key\r\n    * @zh P 键\r\n    */\r\n    KEY_P = 80,\r\n\r\n    /**\r\n    * @en The q key\r\n    * @zh Q 键\r\n    */\r\n    KEY_Q = 81,\r\n\r\n    /**\r\n    * @en The r key\r\n    * @zh R 键\r\n    */\r\n    KEY_R = 82,\r\n\r\n    /**\r\n    * @en The s key\r\n    * @zh S 键\r\n    */\r\n    KEY_S = 83,\r\n\r\n    /**\r\n    * @en The t key\r\n    * @zh T 键\r\n    */\r\n    KEY_T = 84,\r\n\r\n    /**\r\n    * @en The u key\r\n    * @zh U 键\r\n    */\r\n    KEY_U = 85,\r\n\r\n    /**\r\n    * @en The v key\r\n    * @zh V 键\r\n    */\r\n    KEY_V = 86,\r\n\r\n    /**\r\n    * @en The w key\r\n    * @zh W 键\r\n    */\r\n    KEY_W = 87,\r\n\r\n    /**\r\n    * @en The x key\r\n    * @zh X 键\r\n    */\r\n    KEY_X = 88,\r\n\r\n    /**\r\n    * @en The y key\r\n    * @zh Y 键\r\n    */\r\n    KEY_Y = 89,\r\n\r\n    /**\r\n    * @en The z key\r\n    * @zh Z 键\r\n    */\r\n    KEY_Z = 90,\r\n\r\n    /**\r\n    * @en The numeric keypad 0\r\n    * @zh 数字键盘 0\r\n    */\r\n    NUM_0 = 96,\r\n\r\n    /**\r\n    * @en The numeric keypad 1\r\n    * @zh 数字键盘 1\r\n    */\r\n    NUM_1 = 97,\r\n\r\n    /**\r\n    * @en The numeric keypad 2\r\n    * @zh 数字键盘 2\r\n    */\r\n    NUM_2 = 98,\r\n\r\n    /**\r\n    * @en The numeric keypad 3\r\n    * @zh 数字键盘 3\r\n    */\r\n    NUM_3 = 99,\r\n\r\n    /**\r\n    * @en The numeric keypad 4\r\n    * @zh 数字键盘 4\r\n    */\r\n    NUM_4 = 100,\r\n\r\n    /**\r\n    * @en The numeric keypad 5\r\n    * @zh 数字键盘 5\r\n    */\r\n    NUM_5 = 101,\r\n\r\n    /**\r\n    * @en The numeric keypad 6\r\n    * @zh 数字键盘 6\r\n    */\r\n    NUM_6 = 102,\r\n\r\n    /**\r\n    * @en The numeric keypad 7\r\n    * @zh 数字键盘 7\r\n    */\r\n    NUM_7 = 103,\r\n\r\n    /**\r\n    * @en The numeric keypad 8\r\n    * @zh 数字键盘 8\r\n    */\r\n    NUM_8 = 104,\r\n\r\n    /**\r\n    * @en The numeric keypad 9\r\n    * @zh 数字键盘 9\r\n    */\r\n    NUM_9 = 105,\r\n\r\n    /**\r\n    * @en The numeric keypad '*'\r\n    * @zh 数字键盘 *\r\n    */\r\n    NUM_MULTIPLY = 106,\r\n\r\n    /**\r\n    * @en The numeric keypad '+'\r\n    * @zh 数字键盘 +\r\n    */\r\n    NUM_PLUS = 107,\r\n\r\n    /**\r\n    * @en The numeric keypad '-'\r\n    * @zh 数字键盘 -\r\n    */\r\n    NUM_SUBTRACT = 109,\r\n\r\n    /**\r\n    * @en The numeric keypad '.'\r\n    * @zh 数字键盘小数点 '.'\r\n    */\r\n    NUM_DECIMAL = 110,\r\n\r\n    /**\r\n    * @en The numeric keypad '/'\r\n    * @zh 数字键盘 /\r\n    */\r\n    NUM_DIVIDE = 111,\r\n\r\n    /**\r\n    * @en The F1 function key\r\n    * @zh F1 功能键\r\n    */\r\n    F1 = 112,\r\n\r\n    /**\r\n    * @en The F2 function key\r\n    * @zh F2 功能键\r\n    */\r\n    F2 = 113,\r\n\r\n    /**\r\n    * @en The F3 function key\r\n    * @zh F3 功能键\r\n    */\r\n    F3 = 114,\r\n\r\n    /**\r\n    * @en The F4 function key\r\n    * @zh F4 功能键\r\n    */\r\n    F4 = 115,\r\n\r\n    /**\r\n    * @en The F5 function key\r\n    * @zh F5 功能键\r\n    */\r\n    F5 = 116,\r\n\r\n    /**\r\n    * @en The F6 function key\r\n    * @zh F6 功能键\r\n    */\r\n    F6 = 117,\r\n\r\n    /**\r\n    * @en The F7 function key\r\n    * @zh F7 功能键\r\n    */\r\n    F7 = 118,\r\n\r\n    /**\r\n    * @en The F8 function key\r\n    * @zh F8 功能键\r\n    */\r\n    F8 = 119,\r\n\r\n    /**\r\n    * @en The F9 function key\r\n    * @zh F9 功能键\r\n    */\r\n    F9 = 120,\r\n\r\n    /**\r\n    * @en The F10 function key\r\n    * @zh F10 功能键\r\n    */\r\n    F10 = 121,\r\n\r\n    /**\r\n    * @en The F11 function key\r\n    * @zh F11 功能键\r\n    */\r\n    F11 = 122,\r\n\r\n    /**\r\n    * @en The F12 function key\r\n    * @zh F12 功能键\r\n    */\r\n    F12 = 123,\r\n\r\n    /**\r\n    * @en The numlock key\r\n    * @zh 数字锁定键\r\n    */\r\n    NUM_LOCK = 144,\r\n\r\n    /**\r\n    * @en The scroll lock key\r\n    * @zh 滚动锁定键\r\n    */\r\n    SCROLL_LOCK = 145,\r\n\r\n    /**\r\n    * @en The ';' key.\r\n    * @zh 分号键\r\n    */\r\n    SEMICOLON = 186,\r\n\r\n    /**\r\n    * @en The '=' key.\r\n    * @zh 等于号键\r\n    */\r\n    EQUAL = 187,\r\n\r\n    /**\r\n    * @en The ',' key.\r\n    * @zh 逗号键\r\n    */\r\n    COMMA = 188,\r\n\r\n    /**\r\n    * @en The dash '-' key.\r\n    * @zh 中划线键\r\n    */\r\n    DASH = 189,\r\n\r\n    /**\r\n    * @en The '.' key\r\n    * @zh 句号键\r\n    */\r\n    PERIOD = 190,\r\n\r\n    /**\r\n    * @en The slash key '/'\r\n    * @zh 正斜杠键 '/'\r\n    */\r\n    SLASH = 191,\r\n\r\n    /**\r\n    * @en The back quote key `\r\n    * @zh 按键 `\r\n    */\r\n    BACK_QUOTE = 192,\r\n\r\n    /**\r\n    * @en The '[' key\r\n    * @zh 按键 [\r\n    */\r\n    BRACKET_LEFT = 219,\r\n\r\n    /**\r\n    * @en The back slash key '\\'\r\n    * @zh 反斜杠键 '\\'\r\n    */\r\n    BACKSLASH = 220,\r\n\r\n    /**\r\n    * @en The ']' key\r\n    * @zh 按键 ]\r\n    */\r\n    BRACKET_RIGHT = 221,\r\n\r\n    /**\r\n    * @en The quote key\r\n    * @zh 单引号键\r\n    */\r\n    QUOTE = 222,\r\n\r\n// #region The new allocated key enum since v3.3\r\n\r\n    /**\r\n    * @en The right shift key\r\n    * @zh 右 Shift 键\r\n    */\r\n    SHIFT_RIGHT = 2000,\r\n\r\n    /**\r\n    * @en The right ctrl key\r\n    * @zh 右 Ctrl 键\r\n    */\r\n    CTRL_RIGHT = 2001,\r\n\r\n    /**\r\n    * @en The right alt key\r\n    * @zh 右 Alt 键\r\n    */\r\n    ALT_RIGHT = 2002,\r\n\r\n    /**\r\n    * @en The numeric keypad enter\r\n    * @zh 数字键盘 enter\r\n    */\r\n    NUM_ENTER = 2003,\r\n\r\n// #endregion The new allocated key enum since v3.3\r\n}\r\n","/*\r\n Copyright (c) 2022 Chukong Technologies Inc.\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @packageDocumentation\r\n * @module event\r\n */\r\n\r\nimport { GamepadInputDevice as Gamepad } from 'pal/input';\r\nimport { Event } from './event';\r\n\r\n/**\r\n  * @en\r\n  * The gamepad event.\r\n  * @zh\r\n  * 手柄事件。\r\n  */\r\nexport class EventGamepad extends Event {\r\n    /**\r\n     * @en The gamepad device which trigger the current gamepad event\r\n     * @zh 触发当前手柄事件的手柄设备\r\n     */\r\n    public declare gamepad: Gamepad;\r\n\r\n    constructor (type: string, gamepad: Gamepad) {\r\n        super(type, false);\r\n        this.gamepad = gamepad;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { HandleInputDevice } from 'pal/input';\r\nimport { Event } from './event';\r\nimport { SystemEventTypeUnion } from '../event-enum';\r\n\r\n/**\r\n * @en\r\n * The 6DOF handle event.\r\n *\r\n * @zh\r\n * 6DOF手柄事件。\r\n */\r\nexport class EventHandle extends Event {\r\n    /**\r\n     * @en The handle device which trigger the current handle event\r\n     * @zh 触发当前手柄事件的手柄设备\r\n     */\r\n    public declare handleInputDevice: HandleInputDevice;\r\n\r\n    /**\r\n     * @param eventType - The type of the event\r\n     * @param handleInputDevice - The handle device which trigger the current handle event\r\n     */\r\n    constructor (eventType: SystemEventTypeUnion, handleInputDevice: HandleInputDevice) {\r\n        super(eventType, false);\r\n        this.handleInputDevice = handleInputDevice;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { HMDInputDevice } from 'pal/input';\r\nimport { Event } from './event';\r\nimport { SystemEventTypeUnion } from '../event-enum';\r\n\r\n/**\r\n * @en\r\n * The HMD event.\r\n *\r\n * @zh\r\n * 头戴显示器事件。\r\n */\r\nexport class EventHMD extends Event {\r\n    /**\r\n     * @en The hmd device which trigger the current hmd event\r\n     * @zh 触发当前头戴显示器事件的头戴显示器设备\r\n     */\r\n    public declare hmdInputDevice: HMDInputDevice;\r\n\r\n    /**\r\n     * @param eventType - The type of the event\r\n     * @param hmdInputDevice - The hmd device which trigger the current hmd event\r\n     */\r\n    constructor (eventType: SystemEventTypeUnion, hmdInputDevice: HMDInputDevice) {\r\n        super(eventType, false);\r\n        this.hmdInputDevice = hmdInputDevice;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { HandheldInputDevice } from 'pal/input';\r\nimport { Event } from './event';\r\nimport { SystemEventTypeUnion } from '../event-enum';\r\n\r\n/**\r\n * @en\r\n * The Handheld event.\r\n *\r\n * @zh\r\n * 手持设备事件。\r\n */\r\nexport class EventHandheld extends Event {\r\n    /**\r\n     * @en The handheld device which trigger the current handheld event\r\n     * @zh 触发当前手持设备事件的手持设备\r\n     */\r\n    public declare handheldInputDevice: HandheldInputDevice;\r\n\r\n    /**\r\n     * @param eventType - The type of the event\r\n     * @param handheldInputDevice - The handheld device which trigger the current handheld event\r\n     */\r\n    constructor (eventType: SystemEventTypeUnion, handheldInputDevice: HandheldInputDevice) {\r\n        super(eventType, false);\r\n        this.handheldInputDevice = handheldInputDevice;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Vec2, cclegacy } from '../../core';\r\nimport type { View } from '../../ui/view';\r\n\r\nconst _vec2 = new Vec2();\r\n/**\r\n * @en The touch point class\r\n * @zh 封装了触点相关的信息。\r\n */\r\nexport class Touch {\r\n    private _point: Vec2 = new Vec2();\r\n    private _prevPoint: Vec2 = new Vec2();\r\n    private _lastModified = 0;\r\n    private _id = 0;\r\n    private _startPoint: Vec2 = new Vec2();\r\n    private _startPointCaptured = false;\r\n\r\n    get lastModified (): number {\r\n        return this._lastModified;\r\n    }\r\n\r\n    /**\r\n     * @param x - x position of the touch point\r\n     * @param y - y position of the touch point\r\n     * @param id - The id of the touch point\r\n     */\r\n    constructor (x: number, y: number, id = 0) {\r\n        this.setTouchInfo(id, x, y);\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current touch location in OpenGL coordinates.、\r\n     * @zh 获取当前触点位置。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._point.x, this._point.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns X axis location value.\r\n     * @zh 获取当前触点 X 轴位置。\r\n     */\r\n    public getLocationX (): number {\r\n        return this._point.x;\r\n    }\r\n\r\n    /**\r\n     * @en Returns Y axis location value.\r\n     * @zh 获取当前触点 Y 轴位置。\r\n     */\r\n    public getLocationY (): number {\r\n        return this._point.y;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current touch location in UI coordinates.、\r\n     * @zh 获取当前触点在 UI 坐标系中的位置。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUILocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._point.x, this._point.y);\r\n        (cclegacy.view as View)._convertToUISpace(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns X axis location value in UI coordinates.\r\n     * @zh 获取当前触点在 UI 坐标系中 X 轴位置。\r\n     */\r\n    public getUILocationX (): number {\r\n        const view = cclegacy.view as View;\r\n        const viewport = view.getViewportRect();\r\n        return (this._point.x - viewport.x) / view.getScaleX();\r\n    }\r\n\r\n    /**\r\n     * @en Returns Y axis location value in UI coordinates.\r\n     * @zh 获取当前触点在 UI 坐标系中 Y 轴位置。\r\n     */\r\n    public getUILocationY (): number {\r\n        const view = cclegacy.view as View;\r\n        const viewport = view.getViewportRect();\r\n        return (this._point.y - viewport.y) / view.getScaleY();\r\n    }\r\n\r\n    /**\r\n     * @en Returns the previous touch location.\r\n     * @zh 获取触点在上一次事件时的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getPreviousLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._prevPoint.x, this._prevPoint.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the previous touch location in UI coordinates.\r\n     * @zh 获取触点在上一次事件时在 UI 坐标系中的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUIPreviousLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._prevPoint.x, this._prevPoint.y);\r\n        (cclegacy.view as View)._convertToUISpace(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the start touch location.\r\n     * @zh 获取触点落下时的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getStartLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._startPoint.x, this._startPoint.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the start touch location in UI coordinates.\r\n     * @zh 获取触点落下时在 UI 坐标系中的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUIStartLocation (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._startPoint.x, this._startPoint.y);\r\n        (cclegacy.view as View)._convertToUISpace(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the delta distance from the previous touche to the current one.\r\n     * @zh 获取触点距离上一次事件移动的距离对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getDelta (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._point);\r\n        out.subtract(this._prevPoint);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the delta distance from the previous touche to the current one in UI coordinates.\r\n     * @zh 获取触点距离上一次事件移动在 UI 坐标系中的距离对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getUIDelta (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        _vec2.set(this._point);\r\n        _vec2.subtract(this._prevPoint);\r\n        const view = cclegacy.view as View;\r\n        out.set(view.getScaleX(), view.getScaleY());\r\n        Vec2.divide(out, _vec2, out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the current touch location in screen coordinates.\r\n     * @zh 获取当前事件在游戏窗口内的坐标位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getLocationInView (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._point.x, (cclegacy.view as View)._designResolutionSize.height - this._point.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the previous touch location in screen coordinates.\r\n     * @zh 获取触点在上一次事件时在游戏窗口中的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getPreviousLocationInView (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._prevPoint.x, (cclegacy.view as View)._designResolutionSize.height - this._prevPoint.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the start touch location in screen coordinates.\r\n     * @zh 获取触点落下时在游戏窗口中的位置对象，对象包含 x 和 y 属性。\r\n     * @param out - Pass the out object to avoid object creation, very good practice\r\n     */\r\n    public getStartLocationInView (out?: Vec2): Vec2 {\r\n        if (!out) {\r\n            out = new Vec2();\r\n        }\r\n\r\n        out.set(this._startPoint.x, (cclegacy.view as View)._designResolutionSize.height - this._startPoint.y);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the id of the touch point.\r\n     * @zh 触点的标识 ID，可以用来在多点触摸中跟踪触点。\r\n     */\r\n    public getID (): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @en Resets touch point information.\r\n     * @zh 重置触点相关的信息。\r\n     * @param id - The id of the touch point\r\n     * @param x - x position of the touch point\r\n     * @param y - y position of the touch point\r\n     */\r\n    public setTouchInfo (id: number = 0, x: number = 0, y: number = 0): void {\r\n        this._prevPoint = this._point;\r\n        this._point = new Vec2(x || 0, y || 0);\r\n        this._id = id;\r\n        if (!this._startPointCaptured) {\r\n            this._startPoint = new Vec2(this._point);\r\n            this._startPointCaptured = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Sets touch point location.\r\n     * @zh 设置触点位置。\r\n     * @param point - The location\r\n     */\r\n    public setPoint (point: Vec2): void;\r\n\r\n    /**\r\n     * @en Sets touch point location.\r\n     * @zh 设置触点位置。\r\n     * @param x - x position\r\n     * @param y - y position\r\n     */\r\n    public setPoint (x: number, y: number): void;\r\n\r\n    public setPoint (x: number | Vec2, y?: number): void {\r\n        if (typeof x === 'object') {\r\n            this._point.x = x.x;\r\n            this._point.y = x.y;\r\n        } else {\r\n            this._point.x = x || 0;\r\n            this._point.y = y || 0;\r\n        }\r\n        this._lastModified = cclegacy.game.frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the location previously registered for the current touch.\r\n     * @zh 设置触点在前一次触发时收集的位置。\r\n     * @param point - The location\r\n     */\r\n    public setPrevPoint (point: Vec2): void;\r\n\r\n    /**\r\n     * @en Sets the location previously registered for the current touch.\r\n     * @zh 设置触点在前一次触发时收集的位置。\r\n     * @param x - x position\r\n     * @param y - y position\r\n     */\r\n    public setPrevPoint (x: number, y: number): void;\r\n\r\n    public setPrevPoint (x: number | Vec2, y?: number): void {\r\n        if (typeof x === 'object') {\r\n            this._prevPoint = new Vec2(x.x, x.y);\r\n        } else {\r\n            this._prevPoint = new Vec2(x || 0, y || 0);\r\n        }\r\n        this._lastModified = cclegacy.game.frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * @zh Touch 对象的原始数据不应该被修改。如果你需要这么做，最好克隆一个新的对象。\r\n     * @en The original Touch object shouldn't be modified. If you need to, it's better to clone a new one.\r\n     */\r\n    public clone (): Touch {\r\n        const touchID = this.getID();\r\n        this.getStartLocation(_vec2);\r\n        const clonedTouch = new Touch(_vec2.x, _vec2.y, touchID);\r\n        this.getLocation(_vec2);\r\n        clonedTouch.setPoint(_vec2.x, _vec2.y);\r\n        this.getPreviousLocation(_vec2);\r\n        clonedTouch.setPrevPoint(_vec2);\r\n        return clonedTouch;\r\n    }\r\n}\r\n\r\ncclegacy.Touch = Touch;\r\n"],"names":["Event","SystemEventType","InputEventType","type","bubbles","this","target","currentTarget","eventPhase","propagationStopped","propagationImmediateStopped","_proto","prototype","unuse","NO_TYPE","NONE","reuse","isStopped","getCurrentTarget","getType","TOUCH","MOUSE","KEYBOARD","ACCELERATION","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","cclegacy","exports","EventAcceleration","_Event","acc","_this","call","DEVICEMOTION","_inheritsLoose","EventKeyboard","keyCode","eventType","KEY_DOWN","KEY_UP","rawEvent","_isPressed","windowId","_createClass","key","get","EventMouse","prevLoc","movementX","movementY","preventSwallow","_button","BUTTON_MISSING","_x","_y","_prevX","_prevY","_scrollX","_scrollY","_eventType","x","y","setScrollData","scrollX","scrollY","getScrollX","getScrollY","setLocation","getLocation","out","Vec2","set","getLocationInView","view","_designResolutionSize","height","getUILocation","_convertToUISpace","getPreviousLocation","getUIPreviousLocation","getDelta","getDeltaX","getDeltaY","getUIDelta","getScaleX","getScaleY","getUIDeltaX","getUIDeltaY","setButton","button","getButton","getLocationX","getLocationY","getUILocationX","viewport","getViewportRect","getUILocationY","BUTTON_LEFT","BUTTON_RIGHT","BUTTON_MIDDLE","BUTTON_4","BUTTON_5","BUTTON_6","BUTTON_7","BUTTON_8","KeyCode","_vec2","EventTouch","changedTouches","touches","touch","simulate","_eventCode","_touches","_allTouches","getEventCode","getTouches","getAllTouches","setTouchInfo","getID","getStartLocation","getUIStartLocation","MAX_TOUCHES","gamepad","EventGamepad","handleInputDevice","EventHandle","hmdInputDevice","EventHMD","handheldInputDevice","EventHandheld","Touch","id","_point","_prevPoint","_lastModified","_id","_startPoint","_startPointCaptured","subtract","divide","getPreviousLocationInView","getStartLocationInView","setPoint","game","frameStartTime","setPrevPoint","clone","touchID","clonedTouch"],"mappings":"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"}