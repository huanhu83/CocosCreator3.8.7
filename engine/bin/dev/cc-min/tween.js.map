{"version":3,"file":"tween.js","sources":["../../../cocos/tween/tween-progress.ts","../../../cocos/tween/actions/action.ts","../../../cocos/tween/actions/action-manager.ts","../../../cocos/tween/tween-system.ts","../../../cocos/tween/actions/action-instant.ts","../../../cocos/tween/actions/action-interval.ts","../../../cocos/tween/actions/action-unknown-duration.ts","../../../cocos/tween/tween-action.ts","../../../cocos/tween/set-action.ts","../../../cocos/tween/tween.ts"],"sourcesContent":["/*\r\n Copyright (c) 2024 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport type { ITweenCustomProperty, ITweenCustomPropertyStartParameter } from './tween';\r\nimport { Spline, SplineMode } from '../core/geometry';\r\nimport { Vec3 } from '../core/math';\r\n\r\nconst _v3_tmp_1 = new Vec3();\r\nconst _v3_tmp_2 = new Vec3();\r\n\r\nfunction createSplineProperty (mode: SplineMode, knots: ReadonlyArray<Vec3>): ITweenCustomProperty<Vec3> {\r\n    let spline: Spline | null = null;\r\n    return {\r\n        value: knots.length > 0 ? knots[knots.length - 1] : Vec3.ZERO,\r\n        progress (start: Vec3, end: Vec3, current: Vec3, ratio: number): Vec3 {\r\n            return spline!.getPoint(ratio);\r\n        },\r\n        clone (v: Vec3): Vec3 {\r\n            return Vec3.clone(v);\r\n        },\r\n        add (a, b): Vec3 {\r\n            return a.clone().add(b);\r\n        },\r\n        sub (a, b): Vec3 {\r\n            return a.clone().subtract(b);\r\n        },\r\n        onStart (param: ITweenCustomPropertyStartParameter<Vec3>): void {\r\n            const { start, end, relative, reversed } = param;\r\n            spline = Spline.create(mode);\r\n            spline.addKnot(start);\r\n            let reversedLast: Vec3 | null = null;\r\n            if (relative && reversed) {\r\n                reversedLast = _v3_tmp_2;\r\n                Vec3.subtract(reversedLast, start, knots[knots.length - 1]);\r\n            }\r\n            for (let i = 0, len = knots.length; i < len; ++i) {\r\n                const v = reversed ? knots[len - 1 - i] : knots[i];\r\n                if (relative) {\r\n                    if (reversed) {\r\n                        // Skip the start point ( i = 0 )\r\n                        if (i > 0) {\r\n                            // addKnot will copy the knot, so use a temporary Vec3 object here to avoid GC object being generated. \r\n                            spline.addKnot(Vec3.copy(_v3_tmp_1, reversedLast!).add(v));\r\n                        }\r\n                    } else {\r\n                        spline.addKnot(Vec3.copy(_v3_tmp_1, start).add(v));\r\n                    }\r\n                } else {\r\n                    spline.addKnot(v);\r\n                }\r\n            }\r\n\r\n            if (relative && reversed) {\r\n                spline.addKnot(end);\r\n            }\r\n        },\r\n        onComplete (): void {\r\n            spline = null;\r\n        },\r\n\r\n        onStop (): void {\r\n            spline = null;\r\n        },\r\n\r\n        legacyProgress: false,\r\n    };\r\n}\r\n\r\nexport function bezier (...knots: ReadonlyArray<Vec3>): ITweenCustomProperty<Vec3> {\r\n    return createSplineProperty(SplineMode.BEZIER, knots);\r\n}\r\n\r\nexport function catmullRom (...knots: ReadonlyArray<Vec3>): ITweenCustomProperty<Vec3> {\r\n    return createSplineProperty(SplineMode.CATMULL_ROM, knots);\r\n}\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport type { Tween } from '../tween';\r\n\r\nexport enum ActionEnum {\r\n    /**\r\n     * @en Default Action tag.\r\n     * @zh 默认动作标签。\r\n     * @constant\r\n     * @static\r\n     * @default -1\r\n     */\r\n    TAG_INVALID = -1,\r\n}\r\n\r\n/**\r\n * @en Base classAction for action classes.\r\n * @zh Action 类是所有动作类型的基类。\r\n * @class Action\r\n */\r\nexport abstract class Action {\r\n    /**\r\n     * The `originalTarget` and `target` are both assigned in `startWithTarget` method,\r\n     * and they get the same value normally. The difference between `originalTarget` and\r\n     * `target` is that `target` will be set to null after `stop` method is invoked\r\n     * but `originalTarget` will not. Therefore, ActionManager could remove a stopped action\r\n     * from hash map by searching action's `originalTarget`. You could refer to\r\n     * ActionManager.removeAction for the details.\r\n     */\r\n    protected originalTarget: unknown = null;\r\n    protected target: unknown = null;\r\n\r\n    /**\r\n     * The tween who owns this action.\r\n     * @engineInternal\r\n     * @mangle\r\n     */\r\n    public _owner: Tween | null = null;\r\n\r\n    protected tag = ActionEnum.TAG_INVALID;\r\n\r\n    /**\r\n     * @en The identifier that to mark an internal action.\r\n     */\r\n    protected _id: number | undefined = undefined;\r\n\r\n    protected _paused = false;\r\n\r\n    /**\r\n     * @en\r\n     * to copy object with deep copy.\r\n     * returns a clone of action.\r\n     * @zh 返回一个克隆的动作。\r\n     * @method clone\r\n     * @return {Action}\r\n     */\r\n    abstract clone (): Action;\r\n\r\n    /**\r\n     * @en\r\n     * return true if the action has finished.\r\n     * @zh 如果动作已完成就返回 true。\r\n     * @method isDone\r\n     * @return {Boolean}\r\n     */\r\n    isDone (): boolean {\r\n        return true;\r\n    }\r\n\r\n    // called before the action start. It will also set the target.\r\n    startWithTarget<T> (target: T | null): void {\r\n        this.originalTarget = target;\r\n        this.target = target;\r\n    }\r\n\r\n    // called after the action has finished. It will set the 'target' to nil.\r\n    stop (): void {\r\n        this.target = null;\r\n    }\r\n\r\n    // called every frame with it's delta time. <br />\r\n    abstract step (dt: number): void;\r\n\r\n    // Called once per frame. Time is the number of seconds of a frame interval.\r\n    abstract update (dt: number): void;\r\n\r\n    /**\r\n     * @en get the target.\r\n     * @zh 获取当前目标节点。\r\n     * @method getTarget\r\n     * @return {object}\r\n     */\r\n    getTarget<T> (): T | null {\r\n        return this.target as T;\r\n    }\r\n\r\n    /**\r\n     * @en The action will modify the target properties.\r\n     * @zh 设置目标节点。\r\n     * @method setTarget\r\n     * @param {object} target\r\n     */\r\n    setTarget<T> (target: T): void {\r\n        this.target = target;\r\n    }\r\n\r\n    /**\r\n     * @en get the original target.\r\n     * @zh 获取原始目标节点。\r\n     * @method getOriginalTarget\r\n     * @return {object}\r\n     */\r\n    getOriginalTarget<T> (): T | null {\r\n        return this.originalTarget as T;\r\n    }\r\n\r\n    // Set the original target, since target can be nil.\r\n    // Is the target that were used to run the action.\r\n    // Unless you are doing something complex, like `ActionManager`, you should NOT call this method.\r\n    setOriginalTarget<T> (originalTarget: T): void {\r\n        this.originalTarget = originalTarget;\r\n    }\r\n\r\n    /**\r\n     * Return the worker target of the current action applys on.\r\n     * @engineInternal\r\n     * @mangle\r\n     *\r\n     * Example 1:\r\n     * ```ts\r\n     *   tween(node).to(1, { scale: new Vec3(2, 2, 2) }).start();\r\n     *   // target and original target are both `node`, _getWorkerTarget returns `null`.\r\n     * ```\r\n     *\r\n     * Example 2:\r\n     * ```ts\r\n     *   tween(node).parallel(                                        // ----- Root tween\r\n     *       tween(node).to(1, { scale: new Vec3(2, 2, 2) }),         // ----- Sub tween 1\r\n     *       tween(node).to(1, { position: new Vec3(10, 10, 10) })    // ----- Sub Tween 2\r\n     *   ).start();\r\n     *   // Note that only root tween is started here. We call tweens in `parallel`/`sequence` sub tweens.\r\n     *   // The `target` and `originalTarget` of all internal actions are `node`.\r\n     *   // Actions in root tween: _getWorkerTarget returns `node`,\r\n     *   // Actions in sub tween 1: _getWorkerTarget returns `node`,\r\n     *   // Actions in sub tween 2: _getWorkerTarget returns `node`.\r\n     * ```\r\n     *\r\n     * Example 3:\r\n     * ```ts\r\n     *   tween(node).parallel(                                        // ----- Root tween\r\n     *       tween(node).to(1, { scale: new Vec3(2, 2, 2) }),         // ----- Sub tween 1\r\n     *       tween(node.getComponent(UITransform)).to(1, {            // ----- Sub Tween 2\r\n     *           contentSize: new Size(10, 10)\r\n     *       })\r\n     *   ).start();\r\n     *   // Note that only root tween is started here. We call tweens in `parallel`/`sequence` sub tweens.\r\n     *   // The `target` and `originalTarget` of all internal actions are `node`.\r\n     *   // Actions in root tween: workerTarget = `node`,\r\n     *   // Actions in sub tween 1: workerTarget = `node`,\r\n     *   // Actions in sub tween 2: workerTarget = `node`'s UITransform component.\r\n     * ```\r\n     */\r\n    protected _getWorkerTarget<T> (): T | null {\r\n        const workerTarget: T | null = this._owner?.getTarget();\r\n        return (workerTarget ?? this.target) as T;\r\n    }\r\n\r\n    /**\r\n     * @en get tag number.\r\n     * @zh 获取用于识别动作的标签。\r\n     * @method getTag\r\n     * @return {Number}\r\n     */\r\n    getTag (): number {\r\n        return this.tag;\r\n    }\r\n\r\n    /**\r\n     * @en set tag number.\r\n     * @zh 设置标签，用于识别动作。\r\n     * @method setTag\r\n     * @param {Number} tag\r\n     */\r\n    setTag (tag: number): void {\r\n        this.tag = tag;\r\n    }\r\n\r\n    /**\r\n     * @en Set the identifier of the current action.\r\n     * @param id @en The identifier to set\r\n     */\r\n    setId (id: number): void {\r\n        this._id = id;\r\n    }\r\n\r\n    /**\r\n     * @en Get the identifier of the current action.\r\n     * @return @en The identifier of the current action, it may be undefined if setId is never called.\r\n     */\r\n    getId (): number | undefined {\r\n        return this._id;\r\n    }\r\n\r\n    setPaused (paused: boolean): void {\r\n        this._paused = paused;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns a reversed action. <br />\r\n     * For example: <br />\r\n     * - The action will be x coordinates of 0 move to 100. <br />\r\n     * - The reversed action will be x of 100 move to 0.\r\n     * - Will be rewritten\r\n     * @zh 返回一个新的动作，执行与原动作完全相反的动作。\r\n     * @method reverse\r\n     * @return {Action | null}\r\n     */\r\n    abstract reverse (): Action | null;\r\n}\r\n\r\n/**\r\n * @en\r\n * Base class actions that do have a finite time duration. <br/>\r\n * Possible actions: <br/>\r\n * - An action with a duration of 0 seconds. <br/>\r\n * - An action with a duration of 35.5 seconds.\r\n *\r\n * Infinite time actions are valid\r\n * @zh 有限时间动作，这种动作拥有时长 duration 属性。\r\n * @class FiniteTimeAction\r\n * @extends Action\r\n */\r\nexport abstract class FiniteTimeAction extends Action {\r\n    protected _duration = 0;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    getDurationScaled (): number {\r\n        return this._duration;\r\n    }\r\n\r\n    /**\r\n     * @en get duration of the action. (seconds).\r\n     * @zh 获取动作以秒为单位的持续时间。\r\n     * @method getDuration\r\n     * @return {Number}\r\n     */\r\n    getDuration (): number {\r\n        return this._duration;\r\n    }\r\n\r\n    /**\r\n     * @en set duration of the action. (seconds).\r\n     * @zh 设置动作以秒为单位的持续时间。\r\n     * @method setDuration\r\n     * @param {Number} duration\r\n     */\r\n    setDuration (duration: number): void {\r\n        this._duration = duration;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * To copy object with deep copy.\r\n     * returns a clone of FiniteTimeAction.\r\n     * @zh 返回一个克隆的有限时间动作。\r\n     * @method clone\r\n     * @return {FiniteTimeAction}\r\n     */\r\n    abstract clone (): FiniteTimeAction;\r\n\r\n    abstract reverse (): FiniteTimeAction;\r\n\r\n    // Returns the state of whether the current action's duration is unknown.\r\n    // This function may return `false` from `true` at some point while the action is running.\r\n    abstract isUnknownDuration (): boolean;\r\n}\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { errorID, logID } from '../../core/platform/debug';\r\nimport { Action, ActionEnum } from './action';\r\nimport { isCCObject } from '../../core/data/object';\r\nimport { Node, NodeEventType } from '../../scene-graph';\r\n\r\n/*\r\n * @class HashElement\r\n * @constructor\r\n * @private\r\n */\r\nclass HashElement {\r\n    actions: Action[] = [];\r\n    target: unknown = null;\r\n    actionIndex = 0;\r\n    currentAction: Action | null = null;\r\n    paused = false;\r\n    lock = false;\r\n}\r\n\r\n/**\r\n * @en\r\n * `ActionManager` is a class that can manage actions.<br/>\r\n * Normally you won't need to use this class directly. 99% of the cases you will use the `Tween` interface,\r\n * which uses this class's singleton object.\r\n * - When you want to pause / resume the actions<br/>\r\n * @zh\r\n * `ActionManager` 是可以管理动作的单例类。<br/>\r\n * 通常你并不需要直接使用这个类，99%的情况您将使用 `Tween` 的接口。<br/>\r\n * 但也有一些情况下，您可能需要使用这个类。 <br/>\r\n * 例如：\r\n *  - 当你想要暂停/恢复动作时。 <br/>\r\n * @class ActionManager\r\n */\r\nexport class ActionManager {\r\n    private _hashTargets = new Map<unknown, HashElement>();\r\n    private _arrayTargets: HashElement[] = [];\r\n    private _currentTarget!: HashElement;\r\n    private _elementPool: HashElement[] = [];\r\n\r\n    private _getElement<T> (target: T, paused: boolean): HashElement {\r\n        let element = this._elementPool.pop();\r\n        if (!element) {\r\n            element = new HashElement();\r\n        }\r\n        element.target = target;\r\n        element.paused = !!paused;\r\n        return element;\r\n    }\r\n\r\n    private _putElement<T> (element: HashElement): void {\r\n        element.actions.length = 0;\r\n        element.actionIndex = 0;\r\n        element.currentAction = null;\r\n        element.paused = false;\r\n        element.target = null;\r\n        element.lock = false;\r\n        this._elementPool.push(element);\r\n    }\r\n\r\n    private _onNodeActiveChanged (target: Node, active: boolean): void {\r\n        if (active) {\r\n            this.resumeTarget(target);\r\n        } else {\r\n            this.pauseTarget(target);\r\n        }\r\n    }\r\n\r\n    private _onNodeDestroy (target: Node): void {\r\n        // Doesn't need to off node event since it will be done automatically after this event is fired.\r\n        this._removeAllActionsFromTarget(target, false);\r\n    }\r\n\r\n    private _registerNodeEvent (target: Node): void {\r\n        if (target.isValid) {\r\n            target.on(NodeEventType.ACTIVE_CHANGED, this._onNodeActiveChanged, this);\r\n            target.on(NodeEventType.NODE_DESTROYED, this._onNodeDestroy, this);\r\n        }\r\n    }\r\n\r\n    private _unregisterNodeEvent (target: Node): void {\r\n        if (target.isValid) {\r\n            target.off(NodeEventType.ACTIVE_CHANGED, this._onNodeActiveChanged, this);\r\n            target.off(NodeEventType.NODE_DESTROYED, this._onNodeDestroy, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Adds an action with a target.<br/>\r\n     * If the target is already present, then the action will be added to the existing target.\r\n     * If the target is not present, a new instance of this target will be created either paused or not,\r\n     * and the action will be added to the newly created target.\r\n     * When the target is paused, the queued actions won't be 'ticked'.\r\n     * @zh\r\n     * 增加一个动作，同时还需要提供动作的目标对象，目标对象是否暂停作为参数。<br/>\r\n     * 如果目标已存在，动作将会被直接添加到现有的节点中。<br/>\r\n     * 如果目标不存在，将为这一目标创建一个新的实例，并将动作添加进去。<br/>\r\n     * 当目标状态的 paused 为 true，动作将不会被执行\r\n     *\r\n     */\r\n    addAction<T> (action: Action | null, target: T, paused: boolean, isBindNodeState: boolean = true): void {\r\n        if (!action || !target) {\r\n            errorID(1000);\r\n            return;\r\n        }\r\n\r\n        // check if the action target already exists\r\n        let element = this._hashTargets.get(target);\r\n        // if doesn't exists, create a hashelement and push in mpTargets\r\n        if (!element) {\r\n            element = this._getElement(target, paused);\r\n            this._hashTargets.set(target, element);\r\n            this._arrayTargets.push(element);\r\n        } else if (!element.actions) {\r\n            element.actions = [];\r\n        }\r\n\r\n        const registerNodeEvent = isBindNodeState && element.actions.length === 0 && target instanceof Node;\r\n\r\n        if (registerNodeEvent) {\r\n            this._registerNodeEvent(target);\r\n            if (!target.active) {\r\n                element.paused = true; // if the target is not active, we need to pause the action\r\n            }\r\n        }\r\n\r\n        // update target due to the same UUID is allowed for different scenarios\r\n        element.target = target;\r\n        element.actions.push(action);\r\n        action.startWithTarget(target);\r\n    }\r\n\r\n    /**\r\n     * @en Removes all actions from all the targets.\r\n     * @zh 移除所有对象的所有动作。\r\n     * @method removeAllActions\r\n     */\r\n    removeAllActions (): void {\r\n        const locTargets = this._arrayTargets;\r\n        for (let i = 0; i < locTargets.length; i++) {\r\n            const element = locTargets[i];\r\n            if (element) {\r\n                if (element.target instanceof Node) {\r\n                    this._unregisterNodeEvent(element.target);\r\n                }\r\n\r\n                this._putElement(element);\r\n            }\r\n        }\r\n        this._arrayTargets.length = 0;\r\n        this._hashTargets = new Map<unknown, HashElement>();\r\n    }\r\n    /**\r\n     * @en\r\n     * Removes all actions from a certain target. <br/>\r\n     * All the actions that belongs to the target will be removed.\r\n     * @zh\r\n     * 移除指定对象上的所有动作。<br/>\r\n     * 属于该目标的所有的动作将被删除。\r\n     * @method removeAllActionsFromTarget\r\n     * @param {T} target\r\n     */\r\n    removeAllActionsFromTarget<T> (target: T): void {\r\n        this._removeAllActionsFromTarget(target, true);\r\n    }\r\n\r\n    private _removeAllActionsFromTarget<T> (target: T, offNodeEvent: boolean): void {\r\n        // explicit null handling\r\n        if (target == null) return;\r\n        const element = this._hashTargets.get(target);\r\n        if (element) {\r\n            if (offNodeEvent && target instanceof Node) {\r\n                this._unregisterNodeEvent(target);\r\n            }\r\n\r\n            element.actions.length = 0;\r\n            this._deleteHashElement(element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Removes an action given an action reference.\r\n     * @zh 移除指定的动作。\r\n     * @method removeAction\r\n     * @param {Action} action\r\n     */\r\n    removeAction (action: Action | null): void {\r\n        // explicit null handling\r\n        if (action == null) return;\r\n        const target = action.getOriginalTarget()!;\r\n        const element = this._hashTargets.get(target);\r\n\r\n        if (element) {\r\n            for (let i = 0; i < element.actions.length; i++) {\r\n                if (element.actions[i] === action) {\r\n                    element.actions.splice(i, 1);\r\n                    // update actionIndex in case we are in tick. looping over the actions\r\n                    if (element.actionIndex >= i) element.actionIndex--;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _removeActionByTag<T> (tag: number, element: HashElement, target?: T): void {\r\n        for (let i = 0, l = element.actions.length; i < l; ++i) {\r\n            const action = element.actions[i];\r\n            if (action && action.getTag() === tag) {\r\n                if (target && action.getOriginalTarget() !== target) {\r\n                    continue;\r\n                }\r\n                this._removeActionAtIndex(i, element);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _removeAllActionsByTag<T> (tag: number, element: HashElement, target?: T): void {\r\n        for (let i = element.actions.length - 1; i >= 0; --i) {\r\n            const action = element.actions[i];\r\n            if (action && action.getTag() === tag) {\r\n                if (target && action.getOriginalTarget() !== target) {\r\n                    continue;\r\n                }\r\n                this._removeActionAtIndex(i, element);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Removes an action given its tag and the target.\r\n     * @zh 删除指定对象下特定标签的一个动作，将删除首个匹配到的动作。\r\n     * @method removeActionByTag\r\n     * @param {Number} tag\r\n     * @param {T} target\r\n     */\r\n    removeActionByTag<T> (tag: number, target?: T): void {\r\n        if (tag === ActionEnum.TAG_INVALID) logID(1002);\r\n\r\n        const hashTargets = this._hashTargets;\r\n        if (target) {\r\n            const element = hashTargets.get(target);\r\n            if (element) {\r\n                this._removeActionByTag(tag, element, target);\r\n            }\r\n        } else {\r\n            hashTargets.forEach((element) => {\r\n                this._removeActionByTag(tag, element);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Removes all actions given the tag and the target.\r\n     * @zh 删除指定对象下特定标签的所有动作。\r\n     * @method removeAllActionsByTag\r\n     * @param {Number} tag\r\n     * @param {T} target\r\n     */\r\n    removeAllActionsByTag<T> (tag: number, target?: T): void {\r\n        if (tag === ActionEnum.TAG_INVALID) logID(1002);\r\n\r\n        const hashTargets = this._hashTargets;\r\n        if (target) {\r\n            const element = hashTargets.get(target);\r\n            if (element) {\r\n                this._removeAllActionsByTag(tag, element, target);\r\n            }\r\n        } else {\r\n            hashTargets.forEach((element) => {\r\n                this._removeAllActionsByTag(tag, element);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets an action given its tag an a target.\r\n     * @zh 通过目标对象和标签获取一个动作。\r\n     * @method getActionByTag\r\n     * @param {Number} tag\r\n     * @param {T} target\r\n     * @return {Action|null}  return the Action with the given tag on success\r\n     */\r\n    getActionByTag<T> (tag: number, target: T): Action | null {\r\n        if (tag === ActionEnum.TAG_INVALID) logID(1004);\r\n\r\n        const element = this._hashTargets.get(target);\r\n        if (element) {\r\n            if (element.actions != null) {\r\n                for (let i = 0; i < element.actions.length; ++i) {\r\n                    const action = element.actions[i];\r\n                    if (action && action.getTag() === tag) {\r\n                        return action;\r\n                    }\r\n                }\r\n            }\r\n            logID(1005, tag);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns the numbers of actions that are running in a certain target. <br/>\r\n     * Composable actions are counted as 1 action. <br/>\r\n     * Example: <br/>\r\n     * - If you are running 1 Sequence of 7 actions, it will return 1. <br/>\r\n     * - If you are running 7 Sequences of 2 actions, it will return 7.\r\n     * @zh\r\n     * 返回指定对象下所有正在运行的动作数量。 <br/>\r\n     * 组合动作被算作一个动作。<br/>\r\n     * 例如：<br/>\r\n     *  - 如果您正在运行 7 个动作组成的序列动作（Sequence），这个函数将返回 1。<br/>\r\n     *  - 如果你正在运行 2 个序列动作（Sequence）和 5 个普通动作，这个函数将返回 7。<br/>\r\n     *\r\n     * @method getNumberOfRunningActionsInTarget\r\n     * @param {T} target\r\n     * @return {Number}\r\n     */\r\n    getNumberOfRunningActionsInTarget<T> (target: T): number {\r\n        const element = this._hashTargets.get(target);\r\n        if (element) {\r\n            return (element.actions) ? element.actions.length  : 0;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n    /**\r\n     * @en Pauses the target: all running actions and newly added actions will be paused.\r\n     * @zh 暂停指定对象：所有正在运行的动作和新添加的动作都将会暂停。\r\n     * @method pauseTarget\r\n     * @param {T} target\r\n     */\r\n    pauseTarget<T> (target: T): void {\r\n        const element = this._hashTargets.get(target);\r\n        if (element) element.paused = true;\r\n    }\r\n\r\n    /**\r\n     * @en Resumes the target. All queued actions will be resumed.\r\n     * @zh 让指定目标恢复运行。在执行序列中所有被暂停的动作将重新恢复运行。\r\n     * @method resumeTarget\r\n     * @param {T} target\r\n     */\r\n    resumeTarget<T> (target: T): void {\r\n        const element = this._hashTargets.get(target);\r\n        if (element) element.paused = false;\r\n    }\r\n\r\n    /**\r\n     * @en Pauses all running actions, returning a list of targets whose actions were paused.\r\n     * @zh 暂停所有正在运行的动作，返回一个包含了那些动作被暂停了的目标对象的列表。\r\n     * @method pauseAllRunningActions\r\n     * @return {Array}  a list of targets whose actions were paused.\r\n     */\r\n    pauseAllRunningActions (): unknown[] {\r\n        const idsWithActions: unknown[] = [];\r\n        const locTargets = this._arrayTargets;\r\n        for (let i = 0; i < locTargets.length; i++) {\r\n            const element = locTargets[i];\r\n            if (element && !element.paused) {\r\n                element.paused = true;\r\n                if (element.target) {\r\n                    idsWithActions.push(element.target);\r\n                }\r\n            }\r\n        }\r\n        return idsWithActions;\r\n    }\r\n\r\n    /**\r\n     * @en Resume a set of targets (convenience function to reverse a pauseAllRunningActions or pauseTargets call).\r\n     * @zh 让一组指定对象恢复运行（用来逆转 pauseAllRunningActions 效果的便捷函数）。\r\n     * @method resumeTargets\r\n     * @param {Array} targetsToResume\r\n     */\r\n    resumeTargets<T> (targetsToResume: Array<T>): void {\r\n        if (!targetsToResume) return;\r\n\r\n        for (let i = 0; i < targetsToResume.length; i++) {\r\n            if (targetsToResume[i]) this.resumeTarget(targetsToResume[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Pause a set of targets.\r\n     * @zh 暂停一组指定对象。\r\n     * @method pauseTargets\r\n     * @param {Array} targetsToPause\r\n     */\r\n    pauseTargets<T> (targetsToPause: Array<T>): void {\r\n        if (!targetsToPause) return;\r\n\r\n        for (let i = 0; i < targetsToPause.length; i++) {\r\n            if (targetsToPause[i]) this.pauseTarget(targetsToPause[i]);\r\n        }\r\n    }\r\n\r\n    isActionRunning (action: Action): boolean {\r\n        const elements = this._hashTargets.get(action.getOriginalTarget());\r\n        let index = -1;\r\n        if (elements) index = elements.actions.indexOf(action);\r\n        return index !== -1;\r\n    }\r\n\r\n    // protected\r\n    private _removeActionAtIndex (index: number, element: HashElement): void {\r\n        element.actions.splice(index, 1);\r\n\r\n        // update actionIndex in case we are in tick. looping over the actions\r\n        if (element.actionIndex >= index) element.actionIndex--;\r\n\r\n        if (element.actions.length === 0) {\r\n            if (element.target instanceof Node) {\r\n                this._unregisterNodeEvent(element.target);\r\n            }\r\n            this._deleteHashElement(element);\r\n        }\r\n    }\r\n\r\n    private _deleteHashElement (element: HashElement): boolean {\r\n        let ret = false;\r\n        if (element && !element.lock) {\r\n            if (this._hashTargets.get(element.target)) {\r\n                this._hashTargets.delete(element.target);\r\n                const targets = this._arrayTargets;\r\n                for (let i = 0, l = targets.length; i < l; i++) {\r\n                    if (targets[i] === element) {\r\n                        targets.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                this._putElement(element);\r\n                ret = true;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @en The ActionManager update。\r\n     * @zh ActionManager 主循环。\r\n     * @method update\r\n     * @param {Number} dt delta time in seconds\r\n     */\r\n    update (dt: number): void {\r\n        const locTargets = this._arrayTargets;\r\n        let locCurrTarget: HashElement;\r\n        for (let elt = 0; elt < locTargets.length; elt++) {\r\n            this._currentTarget = locTargets[elt];\r\n            locCurrTarget = this._currentTarget;\r\n\r\n            const target = locCurrTarget.target;\r\n            if (isCCObject(target) && !target.isValid) {\r\n                this.removeAllActionsFromTarget(target);\r\n                elt--;\r\n                continue;\r\n            }\r\n\r\n            if (!locCurrTarget.paused && locCurrTarget.actions) {\r\n                locCurrTarget.lock = true;\r\n                // The 'actions' CCMutableArray may change while inside this loop.\r\n                for (locCurrTarget.actionIndex = 0; locCurrTarget.actionIndex < locCurrTarget.actions.length; locCurrTarget.actionIndex++) {\r\n                    locCurrTarget.currentAction = locCurrTarget.actions[locCurrTarget.actionIndex];\r\n                    if (!locCurrTarget.currentAction) continue;\r\n\r\n                    locCurrTarget.currentAction.step(dt);\r\n\r\n                    if (locCurrTarget.currentAction && locCurrTarget.currentAction.isDone()) {\r\n                        locCurrTarget.currentAction.stop();\r\n                        const action = locCurrTarget.currentAction;\r\n                        // Make currentAction nil to prevent removeAction from salvaging it.\r\n                        locCurrTarget.currentAction = null;\r\n                        this.removeAction(action);\r\n                    }\r\n\r\n                    locCurrTarget.currentAction = null;\r\n                }\r\n                locCurrTarget.lock = false;\r\n            }\r\n            // only delete currentTarget if no actions were scheduled during the cycle (issue #481)\r\n            if (locCurrTarget.actions.length === 0) {\r\n                if (target instanceof Node) {\r\n                    this._unregisterNodeEvent(target);\r\n                }\r\n\r\n                if (this._deleteHashElement(locCurrTarget)) {\r\n                    elt--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { System, SystemPriority } from '../core';\r\nimport { ActionManager } from './actions/action-manager';\r\nimport { director, DirectorEvent } from '../game';\r\n\r\n/**\r\n * @en\r\n * Tween system.\r\n * @zh\r\n * 缓动系统。\r\n */\r\nexport class TweenSystem extends System {\r\n    /**\r\n     * @en\r\n     * The ID flag of the system.\r\n     * @zh\r\n     * 此系统的 ID 标记。\r\n     */\r\n    static readonly ID = 'TWEEN';\r\n\r\n    /**\r\n     * @en\r\n     * Gets the instance of the tween system.\r\n     * @zh\r\n     * 获取缓动系统的实例。\r\n     */\r\n    static readonly instance: TweenSystem;\r\n\r\n    /**\r\n     * @en\r\n     * Gets the action manager.\r\n     * @zh\r\n     * 获取动作管理器。\r\n     */\r\n    get ActionManager (): ActionManager {\r\n        return this.actionMgr;\r\n    }\r\n\r\n    private readonly actionMgr = new ActionManager();\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The update will auto execute after all components update.\r\n     * @zh\r\n     * 此方法会在组件 update 之后自动执行。\r\n     * @param dt @en The delta time @zh 间隔时间\r\n     */\r\n    update (dt: number): void {\r\n        if (!EDITOR_NOT_IN_PREVIEW || this._executeInEditMode) {\r\n            this.actionMgr.update(dt);\r\n        }\r\n    }\r\n}\r\n\r\ndirector.on(DirectorEvent.INIT, () => {\r\n    const sys = new TweenSystem();\r\n    (TweenSystem as any).instance = sys;\r\n    director.registerSystem(TweenSystem.ID, sys, SystemPriority.MEDIUM);\r\n});\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\nimport { FiniteTimeAction } from './action';\r\nimport { Renderer } from '../../misc/renderer';\r\nimport type { Node } from '../../scene-graph';\r\n\r\n/**\r\n * @en Instant actions are immediate actions. They don't have a duration like the ActionInterval actions.\r\n * @zh 即时动作，这种动作立即就会执行，继承自 FiniteTimeAction。\r\n * @class ActionInstant\r\n * @extends FiniteTimeAction\r\n */\r\nexport abstract class ActionInstant extends FiniteTimeAction {\r\n    override isDone (): boolean {\r\n        return true;\r\n    }\r\n\r\n    override step (_dt: number): void {\r\n        this.update(1);\r\n    }\r\n\r\n    override update (_dt: number): void {\r\n        // nothing\r\n    }\r\n\r\n    /**\r\n     * returns a reversed action. <br />\r\n     * For example: <br />\r\n     * - The action is x coordinates of 0 move to 100. <br />\r\n     * - The reversed action will be x of 100 move to 0.\r\n     * @returns {Action}\r\n     */\r\n    override reverse (): ActionInstant {\r\n        return this.clone();\r\n    }\r\n\r\n    abstract clone (): ActionInstant;\r\n\r\n    override isUnknownDuration (): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\n/*\r\n * Show the node.\r\n * @class Show\r\n * @extends ActionInstant\r\n */\r\nexport class Show<T extends Node> extends ActionInstant {\r\n    override update (_dt: number): void {\r\n        const target = this._getWorkerTarget<T>();\r\n        if (!target) return;\r\n        const _renderComps = target.getComponentsInChildren(Renderer);\r\n        for (let i = 0; i < _renderComps.length; ++i) {\r\n            const render = _renderComps[i];\r\n            render.enabled = true;\r\n        }\r\n    }\r\n\r\n    override reverse (): Hide<T> {\r\n        return new Hide<T>();\r\n    }\r\n\r\n    override clone (): Show<T> {\r\n        const action = new Show<T>();\r\n        action._id = this._id;\r\n        return action;\r\n    }\r\n\r\n    override toString (): string {\r\n        return '<Show>';\r\n    }\r\n}\r\n\r\n/**\r\n * @en Show the Node.\r\n * @zh 立即显示。\r\n * @method show\r\n * @return {Show}\r\n * @example\r\n * // example\r\n * var showAction = show();\r\n */\r\nexport function show<T extends Node> (): Show<T> {\r\n    return new Show<T>();\r\n}\r\n\r\n/*\r\n * Hide the node.\r\n * @class Hide\r\n * @extends ActionInstant\r\n */\r\nexport class Hide<T extends Node> extends ActionInstant {\r\n    override update (_dt: number): void {\r\n        const target = this._getWorkerTarget<T>();\r\n        if (!target) return;\r\n        const _renderComps = target.getComponentsInChildren(Renderer);\r\n        for (let i = 0; i < _renderComps.length; ++i) {\r\n            const render = _renderComps[i];\r\n            render.enabled = false;\r\n        }\r\n    }\r\n\r\n    override reverse (): Show<T> {\r\n        return new Show<T>();\r\n    }\r\n\r\n    override clone (): Hide<T> {\r\n        const action = new Hide<T>();\r\n        action._id = this._id;\r\n        return action;\r\n    }\r\n\r\n    override toString (): string {\r\n        return '<Hide>';\r\n    }\r\n}\r\n\r\n/**\r\n * @en Hide the node.\r\n * @zh 立即隐藏。\r\n * @method hide\r\n * @return {Hide}\r\n * @example\r\n * // example\r\n * var hideAction = hide();\r\n */\r\nexport function hide<T extends Node> (): Hide<T> {\r\n    return new Hide<T>();\r\n}\r\n\r\n/*\r\n * Toggles the visibility of a node.\r\n * @class ToggleVisibility\r\n * @extends ActionInstant\r\n */\r\nexport class ToggleVisibility<T extends Node> extends ActionInstant {\r\n    override update (_dt: number): void {\r\n        const target = this._getWorkerTarget<T>();\r\n        if (!target) return;\r\n        const _renderComps = target.getComponentsInChildren(Renderer);\r\n        for (let i = 0; i < _renderComps.length; ++i) {\r\n            const render = _renderComps[i];\r\n            render.enabled = !render.enabled;\r\n        }\r\n    }\r\n\r\n    override reverse (): ToggleVisibility<T> {\r\n        return new ToggleVisibility<T>();\r\n    }\r\n\r\n    override clone (): ToggleVisibility<T> {\r\n        const action = new ToggleVisibility<T>();\r\n        action._id = this._id;\r\n        return action;\r\n    }\r\n\r\n    override toString (): string {\r\n        return '<ToggleVisibility>';\r\n    }\r\n}\r\n\r\n/**\r\n * @en Toggles the visibility of a node.\r\n * @zh 显隐状态切换。\r\n * @method toggleVisibility\r\n * @return {ToggleVisibility}\r\n * @example\r\n * // example\r\n * var toggleVisibilityAction = toggleVisibility();\r\n */\r\nexport function toggleVisibility<T extends Node> (): ToggleVisibility<T> {\r\n    return new ToggleVisibility<T>();\r\n}\r\n\r\n/*\r\n * Delete self in the next frame.\r\n * @class RemoveSelf\r\n * @extends ActionInstant\r\n * @param {Boolean} [isNeedCleanUp=true]\r\n *\r\n * @example\r\n * // example\r\n * var removeSelfAction = new RemoveSelf(false);\r\n */\r\nexport class RemoveSelf<T extends Node> extends ActionInstant {\r\n    protected _isNeedCleanUp = true;\r\n\r\n    constructor (isNeedCleanUp?: boolean) {\r\n        super();\r\n        if (isNeedCleanUp !== undefined) this.init(isNeedCleanUp);\r\n    }\r\n\r\n    override update (_dt: number): void {\r\n        const target = this._getWorkerTarget<T>();\r\n        if (!target) return;\r\n        target.removeFromParent();\r\n        if (this._isNeedCleanUp) {\r\n            target.destroy();\r\n        }\r\n    }\r\n\r\n    init (isNeedCleanUp: boolean): boolean {\r\n        this._isNeedCleanUp = isNeedCleanUp;\r\n        return true;\r\n    }\r\n\r\n    override reverse (): RemoveSelf<T> {\r\n        return new RemoveSelf<T>(this._isNeedCleanUp);\r\n    }\r\n\r\n    override clone (): RemoveSelf<T> {\r\n        const action = new RemoveSelf<T>(this._isNeedCleanUp);\r\n        action._id = this._id;\r\n        return action;\r\n    }\r\n\r\n    override toString (): string {\r\n        return '<RemoveSelf>';\r\n    }\r\n}\r\n\r\n/**\r\n * @en Create a RemoveSelf object with a flag indicate whether the target should be cleaned up while removing.\r\n * @zh 从父节点移除自身。\r\n * @method removeSelf\r\n * @param {Boolean} [isNeedCleanUp = true]\r\n * @return {RemoveSelf}\r\n *\r\n * @example\r\n * // example\r\n * var removeSelfAction = removeSelf();\r\n */\r\nexport function removeSelf<T extends Node> (isNeedCleanUp: boolean): RemoveSelf<T> {\r\n    return new RemoveSelf<T>(isNeedCleanUp);\r\n}\r\n\r\nexport type CallFuncCallback<Target, Data> = (target?: Target, data?: Data) => void;\r\n\r\n/*\r\n * Calls a 'callback'.\r\n * @class CallFunc\r\n * @extends ActionInstant\r\n * @param {function} selector\r\n * @param {object} [selectorTarget=null]\r\n * @param {*} [data=null] data for function, it accepts all data types.\r\n * @example\r\n * // example\r\n * // CallFunc without data\r\n * var finish = new CallFunc(this.removeSprite, this);\r\n *\r\n * // CallFunc with data\r\n * var finish = new CallFunc(this.removeFromParentAndCleanup, this,  true);\r\n */\r\nexport class CallFunc<CallbackThis, Target, Data> extends ActionInstant {\r\n    private _callbackThis: CallbackThis | undefined = undefined;\r\n    private _callback: CallFuncCallback<Target, Data> | undefined = undefined;\r\n    private _data: Data | undefined = undefined;\r\n\r\n    /*\r\n     * Constructor function, override it to extend the construction behavior, remember to call \"super()\". <br />\r\n     * Creates a CallFunc action with the callback.\r\n     * @param callback The callback function\r\n     * @param callbackThis The this object for callback\r\n     * @param data The custom data passed to the callback function, it accepts all data types.\r\n     */\r\n    constructor (selector?: CallFuncCallback<Target, Data>, callbackThis?: CallbackThis, data?: Data) {\r\n        super();\r\n        this.initWithFunction(selector, callbackThis, data);\r\n    }\r\n\r\n    /*\r\n     * Initializes the action with a function or function and its target\r\n     * @param callback The callback function\r\n     * @param callbackThis The this object for callback\r\n     * @param data The custom data passed to the callback function, it accepts all data types.\r\n     * @return This function always returns true.\r\n     */\r\n    initWithFunction (callback?: CallFuncCallback<Target, Data>, callbackThis?: CallbackThis, data?: Data): boolean {\r\n        if (callback) {\r\n            this._callback = callback;\r\n        }\r\n        if (callbackThis) {\r\n            this._callbackThis = callbackThis;\r\n        }\r\n        if (data !== undefined) {\r\n            this._data = data;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /*\r\n     * execute the function.\r\n     */\r\n    execute (): void {\r\n        if (this._callback) {\r\n            const target = this._getWorkerTarget() as Target;\r\n            this._callback.call(this._callbackThis, target, this._data);\r\n        }\r\n    }\r\n\r\n    override update (_dt: number): void {\r\n        this.execute();\r\n    }\r\n\r\n    /*\r\n     * Get selectorTarget.\r\n     * @mangle\r\n     */\r\n    getTargetCallback (): CallbackThis | undefined {\r\n        return this._callbackThis;\r\n    }\r\n\r\n    /*\r\n     * Set selectorTarget.\r\n     * @mangle\r\n     */\r\n    setTargetCallback (sel: CallbackThis): void {\r\n        if (sel !== this._callbackThis) {\r\n            this._callbackThis = sel;\r\n        }\r\n    }\r\n\r\n    override clone (): CallFunc<CallbackThis, Target, Data> {\r\n        const action = new CallFunc<CallbackThis, Target, Data>();\r\n        action._id = this._id;\r\n        if (this._callback) action.initWithFunction(this._callback, this._callbackThis, this._data);\r\n        return action;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<CallFunc>`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Creates the action with the callback.\r\n * @zh 执行回调函数。\r\n * @method callFunc\r\n * @param {function} selector\r\n * @param {object} [selectorTarget=null]\r\n * @param {*} [data=null] - data for function, it accepts all data types.\r\n * @return {ActionInstant}\r\n * @example\r\n * // example\r\n * // CallFunc without data\r\n * var finish = callFunc(this.removeSprite, this);\r\n *\r\n * // CallFunc with data\r\n * var finish = callFunc(this.removeFromParentAndCleanup, this._grossini,  true);\r\n */\r\nexport function callFunc<SelectorTarget, Target, Data> (\r\n    selector: CallFuncCallback<Target, Data>,\r\n    selectorTarget?: SelectorTarget,\r\n    data?: Data,\r\n): ActionInstant {\r\n    return new CallFunc(selector, selectorTarget, data);\r\n}\r\n","/*\r\n Copyright (c) 2008-2010 Ricardo Quesada\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos2d-x.org\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { FiniteTimeAction } from './action';\r\nimport { macro, logID, errorID } from '../../core';\r\nimport { ActionInstant } from './action-instant';\r\nimport type { Tween, TweenUpdateCallback } from '../tween';\r\n\r\n// Extra action for making a Sequence or Spawn when only adding one action to it.\r\nclass DummyAction extends FiniteTimeAction {\r\n    override clone (): DummyAction {\r\n        return new DummyAction();\r\n    }\r\n\r\n    override reverse (): DummyAction {\r\n        return this.clone();\r\n    }\r\n\r\n    override update (time: number): void {\r\n        // empty\r\n    }\r\n\r\n    override step (dt: number): void {\r\n        // empty\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        return false;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `DummyAction`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * <p> An interval action is an action that takes place within a certain period of time. <br/>\r\n * It has an start time, and a finish time. The finish time is the parameter<br/>\r\n * duration plus the start time.</p>\r\n *\r\n * <p>These CCActionInterval actions have some interesting properties, like:<br/>\r\n * - They can run normally (default)  <br/>\r\n * - They can run reversed with the reverse method   <br/>\r\n * - They can run with the time altered with the Accelerate, AccelDeccel and Speed actions. </p>\r\n *\r\n * <p>For example, you can simulate a Ping Pong effect running the action normally and<br/>\r\n * then running it again in Reverse mode. </p>\r\n * @zh 时间间隔动作，这种动作在已定时间内完成，继承 FiniteTimeAction。\r\n * @class ActionInterval\r\n * @extends FiniteTimeAction\r\n * @param {Number} d duration in seconds\r\n */\r\nexport abstract class ActionInterval extends FiniteTimeAction {\r\n    protected MAX_VALUE = 2;\r\n    protected _elapsed = 0;\r\n    protected _startTime = 0;\r\n    protected _firstTick = false;\r\n    protected _speed = 1;\r\n\r\n    constructor (d?: number) {\r\n        super();\r\n        if (d !== undefined && !Number.isNaN(d)) {\r\n            this.initWithDuration(d);\r\n        }\r\n    }\r\n\r\n    setStartTime (time: number): void {\r\n        time = time < 0 ? 0 : (time > this._duration ? this._duration : time);\r\n        this._startTime = time;\r\n    }\r\n\r\n    /*\r\n     * How many seconds had elapsed since the actions started to run.\r\n     * @return {Number}\r\n     */\r\n    getElapsed (): number {\r\n        return this._elapsed;\r\n    }\r\n\r\n    /*\r\n     * Initializes the action.\r\n     * @param {Number} d duration in seconds\r\n     * @return {Boolean}\r\n     */\r\n    initWithDuration (d: number): boolean {\r\n        this._duration = (d === 0) ? macro.FLT_EPSILON : d;\r\n        // prevent division by 0\r\n        // This comparison could be in step:, but it might decrease the performance\r\n        // by 3% in heavy based action games.\r\n        this._elapsed = 0;\r\n        this._firstTick = true;\r\n        return true;\r\n    }\r\n\r\n    override isDone (): boolean {\r\n        return this._elapsed >= this._duration && !this.isUnknownDuration();\r\n    }\r\n\r\n    /**\r\n     * @mangle\r\n     * @engineInternal\r\n     */\r\n    _cloneDecoration (action: ActionInterval): void {\r\n        action._speed = this._speed;\r\n    }\r\n\r\n    abstract clone (): ActionInterval;\r\n\r\n    override step (dt: number): void {\r\n        if (this._paused || this._speed === 0) return;\r\n        dt *= this._speed;\r\n        if (this._firstTick) {\r\n            this._elapsed = this._startTime;\r\n        } else this._elapsed += dt;\r\n\r\n        // this.update((1 > (this._elapsed / this._duration)) ? this._elapsed / this._duration : 1);\r\n        // this.update(Math.max(0, Math.min(1, this._elapsed / Math.max(this._duration, cc.macro.FLT_EPSILON))));\r\n        let t = this._elapsed / (this._duration > 0.0000001192092896 ? this._duration : 0.0000001192092896);\r\n        t = (t < 1 ? t : 1);\r\n        this.update(t > 0 ? t : 0);\r\n\r\n        // NOTE: If the action's duration is unknown, the elapsed time should be kept at the point of the last frame,\r\n        // because ActionUnknownDuration will be executed at each frame until its callback returns true.\r\n        // After ActionUnknownDuration is finished, the isUnknownDuration method will return false\r\n        // and the elapsed time will go as before.\r\n        if (this.isUnknownDuration() && !this._firstTick) {\r\n            if (t < 1) {\r\n                this._elapsed -= dt;\r\n            } else {\r\n                this._elapsed = this._startTime + this._duration;\r\n            }\r\n        }\r\n\r\n        if (this._firstTick) {\r\n            this._firstTick = false;\r\n            if (this._startTime > 0) {\r\n                // _startTime only takes effect in the first tick after tween starts. So reset it to 0 after the first tick.\r\n                this._startTime = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    startWithTarget<T> (target: T | null): void {\r\n        super.startWithTarget(target);\r\n        this._elapsed = 0;\r\n        this._firstTick = true;\r\n    }\r\n\r\n    abstract reverse (): ActionInterval;\r\n\r\n    /**\r\n     * @en\r\n     * Get this action speed.\r\n     * @zh\r\n     * 返回此动作速度\r\n     * @return {Number}\r\n     */\r\n    getSpeed (): number {\r\n        return this._speed;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set this action speed.\r\n     * @zh\r\n     * 设置此动作速度\r\n     * @param {Number} speed\r\n     * @returns {ActionInterval}\r\n     */\r\n    setSpeed (speed: number): void {\r\n        this._speed = speed;\r\n    }\r\n\r\n    getDurationScaled (): number {\r\n        return this._duration / this._speed;\r\n    }\r\n}\r\n\r\nfunction sequenceActionWithOneTwo (actionOne: FiniteTimeAction, actionTwo: FiniteTimeAction): Sequence {\r\n    const sequence = new Sequence();\r\n    sequence.initWithTwoActions(actionOne, actionTwo);\r\n    return sequence;\r\n}\r\n\r\n/*\r\n * Runs actions sequentially, one after another.\r\n */\r\nexport class Sequence extends ActionInterval {\r\n    private _actions: FiniteTimeAction[] = [];\r\n    private _split = 0;\r\n    private _last = 0;\r\n    private _reversed = false;\r\n\r\n    /**\r\n     * @example\r\n     * import { Sequence } from 'cc';\r\n     *\r\n     * // create sequence with actions\r\n     * const seq = new Sequence(act1, act2);\r\n     *\r\n     * // create sequence with array\r\n     * const seq = new Sequence(actArray);\r\n     */\r\n    constructor (actions?: FiniteTimeAction[]) {\r\n        super();\r\n        if (!actions || actions.length === 0) {\r\n            return;\r\n        }\r\n        if (actions.length === 1) {\r\n            actions.push(new DummyAction());\r\n        }\r\n        const last = actions.length - 1;\r\n        if ((last >= 0) && (actions[last] == null)) logID(1015);\r\n\r\n        if (last >= 0) {\r\n            let prev = actions[0];\r\n            let action1: FiniteTimeAction;\r\n            for (let i = 1; i < last; i++) {\r\n                if (actions[i]) {\r\n                    action1 = prev;\r\n                    prev = sequenceActionWithOneTwo(action1, actions[i]);\r\n                }\r\n            }\r\n            this.initWithTwoActions(prev, actions[last]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes the action\r\n     * @param actionOne the first action to run\r\n     * @param actionTwo the second action to run\r\n     * @return true if the action initializes properly, false otherwise.\r\n     */\r\n    initWithTwoActions (actionOne?: FiniteTimeAction, actionTwo?: FiniteTimeAction): boolean {\r\n        if (!actionOne || !actionTwo) {\r\n            errorID(1025);\r\n            return false;\r\n        }\r\n\r\n        const durationOne = actionOne.getDurationScaled();\r\n        const durationTwo = actionTwo.getDurationScaled();\r\n        const d = durationOne + durationTwo;\r\n        this.initWithDuration(d);\r\n\r\n        this._actions[0] = actionOne;\r\n        this._actions[1] = actionTwo;\r\n        return true;\r\n    }\r\n\r\n    override clone (): Sequence {\r\n        const action = new Sequence();\r\n        action._id = this._id;\r\n        action._speed = this._speed;\r\n        this._cloneDecoration(action);\r\n        action.initWithTwoActions(this._actions[0].clone(), this._actions[1].clone());\r\n        return action;\r\n    }\r\n\r\n    override startWithTarget<T> (target: T | null): void {\r\n        super.startWithTarget(target);\r\n        if (this._actions.length === 0) {\r\n            return;\r\n        }\r\n        this._split = this._actions[0].getDurationScaled() / this._duration;\r\n        this._last = -1;\r\n    }\r\n\r\n    override stop (): void {\r\n        if (this._actions.length === 0) {\r\n            return;\r\n        }\r\n        // Issue #1305\r\n        if (this._last !== -1) this._actions[this._last].stop();\r\n        super.stop();\r\n    }\r\n\r\n    override update (t: number): void {\r\n        const locActions = this._actions;\r\n        if (locActions.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let new_t: number = 0;\r\n        let found = 0;\r\n        const locSplit = this._split;\r\n        const locLast = this._last;\r\n\r\n        if (t < locSplit) {\r\n            // action[0]\r\n            new_t = (locSplit !== 0) ? t / locSplit : 1;\r\n\r\n            if (found === 0 && locLast === 1 && this._reversed) {\r\n                const two = locActions[1];\r\n                // Reverse mode ?\r\n                // XXX: Bug. this case doesn't contemplate when _last==-1, found=0 and in \"reverse mode\"\r\n                // since it will require a hack to know if an action is on reverse mode or not.\r\n                // \"step\" should be overriden, and the \"reverseMode\" value propagated to inner Sequences.\r\n                two.update(0);\r\n                if (two.isUnknownDuration()) return;\r\n                two.stop();\r\n            }\r\n        } else {\r\n            const one = locActions[0];\r\n            // action[1]\r\n            found = 1;\r\n            new_t = (locSplit === 1) ? 1 : (t - locSplit) / (1 - locSplit);\r\n\r\n            if (locLast === -1) {\r\n                // action[0] was skipped, execute it.\r\n                one.startWithTarget(this.target);\r\n                one.update(1);\r\n                if (one.isUnknownDuration()) return; // Don't stop `one` or update `two` since `one` is `unknown duration`. So just return here.\r\n                one.stop();\r\n            }\r\n            if (locLast === 0) {\r\n                // switching to action 1. stop action 0.\r\n                one.update(1);\r\n                if (one.isUnknownDuration()) return;\r\n                one.stop();\r\n            }\r\n        }\r\n\r\n        const actionFound = locActions[found];\r\n        // Last action found and it is done.\r\n        if (locLast === found && actionFound.isDone()) return;\r\n\r\n        // Last action not found\r\n        if (locLast !== found) actionFound.startWithTarget(this.target);\r\n\r\n        actionFound.update(new_t > 1 ? new_t % 1 : new_t);\r\n        this._last = found;\r\n    }\r\n\r\n    override reverse (): Sequence {\r\n        const action: Sequence = sequenceActionWithOneTwo(this._actions[1].reverse(), this._actions[0].reverse());\r\n        this._cloneDecoration(action);\r\n        action._reversed = true;\r\n        return action;\r\n    }\r\n\r\n    /** @mangle */\r\n    updateOwner<T extends object> (owner: Tween<T>): void {\r\n        if (this._actions.length < 2) {\r\n            return;\r\n        }\r\n        const actionOne = this._actions[0];\r\n        const actionTwo = this._actions[1];\r\n\r\n        if (!actionTwo._owner) {\r\n            actionTwo._owner = owner;\r\n        }\r\n        if (actionOne instanceof Sequence || actionOne instanceof Spawn) {\r\n            actionOne.updateOwner(owner);\r\n        } else if (!actionOne._owner) { // action's owner should never be changed, so only set owner when it's not set yet.\r\n            actionOne._owner = owner;\r\n        }\r\n    }\r\n\r\n    /** @mangle */\r\n    findAction (id: number): FiniteTimeAction | null {\r\n        for (let i = 0, len = this._actions.length; i < len; ++i) {\r\n            let action: FiniteTimeAction | null = this._actions[i];\r\n            if (action.getId() === id) {\r\n                return action;\r\n            }\r\n\r\n            if (action instanceof Sequence || action instanceof Spawn) {\r\n                action = action.findAction(id);\r\n                if (action && action.getId() === id) {\r\n                    return action;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        if (this._actions.length === 0) return false;\r\n\r\n        const one = this._actions[0];\r\n        const two = this._actions[1];\r\n\r\n        if (this._last < 1) {\r\n            return one.isUnknownDuration();\r\n        }\r\n\r\n        return two.isUnknownDuration();\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<Sequence>`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Helper constructor to create an array of sequenceable actions\r\n * The created action will run actions sequentially, one after another.\r\n * @zh 顺序执行动作，创建的动作将按顺序依次运行。\r\n * @method sequence\r\n * @param {FiniteTimeAction|FiniteTimeAction[]} actionOrActionArray\r\n * @param {FiniteTimeAction} ...tempArray\r\n * @return {Sequence}\r\n * @example\r\n * import { sequence } from 'cc';\r\n *\r\n * // Create sequence with actions\r\n * const seq = sequence(act1, act2);\r\n *\r\n * // Create sequence with array\r\n * const seq = sequence(actArray);\r\n */\r\n// todo: It should be use new\r\nexport function sequence (actions: FiniteTimeAction[]): Sequence {\r\n    return new Sequence(actions);\r\n}\r\n\r\n/*\r\n * Repeats an action a number of times.\r\n * To repeat an action forever use the CCRepeatForever action.\r\n * @class Repeat\r\n * @extends ActionInterval\r\n * @param {FiniteTimeAction} action\r\n * @param {Number} times\r\n * @example\r\n * import { Repeat, sequence } from 'cc';\r\n * const rep = new Repeat(sequence(jump2, jump1), 5);\r\n */\r\nexport class Repeat extends ActionInterval {\r\n    private _times = 0;\r\n    private _total = 0;\r\n    private _nextDt = 0;\r\n    private _actionInstant = false;\r\n    private _innerAction: FiniteTimeAction | null = null;\r\n\r\n    constructor (action?: FiniteTimeAction, times?: number) {\r\n        super();\r\n        this.initWithAction(action, times);\r\n    }\r\n\r\n    /*\r\n     * @param {FiniteTimeAction} action\r\n     * @param {Number} times\r\n     * @return {Boolean}\r\n     */\r\n    initWithAction (action?: FiniteTimeAction, times?: number): boolean {\r\n        if (!action || times === undefined) {\r\n            return false;\r\n        }\r\n        const duration = action.getDurationScaled() * times;\r\n\r\n        if (this.initWithDuration(duration)) {\r\n            this._times = times;\r\n            this._innerAction = action;\r\n            if (action instanceof ActionInstant) {\r\n                this._actionInstant = true;\r\n                this._times -= 1;\r\n            }\r\n            this._total = 0;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    override clone (): Repeat {\r\n        const action = new Repeat();\r\n        action._id = this._id;\r\n        action._speed = this._speed;\r\n        this._cloneDecoration(action);\r\n        if (this._innerAction) {\r\n            action.initWithAction(this._innerAction.clone(), this._times);\r\n        }\r\n        return action;\r\n    }\r\n\r\n    override startWithTarget<T> (target: T | null): void {\r\n        this._total = 0;\r\n        this._nextDt = (this._innerAction ? this._innerAction.getDurationScaled() : 0) / this._duration;\r\n        super.startWithTarget(target);\r\n        if (this._innerAction) this._innerAction.startWithTarget(target);\r\n    }\r\n\r\n    override stop (): void {\r\n        if (this._innerAction) this._innerAction.stop();\r\n        super.stop();\r\n    }\r\n\r\n    override update (dt: number): void {\r\n        const locInnerAction = this._innerAction;\r\n        const locDuration = this._duration;\r\n        const locTimes = this._times;\r\n        let locNextDt = this._nextDt;\r\n        if (!locInnerAction) {\r\n            return;\r\n        }\r\n\r\n        if (dt >= locNextDt) {\r\n            while (dt > locNextDt && this._total < locTimes) {\r\n                locInnerAction.update(1);\r\n                if (locInnerAction.isUnknownDuration()) return;\r\n                this._total++;\r\n                locInnerAction.stop();\r\n                locInnerAction.startWithTarget(this.target);\r\n                locNextDt += locInnerAction.getDurationScaled() / locDuration;\r\n                this._nextDt = locNextDt > 1 ? 1 : locNextDt;\r\n            }\r\n\r\n            // fix for issue #1288, incorrect end value of repeat\r\n            if (dt >= 1.0 && this._total < locTimes) {\r\n                // fix for cocos-creator/fireball/issues/4310\r\n                locInnerAction.update(1);\r\n                if (locInnerAction.isUnknownDuration()) return;\r\n                this._total++;\r\n            }\r\n\r\n            // don't set a instant action back or update it, it has no use because it has no duration\r\n            if (!this._actionInstant) {\r\n                if (this._total === locTimes) {\r\n                    locInnerAction.stop();\r\n                } else {\r\n                    // issue #390 prevent jerk, use right update\r\n                    locInnerAction.update(dt - (locNextDt - locInnerAction.getDurationScaled() / locDuration));\r\n                }\r\n            }\r\n        } else {\r\n            locInnerAction.update((dt * locTimes) % 1.0);\r\n        }\r\n    }\r\n\r\n    override isDone (): boolean {\r\n        return this._total === this._times;\r\n    }\r\n\r\n    override reverse (): Repeat {\r\n        const actionArg = this._innerAction ? this._innerAction.reverse() : undefined;\r\n        const action = new Repeat(actionArg, this._times);\r\n        this._cloneDecoration(action);\r\n        return action;\r\n    }\r\n\r\n    /*\r\n     * Set inner Action.\r\n     * @param action The inner action.\r\n     * @mangle\r\n     */\r\n    setInnerAction (action: FiniteTimeAction): void {\r\n        if (this._innerAction !== action) {\r\n            this._innerAction = action;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get inner Action.\r\n     * @return The inner action.\r\n     * @mangle\r\n     */\r\n    getInnerAction (): FiniteTimeAction | null {\r\n        return this._innerAction;\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        if (this._innerAction) { return this._innerAction.isUnknownDuration(); }\r\n        return false;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<Repeat>`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Creates a Repeat action. Times is an unsigned integer between 1 and pow(2,30)\r\n * @zh 重复动作，可以按一定次数重复一个动，如果想永远重复一个动作请使用 repeatForever 动作来完成。\r\n * @method repeat\r\n * @param {FiniteTimeAction} action\r\n * @param {Number} times\r\n * @return {Action}\r\n * @example\r\n * import { repeat, sequence } from 'cc';\r\n * const rep = repeat(sequence(jump2, jump1), 5);\r\n */\r\nexport function repeat (action: FiniteTimeAction, times: number): Repeat {\r\n    return new Repeat(action, times);\r\n}\r\n\r\n/*\r\n * Repeats an action for ever.  <br/>\r\n * To repeat the an action for a limited number of times use the Repeat action. <br/>\r\n * @warning This action can't be Sequenceable because it is not an IntervalAction\r\n * @class RepeatForever\r\n * @extends ActionInterval\r\n * @param {ActionInterval} action\r\n * @example\r\n * import { sequence, RepeatForever } from 'cc';\r\n * const rep = new RepeatForever(sequence(jump2, jump1), 5);\r\n */\r\nexport class RepeatForever extends ActionInterval {\r\n    private _innerAction: ActionInterval | null = null;\r\n\r\n    constructor (action?: ActionInterval) {\r\n        super();\r\n        if (action) this.initWithAction(action);\r\n    }\r\n\r\n    /*\r\n     * @param {ActionInterval} action\r\n     * @return {Boolean}\r\n     */\r\n    initWithAction (action: ActionInterval): boolean {\r\n        if (!action) {\r\n            errorID(1026);\r\n            return false;\r\n        }\r\n\r\n        this._innerAction = action;\r\n        this._duration = Infinity;\r\n        return true;\r\n    }\r\n\r\n    override clone (): RepeatForever {\r\n        const action = new RepeatForever();\r\n        action._id = this._id;\r\n        action._speed = this._speed;\r\n        this._cloneDecoration(action);\r\n        if (this._innerAction) {\r\n            action.initWithAction(this._innerAction.clone());\r\n        }\r\n        return action;\r\n    }\r\n\r\n    override startWithTarget<T> (target: T | null): void {\r\n        super.startWithTarget(target);\r\n        if (this._innerAction) {\r\n            this._innerAction.startWithTarget(target);\r\n        }\r\n    }\r\n\r\n    override stop (): void {\r\n        if (this._innerAction) this._innerAction.stop();\r\n        super.stop();\r\n    }\r\n\r\n    override step (dt: number): void {\r\n        if (this._paused || this._speed === 0) return;\r\n        const locInnerAction = this._innerAction;\r\n        if (!locInnerAction) {\r\n            return;\r\n        }\r\n        dt *= this._speed;\r\n        locInnerAction.step(dt);\r\n        if (locInnerAction.isDone()) {\r\n            // var diff = locInnerAction.getElapsed() - locInnerAction.getDurationScaled();\r\n            locInnerAction.startWithTarget(this.target);\r\n            // to prevent jerk. issue #390 ,1247\r\n            // this._innerAction.step(0);\r\n            // this._innerAction.step(diff);\r\n            locInnerAction.step(locInnerAction.getElapsed() - locInnerAction.getDurationScaled());\r\n        }\r\n    }\r\n\r\n    override update (_t: number): void {\r\n        logID(1007); // should never come here.\r\n    }\r\n\r\n    override isDone (): boolean {\r\n        return false;\r\n    }\r\n\r\n    override reverse (): RepeatForever {\r\n        if (this._innerAction) {\r\n            const action = new RepeatForever(this._innerAction.reverse());\r\n            this._cloneDecoration(action);\r\n            return action;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Set inner action.\r\n     * @param The inner action\r\n     * @mangle\r\n     */\r\n    setInnerAction (action: ActionInterval | null): void {\r\n        if (this._innerAction !== action) {\r\n            this._innerAction = action;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get inner action.\r\n     * @return The inner action\r\n     * @mangle\r\n     */\r\n    getInnerAction (): ActionInterval | null {\r\n        return this._innerAction;\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        if (this._innerAction) { return this._innerAction.isUnknownDuration(); }\r\n        return false;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<RepeatForever>`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Create a acton which repeat forever, as it runs forever, it can't be added into `sequence` and `spawn`.\r\n * @zh 永远地重复一个动作，有限次数内重复一个动作请使用 repeat 动作，由于这个动作不会停止，所以不能被添加到 `sequence` 或 `spawn` 中。\r\n * @method repeatForever\r\n * @param {FiniteTimeAction} action\r\n * @return {ActionInterval}\r\n * @example\r\n * import { repeatForever, rotateBy } from 'cc';\r\n * var repeat = repeatForever(rotateBy(1.0, 360));\r\n */\r\nexport function repeatForever (action?: ActionInterval): RepeatForever {\r\n    return new RepeatForever(action);\r\n}\r\n\r\nfunction spawnActionWithOneTwo (action1?: FiniteTimeAction, action2?: FiniteTimeAction): Spawn {\r\n    const spawn = new Spawn();\r\n    spawn.initWithTwoActions(action1, action2);\r\n    return spawn;\r\n}\r\n\r\n/*\r\n * Spawn a new action immediately\r\n * @class Spawn\r\n * @extends ActionInterval\r\n */\r\nexport class Spawn extends ActionInterval {\r\n    private _one: FiniteTimeAction | null = null;\r\n    private _two: FiniteTimeAction | null = null;\r\n    private _finished = false;\r\n\r\n    constructor (actions?: FiniteTimeAction[]) {\r\n        super();\r\n        if (!actions || actions.length === 0) {\r\n            return;\r\n        }\r\n        if (actions.length === 1) {\r\n            actions.push(new DummyAction());\r\n        }\r\n\r\n        const last = actions.length - 1;\r\n        if ((last >= 0) && (actions[last] == null)) logID(1015);\r\n\r\n        if (last >= 0) {\r\n            let prev: FiniteTimeAction = actions[0];\r\n            let action1: FiniteTimeAction;\r\n            for (let i = 1; i < last; i++) {\r\n                if (actions[i]) {\r\n                    action1 = prev;\r\n                    prev = spawnActionWithOneTwo(action1, actions[i]);\r\n                }\r\n            }\r\n            this.initWithTwoActions(prev, actions[last]);\r\n        }\r\n    }\r\n\r\n    /* Initializes the Spawn action with the 2 actions to spawn\r\n     * @param {FiniteTimeAction} action1 The first action\r\n     * @param {FiniteTimeAction} action2 The second action\r\n     * @return {Boolean} Return true if the initialization succeeds, otherwise return false.\r\n     */\r\n    initWithTwoActions (action1?: FiniteTimeAction, action2?: FiniteTimeAction): boolean {\r\n        if (!action1 || !action2) {\r\n            errorID(1027);\r\n            return false;\r\n        }\r\n\r\n        let ret = false;\r\n\r\n        const d1 = action1.getDurationScaled();\r\n        const d2 = action2.getDurationScaled();\r\n\r\n        if (this.initWithDuration(Math.max(d1, d2))) {\r\n            this._one = action1;\r\n            this._two = action2;\r\n\r\n            if (d1 > d2) {\r\n                this._two = sequenceActionWithOneTwo(action2, delayTime(d1 - d2));\r\n            } else if (d1 < d2) {\r\n                this._one = sequenceActionWithOneTwo(action1, delayTime(d2 - d1));\r\n            }\r\n\r\n            ret = true;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    override clone (): Spawn {\r\n        const action = new Spawn();\r\n        action._id = this._id;\r\n        action._speed = this._speed;\r\n        this._cloneDecoration(action);\r\n        if (this._one && this._two) {\r\n            action.initWithTwoActions(this._one.clone(), this._two.clone());\r\n        }\r\n        return action;\r\n    }\r\n\r\n    override startWithTarget<T> (target: T | null): void {\r\n        super.startWithTarget(target);\r\n        if (this._one) this._one.startWithTarget(target);\r\n        if (this._two) this._two.startWithTarget(target);\r\n    }\r\n\r\n    override stop (): void {\r\n        if (this._one) this._one.stop();\r\n        if (this._two) this._two.stop();\r\n        super.stop();\r\n    }\r\n\r\n    override update (t: number): void {\r\n        if (this._one) {\r\n            if (!this._finished || this._one.isUnknownDuration()) {\r\n                this._one.update(t);\r\n            }\r\n        }\r\n\r\n        if (this._two) {\r\n            if (!this._finished || this._two.isUnknownDuration()) {\r\n                this._two.update(t);\r\n            }\r\n        }\r\n\r\n        // FIXME(cjh): Checking whether t is 1 to indicate the spawn finished will cause issues\r\n        // when `timeScale` is a negative value. Currently, there isn't a good way to check that in sub-actions.\r\n        // So we suggest developer to use `Tween.reverse(...)` instead of `timeScale < 0` to implement a `reverse` effect.\r\n        this._finished = t === 1;\r\n    }\r\n\r\n    override reverse (): Spawn {\r\n        if (this._one && this._two) {\r\n            const action = spawnActionWithOneTwo(this._one.reverse(), this._two.reverse());\r\n            this._cloneDecoration(action);\r\n            return action;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @mangle\r\n     * @engineInternal\r\n     */\r\n    updateOwner<T extends object> (owner: Tween<T>): void {\r\n        if (!this._one || !this._two) {\r\n            return;\r\n        }\r\n        if (!this._two._owner) {\r\n            this._two._owner = owner;\r\n        }\r\n        const one = this._one;\r\n        if (one instanceof Spawn || one instanceof Sequence) {\r\n            one.updateOwner(owner);\r\n        } else if (!one._owner) { // action's owner should never be changed, so only set owner when it's not set yet.\r\n            one._owner = owner;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @mangle\r\n     * @engineInternal\r\n     */\r\n    findAction (id: number): FiniteTimeAction | null {\r\n        const one = this._one;\r\n        const two = this._two;\r\n        let foundAction: FiniteTimeAction | null = null;\r\n        const find = (action: FiniteTimeAction): FiniteTimeAction | null => {\r\n            if (action.getId() === id) return action;\r\n            if (action instanceof Sequence || action instanceof Spawn) {\r\n                const found = action.findAction(id);\r\n                if (found) return found;\r\n            }\r\n            return null;\r\n        };\r\n        if (one) {\r\n            foundAction = find(one);\r\n            if (foundAction) return foundAction;\r\n        }\r\n\r\n        if (two) {\r\n            foundAction = find(two);\r\n            if (foundAction) return foundAction;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        const one = this._one;\r\n        const two = this._two;\r\n\r\n        if (one == null || two == null) return false;\r\n\r\n        const isOneUnknownTime = one.isUnknownDuration();\r\n        const isTwoUnknownTime = two.isUnknownDuration();\r\n\r\n        if (isOneUnknownTime || isTwoUnknownTime) {\r\n            if (isOneUnknownTime && isTwoUnknownTime) return true;\r\n            else if (this._finished) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<Spawn>`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Create a spawn action which runs several actions in parallel.\r\n * @zh 同步执行动作，同步执行一组动作。\r\n * @method spawn\r\n * @param {FiniteTimeAction|FiniteTimeAction[]} actionOrActionArray\r\n * @param {FiniteTimeAction} ...tempArray\r\n * @return {Spawn}\r\n * @example\r\n * import { spawn, jumpBy, rotateBy, Vec2 } from 'cc';\r\n * const action = spawn(jumpBy(2, new Vec2(300, 0), 50, 4), rotateBy(2, 720));\r\n * todo: It should be the direct use new\r\n */\r\nexport function spawn (actions: FiniteTimeAction[]): Spawn {\r\n    return new Spawn(actions);\r\n}\r\n\r\n/* Delays the action a certain amount of seconds\r\n * @class DelayTime\r\n * @extends ActionInterval\r\n */\r\nclass DelayTime extends ActionInterval {\r\n    override update (_dt: number): void { /* empty */ }\r\n\r\n    override reverse (): DelayTime {\r\n        const action = new DelayTime(this._duration);\r\n        this._cloneDecoration(action);\r\n        return action;\r\n    }\r\n\r\n    override clone (): DelayTime {\r\n        const action = new DelayTime();\r\n        action._id = this._id;\r\n        action._speed = this._speed;\r\n        this._cloneDecoration(action);\r\n        action.initWithDuration(this._duration);\r\n        return action;\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        return false;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<DelayTime>`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Delays the action a certain amount of seconds.\r\n * @zh 延迟指定的时间量。\r\n * @method delayTime\r\n * @param {Number} d duration in seconds\r\n * @return {ActionInterval}\r\n * @example\r\n * import { delayTime } from 'cc';\r\n * const delay = delayTime(1);\r\n */\r\nexport function delayTime (d: number): ActionInterval {\r\n    return new DelayTime(d);\r\n}\r\n\r\n/**\r\n * <p>\r\n * Executes an action in reverse order, from time=duration to time=0                                     <br/>\r\n * @warning Use this action carefully. This action is not sequenceable.                                 <br/>\r\n * Use it as the default \"reversed\" method of your own actions, but using it outside the \"reversed\"      <br/>\r\n * scope is not recommended.\r\n * </p>\r\n * @class ReverseTime\r\n * @extends ActionInterval\r\n * @param {FiniteTimeAction} action\r\n * @example\r\n * import ReverseTime from 'cc';\r\n * var reverse = new ReverseTime(this);\r\n */\r\nexport class ReverseTime extends ActionInterval {\r\n    private _other: ActionInterval | null = null;\r\n\r\n    constructor (action?: ActionInterval) {\r\n        super();\r\n        if (action) this.initWithAction(action);\r\n    }\r\n\r\n    /*\r\n     * @param {ActionInterval} action\r\n     * @return {Boolean}\r\n     */\r\n    initWithAction (action: ActionInterval): boolean {\r\n        if (!action) {\r\n            errorID(1028);\r\n            return false;\r\n        }\r\n        if (action === this._other) {\r\n            errorID(1029);\r\n            return false;\r\n        }\r\n\r\n        if (super.initWithDuration(action.getDurationScaled())) {\r\n            // Don't leak if action is reused\r\n            this._other = action;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    override clone (): ReverseTime {\r\n        const action = new ReverseTime();\r\n        action._id = this._id;\r\n        action._speed = this._speed;\r\n        this._cloneDecoration(action);\r\n        if (this._other) {\r\n            action.initWithAction(this._other.clone());\r\n        }\r\n        return action;\r\n    }\r\n\r\n    override startWithTarget<T> (target: T | null): void {\r\n        super.startWithTarget(target);\r\n        if (this._other) this._other.startWithTarget(target);\r\n    }\r\n\r\n    override update (dt: number): void {\r\n        if (this._other) this._other.update(1 - dt);\r\n    }\r\n\r\n    override reverse (): ActionInterval {\r\n        if (this._other) {\r\n            return this._other.clone();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    override stop (): void {\r\n        if (this._other) this._other.stop();\r\n        super.stop();\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        return false;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<ReverseTime>`;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Executes an action in reverse order, from time=duration to time=0.\r\n * @zh 反转目标动作的时间轴。\r\n * @method reverseTime\r\n * @param {FiniteTimeAction} action\r\n * @return {ActionInterval}\r\n * @example\r\n * import { reverseTime } from 'cc';\r\n * const reverse = reverseTime(this);\r\n */\r\nexport function reverseTime (action: ActionInterval): ReverseTime {\r\n    return new ReverseTime(action);\r\n}\r\n\r\nexport class ActionCustomUpdate<T extends object, Args extends any[]> extends ActionInterval {\r\n    private declare _cb: TweenUpdateCallback<T, Args>;\r\n    private declare _args: Args;\r\n\r\n    constructor (duration: number, cb: TweenUpdateCallback<T, Args>, args: Args) {\r\n        super(duration);\r\n        this._cb = cb;\r\n        this._args = args;\r\n    }\r\n\r\n    override clone (): ActionCustomUpdate<T, Args> {\r\n        return new ActionCustomUpdate(this._duration, this._cb, this._args);\r\n    }\r\n\r\n    override update (ratio: number): void {\r\n        this._cb(this.target as T, ratio, ...this._args);\r\n    }\r\n\r\n    override reverse (): ActionCustomUpdate<T, Args> {\r\n        return this.clone();\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        return false;\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<ActionCustomUpdate>`;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2024 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { FiniteTimeAction } from './action';\r\nimport type { TweenUpdateUntilCallback } from '../tween';\r\nimport { cclegacy } from '../../core';\r\n\r\nexport class ActionUnknownDuration<T extends object, Args extends any[]> extends FiniteTimeAction {\r\n    private _finished = false;\r\n    private declare _cb: TweenUpdateUntilCallback<T, Args>;\r\n    private declare _args: Args;\r\n\r\n    constructor (cb: TweenUpdateUntilCallback<T, Args>, args: Args) {\r\n        super();\r\n        this._cb = cb;\r\n        this._args = args;\r\n    }\r\n\r\n    override clone (): ActionUnknownDuration<T, Args> {\r\n        return new ActionUnknownDuration(this._cb, this._args);\r\n    }\r\n\r\n    override reverse (): ActionUnknownDuration<T, Args> {\r\n        return this.clone();\r\n    }\r\n\r\n    override step (dt: number): void {\r\n        throw new Error('should never go here');\r\n    }\r\n\r\n    override update (t: number): void {\r\n        const dt: number = cclegacy.game.deltaTime;\r\n        this._finished = this._cb(this.target as T, dt, ...this._args);\r\n    }\r\n\r\n    override isDone (): boolean {\r\n        return this._finished;\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        return !this.isDone();\r\n    }\r\n\r\n    override toString (): string {\r\n        return `<ActionUnknownDuration>`;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { warnID, warn, easing } from '../core';\r\nimport { ActionInterval } from './actions/action-interval';\r\nimport { ITweenOption, TweenEasing } from './export-api';\r\nimport { VERSION } from '../core/global-exports';\r\n\r\ntype TypeEquality<T, U> = { [K in keyof T]: K extends keyof U ? T[K] : never } extends T ? true : false;\r\n\r\n/** adapter */\r\nfunction TweenEasingAdapter (easingName: string): string {\r\n    const initialChar = easingName.charAt(0);\r\n    if (/[A-Z]/.test(initialChar)) {\r\n        easingName = easingName.replace(initialChar, initialChar.toLowerCase());\r\n        const arr = easingName.split('-');\r\n        if (arr.length === 2) {\r\n            const str0 = arr[0];\r\n            if (str0 === 'linear') {\r\n                easingName = 'linear';\r\n            } else {\r\n                const str1 = arr[1];\r\n                switch (str0) {\r\n                case 'quadratic':\r\n                    easingName = `quad${str1}`;\r\n                    break;\r\n                case 'quartic':\r\n                    easingName = `quart${str1}`;\r\n                    break;\r\n                case 'quintic':\r\n                    easingName = `quint${str1}`;\r\n                    break;\r\n                case 'sinusoidal':\r\n                    easingName = `sine${str1}`;\r\n                    break;\r\n                case 'exponential':\r\n                    easingName = `expo${str1}`;\r\n                    break;\r\n                case 'circular':\r\n                    easingName = `circ${str1}`;\r\n                    break;\r\n                default:\r\n                    easingName = str0 + str1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return easingName;\r\n}\r\n\r\n/** checker */\r\nfunction TweenOptionChecker<T extends object> (opts: ITweenOption<T>): void {\r\n    const header = ' [Tween:] ';\r\n    const message = ` option is not support in v + ${VERSION}`;\r\n    const _opts = opts as unknown as any;\r\n    if (_opts.delay) {\r\n        warn(`${header}delay${message}`);\r\n    }\r\n    if (_opts.repeat) {\r\n        warn(`${header}repeat${message}`);\r\n    }\r\n    if (_opts.repeatDelay) {\r\n        warn(`${header}repeatDelay${message}`);\r\n    }\r\n    if (_opts.interpolation) {\r\n        warn(`${header}interpolation${message}`);\r\n    }\r\n    if (_opts.onStop) {\r\n        warn(`${header}onStop${message}`);\r\n    }\r\n}\r\n\r\nexport interface IInternalTweenOption<T extends object> extends ITweenOption<T> {\r\n    /**\r\n     * @en\r\n     * Whether to use relative value calculation method during easing process\r\n     * @zh\r\n     * 缓动过程中是否采用相对值计算的方法\r\n     */\r\n    relative?: boolean;\r\n}\r\n\r\nexport class TweenAction<T extends object> extends ActionInterval {\r\n    private declare _opts: IInternalTweenOption<T>;\r\n    private declare _props: any;\r\n    private declare _originProps: any;\r\n    private _reversed = false;\r\n\r\n    constructor (duration: number, props: any, opts?: IInternalTweenOption<T>) {\r\n        super();\r\n        if (opts == null) {\r\n            opts = Object.create(null) as IInternalTweenOption<T>;\r\n        } else {\r\n            /** checker */\r\n            TweenOptionChecker(opts);\r\n\r\n            /** adapter */\r\n            if (opts.easing && typeof opts.easing === 'string') {\r\n                opts.easing = TweenEasingAdapter(opts.easing) as TweenEasing;\r\n            }\r\n\r\n            // global easing or progress used for this action\r\n            if (!opts.progress) {\r\n                opts.progress = this.progress;\r\n            }\r\n            if (opts.easing && typeof opts.easing === 'string') {\r\n                const easingName = opts.easing as string;\r\n                opts.easing = easing[easingName];\r\n\r\n                if (!opts.easing) { warnID(1031, easingName); }\r\n            }\r\n        }\r\n        this._opts = opts;\r\n\r\n        this._props = Object.create(null);\r\n        for (const name in props) {\r\n            // filtering if\r\n            // - it was not own property\r\n            // - types was function / string\r\n            // - it was undefined / null\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (!props.hasOwnProperty(name)) continue;\r\n            let value = props[name];\r\n            if (typeof value === 'function') {\r\n                value = value();\r\n            } else if (value == null) {\r\n                continue;\r\n            }\r\n            // property may have custom easing or progress function\r\n            let customEasing: any;\r\n            let customProgress: any;\r\n            let customValue: any;\r\n\r\n            if (value.value !== undefined) {\r\n                customValue = value.value;\r\n                if (typeof customValue === 'function') {\r\n                    customValue = customValue();\r\n                }\r\n\r\n                if (value.easing !== undefined) {\r\n                    if (typeof value.easing === 'string') {\r\n                        customEasing = easing[value.easing];\r\n                        if (!customEasing) warnID(1031, value.easing as string);\r\n                    } else {\r\n                        customEasing = value.easing;\r\n                    }\r\n                }\r\n\r\n                if (value.progress !== undefined) {\r\n                    customProgress = value.progress;\r\n                }\r\n            } else {\r\n                customValue = value;\r\n            }\r\n\r\n            const prop = Object.create(null);\r\n            prop.start = prop.current = prop.end = null;\r\n            prop.keys = null;\r\n            prop.value = customValue;\r\n            prop.easing = customEasing;\r\n            prop.progress = customProgress;\r\n            prop.convert = value.convert;\r\n            prop.clone = value.clone;\r\n            prop.add = value.add;\r\n            prop.sub = value.sub;\r\n            prop.legacyProgress = value.legacyProgress ?? true;\r\n            prop.toFixed = value.toFixed;\r\n            prop.onStart = value.onStart;\r\n            prop.onStop = value.onStop;\r\n            prop.onComplete = value.onComplete;\r\n            prop.valid = true;\r\n            this._props[name] = prop;\r\n        }\r\n\r\n        this._originProps = props;\r\n        this.initWithDuration(duration);\r\n    }\r\n\r\n    get relative (): boolean {\r\n        return !!this._opts.relative;\r\n    }\r\n\r\n    override clone (): TweenAction<T> {\r\n        const action = new TweenAction(this._duration, this._originProps, this._opts);\r\n        action._reversed = this._reversed;\r\n        action._owner = this._owner;\r\n        action._id = this._id;\r\n        this._cloneDecoration(action);\r\n        return action;\r\n    }\r\n\r\n    override reverse (): TweenAction<T> {\r\n        if (!this._opts.relative) {\r\n            warnID(16382);\r\n            return new TweenAction<T>(0, {});\r\n        }\r\n\r\n        const action = new TweenAction(this._duration, this._originProps, this._opts);\r\n        this._cloneDecoration(action);\r\n        action._reversed = !this._reversed;\r\n        action._owner = this._owner;\r\n        return action;\r\n    }\r\n\r\n    override startWithTarget<U> (target: U | null): void {\r\n        const isEqual: TypeEquality<T, U> = true;\r\n        if (!isEqual) return;\r\n        super.startWithTarget(target);\r\n\r\n        const workerTarget = this._getWorkerTarget<T>();\r\n        if (!workerTarget) return;\r\n        const relative = !!this._opts.relative;\r\n        const props = this._props;\r\n        const reversed = this._reversed;\r\n        for (const property in props) {\r\n            const _t: any = workerTarget[property];\r\n            if (_t === undefined) { continue; }\r\n\r\n            const prop: any = props[property];\r\n            const value = prop.value;\r\n            if (typeof _t === 'number') {\r\n                prop.start = _t;\r\n                prop.current = _t;\r\n                prop.end = relative ? (reversed ? _t - value : _t + value) : value;\r\n            } else if (typeof _t === 'object') {\r\n                if (prop.legacyProgress) {\r\n                    if (prop.start == null) {\r\n                        const Ctor = _t.constructor;\r\n                        prop.start = new Ctor();\r\n                        prop.current = new Ctor();\r\n                        prop.end = new Ctor();\r\n                    }\r\n\r\n                    let propertyKeys: string[];\r\n                    if (value.getModifiableProperties) {\r\n                        propertyKeys = value.getModifiableProperties();\r\n                    } else {\r\n                        propertyKeys = Object.keys(value as object);\r\n                    }\r\n                    prop.keys = propertyKeys;\r\n\r\n                    for (let i = 0, len = propertyKeys.length; i < len; ++i) {\r\n                        const k = propertyKeys[i];\r\n                        // eslint-disable-next-line no-restricted-globals\r\n                        if (isNaN(_t[k] as number)) continue;\r\n\r\n                        prop.start[k] = _t[k];\r\n                        prop.current[k] = _t[k];\r\n                        prop.end[k] = relative ? (reversed ? _t[k] - value[k] : _t[k] + value[k]) : value[k];\r\n                    }\r\n                } else {\r\n                    const clone = prop.clone;\r\n                    if (!clone) {\r\n                        warnID(16383, property);\r\n                        prop.valid = false;\r\n                        continue;\r\n                    } else {\r\n                        const add = prop.add;\r\n                        const sub = prop.sub;\r\n                        if (relative) {\r\n                            if (!add) {\r\n                                warnID(16384, property);\r\n                                prop.valid = false;\r\n                            }\r\n                            if (reversed && !sub) {\r\n                                warnID(16385, property);\r\n                                prop.valid = false;\r\n                            }\r\n                            if (!prop.valid) continue;\r\n                        }\r\n\r\n                        prop.start = clone(_t);\r\n                        prop.current = clone(_t);\r\n                        prop.end = relative ? (reversed ? sub(_t, value) : add(_t, value)) : clone(value);\r\n                    }\r\n                }\r\n            } else if (typeof _t === 'string') {\r\n                const convertFn = prop.convert;\r\n                const convertToNumber = (v: any): number | null => {\r\n                    if (typeof v === 'number') return v;\r\n                    let convertedValue = v;\r\n                    if (convertFn) {\r\n                        convertedValue = convertFn(v);\r\n                    }\r\n\r\n                    if (typeof convertedValue !== 'number') {\r\n                        convertedValue = Number(convertedValue);\r\n                        if (Number.isNaN(convertedValue)) {\r\n                            warnID(16386, `${v}`);\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return convertedValue as number;\r\n                };\r\n\r\n                const targetNumValue = convertToNumber(value);\r\n                const startNumValue = convertToNumber(_t);\r\n                if (targetNumValue == null || startNumValue == null) {\r\n                    prop.valid = false;\r\n                    continue;\r\n                }\r\n\r\n                prop.start = startNumValue;\r\n                prop.current = _t;\r\n                prop.end = relative ? (reversed ? startNumValue - targetNumValue : startNumValue + targetNumValue) : targetNumValue;\r\n            }\r\n\r\n            if (prop.onStart) {\r\n                prop.onStart({\r\n                    relative,\r\n                    reversed,\r\n                    start: prop.start,\r\n                    end: prop.end,\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this._opts.onStart) { this._opts.onStart(workerTarget); }\r\n    }\r\n\r\n    override stop (): void {\r\n        const props = this._props;\r\n        for (const name in props) {\r\n            const prop = props[name];\r\n            if (!prop.valid) continue;\r\n\r\n            if (prop.onStop) {\r\n                prop.onStop();\r\n            }\r\n        }\r\n\r\n        super.stop();\r\n    }\r\n\r\n    override update (t: number): void {\r\n        const workerTarget = this._getWorkerTarget<T>();\r\n        if (!workerTarget) return;\r\n\r\n        if (!this._opts) return;\r\n\r\n        const props = this._props;\r\n        const opts = this._opts;\r\n\r\n        let easingTime = t;\r\n        if (typeof opts.easing === 'function') easingTime = opts.easing(t);\r\n\r\n        const progress = opts.progress;\r\n        for (const name in props) {\r\n            const prop = props[name];\r\n            if (!prop.valid) continue;\r\n\r\n            const time = prop.easing ? prop.easing(t) : easingTime;\r\n            const interpolation = prop.progress ? prop.progress : progress;\r\n\r\n            const start = prop.start;\r\n            const end = prop.end;\r\n            const current = prop.current;\r\n            if (typeof current === 'number') {\r\n                prop.current = interpolation(start, end, prop.current, time);\r\n            } else if (typeof start === 'object') {\r\n                if (prop.legacyProgress) {\r\n                    const keys = prop.keys;\r\n                    for (let i = 0, len = keys.length; i < len; ++i) {\r\n                        const k = keys[i];\r\n                        prop.current[k] = interpolation(start[k], end[k], prop.current[k], time);\r\n                    }\r\n                } else {\r\n                    prop.current = interpolation(start, end, prop.current, time);\r\n                }\r\n            } else if (typeof current === 'string') {\r\n                let newCurrent = interpolation(start, end, prop.current, time);\r\n                if (typeof newCurrent === 'number') {\r\n                    newCurrent = newCurrent.toFixed((prop.toFixed ?? 0) as number);\r\n                } else if (typeof newCurrent !== 'string') {\r\n                    warnID(16387);\r\n                    continue;\r\n                }\r\n                prop.current = newCurrent;\r\n            }\r\n\r\n            workerTarget[name] = prop.current;\r\n\r\n            if (t === 1 && prop.onComplete) {\r\n                prop.onComplete();\r\n            }\r\n        }\r\n        if (opts.onUpdate) { opts.onUpdate(workerTarget, t); }\r\n        if (t === 1 && opts.onComplete) { opts.onComplete(workerTarget); }\r\n    }\r\n\r\n    progress (start: number, end: number, current: number, t: number): number {\r\n        return current = start + (end - start) * t;\r\n    }\r\n\r\n    override isUnknownDuration (): boolean {\r\n        return false;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ActionInstant } from './actions/action-instant';\r\n\r\nexport class SetAction extends ActionInstant {\r\n    private _props: any;\r\n\r\n    constructor (props?: any) {\r\n        super();\r\n        this._props = {};\r\n        if (props) this.init(props);\r\n    }\r\n\r\n    init (props: any): boolean {\r\n        for (const name in props) {\r\n            this._props[name] = props[name];\r\n        }\r\n        return true;\r\n    }\r\n\r\n    update (): void {\r\n        const props = this._props;\r\n        const target = this._getWorkerTarget();\r\n        for (const name in props) {\r\n            (target as any)[name] = props[name];\r\n        }\r\n    }\r\n\r\n    clone (): SetAction {\r\n        const action = new SetAction();\r\n        action._id = this._id;\r\n        action.init(this._props);\r\n        return action;\r\n    }\r\n\r\n    isUnknownDuration (): boolean {\r\n        return false;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { TweenSystem } from './tween-system';\r\nimport { warnID } from '../core';\r\nimport {\r\n    ActionInterval, sequence, reverseTime, delayTime, spawn, Sequence,\r\n    Spawn, repeat, repeatForever, RepeatForever, ActionCustomUpdate,\r\n} from './actions/action-interval';\r\nimport { removeSelf, show, hide, callFunc, CallFuncCallback } from './actions/action-instant';\r\nimport { ActionUnknownDuration } from './actions/action-unknown-duration';\r\nimport { Action, ActionEnum, FiniteTimeAction } from './actions/action';\r\nimport { ITweenOption } from './export-api';\r\nimport { IInternalTweenOption, TweenAction } from './tween-action';\r\nimport { SetAction } from './set-action';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { Node } from '../scene-graph';\r\nimport type { ActionManager } from './actions/action-manager';\r\n\r\n// https://medium.com/dailyjs/typescript-create-a-condition-based-subset-types-9d902cea5b8c\r\ntype FlagExcludedType<Base, Type> = { [Key in keyof Base]: Base[Key] extends Type ? never : Key };\r\ntype AllowedNames<Base, Type> = FlagExcludedType<Base, Type>[keyof Base];\r\nexport type TweenCustomProgress = (start: any, end: any, current: any, ratio: number) => any;\r\nexport type TweenCustomEasing = ITweenOption['easing'];\r\n\r\ntype ExtendsReturnResults<T, Base, Result1, Result2> = T extends Base ? Result1 : Result2;\r\ntype ExtendsReturnResultOrNever<T, Base, Result> = ExtendsReturnResults<T, Base, Result, never>;\r\n\r\ntype MaybeUnionStringNumber<T> = ExtendsReturnResults<T, string, string | number, T>;\r\ntype StringToNumberOrNever<T> = ExtendsReturnResultOrNever<T, string, string | number>;\r\n\r\nexport interface ITweenCustomPropertyStartParameter<Value> {\r\n    relative: boolean;\r\n    reversed: boolean;\r\n    start: Value;\r\n    end: Value;\r\n}\r\n\r\nexport interface ITweenCustomProperty<Value> {\r\n    value: MaybeUnionStringNumber<Value> | (() => MaybeUnionStringNumber<Value>);\r\n    progress?: TweenCustomProgress;\r\n    easing?: TweenCustomEasing;\r\n    convert?: ExtendsReturnResultOrNever<Value, string, (v: string) => number | string>;   // Supported from v3.8.4\r\n    clone?: ExtendsReturnResultOrNever<Value, object, (v: Value) => Value>; // Supported from v3.8.4\r\n    add?: (a: Value, b: Value) => Value; // Supported from v3.8.4\r\n    sub?: (a: Value, b: Value) => Value; // Supported from v3.8.4\r\n    legacyProgress?: ExtendsReturnResultOrNever<Value, object, boolean>;    // Supported from v3.8.4, the default value is true for compatiblity\r\n    toFixed?: ExtendsReturnResultOrNever<Value, string, number>;            // Supported from v3.8.4\r\n    onStart?: (param: ITweenCustomPropertyStartParameter<Value>) => void;\r\n    onStop?: () => void;\r\n    onComplete?: () => void;\r\n}\r\n\r\ntype KeyPartial<T, K extends keyof T> = { [P in K]?: (T[P] | (() => T[P]) | ITweenCustomProperty<T[P]> | StringToNumberOrNever<T[P]>) };\r\ntype OmitType<Base, Type> = KeyPartial<Base, AllowedNames<Base, Type>>;\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype ConstructorType<T> = OmitType<T, Function>;\r\n\r\ntype TweenWithNodeTargetOrUnknown<T> = T extends Node ? Tween<T> : unknown;\r\n\r\nexport type TweenUpdateCallback<T extends object, Args extends any[]> = (target: T, ratio: number, ...args: Args) => void;\r\nexport type TweenUpdateUntilCallback<T extends object, Args extends any[]> = (target: T, dt: number, ...args: Args) => boolean;\r\n\r\nfunction getActionManager (): ActionManager {\r\n    return TweenSystem.instance.ActionManager;\r\n}\r\n\r\n/**\r\n * @en\r\n * Tween provide a simple and flexible way to action, It's transplanted from cocos creator。\r\n * @zh\r\n * Tween 提供了一个简单灵活的方法来缓动目标，从 creator 移植而来。\r\n * @class Tween\r\n * @param [target]\r\n * @example\r\n * tween(this.node)\r\n *   .to(1, {scale: new Vec3(2, 2, 2), position: new Vec3(5, 5, 5)})\r\n *   .call(() => { console.log('This is a callback'); })\r\n *   .by(1, {scale: new Vec3(-1, -1, -1), position: new Vec3(-5, -5, -5)}, {easing: 'sineOutIn'})\r\n *   .start()\r\n */\r\nexport class Tween<T extends object = any> {\r\n    private _actions: FiniteTimeAction[] = [];\r\n    private _finalAction: ActionInterval | null = null;\r\n    private _target: T | null = null;\r\n    private _tag = ActionEnum.TAG_INVALID;\r\n    private _timeScale = 1;\r\n    private _isBindNodeState = true; // The default value is true which is compatible with Creator 2.x. See 'bindNodeState' method.\r\n\r\n    constructor (target?: T | null) {\r\n        this._target = target === undefined ? null : target;\r\n    }\r\n\r\n    /**\r\n     * @en Set whether to bind the current tween's lifecycle with node target's state. (Supported from v3.8.7)\r\n     * If set it to true :\r\n     * - When the node is activated, the tween will automatically resume.\r\n     * - When the node is deactivated, the tween will automatically pause.\r\n     * - When the node is destroyed, the tween will automatically be destroyed.\r\n     * @zh 设置当前缓动是否需要关联节点状态。如果设置为真，那么节点被激活，缓动会被自动恢复，节点被禁用，缓动会被自动暂停，节点销毁后，缓动会被自动销毁。 (从 v3.8.7 开始支持)\r\n     * @param isBindNodeState @en Whether to associate node state for the current tween. @zh 关联节点状态。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     * @note @en If not set, the default value is true which is compatible with Creator 2.x. If only works on the tween with Node target.\r\n     *       @zh 如果此接口未被调用，为兼容 Creator 2.x，其默认值为 true 。此方法只针对 Node 目标的 tween 有效。\r\n     */\r\n    bindNodeState (isBindNodeState: boolean): Tween<T> {\r\n        this._isBindNodeState = isBindNodeState;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Sets tween tag\r\n     * @zh 设置缓动的标签\r\n     * @method tag\r\n     * @param tag @en The tag set for this tween @zh 为当前缓动设置的标签\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    tag (tag: number): Tween<T> {\r\n        this._tag = tag;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Set the id for previous action\r\n     * @zh 设置前一个动作的 id\r\n     * @param id @en The internal action id to set @zh 内部动作的 id 标识，\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    id (id: number): Tween<T> {\r\n        if (this._actions.length > 0) {\r\n            this._actions[this._actions.length - 1].setId(id);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Insert a tween to this sequence.\r\n     * @zh\r\n     * 插入一个 tween 到队列中。\r\n     * @method then\r\n     * @param other @en The rear tween of this tween @zh 当前缓动的后置缓动\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    then<U extends object = any> (other: Tween<U>): Tween<T> {\r\n        const u = other._union(true);\r\n        if (u) {\r\n            u.setSpeed(other._timeScale);\r\n            this._actions.push(u);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Return a new Tween instance which reverses all actions in the current tween.\r\n     * @zh 返回新的缓动实例，其会翻转当前缓动中的所有动作。\r\n     * @return @en The new tween instance which reverses all actions in the current tween. @zh 新的缓动实例，其会翻转当前缓动中的所有动作。\r\n     * @note @en The returned tween instance is a new instance which is not the current tween instance.\r\n     *       @zh 返回的缓动实例是新的生成的实例，并不是当前缓动实例。\r\n     */\r\n    reverse (): Tween<T>;\r\n\r\n    /**\r\n     * @en Reverse an action by ID in the current tween.\r\n     * @zh 翻转当前缓动中特定标识的动作。\r\n     * @param id @en The ID of the internal action in the current tween to reverse. @zh 要翻转的当前缓动中的动作标识。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    reverse (id: number): Tween<T>;\r\n\r\n    /**\r\n     * @en Reverse an action by ID in a specific tween\r\n     * @zh 翻转特定缓动中特定标识的动作\r\n     * @param otherTween @en The tween in which to find the action by ID\r\n     *                   @zh 根据标识在关联的缓动中查找动作\r\n     * @param id @en The ID of the action to reverse @zh 要翻转的动画标识\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    reverse<U extends object = any> (otherTween: Tween<U>, id?: number): Tween<T>;\r\n\r\n    reverse<U extends object = any> (otherTweenOrId?: Tween<U> | number, id?: number): Tween<T> {\r\n        // Overload 1: reverse()\r\n        if (otherTweenOrId == null && id == null) {\r\n            return this.reverseTween();\r\n        }\r\n\r\n        let tweenForFindAction: Tween | undefined;\r\n        let actionId: number | undefined;\r\n\r\n        if (otherTweenOrId instanceof Tween) {\r\n            // Overload 3: reverse(otherTween: Tween<U>, id? number)\r\n            tweenForFindAction = otherTweenOrId;\r\n            if (id !== undefined) {\r\n                actionId = id;\r\n            }\r\n        } else if (typeof otherTweenOrId === 'number') {\r\n            // Overload 2: reverse(id: number)\r\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n            tweenForFindAction = this;\r\n            actionId = otherTweenOrId;\r\n        }\r\n\r\n        if (tweenForFindAction) {\r\n            const reversedAction = Tween.reverseAction(tweenForFindAction, actionId);\r\n            if (reversedAction) {\r\n                this._actions.push(reversedAction);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private reverseTween (): Tween<T> {\r\n        if (this._actions.length === 0) {\r\n            warnID(16388);\r\n            return this.clone(this._target as T);\r\n        }\r\n        const action = this._union(false); // workerTarget will be updated in the following insertAction\r\n        const r = tween(this._target as T);\r\n        r._timeScale = this._timeScale;\r\n        if (action) r.insertAction(action.reverse());\r\n        return r;\r\n    }\r\n\r\n    private static reverseAction (t: Tween, actionId?: number): FiniteTimeAction | null {\r\n        const actions = t._actions;\r\n        if (actions.length === 0) return null;\r\n\r\n        let action: FiniteTimeAction | null = null;\r\n        let reversedAction: FiniteTimeAction | null = null;\r\n        if (typeof actionId === 'number') {\r\n            action = t.findAction(actionId, actions);\r\n        } else if (t) {\r\n            action = t._union(false);\r\n        }\r\n\r\n        if (action) {\r\n            reversedAction = action.reverse();\r\n            reversedAction._owner = t;\r\n        } else {\r\n            warnID(16391, `${actionId}`);\r\n        }\r\n        return reversedAction;\r\n    }\r\n\r\n    private findAction (id: number, actions: FiniteTimeAction[]): FiniteTimeAction | null {\r\n        let action: FiniteTimeAction | null = null;\r\n        for (let i = 0, len = actions.length; i < len; ++i) {\r\n            action = actions[i];\r\n            if (action.getId() === id) return action;\r\n            if (action instanceof Sequence || action instanceof Spawn) {\r\n                action = action.findAction(id);\r\n                if (action) return action;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Insert an action to this sequence.\r\n     * @param other @en The rear action of this tween @zh 当前缓动的后置缓动\r\n     */\r\n    private insertAction (other: FiniteTimeAction): Tween<T> {\r\n        const action = other.clone();\r\n        this.updateOwnerForAction(action);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    private updateOwnerForAction (action: Action | null): void {\r\n        if (!action) return;\r\n        if (action instanceof Sequence || action instanceof Spawn) {\r\n            action.updateOwner(this);\r\n        } else if (!action._owner) {  // action's owner should never be changed, so only set owner when it's not set yet.\r\n            action._owner = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets tween target.\r\n     * @zh\r\n     * 设置 tween 的 target。\r\n     * @method target\r\n     * @param target @en The target of this tween @zh 当前缓动的目标对象\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    target<U extends object = any> (target: U): Tween<U> {\r\n        (this as unknown as Tween<U>)._target = target;\r\n        return this as unknown as Tween<U>;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the target of the current tween instance.\r\n     * @zh 获取当前缓动的目标对象。\r\n     * @return @en the target of the current tween instance. @zh 当前缓动的目标对象。\r\n     */\r\n    getTarget (): T | null {\r\n        return this._target;\r\n    }\r\n\r\n    /**\r\n     * @en Start tween from a specific time, all actions before the time will be executed and finished immediately.\r\n     * @zh 从指定时间开始执行当前缓动，此时间前的所有缓动将被立马执行完毕。\r\n     * @param time @en The time (unit: seconds) to start to execute the current tween. Default value: 0.\r\n     *             @zh 要执行当前缓动的开始时间，单位为秒。默认值为 0。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    start (time: number = 0): Tween<T> {\r\n        if (!this._target) {\r\n            warnID(16392);\r\n            return this;\r\n        }\r\n        if (this._finalAction) {\r\n            getActionManager().removeAction(this._finalAction);\r\n        }\r\n        const final = this._unionForStart();\r\n        this._finalAction = final;\r\n        if (final) {\r\n            final.setTag(this._tag);\r\n            final.setSpeed(this._timeScale);\r\n            final.setStartTime(time);\r\n            final.setPaused(false); // If a tween was paused, starting the tween again should clear the 'paused' flag for the final action.\r\n            getActionManager().addAction(final, this._target, false, this._isBindNodeState);\r\n        } else {\r\n            warnID(16393);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Stop this tween.\r\n     * @zh\r\n     * 停止当前 tween。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    stop (): Tween<T> {\r\n        if (this._finalAction) {\r\n            // ActionManager.removeAction will not stop action, so stop it before removeAction.\r\n            this._finalAction.stop();\r\n            getActionManager().removeAction(this._finalAction);\r\n            this._finalAction = null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Pause the tween instance.\r\n     * @zh 暂停此缓动实例。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    pause (): Tween<T> {\r\n        if (this._finalAction) {\r\n            this._finalAction.setPaused(true);\r\n        } else {\r\n            warnID(16389);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Resume the tween instance.\r\n     * @zh 恢复此缓动实例。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    resume (): Tween<T> {\r\n        if (this._finalAction) {\r\n            this._finalAction.setPaused(false);\r\n        } else {\r\n            warnID(16390);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Checking whether the current tween instance is running.\r\n     * @zh 检查当前缓动实例是否在运行。\r\n     */\r\n    get running (): boolean {\r\n        if (this._finalAction) {\r\n            return getActionManager().isActionRunning(this._finalAction);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Clone a tween.\r\n     * @zh\r\n     * 克隆当前 tween。\r\n     * @method clone\r\n     * @param target @en The target of clone tween @zh 克隆缓动的目标对象\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    clone (): Tween<T>;\r\n    clone<U extends object = any> (target: U): Tween<U>;\r\n    clone<U extends object = any> (target?: U): Tween<U | T> {\r\n        const action = this._union(false);\r\n        const r = tween<U | T>(target ?? this._target as T);\r\n        r._timeScale = this._timeScale;\r\n        return action ? r.insertAction(action) : r;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Integrate to an action by all previous actions or a range from the specific id to the last one.\r\n     * @zh\r\n     * 将之前所有的动作或者从指定标识的动作开始的所有动作整合为一个顺序动作。\r\n     * @method union\r\n     * @param fromId @en The action with the specific ID to start integrating @zh 指定开始整合的动作标识\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    union (fromId?: number): Tween<T> {\r\n        const unionAll = (): void => {\r\n            const action = this._union(false);\r\n            this._actions.length = 0;\r\n            if (action) this._actions.push(action);\r\n        };\r\n\r\n        if (fromId === undefined) {\r\n            unionAll();\r\n            return this;\r\n        }\r\n\r\n        const actions = this._actions;\r\n        const index = actions.findIndex((action) => action.getId() === fromId);\r\n\r\n        const len = actions.length;\r\n        if (len > 1) {\r\n            const actionsToUnion = actions.splice(index);\r\n            if (actionsToUnion.length === 1) {\r\n                actions.push(actionsToUnion[0]);\r\n            } else {\r\n                actions.push(sequence(actionsToUnion));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add an action which calculates with absolute value.\r\n     * @zh\r\n     * 添加一个对属性进行绝对值计算的 action。\r\n     * @method to\r\n     * @param duration @en Tween time, in seconds @zh 缓动时间，单位为秒\r\n     * @param props @en List of properties of tween @zh 缓动的属性列表\r\n     * @param opts @en Optional functions of tween @zh 可选的缓动功能\r\n     * @param opts.progress @en Interpolation function @zh 缓动的速度插值函数\r\n     * @param opts.easing @en Tween function or a lambda @zh 缓动的曲线函数或lambda表达式\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    to (duration: number, props: ConstructorType<T>, opts?: ITweenOption<T>): Tween<T> {\r\n        const options = (opts || Object.create(null)) as IInternalTweenOption<T>;\r\n        options.relative = false;\r\n        const action = new TweenAction(duration, props, options);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add an action which calculates with relative value.\r\n     * @zh\r\n     * 添加一个对属性进行相对值计算的 action。\r\n     * @method by\r\n     * @param duration @en Tween time, in seconds @zh 缓动时间，单位为秒\r\n     * @param props @en List of properties of tween @zh 缓动的属性列表\r\n     * @param opts @en Optional functions of tween @zh 可选的缓动功能\r\n     * @param [opts.progress]\r\n     * @param [opts.easing]\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    by (duration: number, props: ConstructorType<T>, opts?: ITweenOption<T>): Tween<T> {\r\n        const options = (opts || Object.create(null)) as IInternalTweenOption<T>;\r\n        options.relative = true;\r\n        const action = new TweenAction(duration, props, options);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Add a custom action with constant duration.\r\n     * @zh 添加一个固定时长的自定义动作。\r\n     * @param duration @en The tween time in seconds. @zh 缓动时间，单位为秒。\r\n     * @param cb @en The callback of the current action. @zh 动作回调函数。\r\n     * @param args @en The arguments passed to the callback function. @zh 传递给动作回调函数的参数。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    update<Args extends any[]> (duration: number, cb: TweenUpdateCallback<T, Args>, ...args: Args): Tween<T> {\r\n        const action = new ActionCustomUpdate<T, Args>(duration, cb, args);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Add a custom action with unknown duration. If the callback returns true means this action is finished.\r\n     * @zh 添加一个不确定时长的自定义动作。如果回调函数返回 true，表示当前动作结束。\r\n     * @param cb @en The callback of the current action. @zh 动作回调函数。如果回调函数返回 true，表示当前动作结束。\r\n     * @param args @en The arguments passed to the callback function. @zh 传递给动作回调函数的参数。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    updateUntil<Args extends any[]> (cb: TweenUpdateUntilCallback<T, Args>, ...args: Args): Tween<T> {\r\n        const action = new ActionUnknownDuration<T, Args>(cb, args);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Directly set target properties.\r\n     * @zh\r\n     * 直接设置 target 的属性。\r\n     * @method set\r\n     * @param props @en List of properties of tween @zh 缓动的属性列表\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    set (props: ConstructorType<T>): Tween<T> {\r\n        const action = new SetAction(props);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a delay action.\r\n     * @zh\r\n     * 添加一个延时 action。\r\n     * @method delay\r\n     * @param duration @en Delay time of this tween @zh 当前缓动的延迟时间\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    delay (duration: number): Tween<T> {\r\n        const action = delayTime(duration);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a callback action.\r\n     * @zh\r\n     * 添加一个回调 action。\r\n     * @method call\r\n     * @param callback @en Callback function at the end of this tween @zh 当前缓动结束时的回调函数\r\n     * @param callbackThis @en The this object in callback function @zh 回调函数中的 this 对象\r\n     * @param data @en The Custom data that will be passed to callback @zh 要传递给回调函数的自定义数据\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    call<TCallbackThis, TData> (callback: CallFuncCallback<T, TData>, callbackThis?: TCallbackThis, data?: TData): Tween<T> {\r\n        const action = callFunc(callback, callbackThis, data);\r\n        this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a sequence action.\r\n     * @zh\r\n     * 添加一个队列 action。\r\n     * @method sequence\r\n     * @param args @en All tween that make up the sequence @zh 组成队列的所有缓动\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    sequence (...args: Tween<any>[]): Tween<T> {\r\n        const action = Tween._wrappedSequence(args);\r\n        if (action) this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a parallel action.\r\n     * @zh\r\n     * 添加一个并行 action。\r\n     * @method parallel\r\n     * @param args @en The tween parallel to this tween @zh 与当前缓动并行的缓动\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    parallel (...args: Tween<any>[]): Tween<T> {\r\n        const action = Tween._wrappedParallel(args);\r\n        if (action) this._actions.push(action);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Set the factor that's used to scale time in the animation where 1 = normal speed (the default), 0.5 = half speed, 2 = double speed, etc.\r\n     * @zh 设置动画中使用的缩放时间因子，其中 1 表示正常速度（默认值），0.5 表示减速一半，2 表示加速一倍，等等。\r\n     * @param scale @en The scale factor to set. @zh 要设置的缩放因子。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    timeScale (scale: number): Tween<T> {\r\n        this._timeScale = scale;\r\n        if (this._finalAction) {\r\n            this._finalAction.setSpeed(scale);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Return the scale time factor of the current tween.\r\n     * @zh 返回当前缓动的时间缩放因子。\r\n     * @return @en The scale time factor of the current tween. @zh 当前缓动的时间缩放因子。\r\n     */\r\n    getTimeScale (): number {\r\n        return this._timeScale;\r\n    }\r\n\r\n    /**\r\n     * @en Return the duration of the current tween, its value is constant which means it's determinted at tween's design time\r\n     *     and is not affected by the timeScale of the current tween.\r\n     * @zh 返回当前缓动的总时长，此总时长为缓动的设计总时长，不受当前缓动的 timeScale 值影响。\r\n     * @return @en The duration of the current tween, unit is seconds. @zh 当中缓动的总时长，单位为秒。\r\n     * @note @en Return a valid duration value only after tween was started, otherwise, it returns 0.\r\n     *       @zh 只有在缓动开始后才能返回有效值，否则返回 0。\r\n     */\r\n    get duration (): number {\r\n        if (this._finalAction) {\r\n            return this._finalAction.getDuration();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a repeat action.\r\n     * This action will integrate before actions to a sequence action as their parameters.\r\n     * @zh\r\n     * 添加一个重复 action，这个 action 会将前一个动作作为他的参数。\r\n     * @param repeatTimes @en The repeat times of this tween @zh 重复次数\r\n     * @param embedTween @en Optional, embedded tween of this tween @zh 可选，嵌入缓动\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    repeat (repeatTimes: number, embedTween?: Tween<T>): Tween<T> {\r\n        /** adapter */\r\n        if (repeatTimes === Infinity) {\r\n            return this.repeatForever(embedTween);\r\n        }\r\n\r\n        const actions = this._actions;\r\n        let action: FiniteTimeAction | undefined | null;\r\n\r\n        if (embedTween instanceof Tween) {\r\n            action = embedTween._union(false);\r\n        } else {\r\n            action = actions.pop();\r\n        }\r\n\r\n        if (action) actions.push(repeat(action, repeatTimes));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a repeat forever action.\r\n     * This action will integrate before actions to a sequence action as their parameters.\r\n     * @zh\r\n     * 添加一个永久重复 action，这个 action 会将前一个动作作为他的参数。\r\n     * @method repeatForever\r\n     * @param embedTween @en Optional, embedded tween of this tween @zh 可选，嵌入缓动\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    repeatForever (embedTween?: Tween<T>): Tween<T> {\r\n        const actions = this._actions;\r\n        let action: FiniteTimeAction | undefined | null;\r\n\r\n        if (embedTween instanceof Tween) {\r\n            action = embedTween._union(false);\r\n        } else {\r\n            action = actions.pop();\r\n        }\r\n\r\n        if (action && actions.length !== 0) {\r\n            actions.push(repeat(action, Number.MAX_SAFE_INTEGER));\r\n        } else if (action instanceof ActionInterval) {\r\n            actions.push(repeatForever(action));\r\n        } else {\r\n            warnID(16394);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a reverse time action.\r\n     * This action will integrate before actions to a sequence action as their parameters.\r\n     * @zh\r\n     * 添加一个倒置时间 action，这个 action 会将前一个动作作为他的参数。\r\n     * @method reverseTime\r\n     * @param embedTween @en Optional, embedded tween of this tween @zh 可选，嵌入缓动\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    reverseTime (embedTween?: Tween<T>): Tween<T> {\r\n        const actions = this._actions;\r\n        let action: Action | undefined | null;\r\n\r\n        if (embedTween instanceof Tween) {\r\n            action = embedTween._union(false);\r\n        } else {\r\n            action = actions.pop();\r\n        }\r\n\r\n        if (action instanceof ActionInterval) {\r\n            actions.push(reverseTime(action));\r\n        } else {\r\n            warnID(16395);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a hide action, only for node target.\r\n     * @zh\r\n     * 添加一个隐藏 action，只适用于 target 是节点类型的。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    hide (): TweenWithNodeTargetOrUnknown<T> {\r\n        const isNode = this._target instanceof Node;\r\n        if (isNode) {\r\n            const action = hide();\r\n            this._actions.push(action);\r\n        }\r\n        return this as unknown as TweenWithNodeTargetOrUnknown<T>;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a show action, only for node target.\r\n     * @zh\r\n     * 添加一个显示 action，只适用于 target 是节点类型的。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    show (): TweenWithNodeTargetOrUnknown<T> {\r\n        const isNode = this._target instanceof Node;\r\n        if (isNode) {\r\n            const action = show();\r\n            this._actions.push(action);\r\n        }\r\n        return this as unknown as TweenWithNodeTargetOrUnknown<T>;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a removeSelf action, only for node target.\r\n     * @zh\r\n     * 添加一个移除自己 action，只适用于 target 是节点类型的。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    removeSelf (): TweenWithNodeTargetOrUnknown<T> {\r\n        const isNode = this._target instanceof Node;\r\n        if (isNode) {\r\n            const action = removeSelf(false);\r\n            this._actions.push(action);\r\n        }\r\n        return this as unknown as TweenWithNodeTargetOrUnknown<T>;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Add a destroySelf action, only for node target.\r\n     * @zh\r\n     * 添加一个移除并销毁自己 action，只适用于 target 是节点类型的。\r\n     * @return @en The instance itself for easier chaining. @zh 返回该实例本身，以便于链式调用。\r\n     */\r\n    destroySelf (): TweenWithNodeTargetOrUnknown<T> {\r\n        const isNode = this._target instanceof Node;\r\n        if (isNode) {\r\n            const action = removeSelf(true);\r\n            this._actions.push(action);\r\n        }\r\n        return this as unknown as TweenWithNodeTargetOrUnknown<T>;\r\n    }\r\n\r\n    /**\r\n     * @en Get the count of running tween instances those associate with the target.\r\n     * @zh 获取目标对象关联的正在运行的缓动实例的个数。\r\n     * @param target @en The target to check. @zh 要检查的目标对象。\r\n     * @return @en The count of running tween instances those associate with the target.\r\n     *         @zh 目标对象关联的正在运行的缓动实例的个数。\r\n     */\r\n    static getRunningCount<U extends object = any> (target: U): number {\r\n        return getActionManager().getNumberOfRunningActionsInTarget(target);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Stop all tween instances.\r\n     * @zh\r\n     * 停止所有缓动实例\r\n     */\r\n    static stopAll (): void {\r\n        getActionManager().removeAllActions();\r\n    }\r\n    /**\r\n     * @en\r\n     * Stop all tween instances by tag.\r\n     * @zh\r\n     * 停止指定标签关联的所有缓动实例。\r\n     */\r\n    static stopAllByTag<U extends object = any> (tag: number, target?: U): void {\r\n        getActionManager().removeAllActionsByTag(tag, target);\r\n    }\r\n    /**\r\n     * @en\r\n     * Stop all tween instances associated with the target object.\r\n     * @zh\r\n     * 停止指定对象的关联的所有缓动实例。\r\n     */\r\n    static stopAllByTarget<U extends object = any> (target?: U): void {\r\n        getActionManager().removeAllActionsFromTarget(target);\r\n    }\r\n\r\n    /**\r\n     * @en Pause all tween instances associated with the target object.\r\n     * @zh 暂停目标对象关联的所有缓动实例。\r\n     * @param target @en The target object whose tweens should be paused. @zh 要暂停缓动的目标对象。\r\n     */\r\n    static pauseAllByTarget<U extends object = any> (target: U): void {\r\n        getActionManager().pauseTarget(target);\r\n    }\r\n\r\n    /**\r\n     * @en Resume all tween instances associated with the target object.\r\n     * @zh 恢复目标对象关联的所有缓动实例。\r\n     * @param target @en The target object whose tweens should be resumed. @zh 要恢复缓动的目标对象。\r\n     */\r\n    static resumeAllByTarget<U extends object = any> (target: U): void {\r\n        getActionManager().resumeTarget(target);\r\n    }\r\n\r\n    private _union (needUpdateOwner: boolean): Sequence | null {\r\n        const actions = this._actions;\r\n        if (actions.length === 0) return null;\r\n        const action = sequence(actions);\r\n        if (needUpdateOwner) {\r\n            this.updateOwnerForAction(action);\r\n        }\r\n        return action;\r\n    }\r\n\r\n    private _unionForStart (): ActionInterval | null {\r\n        const actions = this._actions;\r\n        if (actions.length === 0) return null;\r\n        let action: ActionInterval;\r\n        if (actions.length === 1 && actions[0] instanceof RepeatForever) {\r\n            action = actions[0];\r\n        } else {\r\n            action = sequence(actions);\r\n        }\r\n\r\n        return action;\r\n    }\r\n\r\n    private static readonly _tmpArgs: FiniteTimeAction[] = [];\r\n\r\n    private static _tweenToActions<U extends object = any> (args: Tween<U>[]): void {\r\n        const tmpArgs = Tween._tmpArgs;\r\n        tmpArgs.length = 0;\r\n        for (let l = args.length, i = 0; i < l; i++) {\r\n            const t = args[i];\r\n            const action = t._union(true);\r\n            if (action) {\r\n                action.setSpeed(t._timeScale);\r\n                tmpArgs.push(action);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _wrappedSequence<U extends object = any> (args: Tween<U>[]): Sequence | null {\r\n        Tween._tweenToActions(args);\r\n        const ret = sequence(Tween._tmpArgs);\r\n        this._tmpArgs.length = 0;\r\n        return ret;\r\n    }\r\n\r\n    private static _wrappedParallel<U extends object = any> (args: Tween<U>[]): Spawn | null {\r\n        Tween._tweenToActions(args);\r\n        const ret = spawn(Tween._tmpArgs);\r\n        this._tmpArgs.length = 0;\r\n        return ret;\r\n    }\r\n}\r\nlegacyCC.Tween = Tween;\r\n\r\n/**\r\n * @en\r\n * tween is a utility function that helps instantiate Tween instances.\r\n * @zh\r\n * tween 是一个工具函数，帮助实例化 Tween 实例。\r\n * @param target @en The target of the result tween @zh 缓动的目标\r\n * @returns Tween 实例\r\n * @example\r\n * tween(this.node)\r\n *   .to(1, {scale: new Vec3(2, 2, 2), position: new Vec3(5, 5, 5)})\r\n *   .call(() => { console.log('This is a callback'); })\r\n *   .by(1, {scale: new Vec3(-1, -1, -1)}, {easing: 'sineOutIn'})\r\n *   .start()\r\n */\r\nexport function tween<T extends object = any> (target?: T): Tween<T> {\r\n    return new Tween<T>(target);\r\n}\r\nlegacyCC.tween = tween;\r\n\r\n/**\r\n * @en\r\n * tweenUtil is a utility function that helps instantiate Tween instances.\r\n * @zh\r\n * tweenUtil 是一个工具函数，帮助实例化 Tween 实例。\r\n * @deprecated please use `tween` instead.\r\n */\r\nexport function tweenUtil<T extends object = any> (target?: T): Tween<T> {\r\n    warnID(16396);\r\n    return new Tween<T>(target);\r\n}\r\nlegacyCC.tweenUtil = tweenUtil;\r\n"],"names":["_v3_tmp_1","Vec3","_v3_tmp_2","createSplineProperty","mode","knots","spline","value","length","ZERO","progress","start","end","current","ratio","getPoint","clone","v","add","a","b","sub","subtract","onStart","param","relative","reversed","Spline","create","addKnot","reversedLast","i","len","copy","onComplete","onStop","legacyProgress","ActionEnum","_len","arguments","Array","_key","SplineMode","BEZIER","_len2","_key2","CATMULL_ROM","FiniteTimeAction","_Action","_this","call","this","_duration","_inheritsLoose","_proto2","prototype","getDurationScaled","getDuration","setDuration","duration","Action","originalTarget","target","_owner","tag","TAG_INVALID","_id","undefined","_paused","_proto","isDone","startWithTarget","stop","getTarget","setTarget","getOriginalTarget","setOriginalTarget","_getWorkerTarget","_this$_owner","workerTarget","getTag","setTag","setId","id","getId","setPaused","paused","HashElement","actions","actionIndex","currentAction","lock","ActionManager","_hashTargets","Map","_arrayTargets","_currentTarget","_elementPool","_getElement","element","pop","_putElement","push","_onNodeActiveChanged","active","resumeTarget","pauseTarget","_onNodeDestroy","_removeAllActionsFromTarget","_registerNodeEvent","isValid","on","NodeEventType","ACTIVE_CHANGED","NODE_DESTROYED","_unregisterNodeEvent","off","addAction","action","isBindNodeState","get","set","Node","errorID","removeAllActions","locTargets","removeAllActionsFromTarget","offNodeEvent","_deleteHashElement","removeAction","splice","_removeActionByTag","l","_removeActionAtIndex","_removeAllActionsByTag","removeActionByTag","logID","hashTargets","forEach","removeAllActionsByTag","_this2","getActionByTag","getNumberOfRunningActionsInTarget","pauseAllRunningActions","idsWithActions","resumeTargets","targetsToResume","pauseTargets","targetsToPause","isActionRunning","elements","index","indexOf","ret","targets","update","dt","locCurrTarget","elt","isCCObject","step","TweenSystem","exports","_System","actionMgr","_createClass","key","System","ID","instance","director","DirectorEvent","INIT","sys","registerSystem","SystemPriority","MEDIUM","ActionInstant","_FiniteTimeAction","apply","reverse","isUnknownDuration","Show","_ActionInstant","_renderComps","getComponentsInChildren","Renderer","enabled","Hide","toString","_ActionInstant2","_proto3","_ActionInstant3","ToggleVisibility","_proto4","render","RemoveSelf","_ActionInstant4","isNeedCleanUp","_isNeedCleanUp","init","_proto5","removeFromParent","destroy","removeSelf","CallFunc","_ActionInstant5","selector","callbackThis","data","_callbackThis","_callback","_data","initWithFunction","_proto6","callback","execute","getTargetCallback","setTargetCallback","sel","callFunc","selectorTarget","DummyAction","ActionInterval","_FiniteTimeAction2","d","MAX_VALUE","_elapsed","_startTime","_firstTick","_speed","Number","isNaN","initWithDuration","setStartTime","time","getElapsed","macro","FLT_EPSILON","_cloneDecoration","t","getSpeed","setSpeed","speed","sequenceActionWithOneTwo","actionOne","actionTwo","sequence","Sequence","initWithTwoActions","_ActionInterval","_actions","_split","_last","_reversed","_assertThisInitialized","last","prev","locActions","new_t","found","locSplit","locLast","two","one","actionFound","updateOwner","owner","Spawn","findAction","Repeat","_ActionInterval2","times","_this3","_times","_total","_nextDt","_actionInstant","_innerAction","initWithAction","locInnerAction","locDuration","locTimes","locNextDt","setInnerAction","getInnerAction","repeat","RepeatForever","_ActionInterval3","_this4","Infinity","repeatForever","spawnActionWithOneTwo","action1","action2","spawn","_ActionInterval4","_this5","_one","_two","_finished","d1","d2","Math","max","delayTime","foundAction","find","isOneUnknownTime","isTwoUnknownTime","DelayTime","_ActionInterval5","_proto7","ReverseTime","_ActionInterval6","_this6","_other","_proto8","reverseTime","ActionCustomUpdate","_ActionInterval7","cb","args","_this7","_cb","_args","_proto9","concat","ActionUnknownDuration","Error","cclegacy","game","deltaTime","TweenEasingAdapter","easingName","initialChar","charAt","test","arr","replace","toLowerCase","split","str0","str1","TweenOptionChecker","opts","header","message","VERSION","_opts","delay","warn","repeatDelay","interpolation","TweenAction","props","Object","easing","warnID","name","_props","_value$legacyProgress","hasOwnProperty","customEasing","customProgress","customValue","prop","keys","convert","toFixed","valid","_originProps","_loop","_t","property","Ctor","constructor","propertyKeys","getModifiableProperties","k","convertFn","convertToNumber","convertedValue","targetNumValue","startNumValue","easingTime","_prop$toFixed","newCurrent","onUpdate","SetAction","getActionManager","Tween","_finalAction","_target","_tag","_timeScale","_isBindNodeState","bindNodeState","_x","then","other","u","_union","otherTweenOrId","reverseTween","tweenForFindAction","actionId","reversedAction","reverseAction","r","tween","insertAction","updateOwnerForAction","_x2","final","_unionForStart","pause","resume","union","fromId","findIndex","actionsToUnion","to","options","by","updateUntil","_len3","_key3","_wrappedSequence","parallel","_len4","_key4","_wrappedParallel","timeScale","scale","getTimeScale","repeatTimes","embedTween","MAX_SAFE_INTEGER","hide","show","destroySelf","getRunningCount","stopAll","stopAllByTag","stopAllByTarget","pauseAllByTarget","resumeAllByTarget","needUpdateOwner","_tweenToActions","tmpArgs","_tmpArgs","tweenUtil","legacyCC"],"mappings":"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"}