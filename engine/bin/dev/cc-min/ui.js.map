{"version":3,"file":"ui.js","sources":["../../../pal/minigame/non-minigame.ts","../../../cocos/ui/button.ts","../../../cocos/ui/editbox/tabIndexUtil.ts","../../../cocos/ui/editbox/types.ts","../../../cocos/ui/editbox/edit-box-impl-base.ts","../../../cocos/ui/editbox/edit-box.ts","../../../cocos/ui/editbox/edit-box-impl.ts","../../../cocos/ui/layout.ts","../../../cocos/ui/progress-bar.ts","../../../cocos/ui/scroll-bar.ts","../../../cocos/ui/view-group.ts","../../../cocos/ui/scroll-view.ts","../../../cocos/ui/slider.ts","../../../cocos/ui/toggle.ts","../../../cocos/core/data/utils/extends-enum.ts","../../../cocos/ui/toggle-container.ts","../../../cocos/ui/widget.ts","../../../cocos/ui/page-view-indicator.ts","../../../cocos/ui/page-view.ts","../../../cocos/ui/widget-manager.ts","../../../cocos/ui/safe-area.ts","../../../cocos/ui/ui-coordinate-tracker.ts","../../../cocos/ui/block-input-events.ts","../../../cocos/ui/sub-context-view.ts","../../../cocos/ui/deprecated-1.2.0.ts","../../../cocos/ui/deprecated.ts"],"sourcesContent":["/*\r\n Copyright (c) 2022-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { checkPalIntegrity, withImpl } from '../integrity-check';\r\n\r\nconst minigame: any = {};\r\nexport { minigame };\r\n\r\ncheckPalIntegrity<typeof import('pal/minigame')>(withImpl<typeof import('./non-minigame')>());\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, requireComponent, tooltip, displayOrder, type, rangeMin,\r\n    rangeMax, serializable, executeInEditMode } from 'cc.decorator';\r\nimport { DEBUG, EDITOR, EDITOR_NOT_IN_PREVIEW, USE_XR } from 'internal:constants';\r\nimport { SpriteFrame } from '../2d/assets';\r\nimport { Component, EventHandler as ComponentEventHandler } from '../scene-graph';\r\nimport { UITransform, UIRenderer } from '../2d/framework';\r\nimport { EventMouse, EventTouch } from '../input/types';\r\nimport { Color, v3, Vec3 } from '../core/math';\r\nimport { ccenum } from '../core/value-types/enum';\r\nimport { lerp } from '../core/math/utils';\r\nimport { Node } from '../scene-graph/node';\r\nimport { Sprite, SpriteEventType } from '../2d/components/sprite';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { TransformBit } from '../scene-graph/node-enum';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\nimport { XrUIPressEventType } from '../xr/event/xr-event-handle';\r\nimport { warn } from '../core';\r\n\r\nconst _tempColor = new Color();\r\n\r\n/**\r\n * @en Enum for transition type.\r\n *\r\n * @zh 过渡类型。\r\n */\r\nenum Transition {\r\n    /**\r\n     * @en The none type.\r\n     *\r\n     * @zh 不做任何过渡。\r\n     */\r\n    NONE = 0,\r\n\r\n    /**\r\n     * @en The color type.\r\n     *\r\n     * @zh 颜色过渡。\r\n     */\r\n    COLOR = 1,\r\n\r\n    /**\r\n     * @en The sprite type.\r\n     *\r\n     * @zh 精灵过渡。\r\n     */\r\n    SPRITE = 2,\r\n    /**\r\n     * @en The scale type.\r\n     *\r\n     * @zh 缩放过渡。\r\n     */\r\n    SCALE = 3,\r\n}\r\n\r\nccenum(Transition);\r\n\r\nenum State {\r\n    NORMAL,\r\n    HOVER,\r\n    PRESSED,\r\n    DISABLED,\r\n}\r\n\r\n/**\r\n * @en The event types of [[Button]]. All button events are distributed by the owner Node, not the component\r\n * @zh [[Button]] 的事件类型，注意：事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n */\r\nexport enum ButtonEventType {\r\n    /**\r\n     * @event click\r\n     * @param {Event.EventCustom} event\r\n     * @param {Button} button - The Button component.\r\n     */\r\n    CLICK = 'click',\r\n}\r\n\r\n/**\r\n * @en\r\n * Button component. Can be pressed or clicked. Button has 4 Transition types:\r\n *\r\n *   - Button.Transition.NONE   // Button will do nothing\r\n *   - Button.Transition.COLOR  // Button will change target's color\r\n *   - Button.Transition.SPRITE // Button will change target Sprite's sprite\r\n *   - Button.Transition.SCALE  // Button will change target node's scale\r\n *\r\n * The button can bind events (but you must be on the button's node to bind events).<br/>\r\n * The following events can be triggered on all platforms.\r\n *\r\n *  - cc.Node.EventType.TOUCH_START  // Press\r\n *  - cc.Node.EventType.TOUCH_MOVE   // After pressing and moving\r\n *  - cc.Node.EventType.TOUCH_END    // After pressing and releasing\r\n *  - cc.Node.EventType.TOUCH_CANCEL // Press to cancel\r\n *\r\n * The following events are only triggered on the PC platform:\r\n *\r\n *   - cc.Node.EventType.MOUSE_DOWN\r\n *   - cc.Node.EventType.MOUSE_MOVE\r\n *   - cc.Node.EventType.MOUSE_ENTER\r\n *   - cc.Node.EventType.MOUSE_LEAVE\r\n *   - cc.Node.EventType.MOUSE_UP\r\n *\r\n * The developer can get the current clicked node with `event.target` from event object which is passed as parameter\r\n * in the callback function of click event.\r\n *\r\n * @zh\r\n * 按钮组件。可以被按下，或者点击。<br>\r\n * 按钮可以通过修改 Transition 来设置按钮状态过渡的方式：\r\n *\r\n *   - Button.Transition.NONE   // 不做任何过渡\r\n *   - Button.Transition.COLOR  // 进行颜色之间过渡\r\n *   - Button.Transition.SPRITE // 进行精灵之间过渡\r\n *   - Button.Transition.SCALE // 进行缩放过渡\r\n *\r\n * 按钮可以绑定事件（但是必须要在按钮的 Node 上才能绑定事件）。<br/>\r\n * 以下事件可以在全平台上都触发：\r\n *\r\n *   - cc.Node.EventType.TOUCH_START  // 按下时事件\r\n *   - cc.Node.EventType.TOUCH_Move   // 按住移动后事件\r\n *   - cc.Node.EventType.TOUCH_END    // 按下后松开后事件\r\n *   - cc.Node.EventType.TOUCH_CANCEL // 按下取消事件\r\n *\r\n * 以下事件只在 PC 平台上触发：\r\n *\r\n *   - cc.Node.EventType.MOUSE_DOWN  // 鼠标按下时事件\r\n *   - cc.Node.EventType.MOUSE_MOVE  // 鼠标按住移动后事件\r\n *   - cc.Node.EventType.MOUSE_ENTER // 鼠标进入目标事件\r\n *   - cc.Node.EventType.MOUSE_LEAVE // 鼠标离开目标事件\r\n *   - cc.Node.EventType.MOUSE_UP    // 鼠标松开事件\r\n *\r\n * 开发者可以通过获取 **点击事件** 回调函数的参数 event 的 target 属性获取当前点击对象。\r\n *\r\n * @example\r\n * ```ts\r\n * import { log, Node } from 'cc';\r\n * // Add an event to the button.\r\n * button.node.on(Node.EventType.TOUCH_START, (event) => {\r\n *     log(\"This is a callback after the trigger event\");\r\n * });\r\n * // You could also add a click event\r\n * // Note: In this way, you can't get the touch event info, so use it wisely.\r\n * button.node.on(Node.EventType.CLICK, (button) => {\r\n *    //The event is a custom event, you could get the Button component via first argument\r\n * })\r\n * ```\r\n */\r\n@ccclass('cc.Button')\r\n@help('i18n:cc.Button')\r\n@executionOrder(110)\r\n@menu('UI/Button')\r\n@requireComponent(UITransform)\r\n@executeInEditMode\r\nexport class Button extends Component {\r\n    /**\r\n     * @en\r\n     * Transition target.<br/>\r\n     * When Button state changed:\r\n     * - Button.Transition.NONE   // Button will do nothing\r\n     * - Button.Transition.COLOR  // Button will change target's color\r\n     * - Button.Transition.SPRITE // Button will change target Sprite's sprite\r\n     * - Button.Transition.SCALE  // Button will change target node's scale\r\n     *\r\n     * @zh\r\n     * 需要过渡的目标。<br/>\r\n     * 按钮可以通过修改 Transition 来设置按钮状态过渡的方式：\r\n     * - Button.Transition.NONE   // 不做任何过渡\r\n     * - Button.Transition.COLOR  // 进行颜色之间过渡\r\n     * - Button.Transition.SPRITE // 进行 Sprite 之间的过渡\r\n     * - Button.Transition.SCALE // 进行缩放过渡\r\n     */\r\n    @type(Node)\r\n    @displayOrder(0)\r\n    @tooltip('i18n:button.target')\r\n    get target (): Node {\r\n        return this._target || this.node;\r\n    }\r\n\r\n    set target (value) {\r\n        if (this._target === value) {\r\n            return;\r\n        }\r\n        if (this._target) {\r\n            // need to remove the old target event listeners\r\n            this._unregisterTargetEvent(this._target);\r\n        }\r\n        this._target = value;\r\n        this._applyTarget();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether the Button is disabled.\r\n     * If true, the Button will trigger event and do transition.\r\n     *\r\n     * @zh\r\n     * 按钮事件是否被响应，如果为 false，则按钮将被禁用。\r\n     */\r\n    @displayOrder(1)\r\n    @tooltip('i18n:button.interactable')\r\n    get interactable (): boolean {\r\n        return this._interactable;\r\n    }\r\n\r\n    set interactable (value) {\r\n        // if (EDITOR) {\r\n        //     if (value) {\r\n        //         this._previousNormalSprite = this.normalSprite;\r\n        //     } else {\r\n        //         this.normalSprite = this._previousNormalSprite;\r\n        //     }\r\n        // }\r\n        if (this._interactable === value) {\r\n            return;\r\n        }\r\n\r\n        this._interactable = value;\r\n        this._updateState();\r\n\r\n        if (!this._interactable) {\r\n            this._resetState();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    set _resizeToTarget (value: boolean) {\r\n        if (value) {\r\n            this._resizeNodeToTargetNode();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Transition type.\r\n     *\r\n     * @zh\r\n     * 按钮状态改变时过渡方式。\r\n     */\r\n    @type(Transition)\r\n    @displayOrder(2)\r\n    @tooltip('i18n:button.transition')\r\n    get transition (): Transition {\r\n        return this._transition;\r\n    }\r\n\r\n    set transition (value: Transition) {\r\n        if (this._transition === value) {\r\n            return;\r\n        }\r\n\r\n        // Reset to normal data when change transition.\r\n        if (this._transition === Transition.COLOR) {\r\n            this._updateColorTransition(State.NORMAL);\r\n        } else if (this._transition === Transition.SPRITE) {\r\n            this._updateSpriteTransition(State.NORMAL);\r\n        }\r\n        this._transition = value;\r\n        this._updateState();\r\n    }\r\n\r\n    // color transition\r\n\r\n    /**\r\n     * @en\r\n     * Normal state color.\r\n     *\r\n     * @zh\r\n     * 普通状态下按钮所显示的颜色。\r\n     */\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.normal_color')\r\n    // @constget\r\n    get normalColor (): Readonly<Color> {\r\n        return this._normalColor;\r\n    }\r\n\r\n    set normalColor (value) {\r\n        if (this._normalColor === value) {\r\n            return;\r\n        }\r\n\r\n        this._normalColor.set(value);\r\n        this._updateState();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pressed state color.\r\n     *\r\n     * @zh\r\n     * 按下状态时按钮所显示的颜色。\r\n     */\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.pressed_color')\r\n    // @constget\r\n    get pressedColor (): Readonly<Color> {\r\n        return this._pressedColor;\r\n    }\r\n\r\n    set pressedColor (value) {\r\n        if (this._pressedColor === value) {\r\n            return;\r\n        }\r\n\r\n        this._pressedColor.set(value);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Hover state color.\r\n     *\r\n     * @zh\r\n     * 悬停状态下按钮所显示的颜色。\r\n     */\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.hover_color')\r\n    // @constget\r\n    get hoverColor (): Readonly<Color> {\r\n        return this._hoverColor;\r\n    }\r\n\r\n    set hoverColor (value) {\r\n        if (this._hoverColor === value) {\r\n            return;\r\n        }\r\n\r\n        this._hoverColor.set(value);\r\n    }\r\n    /**\r\n     * @en\r\n     * Disabled state color.\r\n     *\r\n     * @zh\r\n     * 禁用状态下按钮所显示的颜色。\r\n     */\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.disabled_color')\r\n    // @constget\r\n    get disabledColor (): Readonly<Color> {\r\n        return this._disabledColor;\r\n    }\r\n\r\n    set disabledColor (value) {\r\n        if (this._disabledColor === value) {\r\n            return;\r\n        }\r\n\r\n        this._disabledColor.set(value);\r\n        this._updateState();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Color and Scale transition duration.\r\n     *\r\n     * @zh\r\n     * 颜色过渡和缩放过渡时所需时间。\r\n     */\r\n    @rangeMin(0)\r\n    @rangeMax(10)\r\n    @displayOrder(4)\r\n    @tooltip('i18n:button.duration')\r\n    get duration (): number {\r\n        return this._duration;\r\n    }\r\n\r\n    set duration (value) {\r\n        if (this._duration === value) {\r\n            return;\r\n        }\r\n\r\n        this._duration = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * When user press the button, the button will zoom to a scale.\r\n     * The final scale of the button equals (button original scale * zoomScale)\r\n     * NOTE: Setting zoomScale less than 1 is not adviced, which could fire the touchCancel event\r\n     * if the touch point is out of touch area after scaling.\r\n     * if you need to do so, you should set target as another background node instead of the button node.\r\n     *\r\n     * @zh\r\n     * 当用户点击按钮后，按钮会缩放到一个值，这个值等于 Button 原始 scale * zoomScale。\r\n     * 注意：不建议 zoomScale 的值小于 1, 否则缩放后如果触摸点在触摸区域外, 则会触发 touchCancel 事件。\r\n     * 如果你需要这么做，你应该把 target 设置为另一个背景节点，而不是按钮节点。\r\n     */\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.zoom_scale')\r\n    get zoomScale (): number {\r\n        return this._zoomScale;\r\n    }\r\n\r\n    set zoomScale (value) {\r\n        if (this._zoomScale === value) {\r\n            return;\r\n        }\r\n\r\n        this._zoomScale = value;\r\n    }\r\n\r\n    // sprite transition\r\n    /**\r\n     * @en\r\n     * Normal state sprite.\r\n     *\r\n     * @zh\r\n     * 普通状态下按钮所显示的 Sprite。\r\n     */\r\n    @type(SpriteFrame)\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.normal_sprite')\r\n    get normalSprite (): SpriteFrame | null {\r\n        return this._normalSprite;\r\n    }\r\n\r\n    set normalSprite (value: SpriteFrame | null) {\r\n        if (this._normalSprite === value) {\r\n            return;\r\n        }\r\n\r\n        this._normalSprite = value;\r\n        const sprite = this.node.getComponent(Sprite);\r\n        if (sprite) {\r\n            sprite.spriteFrame = value;\r\n        }\r\n\r\n        this._updateState();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Pressed state sprite.\r\n     *\r\n     * @zh\r\n     * 按下状态时按钮所显示的 Sprite。\r\n     */\r\n    @type(SpriteFrame)\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.pressed_sprite')\r\n    get pressedSprite (): SpriteFrame | null {\r\n        return this._pressedSprite;\r\n    }\r\n\r\n    set pressedSprite (value: SpriteFrame | null) {\r\n        if (this._pressedSprite === value) {\r\n            return;\r\n        }\r\n\r\n        this._pressedSprite = value;\r\n        this._updateState();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Hover state sprite.\r\n     *\r\n     * @zh\r\n     * 悬停状态下按钮所显示的 Sprite。\r\n     */\r\n    @type(SpriteFrame)\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.hover_sprite')\r\n    get hoverSprite (): SpriteFrame | null {\r\n        return this._hoverSprite;\r\n    }\r\n\r\n    set hoverSprite (value: SpriteFrame | null) {\r\n        if (this._hoverSprite === value) {\r\n            return;\r\n        }\r\n\r\n        this._hoverSprite = value;\r\n        this._updateState();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Disabled state sprite.\r\n     *\r\n     * @zh\r\n     * 禁用状态下按钮所显示的 Sprite。\r\n     */\r\n    @type(SpriteFrame)\r\n    @displayOrder(3)\r\n    @tooltip('i18n:button.disabled_sprite')\r\n    get disabledSprite (): SpriteFrame | null {\r\n        return this._disabledSprite;\r\n    }\r\n\r\n    set disabledSprite (value: SpriteFrame | null) {\r\n        if (this._disabledSprite === value) {\r\n            return;\r\n        }\r\n\r\n        this._disabledSprite = value;\r\n        this._updateState();\r\n    }\r\n\r\n    /**\r\n     * @en Enum for transition type.\r\n     * @zh 过渡类型。\r\n     */\r\n    public static Transition = Transition;\r\n    /**\r\n     * @en The event types of [[Button]]. All button events are distributed by the owner Node, not the component\r\n     * @zh [[Button]] 的事件类型，注意：事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n     */\r\n    public static EventType = ButtonEventType;\r\n    /**\r\n     * @en\r\n     * If Button is clicked, it will trigger event's handler.\r\n     *\r\n     * @zh\r\n     * 按钮的点击事件列表。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @displayOrder(20)\r\n    @tooltip('i18n:button.click_events')\r\n    public clickEvents: ComponentEventHandler[] = [];\r\n    @serializable\r\n    protected _interactable = true;\r\n    @serializable\r\n    protected _transition = Transition.NONE;\r\n    @serializable\r\n    protected _normalColor: Color = Color.WHITE.clone();\r\n    @serializable\r\n    protected _hoverColor: Color = new Color(211, 211, 211, 255);\r\n    @serializable\r\n    protected _pressedColor: Color = Color.WHITE.clone();\r\n    @serializable\r\n    protected _disabledColor: Color = new Color(124, 124, 124, 255);\r\n    @serializable\r\n    protected _normalSprite: SpriteFrame | null = null;\r\n    @serializable\r\n    protected _hoverSprite: SpriteFrame | null = null;\r\n    @serializable\r\n    protected _pressedSprite: SpriteFrame | null = null;\r\n    @serializable\r\n    protected _disabledSprite: SpriteFrame | null = null;\r\n    @serializable\r\n    protected _duration = 0.1;\r\n    @serializable\r\n    protected _zoomScale = 1.2;\r\n    @serializable\r\n    protected _target: Node | null = null;\r\n    private _pressed = false;\r\n    private _hovered = false;\r\n    private _fromColor: Color = new Color();\r\n    private _toColor: Color = new Color();\r\n    private _time = 0;\r\n    private _transitionFinished = true;\r\n    private _fromScale: Vec3 = v3();\r\n    private _toScale: Vec3 = v3();\r\n    private _originalScale: Vec3 | null = null;\r\n    private _sprite: Sprite | null = null;\r\n    private _targetScale: Vec3 = v3();\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public __preload (): void {\r\n        if (!this.target) {\r\n            this.target = this.node;\r\n        }\r\n\r\n        this._applyTarget();\r\n        this._resetState();\r\n    }\r\n\r\n    public onEnable (): void {\r\n        // check sprite frames\r\n        //\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this._registerNodeEvent();\r\n        } else {\r\n            this.node.on(SpriteEventType.SPRITE_FRAME_CHANGED, (comp: Sprite) => {\r\n                if (this._transition === Transition.SPRITE) {\r\n                    this._setCurrentStateSpriteFrame(comp.spriteFrame);\r\n                } else {\r\n                    // avoid serialization data loss when in no-sprite mode\r\n                    this._normalSprite = null;\r\n                    this._hoverSprite = null;\r\n                    this._pressedSprite = null;\r\n                    this._disabledSprite = null;\r\n                }\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    public onDisable (): void {\r\n        this._resetState();\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this._unregisterNodeEvent();\r\n        } else {\r\n            this.node.off(SpriteEventType.SPRITE_FRAME_CHANGED);\r\n        }\r\n    }\r\n\r\n    public onDestroy (): void {\r\n        if (this.target.isValid) {\r\n            this._unregisterTargetEvent(this.target);\r\n        }\r\n    }\r\n\r\n    public update (dt: number): void {\r\n        const target = this.target;\r\n        if (this._transitionFinished || !target) {\r\n            return;\r\n        }\r\n\r\n        if (this._transition !== Transition.COLOR && this._transition !== Transition.SCALE) {\r\n            return;\r\n        }\r\n\r\n        this._time += dt;\r\n        let ratio = 1.0;\r\n        if (this._duration > 0) {\r\n            ratio = this._time / this._duration;\r\n        }\r\n\r\n        if (ratio >= 1) {\r\n            ratio = 1;\r\n        }\r\n\r\n        if (this._transition === Transition.COLOR) {\r\n            const renderComp = target._uiProps.uiComp as UIRenderer;\r\n            Color.lerp(_tempColor, this._fromColor, this._toColor, ratio);\r\n            if (renderComp) {\r\n                renderComp.color = _tempColor;\r\n            }\r\n        } else if (this.transition === Transition.SCALE) {\r\n            target.getScale(this._targetScale);\r\n            this._targetScale.x = lerp(this._fromScale.x, this._toScale.x, ratio);\r\n            this._targetScale.y = lerp(this._fromScale.y, this._toScale.y, ratio);\r\n            target.setScale(this._targetScale);\r\n        }\r\n\r\n        if (ratio === 1) {\r\n            this._transitionFinished = true;\r\n        }\r\n    }\r\n\r\n    protected _resizeNodeToTargetNode (): void {\r\n        if (!this.target) {\r\n            return;\r\n        }\r\n        const targetTrans = this.target._getUITransformComp();\r\n        if (EDITOR && targetTrans) {\r\n            this.node._getUITransformComp()!.setContentSize(targetTrans.contentSize);\r\n        }\r\n    }\r\n\r\n    protected _resetState (): void {\r\n        this._pressed = false;\r\n        this._hovered = false;\r\n        // Restore button status\r\n        const target = this.target;\r\n        if (!target) {\r\n            return;\r\n        }\r\n        const transition = this._transition;\r\n        if (transition === Transition.COLOR && this._interactable) {\r\n            const renderComp = target.getComponent(UIRenderer);\r\n            if (renderComp) {\r\n                renderComp.color = this._normalColor;\r\n            }\r\n        } else if (transition === Transition.SCALE && this._originalScale) {\r\n            target.setScale(this._originalScale);\r\n        }\r\n        this._transitionFinished = true;\r\n    }\r\n\r\n    protected _registerNodeEvent (): void {\r\n        const self = this;\r\n        const node = self.node;\r\n        node.on(NodeEventType.TOUCH_START, self._onTouchBegan, self);\r\n        node.on(NodeEventType.TOUCH_MOVE, self._onTouchMove, self);\r\n        node.on(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n        node.on(NodeEventType.TOUCH_CANCEL, self._onTouchCancel, self);\r\n\r\n        node.on(NodeEventType.MOUSE_ENTER, self._onMouseMoveIn, self);\r\n        node.on(NodeEventType.MOUSE_LEAVE, self._onMouseMoveOut, self);\r\n\r\n        if (USE_XR) {\r\n            node.on(XrUIPressEventType.XRUI_HOVER_ENTERED, self._xrHoverEnter, self);\r\n            node.on(XrUIPressEventType.XRUI_HOVER_EXITED, self._xrHoverExit, self);\r\n            node.on(XrUIPressEventType.XRUI_CLICK, self._xrClick, self);\r\n            node.on(XrUIPressEventType.XRUI_UNCLICK, self._xrUnClick, self);\r\n        }\r\n    }\r\n\r\n    protected _registerTargetEvent (target): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            target.on(SpriteEventType.SPRITE_FRAME_CHANGED, this._onTargetSpriteFrameChanged, this);\r\n            target.on(NodeEventType.COLOR_CHANGED, this._onTargetColorChanged, this);\r\n        }\r\n        target.on(NodeEventType.TRANSFORM_CHANGED, this._onTargetTransformChanged, this);\r\n    }\r\n\r\n    protected _unregisterNodeEvent (): void {\r\n        const self = this;\r\n        const node = self.node;\r\n\r\n        node.off(NodeEventType.TOUCH_START, self._onTouchBegan, self);\r\n        node.off(NodeEventType.TOUCH_MOVE, self._onTouchMove, self);\r\n        node.off(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n        node.off(NodeEventType.TOUCH_CANCEL, self._onTouchCancel, self);\r\n\r\n        node.off(NodeEventType.MOUSE_ENTER, self._onMouseMoveIn, self);\r\n        node.off(NodeEventType.MOUSE_LEAVE, self._onMouseMoveOut, self);\r\n\r\n        if (USE_XR) {\r\n            node.off(XrUIPressEventType.XRUI_HOVER_ENTERED, self._xrHoverEnter, self);\r\n            node.off(XrUIPressEventType.XRUI_HOVER_EXITED, self._xrHoverExit, self);\r\n            node.off(XrUIPressEventType.XRUI_CLICK, self._xrClick, self);\r\n            node.off(XrUIPressEventType.XRUI_UNCLICK, self._xrUnClick, self);\r\n        }\r\n    }\r\n\r\n    protected _unregisterTargetEvent (target): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            target.off(SpriteEventType.SPRITE_FRAME_CHANGED);\r\n            target.off(NodeEventType.COLOR_CHANGED);\r\n        }\r\n        target.off(NodeEventType.TRANSFORM_CHANGED);\r\n    }\r\n\r\n    protected _getTargetSprite (target: Node | null): Sprite | null {\r\n        let sprite: Sprite | null = null;\r\n        if (target) {\r\n            sprite = target.getComponent(Sprite);\r\n        }\r\n        return sprite;\r\n    }\r\n\r\n    protected _applyTarget (): void {\r\n        if (this.target) {\r\n            this._sprite = this._getTargetSprite(this.target);\r\n            if (!this._originalScale) {\r\n                this._originalScale = new Vec3();\r\n            }\r\n            Vec3.copy(this._originalScale, this.target.scale);\r\n            this._registerTargetEvent(this.target);\r\n        }\r\n    }\r\n\r\n    private _onTargetSpriteFrameChanged (comp: Sprite): void {\r\n        if (this._transition === Transition.SPRITE) {\r\n            this._setCurrentStateSpriteFrame(comp.spriteFrame);\r\n        }\r\n    }\r\n\r\n    private _setCurrentStateSpriteFrame (spriteFrame: SpriteFrame | null): void {\r\n        if (!spriteFrame) {\r\n            return;\r\n        }\r\n        switch (this._getButtonState()) {\r\n        case State.NORMAL:\r\n            this._normalSprite = spriteFrame;\r\n            break;\r\n        case State.HOVER:\r\n            this._hoverSprite = spriteFrame;\r\n            break;\r\n        case State.PRESSED:\r\n            this._pressedSprite = spriteFrame;\r\n            break;\r\n        case State.DISABLED:\r\n            this._disabledSprite = spriteFrame;\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    private _onTargetColorChanged (color: Color): void {\r\n        if (this._transition === Transition.COLOR) {\r\n            this._setCurrentStateColor(color);\r\n        }\r\n    }\r\n\r\n    private _setCurrentStateColor (color: Color): void {\r\n        switch (this._getButtonState()) {\r\n        case State.NORMAL:\r\n            this._normalColor = color;\r\n            break;\r\n        case State.HOVER:\r\n            this._hoverColor = color;\r\n            break;\r\n        case State.PRESSED:\r\n            this._pressedColor = color;\r\n            break;\r\n        case State.DISABLED:\r\n            this._disabledColor = color;\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    private _onTargetTransformChanged (transformBit: TransformBit): void {\r\n        // update originalScale\r\n        if ((transformBit & TransformBit.SCALE) && this._originalScale\r\n            && this._transition === Transition.SCALE && this._transitionFinished) {\r\n            Vec3.copy(this._originalScale, this.target.scale);\r\n        }\r\n    }\r\n\r\n    // touch event handler\r\n    protected _onTouchBegan (event?: EventTouch): void {\r\n        if (!this._interactable || !this.enabledInHierarchy) { return; }\r\n\r\n        this._pressed = true;\r\n        this._updateState();\r\n        if (event) {\r\n            event.propagationStopped = true;\r\n        }\r\n    }\r\n\r\n    protected _onTouchMove (event?: EventTouch): void {\r\n        if (!this._interactable || !this.enabledInHierarchy || !this._pressed) { return; }\r\n        // mobile phone will not emit _onMouseMoveOut,\r\n        // so we have to do hit test when touch moving\r\n        if (!event) {\r\n            return;\r\n        }\r\n\r\n        const touch = (event).touch;\r\n        if (!touch) {\r\n            return;\r\n        }\r\n\r\n        const hit = this.node._getUITransformComp()!.hitTest(touch.getLocation(), event.windowId);\r\n\r\n        if (this._transition === Transition.SCALE && this.target && this._originalScale) {\r\n            if (hit) {\r\n                Vec3.copy(this._fromScale, this._originalScale);\r\n                Vec3.multiplyScalar(this._toScale, this._originalScale, this._zoomScale);\r\n                this._transitionFinished = false;\r\n            } else {\r\n                this._time = 0;\r\n                this._transitionFinished = true;\r\n                this.target.setScale(this._originalScale);\r\n            }\r\n        } else {\r\n            let state: State;\r\n            if (hit) {\r\n                state = State.PRESSED;\r\n            } else {\r\n                state = State.NORMAL;\r\n            }\r\n            this._applyTransition(state);\r\n        }\r\n\r\n        if (event) {\r\n            event.propagationStopped = true;\r\n        }\r\n    }\r\n\r\n    protected _onTouchEnded (event?: EventTouch): void {\r\n        if (!this._interactable || !this.enabledInHierarchy) {\r\n            return;\r\n        }\r\n\r\n        if (this._pressed) {\r\n            ComponentEventHandler.emitEvents(this.clickEvents, event);\r\n            this.node.emit(ButtonEventType.CLICK, this);\r\n        }\r\n        this._pressed = false;\r\n        this._updateState();\r\n\r\n        if (event) {\r\n            event.propagationStopped = true;\r\n        }\r\n    }\r\n\r\n    protected _onTouchCancel (event?: EventTouch): void {\r\n        if (!this._interactable || !this.enabledInHierarchy) { return; }\r\n\r\n        this._pressed = false;\r\n        this._updateState();\r\n    }\r\n\r\n    protected _onMouseMoveIn (event?: EventMouse): void {\r\n        if (this._pressed || !this.interactable || !this.enabledInHierarchy) { return; }\r\n        if (this._transition === Transition.SPRITE && !this._hoverSprite) { return; }\r\n\r\n        if (!this._hovered) {\r\n            this._hovered = true;\r\n            this._updateState();\r\n        }\r\n    }\r\n\r\n    protected _onMouseMoveOut (event?: EventMouse): void {\r\n        if (this._hovered) {\r\n            this._hovered = false;\r\n            this._updateState();\r\n        }\r\n    }\r\n\r\n    // state handler\r\n    protected _updateState (): void {\r\n        const state = this._getButtonState();\r\n        this._applyTransition(state);\r\n    }\r\n\r\n    protected _getButtonState (): State {\r\n        let state = State.NORMAL;\r\n        if (!this._interactable) {\r\n            state = State.DISABLED;\r\n        } else if (this._pressed) {\r\n            state = State.PRESSED;\r\n        } else if (this._hovered) {\r\n            state = State.HOVER;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    protected _updateColorTransition (state: State): void {\r\n        const color = this._getColorByState(state);\r\n\r\n        const renderComp = this.target?.getComponent(UIRenderer);\r\n        if (!renderComp) {\r\n            return;\r\n        }\r\n\r\n        if (EDITOR_NOT_IN_PREVIEW || state === State.DISABLED) {\r\n            renderComp.color = color;\r\n            this._transitionFinished = true;\r\n        } else {\r\n            this._fromColor = renderComp.color.clone();\r\n            this._toColor = color;\r\n            this._time = 0;\r\n            this._transitionFinished = false;\r\n        }\r\n    }\r\n\r\n    protected _updateSpriteTransition (state: State): void {\r\n        const sprite = this._getSpriteFrameByState(state);\r\n        if (this._sprite && sprite) {\r\n            this._sprite.spriteFrame = sprite;\r\n        }\r\n    }\r\n\r\n    protected _updateScaleTransition (state: State): void {\r\n        if (!this._interactable) {\r\n            return;\r\n        }\r\n\r\n        if (state === State.PRESSED) {\r\n            this._zoomUp();\r\n        } else {\r\n            this._zoomBack();\r\n        }\r\n    }\r\n\r\n    protected _zoomUp (): void {\r\n        // skip before __preload()\r\n        if (!this._originalScale) {\r\n            return;\r\n        }\r\n        Vec3.copy(this._fromScale, this._originalScale);\r\n        Vec3.multiplyScalar(this._toScale, this._originalScale, this._zoomScale);\r\n        this._time = 0;\r\n        this._transitionFinished = false;\r\n    }\r\n\r\n    protected _zoomBack (): void {\r\n        if (!this.target || !this._originalScale) {\r\n            return;\r\n        }\r\n        Vec3.copy(this._fromScale, this.target.scale);\r\n        Vec3.copy(this._toScale, this._originalScale);\r\n        this._time = 0;\r\n        this._transitionFinished = false;\r\n    }\r\n\r\n    protected _applyTransition (state: State): void {\r\n        const transition = this._transition;\r\n        if (transition === Transition.COLOR) {\r\n            this._updateColorTransition(state);\r\n        } else if (transition === Transition.SPRITE) {\r\n            this._updateSpriteTransition(state);\r\n        } else if (transition === Transition.SCALE) {\r\n            this._updateScaleTransition(state);\r\n        }\r\n    }\r\n\r\n    private _getSpriteFrameByState (state: State): SpriteFrame | null {\r\n        switch (state) {\r\n        case State.NORMAL:\r\n            return this._normalSprite;\r\n        case State.DISABLED:\r\n            return this._disabledSprite;\r\n        case State.HOVER:\r\n            return this.hoverSprite;\r\n        case State.PRESSED:\r\n            return this._pressedSprite;\r\n        default:\r\n            // Should not arrive here.\r\n            if (DEBUG) {\r\n                warn('Button._getColorByState(): wrong state.');\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _getColorByState (state: State): Color {\r\n        switch (state) {\r\n        case State.NORMAL:\r\n            return this._normalColor;\r\n        case State.DISABLED:\r\n            return this._disabledColor;\r\n        case State.HOVER:\r\n            return this._hoverColor;\r\n        case State.PRESSED:\r\n            return this._pressedColor;\r\n        default:\r\n            // Should not arrive here.\r\n            if (DEBUG) {\r\n                warn('Button._getColorByState(): wrong state.');\r\n            }\r\n            return new Color();\r\n        }\r\n    }\r\n\r\n    private _xrHoverEnter (): void {\r\n        if (!USE_XR) return;\r\n        this._onMouseMoveIn();\r\n        this._updateState();\r\n    }\r\n\r\n    private _xrHoverExit (): void {\r\n        if (!USE_XR) return;\r\n        this._onMouseMoveOut();\r\n        if (this._pressed) {\r\n            this._pressed = false;\r\n            this._updateState();\r\n        }\r\n    }\r\n\r\n    private _xrClick (): void {\r\n        if (!USE_XR) return;\r\n        if (!this._interactable || !this.enabledInHierarchy) { return; }\r\n        this._pressed = true;\r\n        this._updateState();\r\n    }\r\n\r\n    private _xrUnClick (): void {\r\n        if (!USE_XR) return;\r\n        if (!this._interactable || !this.enabledInHierarchy) {\r\n            return;\r\n        }\r\n\r\n        if (this._pressed) {\r\n            ComponentEventHandler.emitEvents(this.clickEvents, this);\r\n            this.node.emit(ButtonEventType.CLICK, this);\r\n        }\r\n        this._pressed = false;\r\n        this._updateState();\r\n    }\r\n}\r\n\r\nlegacyCC.Button = Button;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EditBoxImpl } from './edit-box-impl';\r\n\r\nexport class tabIndexUtil {\r\n    public static _tabIndexList: EditBoxImpl[] = [];\r\n\r\n    public static add (editBoxImpl: EditBoxImpl): void {\r\n        const list = this._tabIndexList;\r\n        const index = list.indexOf(editBoxImpl);\r\n        if (index === -1) {\r\n            list.push(editBoxImpl);\r\n        }\r\n    }\r\n\r\n    public static remove (editBoxImpl: EditBoxImpl): void {\r\n        const list = this._tabIndexList;\r\n        const index = list.indexOf(editBoxImpl);\r\n        if (index !== -1) {\r\n            list.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public static resort (): void {\r\n        this._tabIndexList.sort((a: EditBoxImpl, b: EditBoxImpl) => a._delegate!.tabIndex - b._delegate!.tabIndex);\r\n    }\r\n\r\n    public static next (editBoxImpl: EditBoxImpl): void {\r\n        const list = this._tabIndexList;\r\n        const index = list.indexOf(editBoxImpl);\r\n        editBoxImpl.setFocus(false);\r\n        if (index !== -1) {\r\n            const nextImpl = list[index + 1];\r\n            if (nextImpl && nextImpl._delegate!.tabIndex >= 0) {\r\n                nextImpl.setFocus(true);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { Enum } from '../../core/value-types';\r\n/**\r\n * 键盘的返回键类型。\r\n * @readonly\r\n * @enum EditBox.KeyboardReturnType\r\n */\r\nexport enum KeyboardReturnType {\r\n    /**\r\n     * 默认。\r\n     */\r\n    DEFAULT = 0,\r\n    /**\r\n     * 完成类型。\r\n     */\r\n    DONE = 1,\r\n    /**\r\n     * 发送类型。\r\n     */\r\n    SEND = 2,\r\n    /**\r\n     * 搜索类型。\r\n     */\r\n    SEARCH = 3,\r\n    /**\r\n     * 跳转类型。\r\n     */\r\n    GO = 4,\r\n    /**\r\n     * 下一个类型。\r\n     */\r\n    NEXT = 5,\r\n}\r\nEnum(KeyboardReturnType);\r\n\r\n/**\r\n * 输入模式。\r\n * @readonly\r\n * @enum EditBox.InputMode\r\n */\r\nexport enum InputMode {\r\n    /**\r\n     * 用户可以输入任何文本，包括换行符。\r\n     */\r\n    ANY = 0,\r\n    /**\r\n     * 允许用户输入一个电子邮件地址。\r\n     */\r\n    EMAIL_ADDR = 1,\r\n    /**\r\n     * 允许用户输入一个整数值。\r\n     */\r\n    NUMERIC = 2,\r\n    /**\r\n     * 允许用户输入一个电话号码。\r\n     */\r\n    PHONE_NUMBER = 3,\r\n    /**\r\n     * 允许用户输入一个 URL。\r\n     */\r\n    URL = 4,\r\n    /**\r\n     * 允许用户输入一个实数。\r\n     */\r\n    DECIMAL = 5,\r\n    /**\r\n     * 除了换行符以外，用户可以输入任何文本。\r\n     */\r\n    SINGLE_LINE = 6,\r\n}\r\n\r\nEnum(InputMode);\r\n\r\n/**\r\n * 定义了一些用于设置文本显示和文本格式化的标志位。\r\n * @readonly\r\n * @enum EditBox.InputFlag\r\n */\r\nexport enum InputFlag {\r\n    /**\r\n     * 表明输入的文本是保密的数据，任何时候都应该隐藏起来，它隐含了 EDIT_BOX_INPUT_FLAG_SENSITIVE。\r\n     */\r\n    PASSWORD = 0,\r\n    /**\r\n     * 表明输入的文本是敏感数据，它禁止存储到字典或表里面，也不能用来自动补全和提示用户输入。\r\n     * 一个信用卡号码就是一个敏感数据的例子。\r\n     */\r\n    SENSITIVE = 1,\r\n    /**\r\n     * 这个标志用来指定在文本编辑的时候，是否把每一个单词的首字母大写。\r\n     */\r\n    INITIAL_CAPS_WORD = 2,\r\n    /**\r\n     * 这个标志用来指定在文本编辑是否每个句子的首字母大写。\r\n     */\r\n    INITIAL_CAPS_SENTENCE = 3,\r\n    /**\r\n     * 自动把输入的所有字符大写。\r\n     */\r\n    INITIAL_CAPS_ALL_CHARACTERS = 4,\r\n    /**\r\n     * Don't do anything with the input text.\r\n     */\r\n    DEFAULT = 5,\r\n}\r\n\r\nEnum(InputFlag);\r\n","/*\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2012 James Chen\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EditBox } from './edit-box';\r\n\r\nexport class EditBoxImplBase {\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _editing = false;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _delegate: EditBox | null = null;\r\n\r\n    public init (delegate: EditBox): void {\r\n        // To be overrode\r\n    }\r\n\r\n    public onEnable (): void {\r\n        // To be overrode\r\n    }\r\n\r\n    public beforeDraw (): void {\r\n        // To be overrode\r\n    }\r\n\r\n    public onDisable (): void {\r\n        if (this._editing) {\r\n            this.endEditing();\r\n        }\r\n    }\r\n\r\n    public clear (): void {\r\n        this._delegate = null;\r\n    }\r\n\r\n    public setTabIndex (index: number): void {\r\n        // To be overrode\r\n    }\r\n\r\n    public setSize (width: number, height: number): void {\r\n        // To be overrode\r\n    }\r\n\r\n    public setFocus (value): void {\r\n        if (value) {\r\n            this.beginEditing();\r\n        } else {\r\n            this.endEditing();\r\n        }\r\n    }\r\n\r\n    public isFocused (): boolean {\r\n        return this._editing;\r\n    }\r\n\r\n    public beginEditing (): void {\r\n        // To be overrode\r\n    }\r\n\r\n    public endEditing (): void {\r\n        // To be overrode\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executeInEditMode, executionOrder, menu, requireComponent, tooltip, displayOrder, type, serializable } from 'cc.decorator';\r\nimport { EDITOR_NOT_IN_PREVIEW, JSB, MINIGAME, RUNTIME_BASED, USE_XR } from 'internal:constants';\r\nimport { UITransform } from '../../2d/framework';\r\nimport { SpriteFrame } from '../../2d/assets/sprite-frame';\r\nimport { Component } from '../../scene-graph/component';\r\nimport { EventHandler as ComponentEventHandler } from '../../scene-graph/component-event-handler';\r\nimport { Size } from '../../core/math';\r\nimport { EventTouch } from '../../input/types';\r\nimport { Node } from '../../scene-graph/node';\r\nimport { Label, VerticalTextAlignment } from '../../2d/components/label';\r\nimport { Sprite, SpriteEventType } from '../../2d/components/sprite';\r\nimport { EditBoxImpl } from './edit-box-impl';\r\nimport { EditBoxImplBase } from './edit-box-impl-base';\r\nimport { InputFlag, InputMode, KeyboardReturnType } from './types';\r\nimport { legacyCC } from '../../core/global-exports';\r\nimport { NodeEventType } from '../../scene-graph/node-event';\r\nimport { XrKeyboardEventType, XrUIPressEventType } from '../../xr/event/xr-event-handle';\r\nimport { director, DirectorEvent } from '../../game/director';\r\n\r\nconst LEFT_PADDING = 2;\r\n\r\nfunction capitalize (str: string): string {\r\n    return str.replace(/(?:^|\\s)\\S/g, (a) => a.toUpperCase());\r\n}\r\n\r\nfunction capitalizeFirstLetter (str: string): string {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nenum EditBoxEventType {\r\n    EDITING_DID_BEGAN = 'editing-did-began',\r\n    EDITING_DID_ENDED = 'editing-did-ended',\r\n    TEXT_CHANGED = 'text-changed',\r\n    EDITING_RETURN = 'editing-return',\r\n    XR_EDITING_DID_BEGAN = 'xr-editing-did-began',\r\n    XR_EDITING_DID_ENDED = 'xr-editing-did-ended',\r\n}\r\n/**\r\n * @en\r\n * `EditBox` is a component for inputing text, you can use it to gather small amounts of text from users.\r\n *\r\n * @zh\r\n * `EditBox` 组件，用于获取用户的输入文本。\r\n */\r\n\r\n@ccclass('cc.EditBox')\r\n@help('i18n:cc.EditBox')\r\n@executionOrder(110)\r\n@menu('UI/EditBox')\r\n@requireComponent(UITransform)\r\n@executeInEditMode\r\nexport class EditBox extends Component {\r\n    /**\r\n     * @en\r\n     * Input string of EditBox.\r\n     *\r\n     * @zh\r\n     * 输入框的初始输入内容，如果为空则会显示占位符的文本。\r\n     */\r\n    @displayOrder(1)\r\n    @tooltip('i18n:editbox.string')\r\n    get string (): string {\r\n        return this._string;\r\n    }\r\n\r\n    set string (value) {\r\n        if (this._maxLength >= 0 && value.length >= this._maxLength) {\r\n            value = value.slice(0, this._maxLength);\r\n        }\r\n\r\n        if (this._string === value) {\r\n            return;\r\n        }\r\n\r\n        this._string = value;\r\n        this._updateString(value);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The display text of placeholder.\r\n     *\r\n     * @zh\r\n     * 输入框占位符的文本内容。\r\n     */\r\n    @displayOrder(2)\r\n    @tooltip('i18n:editbox.placeholder')\r\n    get placeholder (): string {\r\n        if (!this._placeholderLabel) {\r\n            return '';\r\n        }\r\n        return this._placeholderLabel.string;\r\n    }\r\n\r\n    set placeholder (value) {\r\n        if (this._placeholderLabel) {\r\n            this._placeholderLabel.string = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The Label component attached to the node for EditBox's input text label.\r\n     *\r\n     * @zh\r\n     * 输入框输入文本节点上挂载的 Label 组件对象。\r\n     */\r\n    @type(Label)\r\n    @displayOrder(3)\r\n    @tooltip('i18n:editbox.text_lable')\r\n    get textLabel (): Label | null {\r\n        return this._textLabel;\r\n    }\r\n\r\n    set textLabel (oldValue) {\r\n        if (this._textLabel !== oldValue) {\r\n            this._textLabel = oldValue;\r\n            if (this._textLabel) {\r\n                this._updateTextLabel();\r\n                this._updateLabels();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The Label component attached to the node for EditBox's placeholder text label.\r\n     *\r\n     * @zh\r\n     * 输入框占位符节点上挂载的 Label 组件对象。\r\n     */\r\n    @type(Label)\r\n    @displayOrder(4)\r\n    @tooltip('i18n:editbox.placeholder_label')\r\n    get placeholderLabel (): Label | null {\r\n        return this._placeholderLabel;\r\n    }\r\n\r\n    set placeholderLabel (oldValue) {\r\n        if (this._placeholderLabel !== oldValue) {\r\n            this._placeholderLabel = oldValue;\r\n            if (this._placeholderLabel) {\r\n                this._updatePlaceholderLabel();\r\n                this._updateLabels();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The background image of EditBox.\r\n     *\r\n     * @zh\r\n     * 输入框的背景图片。\r\n     */\r\n    @type(SpriteFrame)\r\n    @displayOrder(5)\r\n    @tooltip('i18n:editbox.backgroundImage')\r\n    get backgroundImage (): SpriteFrame | null {\r\n        return this._backgroundImage;\r\n    }\r\n\r\n    set backgroundImage (value: SpriteFrame | null) {\r\n        if (this._backgroundImage === value) {\r\n            return;\r\n        }\r\n\r\n        this._backgroundImage = value;\r\n        this._ensureBackgroundSprite();\r\n        this._background!.spriteFrame = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set the input flags that are to be applied to the EditBox.\r\n     *\r\n     * @zh\r\n     * 指定输入标志位，可以指定输入方式为密码或者单词首字母大写。\r\n     */\r\n    @type(InputFlag)\r\n    @displayOrder(6)\r\n    @tooltip('i18n:editbox.input_flag')\r\n    get inputFlag (): InputFlag {\r\n        return this._inputFlag;\r\n    }\r\n\r\n    set inputFlag (value) {\r\n        if (this._inputFlag === value) {\r\n            return;\r\n        }\r\n\r\n        this._inputFlag = value;\r\n        this._updateString(this._string);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set the input mode of the edit box.\r\n     * If you pass ANY, it will create a multiline EditBox.\r\n     *\r\n     * @zh\r\n     * 指定输入模式: ANY表示多行输入，其它都是单行输入，移动平台上还可以指定键盘样式。\r\n     */\r\n    @type(InputMode)\r\n    @displayOrder(7)\r\n    @tooltip('i18n:editbox.input_mode')\r\n    get inputMode (): InputMode {\r\n        return this._inputMode;\r\n    }\r\n\r\n    set inputMode (oldValue) {\r\n        if (this._inputMode !== oldValue) {\r\n            this._inputMode = oldValue;\r\n            this._updateTextLabel();\r\n            this._updatePlaceholderLabel();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The return key type of EditBox.\r\n     * Note: it is meaningless for web platforms and desktop platforms.\r\n     *\r\n     * @zh\r\n     * 指定移动设备上面回车按钮的样式。\r\n     * 注意：这个选项对 web 平台与 desktop 平台无效。\r\n     */\r\n    @type(KeyboardReturnType)\r\n    @displayOrder(8)\r\n    @tooltip('i18n:editbox.returnType')\r\n    get returnType (): KeyboardReturnType {\r\n        return this._returnType;\r\n    }\r\n\r\n    set returnType (value: KeyboardReturnType) {\r\n        this._returnType = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The maximize input length of EditBox.\r\n     * - If pass a value less than 0, it won't limit the input number of characters.\r\n     * - If pass 0, it doesn't allow input any characters.\r\n     *\r\n     * @zh\r\n     * 输入框最大允许输入的字符个数。\r\n     * - 如果值为小于 0 的值，则不会限制输入字符个数。\r\n     * - 如果值为 0，则不允许用户进行任何输入。\r\n     */\r\n    @displayOrder(9)\r\n    @tooltip('i18n:editbox.max_length')\r\n    get maxLength (): number {\r\n        return this._maxLength;\r\n    }\r\n    set maxLength (value: number) {\r\n        this._maxLength = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set the tabIndex of the DOM input element (only useful on Web).\r\n     *\r\n     * @zh\r\n     * 修改 DOM 输入元素的 tabIndex（这个属性只有在 Web 上面修改有意义）。\r\n     */\r\n    @displayOrder(10)\r\n    @tooltip('i18n:editbox.tab_index')\r\n    get tabIndex (): number {\r\n        return this._tabIndex;\r\n    }\r\n\r\n    set tabIndex (value) {\r\n        if (this._tabIndex !== value) {\r\n            this._tabIndex = value;\r\n            if (this._impl) {\r\n                this._impl.setTabIndex(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public static _EditBoxImpl = EditBoxImplBase;\r\n    /**\r\n     * @en Keyboard Return Type.\r\n     * @zh 键盘的返回键类型。\r\n     */\r\n    public static KeyboardReturnType = KeyboardReturnType;\r\n    /**\r\n     * @en Defines some flag bits for setting text display and text formatting.\r\n     * @zh 定义了一些用于设置文本显示和文本格式化的标志位。\r\n     */\r\n    public static InputFlag = InputFlag;\r\n    /**\r\n     * @en Input Mode.\r\n     * @zh 输入模式。\r\n     */\r\n    public static InputMode = InputMode;\r\n    /**\r\n     * @en Keyboard event enumeration.\r\n     * @zh 键盘的事件枚举。\r\n     */\r\n    public static EventType = EditBoxEventType;\r\n    /**\r\n     * @en\r\n     * The event handler to be called when EditBox began to edit text.\r\n     *\r\n     * @zh\r\n     * 开始编辑文本输入框触发的事件回调。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @displayOrder(11)\r\n    @tooltip('i18n:editbox.editing_began')\r\n    public editingDidBegan: ComponentEventHandler[] = [];\r\n\r\n    /**\r\n     * @en\r\n     * The event handler to be called when EditBox text changes.\r\n     *\r\n     * @zh\r\n     * 编辑文本输入框时触发的事件回调。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @displayOrder(12)\r\n    @tooltip('i18n:editbox.text_changed')\r\n    public textChanged: ComponentEventHandler[] = [];\r\n\r\n    /**\r\n     * @en\r\n     * The event handler to be called when EditBox edit ends.\r\n     *\r\n     * @zh\r\n     * 结束编辑文本输入框时触发的事件回调。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @displayOrder(13)\r\n    @tooltip('i18n:editbox.editing_ended')\r\n    public editingDidEnded: ComponentEventHandler[] = [];\r\n\r\n    /**\r\n     * @en\r\n     * The event handler to be called when return key is pressed. Windows is not supported.\r\n     *\r\n     * @zh\r\n     * 当用户按下回车按键时的事件回调，目前不支持 windows 平台。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @displayOrder(14)\r\n    @tooltip('i18n:editbox.editing_return')\r\n    public editingReturn: ComponentEventHandler[] = [];\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _impl: EditBoxImplBase | null = null;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _background: Sprite | null = null;\r\n\r\n    @serializable\r\n    protected _textLabel: Label | null = null;\r\n    @serializable\r\n    protected _placeholderLabel: Label | null = null;\r\n    @serializable\r\n    protected  _returnType = KeyboardReturnType.DEFAULT;\r\n    @serializable\r\n    protected  _string = '';\r\n    @serializable\r\n    protected  _tabIndex = 0;\r\n    @serializable\r\n    protected  _backgroundImage: SpriteFrame | null = null;\r\n    @serializable\r\n    protected  _inputFlag = InputFlag.DEFAULT;\r\n    @serializable\r\n    protected  _inputMode = InputMode.ANY;\r\n    @serializable\r\n    protected  _maxLength = 20;\r\n\r\n    private _isLabelVisible = false;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public __preload (): void {\r\n        this._init();\r\n    }\r\n\r\n    public onEnable (): void {\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this._registerEvent();\r\n        }\r\n        this._ensureBackgroundSprite();\r\n        if (this._impl) {\r\n            this._impl.onEnable();\r\n        }\r\n    }\r\n\r\n    private _beforeDraw (): void {\r\n        if (this._impl) {\r\n            this._impl.beforeDraw();\r\n        }\r\n    }\r\n\r\n    public onDisable (): void {\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this._unregisterEvent();\r\n        }\r\n        this._unregisterBackgroundEvent();\r\n        if (this._impl) {\r\n            this._impl.onDisable();\r\n        }\r\n    }\r\n\r\n    public onDestroy (): void {\r\n        director.off(DirectorEvent.BEFORE_DRAW, this._beforeDraw, this);\r\n        if (this._impl) {\r\n            this._impl.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Let the EditBox get focus.\r\n     * @zh 让当前 EditBox 获得焦点。\r\n     */\r\n    public setFocus (): void {\r\n        if (this._impl) {\r\n            this._impl.setFocus(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Let the EditBox get focus.\r\n     * @zh 让当前 EditBox 获得焦点。\r\n     */\r\n    public focus (): void {\r\n        if (this._impl) {\r\n            this._impl.setFocus(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Let the EditBox lose focus.\r\n     * @zh 让当前 EditBox 失去焦点。\r\n     */\r\n    public blur (): void {\r\n        if (this._impl) {\r\n            this._impl.setFocus(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Determine whether EditBox is getting focus or not.\r\n     * @zh 判断 EditBox 是否获得了焦点。\r\n     * Note: only available on Web at the moment.\r\n     */\r\n    public isFocused (): boolean {\r\n        if (this._impl) {\r\n            return this._impl.isFocused();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _editBoxEditingDidBegan (): void {\r\n        ComponentEventHandler.emitEvents(this.editingDidBegan, this);\r\n        this.node.emit(EditBoxEventType.EDITING_DID_BEGAN, this);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     * @param text content filtered by sensitive words.This parameter may be \bundefined.\r\n     * If relevant platform returns desensitized content, it will be passed to developer by EventType.EDITING_DID_ENDED.\r\n     * Now only ByteDance minigame platform\r\n     */\r\n    public _editBoxEditingDidEnded (text?: string): void {\r\n        ComponentEventHandler.emitEvents(this.editingDidEnded, this);\r\n        this.node.emit(EditBoxEventType.EDITING_DID_ENDED, this, text);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _editBoxTextChanged (text: string): void {\r\n        text = this._updateLabelStringStyle(text, true);\r\n        this.string = text;\r\n        ComponentEventHandler.emitEvents(this.textChanged, text, this);\r\n        this.node.emit(EditBoxEventType.TEXT_CHANGED, this);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     * @param text content filtered by sensitive words.This parameter may be undefined.\r\n     * If relevant platform returns desensitized content, it will be passed to developer by EventType.EDITING_RETURN.\r\n     * Now only ByteDance minigame platform\r\n     */\r\n    public _editBoxEditingReturn (text?: string): void {\r\n        ComponentEventHandler.emitEvents(this.editingReturn, this);\r\n        this.node.emit(EditBoxEventType.EDITING_RETURN, this, text);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _showLabels (): void {\r\n        this._isLabelVisible = true;\r\n        this._updateLabels();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _hideLabels (): void {\r\n        this._isLabelVisible = false;\r\n        if (this._textLabel) {\r\n            this._textLabel.node.active = false;\r\n        }\r\n        if (this._placeholderLabel) {\r\n            this._placeholderLabel.node.active = false;\r\n        }\r\n    }\r\n\r\n    protected _onTouchBegan (event: EventTouch): void {\r\n        event.propagationStopped = true;\r\n    }\r\n\r\n    protected _onTouchCancel (event: EventTouch): void {\r\n        event.propagationStopped = true;\r\n    }\r\n\r\n    protected _onTouchEnded (event: EventTouch): void {\r\n        if (this._impl) {\r\n            this._impl.beginEditing();\r\n        }\r\n        event.propagationStopped = true;\r\n    }\r\n\r\n    protected _init (): void {\r\n        this._updatePlaceholderLabel();\r\n        this._updateTextLabel();\r\n        this._isLabelVisible = true;\r\n        this.node.on(NodeEventType.SIZE_CHANGED, this._resizeChildNodes, this);\r\n        director.on(DirectorEvent.BEFORE_DRAW, this._beforeDraw, this);\r\n\r\n        const impl = this._impl = new EditBox._EditBoxImpl();\r\n        impl.init(this);\r\n        this._updateString(this._string);\r\n        this._syncSize();\r\n    }\r\n\r\n    protected _ensureBackgroundSprite (): void {\r\n        if (!this._background) {\r\n            let background = this.node.getComponent(Sprite);\r\n            if (!background) {\r\n                background = this.node.addComponent(Sprite);\r\n            }\r\n            if (background !== this._background) {\r\n                // init background\r\n                background.type = Sprite.Type.SLICED;\r\n                background.spriteFrame = this._backgroundImage;\r\n                this._background = background;\r\n                this._registerBackgroundEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _updateTextLabel (): void {\r\n        let textLabel = this._textLabel;\r\n\r\n        // If textLabel doesn't exist, create one.\r\n        if (!textLabel) {\r\n            let node = this.node.getChildByName('TEXT_LABEL');\r\n            if (!node) {\r\n                node = new Node('TEXT_LABEL');\r\n                node.layer = this.node.layer;\r\n            }\r\n            textLabel = node.getComponent(Label);\r\n            if (!textLabel) {\r\n                textLabel = node.addComponent(Label);\r\n            }\r\n            node.parent = this.node;\r\n            this._textLabel = textLabel;\r\n        }\r\n\r\n        if (this._inputMode === InputMode.ANY) {\r\n            textLabel.verticalAlign = VerticalTextAlignment.TOP;\r\n            textLabel.enableWrapText = true;\r\n        } else {\r\n            textLabel.enableWrapText = false;\r\n        }\r\n        textLabel.string = this._updateLabelStringStyle(this._string);\r\n    }\r\n\r\n    protected _updatePlaceholderLabel (): void {\r\n        let placeholderLabel = this._placeholderLabel;\r\n\r\n        // If placeholderLabel doesn't exist, create one.\r\n        if (!placeholderLabel) {\r\n            let node = this.node.getChildByName('PLACEHOLDER_LABEL');\r\n            if (!node) {\r\n                node = new Node('PLACEHOLDER_LABEL');\r\n                node.layer = this.node.layer;\r\n            }\r\n            placeholderLabel = node.getComponent(Label);\r\n            if (!placeholderLabel) {\r\n                placeholderLabel = node.addComponent(Label);\r\n            }\r\n            node.parent = this.node;\r\n            this._placeholderLabel = placeholderLabel;\r\n        }\r\n\r\n        if (this._inputMode === InputMode.ANY) {\r\n            placeholderLabel.enableWrapText = true;\r\n        } else {\r\n            placeholderLabel.enableWrapText = false;\r\n        }\r\n        placeholderLabel.string = this.placeholder;\r\n    }\r\n\r\n    protected _syncSize (): void {\r\n        const trans = this.node._getUITransformComp()!;\r\n        const size = trans.contentSize;\r\n\r\n        if (this._background) {\r\n            const bgTrans = this._background.node._getUITransformComp()!;\r\n            bgTrans.anchorPoint = trans.anchorPoint;\r\n            bgTrans.setContentSize(size);\r\n        }\r\n\r\n        this._updateLabelPosition(size);\r\n        if (this._impl) {\r\n            this._impl.setSize(size.width, size.height);\r\n        }\r\n    }\r\n\r\n    protected _updateLabels (): void {\r\n        if (this._isLabelVisible) {\r\n            const content = this._string;\r\n            if (this._textLabel) {\r\n                this._textLabel.node.active = (content !== '');\r\n            }\r\n            if (this._placeholderLabel) {\r\n                this._placeholderLabel.node.active = (content === '');\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _updateString (text: string): void {\r\n        const textLabel = this._textLabel;\r\n        // Not inited yet\r\n        if (!textLabel) {\r\n            return;\r\n        }\r\n\r\n        let displayText = text;\r\n        if (displayText) {\r\n            displayText = this._updateLabelStringStyle(displayText);\r\n        }\r\n\r\n        textLabel.string = displayText;\r\n\r\n        this._updateLabels();\r\n    }\r\n\r\n    protected _updateLabelStringStyle (text: string, ignorePassword = false): string {\r\n        const inputFlag = this._inputFlag;\r\n        if (!ignorePassword && inputFlag === InputFlag.PASSWORD) {\r\n            let passwordString = '';\r\n            const len = text.length;\r\n            for (let i = 0; i < len; ++i) {\r\n                passwordString += '\\u25CF';\r\n            }\r\n            text = passwordString;\r\n        } else if (inputFlag === InputFlag.INITIAL_CAPS_ALL_CHARACTERS) {\r\n            text = text.toUpperCase();\r\n        } else if (inputFlag === InputFlag.INITIAL_CAPS_WORD) {\r\n            text = capitalize(text);\r\n        } else if (inputFlag === InputFlag.INITIAL_CAPS_SENTENCE) {\r\n            text = capitalizeFirstLetter(text);\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    protected _registerEvent (): void {\r\n        const self = this;\r\n        const node = self.node;\r\n        node.on(NodeEventType.TOUCH_START, self._onTouchBegan, self);\r\n        node.on(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n\r\n        if (USE_XR) {\r\n            node.on(XrUIPressEventType.XRUI_UNCLICK, self._xrUnClick, self);\r\n            node.on(XrKeyboardEventType.XR_KEYBOARD_INPUT, self._xrKeyBoardInput, self);\r\n        }\r\n    }\r\n\r\n    protected _unregisterEvent (): void {\r\n        const self = this;\r\n        const node = self.node;\r\n        node.off(NodeEventType.TOUCH_START, self._onTouchBegan, self);\r\n        node.off(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n\r\n        if (USE_XR) {\r\n            node.off(XrUIPressEventType.XRUI_UNCLICK, self._xrUnClick, self);\r\n            node.off(XrKeyboardEventType.XR_KEYBOARD_INPUT, self._xrKeyBoardInput, self);\r\n        }\r\n    }\r\n\r\n    private _onBackgroundSpriteFrameChanged (): void {\r\n        if (!this._background) {\r\n            return;\r\n        }\r\n        this.backgroundImage = this._background.spriteFrame;\r\n    }\r\n\r\n    private _registerBackgroundEvent (): void {\r\n        const node = this._background && this._background.node;\r\n        node?.on(SpriteEventType.SPRITE_FRAME_CHANGED, this._onBackgroundSpriteFrameChanged, this);\r\n    }\r\n\r\n    private _unregisterBackgroundEvent (): void {\r\n        const node = this._background && this._background.node;\r\n        node?.off(SpriteEventType.SPRITE_FRAME_CHANGED, this._onBackgroundSpriteFrameChanged, this);\r\n    }\r\n\r\n    protected _updateLabelPosition (size: Size): void {\r\n        const trans = this.node._getUITransformComp()!;\r\n        const offX = -trans.anchorX * trans.width;\r\n        const offY = -trans.anchorY * trans.height;\r\n\r\n        const placeholderLabel = this._placeholderLabel;\r\n        const textLabel = this._textLabel;\r\n        if (textLabel) {\r\n            textLabel.node._getUITransformComp()!.setContentSize(size.width - LEFT_PADDING, size.height);\r\n            textLabel.node.setPosition(offX + LEFT_PADDING, offY + size.height, textLabel.node.position.z);\r\n            if (this._inputMode === InputMode.ANY) {\r\n                textLabel.verticalAlign = VerticalTextAlignment.TOP;\r\n            }\r\n            textLabel.enableWrapText = this._inputMode === InputMode.ANY;\r\n        }\r\n\r\n        if (placeholderLabel) {\r\n            placeholderLabel.node._getUITransformComp()!.setContentSize(size.width - LEFT_PADDING, size.height);\r\n            placeholderLabel.node.setPosition(offX + LEFT_PADDING, offY + size.height, placeholderLabel.node.position.z);\r\n            placeholderLabel.enableWrapText = this._inputMode === InputMode.ANY;\r\n        }\r\n    }\r\n\r\n    protected _resizeChildNodes (): void {\r\n        const trans = this.node._getUITransformComp()!;\r\n        const textLabelNode = this._textLabel && this._textLabel.node;\r\n        if (textLabelNode) {\r\n            textLabelNode.setPosition(-trans.width / 2, trans.height / 2, textLabelNode.position.z);\r\n            textLabelNode._getUITransformComp()!.setContentSize(trans.contentSize);\r\n        }\r\n        const placeholderLabelNode = this._placeholderLabel && this._placeholderLabel.node;\r\n        if (placeholderLabelNode) {\r\n            placeholderLabelNode.setPosition(-trans.width / 2, trans.height / 2, placeholderLabelNode.position.z);\r\n            placeholderLabelNode._getUITransformComp()!.setContentSize(trans.contentSize);\r\n        }\r\n        const backgroundNode = this._background && this._background.node;\r\n        if (backgroundNode) {\r\n            backgroundNode._getUITransformComp()!.setContentSize(trans.contentSize);\r\n        }\r\n\r\n        this._syncSize();\r\n    }\r\n\r\n    protected _xrUnClick (): void {\r\n        if (!USE_XR) return;\r\n        this.node.emit(EditBoxEventType.XR_EDITING_DID_BEGAN, this._maxLength, this.string);\r\n    }\r\n\r\n    protected _xrKeyBoardInput (str: string): void {\r\n        if (!USE_XR) return;\r\n        this.string = str;\r\n    }\r\n}\r\n\r\n// this equals to sys.isBrowser\r\n// now we have no web-adapter yet\r\nif (typeof window === 'object' && typeof document === 'object' && !MINIGAME && !JSB && !RUNTIME_BASED) {\r\n    EditBox._EditBoxImpl = EditBoxImpl;\r\n}\r\n\r\n/**\r\n * @en if you don't need the EditBox and it isn't in any running Scene, you should\r\n * call the destroy method on this component or the associated node explicitly.\r\n * Otherwise, the created DOM element won't be removed from web page.\r\n * @zh\r\n * 如果你不再使用 EditBox，并且组件未添加到场景中，那么你必须手动对组件或所在节点调用 destroy。\r\n * 这样才能移除网页上的 DOM 节点，避免 Web 平台内存泄露。\r\n * @example\r\n * ```\r\n * editbox.node.parent = null;  // or  editbox.node.removeFromParent(false);\r\n * // when you don't need editbox anymore\r\n * editbox.node.destroy();\r\n * ```\r\n * @return {Boolean} whether it is the first time the destroy being called\r\n */\r\n\r\nlegacyCC.internal.EditBox = EditBox;\r\n","/*\r\n Copyright (c) 2011-2012 cocos2d-x.org\r\n Copyright (c) 2012 James Chen\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { HTML5 } from 'internal:constants';\r\nimport { BitmapFont } from '../../2d/assets';\r\nimport { director } from '../../game/director';\r\nimport { game } from '../../game';\r\nimport { Mat4, Vec3, visibleRect, sys } from '../../core';\r\nimport { view, View } from '../view';\r\nimport { KeyCode } from '../../input/types';\r\nimport { contains } from '../../core/utils/misc';\r\nimport { Label } from '../../2d/components/label';\r\nimport { EditBox } from './edit-box';\r\nimport { tabIndexUtil } from './tabIndexUtil';\r\nimport { InputFlag, InputMode, KeyboardReturnType } from './types';\r\nimport { EditBoxImplBase } from './edit-box-impl-base';\r\nimport { BrowserType, OS } from '../../../pal/system-info/enum-type';\r\nimport { ccwindow } from '../../core/global-exports';\r\n\r\nconst ccdocument = ccwindow.document;\r\n\r\n// https://segmentfault.com/q/1010000002914610\r\nconst SCROLLY = 40;\r\nconst LEFT_PADDING = 2;\r\nconst DELAY_TIME = 400;\r\n\r\nconst _matrix = new Mat4();\r\nconst _matrix_temp = new Mat4();\r\nconst _vec3 = new Vec3();\r\n\r\nlet _currentEditBoxImpl: EditBoxImpl | null = null;\r\n\r\nlet _domCount = 0;\r\n\r\nexport class EditBoxImpl extends EditBoxImplBase {\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _delegate: EditBox | null = null;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _inputMode: InputMode = -1 as InputMode;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _inputFlag: InputFlag = -1 as InputFlag;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _returnType: KeyboardReturnType = -1 as KeyboardReturnType;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public __eventListeners: any = {};\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public __autoResize = false;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public __orientationChanged: any;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _edTxt: HTMLInputElement | HTMLTextAreaElement | null = null;\r\n    private _isTextArea = false;\r\n\r\n    private _textLabelFont = null;\r\n    private _textLabelFontSize: number | null = null;\r\n    private _textLabelFontColor = null;\r\n    private _textLabelAlign = null;\r\n    private _placeholderLabelFont = null;\r\n    private _placeholderLabelFontSize: number | null = null;\r\n    private _placeholderLabelFontColor = null;\r\n    private _placeholderLabelAlign = null;\r\n    private _placeholderLineHeight = null;\r\n    private _placeholderStyleSheet: HTMLStyleElement | null = null;\r\n    private _domId = `EditBoxId_${++_domCount}`;\r\n    private _forceUpdate: boolean = false;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public init (delegate: EditBox): void {\r\n        if (!HTML5) return;\r\n        if (!delegate) {\r\n            return;\r\n        }\r\n\r\n        this._delegate = delegate;\r\n        if (delegate.inputMode === InputMode.ANY) {\r\n            this._createTextArea();\r\n        } else {\r\n            this._createInput();\r\n        }\r\n\r\n        tabIndexUtil.add(this);\r\n        this.setTabIndex(delegate.tabIndex);\r\n        this._initStyleSheet();\r\n        this._registerEventListeners();\r\n        this._addDomToGameContainer();\r\n        View.instance.on('canvas-resize', this._resize, this);\r\n        screenAdapter.on('window-resize', this._resize, this);\r\n    }\r\n\r\n    public clear (): void {\r\n        if (!HTML5) return;\r\n        View.instance.off('canvas-resize', this._resize, this);\r\n        screenAdapter.off('window-resize', this._resize, this);\r\n        this._removeEventListeners();\r\n        this._removeDomFromGameContainer();\r\n\r\n        tabIndexUtil.remove(this);\r\n\r\n        // clear while editing\r\n        if (_currentEditBoxImpl === this) {\r\n            _currentEditBoxImpl = null;\r\n        }\r\n\r\n        this._delegate = null;\r\n    }\r\n\r\n    private _resize (): void {\r\n        this._forceUpdate = true;\r\n    }\r\n\r\n    // The beforeDraw function should be used here.\r\n    // Because many attributes are modified after the update is executed,\r\n    // this can lead to problems with incorrect coordinates.\r\n    public beforeDraw (): void {\r\n        if (!HTML5) return;\r\n        const node = this._delegate!.node;\r\n        if (!node.hasChangedFlags && !this._forceUpdate) {\r\n            return;\r\n        }\r\n        this._forceUpdate = false;\r\n        this._updateMatrix();\r\n    }\r\n\r\n    public setTabIndex (index: number): void {\r\n        if (!HTML5) return;\r\n        this._edTxt!.tabIndex = index;\r\n        tabIndexUtil.resort();\r\n    }\r\n\r\n    public setSize (width: number, height: number): void {\r\n        if (!HTML5) return;\r\n        const elem = this._edTxt;\r\n        if (elem) {\r\n            elem.style.width = `${width}px`;\r\n            elem.style.height = `${height}px`;\r\n        }\r\n    }\r\n\r\n    public beginEditing (): void {\r\n        if (!HTML5) return;\r\n        if (_currentEditBoxImpl && _currentEditBoxImpl !== this) {\r\n            _currentEditBoxImpl.setFocus(false);\r\n        }\r\n\r\n        this._editing = true;\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        _currentEditBoxImpl = this;\r\n        this._delegate!._editBoxEditingDidBegan();\r\n        this._showDom();\r\n        this._edTxt!.focus();\r\n    }\r\n\r\n    public endEditing (): void {\r\n        if (!HTML5) return;\r\n        this._edTxt!.blur();\r\n    }\r\n\r\n    private _createInput (): void {\r\n        if (!HTML5) return;\r\n        this._isTextArea = false;\r\n        this._edTxt = ccdocument.createElement('input');\r\n    }\r\n\r\n    private _createTextArea (): void {\r\n        if (!HTML5) return;\r\n        this._isTextArea = true;\r\n        this._edTxt = ccdocument.createElement('textarea');\r\n    }\r\n\r\n    private _addDomToGameContainer (): void {\r\n        if (!HTML5) return;\r\n        if (game.container && this._edTxt) {\r\n            game.container.appendChild(this._edTxt);\r\n            ccdocument.head.appendChild(this._placeholderStyleSheet!);\r\n        }\r\n    }\r\n\r\n    private _removeDomFromGameContainer (): void {\r\n        if (!HTML5) return;\r\n        const hasElem = contains(game.container, this._edTxt);\r\n        if (hasElem && this._edTxt) {\r\n            game.container!.removeChild(this._edTxt);\r\n        }\r\n        const hasStyleSheet = contains(ccdocument.head, this._placeholderStyleSheet);\r\n        if (hasStyleSheet) {\r\n            ccdocument.head.removeChild(this._placeholderStyleSheet!);\r\n        }\r\n\r\n        this._edTxt = null;\r\n        this._placeholderStyleSheet = null;\r\n    }\r\n\r\n    private _showDom (): void {\r\n        if (!HTML5) return;\r\n        this._updateMaxLength();\r\n        this._updateInputType();\r\n        this._updateStyleSheet();\r\n        if (this._edTxt && this._delegate) {\r\n            this._edTxt.style.display = '';\r\n            this._delegate._hideLabels();\r\n        }\r\n        if (sys.isMobile) {\r\n            this._showDomOnMobile();\r\n        }\r\n    }\r\n\r\n    private _hideDom (): void {\r\n        if (!HTML5) return;\r\n        const elem = this._edTxt;\r\n        if (elem && this._delegate) {\r\n            elem.style.display = 'none';\r\n            this._delegate._showLabels();\r\n        }\r\n        if (sys.isMobile) {\r\n            this._hideDomOnMobile();\r\n        }\r\n    }\r\n\r\n    private _showDomOnMobile (): void {\r\n        if (!HTML5) return;\r\n        if (sys.os !== OS.ANDROID && sys.os !== OS.OHOS) {\r\n            return;\r\n        }\r\n\r\n        screenAdapter.handleResizeEvent = false;\r\n        this._adjustWindowScroll();\r\n    }\r\n\r\n    private _hideDomOnMobile (): void {\r\n        if (!HTML5) return;\r\n        if (sys.os === OS.ANDROID || sys.os === OS.OHOS) {\r\n            screenAdapter.handleResizeEvent = true;\r\n        }\r\n\r\n        this._scrollBackWindow();\r\n    }\r\n\r\n    private _isElementInViewport (): boolean {\r\n        if (!HTML5) return false;\r\n        if (this._edTxt) {\r\n            const rect = this._edTxt.getBoundingClientRect();\r\n\r\n            return (\r\n                rect.top >= 0 && rect.left >= 0\r\n                && rect.bottom <= (ccwindow.innerHeight || ccdocument.documentElement.clientHeight)\r\n                && rect.right <= (ccwindow.innerWidth || ccdocument.documentElement.clientWidth)\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _adjustWindowScroll (): void {\r\n        if (!HTML5) return;\r\n        setTimeout(() => {\r\n            if (ccwindow.scrollY < SCROLLY && !this._isElementInViewport()) {\r\n                this._edTxt!.scrollIntoView({ block: 'start', inline: 'nearest', behavior: 'smooth' });\r\n            }\r\n        }, DELAY_TIME);\r\n    }\r\n\r\n    private _scrollBackWindow (): void {\r\n        if (!HTML5) return;\r\n        setTimeout(() => {\r\n            if (sys.browserType === BrowserType.WECHAT && sys.os === OS.IOS) {\r\n                if (ccwindow.top) {\r\n                    ccwindow.top.scrollTo(0, 0);\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            ccwindow.scrollTo(0, 0);\r\n        }, DELAY_TIME);\r\n    }\r\n\r\n    private _updateMatrix (): void {\r\n        if (!HTML5) return;\r\n        if (!this._edTxt) {\r\n            return;\r\n        }\r\n\r\n        const node = this._delegate!.node;\r\n        let scaleX = view.getScaleX();\r\n        let scaleY = view.getScaleY();\r\n        const viewport = view.getViewportRect();\r\n        // TODO: implement editBox in PAL\r\n        const dpr = screenAdapter.devicePixelRatio;\r\n\r\n        node.getWorldMatrix(_matrix);\r\n        const transform = node._getUITransformComp();\r\n        if (transform) {\r\n            Vec3.set(_vec3, -transform.anchorX * transform.width, -transform.anchorY * transform.height, _vec3.z);\r\n            Mat4.transform(_matrix, _matrix, _vec3);\r\n        }\r\n\r\n        if (!node._getUITransformComp()) {\r\n            return;\r\n        }\r\n\r\n        const camera = director.root!.batcher2D.getFirstRenderCamera(node);\r\n        if (!camera) return;\r\n\r\n        camera.node.getWorldRT(_matrix_temp);\r\n        const m12 = _matrix_temp.m12;\r\n        const m13 = _matrix_temp.m13;\r\n        const center = visibleRect.center;\r\n        _matrix_temp.m12 = center.x - (_matrix_temp.m00 * m12 + _matrix_temp.m04 * m13);\r\n        _matrix_temp.m13 = center.y - (_matrix_temp.m01 * m12 + _matrix_temp.m05 * m13);\r\n\r\n        scaleX /= dpr;\r\n        scaleY /= dpr;\r\n\r\n        Vec3.set(_vec3, scaleX, scaleY, 1);\r\n        Mat4.scale(_matrix_temp, _matrix_temp, _vec3);\r\n\r\n        const container = game.container;\r\n        let offsetX = parseInt((container && container.style.paddingLeft) || '0');\r\n        offsetX += viewport.x / dpr;\r\n        let offsetY = parseInt((container && container.style.paddingBottom) || '0');\r\n        offsetY += viewport.y / dpr;\r\n        _matrix_temp.m12 += offsetX;\r\n        _matrix_temp.m13 += offsetY;\r\n\r\n        Mat4.multiply(_matrix_temp, _matrix_temp, _matrix);\r\n\r\n        const a = _matrix_temp.m00;\r\n        const b = _matrix_temp.m01;\r\n        const c = _matrix_temp.m04;\r\n        const d = _matrix_temp.m05;\r\n\r\n        const tx = _matrix_temp.m12;\r\n        const ty = _matrix_temp.m13;\r\n\r\n        const matrix = `matrix(${a},${-b},${-c},${d},${tx},${-ty})`;\r\n        this._edTxt.style.transform = matrix;\r\n        this._edTxt.style['-webkit-transform'] = matrix;\r\n        this._edTxt.style['transform-origin'] = '0px 100% 0px';\r\n        this._edTxt.style['-webkit-transform-origin'] = '0px 100% 0px';\r\n    }\r\n\r\n    private _updateInputType (): void {\r\n        if (!HTML5) return;\r\n        const delegate = this._delegate;\r\n        const inputMode = delegate!.inputMode;\r\n        const inputFlag = delegate!.inputFlag;\r\n        const returnType = delegate!.returnType;\r\n        let elem = this._edTxt;\r\n\r\n        if (this._inputMode === inputMode\r\n            && this._inputFlag === inputFlag\r\n            && this._returnType === returnType) {\r\n            return;\r\n        }\r\n\r\n        // update cache\r\n        this._inputMode = inputMode;\r\n        this._inputFlag = inputFlag;\r\n        this._returnType = returnType;\r\n\r\n        // FIX ME: TextArea actually dose not support password type.\r\n        if (this._isTextArea) {\r\n            // input flag\r\n            let transform = 'none';\r\n            if (inputFlag === InputFlag.INITIAL_CAPS_ALL_CHARACTERS) {\r\n                transform = 'uppercase';\r\n            } else if (inputFlag === InputFlag.INITIAL_CAPS_WORD) {\r\n                transform = 'capitalize';\r\n            }\r\n            elem!.style.textTransform = transform;\r\n            return;\r\n        }\r\n\r\n        elem = elem as HTMLInputElement;\r\n        // begin to updateInputType\r\n        if (inputFlag === InputFlag.PASSWORD) {\r\n            elem.type = 'password';\r\n            elem.style.textTransform = 'none';\r\n            return;\r\n        }\r\n\r\n        // input mode\r\n        let type = elem.type;\r\n        if (inputMode === InputMode.EMAIL_ADDR) {\r\n            type = 'email';\r\n        } else if (inputMode === InputMode.NUMERIC) {\r\n            type = 'number';\r\n        } else if (inputMode === InputMode.DECIMAL) {\r\n            type = 'digit';\r\n        } else if (inputMode === InputMode.PHONE_NUMBER) {\r\n            type = 'tel';\r\n            elem.addEventListener('wheel', () => false);\r\n        } else if (inputMode === InputMode.URL) {\r\n            type = 'url';\r\n        } else {\r\n            type = 'text';\r\n\r\n            if (returnType === KeyboardReturnType.SEARCH) {\r\n                type = 'search';\r\n            }\r\n        }\r\n        elem.type = type;\r\n\r\n        // input flag\r\n        let textTransform = 'none';\r\n        if (inputFlag === InputFlag.INITIAL_CAPS_ALL_CHARACTERS) {\r\n            textTransform = 'uppercase';\r\n        } else if (inputFlag === InputFlag.INITIAL_CAPS_WORD) {\r\n            textTransform = 'capitalize';\r\n        }\r\n        elem.style.textTransform = textTransform;\r\n    }\r\n\r\n    private _updateMaxLength (): void {\r\n        if (!HTML5) return;\r\n        let maxLength = this._delegate!.maxLength;\r\n        if (maxLength < 0) {\r\n            maxLength = 65535;\r\n        }\r\n        this._edTxt!.maxLength = maxLength;\r\n    }\r\n\r\n    private _initStyleSheet (): void {\r\n        if (!HTML5) return;\r\n        if (!this._edTxt) {\r\n            return;\r\n        }\r\n        let elem = this._edTxt;\r\n        elem.style.color = '#000000';\r\n        elem.style.border = '0px';\r\n        elem.style.background = 'transparent';\r\n        elem.style.width = '100%';\r\n        elem.style.height = '100%';\r\n        elem.style.outline = 'medium';\r\n        elem.style.padding = '0';\r\n        elem.style.textTransform = 'none';\r\n        elem.style.display = 'none';\r\n        elem.style.position = 'absolute';\r\n        elem.style.bottom = '0px';\r\n        elem.style.left = `${LEFT_PADDING}px`;\r\n        elem.className = 'cocosEditBox';\r\n        elem.style.fontFamily = 'Arial';\r\n        elem.id = this._domId;\r\n\r\n        if (!this._isTextArea) {\r\n            elem = elem as HTMLInputElement;\r\n            elem.type = 'text';\r\n            elem.style['-moz-appearance'] = 'textfield';\r\n        } else {\r\n            elem.style.resize = 'none';\r\n            elem.style.overflowY = 'scroll';\r\n        }\r\n\r\n        this._placeholderStyleSheet = ccdocument.createElement('style');\r\n    }\r\n\r\n    private _updateStyleSheet (): void {\r\n        if (!HTML5) return;\r\n        const delegate = this._delegate;\r\n        const elem = this._edTxt;\r\n        if (elem && delegate) {\r\n            elem.value = delegate.string;\r\n            this._updateTextLabel(delegate.textLabel);\r\n\r\n            // NOTE: we don't show placeholder any more when editBox is editing\r\n            // elem.placeholder = delegate.placeholder;\r\n            // this._updatePlaceholderLabel(delegate.placeholderLabel);\r\n        }\r\n    }\r\n\r\n    private _updateTextLabel (textLabel): void {\r\n        if (!HTML5) return;\r\n        if (!textLabel) {\r\n            return;\r\n        }\r\n\r\n        let font = textLabel.font;\r\n        if (font && !(font instanceof BitmapFont)) {\r\n            font = font._fontFamily;\r\n        } else {\r\n            font = textLabel.fontFamily;\r\n        }\r\n\r\n        const fontSize = textLabel.fontSize * textLabel.node.scale.y;\r\n\r\n        if (this._textLabelFont === font\r\n            && this._textLabelFontSize === fontSize\r\n            && this._textLabelFontColor === textLabel.fontColor\r\n            && this._textLabelAlign === textLabel.horizontalAlign) {\r\n            return;\r\n        }\r\n\r\n        this._textLabelFont = font;\r\n        this._textLabelFontSize = fontSize;\r\n        this._textLabelFontColor = textLabel.fontColor;\r\n        this._textLabelAlign = textLabel.horizontalAlign;\r\n\r\n        if (!this._edTxt) {\r\n            return;\r\n        }\r\n\r\n        const elem = this._edTxt;\r\n        elem.style.fontSize = `${fontSize}px`;\r\n        elem.style.color = textLabel.color.toCSS();\r\n        elem.style.fontFamily = font;\r\n\r\n        switch (textLabel.horizontalAlign) {\r\n        case Label.HorizontalAlign.LEFT:\r\n            elem.style.textAlign = 'left';\r\n            break;\r\n        case Label.HorizontalAlign.CENTER:\r\n            elem.style.textAlign = 'center';\r\n            break;\r\n        case Label.HorizontalAlign.RIGHT:\r\n            elem.style.textAlign = 'right';\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    private _updatePlaceholderLabel (placeholderLabel): void {\r\n        if (!HTML5) return;\r\n        if (!placeholderLabel) {\r\n            return;\r\n        }\r\n\r\n        let font = placeholderLabel.font;\r\n        if (font && !(font instanceof BitmapFont)) {\r\n            font = placeholderLabel.font._fontFamily;\r\n        } else {\r\n            font = placeholderLabel.fontFamily;\r\n        }\r\n\r\n        const fontSize = placeholderLabel.fontSize * placeholderLabel.node.scale.y;\r\n\r\n        if (this._placeholderLabelFont === font\r\n            && this._placeholderLabelFontSize === fontSize\r\n            && this._placeholderLabelFontColor === placeholderLabel.fontColor\r\n            && this._placeholderLabelAlign === placeholderLabel.horizontalAlign\r\n            && this._placeholderLineHeight === placeholderLabel.fontSize) {\r\n            return;\r\n        }\r\n\r\n        this._placeholderLabelFont = font;\r\n        this._placeholderLabelFontSize = fontSize;\r\n        this._placeholderLabelFontColor = placeholderLabel.fontColor;\r\n        this._placeholderLabelAlign = placeholderLabel.horizontalAlign;\r\n        this._placeholderLineHeight = placeholderLabel.fontSize;\r\n\r\n        const styleEl = this._placeholderStyleSheet;\r\n        const fontColor = placeholderLabel.color.toCSS();\r\n        const lineHeight = placeholderLabel.fontSize;\r\n\r\n        let horizontalAlign = '';\r\n        switch (placeholderLabel.horizontalAlign) {\r\n        case Label.HorizontalAlign.LEFT:\r\n            horizontalAlign = 'left';\r\n            break;\r\n        case Label.HorizontalAlign.CENTER:\r\n            horizontalAlign = 'center';\r\n            break;\r\n        case Label.HorizontalAlign.RIGHT:\r\n            horizontalAlign = 'right';\r\n            break;\r\n        default:\r\n            break;\r\n        }\r\n\r\n        styleEl!.innerHTML = `#${this._domId}::-webkit-input-placeholder{text-transform: initial;-family: ${font};font-size: ${fontSize}px;color: ${fontColor};line-height: ${lineHeight}px;text-align: ${horizontalAlign};}`\r\n                            + `#${this._domId}::-moz-placeholder{text-transform: initial;-family: ${font};font-size: ${fontSize}px;color: ${fontColor};line-height: ${lineHeight}px;text-align: ${horizontalAlign};}`\r\n                            + `#${this._domId}::-ms-input-placeholder{text-transform: initial;-family: ${font};font-size: ${fontSize}px;color: ${fontColor};line-height: ${lineHeight}px;text-align: ${horizontalAlign};}`;\r\n        // EDGE_BUG_FIX: hide clear button, because clearing input box in Edge does not emit input event\r\n        // issue refference: https://github.com/angular/angular/issues/26307\r\n        if (sys.browserType === BrowserType.EDGE) {\r\n            styleEl!.innerHTML += `#${this._domId}::-ms-clear{display: none;}`;\r\n        }\r\n    }\r\n\r\n    private _registerEventListeners (): void {\r\n        if (!HTML5) return;\r\n        if (!this._edTxt) {\r\n            return;\r\n        }\r\n\r\n        const elem = this._edTxt;\r\n        let inputLock = false;\r\n        const cbs = this.__eventListeners;\r\n\r\n        cbs.compositionStart = (): void => {\r\n            inputLock = true;\r\n        };\r\n\r\n        cbs.compositionEnd = (): void => {\r\n            inputLock = false;\r\n            this._delegate!._editBoxTextChanged(elem.value);\r\n        };\r\n\r\n        cbs.onInput = (): void => {\r\n            if (inputLock) {\r\n                return;\r\n            }\r\n            const delegate = this._delegate;\r\n            // input of number type doesn't support maxLength attribute\r\n            const maxLength = delegate!.maxLength;\r\n            if (maxLength >= 0 && elem.type !== 'number') {\r\n                elem.value = elem.value.slice(0, maxLength);\r\n            }\r\n            delegate!._editBoxTextChanged(elem.value);\r\n        };\r\n\r\n        cbs.onClick = (): void => {\r\n            if (this._editing) {\r\n                if (sys.isMobile) {\r\n                    this._adjustWindowScroll();\r\n                }\r\n            }\r\n        };\r\n\r\n        cbs.onKeydown = (e): void => {\r\n            if (e.keyCode === KeyCode.ENTER) {\r\n                e.propagationStopped = true;\r\n                this._delegate!._editBoxEditingReturn();\r\n\r\n                if (!this._isTextArea) {\r\n                    elem.blur();\r\n                }\r\n            } else if (e.keyCode === KeyCode.TAB) {\r\n                e.propagationStopped = true;\r\n                e.preventDefault();\r\n\r\n                tabIndexUtil.next(this);\r\n            }\r\n        };\r\n\r\n        cbs.onBlur = (): void => {\r\n            // on mobile, sometimes input element doesn't fire compositionend event\r\n            if (sys.isMobile && inputLock) {\r\n                cbs.compositionEnd();\r\n            }\r\n            this._editing = false;\r\n            _currentEditBoxImpl = null;\r\n            this._hideDom();\r\n            this._delegate!._editBoxEditingDidEnded();\r\n        };\r\n\r\n        elem.addEventListener('compositionstart', cbs.compositionStart as EventListenerOrEventListenerObject);\r\n        elem.addEventListener('compositionend', cbs.compositionEnd as EventListenerOrEventListenerObject);\r\n        elem.addEventListener('input', cbs.onInput as EventListenerOrEventListenerObject);\r\n        elem.addEventListener('keydown', cbs.onKeydown as EventListenerOrEventListenerObject);\r\n        elem.addEventListener('blur', cbs.onBlur as EventListenerOrEventListenerObject);\r\n        elem.addEventListener('touchstart', cbs.onClick as EventListenerOrEventListenerObject);\r\n    }\r\n    private _removeEventListeners (): void {\r\n        if (!HTML5) return;\r\n        if (!this._edTxt) {\r\n            return;\r\n        }\r\n\r\n        const elem = this._edTxt;\r\n        const cbs = this.__eventListeners;\r\n\r\n        elem.removeEventListener('compositionstart', cbs.compositionStart as EventListenerOrEventListenerObject);\r\n        elem.removeEventListener('compositionend', cbs.compositionEnd as EventListenerOrEventListenerObject);\r\n        elem.removeEventListener('input', cbs.onInput as EventListenerOrEventListenerObject);\r\n        elem.removeEventListener('keydown', cbs.onKeydown as EventListenerOrEventListenerObject);\r\n        elem.removeEventListener('blur', cbs.onBlur as EventListenerOrEventListenerObject);\r\n        elem.removeEventListener('touchstart', cbs.onClick as EventListenerOrEventListenerObject);\r\n\r\n        cbs.compositionStart = null;\r\n        cbs.compositionEnd = null;\r\n        cbs.onInput = null;\r\n        cbs.onKeydown = null;\r\n        cbs.onBlur = null;\r\n        cbs.onClick = null;\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executeInEditMode, executionOrder, menu, requireComponent, tooltip, type, displayOrder, serializable, visible } from 'cc.decorator';\r\nimport { Component } from '../scene-graph/component';\r\nimport { Size, Vec2, Vec3 } from '../core/math';\r\nimport { ccenum } from '../core/value-types/enum';\r\nimport { UITransform } from '../2d/framework/ui-transform';\r\nimport { director, DirectorEvent } from '../game/director';\r\nimport { TransformBit } from '../scene-graph/node-enum';\r\nimport { warnID } from '../core';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { Node } from '../scene-graph/node';\r\n\r\n/**\r\n * @en Layout type.\r\n *\r\n * @zh 布局类型。\r\n */\r\nexport enum LayoutType {\r\n    /**\r\n     * @en No layout.\r\n     *\r\n     * @zh 禁用布局。\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * @en Horizontal layout.\r\n     *\r\n     * @zh 水平布局。\r\n     */\r\n    HORIZONTAL = 1,\r\n\r\n    /**\r\n     * @en Vertical layout.\r\n     *\r\n     * @zh 垂直布局。\r\n     */\r\n    VERTICAL = 2,\r\n    /**\r\n     * @en Grid layout.\r\n     *\r\n     * @zh 网格布局。\r\n     */\r\n    GRID = 3,\r\n}\r\n\r\nccenum(LayoutType);\r\n\r\n/**\r\n * @en Layout Resize Mode.\r\n *\r\n * @zh 缩放模式。\r\n */\r\nexport enum LayoutResizeMode {\r\n    /**\r\n     * @en Don't scale.\r\n     *\r\n     * @zh 不做任何缩放。\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * @en The container size will be expanded with its children's size.\r\n     *\r\n     * @zh 容器的大小会根据子节点的大小自动缩放。\r\n     */\r\n    CONTAINER = 1,\r\n    /**\r\n     * @en Child item size will be adjusted with the container's size.\r\n     *\r\n     * @zh 子节点的大小会随着容器的大小自动缩放。\r\n     */\r\n    CHILDREN = 2,\r\n}\r\n\r\nccenum(LayoutResizeMode);\r\n\r\n/**\r\n * @en Grid Layout start axis direction.\r\n *\r\n * @zh 布局轴向，只用于 GRID 布局。\r\n */\r\nexport enum LayoutAxisDirection {\r\n    /**\r\n     * @en The horizontal axis.\r\n     *\r\n     * @zh 进行水平方向布局。\r\n     */\r\n    HORIZONTAL = 0,\r\n    /**\r\n     * @en The vertical axis.\r\n     *\r\n     * @zh 进行垂直方向布局。\r\n     */\r\n    VERTICAL = 1,\r\n}\r\n\r\nccenum(LayoutAxisDirection);\r\n\r\n/**\r\n * @en Vertical layout direction.\r\n *\r\n * @zh 垂直方向布局方式。\r\n */\r\nexport enum LayoutVerticalDirection {\r\n    /**\r\n     * @en Items arranged from bottom to top.\r\n     *\r\n     * @zh 从下到上排列。\r\n     */\r\n    BOTTOM_TO_TOP = 0,\r\n    /**\r\n     * @en Items arranged from top to bottom.\r\n     * @zh 从上到下排列。\r\n     */\r\n    TOP_TO_BOTTOM = 1,\r\n}\r\n\r\nccenum(LayoutVerticalDirection);\r\n\r\n/**\r\n * @en Horizontal layout direction.\r\n *\r\n * @zh 水平方向布局方式。\r\n */\r\nexport enum LayoutHorizontalDirection {\r\n    /**\r\n     * @en Items arranged from left to right.\r\n     *\r\n     * @zh 从左往右排列。\r\n     */\r\n    LEFT_TO_RIGHT = 0,\r\n    /**\r\n     * @en Items arranged from right to left.\r\n     * @zh 从右往左排列。\r\n     */\r\n    RIGHT_TO_LEFT = 1,\r\n}\r\n\r\nccenum(LayoutHorizontalDirection);\r\n\r\n/**\r\n * @en Layout constraint.\r\n *\r\n * @zh 布局约束。\r\n */\r\nexport enum LayoutConstraint {\r\n    /**\r\n     * @en Constraint free.\r\n     *\r\n     * @zh 自由排布。\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * @en Keep the number of rows fixed.\r\n     *\r\n     * @zh 固定行。\r\n     */\r\n    FIXED_ROW = 1,\r\n    /**\r\n     * @en Keep the number of rows fixed columns.\r\n     *\r\n     * @zh 固定列。\r\n     */\r\n    FIXED_COL = 2,\r\n}\r\n\r\nccenum(LayoutConstraint);\r\n\r\nconst _tempVec3 = new Vec3();\r\n\r\n/**\r\n * @en\r\n * The Layout is a container component, use it to arrange child elements easily.<br>\r\n * Note：<br>\r\n * 1.Scaling and rotation of child nodes are not considered.<br>\r\n * 2.After setting the Layout, the results need to be updated until the next frame,unless you manually call.[[updateLayout]]\r\n *\r\n * @zh\r\n * Layout 组件相当于一个容器，能自动对它的所有子节点进行统一排版。<br>\r\n * 注意：<br>\r\n * 1.不会考虑子节点的缩放和旋转。<br>\r\n * 2.对 Layout 设置后结果需要到下一帧才会更新，除非你设置完以后手动调用。[[updateLayout]]\r\n */\r\n@ccclass('cc.Layout')\r\n@help('i18n:cc.Layout')\r\n@executionOrder(110)\r\n@menu('UI/Layout')\r\n@requireComponent(UITransform)\r\n@executeInEditMode\r\nexport class Layout extends Component {\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Alignment horizontal. Fixed starting position in the same direction when Type is Horizontal.\r\n     *\r\n     * @zh\r\n     * 横向对齐。在 Type 为 Horizontal 时按同个方向固定起始位置排列。\r\n     */\r\n    @visible(function (this: Layout): boolean {\r\n        return this._layoutType === LayoutType.HORIZONTAL;\r\n    })\r\n    @tooltip('i18n:layout.align_horizontal')\r\n    get alignHorizontal (): boolean {\r\n        return this._isAlign;\r\n    }\r\n\r\n    set alignHorizontal (value) {\r\n        if (this._layoutType !== LayoutType.HORIZONTAL) {\r\n            return;\r\n        }\r\n\r\n        this._isAlign = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Alignment vertical. Fixed starting position in the same direction when Type is Vertical.\r\n     *\r\n     * @zh\r\n     * 纵向对齐。在 Type 为 Horizontal 或 Vertical 时按同个方向固定起始位置排列。\r\n     */\r\n    @visible(function (this: Layout): boolean {\r\n        return this._layoutType === LayoutType.VERTICAL;\r\n    })\r\n    @tooltip('i18n:layout.align_vertical')\r\n    get alignVertical (): boolean {\r\n        return this._isAlign;\r\n    }\r\n\r\n    set alignVertical (value) {\r\n        if (this._layoutType !== LayoutType.VERTICAL) {\r\n            return;\r\n        }\r\n\r\n        this._isAlign = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The layout type.\r\n     *\r\n     * @zh\r\n     * 布局类型。\r\n     */\r\n    @type(LayoutType)\r\n    @displayOrder(0)\r\n    @tooltip('i18n:layout.layout_type')\r\n    get type (): LayoutType {\r\n        return this._layoutType;\r\n    }\r\n\r\n    set type (value: LayoutType) {\r\n        this._layoutType = value;\r\n        this._doLayoutDirty();\r\n    }\r\n    /**\r\n     * @en\r\n     * The are three resize modes for Layout. None, resize Container and resize children.\r\n     *\r\n     * @zh\r\n     * 缩放模式。\r\n     */\r\n    @type(LayoutResizeMode)\r\n    @visible(function (this: Layout): boolean {\r\n        return this._layoutType !== LayoutType.NONE;\r\n    })\r\n    @tooltip('i18n:layout.resize_mode')\r\n    get resizeMode (): LayoutResizeMode {\r\n        return this._resizeMode;\r\n    }\r\n    set resizeMode (value) {\r\n        if (this._layoutType === LayoutType.NONE) {\r\n            return;\r\n        }\r\n\r\n        this._resizeMode = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The cell size for grid layout.\r\n     *\r\n     * @zh\r\n     * 每个格子的大小，只有布局类型为 GRID 的时候才有效。\r\n     */\r\n    @visible(function (this: Layout) {\r\n        if (this.type === LayoutType.GRID && this._resizeMode === LayoutResizeMode.CHILDREN) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    })\r\n    @tooltip('i18n:layout.cell_size')\r\n    get cellSize (): Readonly<Size> {\r\n        return this._cellSize;\r\n    }\r\n\r\n    set cellSize (value) {\r\n        if (this._cellSize === value) {\r\n            return;\r\n        }\r\n\r\n        this._cellSize.set(value);\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The start axis for grid layout. If you choose horizontal, then children will layout horizontally at first,\r\n     * and then break line on demand. Choose vertical if you want to layout vertically at first.\r\n     *\r\n     * @zh\r\n     * 起始轴方向类型，可进行水平和垂直布局排列，只有布局类型为 GRID 的时候才有效。\r\n     */\r\n    @type(LayoutAxisDirection)\r\n    @tooltip('i18n:layout.start_axis')\r\n    get startAxis (): LayoutAxisDirection {\r\n        return this._startAxis;\r\n    }\r\n\r\n    set startAxis (value) {\r\n        if (this._startAxis === value) {\r\n            return;\r\n        }\r\n\r\n        this._startAxis = value;\r\n        this._doLayoutDirty();\r\n    }\r\n    /**\r\n     * @en\r\n     * The left padding of layout, it only effect the layout in one direction.\r\n     *\r\n     * @zh\r\n     * 容器内左边距，只会在一个布局方向上生效。\r\n     */\r\n    @tooltip('i18n:layout.padding_left')\r\n    get paddingLeft (): number {\r\n        return this._paddingLeft;\r\n    }\r\n    set paddingLeft (value) {\r\n        if (this._paddingLeft === value) {\r\n            return;\r\n        }\r\n\r\n        this._paddingLeft = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The right padding of layout, it only effect the layout in one direction.\r\n     *\r\n     * @zh\r\n     * 容器内右边距，只会在一个布局方向上生效。\r\n     */\r\n    @tooltip('i18n:layout.padding_right')\r\n    get paddingRight (): number {\r\n        return this._paddingRight;\r\n    }\r\n    set paddingRight (value) {\r\n        if (this._paddingRight === value) {\r\n            return;\r\n        }\r\n\r\n        this._paddingRight = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The top padding of layout, it only effect the layout in one direction.\r\n     *\r\n     * @zh\r\n     * 容器内上边距，只会在一个布局方向上生效。\r\n     */\r\n    @tooltip('i18n:layout.padding_top')\r\n    get paddingTop (): number {\r\n        return this._paddingTop;\r\n    }\r\n    set paddingTop (value) {\r\n        if (this._paddingTop === value) {\r\n            return;\r\n        }\r\n\r\n        this._paddingTop = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The bottom padding of layout, it only effect the layout in one direction.\r\n     *\r\n     * @zh\r\n     * 容器内下边距，只会在一个布局方向上生效。\r\n     */\r\n    @tooltip('i18n:layout.padding_bottom')\r\n    get paddingBottom (): number {\r\n        return this._paddingBottom;\r\n    }\r\n    set paddingBottom (value) {\r\n        if (this._paddingBottom === value) {\r\n            return;\r\n        }\r\n\r\n        this._paddingBottom = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The distance in x-axis between each element in layout.\r\n     *\r\n     * @zh\r\n     * 子节点之间的水平间距。\r\n     */\r\n    @tooltip('i18n:layout.space_x')\r\n    get spacingX (): number {\r\n        return this._spacingX;\r\n    }\r\n\r\n    set spacingX (value) {\r\n        if (this._spacingX === value) {\r\n            return;\r\n        }\r\n\r\n        this._spacingX = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The distance in y-axis between each element in layout.\r\n     *\r\n     * @zh\r\n     * 子节点之间的垂直间距。\r\n     */\r\n    @tooltip('i18n:layout.space_y')\r\n    get spacingY (): number {\r\n        return this._spacingY;\r\n    }\r\n\r\n    set spacingY (value) {\r\n        if (this._spacingY === value) {\r\n            return;\r\n        }\r\n\r\n        this._spacingY = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Only take effect in Vertical layout mode.\r\n     * This option changes the start element's positioning.\r\n     *\r\n     * @zh\r\n     * 垂直排列子节点的方向。\r\n     */\r\n    @type(LayoutVerticalDirection)\r\n    @tooltip('i18n:layout.vertical_direction')\r\n    get verticalDirection (): LayoutVerticalDirection {\r\n        return this._verticalDirection;\r\n    }\r\n\r\n    set verticalDirection (value: LayoutVerticalDirection) {\r\n        if (this._verticalDirection === value) {\r\n            return;\r\n        }\r\n\r\n        this._verticalDirection = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Only take effect in horizontal layout mode.\r\n     * This option changes the start element's positioning.\r\n     *\r\n     * @zh\r\n     * 水平排列子节点的方向。\r\n     */\r\n    @type(LayoutHorizontalDirection)\r\n    @tooltip('i18n:layout.horizontal_direction')\r\n    get horizontalDirection (): LayoutHorizontalDirection {\r\n        return this._horizontalDirection;\r\n    }\r\n\r\n    set horizontalDirection (value: LayoutHorizontalDirection) {\r\n        if (this._horizontalDirection === value) {\r\n            return;\r\n        }\r\n\r\n        this._horizontalDirection = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The padding of layout, it will effect the layout in horizontal and vertical direction.\r\n     *\r\n     * @zh\r\n     * 容器内边距，该属性会在四个布局方向上生效。\r\n     */\r\n    get padding (): number {\r\n        return this._paddingLeft;\r\n    }\r\n\r\n    set padding (value) {\r\n        if (this.paddingLeft !== value || this._paddingRight !== value || this._paddingTop !== value || this._paddingBottom !== value) {\r\n            this._paddingLeft = this._paddingRight = this._paddingTop = this._paddingBottom = value;\r\n            this._doLayoutDirty();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The layout constraint inside the container.\r\n     *\r\n     * @zh\r\n     * 容器内布局约束。\r\n     */\r\n    @type(LayoutConstraint)\r\n    @visible(function (this: Layout): boolean {\r\n        return this.type === LayoutType.GRID;\r\n    })\r\n    @tooltip('i18n:layout.constraint')\r\n    get constraint (): LayoutConstraint {\r\n        return this._constraint;\r\n    }\r\n\r\n    set constraint (value: LayoutConstraint) {\r\n        if (this._layoutType === LayoutType.NONE || this._constraint === value) {\r\n            return;\r\n        }\r\n\r\n        this._constraint = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The limit value used by the layout constraint inside the container.\r\n     *\r\n     * @zh\r\n     * 容器内布局约束使用的限定值。\r\n     */\r\n    @visible(function (this: Layout): boolean {\r\n        return this._constraint !== LayoutConstraint.NONE;\r\n    })\r\n    @tooltip('i18n:layout.constraint_number')\r\n    get constraintNum (): number {\r\n        return this._constraintNum;\r\n    }\r\n\r\n    set constraintNum (value) {\r\n        if (this._constraint === LayoutConstraint.NONE || this._constraintNum === value) {\r\n            return;\r\n        }\r\n\r\n        if (value <= 0) {\r\n            warnID(16400);\r\n        }\r\n\r\n        this._constraintNum = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Adjust the layout if the children scaled.\r\n     *\r\n     * @zh\r\n     * 子节点缩放比例是否影响布局。\r\n     */\r\n    @tooltip('i18n:layout.affected_scale')\r\n    get affectedByScale (): boolean {\r\n        return this._affectedByScale;\r\n    }\r\n\r\n    set affectedByScale (value) {\r\n        this._affectedByScale = value;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    /**\r\n     * @en Layout type.\r\n     * @zh 布局类型。\r\n     */\r\n    public static Type = LayoutType;\r\n    /**\r\n     * @en Vertical layout direction.\r\n     * @zh 垂直方向布局方式。\r\n     */\r\n    public static VerticalDirection = LayoutVerticalDirection;\r\n    /**\r\n     * @en Horizontal layout direction.\r\n     * @zh 水平方向布局方式。\r\n     */\r\n    public static HorizontalDirection = LayoutHorizontalDirection;\r\n    /**\r\n     * @en Layout Resize Mode.\r\n     * @zh 缩放模式。\r\n     */\r\n    public static ResizeMode = LayoutResizeMode;\r\n    /**\r\n     * @en Grid Layout start axis direction.\r\n     * @zh 布局轴向，只用于 GRID 布局。\r\n     */\r\n    public static AxisDirection = LayoutAxisDirection;\r\n    /**\r\n     * @en Layout constraint.\r\n     * @zh 布局约束。\r\n     */\r\n    public static Constraint = LayoutConstraint;\r\n\r\n    @serializable\r\n    protected _resizeMode = LayoutResizeMode.NONE;\r\n    @serializable\r\n    protected _layoutType = LayoutType.NONE;\r\n    @serializable\r\n    protected _cellSize = new Size(40, 40);\r\n    @serializable\r\n    protected _startAxis = LayoutAxisDirection.HORIZONTAL;\r\n    @serializable\r\n    protected _paddingLeft = 0;\r\n    @serializable\r\n    protected _paddingRight = 0;\r\n    @serializable\r\n    protected _paddingTop = 0;\r\n    @serializable\r\n    protected _paddingBottom = 0;\r\n    @serializable\r\n    protected _spacingX = 0;\r\n    @serializable\r\n    protected _spacingY = 0;\r\n    @serializable\r\n    protected _verticalDirection = LayoutVerticalDirection.TOP_TO_BOTTOM;\r\n    @serializable\r\n    protected _horizontalDirection = LayoutHorizontalDirection.LEFT_TO_RIGHT;\r\n    @serializable\r\n    protected _constraint = LayoutConstraint.NONE;\r\n    @serializable\r\n    protected _constraintNum = 2;\r\n    @serializable\r\n    protected _affectedByScale = false;\r\n    @serializable\r\n    protected _isAlign = false;\r\n\r\n    protected _layoutSize = new Size(300, 200);\r\n    protected _layoutDirty = true;\r\n    protected _childrenDirty = false;\r\n    protected _usefulLayoutObj: UITransform[] = [];\r\n    protected _init = false;\r\n\r\n    /**\r\n     * @en\r\n     * Perform the layout update.\r\n     *\r\n     * @zh\r\n     * 立即执行更新布局。\r\n     * @param force @en force update or not. @zh 是否强制更新。\r\n     * @example\r\n     * ```ts\r\n     * import { Layout, log } from 'cc';\r\n     * layout.type = Layout.Type.HORIZONTAL;\r\n     * layout.node.addChild(childNode);\r\n     * log(childNode.x); // not yet changed\r\n     * layout.updateLayout();\r\n     * log(childNode.x); // changed\r\n     * ```\r\n     */\r\n    public updateLayout (force = false): void {\r\n        if (this._layoutDirty || force) {\r\n            this._doLayout();\r\n            this._layoutDirty = false;\r\n        }\r\n    }\r\n\r\n    protected onEnable (): void {\r\n        this._addEventListeners();\r\n\r\n        const trans = this.node._getUITransformComp()!;\r\n        if (trans.contentSize.equals(Size.ZERO)) {\r\n            trans.setContentSize(this._layoutSize);\r\n        }\r\n\r\n        this._childrenChanged();\r\n    }\r\n\r\n    protected onDisable (): void {\r\n        this._usefulLayoutObj.length = 0;\r\n        this._removeEventListeners();\r\n    }\r\n\r\n    protected _checkUsefulObj (): void {\r\n        this._usefulLayoutObj.length = 0;\r\n        const children = this.node.children;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const child = children[i];\r\n            const uiTrans = child._getUITransformComp();\r\n            if (child.activeInHierarchy && uiTrans) {\r\n                this._usefulLayoutObj.push(uiTrans);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _addEventListeners (): void {\r\n        director.on(DirectorEvent.AFTER_UPDATE, this.updateLayout, this);\r\n        this.node.on(NodeEventType.SIZE_CHANGED, this._resized, this);\r\n        this.node.on(NodeEventType.ANCHOR_CHANGED, this._doLayoutDirty, this);\r\n        this.node.on(NodeEventType.CHILD_ADDED, this._childAdded, this);\r\n        this.node.on(NodeEventType.CHILD_REMOVED, this._childRemoved, this);\r\n        this.node.on(NodeEventType.CHILDREN_ORDER_CHANGED, this._childrenChanged, this);\r\n        this.node.on('childrenSiblingOrderChanged', this.updateLayout, this);\r\n        this._addChildrenEventListeners();\r\n    }\r\n\r\n    protected _removeEventListeners (): void {\r\n        director.off(DirectorEvent.AFTER_UPDATE, this.updateLayout, this);\r\n        this.node.off(NodeEventType.SIZE_CHANGED, this._resized, this);\r\n        this.node.off(NodeEventType.ANCHOR_CHANGED, this._doLayoutDirty, this);\r\n        this.node.off(NodeEventType.CHILD_ADDED, this._childAdded, this);\r\n        this.node.off(NodeEventType.CHILD_REMOVED, this._childRemoved, this);\r\n        this.node.off(NodeEventType.CHILDREN_ORDER_CHANGED, this._childrenChanged, this);\r\n        this.node.off('childrenSiblingOrderChanged', this.updateLayout, this);\r\n        this._removeChildrenEventListeners();\r\n    }\r\n\r\n    protected _addChildrenEventListeners (): void {\r\n        const children = this.node.children;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const child = children[i];\r\n            child.on(NodeEventType.SIZE_CHANGED, this._doLayoutDirty, this);\r\n            child.on(NodeEventType.TRANSFORM_CHANGED, this._transformDirty, this);\r\n            child.on(NodeEventType.ANCHOR_CHANGED, this._doLayoutDirty, this);\r\n            child.on(NodeEventType.ACTIVE_IN_HIERARCHY_CHANGED, this._childrenChanged, this);\r\n        }\r\n    }\r\n\r\n    protected _removeChildrenEventListeners (): void {\r\n        const children = this.node.children;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const child = children[i];\r\n            child.off(NodeEventType.SIZE_CHANGED, this._doLayoutDirty, this);\r\n            child.off(NodeEventType.TRANSFORM_CHANGED, this._transformDirty, this);\r\n            child.off(NodeEventType.ANCHOR_CHANGED, this._doLayoutDirty, this);\r\n            child.off(NodeEventType.ACTIVE_IN_HIERARCHY_CHANGED, this._childrenChanged, this);\r\n        }\r\n    }\r\n\r\n    protected _childAdded (child: Node): void {\r\n        child.on(NodeEventType.SIZE_CHANGED, this._doLayoutDirty, this);\r\n        child.on(NodeEventType.TRANSFORM_CHANGED, this._transformDirty, this);\r\n        child.on(NodeEventType.ANCHOR_CHANGED, this._doLayoutDirty, this);\r\n        child.on(NodeEventType.ACTIVE_IN_HIERARCHY_CHANGED, this._childrenChanged, this);\r\n        this._childrenChanged();\r\n    }\r\n\r\n    protected _childRemoved (child: Node): void {\r\n        child.off(NodeEventType.SIZE_CHANGED, this._doLayoutDirty, this);\r\n        child.off(NodeEventType.TRANSFORM_CHANGED, this._transformDirty, this);\r\n        child.off(NodeEventType.ANCHOR_CHANGED, this._doLayoutDirty, this);\r\n        child.off(NodeEventType.ACTIVE_IN_HIERARCHY_CHANGED, this._childrenChanged, this);\r\n        this._childrenChanged();\r\n    }\r\n\r\n    protected _resized (): void {\r\n        this._layoutSize.set(this.node._getUITransformComp()!.contentSize);\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    protected _doLayoutHorizontally (baseWidth: number, rowBreak: boolean, fnPositionY: (...args: any[]) => number, applyChildren: boolean): number {\r\n        const trans = this.node._getUITransformComp()!;\r\n        const layoutAnchor = trans.anchorPoint;\r\n        const limit = this._getFixedBreakingNum();\r\n\r\n        let sign = 1;\r\n        let paddingX = this._paddingLeft;\r\n        if (this._horizontalDirection === LayoutHorizontalDirection.RIGHT_TO_LEFT) {\r\n            sign = -1;\r\n            paddingX = this._paddingRight;\r\n        }\r\n\r\n        const startPos = (this._horizontalDirection - layoutAnchor.x) * baseWidth + sign * paddingX;\r\n        let nextX = startPos - sign * this._spacingX;\r\n        let totalHeight = 0; // total content height (not including spacing)\r\n        let rowMaxHeight = 0; // maximum height of a single line\r\n        let tempMaxHeight = 0; //\r\n        let maxHeight = 0;\r\n        let isBreak = false;\r\n        const activeChildCount = this._usefulLayoutObj.length;\r\n        let newChildWidth = this._cellSize.width;\r\n        const paddingH = this._getPaddingH();\r\n        if (this._layoutType !== LayoutType.GRID && this._resizeMode === LayoutResizeMode.CHILDREN) {\r\n            newChildWidth = (baseWidth - paddingH - (activeChildCount - 1) * this._spacingX) / activeChildCount;\r\n        }\r\n\r\n        const children = this._usefulLayoutObj;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const childTrans = children[i];\r\n            const child = childTrans.node;\r\n            const scale =  child.scale;\r\n            const childScaleX = this._getUsedScaleValue(scale.x);\r\n            const childScaleY = this._getUsedScaleValue(scale.y);\r\n            // for resizing children\r\n            if (this._resizeMode === LayoutResizeMode.CHILDREN) {\r\n                childTrans.width = newChildWidth / childScaleX;\r\n                if (this._layoutType === LayoutType.GRID) {\r\n                    childTrans.height = this._cellSize.height / childScaleY;\r\n                }\r\n            }\r\n\r\n            const anchorX = Math.abs(this._horizontalDirection - childTrans.anchorX);\r\n            const childBoundingBoxWidth = childTrans.width * childScaleX;\r\n            const childBoundingBoxHeight = childTrans.height * childScaleY;\r\n\r\n            if (childBoundingBoxHeight > tempMaxHeight) {\r\n                maxHeight = Math.max(tempMaxHeight, maxHeight);\r\n                rowMaxHeight = tempMaxHeight || childBoundingBoxHeight;\r\n                tempMaxHeight = childBoundingBoxHeight;\r\n            }\r\n\r\n            nextX += sign * (anchorX * childBoundingBoxWidth + this._spacingX);\r\n            const rightBoundaryOfChild = sign * (1 - anchorX) * childBoundingBoxWidth;\r\n\r\n            if (rowBreak) {\r\n                if (limit > 0) {\r\n                    isBreak = (i / limit) > 0 && (i % limit === 0);\r\n                    if (isBreak) {\r\n                        rowMaxHeight = tempMaxHeight > childBoundingBoxHeight ? tempMaxHeight : rowMaxHeight;\r\n                    }\r\n                } else if (childBoundingBoxWidth > baseWidth - paddingH) {\r\n                    if (nextX > startPos + sign * (anchorX * childBoundingBoxWidth)) {\r\n                        isBreak = true;\r\n                    }\r\n                } else {\r\n                    const boundary = (1 - this._horizontalDirection - layoutAnchor.x) * baseWidth;\r\n                    const rowBreakBoundary = nextX + rightBoundaryOfChild + sign * (sign > 0 ? this._paddingRight : this._paddingLeft);\r\n                    isBreak = Math.abs(rowBreakBoundary) > Math.abs(boundary);\r\n                }\r\n\r\n                if (isBreak) {\r\n                    nextX = startPos + sign * (anchorX * childBoundingBoxWidth);\r\n                    if (childBoundingBoxHeight !== tempMaxHeight) {\r\n                        rowMaxHeight = tempMaxHeight;\r\n                    }\r\n                    // In unconstrained mode, the second height size is always what we need when a line feed condition is required to trigger\r\n                    totalHeight += rowMaxHeight + this._spacingY;\r\n                    rowMaxHeight = tempMaxHeight = childBoundingBoxHeight;\r\n                }\r\n            }\r\n\r\n            const finalPositionY = fnPositionY(child, childTrans, totalHeight);\r\n            if (applyChildren) {\r\n                child.setPosition(nextX, finalPositionY);\r\n            }\r\n\r\n            nextX += rightBoundaryOfChild;\r\n        }\r\n\r\n        rowMaxHeight = Math.max(rowMaxHeight, tempMaxHeight);\r\n        const containerResizeBoundary = Math.max(maxHeight, totalHeight + rowMaxHeight) + this._getPaddingV();\r\n        return containerResizeBoundary;\r\n    }\r\n\r\n    protected _doLayoutVertically (baseHeight: number, columnBreak: boolean, fnPositionX: (...args: any[]) => number, applyChildren: boolean): number {\r\n        const trans = this.node._getUITransformComp()!;\r\n        const layoutAnchor = trans.anchorPoint;\r\n        const limit = this._getFixedBreakingNum();\r\n\r\n        let sign = 1;\r\n        let paddingY = this._paddingBottom;\r\n        if (this._verticalDirection === LayoutVerticalDirection.TOP_TO_BOTTOM) {\r\n            sign = -1;\r\n            paddingY = this._paddingTop;\r\n        }\r\n\r\n        const startPos = (this._verticalDirection - layoutAnchor.y) * baseHeight + sign * paddingY;\r\n        let nextY = startPos - sign * this._spacingY;\r\n        let tempMaxWidth = 0;\r\n        let maxWidth = 0;\r\n        let colMaxWidth = 0;\r\n        let totalWidth = 0;\r\n        let isBreak = false;\r\n        const activeChildCount = this._usefulLayoutObj.length;\r\n        let newChildHeight = this._cellSize.height;\r\n        const paddingV = this._getPaddingV();\r\n        if (this._layoutType !== LayoutType.GRID && this._resizeMode === LayoutResizeMode.CHILDREN) {\r\n            newChildHeight = (baseHeight - paddingV - (activeChildCount - 1) * this._spacingY) / activeChildCount;\r\n        }\r\n\r\n        const children = this._usefulLayoutObj;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const childTrans = children[i];\r\n            const child = childTrans.node;\r\n            const scale = child.scale;\r\n            const childScaleX = this._getUsedScaleValue(scale.x);\r\n            const childScaleY = this._getUsedScaleValue(scale.y);\r\n\r\n            // for resizing children\r\n            if (this._resizeMode === LayoutResizeMode.CHILDREN) {\r\n                childTrans.height = newChildHeight / childScaleY;\r\n                if (this._layoutType === LayoutType.GRID) {\r\n                    childTrans.width = this._cellSize.width / childScaleX;\r\n                }\r\n            }\r\n\r\n            const anchorY = Math.abs(this._verticalDirection - childTrans.anchorY);\r\n            const childBoundingBoxWidth = childTrans.width * childScaleX;\r\n            const childBoundingBoxHeight = childTrans.height * childScaleY;\r\n\r\n            if (childBoundingBoxWidth > tempMaxWidth) {\r\n                maxWidth = Math.max(tempMaxWidth, maxWidth);\r\n                colMaxWidth = tempMaxWidth || childBoundingBoxWidth;\r\n                tempMaxWidth = childBoundingBoxWidth;\r\n            }\r\n\r\n            nextY += sign * (anchorY * childBoundingBoxHeight + this._spacingY);\r\n            const topBoundaryOfChild = sign * (1 - anchorY) * childBoundingBoxHeight;\r\n\r\n            if (columnBreak) {\r\n                if (limit > 0) {\r\n                    isBreak = (i / limit) > 0 && (i % limit === 0);\r\n                    if (isBreak) {\r\n                        colMaxWidth = tempMaxWidth > childBoundingBoxHeight ? tempMaxWidth : colMaxWidth;\r\n                    }\r\n                } else if (childBoundingBoxHeight > baseHeight - paddingV) {\r\n                    if (nextY > startPos + sign * (anchorY * childBoundingBoxHeight)) {\r\n                        isBreak = true;\r\n                    }\r\n                } else {\r\n                    const boundary = (1 - this._verticalDirection - layoutAnchor.y) * baseHeight;\r\n                    const columnBreakBoundary = nextY + topBoundaryOfChild + sign * (sign > 0 ? this._paddingTop : this._paddingBottom);\r\n                    isBreak = Math.abs(columnBreakBoundary) > Math.abs(boundary);\r\n                }\r\n\r\n                if (isBreak) {\r\n                    nextY = startPos + sign * (anchorY * childBoundingBoxHeight);\r\n                    if (childBoundingBoxWidth !== tempMaxWidth) {\r\n                        colMaxWidth = tempMaxWidth;\r\n                    }\r\n                    // In unconstrained mode, the second width size is always what we need when a line feed condition is required to trigger\r\n                    totalWidth += colMaxWidth + this._spacingX;\r\n                    colMaxWidth = tempMaxWidth = childBoundingBoxWidth;\r\n                }\r\n            }\r\n\r\n            const finalPositionX = fnPositionX(child, childTrans, totalWidth);\r\n            if (applyChildren) {\r\n                child.getPosition(_tempVec3);\r\n                child.setPosition(finalPositionX, nextY, _tempVec3.z);\r\n            }\r\n\r\n            nextY += topBoundaryOfChild;\r\n        }\r\n\r\n        colMaxWidth = Math.max(colMaxWidth, tempMaxWidth);\r\n        const containerResizeBoundary = Math.max(maxWidth, totalWidth + colMaxWidth) + this._getPaddingH();\r\n        return containerResizeBoundary;\r\n    }\r\n\r\n    protected _doLayoutGridAxisHorizontal (layoutAnchor: Vec2 | Readonly<Vec2>, layoutSize: Size): void {\r\n        const baseWidth = layoutSize.width;\r\n\r\n        let sign = 1;\r\n        let bottomBoundaryOfLayout = -layoutAnchor.y * layoutSize.height;\r\n        let paddingY = this._paddingBottom;\r\n        if (this._verticalDirection === LayoutVerticalDirection.TOP_TO_BOTTOM) {\r\n            sign = -1;\r\n            bottomBoundaryOfLayout = (1 - layoutAnchor.y) * layoutSize.height;\r\n            paddingY = this._paddingTop;\r\n        }\r\n\r\n        const fnPositionY = (child: Node, childTrans: UITransform, topOffset: number): number => bottomBoundaryOfLayout + sign * (topOffset + (1 - childTrans.anchorY) * childTrans.height * this._getUsedScaleValue(child.scale.y) + paddingY);\r\n\r\n        let newHeight = 0;\r\n        if (this._resizeMode === LayoutResizeMode.CONTAINER) {\r\n            // calculate the new height of container, it won't change the position of it's children\r\n            newHeight = this._doLayoutHorizontally(baseWidth, true, fnPositionY, false);\r\n            bottomBoundaryOfLayout = -layoutAnchor.y * newHeight;\r\n\r\n            if (this._verticalDirection === LayoutVerticalDirection.TOP_TO_BOTTOM) {\r\n                sign = -1;\r\n                bottomBoundaryOfLayout = (1 - layoutAnchor.y) * newHeight;\r\n            }\r\n        }\r\n\r\n        this._doLayoutHorizontally(baseWidth, true, fnPositionY, true);\r\n\r\n        if (this._resizeMode === LayoutResizeMode.CONTAINER) {\r\n            this.node._getUITransformComp()!.setContentSize(baseWidth, newHeight);\r\n        }\r\n    }\r\n\r\n    protected _doLayoutGridAxisVertical (layoutAnchor: Vec2 | Readonly<Vec2>, layoutSize: Size): void {\r\n        const baseHeight = layoutSize.height;\r\n\r\n        let sign = 1;\r\n        let leftBoundaryOfLayout = -layoutAnchor.x * layoutSize.width;\r\n        let paddingX = this._paddingLeft;\r\n        if (this._horizontalDirection === LayoutHorizontalDirection.RIGHT_TO_LEFT) {\r\n            sign = -1;\r\n            leftBoundaryOfLayout = (1 - layoutAnchor.x) * layoutSize.width;\r\n            paddingX = this._paddingRight;\r\n        }\r\n\r\n        const fnPositionX = (child: Node, childTrans: UITransform, leftOffset: number): number => leftBoundaryOfLayout + sign * (leftOffset + (1 - childTrans.anchorX) * childTrans.width * this._getUsedScaleValue(child.scale.x) + paddingX);\r\n\r\n        let newWidth = 0;\r\n        if (this._resizeMode === LayoutResizeMode.CONTAINER) {\r\n            newWidth = this._doLayoutVertically(baseHeight, true, fnPositionX, false);\r\n\r\n            leftBoundaryOfLayout = -layoutAnchor.x * newWidth;\r\n\r\n            if (this._horizontalDirection === LayoutHorizontalDirection.RIGHT_TO_LEFT) {\r\n                sign = -1;\r\n                leftBoundaryOfLayout = (1 - layoutAnchor.x) * newWidth;\r\n            }\r\n        }\r\n\r\n        this._doLayoutVertically(baseHeight, true, fnPositionX, true);\r\n\r\n        if (this._resizeMode === LayoutResizeMode.CONTAINER) {\r\n            this.node._getUITransformComp()!.setContentSize(newWidth, baseHeight);\r\n        }\r\n    }\r\n\r\n    protected _doLayoutGrid (): void {\r\n        const trans = this.node._getUITransformComp()!;\r\n        const layoutAnchor = trans.anchorPoint;\r\n        const layoutSize = trans.contentSize;\r\n\r\n        if (this.startAxis === LayoutAxisDirection.HORIZONTAL) {\r\n            this._doLayoutGridAxisHorizontal(layoutAnchor, layoutSize);\r\n        } else if (this.startAxis === LayoutAxisDirection.VERTICAL) {\r\n            this._doLayoutGridAxisVertical(layoutAnchor, layoutSize);\r\n        }\r\n    }\r\n\r\n    protected _getHorizontalBaseWidth (horizontal = true): number {\r\n        const children = this._usefulLayoutObj;\r\n        let baseSize = 0;\r\n        const activeChildCount = children.length;\r\n        if (this._resizeMode === LayoutResizeMode.CONTAINER) {\r\n            for (let i = 0; i < children.length; ++i) {\r\n                const childTrans = children[i];\r\n                const child = childTrans.node;\r\n                const scale =  child.scale;\r\n                baseSize += childTrans.width * this._getUsedScaleValue(scale.x);\r\n            }\r\n\r\n            baseSize += (activeChildCount - 1) * this._spacingX + this._getPaddingH();\r\n        } else {\r\n            baseSize = this.node._getUITransformComp()!.width;\r\n        }\r\n\r\n        return baseSize;\r\n    }\r\n\r\n    protected _getVerticalBaseHeight (): number {\r\n        const children = this._usefulLayoutObj;\r\n        let baseSize = 0;\r\n        const activeChildCount = children.length;\r\n        if (this._resizeMode === LayoutResizeMode.CONTAINER) {\r\n            for (let i = 0; i < children.length; ++i) {\r\n                const childTrans = children[i];\r\n                const child = childTrans.node;\r\n                const scale = child.scale;\r\n                baseSize += childTrans.height * this._getUsedScaleValue(scale.y);\r\n            }\r\n\r\n            baseSize += (activeChildCount - 1) * this._spacingY + this._getPaddingV();\r\n        } else {\r\n            baseSize = this.node._getUITransformComp()!.height;\r\n        }\r\n\r\n        return baseSize;\r\n    }\r\n\r\n    protected _doLayout (): void {\r\n        if (!this._init || this._childrenDirty) {\r\n            this._checkUsefulObj();\r\n            this._init = true;\r\n            this._childrenDirty = false;\r\n        }\r\n\r\n        if (this._layoutType === LayoutType.HORIZONTAL) {\r\n            const newWidth = this._getHorizontalBaseWidth();\r\n\r\n            const fnPositionY = (child: Node): number => {\r\n                const pos = this._isAlign ? Vec3.ZERO : child.position;\r\n                return pos.y;\r\n            };\r\n\r\n            this._doLayoutHorizontally(newWidth, false, fnPositionY, true);\r\n            this.node._getUITransformComp()!.width = newWidth;\r\n        } else if (this._layoutType === LayoutType.VERTICAL) {\r\n            const newHeight = this._getVerticalBaseHeight();\r\n\r\n            const fnPositionX = (child: Node): number => {\r\n                const pos = this._isAlign ? Vec3.ZERO : child.position;\r\n                return pos.x;\r\n            };\r\n\r\n            this._doLayoutVertically(newHeight, false, fnPositionX, true);\r\n            this.node._getUITransformComp()!.height = newHeight;\r\n        } else if (this._layoutType === LayoutType.GRID) {\r\n            this._doLayoutGrid();\r\n        }\r\n    }\r\n\r\n    protected _getUsedScaleValue (value: number): number {\r\n        return this._affectedByScale ? Math.abs(value) : 1;\r\n    }\r\n\r\n    protected _transformDirty (type: TransformBit): void {\r\n        if (!(type & TransformBit.SCALE) || !(type & TransformBit.POSITION) || !this._affectedByScale) {\r\n            return;\r\n        }\r\n\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    protected _doLayoutDirty (): void {\r\n        this._layoutDirty = true;\r\n    }\r\n\r\n    protected _childrenChanged (): void {\r\n        this._childrenDirty = true;\r\n        this._doLayoutDirty();\r\n    }\r\n\r\n    protected _getPaddingH (): number {\r\n        return this._paddingLeft + this._paddingRight;\r\n    }\r\n\r\n    protected _getPaddingV (): number {\r\n        return this._paddingTop + this._paddingBottom;\r\n    }\r\n\r\n    protected _getFixedBreakingNum (): number {\r\n        if (this._layoutType !== LayoutType.GRID || this._constraint === LayoutConstraint.NONE || this._constraintNum <= 0) {\r\n            return 0;\r\n        }\r\n\r\n        let num = this._constraint === LayoutConstraint.FIXED_ROW ? Math.ceil(this._usefulLayoutObj.length / this._constraintNum) : this._constraintNum;\r\n        // Horizontal sorting always counts the number of columns\r\n        if (this._startAxis === LayoutAxisDirection.VERTICAL) {\r\n            num = this._constraint === LayoutConstraint.FIXED_COL ? Math.ceil(this._usefulLayoutObj.length / this._constraintNum) : this._constraintNum;\r\n        }\r\n\r\n        return num;\r\n    }\r\n}\r\n\r\nlegacyCC.Layout = Layout;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, requireComponent, tooltip, type, range, slide, serializable } from 'cc.decorator';\r\nimport { Component } from '../scene-graph/component';\r\nimport { UITransform } from '../2d/framework';\r\nimport { Size, Vec2, Vec3 } from '../core/math';\r\nimport { Enum } from '../core/value-types';\r\nimport { clamp01 } from '../core/math/utils';\r\nimport { Sprite } from '../2d/components/sprite';\r\nimport { warnID } from '../core/platform/debug';\r\nimport { legacyCC } from '../core/global-exports';\r\n\r\n/**\r\n * @en\r\n * Enum for ProgressBar mode.\r\n *\r\n * @zh\r\n * 进度条模式。\r\n */\r\nenum Mode {\r\n    /**\r\n     * @en\r\n     * The mode of horizontal.\r\n     *\r\n     * @zh\r\n     * 水平方向模式。\r\n     */\r\n    HORIZONTAL = 0,\r\n\r\n    /**\r\n     * @en\r\n     * The mode of vertical.\r\n     *\r\n     * @zh\r\n     *  垂直方向模式。\r\n     */\r\n    VERTICAL = 1,\r\n    /**\r\n     * @en\r\n     * The mode of fill.\r\n     *\r\n     * @zh\r\n     * 填充模式。\r\n     */\r\n    FILLED = 2,\r\n}\r\n\r\nEnum(Mode);\r\n\r\n/**\r\n * @en\r\n * Visual indicator of progress in some operation.\r\n * Displays a bar to the user representing how far the operation has progressed.\r\n *\r\n * @zh\r\n * 进度条组件，可用于显示加载资源时的进度。\r\n *\r\n * @example\r\n * ```ts\r\n * // update progressBar\r\n * update(dt) {\r\n *     var progress = progressBar.progress;\r\n *     if (progress > 0) {\r\n *         progress += dt;\r\n *     }\r\n *     else {\r\n *         progress = 1;\r\n *     }\r\n *     progressBar.progress = progress;\r\n * }\r\n * ```\r\n */\r\n@ccclass('cc.ProgressBar')\r\n@help('i18n:cc.ProgressBar')\r\n@executionOrder(110)\r\n@menu('UI/ProgressBar')\r\n@requireComponent(UITransform)\r\n// @executeInEditMode\r\nexport class ProgressBar extends Component {\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The targeted Sprite which will be changed progressively.\r\n     *\r\n     * @zh\r\n     * 用来显示进度条比例的 Sprite 对象。\r\n     */\r\n    @type(Sprite)\r\n    @tooltip('i18n:progress.bar_sprite')\r\n    get barSprite (): Sprite | null {\r\n        return this._barSprite;\r\n    }\r\n\r\n    set barSprite (value: Sprite | null) {\r\n        if (this._barSprite === value) {\r\n            return;\r\n        }\r\n\r\n        this._barSprite = value;\r\n        this._initBarSprite();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The progress mode, there are two modes supported now: horizontal and vertical.\r\n     *\r\n     * @zh\r\n     * 进度条的模式。\r\n     */\r\n    @type(Mode)\r\n    @tooltip('i18n:progress.mode')\r\n    get mode (): Mode {\r\n        return this._mode;\r\n    }\r\n\r\n    set mode (value: Mode) {\r\n        if (this._mode === value) {\r\n            return;\r\n        }\r\n\r\n        this._mode = value;\r\n        if (this._barSprite) {\r\n            const entity = this._barSprite.node;\r\n            if (!entity) { return; }\r\n\r\n            const entitySize = entity._getUITransformComp()!.contentSize;\r\n            if (this._mode === Mode.HORIZONTAL) {\r\n                this.totalLength = entitySize.width;\r\n            } else if (this._mode === Mode.VERTICAL) {\r\n                this.totalLength = entitySize.height;\r\n            } else if (this._mode === Mode.FILLED) {\r\n                this.totalLength = this._barSprite.fillRange;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The total width or height of the bar sprite.\r\n     *\r\n     * @zh\r\n     * 进度条实际的总长度。\r\n     */\r\n    @tooltip('i18n:progress.total_length')\r\n    get totalLength (): number {\r\n        return this._totalLength;\r\n    }\r\n\r\n    set totalLength (value) {\r\n        if (this._mode === Mode.FILLED) {\r\n            value = clamp01(value);\r\n        }\r\n\r\n        if (this._totalLength === value) {\r\n            return;\r\n        }\r\n\r\n        this._totalLength = value;\r\n        this._updateBarStatus();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The current progress of the bar sprite. The valid value is between 0-1.\r\n     *\r\n     * @zh\r\n     * 当前进度值，该数值的区间是 0-1 之间。\r\n     */\r\n    @range([0, 1, 0.1])\r\n    @slide\r\n    @tooltip('i18n:progress.progress')\r\n    get progress (): number {\r\n        return this._progress;\r\n    }\r\n\r\n    set progress (value) {\r\n        if (this._progress === value) {\r\n            return;\r\n        }\r\n\r\n        this._progress = value;\r\n        this._updateBarStatus();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether reverse the progress direction of the bar sprite.\r\n     *\r\n     * @zh\r\n     * 进度条是否进行反方向变化。\r\n     */\r\n    @tooltip('i18n:progress.reverse')\r\n    get reverse (): boolean {\r\n        return this._reverse;\r\n    }\r\n\r\n    set reverse (value) {\r\n        if (this._reverse === value) {\r\n            return;\r\n        }\r\n\r\n        this._reverse = value;\r\n        if (this._barSprite) {\r\n            this._barSprite.fillStart = 1 - this._barSprite.fillStart;\r\n        }\r\n        this._updateBarStatus();\r\n    }\r\n\r\n    public static Mode = Mode;\r\n    @serializable\r\n    protected _barSprite: Sprite | null = null;\r\n    @serializable\r\n    protected _mode = Mode.HORIZONTAL;\r\n    @serializable\r\n    protected _totalLength = 1;\r\n    @serializable\r\n    protected _progress = 0.1;\r\n    @serializable\r\n    protected _reverse = false;\r\n\r\n    protected onLoad (): void {\r\n        this._updateBarStatus();\r\n    }\r\n\r\n    protected _initBarSprite (): void {\r\n        if (this._barSprite) {\r\n            const entity = this._barSprite.node;\r\n            if (!entity) { return; }\r\n\r\n            const trans = this.node._getUITransformComp()!;\r\n            const nodeSize = trans.contentSize;\r\n            const nodeAnchor = trans.anchorPoint;\r\n\r\n            const barSpriteSize = entity._getUITransformComp()!.contentSize;\r\n\r\n            // if (entity.parent === this.node) {\r\n            //     this.node.setContentSize(barSpriteSize);\r\n            // }\r\n\r\n            if (this._barSprite.fillType === Sprite.FillType.RADIAL) {\r\n                this._mode = Mode.FILLED;\r\n            }\r\n\r\n            if (this._mode === Mode.HORIZONTAL) {\r\n                this.totalLength = barSpriteSize.width;\r\n            } else if (this._mode === Mode.VERTICAL) {\r\n                this.totalLength = barSpriteSize.height;\r\n            } else {\r\n                this.totalLength = this._barSprite.fillRange;\r\n            }\r\n\r\n            if (entity.parent === this.node) {\r\n                const x = -nodeSize.width * nodeAnchor.x;\r\n                entity.setPosition(x, 0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _updateBarStatus (): void {\r\n        if (this._barSprite) {\r\n            const entity = this._barSprite.node;\r\n\r\n            if (!entity) { return; }\r\n\r\n            const entTrans = entity._getUITransformComp()!;\r\n            const entityAnchorPoint = entTrans.anchorPoint;\r\n            const entitySize = entTrans.contentSize;\r\n\r\n            let anchorPoint = new Vec2(0, 0.5);\r\n            const progress = clamp01(this._progress);\r\n            let actualLenth = this._totalLength * progress;\r\n            let finalContentSize = entitySize;\r\n            let totalWidth = 0;\r\n            let totalHeight = 0;\r\n            switch (this._mode) {\r\n            case Mode.HORIZONTAL:\r\n                if (this._reverse) {\r\n                    anchorPoint = new Vec2(1, 0.5);\r\n                }\r\n\r\n                finalContentSize = new Size(actualLenth, entitySize.height);\r\n                totalWidth = this._totalLength;\r\n                totalHeight = entitySize.height;\r\n                break;\r\n            case Mode.VERTICAL:\r\n                if (this._reverse) {\r\n                    anchorPoint = new Vec2(0.5, 1);\r\n                } else {\r\n                    anchorPoint = new Vec2(0.5, 0);\r\n                }\r\n\r\n                finalContentSize = new Size(entitySize.width, actualLenth);\r\n                totalWidth = entitySize.width;\r\n                totalHeight = this._totalLength;\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n\r\n            // handling filled mode\r\n            if (this._mode === Mode.FILLED) {\r\n                if (this._barSprite.type !== Sprite.Type.FILLED) {\r\n                    warnID(16397);\r\n                } else {\r\n                    if (this._reverse) {\r\n                        actualLenth *= -1;\r\n                    }\r\n                    this._barSprite.fillRange = actualLenth;\r\n                }\r\n            } else if (this._barSprite.type !== Sprite.Type.FILLED) {\r\n                const anchorOffsetX = anchorPoint.x - entityAnchorPoint.x;\r\n                const anchorOffsetY = anchorPoint.y - entityAnchorPoint.y;\r\n\r\n                const finalPosition = new Vec3(entity.position);\r\n                finalPosition.add3f(totalWidth * anchorOffsetX, totalHeight * anchorOffsetY, 0);\r\n                entity.setPosition(finalPosition);\r\n\r\n                entTrans.setAnchorPoint(anchorPoint);\r\n                entTrans.setContentSize(finalContentSize);\r\n            } else {\r\n                warnID(16398);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlegacyCC.ProgressBar = ProgressBar;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, requireComponent, tooltip, displayOrder, type, serializable } from 'cc.decorator';\r\nimport { Component } from '../scene-graph/component';\r\nimport { UITransform } from '../2d/framework';\r\nimport { Color, Size, Vec2, Vec3 } from '../core/math';\r\nimport { ccenum } from '../core/value-types/enum';\r\nimport { clamp01 } from '../core/math/utils';\r\nimport { ScrollView } from './scroll-view';\r\nimport { Sprite } from '../2d/components/sprite';\r\nimport { Node } from '../scene-graph';\r\nimport { legacyCC } from '../core/global-exports';\r\n\r\nconst GETTING_SHORTER_FACTOR = 20;\r\nconst _tempPos_1 = new Vec3();\r\nconst _tempPos_2 = new Vec3();\r\nconst _tempVec3 = new Vec3();\r\nconst defaultAnchor = new Vec2();\r\nconst _tempColor = new Color();\r\nconst _tempVec2 = new Vec2();\r\n\r\n/**\r\n * @en\r\n * Enum for ScrollBar direction.\r\n *\r\n * @zh\r\n * 滚动条方向。\r\n */\r\nenum ScrollBarDirection {\r\n    /**\r\n     * @en\r\n     * Horizontal scroll.\r\n     *\r\n     * @zh\r\n     * 横向滚动。\r\n     */\r\n    HORIZONTAL = 0,\r\n\r\n    /**\r\n     * @en\r\n     * Vertical scroll.\r\n     *\r\n     * @zh\r\n     * 纵向滚动。\r\n     */\r\n    VERTICAL = 1,\r\n}\r\n\r\nccenum(ScrollBarDirection);\r\n\r\n/**\r\n * @en\r\n * The ScrollBar control allows the user to scroll an image or other view that is too large to see completely.\r\n *\r\n * @zh\r\n * 滚动条组件。\r\n */\r\n@ccclass('cc.ScrollBar')\r\n@help('i18n:cc.ScrollBar')\r\n@executionOrder(110)\r\n@menu('UI/ScrollBar')\r\n@requireComponent(UITransform)\r\nexport class ScrollBar extends Component {\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The \"handle\" part of the ScrollBar.\r\n     *\r\n     * @zh\r\n     * 作为当前滚动区域位置显示的滑块 Sprite。\r\n     */\r\n    @type(Sprite)\r\n    @displayOrder(0)\r\n    @tooltip('i18n:scrollbar.handle')\r\n    get handle (): Sprite | null {\r\n        return this._handle;\r\n    }\r\n\r\n    set handle (value: Sprite | null) {\r\n        if (this._handle === value) {\r\n            return;\r\n        }\r\n        this._handle = value;\r\n        this.onScroll(Vec2.ZERO);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The direction of scrolling.\r\n     *\r\n     * @zh\r\n     * ScrollBar 的滚动方向。\r\n     */\r\n    @type(ScrollBarDirection)\r\n    @displayOrder(1)\r\n    @tooltip('i18n:scrollbar.direction')\r\n    get direction (): ScrollBarDirection {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction (value) {\r\n        if (this._direction === value) {\r\n            return;\r\n        }\r\n\r\n        this._direction = value;\r\n        this.onScroll(Vec2.ZERO);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether enable auto hide or not.\r\n     *\r\n     * @zh\r\n     * 是否在没有滚动动作时自动隐藏 ScrollBar。\r\n     */\r\n    @displayOrder(2)\r\n    @tooltip('i18n:scrollbar.auto_hide')\r\n    get enableAutoHide (): boolean {\r\n        return this._enableAutoHide;\r\n    }\r\n\r\n    set enableAutoHide (value) {\r\n        if (this._enableAutoHide === value) {\r\n            return;\r\n        }\r\n\r\n        this._enableAutoHide = value;\r\n        if (this._enableAutoHide) {\r\n            this._setOpacity(0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The time to hide ScrollBar when scroll finished.\r\n     * Note: This value is only useful when enableAutoHide is true.\r\n     *\r\n     * @zh\r\n     * 没有滚动动作后经过多久会自动隐藏。<br/>\r\n     * 注意：只要当 “enableAutoHide” 为 true 时，才有效。\r\n     */\r\n    @displayOrder(3)\r\n    @tooltip('i18n:scrollbar.auto_hide_time')\r\n    get autoHideTime (): number {\r\n        return this._autoHideTime;\r\n    }\r\n\r\n    set autoHideTime (value) {\r\n        if (this._autoHideTime === value) {\r\n            return;\r\n        }\r\n\r\n        this._autoHideTime = value;\r\n    }\r\n\r\n    public static Direction = ScrollBarDirection;\r\n    @serializable\r\n    protected _scrollView: ScrollView | null = null;\r\n    @serializable\r\n    protected _handle: Sprite | null = null;\r\n    @serializable\r\n    protected _direction = ScrollBarDirection.HORIZONTAL;\r\n    @serializable\r\n    protected _enableAutoHide = false;\r\n    @serializable\r\n    protected _autoHideTime = 1.0;\r\n\r\n    protected _touching = false;\r\n    protected _opacity = 255;\r\n    protected _autoHideRemainingTime = 0;\r\n\r\n    /**\r\n     * @en\r\n     * Hide ScrollBar.\r\n     *\r\n     * @zh\r\n     * 滚动条隐藏。\r\n     */\r\n    public hide (): void {\r\n        this._autoHideRemainingTime = 0;\r\n        this._setOpacity(0);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Show ScrollBar.\r\n     *\r\n     * @zh\r\n     * 滚动条显示。\r\n     */\r\n    public show (): void {\r\n        this._autoHideRemainingTime = this._autoHideTime;\r\n        // because scrollbar's onEnable is later than scrollView, its _opacity is be modified in onEnable. we should reset it.\r\n        this._opacity = 255;\r\n        this._setOpacity(this._opacity);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Reset the position of ScrollBar.\r\n     *\r\n     * @zh\r\n     * 重置滚动条位置。\r\n     *\r\n     * @param outOfBoundary @en Rolling displacement. @zh 滚动位移。\r\n     */\r\n    public onScroll (outOfBoundary: Vec2 | Readonly<Vec2>): void {\r\n        if (!this._scrollView) {\r\n            return;\r\n        }\r\n\r\n        const content = this._scrollView.content;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const contentSize = content._getUITransformComp()!.contentSize;\r\n        const scrollViewSize = this._scrollView.node._getUITransformComp()!.contentSize;\r\n        const barSize = this.node._getUITransformComp()!.contentSize;\r\n\r\n        if (this._conditionalDisableScrollBar(contentSize, scrollViewSize)) {\r\n            return;\r\n        }\r\n\r\n        if (this._enableAutoHide) {\r\n            this._autoHideRemainingTime = this._autoHideTime;\r\n            this._setOpacity(this._opacity);\r\n        }\r\n\r\n        let contentMeasure = 0;\r\n        let scrollViewMeasure = 0;\r\n        let outOfBoundaryValue = 0;\r\n        let contentPosition = 0;\r\n        let handleNodeMeasure = 0;\r\n        const outOfContentPosition = _tempVec2;\r\n        outOfContentPosition.set(0, 0);\r\n\r\n        if (this._direction === ScrollBarDirection.HORIZONTAL) {\r\n            contentMeasure = contentSize.width;\r\n            scrollViewMeasure = scrollViewSize.width;\r\n            handleNodeMeasure = barSize.width;\r\n            outOfBoundaryValue = outOfBoundary.x;\r\n\r\n            this._convertToScrollViewSpace(outOfContentPosition, content);\r\n            contentPosition = -outOfContentPosition.x;\r\n        } else if (this._direction === ScrollBarDirection.VERTICAL) {\r\n            contentMeasure = contentSize.height;\r\n            scrollViewMeasure = scrollViewSize.height;\r\n            handleNodeMeasure = barSize.height;\r\n            outOfBoundaryValue = outOfBoundary.y;\r\n\r\n            this._convertToScrollViewSpace(outOfContentPosition, content);\r\n            contentPosition = -outOfContentPosition.y;\r\n        }\r\n\r\n        const length = this._calculateLength(contentMeasure, scrollViewMeasure, handleNodeMeasure, outOfBoundaryValue);\r\n        const position = _tempVec2;\r\n        this._calculatePosition(position, contentMeasure, scrollViewMeasure, handleNodeMeasure, contentPosition, outOfBoundaryValue, length);\r\n\r\n        this._updateLength(length);\r\n        this._updateHandlerPosition(position);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Sets the scroll view.\r\n     *\r\n     * @zh\r\n     * 滚动视窗设置。\r\n     *\r\n     * @param scrollView @en The scroll view which is attached with this scroll bar. @zh 当前滚动条附着的滚动视窗。\r\n     */\r\n    public setScrollView (scrollView: ScrollView): void {\r\n        this._scrollView = scrollView;\r\n    }\r\n\r\n    public onTouchBegan (): void {\r\n        if (!this._enableAutoHide) {\r\n            return;\r\n        }\r\n        this._touching = true;\r\n    }\r\n\r\n    public onTouchEnded (): void {\r\n        if (!this._enableAutoHide) {\r\n            return;\r\n        }\r\n\r\n        this._touching = false;\r\n\r\n        if (this._autoHideTime <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._scrollView) {\r\n            const content = this._scrollView.content;\r\n            if (content) {\r\n                const contentSize = content._getUITransformComp()!.contentSize;\r\n                const scrollViewSize = this._scrollView.node._getUITransformComp()!.contentSize;\r\n                if (this._conditionalDisableScrollBar(contentSize, scrollViewSize)) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._autoHideRemainingTime = this._autoHideTime;\r\n    }\r\n\r\n    protected onEnable (): void {\r\n        const renderComp = this.node.getComponent(Sprite);\r\n        if (renderComp) {\r\n            this._opacity = renderComp.color.a;\r\n        }\r\n    }\r\n\r\n    protected start (): void {\r\n        if (this._enableAutoHide) {\r\n            this._setOpacity(0);\r\n        }\r\n    }\r\n\r\n    protected update (dt: number): void {\r\n        this._processAutoHide(dt);\r\n    }\r\n\r\n    protected _convertToScrollViewSpace (out: Vec2, content: Node): void {\r\n        const scrollTrans = this._scrollView && this._scrollView.node._getUITransformComp();\r\n        const contentTrans = content._getUITransformComp();\r\n        if (!scrollTrans || !contentTrans) {\r\n            out.set(Vec2.ZERO);\r\n        } else {\r\n            _tempPos_1.set(-contentTrans.anchorX * contentTrans.width, -contentTrans.anchorY * contentTrans.height, 0);\r\n            contentTrans.convertToWorldSpaceAR(_tempPos_1, _tempPos_2);\r\n            const scrollViewSpacePos = scrollTrans.convertToNodeSpaceAR(_tempPos_2);\r\n            scrollViewSpacePos.x += scrollTrans.anchorX * scrollTrans.width;\r\n            scrollViewSpacePos.y += scrollTrans.anchorY * scrollTrans.height;\r\n\r\n            out.set(scrollViewSpacePos.x, scrollViewSpacePos.y);\r\n        }\r\n    }\r\n\r\n    protected _setOpacity (opacity: number): void {\r\n        if (this._handle) {\r\n            let renderComp = this.node.getComponent(Sprite);\r\n            if (renderComp) {\r\n                _tempColor.set(renderComp.color);\r\n                _tempColor.a = opacity;\r\n                renderComp.color = _tempColor;\r\n            }\r\n\r\n            renderComp = this._handle.getComponent(Sprite);\r\n            if (renderComp) {\r\n                _tempColor.set(renderComp.color);\r\n                _tempColor.a = opacity;\r\n                renderComp.color = _tempColor;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _updateHandlerPosition (position: Vec2): void {\r\n        if (this._handle) {\r\n            const oldPosition = _tempVec3;\r\n            this._fixupHandlerPosition(oldPosition);\r\n\r\n            this._handle.node.setPosition(position.x + oldPosition.x, position.y + oldPosition.y, oldPosition.z);\r\n        }\r\n    }\r\n\r\n    protected _fixupHandlerPosition (out: Vec3): void {\r\n        const uiTrans = this.node._getUITransformComp()!;\r\n        const barSize = uiTrans.contentSize;\r\n        const barAnchor = uiTrans.anchorPoint;\r\n        const handleSize = this.handle!.node._getUITransformComp()!.contentSize;\r\n\r\n        const handleParent = this.handle!.node.parent!;\r\n\r\n        Vec3.set(_tempPos_1, -barSize.width * barAnchor.x, -barSize.height * barAnchor.y, 0);\r\n        const leftBottomWorldPosition = this.node._getUITransformComp()!.convertToWorldSpaceAR(_tempPos_1, _tempPos_2);\r\n        const fixupPosition = out;\r\n        fixupPosition.set(0, 0, 0);\r\n        handleParent._getUITransformComp()!.convertToNodeSpaceAR(leftBottomWorldPosition, fixupPosition);\r\n\r\n        if (this.direction === ScrollBarDirection.HORIZONTAL) {\r\n            fixupPosition.set(fixupPosition.x, fixupPosition.y + (barSize.height - handleSize.height) / 2, fixupPosition.z);\r\n        } else if (this.direction === ScrollBarDirection.VERTICAL) {\r\n            fixupPosition.set(fixupPosition.x + (barSize.width - handleSize.width) / 2, fixupPosition.y, fixupPosition.z);\r\n        }\r\n\r\n        this.handle!.node.setPosition(fixupPosition);\r\n    }\r\n\r\n    protected _conditionalDisableScrollBar (contentSize: Size, scrollViewSize: Size): boolean {\r\n        if (contentSize.width <= scrollViewSize.width && this._direction === ScrollBarDirection.HORIZONTAL) {\r\n            return true;\r\n        }\r\n\r\n        if (contentSize.height <= scrollViewSize.height && this._direction === ScrollBarDirection.VERTICAL) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected _calculateLength (contentMeasure: number, scrollViewMeasure: number, handleNodeMeasure: number, outOfBoundary: number): number {\r\n        let denominatorValue = contentMeasure;\r\n        if (outOfBoundary) {\r\n            denominatorValue += (outOfBoundary > 0 ? outOfBoundary : -outOfBoundary) * GETTING_SHORTER_FACTOR;\r\n        }\r\n\r\n        const lengthRation = scrollViewMeasure / denominatorValue;\r\n        return handleNodeMeasure * lengthRation;\r\n    }\r\n\r\n    protected _calculatePosition (\r\n        out: Vec2,\r\n        contentMeasure: number,\r\n        scrollViewMeasure: number,\r\n        handleNodeMeasure: number,\r\n        contentPosition: number,\r\n        outOfBoundary: number,\r\n        actualLenth: number,\r\n    ): void {\r\n        let denominatorValue = contentMeasure - scrollViewMeasure;\r\n        if (outOfBoundary) {\r\n            denominatorValue += Math.abs(outOfBoundary);\r\n        }\r\n\r\n        let positionRatio = 0;\r\n        if (denominatorValue) {\r\n            positionRatio = contentPosition / denominatorValue;\r\n            positionRatio = clamp01(positionRatio);\r\n        }\r\n\r\n        const position = (handleNodeMeasure - actualLenth) * positionRatio;\r\n        if (this._direction === ScrollBarDirection.VERTICAL) {\r\n            out.set(0, position);\r\n        } else {\r\n            out.set(position, 0);\r\n        }\r\n    }\r\n\r\n    protected _updateLength (length: number): void {\r\n        if (this._handle) {\r\n            const handleNode = this._handle.node;\r\n            const handleTrans = handleNode._getUITransformComp()!;\r\n            const handleNodeSize = handleTrans.contentSize;\r\n            const anchor = handleTrans.anchorPoint;\r\n            if (anchor.x !== defaultAnchor.x || anchor.y !== defaultAnchor.y) {\r\n                handleTrans.setAnchorPoint(defaultAnchor);\r\n            }\r\n\r\n            if (this._direction === ScrollBarDirection.HORIZONTAL) {\r\n                handleTrans.setContentSize(length, handleNodeSize.height);\r\n            } else {\r\n                handleTrans.setContentSize(handleNodeSize.width, length);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _processAutoHide (deltaTime: number): void {\r\n        if (!this._enableAutoHide || this._autoHideRemainingTime <= 0) {\r\n            return;\r\n        } else if (this._touching) {\r\n            return;\r\n        }\r\n\r\n        this._autoHideRemainingTime -= deltaTime;\r\n        if (this._autoHideRemainingTime <= this._autoHideTime) {\r\n            this._autoHideRemainingTime = Math.max(0, this._autoHideRemainingTime);\r\n            const opacity = this._opacity * (this._autoHideRemainingTime / this._autoHideTime);\r\n            this._setOpacity(opacity);\r\n        }\r\n    }\r\n}\r\n\r\nlegacyCC.ScrollBar = ScrollBar;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * @en\r\n * Handling touch events in a ViewGroup takes special care,\r\n * because it's common for a ViewGroup to have children that are targets for different touch events than the ViewGroup itself.\r\n * To make sure that each view correctly receives the touch events intended for it,\r\n * ViewGroup should register capture phase event and handle the event propagation properly.\r\n * Please refer to ScrollView for more information.\r\n *\r\n * @zh\r\n * ViewGroup 的事件处理比较特殊，因为 ViewGroup 里面的子节点关心的事件跟 ViewGroup 本身可能不一样。\r\n * 为了让子节点能够正确地处理事件，ViewGroup 需要注册 capture 阶段的事件，并且合理地处理 ViewGroup 之间的事件传递。\r\n * 请参考 ScrollView 的实现来获取更多信息。\r\n */\r\n\r\nimport { ccclass, executionOrder } from 'cc.decorator';\r\nimport { Component } from '../scene-graph/component';\r\nimport { legacyCC } from '../core/global-exports';\r\n\r\n@ccclass('cc.ViewGroup')\r\n@executionOrder(110)\r\nexport class ViewGroup extends Component {\r\n\r\n}\r\n\r\nlegacyCC.ViewGroup = ViewGroup;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, displayOrder, executionOrder, help, menu, range, requireComponent, serializable, tooltip, type } from 'cc.decorator';\r\nimport { EDITOR_NOT_IN_PREVIEW, USE_XR } from 'internal:constants';\r\nimport { UITransform } from '../2d/framework';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { Size, Vec2, Vec3, approx, v2, v3 } from '../core/math';\r\nimport { errorID, logID } from '../core/platform/debug';\r\nimport { director, DirectorEvent } from '../game/director';\r\nimport { input } from '../input/input';\r\nimport { Event, EventGamepad, EventHandle, EventMouse, EventTouch, SystemEventType, Touch } from '../input/types';\r\nimport { EventHandler as ComponentEventHandler } from '../scene-graph/component-event-handler';\r\nimport { Node } from '../scene-graph/node';\r\nimport { TransformBit } from '../scene-graph/node-enum';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\nimport { DeviceType, XrUIPressEvent, XrUIPressEventType } from '../xr/event/xr-event-handle';\r\nimport { Layout } from './layout';\r\nimport { ScrollBar } from './scroll-bar';\r\nimport { ViewGroup } from './view-group';\r\nimport { InputEventType } from '../input/types/event-enum';\r\n\r\nconst NUMBER_OF_GATHERED_TOUCHES_FOR_MOVE_SPEED = 5;\r\nconst OUT_OF_BOUNDARY_BREAKING_FACTOR = 0.05;\r\nconst EPSILON = 1e-4;\r\nconst TOLERANCE = 1e4;\r\nconst MOVEMENT_FACTOR = 0.7;\r\nconst _tempVec3 = v3();\r\nconst _tempVec3_1 = v3();\r\nconst _tempVec2 = v2();\r\nconst _tempVec2_1 = v2();\r\n\r\nconst quintEaseOut = (time: number): number => {\r\n    time -= 1;\r\n    return time * time * time * time * time + 1;\r\n};\r\n\r\nconst getTimeInMilliseconds = (): number => {\r\n    const currentTime = new Date();\r\n    return currentTime.getMilliseconds();\r\n};\r\n\r\nconst eventMap = {\r\n    'scroll-to-top': 0,\r\n    'scroll-to-bottom': 1,\r\n    'scroll-to-left': 2,\r\n    'scroll-to-right': 3,\r\n    scrolling: 4,\r\n    'bounce-bottom': 6,\r\n    'bounce-left': 7,\r\n    'bounce-right': 8,\r\n    'bounce-top': 5,\r\n    'scroll-ended': 9,\r\n    'touch-up': 10,\r\n    'scroll-ended-with-threshold': 11,\r\n    'scroll-began': 12,\r\n};\r\n\r\nconst _moveDeltaOptions = {\r\n    anchor: v2(),\r\n    applyToHorizontal: false,\r\n    applyToVertical: false,\r\n};\r\n\r\nconst assignMoveDeltaOption = (x: number, y: number, applyToHorizontal: boolean, applyToVertical: boolean): void => {\r\n    _moveDeltaOptions.anchor.set(x, y);\r\n    _moveDeltaOptions.applyToHorizontal = applyToHorizontal;\r\n    _moveDeltaOptions.applyToVertical = applyToVertical;\r\n};\r\n\r\n/**\r\n * @en\r\n * Enum for ScrollView event type.\r\n *\r\n * @zh\r\n * 滚动视图事件类型。\r\n */\r\nexport enum ScrollViewEventType {\r\n    /**\r\n     * @en\r\n     * It means an invalid event type or \"default empty value\" of EventType.\r\n     *\r\n     * @zh\r\n     * 代表无效事件, 或者EventType的默认空值。\r\n     */\r\n    NONE = '',\r\n\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the top boundary of inner container.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到顶部边界事件。\r\n     */\r\n    SCROLL_TO_TOP = 'scroll-to-top',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the bottom boundary of inner container.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到底部边界事件。\r\n     */\r\n    SCROLL_TO_BOTTOM = 'scroll-to-bottom',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the left boundary of inner container.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到左边界事件。\r\n     */\r\n    SCROLL_TO_LEFT = 'scroll-to-left',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the right boundary of inner container.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到右边界事件。\r\n     */\r\n    SCROLL_TO_RIGHT = 'scroll-to-right',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll began.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动开始时发出的事件。\r\n     */\r\n    SCROLL_BEGAN = 'scroll-began',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView auto scroll ended.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动结束的时候发出的事件。\r\n     */\r\n    SCROLL_ENDED = 'scroll-ended',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the top boundary of inner container and start bounce.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到顶部边界并且开始回弹时发出的事件。\r\n     */\r\n    BOUNCE_TOP = 'bounce-top',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the bottom boundary of inner container and start bounce.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到底部边界并且开始回弹时发出的事件。\r\n     */\r\n    BOUNCE_BOTTOM = 'bounce-bottom',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the left boundary of inner container and start bounce.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到左边界并且开始回弹时发出的事件。\r\n     */\r\n    BOUNCE_LEFT = 'bounce-left',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView scroll to the right boundary of inner container and start bounce.\r\n     *\r\n     * @zh\r\n     * 滚动视图滚动到右边界并且开始回弹时发出的事件。\r\n     */\r\n    BOUNCE_RIGHT = 'bounce-right',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView is scrolling.\r\n     *\r\n     * @zh\r\n     * 滚动视图正在滚动时发出的事件。\r\n     */\r\n    SCROLLING = 'scrolling',\r\n    /**\r\n     * @en\r\n     * The event emitted when ScrollView auto scroll ended with a threshold.\r\n     *\r\n     * @zh\r\n     * 滚动视图自动滚动快要结束的时候发出的事件。\r\n     */\r\n    SCROLL_ENG_WITH_THRESHOLD = 'scroll-ended-with-threshold',\r\n    /**\r\n     * @en\r\n     * The event emitted when user release the touch.\r\n     *\r\n     * @zh\r\n     * 当用户松手的时候会发出一个事件。\r\n     */\r\n    TOUCH_UP = 'touch-up',\r\n}\r\n\r\nenum XrhoverType {\r\n    NONE = 0,\r\n    LEFT = 1,\r\n    RIGHT = 2\r\n}\r\n\r\n/**\r\n * @en\r\n * Layout container for a view hierarchy that can be scrolled by the user,\r\n * allowing it to be larger than the physical display.\r\n *\r\n * @zh\r\n * 滚动视图组件。\r\n */\r\n\r\n@ccclass('cc.ScrollView')\r\n@help('i18n:cc.ScrollView')\r\n@executionOrder(110)\r\n@menu('UI/ScrollView')\r\n@requireComponent(UITransform)\r\nexport class ScrollView extends ViewGroup {\r\n    public static EventType = ScrollViewEventType;\r\n\r\n    /**\r\n     * @en\r\n     * The elapse time of bouncing back. A value of 0 will bounce back immediately.\r\n     *\r\n     * @zh\r\n     * 回弹持续的时间，0 表示将立即反弹。\r\n     */\r\n    @serializable\r\n    @range([0, 10])\r\n    @displayOrder(5)\r\n    @tooltip('i18n:scrollview.bounceDuration')\r\n    public bounceDuration = 1;\r\n\r\n    /**\r\n     * @en\r\n     * It determines how quickly the content stop moving. A value of 1 will stop the movement immediately.\r\n     * A value of 0 will never stop the movement until it reaches to the boundary of scrollview.\r\n     *\r\n     * @zh\r\n     * 开启惯性后，在用户停止触摸后滚动多快停止，0表示永不停止，1表示立刻停止。\r\n     */\r\n    @serializable\r\n    @range([0, 1, 0.1])\r\n    @displayOrder(3)\r\n    @tooltip('i18n:scrollview.brake')\r\n    public brake = 0.5;\r\n\r\n    /**\r\n     * @en\r\n     * When elastic is set, the content will be bounce back when move out of boundary.\r\n     *\r\n     * @zh\r\n     * 是否允许滚动内容超过边界，并在停止触摸后回弹。\r\n     */\r\n    @serializable\r\n    @displayOrder(3)\r\n    @tooltip('i18n:scrollview.elastic')\r\n    public elastic = true;\r\n\r\n    /**\r\n     * @en\r\n     * When inertia is set, the content will continue to move when touch ended.\r\n     *\r\n     * @zh\r\n     * 是否开启滚动惯性。\r\n     */\r\n    @serializable\r\n    @displayOrder(2)\r\n    @tooltip('i18n:scrollview.inertia')\r\n    public inertia = true;\r\n\r\n    /**\r\n     * @en\r\n     * This is a reference to the UI element to be scrolled.\r\n     *\r\n     * @zh\r\n     * 可滚动展示内容的节点。\r\n     */\r\n    @type(Node)\r\n    @displayOrder(5)\r\n    @tooltip('i18n:scrollview.content')\r\n    get content (): Node | null {\r\n        return this._content;\r\n    }\r\n    set content (value) {\r\n        if (this._content === value) {\r\n            return;\r\n        }\r\n        const viewTrans = value && value.parent && value.parent._getUITransformComp();\r\n        if (value && (!value || !viewTrans)) {\r\n            logID(4302);\r\n            return;\r\n        }\r\n\r\n        this._content = value;\r\n        this._calculateBoundary();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Enable horizontal scroll.\r\n     *\r\n     * @zh\r\n     * 是否开启水平滚动。\r\n     */\r\n    @serializable\r\n    @displayOrder(0)\r\n    @tooltip('i18n:scrollview.horizontal')\r\n    public horizontal = true;\r\n\r\n    /**\r\n     * @en\r\n     * The horizontal scrollbar reference.\r\n     * @zh\r\n     * 水平滚动的 ScrollBar。\r\n     */\r\n    @type(ScrollBar)\r\n    @displayOrder(0)\r\n    @tooltip('i18n:scrollview.horizontal_bar')\r\n    get horizontalScrollBar (): ScrollBar | null {\r\n        const horizontalScrollBar = this._horizontalScrollBar;\r\n        if (horizontalScrollBar && !horizontalScrollBar.isValid) {\r\n            errorID(4303, 'horizontal', this.node.name);\r\n        }\r\n        return horizontalScrollBar;\r\n    }\r\n\r\n    set horizontalScrollBar (value: ScrollBar | null) {\r\n        if (this._horizontalScrollBar === value) {\r\n            return;\r\n        }\r\n\r\n        this._horizontalScrollBar = value;\r\n\r\n        if (this._horizontalScrollBar) {\r\n            this._horizontalScrollBar.setScrollView(this);\r\n            this._updateScrollBar(Vec2.ZERO);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Enable vertical scroll.\r\n     *\r\n     * @zh\r\n     * 是否开启垂直滚动。\r\n     */\r\n    @serializable\r\n    @displayOrder(1)\r\n    @tooltip('i18n:scrollview.vertical')\r\n    public vertical = true;\r\n\r\n    /**\r\n     * @en\r\n     * The vertical scrollbar reference.\r\n     *\r\n     * @zh\r\n     * 垂直滚动的 ScrollBar。\r\n     */\r\n    @type(ScrollBar)\r\n    @displayOrder(1)\r\n    @tooltip('i18n:scrollview.vertical_bar')\r\n    get verticalScrollBar (): ScrollBar | null {\r\n        const verticalScrollBar = this._verticalScrollBar;\r\n        if (verticalScrollBar && !verticalScrollBar.isValid) {\r\n            errorID(4303, 'vertical', this.node.name);\r\n        }\r\n        return verticalScrollBar;\r\n    }\r\n\r\n    set verticalScrollBar (value: ScrollBar | null) {\r\n        if (this._verticalScrollBar === value) {\r\n            return;\r\n        }\r\n\r\n        this._verticalScrollBar = value;\r\n\r\n        if (this._verticalScrollBar) {\r\n            this._verticalScrollBar.setScrollView(this);\r\n            this._updateScrollBar(Vec2.ZERO);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If cancelInnerEvents is set to true, the scroll behavior will cancel touch events on inner content nodes\r\n     * It's set to true by default.\r\n     *\r\n     * @zh\r\n     * 如果这个属性被设置为 true，那么滚动行为会取消子节点上注册的触摸事件，默认被设置为 true。<br/>\r\n     * 注意，子节点上的 touchstart 事件仍然会触发，触点移动距离非常短的情况下 touchmove 和 touchend 也不会受影响。\r\n     */\r\n    @serializable\r\n    @displayOrder(9)\r\n    @tooltip('i18n:scrollview.cancelInnerEvents')\r\n    public cancelInnerEvents = true;\r\n\r\n    /**\r\n     * @en\r\n     * ScrollView events callback.\r\n     *\r\n     * @zh\r\n     * 滚动视图的事件回调函数。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @displayOrder(10)\r\n    @tooltip('i18n:scrollview.scrollEvents')\r\n    public scrollEvents: ComponentEventHandler[] = [];\r\n\r\n    /**\r\n     * @en The display view in the scroll view component.\r\n     * @zh scroll view 组件中的显示区域。\r\n     */\r\n    get view (): UITransform | null {\r\n        const parent = this._content && this._content.parent;\r\n        if (!parent) {\r\n            return null;\r\n        }\r\n        return parent._getUITransformComp();\r\n    }\r\n\r\n    protected _autoScrolling = false;\r\n    protected _scrolling = false;\r\n    @serializable\r\n    protected _content: Node | null = null;\r\n    @serializable\r\n    protected _horizontalScrollBar: ScrollBar | null = null;\r\n    @serializable\r\n    protected _verticalScrollBar: ScrollBar | null = null;\r\n\r\n    protected _topBoundary = 0;\r\n    protected _bottomBoundary = 0;\r\n    protected _leftBoundary = 0;\r\n    protected _rightBoundary = 0;\r\n\r\n    protected _touchMoveDisplacements: Vec3[] = [];\r\n    protected _touchMoveTimeDeltas: number[] = [];\r\n    protected _touchMovePreviousTimestamp = 0;\r\n    protected _touchMoved = false;\r\n    protected _autoScrollAttenuate = false;\r\n    protected _autoScrollStartPosition = new Vec3();\r\n    protected _autoScrollTargetDelta = new Vec3();\r\n    protected _autoScrollTotalTime = 0;\r\n    protected _autoScrollAccumulatedTime = 0;\r\n    protected _autoScrollCurrentlyOutOfBoundary = false;\r\n    protected _autoScrollBraking = false;\r\n    protected _autoScrollBrakingStartPosition = new Vec3();\r\n\r\n    protected _outOfBoundaryAmount = new Vec3();\r\n    protected _outOfBoundaryAmountDirty = true;\r\n    protected _stopMouseWheel = false;\r\n    protected _mouseWheelEventElapsedTime = 0.0;\r\n    protected _isScrollEndedWithThresholdEventFired = false;\r\n    // use bit wise operations to indicate the direction\r\n    protected _scrollEventEmitMask = 0;\r\n    protected _isBouncing = false;\r\n    protected _contentPos = new Vec3();\r\n    protected _deltaPos = new Vec3();\r\n    protected _deltaAmount = new Vec3();\r\n\r\n    protected _hoverIn: XrhoverType = XrhoverType.NONE;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the bottom boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图底部。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true) @zh 滚动加速是否衰减，默认为 true\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the bottom of the view.\r\n     * scrollView.scrollToBottom(0.1);\r\n     * ```\r\n     */\r\n    public scrollToBottom (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(0, 0, false, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the top boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图顶部。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the top of the view.\r\n     * scrollView.scrollToTop(0.1);\r\n     * ```\r\n     */\r\n    public scrollToTop (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(0, 1, false, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the left boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图左边。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the left of the view.\r\n     * scrollView.scrollToLeft(0.1);\r\n     * ```\r\n     */\r\n    public scrollToLeft (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(0, 0, true, false, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the right boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图右边。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the right of the view.\r\n     * scrollView.scrollToRight(0.1);\r\n     * ```\r\n     */\r\n    public scrollToRight (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(1, 0, true, false, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the top left boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图左上角。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the upper left corner of the view.\r\n     * scrollView.scrollToTopLeft(0.1);\r\n     * ```\r\n     */\r\n    public scrollToTopLeft (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(0, 1, true, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the top right boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图右上角。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the top right corner of the view.\r\n     * scrollView.scrollToTopRight(0.1);\r\n     * ```\r\n     */\r\n    public scrollToTopRight (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(1, 1, true, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the bottom left boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图左下角。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the lower left corner of the view.\r\n     * scrollView.scrollToBottomLeft(0.1);\r\n     * ```\r\n     */\r\n    public scrollToBottomLeft (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(0, 0, true, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the bottom right boundary of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容将在规定时间内滚动到视图右下角。\r\n     *\r\n     * @param timeInSecond\r\n     * @en The rolling time(in seconds). If time is up, the content will slide to the bottom border. @zh 滚动时间（s）。 如果超时，内容将立即跳到底部边界。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to the lower right corner of the view.\r\n     * scrollView.scrollToBottomRight(0.1);\r\n     * ```\r\n     */\r\n    public scrollToBottomRight (timeInSecond?: number, attenuated = true): void {\r\n        this._doScroll(1, 0, true, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll with an offset related to the ScrollView's top left origin, if timeInSecond is omitted,\r\n     * then it will jump to the specific offset immediately.\r\n     *\r\n     * @zh\r\n     * 视图内容在规定时间内将滚动到 ScrollView 相对左上角原点的偏移位置, 如果 timeInSecond 参数不传，则立即滚动到指定偏移位置。\r\n     *\r\n     * @param offset\r\n     * @en After scrolling the view, the position of the view content relative to the view window. @zh 滚动视图后，视图内容（content）相对于视图窗口（viewport）的位置。\r\n     * @param timeInSecond\r\n     * @en Scroll time (s). If it times out, the content immediately jumps to the specified offset. @zh 滚动时间（s）。 如果超时，内容将立即跳到指定偏移量处。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to middle position in 0.1 second in x-axis\r\n     * let maxScrollOffset = this.getMaxScrollOffset();\r\n     * scrollView.scrollToOffset(new Vec2(maxScrollOffset.x / 2, 0), 0.1);\r\n     * ```\r\n     */\r\n    public scrollToOffset (offset: Vec2, timeInSecond?: number, attenuated = true): void {\r\n        const maxScrollOffset = this.getMaxScrollOffset();\r\n\r\n        const anchor = v2();\r\n        // if maxScrollOffset is 0, then always align the content's top left origin to the top left corner of its parent\r\n        if (maxScrollOffset.x === 0) {\r\n            anchor.x = 0;\r\n        } else {\r\n            anchor.x = offset.x / maxScrollOffset.x;\r\n        }\r\n\r\n        if (maxScrollOffset.y === 0) {\r\n            anchor.y = 1;\r\n        } else {\r\n            anchor.y = (maxScrollOffset.y - offset.y) / maxScrollOffset.y;\r\n        }\r\n\r\n        this.scrollTo(anchor, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the position of the scrolling view relative to the origin in the upper-left corner of the viewport.\r\n     *\r\n     * @zh\r\n     * 获取滚动视图相对于视图窗口左上角原点的位置。\r\n     *\r\n     * @return @en Current rolling offset. @zh 当前滚动偏移量。\r\n     */\r\n    public getScrollOffset (): Vec2 {\r\n        const topDelta = this._getContentTopBoundary() - this._topBoundary;\r\n        const leftDelta = this._getContentLeftBoundary() - this._leftBoundary;\r\n\r\n        return new Vec2(leftDelta, topDelta);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Get the maximize available  scroll offset.\r\n     *\r\n     * @zh\r\n     * 获取滚动视图最大可以滚动的偏移量。\r\n     *\r\n     * @return @en Maximum scrollable offset. @zh 最大可滚动偏移量。\r\n     */\r\n    public getMaxScrollOffset (): Vec2 {\r\n        if (!this._content || !this.view) {\r\n            return Vec2.ZERO;\r\n        }\r\n        const contentSize = this._content._getUITransformComp()!.contentSize;\r\n        let horizontalMaximizeOffset = contentSize.width - this.view.width;\r\n        let verticalMaximizeOffset = contentSize.height - this.view.height;\r\n        horizontalMaximizeOffset = horizontalMaximizeOffset >= 0 ? horizontalMaximizeOffset : 0;\r\n        verticalMaximizeOffset = verticalMaximizeOffset >= 0 ? verticalMaximizeOffset : 0;\r\n\r\n        return new Vec2(horizontalMaximizeOffset, verticalMaximizeOffset);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the horizontal percent position of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容在规定时间内将滚动到 ScrollView 水平方向的百分比位置上。\r\n     *\r\n     * @param percent\r\n     * @en Scroll to the destination which is located at the percent interpolation from left border to the right border @zh 滚动到从左到右指定百分比插值的位置\r\n     * @param timeInSecond\r\n     * @en Scroll time (s). If it times out, the content immediately jumps to the specified offset. @zh 滚动时间（s）。 如果超时，内容将立即跳到指定偏移量处。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Scroll to middle position.\r\n     * scrollView.scrollToBottomRight(0.5, 0.1);\r\n     * ```\r\n     */\r\n    public scrollToPercentHorizontal (percent: number, timeInSecond: number, attenuated: boolean): void {\r\n        this._doScroll(percent, 0, true, false, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the percent position of ScrollView in any direction.\r\n     *\r\n     * @zh\r\n     * 视图内容在规定时间内进行垂直方向和水平方向的滚动，并且滚动到指定百分比位置上。\r\n     *\r\n     * @param anchor\r\n     * @en Scroll to the destination which is located at the anchor interpolation from left/top border to the right/bottom border.\r\n     * @zh 滚动到从左/上到右/下指定锚点对应分量插值的位置。\r\n     * @param timeInSecond\r\n     * @en Scroll time (s). If it times out, the content immediately jumps to the specified offset. @zh 滚动时间（s）。 如果超时，内容将立即跳到指定偏移量处。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * // Vertical scroll to the bottom of the view.\r\n     * scrollView.scrollTo(new Vec2(0, 1), 0.1);\r\n     *\r\n     * // Horizontal scroll to view right.\r\n     * scrollView.scrollTo(new Vec2(1, 0), 0.1);\r\n     * ```\r\n     */\r\n    public scrollTo (anchor: Vec2, timeInSecond?: number, attenuated?: boolean): void {\r\n        this._doScroll(anchor.x, anchor.y, true, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll the content to the vertical percent position of ScrollView.\r\n     *\r\n     * @zh\r\n     * 视图内容在规定时间内滚动到 ScrollView 垂直方向的百分比位置上。\r\n     *\r\n     * @param percent\r\n     * @en Scroll to the destination which is located at the percent interpolation from top border to the bottom border. @zh 滚动到从上到下指定百分比插值的位置。\r\n     * @param timeInSecond\r\n     * @en Scroll time (s). If it times out, the content immediately jumps to the specified offset. @zh 滚动时间（s）。 如果超时，内容将立即跳到指定偏移量处。\r\n     * @param attenuated @en Whether the rolling acceleration is attenuated(The default is true). @zh 滚动加速是否衰减，默认为 true。\r\n     * @example\r\n     * ```ts\r\n     * scrollView.scrollToPercentVertical(0.5, 0.1);\r\n     * ```\r\n     */\r\n    public scrollToPercentVertical (percent: number, timeInSecond?: number, attenuated?: boolean): void {\r\n        this._doScroll(0, percent, false, true, timeInSecond, attenuated);\r\n    }\r\n\r\n    private _doScroll (x: number, y: number, applyToHorizontal: boolean, applyToVertical: boolean, timeInSecond?: number, attenuated = true): void {\r\n        assignMoveDeltaOption(x, y, applyToHorizontal, applyToVertical);\r\n        const moveDelta = this._calculateMovePercentDelta(_moveDeltaOptions);\r\n\r\n        if (timeInSecond) {\r\n            this._startAutoScroll(moveDelta, timeInSecond, attenuated);\r\n        } else {\r\n            this._moveContent(moveDelta);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Stop auto scroll immediately.\r\n     *\r\n     * @zh\r\n     * 停止自动滚动, 调用此 API 可以让 ScrollView 立即停止滚动。\r\n     */\r\n    public stopAutoScroll (): void {\r\n        this._autoScrolling = false;\r\n        this._autoScrollAccumulatedTime = this._autoScrollTotalTime;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Modify the content position.\r\n     *\r\n     * @zh\r\n     * 设置当前视图内容的坐标点。\r\n     *\r\n     * @param position @en Current content position. @zh 希望设置内容框体的位置。\r\n     * @deprecated Since 3.1.0, setContentPosition is deprecated, please use scrollToOffset instead.\r\n     */\r\n    public setContentPosition (position: Vec3): void {\r\n        this._setContentPosition(position);\r\n    }\r\n\r\n    // Should not use _tempVec3 and also can not invoke any functions that use _tempVec3 as invoker may pass _tempVec3.\r\n    private _setContentPosition (position: Readonly<Vec3>): void {\r\n        if (!this._content) {\r\n            return;\r\n        }\r\n        const contentPos = this._getContentPosition();\r\n        if (Math.abs(position.x - contentPos.x) < EPSILON && Math.abs(position.y - contentPos.y) < EPSILON) {\r\n            return;\r\n        }\r\n\r\n        this._content.setPosition(position);\r\n        this._outOfBoundaryAmountDirty = true;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Query the content's position in its parent space.\r\n     *\r\n     * @zh\r\n     * 获取当前视图内容的坐标点。\r\n     *\r\n     * @returns @en current content position. @zh 当前视图内容的坐标点。\r\n     * @deprecated Since 3.1.0, getContentPosition is deprecated.\r\n     */\r\n    public getContentPosition (): Vec3 {\r\n        return this._getContentPosition();\r\n    }\r\n\r\n    private _getContentPosition (): Vec3 {\r\n        if (!this._content) {\r\n            return Vec3.ZERO.clone();\r\n        }\r\n\r\n        this._contentPos.set(this._content.position);\r\n        return this._contentPos;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Query whether the user is currently dragging the ScrollView to scroll it.\r\n     *\r\n     * @zh\r\n     * 用户是否在拖拽当前滚动视图。\r\n     *\r\n     * @returns @en If or not the current scrolling view is being dragged.  @zh 是否在拖拽当前滚动视图。\r\n     */\r\n    public isScrolling (): boolean {\r\n        return this._scrolling;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Query whether the ScrollView is currently scrolling because of a bounceback or inertia slowdown.\r\n     *\r\n     * @zh\r\n     * 当前滚动视图是否在惯性滚动。\r\n     *\r\n     * @returns @en Whether the scrolling view is scrolling inertially.  @zh 滚动视图是否在惯性滚动。\r\n     */\r\n    public isAutoScrolling (): boolean {\r\n        return this._autoScrolling;\r\n    }\r\n\r\n    /**\r\n     * @en Get the minimum precision time of the end-of-scroll event.\r\n     * @zh 获得滚动结束的事件的最小精度时间。\r\n     * @returns @en Minimum time. @zh 最小时间。\r\n     */\r\n    public getScrollEndedEventTiming (): number {\r\n        return EPSILON;\r\n    }\r\n\r\n    public start (): void {\r\n        this._calculateBoundary();\r\n        // Because widget component will adjust content position and scrollView position is correct after visit\r\n        // So this event could make sure the content is on the correct position after loading.\r\n        if (this._content) {\r\n            director.once(DirectorEvent.BEFORE_DRAW, this._adjustContentOutOfBoundary, this);\r\n        }\r\n    }\r\n\r\n    public onEnable (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const  self = this;\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            self._registerEvent();\r\n            const content = this._content;\r\n            if (content) {\r\n                content.on(NodeEventType.SIZE_CHANGED, self._calculateBoundary, self);\r\n                content.on(NodeEventType.TRANSFORM_CHANGED, self._scaleChanged, self);\r\n\r\n                const view = self.view;\r\n                if (view) {\r\n                    view.node.on(NodeEventType.TRANSFORM_CHANGED, self._scaleChanged, self);\r\n                    view.node.on(NodeEventType.SIZE_CHANGED, self._calculateBoundary, self);\r\n                }\r\n            }\r\n\r\n            self._calculateBoundary();\r\n        }\r\n        self._updateScrollBarState();\r\n    }\r\n\r\n    public update (dt: number): void {\r\n        const deltaAmount = this._deltaAmount;\r\n        if (this._autoScrolling) {\r\n            this._processAutoScrolling(dt);\r\n            deltaAmount.x = 0;\r\n            deltaAmount.y = 0;\r\n        } else if (deltaAmount.x !== 0 || deltaAmount.y !== 0) {\r\n            this._processDeltaMove(deltaAmount);\r\n            deltaAmount.x = 0;\r\n            deltaAmount.y = 0;\r\n        }\r\n    }\r\n\r\n    public onDisable (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            self._unregisterEvent();\r\n\r\n            const content = self.content;\r\n            if (content) {\r\n                content.off(NodeEventType.SIZE_CHANGED, self._calculateBoundary, self);\r\n                content.off(NodeEventType.TRANSFORM_CHANGED, self._scaleChanged, self);\r\n\r\n                const view = self.view;\r\n                if (view) {\r\n                    view.node.off(NodeEventType.TRANSFORM_CHANGED, self._scaleChanged, self);\r\n                    view.node.off(NodeEventType.SIZE_CHANGED, self._calculateBoundary, self);\r\n                }\r\n            }\r\n        }\r\n        self._deltaAmount.set(0, 0);\r\n        self._hideScrollBar();\r\n        self.stopAutoScroll();\r\n    }\r\n\r\n    // private methods\r\n    protected _registerEvent (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n        const node = self.node;\r\n        node.on(NodeEventType.TOUCH_START, self._onTouchBegan, self, true);\r\n        node.on(NodeEventType.TOUCH_MOVE, self._onTouchMoved, self, true);\r\n        node.on(NodeEventType.TOUCH_END, self._onTouchEnded, self, true);\r\n        node.on(NodeEventType.TOUCH_CANCEL, self._onTouchCancelled, self, true);\r\n        node.on(NodeEventType.MOUSE_WHEEL, self._onMouseWheel, self, true);\r\n\r\n        if (USE_XR) {\r\n            node.on(XrUIPressEventType.XRUI_HOVER_ENTERED, self._xrHoverEnter, self);\r\n            node.on(XrUIPressEventType.XRUI_HOVER_EXITED, self._xrHoverExit, self);\r\n        }\r\n\r\n        input.on(InputEventType.HANDLE_INPUT, self._dispatchEventHandleInput, self);\r\n        input.on(InputEventType.GAMEPAD_INPUT, self._dispatchEventHandleInput, self);\r\n    }\r\n\r\n    protected _unregisterEvent (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n        const node = self.node;\r\n        node.off(NodeEventType.TOUCH_START, self._onTouchBegan, self, true);\r\n        node.off(NodeEventType.TOUCH_MOVE, self._onTouchMoved, self, true);\r\n        node.off(NodeEventType.TOUCH_END, self._onTouchEnded, self, true);\r\n        node.off(NodeEventType.TOUCH_CANCEL, self._onTouchCancelled, self, true);\r\n        node.off(NodeEventType.MOUSE_WHEEL, self._onMouseWheel, self, true);\r\n\r\n        if (USE_XR) {\r\n            node.off(XrUIPressEventType.XRUI_HOVER_ENTERED, self._xrHoverEnter, self);\r\n            node.off(XrUIPressEventType.XRUI_HOVER_EXITED, self._xrHoverExit, self);\r\n        }\r\n        input.off(InputEventType.HANDLE_INPUT, self._dispatchEventHandleInput, self);\r\n        input.off(InputEventType.GAMEPAD_INPUT, self._dispatchEventHandleInput, self);\r\n    }\r\n\r\n    protected _onMouseWheel (event: EventMouse, captureListeners?: Node[]): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self.enabledInHierarchy) {\r\n            return;\r\n        }\r\n\r\n        if (self._hasNestedViewGroup(event, captureListeners)) {\r\n            return;\r\n        }\r\n\r\n        const wheelPrecision = -0.1;\r\n        const scrollY = event.getScrollY();\r\n\r\n        const deltaMove = _tempVec3;\r\n        if (self.vertical) {\r\n            deltaMove.set(0, scrollY * wheelPrecision, 0);\r\n        } else if (self.horizontal) {\r\n            deltaMove.set(scrollY * wheelPrecision, 0, 0);\r\n        }\r\n\r\n        self._mouseWheelEventElapsedTime = 0;\r\n        self._deltaAmount.add(deltaMove);\r\n\r\n        if (!self._stopMouseWheel) {\r\n            self._handlePressLogic();\r\n            self.schedule(this._checkMouseWheel, 1.0 / 60);\r\n            self._stopMouseWheel = true;\r\n        }\r\n\r\n        self._stopPropagationIfTargetIsMe(event);\r\n    }\r\n\r\n    protected _onTouchBegan (event: EventTouch, captureListeners?: Node[]): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self.enabledInHierarchy || !self._content) {\r\n            return;\r\n        }\r\n        if (self._hasNestedViewGroup(event, captureListeners)) {\r\n            return;\r\n        }\r\n\r\n        self._handlePressLogic();\r\n\r\n        self._touchMoved = false;\r\n        self._stopPropagationIfTargetIsMe(event);\r\n    }\r\n\r\n    protected _onTouchMoved (event: EventTouch, captureListeners?: Node[]): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self.enabledInHierarchy || !self._content) {\r\n            return;\r\n        }\r\n        if (self._hasNestedViewGroup(event, captureListeners)) {\r\n            return;\r\n        }\r\n\r\n        const touch = event.touch!;\r\n        self._handleMoveLogic(touch);\r\n\r\n        // Do not prevent touch events in inner nodes\r\n        if (!self.cancelInnerEvents) {\r\n            return;\r\n        }\r\n\r\n        const deltaMove = touch.getUILocation(_tempVec2);\r\n        deltaMove.subtract(touch.getUIStartLocation(_tempVec2_1));\r\n        // FIXME: touch move delta should be calculated by DPI.\r\n        if (deltaMove.length() > 7) {\r\n            if (!self._touchMoved && event.target !== self.node) {\r\n                // Simulate touch cancel for target node\r\n                const cancelEvent = new EventTouch(event.getTouches(), event.bubbles, SystemEventType.TOUCH_CANCEL);\r\n                cancelEvent.touch = event.touch;\r\n                cancelEvent.simulate = true;\r\n                (event.target as Node).dispatchEvent(cancelEvent);\r\n                self._touchMoved = true;\r\n            }\r\n        }\r\n        self._stopPropagationIfTargetIsMe(event);\r\n    }\r\n\r\n    protected _onTouchEnded (event: EventTouch, captureListeners?: Node[]): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self.enabledInHierarchy || !self._content || !event) {\r\n            return;\r\n        }\r\n        if (self._hasNestedViewGroup(event, captureListeners)) {\r\n            return;\r\n        }\r\n\r\n        self._dispatchEvent(ScrollViewEventType.TOUCH_UP);\r\n\r\n        const touch = event.touch!;\r\n        self._handleReleaseLogic(touch);\r\n\r\n        if (self._touchMoved) {\r\n            event.propagationStopped = true;\r\n        } else {\r\n            self._stopPropagationIfTargetIsMe(event);\r\n        }\r\n    }\r\n\r\n    protected _onTouchCancelled (event: EventTouch, captureListeners?: Node[]): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self.enabledInHierarchy || !self._content) {\r\n            return;\r\n        }\r\n        if (self._hasNestedViewGroup(event, captureListeners)) {\r\n            return;\r\n        }\r\n\r\n        // Filter touch cancel event send from self\r\n        if (event && !event.simulate) {\r\n            self._handleReleaseLogic(event.touch!);\r\n        }\r\n        self._stopPropagationIfTargetIsMe(event);\r\n    }\r\n\r\n    protected _calculateBoundary (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (self._content && self.view) {\r\n            // refresh content size\r\n            const layout = self._content.getComponent(Layout);\r\n            if (layout && layout.enabledInHierarchy) {\r\n                layout.updateLayout();\r\n            }\r\n            const viewTrans = self.view;\r\n\r\n            const anchorX = viewTrans.width * viewTrans.anchorX;\r\n            const anchorY = viewTrans.height * viewTrans.anchorY;\r\n\r\n            self._leftBoundary = -anchorX;\r\n            self._bottomBoundary = -anchorY;\r\n\r\n            self._rightBoundary = self._leftBoundary + viewTrans.width;\r\n            self._topBoundary = self._bottomBoundary + viewTrans.height;\r\n\r\n            self._moveContentToTopLeft(viewTrans.contentSize);\r\n        }\r\n    }\r\n\r\n    protected _hasNestedViewGroup (event: Event, captureListeners?: Node[]): boolean {\r\n        if (!event || event.eventPhase !== Event.CAPTURING_PHASE) {\r\n            return false;\r\n        }\r\n\r\n        if (captureListeners) {\r\n            // captureListeners are arranged from child to parent\r\n            for (let i = 0; i < captureListeners.length; i++) {\r\n                const listener = captureListeners[i];\r\n                if (this.node === listener) {\r\n                    if (event.target && (event.target as Node).getComponent(ViewGroup)) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                if (listener.getComponent(ViewGroup)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected _startInertiaScroll (touchMoveVelocity: Vec3): void {\r\n        _tempVec3.set(touchMoveVelocity);\r\n        _tempVec3.multiplyScalar(MOVEMENT_FACTOR);\r\n\r\n        // this._startAttenuatingAutoScroll will clone _tempVec3, so can pass _tempVec3.\r\n        this._startAttenuatingAutoScroll(_tempVec3, touchMoveVelocity);\r\n    }\r\n\r\n    protected _calculateAttenuatedFactor (distance: number): number {\r\n        if (this.brake <= 0) {\r\n            return 1 - this.brake;\r\n        }\r\n\r\n        // attenuate formula from: http://learnopengl.com/#!Lighting/Light-casters\r\n        return (1 - this.brake) * (1 / (1 + distance * 0.000014 + distance * distance * 0.000000008));\r\n    }\r\n\r\n    protected _startAttenuatingAutoScroll (deltaMove: Vec3, initialVelocity: Vec3): void {\r\n        const targetDelta = deltaMove.clone();\r\n        targetDelta.normalize();\r\n        if (this._content && this.view) {\r\n            const contentSize = this._content._getUITransformComp()!.contentSize;\r\n            const scrollViewSize = this.view.contentSize;\r\n\r\n            const totalMoveWidth = contentSize.width - scrollViewSize.width;\r\n            const totalMoveHeight = contentSize.height - scrollViewSize.height;\r\n\r\n            const attenuatedFactorX = this._calculateAttenuatedFactor(totalMoveWidth);\r\n            const attenuatedFactorY = this._calculateAttenuatedFactor(totalMoveHeight);\r\n\r\n            targetDelta.x = targetDelta.x * totalMoveWidth * (1 - this.brake) * attenuatedFactorX;\r\n            targetDelta.y = targetDelta.y * totalMoveHeight * attenuatedFactorY * (1 - this.brake);\r\n            targetDelta.z = 0;\r\n        }\r\n\r\n        const originalMoveLength = deltaMove.length();\r\n        let factor = targetDelta.length() / originalMoveLength;\r\n\r\n        if (this.brake > 0 && factor > 7) {\r\n            factor = Math.sqrt(factor);\r\n            targetDelta.set(deltaMove);\r\n            targetDelta.multiplyScalar(factor + 1);\r\n        } else {\r\n            targetDelta.add(deltaMove);\r\n        }\r\n\r\n        let time = this._calculateAutoScrollTimeByInitialSpeed(initialVelocity.length());\r\n        if (this.brake > 0 && factor > 3) {\r\n            factor = 3;\r\n            time *= factor;\r\n        }\r\n\r\n        if (this.brake === 0 && factor > 1) {\r\n            time *= factor;\r\n        }\r\n\r\n        this._startAutoScroll(targetDelta, time, true);\r\n    }\r\n\r\n    protected _calculateAutoScrollTimeByInitialSpeed (initialSpeed: number): number {\r\n        return Math.sqrt(Math.sqrt(initialSpeed / 5));\r\n    }\r\n\r\n    protected _startAutoScroll (deltaMove: Vec3, timeInSecond: number, attenuated = false): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        const adjustedDeltaMove = self._flattenVectorByDirection(deltaMove);\r\n\r\n        self._autoScrolling = true;\r\n        self._autoScrollTargetDelta = adjustedDeltaMove;\r\n        self._autoScrollAttenuate = attenuated;\r\n        Vec3.copy(self._autoScrollStartPosition, self._getContentPosition());\r\n        self._autoScrollTotalTime = timeInSecond;\r\n        self._autoScrollAccumulatedTime = 0;\r\n        self._autoScrollBraking = false;\r\n        self._isScrollEndedWithThresholdEventFired = false;\r\n        self._autoScrollBrakingStartPosition.set(0, 0, 0);\r\n\r\n        const currentOutOfBoundary = self._getHowMuchOutOfBoundary();\r\n        if (!currentOutOfBoundary.equals(Vec3.ZERO, EPSILON)) {\r\n            this._autoScrollCurrentlyOutOfBoundary = true;\r\n        }\r\n    }\r\n\r\n    protected _calculateTouchMoveVelocity (): Vec3 {\r\n        const out = new Vec3();\r\n        let totalTime = 0;\r\n        totalTime = this._touchMoveTimeDeltas.reduce((a, b) => a + b, totalTime);\r\n\r\n        if (totalTime <= 0 || totalTime >= 0.5) {\r\n            out.set(Vec3.ZERO);\r\n        } else {\r\n            let totalMovement = _tempVec3;\r\n            totalMovement.set(0, 0, 0);\r\n            totalMovement = this._touchMoveDisplacements.reduce((a, b) => {\r\n                a.add(b);\r\n                return a;\r\n            }, totalMovement);\r\n\r\n            // eslint-disable-next-line function-paren-newline\r\n            out.set(totalMovement.x * (1 - this.brake) / totalTime,\r\n                totalMovement.y * (1 - this.brake) / totalTime,\r\n                totalMovement.z,\r\n            );\r\n        }\r\n        return out;\r\n    }\r\n\r\n    protected _flattenVectorByDirection (vector: Vec3): Vec3 {\r\n        if (!this.horizontal) vector.x = 0;\r\n        if (!this.vertical) vector.y = 0;\r\n        return vector;\r\n    }\r\n\r\n    protected _moveContent (deltaMove: Vec3, canStartBounceBack?: boolean): void {\r\n        const adjustedMove = this._flattenVectorByDirection(deltaMove);\r\n        _tempVec3.set(this._getContentPosition());\r\n        _tempVec3.add(adjustedMove);\r\n        _tempVec3.set(Math.round(_tempVec3.x * TOLERANCE) * EPSILON, Math.round(_tempVec3.y * TOLERANCE) * EPSILON, _tempVec3.z);\r\n\r\n        // Important: Pass a global variable _tempVec3 to other class member function is dangerous. As `this._setContentPosition`\r\n        // doesn't use _tempVec3 and it doesn't invoke any functions that use _tempVec3. So it is safe to pass _tempVec3 here.\r\n        this._setContentPosition(_tempVec3);\r\n        const outOfBoundary = this._getHowMuchOutOfBoundary();\r\n        _tempVec2.set(outOfBoundary.x, outOfBoundary.y);\r\n        this._updateScrollBar(_tempVec2);\r\n\r\n        if (this.elastic && canStartBounceBack) {\r\n            this._startBounceBackIfNeeded();\r\n        }\r\n    }\r\n\r\n    protected _getContentLeftBoundary (): number {\r\n        if (!this._content) {\r\n            return -1;\r\n        }\r\n        const contentPos = this._getContentPosition();\r\n        const uiTrans = this._content._getUITransformComp()!;\r\n        return contentPos.x - uiTrans.anchorX * uiTrans.width;\r\n    }\r\n\r\n    protected _getContentRightBoundary (): number {\r\n        if (!this._content) {\r\n            return -1;\r\n        }\r\n        const uiTrans = this._content._getUITransformComp()!;\r\n        return this._getContentLeftBoundary() + uiTrans.width;\r\n    }\r\n\r\n    protected _getContentTopBoundary (): number {\r\n        if (!this._content) {\r\n            return -1;\r\n        }\r\n        const uiTrans = this._content._getUITransformComp()!;\r\n        return this._getContentBottomBoundary() + uiTrans.height;\r\n    }\r\n\r\n    protected _getContentBottomBoundary (): number {\r\n        if (!this._content) {\r\n            return -1;\r\n        }\r\n        const contentPos = this._getContentPosition();\r\n        const uiTrans = this._content._getUITransformComp()!;\r\n        return contentPos.y - uiTrans.anchorY * uiTrans.height;\r\n    }\r\n\r\n    protected _getHowMuchOutOfBoundary (addition?: Vec3): Vec3 {\r\n        if (!addition) {\r\n            addition = Vec3.ZERO;\r\n        }\r\n        if (addition.equals(Vec3.ZERO, EPSILON) && !this._outOfBoundaryAmountDirty) {\r\n            return this._outOfBoundaryAmount;\r\n        }\r\n\r\n        const outOfBoundaryAmount = new Vec3();\r\n        const tempLeftBoundary: number = this._getContentLeftBoundary();\r\n        const tempRightBoundary: number = this._getContentRightBoundary();\r\n        if (tempLeftBoundary + addition.x > this._leftBoundary) {\r\n            outOfBoundaryAmount.x = this._leftBoundary - (tempLeftBoundary + addition.x);\r\n        } else if (tempRightBoundary + addition.x < this._rightBoundary) {\r\n            outOfBoundaryAmount.x = this._rightBoundary - (tempRightBoundary + addition.x);\r\n        }\r\n\r\n        const tempTopBoundary: number = this._getContentTopBoundary();\r\n        const tempBottomBoundary: number = this._getContentBottomBoundary();\r\n        if (tempTopBoundary + addition.y < this._topBoundary) {\r\n            outOfBoundaryAmount.y = this._topBoundary - (tempTopBoundary + addition.y);\r\n        } else if (tempBottomBoundary + addition.y > this._bottomBoundary) {\r\n            outOfBoundaryAmount.y = this._bottomBoundary - (tempBottomBoundary + addition.y);\r\n        }\r\n\r\n        if (addition.equals(Vec3.ZERO, EPSILON)) {\r\n            this._outOfBoundaryAmount = outOfBoundaryAmount;\r\n            this._outOfBoundaryAmountDirty = false;\r\n        }\r\n\r\n        this._clampDelta(outOfBoundaryAmount);\r\n        return outOfBoundaryAmount;\r\n    }\r\n\r\n    protected _updateScrollBar (outOfBoundary: Vec2 | Readonly<Vec2>): void {\r\n        if (this._horizontalScrollBar && this._horizontalScrollBar.isValid) {\r\n            this._horizontalScrollBar.onScroll(outOfBoundary);\r\n        }\r\n\r\n        if (this._verticalScrollBar && this._verticalScrollBar.isValid) {\r\n            this._verticalScrollBar.onScroll(outOfBoundary);\r\n        }\r\n    }\r\n\r\n    protected _onScrollBarTouchBegan (): void {\r\n        if (this._horizontalScrollBar && this._horizontalScrollBar.isValid) {\r\n            this._horizontalScrollBar.onTouchBegan();\r\n        }\r\n\r\n        if (this._verticalScrollBar && this._verticalScrollBar.isValid) {\r\n            this._verticalScrollBar.onTouchBegan();\r\n        }\r\n    }\r\n\r\n    protected _onScrollBarTouchEnded (): void {\r\n        if (this._horizontalScrollBar && this._horizontalScrollBar.isValid) {\r\n            this._horizontalScrollBar.onTouchEnded();\r\n        }\r\n\r\n        if (this._verticalScrollBar && this._verticalScrollBar.isValid) {\r\n            this._verticalScrollBar.onTouchEnded();\r\n        }\r\n    }\r\n\r\n    protected _dispatchEvent (event: string): void {\r\n        if (event === ScrollViewEventType.SCROLL_ENDED as string) {\r\n            this._scrollEventEmitMask = 0;\r\n        } else if (event === ScrollViewEventType.SCROLL_TO_TOP as string\r\n            || event === ScrollViewEventType.SCROLL_TO_BOTTOM as string\r\n            || event === ScrollViewEventType.SCROLL_TO_LEFT as string\r\n            || event === ScrollViewEventType.SCROLL_TO_RIGHT as string) {\r\n            const flag = 1 << eventMap[event];\r\n            if (this._scrollEventEmitMask & flag) {\r\n                return;\r\n            } else {\r\n                this._scrollEventEmitMask |= flag;\r\n            }\r\n        }\r\n\r\n        ComponentEventHandler.emitEvents(this.scrollEvents, this, eventMap[event]);\r\n        this.node.emit(event, this);\r\n    }\r\n\r\n    protected _adjustContentOutOfBoundary (): void {\r\n        if (!this._content) {\r\n            return;\r\n        }\r\n\r\n        this._outOfBoundaryAmountDirty = true;\r\n        const outOfBoundary = this._getHowMuchOutOfBoundary();\r\n        const _isOutOfBoundary = !outOfBoundary.equals(Vec3.ZERO, EPSILON);\r\n        if (_isOutOfBoundary) {\r\n            _tempVec3.set(this._getContentPosition());\r\n            _tempVec3.add(outOfBoundary);\r\n\r\n            // Important: Pass a global variable _tempVec3 to other class member function is dangerous. As `this._setContentPosition`\r\n            // doesn't use _tempVec3 and it doesn't invoke any functions that use _tempVec3. So it is safe to pass _tempVec3 here.\r\n            this._setContentPosition(_tempVec3);\r\n            this._updateScrollBar(Vec2.ZERO);\r\n        }\r\n    }\r\n\r\n    protected _hideScrollBar (): void {\r\n        if (this._horizontalScrollBar && this._horizontalScrollBar.isValid) {\r\n            this._horizontalScrollBar.hide();\r\n        }\r\n\r\n        if (this._verticalScrollBar && this._verticalScrollBar.isValid) {\r\n            this._verticalScrollBar.hide();\r\n        }\r\n    }\r\n\r\n    protected _updateScrollBarState (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self._content || !self.view) {\r\n            return;\r\n        }\r\n        const viewTrans = self.view;\r\n        const uiTrans = self._content._getUITransformComp()!;\r\n\r\n        const verticalScrollBar = self._verticalScrollBar;\r\n        if (verticalScrollBar && verticalScrollBar.isValid) {\r\n            if (uiTrans.height < viewTrans.height || approx(uiTrans.height, viewTrans.height)) {\r\n                verticalScrollBar.hide();\r\n            } else {\r\n                verticalScrollBar.show();\r\n            }\r\n        }\r\n\r\n        const horizontalScrollBar = self._horizontalScrollBar;\r\n        if (horizontalScrollBar && horizontalScrollBar.isValid) {\r\n            if (uiTrans.width < viewTrans.width || approx(uiTrans.width, viewTrans.width)) {\r\n                horizontalScrollBar.hide();\r\n            } else {\r\n                horizontalScrollBar.show();\r\n            }\r\n        }\r\n    }\r\n\r\n    // This is for ScrollView as children of a Button\r\n    protected _stopPropagationIfTargetIsMe (event: Event): void {\r\n        if (event.eventPhase === Event.AT_TARGET && event.target === this.node) {\r\n            event.propagationStopped = true;\r\n        }\r\n    }\r\n\r\n    protected _processDeltaMove (deltaMove: Vec3): void {\r\n        this._scrollChildren(deltaMove);\r\n        this._gatherTouchMove(deltaMove);\r\n    }\r\n\r\n    protected _handleMoveLogic (touch: Touch): void {\r\n        this._getLocalAxisAlignDelta(this._deltaPos, touch);\r\n        this._deltaAmount.add(this._deltaPos);\r\n    }\r\n\r\n    protected _handleReleaseLogic (touch: Touch): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        self._getLocalAxisAlignDelta(self._deltaPos, touch);\r\n        self._gatherTouchMove(self._deltaPos);\r\n        self._processInertiaScroll();\r\n\r\n        if (self._scrolling) {\r\n            self._scrolling = false;\r\n            if (!self._autoScrolling) {\r\n                self._dispatchEvent(ScrollViewEventType.SCROLL_ENDED);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _getLocalAxisAlignDelta (out: Vec3, touch: Touch): void {\r\n        const uiTransformComp = this.node._getUITransformComp();\r\n\r\n        if (uiTransformComp) {\r\n            touch.getUILocation(_tempVec2);\r\n            touch.getUIPreviousLocation(_tempVec2_1);\r\n            _tempVec3.set(_tempVec2.x, _tempVec2.y, 0);\r\n            _tempVec3_1.set(_tempVec2_1.x, _tempVec2_1.y, 0);\r\n            uiTransformComp.convertToNodeSpaceAR(_tempVec3, _tempVec3);\r\n            uiTransformComp.convertToNodeSpaceAR(_tempVec3_1, _tempVec3_1);\r\n            Vec3.subtract(out, _tempVec3, _tempVec3_1);\r\n        }\r\n    }\r\n\r\n    protected _scrollChildren (deltaMove: Vec3): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        self._clampDelta(deltaMove);\r\n\r\n        const realMove = deltaMove;\r\n        let outOfBoundary: Vec3;\r\n        if (self.elastic) {\r\n            outOfBoundary = self._getHowMuchOutOfBoundary();\r\n            realMove.x *= outOfBoundary.x === 0 ? 1 : 0.5;\r\n            realMove.y *= outOfBoundary.y === 0 ? 1 : 0.5;\r\n        }\r\n\r\n        if (!self.elastic) {\r\n            outOfBoundary = self._getHowMuchOutOfBoundary(realMove);\r\n            realMove.add(outOfBoundary);\r\n        }\r\n\r\n        let verticalScrollEventType: ScrollViewEventType = ScrollViewEventType.NONE;\r\n        let horizontalScrollEventType: ScrollViewEventType = ScrollViewEventType.NONE;\r\n        if (self._content) {\r\n            const { anchorX, anchorY, width, height } = self._content._getUITransformComp()!;\r\n            const pos = self._content.position || Vec3.ZERO;\r\n\r\n            if (self.vertical) {\r\n                if (realMove.y > 0) { // up\r\n                    const icBottomPos = pos.y - anchorY * height;\r\n\r\n                    if (icBottomPos + realMove.y >= self._bottomBoundary) {\r\n                        verticalScrollEventType = ScrollViewEventType.SCROLL_TO_BOTTOM;\r\n                    }\r\n                } else if (realMove.y < 0) { // down\r\n                    const icTopPos = pos.y - anchorY * height + height;\r\n\r\n                    if (icTopPos + realMove.y <= self._topBoundary) {\r\n                        verticalScrollEventType = ScrollViewEventType.SCROLL_TO_TOP;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (self.horizontal) {\r\n                if (realMove.x < 0) { // left\r\n                    const icRightPos = pos.x - anchorX * width + width;\r\n                    if (icRightPos + realMove.x <= self._rightBoundary) {\r\n                        horizontalScrollEventType = ScrollViewEventType.SCROLL_TO_RIGHT;\r\n                    }\r\n                } else if (realMove.x > 0) { // right\r\n                    const icLeftPos = pos.x - anchorX * width;\r\n                    if (icLeftPos + realMove.x >= self._leftBoundary) {\r\n                        horizontalScrollEventType = ScrollViewEventType.SCROLL_TO_LEFT;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        self._moveContent(realMove, false);\r\n\r\n        if ((self.horizontal && realMove.x !== 0) || (self.vertical && realMove.y !== 0)) {\r\n            if (!self._scrolling) {\r\n                self._scrolling = true;\r\n                self._dispatchEvent(ScrollViewEventType.SCROLL_BEGAN);\r\n            }\r\n            self._dispatchEvent(ScrollViewEventType.SCROLLING);\r\n        }\r\n\r\n        if (verticalScrollEventType !== ScrollViewEventType.NONE) {\r\n            self._dispatchEvent(verticalScrollEventType);\r\n        }\r\n        if (horizontalScrollEventType !== ScrollViewEventType.NONE) {\r\n            self._dispatchEvent(horizontalScrollEventType);\r\n        }\r\n    }\r\n\r\n    protected _handlePressLogic (): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (self._autoScrolling) {\r\n            self._dispatchEvent(ScrollViewEventType.SCROLL_ENDED);\r\n        }\r\n\r\n        self._autoScrolling = false;\r\n        self._isBouncing = false;\r\n\r\n        self._touchMovePreviousTimestamp = getTimeInMilliseconds();\r\n        self._touchMoveDisplacements.length = 0;\r\n        self._touchMoveTimeDeltas.length = 0;\r\n\r\n        self._onScrollBarTouchBegan();\r\n    }\r\n\r\n    protected _clampDelta (out: Vec3): void {\r\n        if (this._content && this.view) {\r\n            const scrollViewSize = this.view.contentSize;\r\n            const uiTrans = this._content._getUITransformComp()!;\r\n            if (uiTrans.width < scrollViewSize.width) {\r\n                out.x = 0;\r\n            }\r\n            if (uiTrans.height < scrollViewSize.height) {\r\n                out.y = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _gatherTouchMove (delta: Vec3): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        const clampDt = delta.clone();\r\n        self._clampDelta(clampDt);\r\n\r\n        while (self._touchMoveDisplacements.length >= NUMBER_OF_GATHERED_TOUCHES_FOR_MOVE_SPEED) {\r\n            self._touchMoveDisplacements.shift();\r\n            self._touchMoveTimeDeltas.shift();\r\n        }\r\n\r\n        self._touchMoveDisplacements.push(clampDt);\r\n\r\n        const timeStamp = getTimeInMilliseconds();\r\n        self._touchMoveTimeDeltas.push((timeStamp - self._touchMovePreviousTimestamp) / 1000);\r\n        self._touchMovePreviousTimestamp = timeStamp;\r\n    }\r\n\r\n    protected _startBounceBackIfNeeded (): boolean {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self.elastic) {\r\n            return false;\r\n        }\r\n\r\n        const bounceBackAmount = self._getHowMuchOutOfBoundary();\r\n        self._clampDelta(bounceBackAmount);\r\n\r\n        if (bounceBackAmount.equals(Vec3.ZERO, EPSILON)) {\r\n            return false;\r\n        }\r\n\r\n        const bounceBackTime = Math.max(self.bounceDuration, 0);\r\n        self._startAutoScroll(bounceBackAmount, bounceBackTime, true);\r\n\r\n        if (!self._isBouncing) {\r\n            if (bounceBackAmount.y > 0) {\r\n                self._dispatchEvent(ScrollViewEventType.BOUNCE_TOP);\r\n            }\r\n            if (bounceBackAmount.y < 0) {\r\n                self._dispatchEvent(ScrollViewEventType.BOUNCE_BOTTOM);\r\n            }\r\n            if (bounceBackAmount.x > 0) {\r\n                self._dispatchEvent(ScrollViewEventType.BOUNCE_RIGHT);\r\n            }\r\n            if (bounceBackAmount.x < 0) {\r\n                self._dispatchEvent(ScrollViewEventType.BOUNCE_LEFT);\r\n            }\r\n            self._isBouncing = true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected _processInertiaScroll (): void {\r\n        const bounceBackStarted = this._startBounceBackIfNeeded();\r\n        if (!bounceBackStarted && this.inertia) {\r\n            const touchMoveVelocity = this._calculateTouchMoveVelocity();\r\n            if (!touchMoveVelocity.equals(Vec3.ZERO, EPSILON) && this.brake < 1) {\r\n                this._startInertiaScroll(touchMoveVelocity);\r\n            }\r\n        }\r\n\r\n        this._onScrollBarTouchEnded();\r\n    }\r\n\r\n    protected _isOutOfBoundary (): boolean {\r\n        const outOfBoundary = this._getHowMuchOutOfBoundary();\r\n        return !outOfBoundary.equals(Vec3.ZERO, EPSILON);\r\n    }\r\n\r\n    protected _isNecessaryAutoScrollBrake (): boolean {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (self._autoScrollBraking) {\r\n            return true;\r\n        }\r\n\r\n        if (self._isOutOfBoundary()) {\r\n            if (!self._autoScrollCurrentlyOutOfBoundary) {\r\n                self._autoScrollCurrentlyOutOfBoundary = true;\r\n                self._autoScrollBraking = true;\r\n                Vec3.copy(self._autoScrollBrakingStartPosition, self._getContentPosition());\r\n                return true;\r\n            }\r\n        } else {\r\n            self._autoScrollCurrentlyOutOfBoundary = false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected _processAutoScrolling (dt): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        const isAutoScrollBrake = self._isNecessaryAutoScrollBrake();\r\n        const brakingFactor = isAutoScrollBrake ? OUT_OF_BOUNDARY_BREAKING_FACTOR : 1;\r\n        self._autoScrollAccumulatedTime += dt * (1 / brakingFactor);\r\n\r\n        let percentage = Math.min(1, self._autoScrollAccumulatedTime / self._autoScrollTotalTime);\r\n        if (self._autoScrollAttenuate) {\r\n            percentage = quintEaseOut(percentage);\r\n        }\r\n\r\n        const clonedAutoScrollTargetDelta = self._autoScrollTargetDelta.clone();\r\n        clonedAutoScrollTargetDelta.multiplyScalar(percentage);\r\n        const clonedAutoScrollStartPosition = self._autoScrollStartPosition.clone();\r\n        clonedAutoScrollStartPosition.add(clonedAutoScrollTargetDelta);\r\n        let reachedEnd = Math.abs(percentage - 1) <= EPSILON;\r\n\r\n        const fireEvent = Math.abs(percentage - 1) <= self.getScrollEndedEventTiming();\r\n        if (fireEvent && !self._isScrollEndedWithThresholdEventFired) {\r\n            self._dispatchEvent(ScrollViewEventType.SCROLL_ENG_WITH_THRESHOLD);\r\n            self._isScrollEndedWithThresholdEventFired = true;\r\n        }\r\n\r\n        if (self.elastic) {\r\n            const brakeOffsetPosition = clonedAutoScrollStartPosition.clone();\r\n            brakeOffsetPosition.subtract(self._autoScrollBrakingStartPosition);\r\n            if (isAutoScrollBrake) {\r\n                brakeOffsetPosition.multiplyScalar(brakingFactor);\r\n            }\r\n            clonedAutoScrollStartPosition.set(self._autoScrollBrakingStartPosition);\r\n            clonedAutoScrollStartPosition.add(brakeOffsetPosition);\r\n        } else {\r\n            const moveDelta = clonedAutoScrollStartPosition.clone();\r\n            moveDelta.subtract(self.getContentPosition());\r\n            const outOfBoundary = self._getHowMuchOutOfBoundary(moveDelta);\r\n            if (!outOfBoundary.equals(Vec3.ZERO, EPSILON)) {\r\n                clonedAutoScrollStartPosition.add(outOfBoundary);\r\n                reachedEnd = true;\r\n            }\r\n        }\r\n\r\n        if (reachedEnd) {\r\n            self._autoScrolling = false;\r\n        }\r\n\r\n        const deltaMove = clonedAutoScrollStartPosition.clone();\r\n        deltaMove.subtract(self._getContentPosition());\r\n        self._clampDelta(deltaMove);\r\n        self._moveContent(deltaMove, reachedEnd);\r\n        self._dispatchEvent(ScrollViewEventType.SCROLLING);\r\n\r\n        if (!self._autoScrolling) {\r\n            self._isBouncing = false;\r\n            self._scrolling = false;\r\n            self._dispatchEvent(ScrollViewEventType.SCROLL_ENDED);\r\n        }\r\n    }\r\n\r\n    protected _checkMouseWheel (dt: number): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        const currentOutOfBoundary = self._getHowMuchOutOfBoundary();\r\n        const maxElapsedTime = 0.1;\r\n\r\n        if (!currentOutOfBoundary.equals(Vec3.ZERO, EPSILON)) {\r\n            self._processInertiaScroll();\r\n            if (self._scrolling) {\r\n                self._scrolling = false;\r\n                if (!self._autoScrolling) {\r\n                    self._dispatchEvent(ScrollViewEventType.SCROLL_ENDED);\r\n                }\r\n            }\r\n            self.unschedule(self._checkMouseWheel);\r\n            self._stopMouseWheel = false;\r\n            return;\r\n        }\r\n\r\n        self._mouseWheelEventElapsedTime += dt;\r\n\r\n        // mouse wheel event is ended\r\n        if (self._mouseWheelEventElapsedTime > maxElapsedTime) {\r\n            self._onScrollBarTouchEnded();\r\n            if (self._scrolling) {\r\n                self._scrolling = false;\r\n                if (!self._autoScrolling) {\r\n                    self._dispatchEvent(ScrollViewEventType.SCROLL_ENDED);\r\n                }\r\n            }\r\n            self.unschedule(self._checkMouseWheel);\r\n            self._stopMouseWheel = false;\r\n        }\r\n    }\r\n\r\n    protected _calculateMovePercentDelta (options): Vec3 {\r\n        const anchor = options.anchor;\r\n        const applyToHorizontal = options.applyToHorizontal;\r\n        const applyToVertical = options.applyToVertical;\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n        self._calculateBoundary();\r\n\r\n        anchor.clampf(Vec2.ZERO, Vec2.ONE);\r\n\r\n        let bottomDelta = self._getContentBottomBoundary() - self._bottomBoundary;\r\n        bottomDelta = -bottomDelta;\r\n\r\n        let leftDelta = self._getContentLeftBoundary() - self._leftBoundary;\r\n        leftDelta = -leftDelta;\r\n\r\n        const moveDelta = new Vec3();\r\n        if (self._content && self.view) {\r\n            let totalScrollDelta = 0;\r\n            const uiTrans = self._content._getUITransformComp()!;\r\n            const contentSize = uiTrans.contentSize;\r\n            const scrollSize = self.view.contentSize;\r\n            if (applyToHorizontal) {\r\n                totalScrollDelta = contentSize.width - scrollSize.width;\r\n                moveDelta.x = leftDelta - totalScrollDelta * anchor.x;\r\n            }\r\n            if (applyToVertical) {\r\n                totalScrollDelta = contentSize.height - scrollSize.height;\r\n                moveDelta.y = bottomDelta - totalScrollDelta * anchor.y;\r\n            }\r\n        }\r\n\r\n        return moveDelta;\r\n    }\r\n\r\n    protected _moveContentToTopLeft (scrollViewSize: Size): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        let bottomDelta = self._getContentBottomBoundary() - self._bottomBoundary;\r\n        bottomDelta = -bottomDelta;\r\n        const moveDelta = new Vec3();\r\n        let totalScrollDelta = 0;\r\n\r\n        let leftDelta = self._getContentLeftBoundary() - self._leftBoundary;\r\n        leftDelta = -leftDelta;\r\n\r\n        // 是否限制在上视区上边\r\n        if (self._content) {\r\n            const uiTrans = self._content._getUITransformComp()!;\r\n            const contentSize = uiTrans.contentSize;\r\n            if (contentSize.height < scrollViewSize.height) {\r\n                totalScrollDelta = contentSize.height - scrollViewSize.height;\r\n                moveDelta.y = bottomDelta - totalScrollDelta;\r\n            }\r\n\r\n            // 是否限制在上视区左边\r\n            if (contentSize.width < scrollViewSize.width) {\r\n                totalScrollDelta = contentSize.width - scrollViewSize.width;\r\n                moveDelta.x = leftDelta;\r\n            }\r\n        }\r\n\r\n        self._updateScrollBarState();\r\n        self._moveContent(moveDelta);\r\n        self._adjustContentOutOfBoundary();\r\n    }\r\n\r\n    protected _scaleChanged (value: TransformBit): void {\r\n        if (value === TransformBit.SCALE) {\r\n            this._calculateBoundary();\r\n        }\r\n    }\r\n\r\n    protected _xrHoverEnter (event: XrUIPressEvent): void {\r\n        if (!USE_XR) return;\r\n        if (event.deviceType === DeviceType.Left) {\r\n            this._hoverIn = XrhoverType.LEFT;\r\n        } else if (event.deviceType === DeviceType.Right) {\r\n            this._hoverIn = XrhoverType.RIGHT;\r\n        }\r\n    }\r\n\r\n    protected _xrHoverExit (event: XrUIPressEvent): void {\r\n        if (!USE_XR) return;\r\n        this._hoverIn = XrhoverType.NONE;\r\n    }\r\n\r\n    private _dispatchEventHandleInput (event: EventHandle | EventGamepad): void {\r\n        let handleInputDevice;\r\n        if (event instanceof EventGamepad) {\r\n            handleInputDevice = event.gamepad;\r\n        } else if (event instanceof EventHandle) {\r\n            handleInputDevice = event.handleInputDevice;\r\n        }\r\n        let value: Vec2;\r\n        if (!this.enabledInHierarchy || (USE_XR && this._hoverIn === XrhoverType.NONE)) {\r\n            return;\r\n        }\r\n\r\n        if (USE_XR) {\r\n            if (this._hoverIn === XrhoverType.LEFT) {\r\n                value = handleInputDevice.leftStick.getValue();\r\n                if (!value.equals(Vec2.ZERO)) {\r\n                    this._xrThumbStickMove(value);\r\n                }\r\n            } else if (this._hoverIn === XrhoverType.RIGHT) {\r\n                value = handleInputDevice.rightStick.getValue();\r\n                if (!value.equals(Vec2.ZERO)) {\r\n                    this._xrThumbStickMove(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _xrThumbStickMove (event: Vec2): void {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n\r\n        if (!self.enabledInHierarchy) {\r\n            return;\r\n        }\r\n\r\n        const wheelPrecision = -62.5;\r\n        const scrollY = event.y;\r\n\r\n        const deltaMove = _tempVec3;\r\n        if (self.vertical) {\r\n            deltaMove.set(0, scrollY * wheelPrecision, 0);\r\n        } else if (self.horizontal) {\r\n            deltaMove.set(scrollY * wheelPrecision, 0, 0);\r\n        }\r\n\r\n        self._mouseWheelEventElapsedTime = 0;\r\n        self._deltaAmount.add(deltaMove);\r\n\r\n        if (!self._stopMouseWheel) {\r\n            self._handlePressLogic();\r\n            self.schedule(self._checkMouseWheel, 1.0 / 60, NaN, 0);\r\n            self._stopMouseWheel = true;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event scroll-to-top\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event scroll-to-bottom\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event scroll-to-left\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event scroll-to-right\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event scrolling\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event bounce-bottom\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event bounce-top\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event bounce-left\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event bounce-right\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event scroll-ended\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event touch-up\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event scroll-began\r\n * @param {Event.EventCustom} event\r\n * @param {ScrollView} scrollView - The ScrollView component.\r\n */\r\n\r\nlegacyCC.ScrollView = ScrollView;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, requireComponent, tooltip, type, slide, range, serializable } from 'cc.decorator';\r\nimport { EDITOR, USE_XR } from 'internal:constants';\r\nimport { Component, EventHandler } from '../scene-graph';\r\nimport { UITransform } from '../2d/framework';\r\nimport { EventTouch, Touch } from '../input/types';\r\nimport { Vec3 } from '../core/math';\r\nimport { ccenum } from '../core/value-types/enum';\r\nimport { clamp01 } from '../core/math/utils';\r\nimport { Sprite } from '../2d/components/sprite';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\nimport { XrUIPressEvent, XrUIPressEventType } from '../xr/event/xr-event-handle';\r\n\r\nconst _tempPos = new Vec3();\r\n/**\r\n * @en\r\n * The Slider Direction.\r\n *\r\n * @zh\r\n * 滑动器方向。\r\n */\r\nenum Direction {\r\n    /**\r\n     * @en\r\n     * The horizontal direction.\r\n     *\r\n     * @zh\r\n     * 水平方向。\r\n     */\r\n    Horizontal = 0,\r\n    /**\r\n     * @en\r\n     * The vertical direction.\r\n     *\r\n     * @zh\r\n     * 垂直方向。\r\n     */\r\n    Vertical = 1,\r\n}\r\n\r\nccenum(Direction);\r\n\r\n/**\r\n * @en\r\n * The Slider Control.\r\n *\r\n * @zh\r\n * 滑动器组件。\r\n */\r\n@ccclass('cc.Slider')\r\n@help('i18n:cc.Slider')\r\n@executionOrder(110)\r\n@menu('UI/Slider')\r\n@requireComponent(UITransform)\r\nexport class Slider extends Component {\r\n    /**\r\n     * @en\r\n     * The \"handle\" part of the slider.\r\n     *\r\n     * @zh\r\n     * 滑动器滑块按钮部件。\r\n     */\r\n    @type(Sprite)\r\n    @tooltip('i18n:slider.handle')\r\n    get handle (): Sprite | null {\r\n        return this._handle;\r\n    }\r\n\r\n    set handle (value: Sprite | null) {\r\n        if (this._handle === value) {\r\n            return;\r\n        }\r\n\r\n        this._handle = value;\r\n        if (EDITOR && this._handle) {\r\n            this._updateHandlePosition();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The slider direction.\r\n     *\r\n     * @zh\r\n     * 滑动器方向。\r\n     */\r\n    @type(Direction)\r\n    @tooltip('i18n:slider.direction')\r\n    get direction (): number {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction (value: number) {\r\n        if ((this._direction as number) === value) {\r\n            return;\r\n        }\r\n\r\n        this._direction = value;\r\n        this._changeLayout();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The current progress of the slider. The valid value is between 0-1.\r\n     *\r\n     * @zh\r\n     * 当前进度值，该数值的区间是 0-1 之间。\r\n     */\r\n    @slide\r\n    @range([0, 1, 0.01])\r\n    @tooltip('i18n:slider.progress')\r\n    get progress (): number {\r\n        return this._progress;\r\n    }\r\n\r\n    set progress (value) {\r\n        if (this._progress === value) {\r\n            return;\r\n        }\r\n\r\n        this._progress = value;\r\n        this._updateHandlePosition();\r\n    }\r\n\r\n    public static Direction = Direction;\r\n\r\n    /**\r\n     * @en\r\n     * The slider slide events' callback array.\r\n     *\r\n     * @zh\r\n     * 滑动器组件滑动事件回调函数数组。\r\n     */\r\n    @type([EventHandler])\r\n    @serializable\r\n    @tooltip('i18n:slider.slideEvents')\r\n    public slideEvents: EventHandler[] = [];\r\n    @serializable\r\n    private _handle: Sprite | null = null;\r\n    @serializable\r\n    private _direction = Direction.Horizontal;\r\n    @serializable\r\n    private _progress = 0.1;\r\n\r\n    private _offset: Vec3 = new Vec3();\r\n    private _dragging = false;\r\n    private _touchHandle = false;\r\n    private _handleLocalPos = new Vec3();\r\n    private _touchPos = new Vec3();\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public __preload (): void {\r\n        this._updateHandlePosition();\r\n    }\r\n\r\n    // 注册事件\r\n\r\n    public onEnable (): void {\r\n        const self = this;\r\n        const node = self.node;\r\n        const handle = self._handle;\r\n        self._updateHandlePosition();\r\n\r\n        node.on(NodeEventType.TOUCH_START, self._onTouchBegan, self);\r\n        node.on(NodeEventType.TOUCH_MOVE, self._onTouchMoved, self);\r\n        node.on(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n        node.on(NodeEventType.TOUCH_CANCEL, self._onTouchCancelled, self);\r\n\r\n        if (USE_XR) {\r\n            node.on(XrUIPressEventType.XRUI_HOVER_STAY, self._xrHoverStay, self);\r\n            node.on(XrUIPressEventType.XRUI_CLICK, self._xrClick, self);\r\n            node.on(XrUIPressEventType.XRUI_UNCLICK, self._xrUnClick, self);\r\n        }\r\n\r\n        if (handle && handle.isValid) {\r\n            const handleNode = handle.node;\r\n            handleNode.on(NodeEventType.TOUCH_START, self._onHandleDragStart, self);\r\n            handleNode.on(NodeEventType.TOUCH_MOVE, self._onTouchMoved, self);\r\n            handleNode.on(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n        }\r\n    }\r\n\r\n    public onDisable (): void {\r\n        const self = this;\r\n        const node = self.node;\r\n        const handle = self._handle;\r\n        node.off(NodeEventType.TOUCH_START, self._onTouchBegan, self);\r\n        node.off(NodeEventType.TOUCH_MOVE, self._onTouchMoved, self);\r\n        node.off(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n        node.off(NodeEventType.TOUCH_CANCEL, self._onTouchCancelled, self);\r\n\r\n        if (USE_XR) {\r\n            node.off(XrUIPressEventType.XRUI_HOVER_STAY, self._xrHoverStay, self);\r\n            node.off(XrUIPressEventType.XRUI_CLICK, self._xrClick, self);\r\n            node.off(XrUIPressEventType.XRUI_UNCLICK, self._xrUnClick, self);\r\n        }\r\n\r\n        if (handle && handle.isValid) {\r\n            const handleNode = handle.node;\r\n            handleNode.off(NodeEventType.TOUCH_START, self._onHandleDragStart, self);\r\n            handleNode.off(NodeEventType.TOUCH_MOVE, self._onTouchMoved, self);\r\n            handleNode.off(NodeEventType.TOUCH_END, self._onTouchEnded, self);\r\n        }\r\n    }\r\n\r\n    protected _onHandleDragStart (event?: EventTouch): void {\r\n        if (!event || !this._handle || !this._handle.node._getUITransformComp()) {\r\n            return;\r\n        }\r\n\r\n        this._dragging = true;\r\n        this._touchHandle = true;\r\n        const touhPos = event.touch!.getUILocation();\r\n        Vec3.set(this._touchPos, touhPos.x, touhPos.y, 0);\r\n        this._handle.node._getUITransformComp()!.convertToNodeSpaceAR(this._touchPos, this._offset);\r\n\r\n        event.propagationStopped = true;\r\n    }\r\n\r\n    protected _onTouchBegan (event?: EventTouch): void {\r\n        if (!this._handle || !event) {\r\n            return;\r\n        }\r\n\r\n        this._dragging = true;\r\n        if (!this._touchHandle) {\r\n            this._handleSliderLogic(event.touch);\r\n        }\r\n\r\n        event.propagationStopped = true;\r\n    }\r\n\r\n    protected _onTouchMoved (event?: EventTouch): void {\r\n        if (!this._dragging || !event) {\r\n            return;\r\n        }\r\n\r\n        this._handleSliderLogic(event.touch);\r\n        event.propagationStopped = true;\r\n    }\r\n\r\n    protected _onTouchEnded (event?: EventTouch): void {\r\n        this._dragging = false;\r\n        this._touchHandle = false;\r\n        this._offset = new Vec3();\r\n\r\n        if (event) {\r\n            event.propagationStopped = true;\r\n        }\r\n    }\r\n\r\n    protected _onTouchCancelled (event?: EventTouch): void {\r\n        this._dragging = false;\r\n        if (event) {\r\n            event.propagationStopped = true;\r\n        }\r\n    }\r\n\r\n    protected _handleSliderLogic (touch: Touch | null): void {\r\n        this._updateProgress(touch);\r\n        this._emitSlideEvent();\r\n    }\r\n\r\n    protected _emitSlideEvent (): void {\r\n        EventHandler.emitEvents(this.slideEvents, this);\r\n        this.node.emit('slide', this);\r\n    }\r\n\r\n    protected _updateProgress (touch: Touch | null): void {\r\n        if (!this._handle || !touch) {\r\n            return;\r\n        }\r\n\r\n        const touchPos = touch.getUILocation();\r\n        Vec3.set(this._touchPos, touchPos.x, touchPos.y, 0);\r\n        const uiTrans = this.node._getUITransformComp()!;\r\n        const localTouchPos = uiTrans.convertToNodeSpaceAR(this._touchPos, _tempPos);\r\n        if (this.direction === Direction.Horizontal as number) {\r\n            this.progress = clamp01(0.5 + (localTouchPos.x - this._offset.x) / uiTrans.width);\r\n        } else {\r\n            this.progress = clamp01(0.5 + (localTouchPos.y - this._offset.y) / uiTrans.height);\r\n        }\r\n    }\r\n\r\n    protected _updateHandlePosition (): void {\r\n        if (!this._handle) {\r\n            return;\r\n        }\r\n        this._handleLocalPos.set(this._handle.node.position);\r\n        const uiTrans = this.node._getUITransformComp()!;\r\n        if (this._direction === Direction.Horizontal) {\r\n            this._handleLocalPos.x = -uiTrans.width * uiTrans.anchorX + this.progress * uiTrans.width;\r\n        } else {\r\n            this._handleLocalPos.y = -uiTrans.height * uiTrans.anchorY + this.progress * uiTrans.height;\r\n        }\r\n\r\n        this._handle.node.setPosition(this._handleLocalPos);\r\n    }\r\n\r\n    private _changeLayout (): void {\r\n        const uiTrans = this.node._getUITransformComp()!;\r\n        const contentSize = uiTrans.contentSize;\r\n        uiTrans.setContentSize(contentSize.height, contentSize.width);\r\n        if (this._handle) {\r\n            const pos = this._handle.node.position;\r\n            if (this._direction === Direction.Horizontal) {\r\n                this._handle.node.setPosition(pos.x, 0, pos.z);\r\n            } else {\r\n                this._handle.node.setPosition(0, pos.y, pos.z);\r\n            }\r\n\r\n            this._updateHandlePosition();\r\n        }\r\n    }\r\n\r\n    protected _xrHandleProgress (point: Vec3): void {\r\n        if (!USE_XR) return;\r\n        if (!this._touchHandle) {\r\n            const uiTrans = this.node._getUITransformComp()!;\r\n            uiTrans.convertToNodeSpaceAR(point, _tempPos);\r\n            if (this.direction === Direction.Horizontal as number) {\r\n                this.progress = clamp01(0.5 + (_tempPos.x - this.node.position.x) / uiTrans.width);\r\n            } else {\r\n                this.progress = clamp01(0.5 + (_tempPos.y - this.node.position.y) / uiTrans.height);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _xrClick (event: XrUIPressEvent): void {\r\n        if (!USE_XR) return;\r\n        if (!this._handle) {\r\n            return;\r\n        }\r\n        this._dragging = true;\r\n        this._xrHandleProgress(event.hitPoint);\r\n        this._emitSlideEvent();\r\n    }\r\n\r\n    protected _xrUnClick (): void {\r\n        if (!USE_XR) return;\r\n        this._dragging = false;\r\n        this._touchHandle = false;\r\n    }\r\n\r\n    protected _xrHoverStay (event: XrUIPressEvent): void {\r\n        if (!USE_XR) return;\r\n        if (!this._dragging) {\r\n            return;\r\n        }\r\n\r\n        this._xrHandleProgress(event.hitPoint);\r\n        this._emitSlideEvent();\r\n    }\r\n}\r\n\r\n/**\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event slide\r\n * @param {Event.EventCustom} event\r\n * @param {Slider} slider - The slider component.\r\n */\r\n\r\nlegacyCC.Slider = Slider;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, requireComponent, executionOrder, menu, tooltip, displayOrder, type, serializable } from 'cc.decorator';\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { EventHandler as ComponentEventHandler } from '../scene-graph/component-event-handler';\r\nimport { UITransform } from '../2d/framework';\r\nimport { Sprite } from '../2d/components/sprite';\r\nimport { ToggleContainer } from './toggle-container';\r\nimport { extendsEnum } from '../core/data/utils/extends-enum';\r\nimport { ButtonEventType, Button } from './button';\r\nimport { legacyCC } from '../core/global-exports';\r\n\r\nenum ToggleEventType {\r\n    TOGGLE = 'toggle',\r\n}\r\n\r\n/**\r\n * @en\r\n * The toggle component is a CheckBox, when it used together with a ToggleGroup,\r\n * it could be treated as a RadioButton.\r\n *\r\n * @zh\r\n * Toggle 是一个 CheckBox，当它和 ToggleGroup 一起使用的时候，可以变成 RadioButton。\r\n */\r\n@ccclass('cc.Toggle')\r\n@help('i18n:cc.Toggle')\r\n@executionOrder(110)\r\n@menu('UI/Toggle')\r\n@requireComponent(UITransform)\r\nexport class Toggle extends Button {\r\n    /**\r\n     * @en\r\n     * When this value is true, the check mark component will be enabled,\r\n     * otherwise the check mark component will be disabled.\r\n     *\r\n     * @zh\r\n     * 如果这个设置为 true，则 check mark 组件会处于 enabled 状态，否则处于 disabled 状态。\r\n     */\r\n    @displayOrder(1)\r\n    @tooltip('i18n:toggle.isChecked')\r\n    get isChecked (): boolean {\r\n        return this._isChecked;\r\n    }\r\n\r\n    set isChecked (value) {\r\n        this._set(value);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The image used for the checkmark.\r\n     *\r\n     * @zh\r\n     * Toggle 处于选中状态时显示的图片。\r\n     */\r\n    @type(Sprite)\r\n    @displayOrder(1)\r\n    @tooltip('i18n:toggle.checkMark')\r\n    get checkMark (): Sprite | null {\r\n        return this._checkMark;\r\n    }\r\n\r\n    set checkMark (value) {\r\n        if (this._checkMark === value) {\r\n            return;\r\n        }\r\n\r\n        this._checkMark = value;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    set _resizeToTarget (value: boolean) {\r\n        if (value) {\r\n            this._resizeNodeToTargetNode();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    get _toggleContainer (): ToggleContainer | null {\r\n        const parent = this.node.parent!;\r\n        if (legacyCC.Node.isNode(parent)) {\r\n            return parent.getComponent('cc.ToggleContainer') as ToggleContainer;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Enum for toggle event.\r\n     * @zh toggle 事件枚举。\r\n     */\r\n    public static EventType = extendsEnum(ToggleEventType, ButtonEventType);\r\n\r\n    /**\r\n     * @en\r\n     * If Toggle is clicked, it will trigger event's handler.\r\n     *\r\n     * @zh\r\n     * Toggle 按钮的点击事件列表。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @tooltip('i18n:toggle.check_events')\r\n    public checkEvents: ComponentEventHandler[] = [];\r\n    @serializable\r\n    protected _isChecked = true;\r\n    @serializable\r\n    protected _checkMark: Sprite | null = null;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    protected _internalToggle (): void {\r\n        this.isChecked = !this.isChecked;\r\n    }\r\n\r\n    protected _set (value: boolean, emitEvent = true): void {\r\n        if (this._isChecked == value) return;\r\n\r\n        this._isChecked = value;\r\n\r\n        const group = this._toggleContainer;\r\n        if (group && group.enabled && this.enabled) {\r\n            if (value || (!group.anyTogglesChecked() && !group.allowSwitchOff)) {\r\n                this._isChecked = true;\r\n                group.notifyToggleCheck(this, emitEvent);\r\n            }\r\n        }\r\n\r\n        this.playEffect();\r\n        if (emitEvent) {\r\n            this._emitToggleEvents();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public playEffect (): void {\r\n        if (this._checkMark) {\r\n            this._checkMark.node.active = this._isChecked;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set isChecked without invoking checkEvents.\r\n     *\r\n     * @zh\r\n     * 设置 isChecked 而不调用 checkEvents 回调。\r\n     *\r\n     * @param value @en Whether this toggle is pressed. @zh 是否被按下。\r\n     */\r\n    public setIsCheckedWithoutNotify (value: boolean): void {\r\n        this._set(value, false);\r\n    }\r\n\r\n    public onEnable (): void {\r\n        super.onEnable();\r\n        this.playEffect();\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this.node.on(Toggle.EventType.CLICK, this._internalToggle, this);\r\n        }\r\n    }\r\n\r\n    public onDisable (): void {\r\n        super.onDisable();\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this.node.off(Toggle.EventType.CLICK, this._internalToggle, this);\r\n        }\r\n    }\r\n\r\n    protected _emitToggleEvents (): void {\r\n        this.node.emit(Toggle.EventType.TOGGLE, this);\r\n        if (this.checkEvents) {\r\n            ComponentEventHandler.emitEvents(this.checkEvents, this);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n *\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event toggle\r\n * @param event @en The event when toggle is pressed up or down. @zh 切换键被按下或抬起时发送的事件。\r\n * @param toggle @en The Toggle component. @zh 切换键组件。\r\n */\r\n\r\nlegacyCC.Toggle = Toggle;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEV } from 'internal:constants';\r\nimport { errorID } from '../../platform/debug';\r\n\r\n/**\r\n * @zh\r\n * 组合任意多个枚举。\r\n * 此函数的行为等价于返回了一个新的枚举，其成员囊括了所有源枚举的成员。\r\n * 这些枚举的成员必须各不相同（包括成员名和值），否则行为是未定义的。\r\n * @en\r\n * Combine an arbitrary number of enumerations.\r\n * It behaves like an enumeration having members that are a combination of members of the source enumerations\r\n * is returned.\r\n * These enumerations shall have non-overlapped member names or member values.\r\n * If not, the behavior is undefined.\r\n * @example\r\n * ```ts\r\n * enum Apple { apple = 'apple', }\r\n * enum Pen { pen = 'pen' }\r\n * // As if `enum ApplePen { apple = 'apple'; pen = 'pen'; }`\r\n * const ApplePen = extendsEnum(Apple, Pen);\r\n * ```\r\n */\r\nexport function extendsEnum (): {};\r\n\r\nexport function extendsEnum<E0> (e0: E0): E0;\r\n\r\nexport function extendsEnum<E0, E1> (e0: E0, e1: E1): E0 & E1;\r\n\r\nexport function extendsEnum<E0, E1, E2> (e0: E0, e1: E1, e2: E2): E0 & E1 & E2;\r\n\r\nexport function extendsEnum<E0, E1, E2, E3> (e0: E0, e1: E1, e2: E2, e3: E3): E0 & E1 & E2 & E3;\r\n\r\nexport function extendsEnum (...enums: any[]): any {\r\n    if (DEV) {\r\n        const kvs: PropertyKey[] = [];\r\n        for (const e of enums) {\r\n            for (const kv of Object.keys(e)) {\r\n                if (kvs.indexOf(kv) >= 0) {\r\n                    errorID(3659);\r\n                } else {\r\n                    kvs.push(kv);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return Object.assign({}, ...enums);\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executeInEditMode, executionOrder, menu, tooltip, type, serializable } from 'cc.decorator';\r\nimport { Component, EventHandler as ComponentEventHandler } from '../scene-graph';\r\nimport { Toggle } from './toggle';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\n\r\n/**\r\n * @en\r\n * ToggleContainer is not a visible UI component but a way to modify the behavior of a set of Toggles. <br/>\r\n * Toggles that belong to the same group could only have one of them to be switched on at a time.<br/>\r\n * Note: All the first layer child node containing the toggle component will auto be added to the container.\r\n *\r\n * @zh\r\n * ToggleGroup 不是一个可见的 UI 组件，它可以用来修改一组 Toggle  组件的行为。当一组 Toggle 属于同一个 ToggleGroup 的时候，<br/>\r\n * 任何时候只能有一个 Toggle 处于选中状态。\r\n */\r\n\r\n@ccclass('cc.ToggleContainer')\r\n@help('i18n:cc.ToggleContainer')\r\n@executionOrder(110)\r\n@menu('UI/ToggleContainer')\r\n@executeInEditMode\r\nexport class ToggleContainer extends Component {\r\n    @serializable\r\n    protected _allowSwitchOff = false;\r\n    /**\r\n     * @en\r\n     * If this setting is true, a toggle could be switched off and on when pressed.\r\n     * If it is false, it will make sure there is always only one toggle could be switched on\r\n     * and the already switched on toggle can't be switched off.\r\n     *\r\n     * @zh\r\n     * 如果这个设置为 true，那么 toggle 按钮在被点击的时候可以反复地被选中和未选中。\r\n     */\r\n    @tooltip('i18n:toggle_group.allowSwitchOff')\r\n    get allowSwitchOff (): boolean {\r\n        return this._allowSwitchOff;\r\n    }\r\n\r\n    set allowSwitchOff (value) {\r\n        this._allowSwitchOff = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If Toggle is clicked, it will trigger event's handler.\r\n     *\r\n     * @zh\r\n     * Toggle 按钮的点击事件列表。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @tooltip('i18n:toggle_group.check_events')\r\n    public checkEvents: ComponentEventHandler[] = [];\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Read only property, return the toggle items array reference managed by ToggleContainer.\r\n     *\r\n     * @zh\r\n     * 只读属性，返回 toggleContainer 管理的 toggle 数组引用。\r\n     */\r\n    get toggleItems (): Toggle[] {\r\n        return this.node.children.map((item) => {\r\n            const toggle = item.getComponent('cc.Toggle') as Toggle;\r\n            if (toggle && toggle.enabled) {\r\n                return toggle;\r\n            }\r\n            return null;\r\n        }).filter(Boolean) as Toggle[];\r\n    }\r\n\r\n    public onEnable (): void {\r\n        this.ensureValidState();\r\n        this.node.on(NodeEventType.CHILD_ADDED, this.ensureValidState, this);\r\n        this.node.on(NodeEventType.CHILD_REMOVED, this.ensureValidState, this);\r\n    }\r\n\r\n    public onDisable (): void {\r\n        this.node.off(NodeEventType.CHILD_ADDED, this.ensureValidState, this);\r\n        this.node.off(NodeEventType.CHILD_REMOVED, this.ensureValidState, this);\r\n    }\r\n\r\n    public activeToggles (): Toggle[] {\r\n        return this.toggleItems.filter((x) => x.isChecked);\r\n    }\r\n\r\n    public anyTogglesChecked (): boolean {\r\n        return !!this.toggleItems.find((x) => x.isChecked);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Refresh the state of the managed toggles.\r\n     *\r\n     * @zh\r\n     * 刷新管理的 toggle 状态。\r\n     *\r\n     * @param toggle @en The toggle to be updated. @zh 需要被更新的切换键。\r\n     * @param emitEvent @en Whether events are needed to be emitted. @zh 是否需要触发事件。\r\n     */\r\n    public notifyToggleCheck (toggle: Toggle, emitEvent = true): void {\r\n        if (!this.enabledInHierarchy) { return; }\r\n\r\n        for (let i = 0; i < this.toggleItems.length; i++) {\r\n            const item = this.toggleItems[i]!;\r\n            if (item === toggle) {\r\n                continue;\r\n            }\r\n            if (emitEvent) {\r\n                item.isChecked = false;\r\n            } else {\r\n                item.setIsCheckedWithoutNotify(false);\r\n            }\r\n        }\r\n\r\n        if (this.checkEvents) {\r\n            legacyCC.Component.EventHandler.emitEvents(this.checkEvents, toggle);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Ensure toggles state valid.\r\n     * @zh 确保 toggles 状态有效。\r\n     */\r\n    public ensureValidState (): void {\r\n        const toggles = this.toggleItems;\r\n        if (!this._allowSwitchOff && !this.anyTogglesChecked() && toggles.length !== 0) {\r\n            const toggle = toggles[0]!;\r\n            toggle.isChecked = true;\r\n            this.notifyToggleCheck(toggle);\r\n        }\r\n\r\n        const activeToggles = this.activeToggles();\r\n        if (activeToggles.length > 1) {\r\n            const firstToggle = activeToggles[0];\r\n            for (let i = 0; i < activeToggles.length; ++i) {\r\n                const toggle = activeToggles[i];\r\n                if (toggle === firstToggle) {\r\n                    continue;\r\n                }\r\n                toggle.isChecked = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlegacyCC.ToggleContainer = ToggleContainer;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executeInEditMode, executionOrder, menu, requireComponent, tooltip, type, editorOnly, editable, serializable, visible } from 'cc.decorator';\r\nimport { EDITOR, DEV, EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { Component } from '../scene-graph/component';\r\nimport { UITransform } from '../2d/framework/ui-transform';\r\nimport { Size, Vec2, Vec3, visibleRect, ccenum, errorID, cclegacy, Rect } from '../core';\r\nimport { View } from './view';\r\nimport { Scene } from '../scene-graph';\r\nimport { Node } from '../scene-graph/node';\r\nimport { TransformBit } from '../scene-graph/node-enum';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\n\r\nconst _tempScale = new Vec2();\r\n\r\n// returns a readonly size of the node\r\nexport function getReadonlyNodeSize (parent: Node | Scene): {\r\n    topLeft: any;\r\n    topRight: any;\r\n    top: any;\r\n    bottomLeft: any;\r\n    bottomRight: any;\r\n    bottom: any;\r\n    center: any;\r\n    left: any;\r\n    right: any;\r\n    width: number;\r\n    height: number;\r\n    init(visibleRect_: Rect): void;\r\n} | Readonly<Size> {\r\n    const parentUITransform = parent._getUITransformComp();\r\n    if (parent instanceof Scene) {\r\n        if (EDITOR) {\r\n            // const canvasComp = parent.getComponentInChildren(Canvas);\r\n            if (!View.instance) {\r\n                throw new Error('cc.view uninitiated');\r\n            }\r\n\r\n            return View.instance.getDesignResolutionSize();\r\n        }\r\n\r\n        return visibleRect;\r\n    } else if (parentUITransform) {\r\n        return parentUITransform.contentSize;\r\n    } else {\r\n        return Size.ZERO;\r\n    }\r\n}\r\n\r\nexport function computeInverseTransForTarget (widgetNode: Node, target: Node, out_inverseTranslate: Vec2, out_inverseScale: Vec2): void {\r\n    if (widgetNode.parent) {\r\n        _tempScale.set(widgetNode.parent.scale.x, widgetNode.parent.scale.y);\r\n    } else {\r\n        _tempScale.set(0, 0);\r\n    }\r\n    let scaleX = _tempScale.x;\r\n    let scaleY = _tempScale.y;\r\n    let translateX = 0;\r\n    let translateY = 0;\r\n    for (let node = widgetNode.parent; ;) {\r\n        if (!node) {\r\n            // ERROR: widgetNode should be child of target\r\n            out_inverseTranslate.x = out_inverseTranslate.y = 0;\r\n            out_inverseScale.x = out_inverseScale.y = 1;\r\n            return;\r\n        }\r\n\r\n        const pos = node.position;\r\n        translateX += pos.x;\r\n        translateY += pos.y;\r\n        node = node.parent;    // loop increment\r\n\r\n        if (node !== target) {\r\n            if (node) {\r\n                _tempScale.set(node.scale.x, node.scale.y);\r\n            } else {\r\n                _tempScale.set(0, 0);\r\n            }\r\n            const sx = _tempScale.x;\r\n            const sy = _tempScale.y;\r\n            translateX *= sx;\r\n            translateY *= sy;\r\n            scaleX *= sx;\r\n            scaleY *= sy;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    out_inverseScale.x = scaleX !== 0 ? (1 / scaleX) : 1;\r\n    out_inverseScale.y = scaleY !== 0 ? (1 / scaleY) : 1;\r\n    out_inverseTranslate.x = -translateX;\r\n    out_inverseTranslate.y = -translateY;\r\n}\r\n\r\n/**\r\n * @en Enum for Widget's alignment mode, indicating when the widget should refresh.\r\n *\r\n * @zh Widget 的对齐模式，表示 Widget 应该何时刷新。\r\n */\r\nexport enum AlignMode {\r\n    /**\r\n     * @en Only align once when the Widget is enabled for the first time.\r\n     * This will allow the script or animation to continue controlling the current node.\r\n     * It will only be aligned once before the end of frame when onEnable is called,then immediately disables the Widget.\r\n     *\r\n     * @zh 仅在 Widget 第一次激活时对齐一次，便于脚本或动画继续控制当前节点。<br/>\r\n     * 开启后会在 onEnable 时所在的那一帧结束前对齐一次，然后立刻禁用该 Widget。\r\n     */\r\n    ONCE = 0,\r\n    /**\r\n     * @en Keep aligning all the way.\r\n     *\r\n     * @zh  始终保持对齐。\r\n     */\r\n    ALWAYS = 1,\r\n    /**\r\n     * @en\r\n     * At the beginning, the widget will be aligned as the method 'ONCE'.\r\n     * After that the widget will be aligned only when the size of screen is modified.\r\n     *\r\n     * @zh\r\n     * 一开始会像 ONCE 一样对齐一次，之后每当窗口大小改变时还会重新对齐。\r\n     */\r\n    ON_WINDOW_RESIZE = 2,\r\n}\r\n\r\nccenum(AlignMode);\r\n\r\n/**\r\n * @en Enum for Widget's alignment flag, indicating when the widget select alignment.\r\n *\r\n * @zh Widget 的对齐标志，表示 Widget 选择对齐状态。\r\n */\r\nexport enum AlignFlags {\r\n    /**\r\n     * @en Align top.\r\n     *\r\n     * @zh 上边对齐。\r\n     */\r\n    TOP = 1 << 0,\r\n    /**\r\n     * @en Align middle.\r\n     *\r\n     * @zh 垂直中心对齐。\r\n     */\r\n    MID = 1 << 1,\r\n    /**\r\n     * @en Align bottom.\r\n     *\r\n     * @zh 下边对齐。\r\n     */\r\n    BOT = 1 << 2,\r\n    /**\r\n     * @en Align left.\r\n     *\r\n     * @zh 左边对齐。\r\n     */\r\n    LEFT = 1 << 3,\r\n    /**\r\n     * @en Align center.\r\n     *\r\n     * @zh 横向中心对齐。\r\n     */\r\n    CENTER = 1 << 4,\r\n    /**\r\n     * @en Align right.\r\n     *\r\n     * @zh 右边对齐。\r\n     */\r\n    RIGHT = 1 << 5,\r\n    /**\r\n     * @en Align horizontal.\r\n     *\r\n     * @zh 横向对齐。\r\n     */\r\n    HORIZONTAL = LEFT | CENTER | RIGHT,\r\n    /**\r\n     * @en Align vertical.\r\n     *\r\n     * @zh 纵向对齐。\r\n     */\r\n    VERTICAL = TOP | MID | BOT,\r\n}\r\n\r\nconst TOP_BOT = AlignFlags.TOP | AlignFlags.BOT;\r\nconst LEFT_RIGHT = AlignFlags.LEFT | AlignFlags.RIGHT;\r\n\r\n/**\r\n * @en\r\n * Stores and manipulate the anchoring based on its parent.\r\n * Widget are used for GUI but can also be used for other things.\r\n * Widget will adjust current node's position and size automatically,\r\n * but the results after adjustment can not be obtained until the next frame unless you call [[updateAlignment]] manually.\r\n *\r\n * @zh Widget 组件，用于设置和适配其相对于父节点的边距，Widget 通常被用于 UI 界面，也可以用于其他地方。<br/>\r\n * Widget 会自动调整当前节点的坐标和宽高，不过目前调整后的结果要到下一帧才能在脚本里获取到，除非你先手动调用 [[updateAlignment]]。\r\n */\r\n@ccclass('cc.Widget')\r\n@help('i18n:cc.Widget')\r\n@executionOrder(110)\r\n@menu('UI/Widget')\r\n@requireComponent(UITransform)\r\n@executeInEditMode\r\nexport class Widget extends Component {\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Specifies an alignment target that can only be one of the parent nodes of the current node.\r\n     * The default value is null, and when null, indicates the current parent.\r\n     *\r\n     * @zh\r\n     * 指定一个对齐目标，只能是当前节点的其中一个父节点，默认为空，为空时表示当前父节点。\r\n     */\r\n    @type(Node)\r\n    @tooltip('i18n:widget.target')\r\n    get target (): Node | null {\r\n        return this._target;\r\n    }\r\n\r\n    set target (value) {\r\n        if (this._target === value) {\r\n            return;\r\n        }\r\n\r\n        this._unregisterTargetEvents();\r\n        this._target = value;\r\n        this._registerTargetEvents();\r\n        if (EDITOR /* && !cc.engine._isPlaying */ && this.node.parent) {\r\n            // adjust the offsets to keep the size and position unchanged after target changed\r\n            cclegacy._widgetManager.updateOffsetsToStayPut(this);\r\n        }\r\n\r\n        this._validateTargetInDEV();\r\n\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to align to the top.\r\n     *\r\n     * @zh\r\n     * 是否对齐上边。\r\n     */\r\n    @tooltip('i18n:widget.align_top')\r\n    get isAlignTop (): boolean {\r\n        return (this._alignFlags & AlignFlags.TOP) > 0;\r\n    }\r\n    set isAlignTop (value) {\r\n        this._setAlign(AlignFlags.TOP, value);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to align to the bottom.\r\n     *\r\n     * @zh\r\n     * 是否对齐下边。\r\n     */\r\n    @tooltip('i18n:widget.align_bottom')\r\n    get isAlignBottom (): boolean {\r\n        return (this._alignFlags & AlignFlags.BOT) > 0;\r\n    }\r\n    set isAlignBottom (value) {\r\n        this._setAlign(AlignFlags.BOT, value);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to align to the left.\r\n     *\r\n     * @zh\r\n     * 是否对齐左边。\r\n     */\r\n    @tooltip('i18n:widget.align_left')\r\n    get isAlignLeft (): boolean {\r\n        return (this._alignFlags & AlignFlags.LEFT) > 0;\r\n    }\r\n    set isAlignLeft (value) {\r\n        this._setAlign(AlignFlags.LEFT, value);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to align to the right.\r\n     *\r\n     * @zh\r\n     * 是否对齐右边。\r\n     */\r\n    @tooltip('i18n:widget.align_right')\r\n    get isAlignRight (): boolean {\r\n        return (this._alignFlags & AlignFlags.RIGHT) > 0;\r\n    }\r\n    set isAlignRight (value) {\r\n        this._setAlign(AlignFlags.RIGHT, value);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to align vertically.\r\n     *\r\n     * @zh\r\n     * 是否垂直方向对齐中点，开启此项会将垂直方向其他对齐选项取消。\r\n     */\r\n    @tooltip('i18n:widget.align_h_center')\r\n    get isAlignVerticalCenter (): boolean {\r\n        return (this._alignFlags & AlignFlags.MID) > 0;\r\n    }\r\n    set isAlignVerticalCenter (value) {\r\n        if (value) {\r\n            this.isAlignTop = false;\r\n            this.isAlignBottom = false;\r\n            this._alignFlags |= AlignFlags.MID;\r\n        } else {\r\n            this._alignFlags &= ~AlignFlags.MID;\r\n        }\r\n\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to align horizontally.\r\n     *\r\n     * @zh\r\n     * 是否水平方向对齐中点，开启此选项会将水平方向其他对齐选项取消。\r\n     */\r\n    @tooltip('i18n:widget.align_v_center')\r\n    get isAlignHorizontalCenter (): boolean {\r\n        return (this._alignFlags & AlignFlags.CENTER) > 0;\r\n    }\r\n    set isAlignHorizontalCenter (value) {\r\n        if (value) {\r\n            this.isAlignLeft = false;\r\n            this.isAlignRight = false;\r\n            this._alignFlags |= AlignFlags.CENTER;\r\n        } else {\r\n            this._alignFlags &= ~AlignFlags.CENTER;\r\n        }\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to stretch horizontally, when enable the left and right alignment will be stretched horizontally,\r\n     * the width setting is invalid (read only).\r\n     *\r\n     * @zh\r\n     * 当前是否水平拉伸。当同时启用左右对齐时，节点将会被水平拉伸。此时节点的宽度（只读）。\r\n     */\r\n    @visible(false)\r\n    get isStretchWidth (): boolean {\r\n        return (this._alignFlags & LEFT_RIGHT) === LEFT_RIGHT;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to stretch vertically, when enable the left and right alignment will be stretched vertically,\r\n     * then height setting is invalid (read only).\r\n     *\r\n     * @zh\r\n     * 当前是否垂直拉伸。当同时启用上下对齐时，节点将会被垂直拉伸，此时节点的高度（只读）。\r\n     */\r\n    @visible(false)\r\n    get isStretchHeight (): boolean {\r\n        return (this._alignFlags & TOP_BOT) === TOP_BOT;\r\n    }\r\n\r\n    // ALIGN MARGINS\r\n\r\n    /**\r\n     * @en\r\n     * The margins between the top of this node and the top of parent node,\r\n     * the value can be negative, Only available in 'isAlignTop' open.\r\n     *\r\n     * @zh\r\n     * 本节点顶边和父节点顶边的距离，可填写负值，只有在 isAlignTop 开启时才有作用。\r\n     */\r\n    @tooltip('i18n:widget.top')\r\n    get top (): number {\r\n        return this._top;\r\n    }\r\n    set top (value) {\r\n        this._top = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @EditorOnly Not for user\r\n     */\r\n    @editable\r\n    get editorTop (): number {\r\n        return this._isAbsTop ? this._top : (this._top * 100);\r\n    }\r\n    set editorTop (value) {\r\n        this._top = this._isAbsTop ? value : (value / 100);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The margins between the bottom of this node and the bottom of parent node,\r\n     * the value can be negative, Only available in 'isAlignBottom' open.\r\n     *\r\n     * @zh\r\n     * 本节点底边和父节点底边的距离，可填写负值，只有在 isAlignBottom 开启时才有作用。\r\n     */\r\n    @tooltip('i18n:widget.bottom')\r\n    get bottom (): number {\r\n        return this._bottom;\r\n    }\r\n    set bottom (value) {\r\n        this._bottom = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @EditorOnly Not for user\r\n     */\r\n    @editable\r\n    get editorBottom (): number {\r\n        return this._isAbsBottom ? this._bottom : (this._bottom * 100);\r\n    }\r\n    set editorBottom (value) {\r\n        this._bottom = this._isAbsBottom ? value : (value / 100);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The margins between the left of this node and the left of parent node,\r\n     * the value can be negative, Only available in 'isAlignLeft' open.\r\n     *\r\n     * @zh\r\n     * 本节点左边和父节点左边的距离，可填写负值，只有在 isAlignLeft 开启时才有作用。\r\n     */\r\n    @tooltip('i18n:widget.left')\r\n    get left (): number {\r\n        return this._left;\r\n    }\r\n    set left (value) {\r\n        this._left = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @EditorOnly Not for user\r\n     */\r\n    @editable\r\n    get editorLeft (): number {\r\n        return this._isAbsLeft ? this._left : (this._left * 100);\r\n    }\r\n    set editorLeft (value) {\r\n        this._left = this._isAbsLeft ? value : (value / 100);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The margins between the right of this node and the right of parent node,\r\n     * the value can be negative, Only available in 'isAlignRight' open.\r\n     *\r\n     * @zh\r\n     * 本节点右边和父节点右边的距离，可填写负值，只有在 isAlignRight 开启时才有作用。\r\n     */\r\n    @tooltip('i18n:widget.right')\r\n    get right (): number {\r\n        return this._right;\r\n    }\r\n    set right (value) {\r\n        this._right = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @EditorOnly Not for user\r\n     */\r\n    @editable\r\n    get editorRight (): number {\r\n        return this._isAbsRight ? this._right : (this._right * 100);\r\n    }\r\n    set editorRight (value) {\r\n        this._right = this._isAbsRight ? value : (value / 100);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Horizontally aligns the midpoint offset value,\r\n     * the value can be negative, Only available in 'isAlignHorizontalCenter' open.\r\n     *\r\n     * @zh\r\n     * 水平居中的偏移值，可填写负值，只有在 isAlignHorizontalCenter 开启时才有作用。\r\n     */\r\n    @tooltip('i18n:widget.horizontal_center')\r\n    get horizontalCenter (): number {\r\n        return this._horizontalCenter;\r\n    }\r\n    set horizontalCenter (value) {\r\n        this._horizontalCenter = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @EditorOnly Not for user\r\n     */\r\n    @editable\r\n    get editorHorizontalCenter (): number {\r\n        return this._isAbsHorizontalCenter ? this._horizontalCenter : (this._horizontalCenter * 100);\r\n    }\r\n    set editorHorizontalCenter (value) {\r\n        this._horizontalCenter = this._isAbsHorizontalCenter ? value : (value / 100);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Vertically aligns the midpoint offset value,\r\n     * the value can be negative, Only available in 'isAlignVerticalCenter' open.\r\n     *\r\n     * @zh\r\n     * 垂直居中的偏移值，可填写负值，只有在 isAlignVerticalCenter 开启时才有作用。\r\n     */\r\n    @tooltip('i18n:widget.vertical_center')\r\n    get verticalCenter (): number {\r\n        return this._verticalCenter;\r\n    }\r\n    set verticalCenter (value) {\r\n        this._verticalCenter = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @EditorOnly Not for user\r\n     */\r\n    @editable\r\n    get editorVerticalCenter (): number {\r\n        return this._isAbsVerticalCenter ? this._verticalCenter : (this._verticalCenter * 100);\r\n    }\r\n    set editorVerticalCenter (value) {\r\n        this._verticalCenter = this._isAbsVerticalCenter ? value : (value / 100);\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If true, top is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's height.\r\n     *\r\n     * @zh\r\n     * 如果为 true，\"top\" 将会以像素作为边距，否则将会以相对父物体高度的比例（0 到 1）作为边距。\r\n     */\r\n    @editable\r\n    get isAbsoluteTop (): boolean {\r\n        return this._isAbsTop;\r\n    }\r\n    set isAbsoluteTop (value) {\r\n        if (this._isAbsTop === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAbsTop = value;\r\n        this._autoChangedValue(AlignFlags.TOP, this._isAbsTop);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If true, bottom is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's height.\r\n     *\r\n     * @zh\r\n     * 如果为 true，\"bottom\" 将会以像素作为边距，否则将会以相对父物体高度的比例（0 到 1）作为边距。\r\n     */\r\n    @editable\r\n    get isAbsoluteBottom (): boolean {\r\n        return this._isAbsBottom;\r\n    }\r\n    set isAbsoluteBottom (value) {\r\n        if (this._isAbsBottom === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAbsBottom = value;\r\n        this._autoChangedValue(AlignFlags.BOT, this._isAbsBottom);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If true, left is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's width.\r\n     *\r\n     * @zh\r\n     * 如果为 true，\"left\" 将会以像素作为边距，否则将会以相对父物体宽度的比例（0 到 1）作为边距。\r\n     */\r\n    @editable\r\n    get isAbsoluteLeft (): boolean {\r\n        return this._isAbsLeft;\r\n    }\r\n    set isAbsoluteLeft (value) {\r\n        if (this._isAbsLeft === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAbsLeft = value;\r\n        this._autoChangedValue(AlignFlags.LEFT, this._isAbsLeft);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If true, right is pixel margin, otherwise is percentage (0 - 1) margin relative to the parent's width.\r\n     *\r\n     * @zh\r\n     * 如果为 true，\"right\" 将会以像素作为边距，否则将会以相对父物体宽度的比例（0 到 1）作为边距。\r\n     */\r\n    @editable\r\n    get isAbsoluteRight (): boolean {\r\n        return this._isAbsRight;\r\n    }\r\n    set isAbsoluteRight (value) {\r\n        if (this._isAbsRight === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAbsRight = value;\r\n        this._autoChangedValue(AlignFlags.RIGHT, this._isAbsRight);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If true, horizontalCenter is pixel margin, otherwise is percentage (0 - 1) margin.\r\n     *\r\n     * @zh\r\n     * 如果为 true，\"horizontalCenter\" 将会以像素作为偏移值，反之为比例（0 到 1）。\r\n     */\r\n    @editable\r\n    get isAbsoluteHorizontalCenter (): boolean {\r\n        return this._isAbsHorizontalCenter;\r\n    }\r\n    set isAbsoluteHorizontalCenter (value) {\r\n        if (this._isAbsHorizontalCenter === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAbsHorizontalCenter = value;\r\n        this._autoChangedValue(AlignFlags.CENTER, this._isAbsHorizontalCenter);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * If true, verticalCenter is pixel margin, otherwise is percentage (0 - 1) margin.\r\n     *\r\n     * @zh\r\n     * 如果为 true，\"verticalCenter\" 将会以像素作为偏移值，反之为比例（0 到 1）。\r\n     */\r\n    @editable\r\n    get isAbsoluteVerticalCenter (): boolean {\r\n        return this._isAbsVerticalCenter;\r\n    }\r\n    set isAbsoluteVerticalCenter (value) {\r\n        if (this._isAbsVerticalCenter === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAbsVerticalCenter = value;\r\n        this._autoChangedValue(AlignFlags.MID, this._isAbsVerticalCenter);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Specifies the alignment mode of the Widget, which determines when the widget should refresh.\r\n     *\r\n     * @zh\r\n     * 指定 Widget 的对齐模式，用于决定 Widget 应该何时刷新。\r\n     *\r\n     * @example\r\n     * ```\r\n     * import { Widget } from 'cc';\r\n     * widget.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\r\n     * ```\r\n     */\r\n    @type(AlignMode)\r\n    @tooltip('i18n:widget.align_mode')\r\n    get alignMode (): AlignMode {\r\n        return this._alignMode;\r\n    }\r\n    set alignMode (value) {\r\n        this._alignMode = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    /**\r\n     * @zh\r\n     * 对齐标志位。\r\n     * @en\r\n     * Align flags.\r\n     */\r\n    @editable\r\n    get alignFlags (): number {\r\n        return this._alignFlags;\r\n    }\r\n    set alignFlags (value) {\r\n        if (this._alignFlags === value) {\r\n            return;\r\n        }\r\n\r\n        this._alignFlags = value;\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    public static AlignMode = AlignMode;\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _lastPos = new Vec3();\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _lastSize = new Size();\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _dirty = true;\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _hadAlignOnce = false;\r\n\r\n    @serializable\r\n    private _alignFlags = 0;\r\n    @serializable\r\n    private _target: Node | null = null;\r\n    @serializable\r\n    private _left = 0;\r\n    @serializable\r\n    private _right = 0;\r\n    @serializable\r\n    private _top = 0;\r\n    @serializable\r\n    private _bottom = 0;\r\n    @serializable\r\n    private _horizontalCenter = 0;\r\n    @serializable\r\n    private _verticalCenter = 0;\r\n    @serializable\r\n    private _isAbsLeft = true;\r\n    @serializable\r\n    private _isAbsRight = true;\r\n    @serializable\r\n    private _isAbsTop = true;\r\n    @serializable\r\n    private _isAbsBottom = true;\r\n    @serializable\r\n    private _isAbsHorizontalCenter = true;\r\n    @serializable\r\n    private _isAbsVerticalCenter = true;\r\n    // original size before align\r\n    @serializable\r\n    private _originalWidth = 0;\r\n    @serializable\r\n    private _originalHeight = 0;\r\n    @serializable\r\n    private _alignMode = AlignMode.ON_WINDOW_RESIZE;\r\n    @serializable\r\n    @editorOnly\r\n    private _lockFlags = 0;\r\n\r\n    /**\r\n     * @en\r\n     * Immediately perform the widget alignment. You need to manually call this method only if\r\n     * you need to get the latest results after the alignment before the end of current frame.\r\n     *\r\n     * @zh\r\n     * 立刻执行 widget 对齐操作。这个接口一般不需要手工调用。\r\n     * 只有当你需要在当前帧结束前获得 widget 对齐后的最新结果时才需要手动调用这个方法。\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * import { log } from 'cc';\r\n     * widget.top = 10;       // change top margin\r\n     * log(widget.node.y); // not yet changed\r\n     * widget.updateAlignment();\r\n     * log(widget.node.y); // changed\r\n     * ```\r\n     */\r\n    public updateAlignment (): void {\r\n        cclegacy._widgetManager.updateAlignment(this.node);\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _validateTargetInDEV (): void {\r\n        if (!DEV) {\r\n            return;\r\n        }\r\n\r\n        const target = this._target;\r\n        if (target) {\r\n            const isParent = this.node !== target && this.node.isChildOf(target);\r\n            if (!isParent) {\r\n                errorID(6500);\r\n                this.target = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setDirty (): void {\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    public onEnable (): void {\r\n        this.node.getPosition(this._lastPos);\r\n        this._lastSize.set(this.node._getUITransformComp()!.contentSize);\r\n        cclegacy._widgetManager.add(this);\r\n        this._hadAlignOnce = false;\r\n        this._registerEvent();\r\n        this._registerTargetEvents();\r\n    }\r\n\r\n    public onDisable (): void {\r\n        cclegacy._widgetManager.remove(this);\r\n        this._unregisterEvent();\r\n        this._unregisterTargetEvents();\r\n    }\r\n\r\n    public onDestroy (): void {\r\n        this._removeParentEvent();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _adjustWidgetToAllowMovingInEditor (eventType: TransformBit): void {}\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _adjustWidgetToAllowResizingInEditor (): void {}\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _adjustWidgetToAnchorChanged (): void {\r\n        this.setDirty();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _adjustTargetToParentChanged (oldParent: Node): void {\r\n        if (oldParent) {\r\n            this._unregisterOldParentEvents(oldParent);\r\n        }\r\n        if (this.node.getParent()) {\r\n            this._registerTargetEvents();\r\n        }\r\n        this._setDirtyByMode();\r\n    }\r\n\r\n    protected _registerEvent (): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            this.node.on(NodeEventType.TRANSFORM_CHANGED, this._adjustWidgetToAllowMovingInEditor, this);\r\n            this.node.on(NodeEventType.SIZE_CHANGED, this._adjustWidgetToAllowResizingInEditor, this);\r\n        } else {\r\n            this.node.on(NodeEventType.TRANSFORM_CHANGED, this._setDirtyByMode, this);\r\n            this.node.on(NodeEventType.SIZE_CHANGED, this._setDirtyByMode, this);\r\n        }\r\n        this.node.on(NodeEventType.ANCHOR_CHANGED, this._adjustWidgetToAnchorChanged, this);\r\n        this.node.on(NodeEventType.PARENT_CHANGED, this._adjustTargetToParentChanged, this);\r\n    }\r\n\r\n    protected _unregisterEvent (): void {\r\n        if (EDITOR_NOT_IN_PREVIEW) {\r\n            this.node.off(NodeEventType.TRANSFORM_CHANGED, this._adjustWidgetToAllowMovingInEditor, this);\r\n            this.node.off(NodeEventType.SIZE_CHANGED, this._adjustWidgetToAllowResizingInEditor, this);\r\n        } else {\r\n            this.node.off(NodeEventType.TRANSFORM_CHANGED, this._setDirtyByMode, this);\r\n            this.node.off(NodeEventType.SIZE_CHANGED, this._setDirtyByMode, this);\r\n        }\r\n        this.node.off(NodeEventType.ANCHOR_CHANGED, this._adjustWidgetToAnchorChanged, this);\r\n    }\r\n\r\n    protected _removeParentEvent (): void {\r\n        this.node.off(NodeEventType.PARENT_CHANGED, this._adjustTargetToParentChanged, this);\r\n    }\r\n\r\n    protected _autoChangedValue (flag: AlignFlags, isAbs: boolean): void {\r\n        const current = (this._alignFlags & flag) > 0;\r\n        if (!current) {\r\n            return;\r\n        }\r\n        const parentUiProps = this.node.parent && this.node.parent._uiProps;\r\n        const parentTrans = parentUiProps && parentUiProps.uiTransformComp;\r\n\r\n        const size = parentTrans ? parentTrans.contentSize : visibleRect;\r\n        if (this.isAlignLeft && flag === AlignFlags.LEFT) {\r\n            this._left = isAbs ? this._left * size.width : this._left / size.width;\r\n        } else if (this.isAlignRight && flag === AlignFlags.RIGHT) {\r\n            this._right = isAbs ? this._right * size.width : this._right / size.width;\r\n        } else if (this.isAlignHorizontalCenter && flag === AlignFlags.CENTER) {\r\n            this._horizontalCenter = isAbs ? this._horizontalCenter * size.width : this._horizontalCenter / size.width;\r\n        } else if (this.isAlignTop && flag === AlignFlags.TOP) {\r\n            this._top = isAbs ? this._top * size.height : this._top / size.height;\r\n        } else if (this.isAlignBottom && flag === AlignFlags.BOT) {\r\n            this._bottom = isAbs ? this._bottom * size.height : this._bottom / size.height;\r\n        } else if (this.isAbsoluteVerticalCenter && flag === AlignFlags.MID) {\r\n            this._verticalCenter = isAbs ? this._verticalCenter / size.height : this._verticalCenter / size.height;\r\n        }\r\n\r\n        this._recursiveDirty();\r\n    }\r\n\r\n    protected _registerTargetEvents (): void {\r\n        const target = this._target || this.node.parent;\r\n        if (target) {\r\n            if (target.getComponent(UITransform)) {\r\n                target.on(NodeEventType.TRANSFORM_CHANGED, this._setDirtyByMode, this);\r\n                target.on(NodeEventType.SIZE_CHANGED, this._setDirtyByMode, this);\r\n                target.on(NodeEventType.ANCHOR_CHANGED, this._setDirtyByMode, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _unregisterTargetEvents (): void {\r\n        const target = this._target || this.node.parent;\r\n        if (target) {\r\n            target.off(NodeEventType.TRANSFORM_CHANGED, this._setDirtyByMode, this);\r\n            target.off(NodeEventType.SIZE_CHANGED, this._setDirtyByMode, this);\r\n            target.off(NodeEventType.ANCHOR_CHANGED, this._setDirtyByMode, this);\r\n        }\r\n    }\r\n\r\n    protected _unregisterOldParentEvents (oldParent: Node): void {\r\n        const target = this._target || oldParent;\r\n        if (target) {\r\n            target.off(NodeEventType.TRANSFORM_CHANGED, this._setDirtyByMode, this);\r\n            target.off(NodeEventType.SIZE_CHANGED, this._setDirtyByMode, this);\r\n            target.off(NodeEventType.ANCHOR_CHANGED, this._setDirtyByMode, this);\r\n        }\r\n    }\r\n    protected _setDirtyByMode (): void {\r\n        if (this.alignMode === AlignMode.ALWAYS || (EDITOR_NOT_IN_PREVIEW)) {\r\n            this._recursiveDirty();\r\n        }\r\n    }\r\n\r\n    private _setAlign (flag: AlignFlags, isAlign: boolean): void {\r\n        const current = (this._alignFlags & flag) > 0;\r\n        if (isAlign === current) {\r\n            return;\r\n        }\r\n        const isHorizontal = (flag & LEFT_RIGHT) > 0;\r\n        const trans = this.node._getUITransformComp()!;\r\n        if (isAlign) {\r\n            this._alignFlags |= flag;\r\n\r\n            if (isHorizontal) {\r\n                this.isAlignHorizontalCenter = false;\r\n                if (this.isStretchWidth) {\r\n                    // become stretch\r\n                    this._originalWidth = trans.width;\r\n                    // test check conflict\r\n                    if (EDITOR /* && !cc.engine.isPlaying */) {\r\n                        // TODO:\r\n                        // _Scene.DetectConflict.checkConflict_Widget(this);\r\n                    }\r\n                }\r\n            } else {\r\n                this.isAlignVerticalCenter = false;\r\n                if (this.isStretchHeight) {\r\n                    // become stretch\r\n                    this._originalHeight = trans.height;\r\n                    // test check conflict\r\n                    if (EDITOR /* && !cc.engine.isPlaying */) {\r\n                        // TODO:\r\n                        // _Scene.DetectConflict.checkConflict_Widget(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (EDITOR && this.node.parent) {\r\n                // adjust the offsets to keep the size and position unchanged after alignment changed\r\n                cclegacy._widgetManager.updateOffsetsToStayPut(this, flag);\r\n            }\r\n        } else {\r\n            if (isHorizontal) {\r\n                if (this.isStretchWidth) {\r\n                    // will cancel stretch\r\n                    trans.width = this._originalWidth;\r\n                }\r\n            } else if (this.isStretchHeight) {\r\n                // will cancel stretch\r\n                trans.height = this._originalHeight;\r\n            }\r\n\r\n            this._alignFlags &= ~flag;\r\n        }\r\n    }\r\n\r\n    private _recursiveDirty (): void {\r\n        if (this._dirty) {\r\n            return;\r\n        }\r\n\r\n        this._dirty = true;\r\n    }\r\n}\r\n\r\n/**\r\n * @deprecated since v3.7.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport declare namespace Widget {\r\n    export type AlignMode = EnumAlias<typeof AlignMode>;\r\n}\r\n\r\n// cc.Widget = module.exports = Widget;\r\ncclegacy.internal.computeInverseTransForTarget = computeInverseTransForTarget;\r\ncclegacy.internal.getReadonlyNodeSize = getReadonlyNodeSize;\r\n\r\ncclegacy.Widget = Widget;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, tooltip, type, serializable } from 'cc.decorator';\r\nimport { SpriteFrame } from '../2d/assets';\r\nimport { Component } from '../scene-graph/component';\r\nimport { Color, Size } from '../core/math';\r\nimport { ccenum } from '../core/value-types/enum';\r\nimport { Node } from '../scene-graph';\r\nimport { Layout, LayoutResizeMode, LayoutType } from './layout';\r\nimport { PageView } from './page-view';\r\nimport { Sprite } from '../2d/components/sprite';\r\nimport { UIRenderer } from '../2d/framework/ui-renderer';\r\nimport { legacyCC } from '../core/global-exports';\r\n\r\nconst _color = new Color();\r\n\r\n/**\r\n * @en Enum for PageView Indicator direction.\r\n *\r\n * @zh 页面视图指示器的摆放方向。\r\n *\r\n * @enum PageViewIndicator.Direction\r\n */\r\nenum Direction {\r\n    /**\r\n     * @en The horizontal direction.\r\n     *\r\n     * @zh 水平方向。\r\n     */\r\n    HORIZONTAL = 0,\r\n\r\n    /**\r\n     * @en The vertical direction.\r\n     *\r\n     * @zh 垂直方向。\r\n     */\r\n    VERTICAL = 1,\r\n}\r\nccenum(Direction);\r\n\r\n/**\r\n * @en\r\n * The Page View Indicator Component.\r\n *\r\n * @zh\r\n * 页面视图每页标记组件。\r\n */\r\n@ccclass('cc.PageViewIndicator')\r\n@help('i18n:cc.PageViewIndicator')\r\n@executionOrder(110)\r\n@menu('UI/PageViewIndicator')\r\nexport class PageViewIndicator extends Component {\r\n    /**\r\n     * @en\r\n     * The spriteFrame for each element.\r\n     *\r\n     * @zh\r\n     * 每个页面标记显示的图片。\r\n     */\r\n    @type(SpriteFrame)\r\n    @tooltip('i18n:pageview_indicator.spriteFrame')\r\n    get spriteFrame (): SpriteFrame | null {\r\n        return this._spriteFrame;\r\n    }\r\n\r\n    set spriteFrame (value) {\r\n        if (this._spriteFrame === value) {\r\n            return;\r\n        }\r\n        this._spriteFrame = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The location direction of PageViewIndicator.\r\n     *\r\n     * @zh\r\n     * 页面标记摆放方向。\r\n     *\r\n     * @param direction @en The direction of the PageViewIndicator. @zh 页面标记的摆放方向。\r\n     */\r\n    @type(Direction)\r\n    @tooltip('i18n:pageview_indicator.direction')\r\n    get direction (): Direction {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction (value) {\r\n        if (this._direction === value) {\r\n            return;\r\n        }\r\n        this._direction = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The cellSize for each element.\r\n     *\r\n     * @zh\r\n     * 每个页面标记的大小。\r\n     */\r\n    @type(Size)\r\n    @tooltip('i18n:pageview_indicator.cell_size')\r\n    get cellSize (): Size {\r\n        return this._cellSize;\r\n    }\r\n\r\n    set cellSize (value) {\r\n        if (this._cellSize === value) {\r\n            return;\r\n        }\r\n        this._cellSize = value;\r\n    }\r\n\r\n    /**\r\n     * @en Enum for PageView Indicator direction.\r\n     * @zh 页面视图指示器的摆放方向。\r\n     * @enum PageViewIndicator.Direction\r\n     */\r\n    public static Direction = Direction;\r\n\r\n    /**\r\n     * @en\r\n     * The distance between each element.\r\n     *\r\n     * @zh\r\n     * 每个页面标记之间的边距。\r\n     */\r\n    @serializable\r\n    @tooltip('i18n:pageview_indicator.spacing')\r\n    public spacing = 0;\r\n    @serializable\r\n    protected _spriteFrame: SpriteFrame | null = null;\r\n    @serializable\r\n    protected _direction: Direction = Direction.HORIZONTAL;\r\n    @serializable\r\n    protected _cellSize = new Size(20, 20);\r\n    protected _layout: Layout | null = null;\r\n    protected _pageView: PageView | null = null;\r\n    protected _indicators: Node[] = [];\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public onLoad (): void {\r\n        this._updateLayout();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set Page View.\r\n     *\r\n     * @zh\r\n     * 设置页面视图。\r\n     *\r\n     * @param target @en The page view which is attached with this indicator.  @zh 当前标记对象附着到的页面视图对象。\r\n     */\r\n    public setPageView (target: PageView): void {\r\n        this._pageView = target;\r\n        this._refresh();\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _updateLayout (): void {\r\n        this._layout = this.getComponent(Layout);\r\n        if (!this._layout) {\r\n            this._layout = this.addComponent(Layout);\r\n        }\r\n\r\n        const layout = this._layout!;\r\n        if (this.direction === Direction.HORIZONTAL) {\r\n            layout.type = LayoutType.HORIZONTAL;\r\n            layout.spacingX = this.spacing;\r\n        } else if (this.direction === Direction.VERTICAL) {\r\n            layout.type = LayoutType.VERTICAL;\r\n            layout.spacingY = this.spacing;\r\n        }\r\n        layout.resizeMode = LayoutResizeMode.CONTAINER;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _createIndicator (): Node {\r\n        const node = new Node();\r\n        node.layer = this.node.layer;\r\n        const sprite = node.addComponent(Sprite);\r\n        sprite.spriteFrame = this.spriteFrame;\r\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\r\n        node.parent = this.node;\r\n        node._getUITransformComp()!.setContentSize(this._cellSize);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _changedState (): void {\r\n        const indicators = this._indicators;\r\n        if (indicators.length === 0 || !this._pageView) { return; }\r\n        const idx = this._pageView.curPageIdx;\r\n        if (idx >= indicators.length) { return; }\r\n        for (let i = 0; i < indicators.length; ++i) {\r\n            const node = indicators[i];\r\n            if (!node._uiProps.uiComp) {\r\n                continue;\r\n            }\r\n\r\n            const uiComp = node._uiProps.uiComp as UIRenderer;\r\n            _color.set(uiComp.color);\r\n            _color.a = 255 / 2;\r\n            uiComp.color = _color;\r\n        }\r\n\r\n        if (indicators[idx]._uiProps.uiComp) {\r\n            const comp = indicators[idx]._uiProps.uiComp as UIRenderer;\r\n            _color.set(comp.color);\r\n            _color.a = 255;\r\n            comp.color = _color;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated since v3.5.0, this is an engine private interface that will be removed in the future.\r\n     */\r\n    public _refresh (): void {\r\n        if (!this._pageView) { return; }\r\n        const indicators = this._indicators;\r\n        const pages = this._pageView.getPages();\r\n        if (pages.length === indicators.length) {\r\n            return;\r\n        }\r\n        let i = 0;\r\n        if (pages.length > indicators.length) {\r\n            for (i = 0; i < pages.length; ++i) {\r\n                if (!indicators[i]) {\r\n                    indicators[i] = this._createIndicator();\r\n                }\r\n            }\r\n        } else {\r\n            const count = indicators.length - pages.length;\r\n            for (i = count; i > 0; --i) {\r\n                const node = indicators[i - 1];\r\n                this.node.removeChild(node);\r\n                indicators.splice(i - 1, 1);\r\n            }\r\n        }\r\n        if (this._layout && this._layout.enabledInHierarchy) {\r\n            this._layout.updateLayout();\r\n        }\r\n        this._changedState();\r\n    }\r\n}\r\n\r\nlegacyCC.PageViewIndicator = PageViewIndicator;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, tooltip, type, slide, range, visible, override, serializable, editable } from 'cc.decorator';\r\nimport { EDITOR_NOT_IN_PREVIEW } from 'internal:constants';\r\nimport { EventHandler as ComponentEventHandler, Node } from '../scene-graph';\r\nimport { EventTouch } from '../input/types';\r\nimport { v2, v3, Vec2, Vec3 } from '../core/math';\r\nimport { ccenum } from '../core/value-types/enum';\r\nimport { Layout } from './layout';\r\nimport { PageViewIndicator } from './page-view-indicator';\r\nimport { ScrollView, ScrollViewEventType as ScrollEventType } from './scroll-view';\r\nimport { ScrollBar } from './scroll-bar';\r\nimport { warnID, logID } from '../core/platform/debug';\r\nimport { extendsEnum } from '../core/data/utils/extends-enum';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\n\r\nconst _tempVec2 = new Vec2();\r\n\r\n/**\r\n * @en Enum for Page View Size Mode.\r\n *\r\n * @zh 页面视图每个页面统一的大小类型。\r\n */\r\nenum SizeMode {\r\n    /**\r\n     * @en Each page is unified in size.\r\n     * @zh 每个页面统一大小。\r\n     */\r\n    Unified = 0,\r\n    /**\r\n     * @en Each page is in free size.\r\n     * @zh 每个页面大小随意。\r\n     */\r\n    Free = 1,\r\n}\r\n\r\nccenum(SizeMode);\r\n\r\n/**\r\n * @en Enum for Page View Direction.\r\n *\r\n * @zh 页面视图滚动类型。\r\n */\r\nenum PageViewDirection {\r\n    /**\r\n     * @en Horizontal scroll.\r\n     * @zh 水平滚动。\r\n     */\r\n    HORIZONTAL = 0,\r\n    /**\r\n     * @en Vertical scroll.\r\n     * @zh 垂直滚动。\r\n     */\r\n    VERTICAL = 1,\r\n}\r\n\r\nccenum(PageViewDirection);\r\n\r\n/**\r\n * @en Enum for ScrollView event type.\r\n *\r\n * @zh 滚动视图事件类型。\r\n */\r\nenum PageViewEventType {\r\n    PAGE_TURNING = 'page-turning',\r\n}\r\n\r\n/**\r\n * @en\r\n * The PageView control.\r\n *\r\n * @zh\r\n * 页面视图组件。\r\n */\r\n@ccclass('cc.PageView')\r\n@help('i18n:cc.PageView')\r\n@executionOrder(110)\r\n@menu('UI/PageView')\r\nexport class PageView extends ScrollView {\r\n    /**\r\n     * @en\r\n     * Specify the size type of each page in PageView.\r\n     *\r\n     * @zh\r\n     * 页面视图中每个页面大小类型。\r\n     */\r\n    @type(SizeMode)\r\n    @tooltip('i18n:pageview.sizeMode')\r\n    get sizeMode (): SizeMode {\r\n        return this._sizeMode;\r\n    }\r\n\r\n    set sizeMode (value) {\r\n        if (this._sizeMode === value) {\r\n            return;\r\n        }\r\n\r\n        this._sizeMode = value;\r\n        this._syncSizeMode();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The page view direction.\r\n     *\r\n     * @zh\r\n     * 页面视图滚动类型。\r\n     */\r\n    @type(PageViewDirection)\r\n    @tooltip('i18n:pageview.direction')\r\n    get direction (): PageViewDirection {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction (value) {\r\n        if (this._direction === value) {\r\n            return;\r\n        }\r\n\r\n        this._direction = value;\r\n        this._syncScrollDirection();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The scroll threshold value, when drag exceeds this value,\r\n     * release the next page will automatically scroll, less than the restore.\r\n     *\r\n     * @zh\r\n     * 滚动临界值，默认单位百分比，当拖拽超出该数值时，松开会自动滚动下一页，小于时则还原。\r\n     */\r\n    @slide\r\n    @range([0, 1, 0.01])\r\n    @tooltip('i18n:pageview.scrollThreshold')\r\n    get scrollThreshold (): number {\r\n        return this._scrollThreshold;\r\n    }\r\n\r\n    set scrollThreshold (value) {\r\n        if (this._scrollThreshold === value) {\r\n            return;\r\n        }\r\n\r\n        this._scrollThreshold = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Change the PageTurning event timing of PageView.\r\n     *\r\n     * @zh\r\n     * 设置 PageView PageTurning 事件的发送时机。\r\n     */\r\n    @slide\r\n    @range([0, 1, 0.01])\r\n    @tooltip('i18n:pageview.pageTurningEventTiming')\r\n    get pageTurningEventTiming (): number {\r\n        return this._pageTurningEventTiming;\r\n    }\r\n\r\n    set pageTurningEventTiming (value) {\r\n        if (this._pageTurningEventTiming === value) {\r\n            return;\r\n        }\r\n\r\n        this._pageTurningEventTiming = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The Page View Indicator.\r\n     *\r\n     * @zh\r\n     * 页面视图指示器组件。\r\n     */\r\n    @type(PageViewIndicator)\r\n    @tooltip('i18n:pageview.indicator')\r\n    get indicator (): PageViewIndicator | null {\r\n        return this._indicator;\r\n    }\r\n\r\n    set indicator (value) {\r\n        if (this._indicator === value) {\r\n            return;\r\n        }\r\n\r\n        this._indicator = value;\r\n        if (this.indicator) {\r\n            this.indicator.setPageView(this);\r\n        }\r\n    }\r\n\r\n    get curPageIdx (): number {\r\n        return this._curPageIdx;\r\n    }\r\n\r\n    /**\r\n     * @en Enum for Page View Size Mode.\r\n     * @zh 页面视图每个页面统一的大小类型。\r\n     */\r\n    public static SizeMode = SizeMode;\r\n    /**\r\n     * @en Enum for Page View Direction.\r\n     * @zh 页面视图滚动类型。\r\n     */\r\n    public static Direction = PageViewDirection;\r\n    /**\r\n     * @en Enum for Page View event.\r\n     * @zh 页面视图事件枚举\r\n     */\r\n    public static EventType = extendsEnum(PageViewEventType, ScrollEventType);\r\n\r\n    /**\r\n     * @en\r\n     * Auto page turning velocity threshold. When users swipe the PageView quickly,\r\n     * it will calculate a velocity based on the scroll distance and time,\r\n     * if the calculated velocity is larger than the threshold, then it will trigger page turning.\r\n     *\r\n     * @zh\r\n     * 快速滑动翻页临界值。\r\n     * 当用户快速滑动时，会根据滑动开始和结束的距离与时间计算出一个速度值，\r\n     * 该值与此临界值相比较，如果大于临界值，则进行自动翻页。\r\n     */\r\n    @serializable\r\n    @tooltip('i18n:pageview.autoPageTurningThreshold')\r\n    public autoPageTurningThreshold = 100;\r\n\r\n    /**\r\n     * @en\r\n     * The vertical scrollbar reference.\r\n     * @zh\r\n     * 垂直滚动的 ScrollBar。\r\n     */\r\n    @type(ScrollBar)\r\n    @override\r\n    @visible(false)\r\n    get verticalScrollBar (): ScrollBar | null {\r\n        return super.verticalScrollBar;\r\n    }\r\n\r\n    set verticalScrollBar (value) {\r\n        super.verticalScrollBar = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The horizontal scrollbar reference.\r\n     * @zh\r\n     * 水平滚动的 ScrollBar。\r\n     */\r\n    @type(ScrollBar)\r\n    @override\r\n    @visible(false)\r\n    get horizontalScrollBar (): ScrollBar | null {\r\n        return super.horizontalScrollBar;\r\n    }\r\n\r\n    set horizontalScrollBar (value) {\r\n        super.horizontalScrollBar = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Enable horizontal scroll.\r\n     * @zh\r\n     * 是否开启水平滚动。\r\n     */\r\n    @override\r\n    @serializable\r\n    @visible(false)\r\n    public horizontal = true;\r\n\r\n    /**\r\n     * @en\r\n     * Enable vertical scroll.\r\n     * @zh\r\n     * 是否开启垂直滚动。\r\n     */\r\n    @override\r\n    @serializable\r\n    @visible(false)\r\n    public vertical = true;\r\n\r\n    /**\r\n     * @en\r\n     * If cancelInnerEvents is set to true, the scroll behavior will cancel touch events on inner content nodes\r\n     * It's set to true by default.\r\n     * @zh\r\n     * 如果这个属性被设置为 true，那么滚动行为会取消子节点上注册的触摸事件，默认被设置为 true。<br/>\r\n     * 注意，子节点上的 touchstart 事件仍然会触发，触点移动距离非常短的情况下 touchmove 和 touchend 也不会受影响。\r\n     */\r\n    @override\r\n    @serializable\r\n    @visible(false)\r\n    public cancelInnerEvents = true;\r\n\r\n    /**\r\n     * @en\r\n     * ScrollView events callback.\r\n     * @zh\r\n     * 滚动视图的事件回调函数。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @override\r\n    @visible(false)\r\n    public scrollEvents: ComponentEventHandler[] = [];\r\n\r\n    /**\r\n     * @en The time required to turn over a page, unit: second.\r\n     * @zh 每个页面翻页时所需时间，单位：秒。\r\n     */\r\n    @serializable\r\n    @editable\r\n    @tooltip('i18n:pageview.pageTurningSpeed')\r\n    public pageTurningSpeed = 0.3;\r\n\r\n    /**\r\n     * @en PageView events callback.\r\n     * @zh 滚动视图的事件回调函数。\r\n     */\r\n    @type([ComponentEventHandler])\r\n    @serializable\r\n    @tooltip('i18n:pageview.pageEvents')\r\n    public pageEvents: ComponentEventHandler[] = [];\r\n\r\n    @serializable\r\n    protected _sizeMode = SizeMode.Unified;\r\n    @serializable\r\n    protected _direction = PageViewDirection.HORIZONTAL;\r\n    @serializable\r\n    protected _scrollThreshold = 0.5;\r\n    @serializable\r\n    protected _pageTurningEventTiming = 0.1;\r\n    @serializable\r\n    protected _indicator: PageViewIndicator | null = null;\r\n\r\n    protected _curPageIdx = 0;\r\n    protected _lastPageIdx = 0;\r\n    protected _pages: Node[] = [];\r\n    protected _initContentPos = v3();\r\n    protected _scrollCenterOffsetX: number[] = []; // 每一个页面居中时需要的偏移量（X）\r\n    protected _scrollCenterOffsetY: number[] = []; // 每一个页面居中时需要的偏移量（Y）\r\n    protected _touchBeganPosition = v2();\r\n    protected _touchEndPosition = v2();\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public onEnable (): void {\r\n        super.onEnable();\r\n        this.node.on(NodeEventType.SIZE_CHANGED, this._updateAllPagesSize, this);\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this.node.on(PageView.EventType.SCROLL_ENG_WITH_THRESHOLD, this._dispatchPageTurningEvent, this);\r\n        }\r\n    }\r\n\r\n    public onDisable (): void {\r\n        super.onDisable();\r\n        this.node.off(NodeEventType.SIZE_CHANGED, this._updateAllPagesSize, this);\r\n        if (!EDITOR_NOT_IN_PREVIEW) {\r\n            this.node.off(PageView.EventType.SCROLL_ENG_WITH_THRESHOLD, this._dispatchPageTurningEvent, this);\r\n        }\r\n    }\r\n\r\n    public onLoad (): void {\r\n        this._initPages();\r\n        if (this.indicator) {\r\n            this.indicator.setPageView(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns current page index.\r\n     *\r\n     * @zh\r\n     * 返回当前页面索引。\r\n     *\r\n     * @returns @en Current page index of this page view. @zh 当前页面索引。\r\n     */\r\n    public getCurrentPageIndex (): number {\r\n        return this._curPageIdx;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Set current page index.\r\n     *\r\n     * @zh\r\n     * 设置当前页面索引。\r\n     * @param index @en The page index to scroll to. @zh 需要滚动到的页面索引。\r\n     */\r\n    public setCurrentPageIndex (index: number): void {\r\n        this.scrollToPage(index, 1);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Returns all pages of pageview.\r\n     *\r\n     * @zh\r\n     * 返回视图中的所有页面。\r\n     *\r\n     * @returns @en return all pages of this page view. @zh 返回当前视图所有页面。\r\n     */\r\n    public getPages (): Node[] {\r\n        return this._pages;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * At the end of the current page view to insert a new view.\r\n     *\r\n     * @zh\r\n     * 在当前页面视图的尾部插入一个新视图。\r\n     *\r\n     * @param page @en New page to add to this page view. @zh 新加入的视图。\r\n     */\r\n    public addPage (page: Node): void {\r\n        if (!page || this._pages.indexOf(page) !== -1 || !this.content) {\r\n            return;\r\n        }\r\n        if (!page._getUITransformComp()) {\r\n            logID(4301);\r\n            return;\r\n        }\r\n        this.content.addChild(page);\r\n        this._pages.push(page);\r\n        this._updatePageView();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Inserts a page in the specified location.\r\n     *\r\n     * @zh\r\n     * 将页面插入指定位置中。\r\n     *\r\n     * @param page @en New page to insert to this page view. @zh 新插入的视图。\r\n     * @param index @en The index of new page to be inserted. @zh 新插入视图的索引。\r\n     */\r\n    public insertPage (page: Node, index: number): void {\r\n        if (index < 0 || !page || this._pages.indexOf(page) !== -1 || !this.content) {\r\n            return;\r\n        }\r\n        const pageCount = this._pages.length;\r\n        if (index >= pageCount) {\r\n            this.addPage(page);\r\n        } else {\r\n            if (!page._getUITransformComp()) {\r\n                logID(4301);\r\n                return;\r\n            }\r\n            this._pages.splice(index, 0, page);\r\n            this.content.insertChild(page, index);\r\n            this._updatePageView();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes a page from PageView.\r\n     *\r\n     * @zh\r\n     * 移除指定页面。\r\n     *\r\n     * @param page @en The page to be removed. @zh 将被移除的页面。\r\n     */\r\n    public removePage (page: Node): void {\r\n        if (!page || !this.content) { return; }\r\n        const index = this._pages.indexOf(page);\r\n        if (index === -1) {\r\n            warnID(4300, page.name);\r\n            return;\r\n        }\r\n        this.removePageAtIndex(index);\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes a page at index of PageView.\r\n     *\r\n     * @zh\r\n     * 移除指定下标的页面。\r\n     *\r\n     * @param index @en The index of the page to be removed. @zh 将被移除界面的页面下标。\r\n     */\r\n    public removePageAtIndex (index: number): void {\r\n        const pageList = this._pages;\r\n        if (index < 0 || index >= pageList.length) { return; }\r\n        const page = pageList[index];\r\n        if (!page || !this.content) { return; }\r\n        this.content.removeChild(page);\r\n        pageList.splice(index, 1);\r\n        this._updatePageView();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Removes all pages from PageView.\r\n     *\r\n     * @zh\r\n     * 移除所有页面。\r\n     */\r\n    public removeAllPages (): void {\r\n        if (!this.content) { return; }\r\n        const locPages = this._pages;\r\n        for (let i = 0, len = locPages.length; i < len; i++) {\r\n            this.content.removeChild(locPages[i]);\r\n        }\r\n        this._pages.length = 0;\r\n        this._updatePageView();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Scroll PageView to index.\r\n     *\r\n     * @zh\r\n     * 滚动到指定页面\r\n     *\r\n     * @param idx @en The index of page to be scroll to. @zh 希望滚动到的页面下标。\r\n     * @param timeInSecond @en How long time to scroll to the page, in seconds. @zh 滚动到指定页面所需时间，单位：秒。\r\n     */\r\n    public scrollToPage (idx: number, timeInSecond = 0.3): void {\r\n        if (idx < 0 || idx >= this._pages.length) {\r\n            return;\r\n        }\r\n\r\n        this._curPageIdx = idx;\r\n        this.scrollToOffset(this._moveOffsetValue(idx), timeInSecond, true);\r\n        if (this.indicator) {\r\n            this.indicator._changedState();\r\n        }\r\n    }\r\n\r\n    // override the method of ScrollView\r\n    public getScrollEndedEventTiming (): number {\r\n        return this.pageTurningEventTiming;\r\n    }\r\n\r\n    // 刷新页面视图\r\n    protected _updatePageView (): void {\r\n        // 当页面数组变化时修改 content 大小\r\n        if (!this.content) {\r\n            return;\r\n        }\r\n        const layout = this.content.getComponent(Layout);\r\n        if (layout && layout.enabled) {\r\n            layout.updateLayout();\r\n        }\r\n\r\n        const pageCount = this._pages.length;\r\n        if (this._curPageIdx >= pageCount) {\r\n            this._curPageIdx = pageCount === 0 ? 0 : pageCount - 1;\r\n            this._lastPageIdx = this._curPageIdx;\r\n        }\r\n        // 进行排序\r\n        const contentPos = this._initContentPos;\r\n        for (let i = 0; i < pageCount; ++i) {\r\n            const page = this._pages[i];\r\n            // page.setSiblingIndex(i);\r\n            const pos = page.position;\r\n            if (this.direction === PageViewDirection.HORIZONTAL) {\r\n                this._scrollCenterOffsetX[i] = Math.abs(contentPos.x + pos.x);\r\n            } else {\r\n                this._scrollCenterOffsetY[i] = Math.abs(contentPos.y + pos.y);\r\n            }\r\n        }\r\n\r\n        // 刷新 indicator 信息与状态\r\n        if (this.indicator) {\r\n            this.indicator._refresh();\r\n        }\r\n    }\r\n\r\n    // 刷新所有页面的大小\r\n    protected _updateAllPagesSize (): void {\r\n        const viewTrans = this.view;\r\n        if (!this.content || !viewTrans) {\r\n            return;\r\n        }\r\n\r\n        if (this._sizeMode !== SizeMode.Unified) {\r\n            return;\r\n        }\r\n        const locPages = EDITOR_NOT_IN_PREVIEW ? this.content.children : this._pages;\r\n        const selfSize = viewTrans.contentSize;\r\n        for (let i = 0, len = locPages.length; i < len; i++) {\r\n            locPages[i]._getUITransformComp()!.setContentSize(selfSize);\r\n        }\r\n    }\r\n\r\n    protected _handleReleaseLogic (): void {\r\n        this._autoScrollToPage();\r\n        if (this._scrolling) {\r\n            this._scrolling = false;\r\n            if (!this._autoScrolling) {\r\n                this._dispatchEvent(PageView.EventType.SCROLL_ENDED);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _onTouchBegan (event: EventTouch, captureListeners: Node[]): void {\r\n        event.touch!.getUILocation(_tempVec2);\r\n        Vec2.set(this._touchBeganPosition, _tempVec2.x, _tempVec2.y);\r\n        super._onTouchBegan(event, captureListeners);\r\n    }\r\n\r\n    protected _onTouchMoved (event: EventTouch, captureListeners: Node[]): void {\r\n        super._onTouchMoved(event, captureListeners);\r\n    }\r\n\r\n    protected _onTouchEnded (event: EventTouch, captureListeners: Node[]): void {\r\n        event.touch!.getUILocation(_tempVec2);\r\n        Vec2.set(this._touchEndPosition, _tempVec2.x, _tempVec2.y);\r\n        super._onTouchEnded(event, captureListeners);\r\n    }\r\n\r\n    protected _onTouchCancelled (event: EventTouch, captureListeners: Node[]): void {\r\n        event.touch!.getUILocation(_tempVec2);\r\n        Vec2.set(this._touchEndPosition, _tempVec2.x, _tempVec2.y);\r\n        super._onTouchCancelled(event, captureListeners);\r\n    }\r\n\r\n    protected _onMouseWheel (): void { }\r\n\r\n    protected _syncScrollDirection (): void {\r\n        this.horizontal = this.direction === PageViewDirection.HORIZONTAL;\r\n        this.vertical = this.direction === PageViewDirection.VERTICAL;\r\n    }\r\n\r\n    protected _syncSizeMode (): void {\r\n        const viewTrans = this.view;\r\n        if (!this.content || !viewTrans) { return; }\r\n        const layout = this.content.getComponent(Layout);\r\n        if (layout) {\r\n            if (this._sizeMode === SizeMode.Free && this._pages.length > 0) {\r\n                const firstPageTrans = this._pages[0]._getUITransformComp()!;\r\n                const lastPageTrans = this._pages[this._pages.length - 1]._getUITransformComp()!;\r\n                if (this.direction === PageViewDirection.HORIZONTAL) {\r\n                    layout.paddingLeft = (viewTrans.width - firstPageTrans.width) / 2;\r\n                    layout.paddingRight = (viewTrans.width - lastPageTrans.width) / 2;\r\n                } else if (this.direction === PageViewDirection.VERTICAL) {\r\n                    layout.paddingTop = (viewTrans.height - firstPageTrans.height) / 2;\r\n                    layout.paddingBottom = (viewTrans.height - lastPageTrans.height) / 2;\r\n                }\r\n            }\r\n            layout.updateLayout();\r\n        }\r\n    }\r\n\r\n    // 初始化页面\r\n    protected _initPages (): void {\r\n        if (!this.content) { return; }\r\n        this._initContentPos = this.content.position as Vec3;\r\n        const children = this.content.children;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            const page = children[i];\r\n            if (this._pages.indexOf(page) >= 0) { continue; }\r\n            this._pages.push(page);\r\n        }\r\n        this._syncScrollDirection();\r\n        this._syncSizeMode();\r\n        this._updatePageView();\r\n    }\r\n\r\n    protected _dispatchPageTurningEvent (): void {\r\n        if (this._lastPageIdx === this._curPageIdx) { return; }\r\n        this._lastPageIdx = this._curPageIdx;\r\n        ComponentEventHandler.emitEvents(this.pageEvents, this, PageViewEventType.PAGE_TURNING);\r\n        this.node.emit(PageViewEventType.PAGE_TURNING, this);\r\n    }\r\n\r\n    // 快速滑动\r\n    protected _isQuicklyScrollable (touchMoveVelocity: Vec3): boolean {\r\n        if (this.direction === PageViewDirection.HORIZONTAL) {\r\n            if (Math.abs(touchMoveVelocity.x) > this.autoPageTurningThreshold) {\r\n                return true;\r\n            }\r\n        } else if (this.direction === PageViewDirection.VERTICAL) {\r\n            if (Math.abs(touchMoveVelocity.y) > this.autoPageTurningThreshold) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // 通过 idx 获取偏移值数值\r\n    protected _moveOffsetValue (idx: number): Vec2 {\r\n        const offset = new Vec2();\r\n        if (this._sizeMode === SizeMode.Free) {\r\n            if (this.direction === PageViewDirection.HORIZONTAL) {\r\n                offset.x = this._scrollCenterOffsetX[idx];\r\n            } else if (this.direction === PageViewDirection.VERTICAL) {\r\n                offset.y = this._scrollCenterOffsetY[idx];\r\n            }\r\n        } else {\r\n            const viewTrans = this.view;\r\n            if (!viewTrans) {\r\n                return offset;\r\n            }\r\n            if (this.direction === PageViewDirection.HORIZONTAL) {\r\n                offset.x = idx * viewTrans.width;\r\n            } else if (this.direction === PageViewDirection.VERTICAL) {\r\n                offset.y = idx * viewTrans.height;\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    protected _getDragDirection (moveOffset: Vec2): number {\r\n        if (this._direction === PageViewDirection.HORIZONTAL) {\r\n            if (moveOffset.x === 0) {\r\n                return 0;\r\n            }\r\n\r\n            return (moveOffset.x > 0 ? 1 : -1);\r\n        } else {\r\n            // 由于滚动 Y 轴的原点在在右上角所以应该是小于 0\r\n            if (moveOffset.y === 0) {\r\n                return 0;\r\n            }\r\n\r\n            return (moveOffset.y < 0 ? 1 : -1);\r\n        }\r\n    }\r\n\r\n    // 是否超过自动滚动临界值\r\n    protected _isScrollable (offset: Vec2, index: number, nextIndex: number): boolean {\r\n        if (this._sizeMode === SizeMode.Free) {\r\n            let curPageCenter = 0;\r\n            let nextPageCenter = 0;\r\n            if (this.direction === PageViewDirection.HORIZONTAL) {\r\n                curPageCenter = this._scrollCenterOffsetX[index];\r\n                nextPageCenter = this._scrollCenterOffsetX[nextIndex];\r\n                return Math.abs(offset.x) >= Math.abs(curPageCenter - nextPageCenter) * this.scrollThreshold;\r\n            } else if (this.direction === PageViewDirection.VERTICAL) {\r\n                curPageCenter = this._scrollCenterOffsetY[index];\r\n                nextPageCenter = this._scrollCenterOffsetY[nextIndex];\r\n                return Math.abs(offset.y) >= Math.abs(curPageCenter - nextPageCenter) * this.scrollThreshold;\r\n            }\r\n        } else {\r\n            const viewTrans = this.view;\r\n            if (!viewTrans) {\r\n                return false;\r\n            }\r\n            if (this.direction === PageViewDirection.HORIZONTAL) {\r\n                return Math.abs(offset.x) >= viewTrans.width * this.scrollThreshold;\r\n            } else if (this.direction === PageViewDirection.VERTICAL) {\r\n                return Math.abs(offset.y) >= viewTrans.height * this.scrollThreshold;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected _autoScrollToPage (): void {\r\n        const bounceBackStarted = this._startBounceBackIfNeeded();\r\n        if (bounceBackStarted) {\r\n            const bounceBackAmount = this._getHowMuchOutOfBoundary();\r\n            this._clampDelta(bounceBackAmount);\r\n            if (bounceBackAmount.x > 0 || bounceBackAmount.y < 0) {\r\n                this._curPageIdx = this._pages.length === 0 ? 0 : this._pages.length - 1;\r\n            }\r\n            if (bounceBackAmount.x < 0 || bounceBackAmount.y > 0) {\r\n                this._curPageIdx = 0;\r\n            }\r\n\r\n            if (this.indicator) {\r\n                this.indicator._changedState();\r\n            }\r\n        } else {\r\n            const moveOffset = new Vec2();\r\n            Vec2.subtract(moveOffset, this._touchBeganPosition, this._touchEndPosition);\r\n            const index = this._curPageIdx;\r\n            const nextIndex = index + this._getDragDirection(moveOffset);\r\n            const timeInSecond = this.pageTurningSpeed * Math.abs(index - nextIndex);\r\n            if (nextIndex < this._pages.length) {\r\n                if (this._isScrollable(moveOffset, index, nextIndex)) {\r\n                    this.scrollToPage(nextIndex, timeInSecond);\r\n                    return;\r\n                } else {\r\n                    const touchMoveVelocity = this._calculateTouchMoveVelocity();\r\n                    if (this._isQuicklyScrollable(touchMoveVelocity)) {\r\n                        this.scrollToPage(nextIndex, timeInSecond);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            this.scrollToPage(index, timeInSecond);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @en\r\n * Note: This event is emitted from the node to which the component belongs.\r\n * @zh\r\n * 注意：此事件是从该组件所属的 Node 上面派发出来的，需要用 node.on 来监听。\r\n * @event page-turning\r\n * @param event\r\n * @param pageView - The PageView component.\r\n */\r\n\r\nlegacyCC.PageView = PageView;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { EDITOR, DEV } from 'internal:constants';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { director, DirectorEvent } from '../game/director';\r\nimport { Vec2, Vec3, visibleRect, js, cclegacy, approx, EPSILON } from '../core';\r\nimport { View } from './view';\r\nimport { Scene } from '../scene-graph';\r\nimport { Node } from '../scene-graph/node';\r\nimport { AlignFlags, AlignMode, computeInverseTransForTarget, getReadonlyNodeSize, Widget } from './widget';\r\nimport { UITransform } from '../2d/framework';\r\n\r\nconst _tempPos = new Vec3();\r\nconst _defaultAnchor = new Vec2();\r\n\r\nconst tInverseTranslate = new Vec2();\r\nconst tInverseScale = new Vec2(1, 1);\r\nconst _tempVec2_1 = new Vec2();\r\nconst _tempVec2_2 = new Vec2();\r\n\r\n// align to borders by adjusting node's position and size (ignore rotation)\r\nfunction align (node: Node, widget: Widget): void {\r\n    // Hack: this flag use to ONCE mode\r\n    if (widget._hadAlignOnce) return;\r\n    if ((!EDITOR) && widget.alignMode === AlignMode.ONCE) {\r\n        widget._hadAlignOnce = true;\r\n    }\r\n    const hasTarget = widget.target;\r\n    let target: Node | Scene;\r\n    const inverseTranslate = tInverseTranslate;\r\n    const inverseScale = tInverseScale;\r\n    if (hasTarget) {\r\n        target = hasTarget;\r\n        // inverseTranslate = tInverseTranslate;\r\n        // inverseScale = tInverseScale;\r\n        computeInverseTransForTarget(node, target, inverseTranslate, inverseScale);\r\n    } else {\r\n        target = node.parent!;\r\n    }\r\n    const targetSize = getReadonlyNodeSize(target);\r\n    const useGlobal = target instanceof Scene || !target.getComponent(UITransform);\r\n    const targetAnchor = useGlobal ? _defaultAnchor : target.getComponent(UITransform)!.anchorPoint;\r\n\r\n    const isRoot = useGlobal;\r\n    node.getPosition(_tempPos);\r\n    const uiTrans = node._getUITransformComp()!;\r\n    let x = _tempPos.x;\r\n    let y = _tempPos.y;\r\n    const anchor = uiTrans.anchorPoint;\r\n    const scale = node.scale;    // It is a reference of Node's scale, don't change its value in this function.\r\n\r\n    if (widget.alignFlags & AlignFlags.HORIZONTAL) {\r\n        let localLeft = 0;\r\n        let localRight = 0;\r\n        const targetWidth = targetSize.width;\r\n        if (isRoot) {\r\n            localLeft = visibleRect.left.x;\r\n            localRight = visibleRect.right.x;\r\n        } else {\r\n            localLeft = -targetAnchor.x * targetWidth;\r\n            localRight = localLeft + targetWidth;\r\n        }\r\n\r\n        // adjust borders according to offsets\r\n        localLeft += widget.isAbsoluteLeft ? widget.left : widget.left * targetWidth;\r\n        localRight -= widget.isAbsoluteRight ? widget.right : widget.right * targetWidth;\r\n\r\n        if (hasTarget) {\r\n            localLeft += inverseTranslate.x;\r\n            localLeft *= inverseScale.x;\r\n            localRight += inverseTranslate.x;\r\n            localRight *= inverseScale.x;\r\n        }\r\n\r\n        let width = 0;\r\n        let anchorX = anchor.x;\r\n        let scaleX = scale.x;\r\n        if (scaleX < 0) {\r\n            anchorX = 1.0 - anchorX;\r\n            scaleX = -scaleX;\r\n        }\r\n        if (widget.isStretchWidth) {\r\n            width = localRight - localLeft;\r\n            if (scaleX !== 0) {\r\n                uiTrans.width = width / scaleX;\r\n            }\r\n            x = localLeft + anchorX * width;\r\n        } else {\r\n            width = uiTrans.width * scaleX;\r\n            if (widget.isAlignHorizontalCenter) {\r\n                let localHorizontalCenter = widget.isAbsoluteHorizontalCenter ? widget.horizontalCenter : widget.horizontalCenter * targetWidth;\r\n                let targetCenter = (0.5 - targetAnchor.x) * targetSize.width;\r\n                if (hasTarget) {\r\n                    localHorizontalCenter *= inverseScale.x;\r\n                    targetCenter += inverseTranslate.x;\r\n                    targetCenter *= inverseScale.x;\r\n                }\r\n                x = targetCenter + (anchorX - 0.5) * width + localHorizontalCenter;\r\n            } else if (widget.isAlignLeft) {\r\n                x = localLeft + anchorX * width;\r\n            } else {\r\n                x = localRight + (anchorX - 1) * width;\r\n            }\r\n            if (!approx(scaleX, 0, EPSILON)) {\r\n                width /= scaleX;\r\n            } else {\r\n                width = uiTrans.width;\r\n            }\r\n        }\r\n\r\n        widget._lastSize.width = width;\r\n    }\r\n\r\n    if (widget.alignFlags & AlignFlags.VERTICAL) {\r\n        let localTop = 0;\r\n        let localBottom = 0;\r\n        const targetHeight = targetSize.height;\r\n        if (isRoot) {\r\n            localBottom = visibleRect.bottom.y;\r\n            localTop = visibleRect.top.y;\r\n        } else {\r\n            localBottom = -targetAnchor.y * targetHeight;\r\n            localTop = localBottom + targetHeight;\r\n        }\r\n\r\n        // adjust borders according to offsets\r\n        localBottom += widget.isAbsoluteBottom ? widget.bottom : widget.bottom * targetHeight;\r\n        localTop -= widget.isAbsoluteTop ? widget.top : widget.top * targetHeight;\r\n\r\n        if (hasTarget) {\r\n            // transform\r\n            localBottom += inverseTranslate.y;\r\n            localBottom *= inverseScale.y;\r\n            localTop += inverseTranslate.y;\r\n            localTop *= inverseScale.y;\r\n        }\r\n\r\n        let height = 0;\r\n        let anchorY = anchor.y;\r\n        let scaleY = scale.y;\r\n        if (scaleY < 0) {\r\n            anchorY = 1.0 - anchorY;\r\n            scaleY = -scaleY;\r\n        }\r\n        if (widget.isStretchHeight) {\r\n            height = localTop - localBottom;\r\n            if (scaleY !== 0) {\r\n                uiTrans.height = height / scaleY;\r\n            }\r\n            y = localBottom + anchorY * height;\r\n        } else {\r\n            height = uiTrans.height * scaleY;\r\n            if (widget.isAlignVerticalCenter) {\r\n                let localVerticalCenter = widget.isAbsoluteVerticalCenter ? widget.verticalCenter : widget.verticalCenter * targetHeight;\r\n                let targetMiddle = (0.5 - targetAnchor.y) * targetSize.height;\r\n                if (hasTarget) {\r\n                    localVerticalCenter *= inverseScale.y;\r\n                    targetMiddle += inverseTranslate.y;\r\n                    targetMiddle *= inverseScale.y;\r\n                }\r\n                y = targetMiddle + (anchorY - 0.5) * height + localVerticalCenter;\r\n            } else if (widget.isAlignBottom) {\r\n                y = localBottom + anchorY * height;\r\n            } else {\r\n                y = localTop + (anchorY - 1) * height;\r\n            }\r\n            if (!approx(scaleY, 0, EPSILON)) {\r\n                height /= scaleY;\r\n            } else {\r\n                height = uiTrans.height;\r\n            }\r\n        }\r\n\r\n        widget._lastSize.height = height;\r\n    }\r\n\r\n    node.setPosition(x, y, _tempPos.z);\r\n    Vec3.set(widget._lastPos, x, y, _tempPos.z);\r\n}\r\n\r\n// TODO: type is hack, Change to the type actually used (Node or BaseNode) when BaseNode complete\r\nfunction visitNode (node: any): void {\r\n    const widget = node.getComponent(Widget);\r\n    if (widget && widget.enabled) {\r\n        if (DEV) {\r\n            widget._validateTargetInDEV();\r\n        }\r\n        // Notice: remove align to after visitNode, AlignMode.ONCE will use widget._hadAlignOnce flag\r\n        // align(node, widget);\r\n        // if ((!EDITOR || widgetManager.animationState!.animatedSinceLastFrame) && widget.alignMode === AlignMode.ONCE) {\r\n        //     widget.enabled = false;\r\n        // } else {\r\n        if (!cclegacy.isValid(node, true)) {\r\n            return;\r\n        }\r\n        activeWidgets.push(widget);\r\n    }\r\n    const children = node.children;\r\n    for (const child of children) {\r\n        if (child.active) {\r\n            visitNode(child);\r\n        }\r\n    }\r\n}\r\n\r\n// This function will be called on AFTER_SCENE_LAUNCH and AFTER_UPDATE\r\nfunction refreshScene (): void {\r\n    const scene = director.getScene();\r\n    if (scene) {\r\n        widgetManager.isAligning = true;\r\n        if (widgetManager._nodesOrderDirty) {\r\n            activeWidgets.length = 0;\r\n            visitNode(scene);\r\n            widgetManager._nodesOrderDirty = false;\r\n        }\r\n        const i = 0;\r\n        let widget: Widget | null = null;\r\n        const iterator = widgetManager._activeWidgetsIterator;\r\n        for (iterator.i = 0; iterator.i < activeWidgets.length; ++iterator.i) {\r\n            widget = activeWidgets[iterator.i];\r\n            if (widget._dirty) {\r\n                align(widget.node, widget);\r\n                widget._dirty = false;\r\n            }\r\n        }\r\n        widgetManager.isAligning = false;\r\n    }\r\n\r\n    // check animation editor\r\n    if (EDITOR) {\r\n        widgetManager.animationState!.animatedSinceLastFrame = false;\r\n    }\r\n}\r\n\r\nconst activeWidgets: Widget[] = [];\r\n\r\n// updateAlignment from scene to node recursively\r\nfunction updateAlignment (node: Node): void {\r\n    const parent = node.parent;\r\n    if (parent && Node.isNode(parent)) {\r\n        updateAlignment(parent);\r\n    }\r\n\r\n    // node._widget will be null when widget is disabled\r\n    const widget = node.getComponent(Widget);\r\n    if (widget && parent) {\r\n        align(node, widget);\r\n    }\r\n}\r\n\r\n/**\r\n * @en widget Manager， use to align widget\r\n * @zh widget 管理器，用于对齐操作\r\n * @deprecated Since v3.7.0, this is an engine private interface that will be removed in the future.\r\n */\r\nexport const widgetManager = cclegacy._widgetManager = {\r\n    isAligning: false,\r\n    _nodesOrderDirty: false,\r\n    _activeWidgetsIterator: new js.array.MutableForwardIterator(activeWidgets),\r\n    // hack\r\n    animationState: EDITOR ? {\r\n        previewing: false,\r\n        time: 0,\r\n        animatedSinceLastFrame: false,\r\n    } : null,\r\n\r\n    init (): void {\r\n        director.on(DirectorEvent.AFTER_SCENE_LAUNCH, refreshScene);\r\n        director.on(DirectorEvent.AFTER_UPDATE, refreshScene);\r\n\r\n        View.instance.on('design-resolution-changed', this.onResized, this);\r\n        if (!EDITOR) {\r\n            const thisOnResized = this.onResized.bind(this);\r\n            View.instance.on('canvas-resize', thisOnResized);\r\n            screenAdapter.on('window-resize', thisOnResized);\r\n        }\r\n    },\r\n    add (widget: Widget): void {\r\n        this._nodesOrderDirty = true;\r\n    },\r\n    remove (widget: Widget): void {\r\n        this._activeWidgetsIterator.remove(widget);\r\n    },\r\n    onResized (): void {\r\n        const scene = director.getScene();\r\n        if (scene) {\r\n            this.refreshWidgetOnResized(scene);\r\n        }\r\n    },\r\n    refreshWidgetOnResized (node: Node): void {\r\n        const widget = Node.isNode(node) && node.getComponent(Widget);\r\n        if (widget && widget.enabled && (\r\n            widget.alignMode === AlignMode.ON_WINDOW_RESIZE || widget.alignMode === AlignMode.ALWAYS\r\n        )) {\r\n            widget.setDirty();\r\n        }\r\n\r\n        const children = node.children;\r\n        for (const child of children) {\r\n            this.refreshWidgetOnResized(child);\r\n        }\r\n    },\r\n    updateOffsetsToStayPut (widget: Widget, e?: AlignFlags): void {\r\n        function i (t: number, c: number): number {\r\n            return Math.abs(t - c) > 1e-10 ? c : t;\r\n        }\r\n        const widgetNode = widget.node;\r\n        let widgetParent = widgetNode.parent;\r\n        if (widgetParent) {\r\n            const zero = _tempVec2_1;\r\n            zero.set(0, 0);\r\n            const one = _tempVec2_2;\r\n            one.set(1, 1);\r\n            if (widget.target) {\r\n                widgetParent = widget.target;\r\n                computeInverseTransForTarget(widgetNode, widgetParent, zero, one);\r\n            }\r\n\r\n            if (!e) {\r\n                return;\r\n            }\r\n\r\n            const parentTrans = widgetParent._uiProps && widgetParent._getUITransformComp();\r\n            const parentAP = parentTrans ? parentTrans.anchorPoint : _defaultAnchor;\r\n            const trans = widgetNode._getUITransformComp()!;\r\n            const matchSize = getReadonlyNodeSize(widgetParent);\r\n            const myAP = trans.anchorPoint;\r\n            const pos = widgetNode.position;\r\n            const alignFlags = AlignFlags;\r\n            const widgetNodeScale = widgetNode.scale;\r\n\r\n            let temp = 0;\r\n\r\n            if (e & alignFlags.LEFT) {\r\n                let l = -parentAP.x * matchSize.width;\r\n                l += zero.x;\r\n                l *= one.x;\r\n                temp = pos.x - myAP.x * trans.width * Math.abs(widgetNodeScale.x) - l;\r\n                if (!widget.isAbsoluteLeft) {\r\n                    temp /= matchSize.width;\r\n                }\r\n\r\n                temp /= one.x;\r\n                widget.left = i(widget.left, temp);\r\n            }\r\n\r\n            if (e & alignFlags.RIGHT) {\r\n                let r = (1 - parentAP.x) * matchSize.width;\r\n                r += zero.x;\r\n                temp = (r *= one.x) - (pos.x + (1 - myAP.x) * trans.width * Math.abs(widgetNodeScale.x));\r\n                if (!widget.isAbsoluteRight) {\r\n                    temp /= matchSize.width;\r\n                }\r\n\r\n                temp /= one.x;\r\n                widget.right = i(widget.right, temp);\r\n            }\r\n\r\n            if (e & alignFlags.TOP) {\r\n                let t = (1 - parentAP.y) * matchSize.height;\r\n                t += zero.y;\r\n                temp = (t *= one.y) - (pos.y + (1 - myAP.y) * trans.height * Math.abs(widgetNodeScale.y));\r\n                if (!widget.isAbsoluteTop) {\r\n                    temp /= matchSize.height;\r\n                }\r\n\r\n                temp /= one.y;\r\n                widget.top = i(widget.top, temp);\r\n            }\r\n\r\n            if (e & alignFlags.BOT) {\r\n                let b = -parentAP.y * matchSize.height;\r\n                b += zero.y;\r\n                b *= one.y;\r\n                temp = pos.y - myAP.y * trans.height * Math.abs(widgetNodeScale.y) - b;\r\n                if (!widget.isAbsoluteBottom) {\r\n                    temp /= matchSize.height;\r\n                }\r\n\r\n                temp /= one.y;\r\n                widget.bottom = i(widget.bottom, temp);\r\n            }\r\n        }\r\n    },\r\n    updateAlignment,\r\n    AlignMode,\r\n    AlignFlags,\r\n};\r\n\r\ndirector.on(DirectorEvent.INIT, () => {\r\n    widgetManager.init();\r\n});\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, executionOrder, menu, executeInEditMode, requireComponent, serializable, visible, tooltip } from 'cc.decorator';\r\nimport { EDITOR } from 'internal:constants';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { Component } from '../scene-graph/component';\r\nimport { UITransform } from '../2d/framework';\r\nimport { sys } from '../core/platform';\r\nimport { Widget } from './widget';\r\nimport { widgetManager } from './widget-manager';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { view } from './view';\r\n\r\n/**\r\n * @en\r\n * This component is used to adjust the layout of current node to respect the safe area of a notched mobile device such as the iPhone X.\r\n * It is typically used for the top node of the UI interaction area. For specific usage,\r\n * refer to the official [test-cases-3d/assets/cases/ui/20.safe-area/safe-area.scene](https://github.com/cocos-creator/test-cases-3d).\r\n *\r\n * The concept of safe area is to give you a fixed inner rectangle in which you can safely display content that will be drawn on screen.\r\n * You are strongly discouraged from providing controls outside of this area. But your screen background could embellish edges.\r\n *\r\n * This component internally uses the API `sys.getSafeAreaRect();` to obtain the safe area of the current iOS or Android device,\r\n * and implements the adaptation by using the Widget component and set anchor.\r\n *\r\n * @zh\r\n * 该组件会将所在节点的布局适配到 iPhone X 等异形屏手机的安全区域内，通常用于 UI 交互区域的顶层节点，\r\n * 具体用法可参考官方范例 [test-cases-3d/assets/cases/ui/20.safe-area/safe-area.scene](https://github.com/cocos-creator/test-cases-3d)。\r\n *\r\n * 该组件内部通过 API `sys.getSafeAreaRect();` 获取到当前 iOS 或 Android 设备的安全区域，并通过 Widget 组件实现适配。\r\n *\r\n */\r\n\r\n@ccclass('cc.SafeArea')\r\n@help('i18n:cc.SafeArea')\r\n@executionOrder(110)\r\n@executeInEditMode\r\n@menu('UI/SafeArea')\r\n@requireComponent(Widget)\r\nexport class SafeArea extends Component {\r\n    @visible(true)\r\n    @tooltip('i18n:safe_area.symmetric')\r\n    get symmetric (): boolean {\r\n        return this._symmetric;\r\n    }\r\n    set symmetric (value) {\r\n        this._symmetric = value;\r\n    }\r\n    @serializable\r\n    private _symmetric: boolean = true;\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public onEnable (): void {\r\n        this.updateArea();\r\n        // IDEA: need to delay the callback on Native platform ?\r\n        screenAdapter.on('window-resize', this.updateArea, this);\r\n        screenAdapter.on('orientation-change', this.updateArea, this);\r\n    }\r\n\r\n    public onDisable (): void {\r\n        screenAdapter.off('window-resize', this.updateArea, this);\r\n        screenAdapter.off('orientation-change', this.updateArea, this);\r\n    }\r\n\r\n    /**\r\n     * @en Adapt to safe area.\r\n     * @zh 立即适配安全区域。\r\n     * @method updateArea\r\n     * @example\r\n     * let safeArea = this.node.addComponent(cc.SafeArea);\r\n     * safeArea.updateArea();\r\n     */\r\n    public updateArea (): void {\r\n        // TODO Remove Widget dependencies in the future\r\n        const widget = this.node.getComponent(Widget) as Widget;\r\n        const uiTransComp = this.node.getComponent(UITransform) as UITransform;\r\n        if (!widget || !uiTransComp) {\r\n            return;\r\n        }\r\n\r\n        if (EDITOR) {\r\n            widget.top = widget.bottom = widget.left = widget.right = 0;\r\n            widget.isAlignTop = widget.isAlignBottom = widget.isAlignLeft = widget.isAlignRight = true;\r\n            return;\r\n        }\r\n        // IMPORTANT: need to update alignment to get the latest position\r\n        widget.updateAlignment();\r\n        const lastPos = this.node.position.clone();\r\n        const lastAnchorPoint = uiTransComp.anchorPoint.clone();\r\n        //\r\n        widget.isAlignTop = widget.isAlignBottom = widget.isAlignLeft = widget.isAlignRight = true;\r\n        const visibleSize = view.getVisibleSize();\r\n        const screenWidth = visibleSize.width;\r\n        const screenHeight = visibleSize.height;\r\n        const safeArea = sys.getSafeAreaRect(this._symmetric);\r\n        widget.top = screenHeight - safeArea.y - safeArea.height;\r\n        widget.bottom = safeArea.y;\r\n        widget.left = safeArea.x;\r\n        widget.right = screenWidth - safeArea.x - safeArea.width;\r\n        widget.updateAlignment();\r\n        // set anchor, keep the original position unchanged\r\n        const curPos = this.node.position.clone();\r\n        const anchorX = lastAnchorPoint.x - (curPos.x - lastPos.x) / uiTransComp.width;\r\n        const anchorY = lastAnchorPoint.y - (curPos.y - lastPos.y) / uiTransComp.height;\r\n        uiTransComp.setAnchorPoint(anchorX, anchorY);\r\n        // IMPORTANT: restore to lastPos even if widget is not ALWAYS\r\n        widgetManager.add(widget);\r\n    }\r\n}\r\n\r\nlegacyCC.SafeArea = SafeArea;\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, menu, executionOrder, tooltip, type, serializable } from 'cc.decorator';\r\nimport { Component } from '../scene-graph/component';\r\nimport { EventHandler } from '../scene-graph/component-event-handler';\r\nimport { Node } from '../scene-graph/node';\r\nimport { Camera } from '../misc/camera-component';\r\nimport { v3, Vec3 } from '../core/math';\r\n\r\n/**\r\n * @en The component that converts 3D node coordinates to UI node coordinates.\r\n * It mainly provides the converted world coordinates after mapping and the perspective ratio of the simulated perspective camera.\r\n * @zh 3D 节点坐标转换到 UI 节点坐标组件\r\n * 主要提供映射后的转换世界坐标以及模拟透视相机远近比。\r\n */\r\n@ccclass('cc.UICoordinateTracker')\r\n@help('i18n:cc.UICoordinateTracker')\r\n@menu('UI/UICoordinateTracker')\r\n@executionOrder(110)\r\nexport class UICoordinateTracker extends Component {\r\n    /**\r\n     * @en\r\n     * Target node.\r\n     *\r\n     * @zh\r\n     * 目标对象。\r\n     */\r\n    @type(Node)\r\n    @tooltip('i18n:UICoordinateTracker.target')\r\n    get target (): Node | null {\r\n        return this._target;\r\n    }\r\n\r\n    set target (value) {\r\n        if (this._target === value) {\r\n            return;\r\n        }\r\n\r\n        this._target = value;\r\n        this._checkCanMove();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The 3D camera representing the original coordinate system.\r\n     *\r\n     * @zh\r\n     * 照射相机。\r\n     */\r\n    @type(Camera)\r\n    @tooltip('i18n:UICoordinateTracker.camera')\r\n    get camera (): Camera | null {\r\n        return this._camera;\r\n    }\r\n\r\n    set camera (value) {\r\n        if (this._camera === value) {\r\n            return;\r\n        }\r\n\r\n        this._camera = value;\r\n        this._checkCanMove();\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Whether to scale the converted 2d node's size according to the distance between the camera and the 3d node.\r\n     *\r\n     * @zh\r\n     * 是否是缩放映射。\r\n     */\r\n    @tooltip('i18n:UICoordinateTracker.use_scale')\r\n    get useScale (): boolean {\r\n        return this._useScale;\r\n    }\r\n\r\n    set useScale (value) {\r\n        if (this._useScale === value) {\r\n            return;\r\n        }\r\n\r\n        this._useScale = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * The distance from the camera for displaying the 2d node in normal size.\r\n     *\r\n     * @zh\r\n     * 距相机多少距离为正常显示计算大小。\r\n     */\r\n    @tooltip('i18n:UICoordinateTracker.distance')\r\n    get distance (): number {\r\n        return this._distance;\r\n    }\r\n\r\n    set distance (value) {\r\n        if (this._distance === value) {\r\n            return;\r\n        }\r\n\r\n        this._distance = value;\r\n    }\r\n\r\n    /**\r\n     * @en\r\n     * Event callback after coordinates synchronization.\r\n     * The first parameter of the callback is the mapped local coordinate in UI camera.\r\n     * The second parameter is the distance scale of the 3d node from the 3d camera viewport.\r\n     *\r\n     * @zh\r\n     * 映射数据事件。回调的第一个参数是映射后的本地坐标，第二个是距相机距离比。\r\n     */\r\n    @type([EventHandler])\r\n    @serializable\r\n    @tooltip('i18n:UICoordinateTracker.sync_events')\r\n    public syncEvents: EventHandler[] = [];\r\n\r\n    @serializable\r\n    protected _target: Node | null = null;\r\n    @serializable\r\n    protected _camera: Camera | null = null;\r\n    @serializable\r\n    protected _useScale = true;\r\n    @serializable\r\n    protected _distance = 1;\r\n\r\n    protected _transformPos = v3();\r\n    protected _viewPos = v3();\r\n    protected _canMove = true;\r\n    protected _lastWPos = v3();\r\n    protected _lastCameraPos = v3();\r\n\r\n    constructor () {\r\n        super();\r\n    }\r\n\r\n    public onEnable (): void {\r\n        this._checkCanMove();\r\n    }\r\n\r\n    public update (): void {\r\n        const wPos = this.node.worldPosition;\r\n        const camera = this._camera;\r\n        if (!this._canMove || !camera || !camera.camera || (this._lastWPos.equals(wPos) && this._lastCameraPos.equals(camera.node.worldPosition))) {\r\n            return;\r\n        }\r\n\r\n        this._lastWPos.set(wPos);\r\n        this._lastCameraPos.set(camera.node.worldPosition);\r\n        // [HACK]\r\n        camera.camera.update();\r\n        camera.convertToUINode(wPos, this._target!, this._transformPos);\r\n        if (this._useScale) {\r\n            Vec3.transformMat4(this._viewPos, this.node.worldPosition, camera.camera.matView);\r\n        }\r\n\r\n        if (this.syncEvents.length > 0) {\r\n            const data = this._distance / Math.abs(this._viewPos.z);\r\n            EventHandler.emitEvents(this.syncEvents, this._transformPos, data);\r\n        }\r\n    }\r\n\r\n    protected _checkCanMove (): void {\r\n        this._canMove = !!(this._camera && this._target);\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2013-2016 Chukong Technologies Inc.\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, menu } from 'cc.decorator';\r\nimport { Component } from '../scene-graph/component';\r\nimport { Event } from '../input/types';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\n\r\nconst BlockEvents = [NodeEventType.TOUCH_START, NodeEventType.TOUCH_END, NodeEventType.TOUCH_MOVE,\r\n    NodeEventType.MOUSE_DOWN, NodeEventType.MOUSE_MOVE, NodeEventType.MOUSE_UP,\r\n    NodeEventType.MOUSE_ENTER, NodeEventType.MOUSE_LEAVE, NodeEventType.MOUSE_WHEEL];\r\n\r\nfunction stopPropagation (event: Event): void {\r\n    event.propagationStopped = true;\r\n}\r\n\r\n/**\r\n * @en\r\n * This component will block all input events (mouse and touch) within the size of the node,\r\n * preventing the input from penetrating into the underlying node, typically for the background of the top UI.<br>\r\n * This component does not have any API interface and can be added directly to the scene to take effect.\r\n * @zh\r\n * 该组件将拦截所属节点尺寸内的所有输入事件（鼠标和触摸），防止输入穿透到下层节点，一般用于上层 UI 的背景。<br>\r\n * 该组件没有任何 API 接口，直接添加到场景即可生效。\r\n */\r\n@ccclass('cc.BlockInputEvents')\r\n@help('i18n:cc.BlockInputEvents')\r\n@menu('Event/BlockInputEvents')\r\nexport class BlockInputEvents extends Component {\r\n    onEnable (): void {\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            // supply the 'this' parameter so that the callback could be added and removed correctly,\r\n            // even if the same component is added more than once to a Node.\r\n            this.node.on(BlockEvents[i], stopPropagation, this);\r\n        }\r\n    }\r\n\r\n    onDisable (): void {\r\n        for (let i = 0; i < BlockEvents.length; i++) {\r\n            this.node.off(BlockEvents[i], stopPropagation, this);\r\n        }\r\n    }\r\n}\r\n","/*\r\n Copyright (c) 2017-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n http://www.cocos.com\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { ccclass, help, menu, executionOrder, requireComponent, tooltip, serializable } from 'cc.decorator';\r\nimport { EDITOR, WECHAT, WECHAT_MINI_PROGRAM } from 'internal:constants';\r\nimport { minigame } from 'pal/minigame';\r\nimport { screenAdapter } from 'pal/screen-adapter';\r\nimport { Component } from '../scene-graph/component';\r\nimport { view } from './view';\r\nimport { Sprite } from '../2d/components/sprite';\r\nimport { Node } from '../scene-graph';\r\nimport { UITransform } from '../2d/framework/ui-transform';\r\nimport { SpriteFrame } from '../2d/assets';\r\nimport { ImageAsset } from '../asset/assets/image-asset';\r\nimport {  Size } from '../core/math';\r\n\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { NodeEventType } from '../scene-graph/node-event';\r\nimport { CCObjectFlags } from '../core';\r\nimport { Texture2D } from '../asset/assets';\r\n\r\n/**\r\n * @en SubContextView is a view component which controls open data context viewport in WeChat game platform.<br/>\r\n * The component's node size decide the viewport of the sub context content in main context,\r\n * the entire sub context texture will be scaled to the node's bounding box area.<br/>\r\n * This component provides multiple important features:<br/>\r\n * 1. Sub context could use its own resolution size and policy.<br/>\r\n * 2. Sub context could be minized to smallest size it needed.<br/>\r\n * 3. Resolution of sub context content could be increased.<br/>\r\n * 4. User touch input is transformed to the correct viewport.<br/>\r\n * 5. Texture update is handled by this component. User don't need to worry.<br/>\r\n * One important thing to be noted, whenever the node's bounding box change,\r\n * you need to manually reset the viewport of sub context using updateSubContextViewport.\r\n * @zh SubContextView 可以用来控制微信小游戏平台开放数据域在主域中的视窗的位置。<br/>\r\n * 这个组件的节点尺寸决定了开放数据域内容在主域中的尺寸，整个开放数据域会被缩放到节点的包围盒范围内。<br/>\r\n * 在这个组件的控制下，用户可以更自由得控制开放数据域：<br/>\r\n * 1. 子域中可以使用独立的设计分辨率和适配模式<br/>\r\n * 2. 子域区域尺寸可以缩小到只容纳内容即可<br/>\r\n * 3. 子域的分辨率也可以被放大，以便获得更清晰的显示效果<br/>\r\n * 4. 用户输入坐标会被自动转换到正确的子域视窗中<br/>\r\n * 5. 子域内容贴图的更新由组件负责，用户不需要处理<br/>\r\n * 唯一需要注意的是，当子域节点的包围盒发生改变时，开发者需要使用 `updateSubContextViewport` 来手动更新子域视窗。\r\n */\r\n@ccclass('cc.SubContextView')\r\n@help('i18n:cc.SubContextView')\r\n@executionOrder(110)\r\n@requireComponent(UITransform)\r\n@menu('Miscellaneous/SubContextView')\r\nexport class SubContextView extends Component {\r\n    /**\r\n     * @en Specify a reference value of canvas size for style editing in Open Data Context.\r\n     * The width and height setting of CSS style should not exceed this size, otherwise the rendered content will exceed the canvas.\r\n     * NOTE: This property is read-only at runtime. Please configure the design resolution in the Editor.\r\n     *\r\n     * @zh 为开放数据域的样式编辑指定一个画布尺寸的参考值，CSS 样式的宽高设置不应该超过这个尺寸，否则渲染的内容会超出画布。\r\n     * 注意：该属性在运行时是只读的，请在编辑器环境下配置好设计分辨率。\r\n     */\r\n    @tooltip('i18n:subContextView.design_size')\r\n    get designResolutionSize (): Size {\r\n        return this._designResolutionSize;\r\n    }\r\n    set designResolutionSize (value) {\r\n        if (!EDITOR || value.equals(this._designResolutionSize)) {\r\n            return;\r\n        }\r\n        this._designResolutionSize.set(value);\r\n    }\r\n\r\n    /**\r\n     * @en Setting frame rate in Open Data Context.\r\n     *\r\n     * @zh 设置开放数据域的渲染帧率。\r\n     */\r\n    @tooltip('i18n:subContextView.fps')\r\n    get fps (): number {\r\n        return this._fps;\r\n    }\r\n    set fps (value) {\r\n        if (this._fps === value) {\r\n            return;\r\n        }\r\n        this._fps = value;\r\n        this._updateInterval = 1000 / value;\r\n    }\r\n\r\n    @serializable\r\n    private _fps = 60;\r\n    private _sprite: Sprite | null = null;\r\n    private _imageAsset: ImageAsset = new ImageAsset();\r\n    private _texture: Texture2D = new Texture2D();\r\n    private _updatedTime = 0;\r\n    private _updateInterval = 0;\r\n    private _openDataContext: any = null;\r\n    private _content: Node = new Node('content');\r\n    @serializable\r\n    private _designResolutionSize: Size = new Size(640, 960);\r\n\r\n    constructor () {\r\n        super();\r\n        this._content.hideFlags |= CCObjectFlags.DontSave | CCObjectFlags.HideInHierarchy;\r\n        this._updatedTime = performance.now();\r\n    }\r\n\r\n    public onLoad (): void {\r\n        if (minigame.getOpenDataContext) {\r\n            this._updateInterval = 1000 / this._fps;\r\n            this._openDataContext = minigame.getOpenDataContext();\r\n            this._initSharedCanvas();\r\n            this._initContentNode();\r\n            this._updateSubContextView();\r\n            this._updateContentLayer();\r\n        } else {\r\n            this.enabled = false;\r\n        }\r\n    }\r\n\r\n    public onEnable (): void {\r\n        this._registerNodeEvent();\r\n    }\r\n\r\n    public onDisable (): void {\r\n        this._unregisterNodeEvent();\r\n    }\r\n\r\n    private _initSharedCanvas (): void {\r\n        if (this._openDataContext) {\r\n            const sharedCanvas = this._openDataContext.canvas;\r\n            let designWidth = this._designResolutionSize.width;\r\n            let designHeight = this._designResolutionSize.height;\r\n            if (WECHAT || WECHAT_MINI_PROGRAM) {\r\n                // HACK: on WeChat platform, at least one side of the width and height of sharedCanvas is greater than 513\r\n                // When the sharedCanvas is smaller than this size, the rendering doesn't work.\r\n                const minimumSize = 513;\r\n                if (designWidth <= minimumSize && designHeight <= minimumSize) {\r\n                    const scaleWidth = minimumSize / designWidth;\r\n                    const scaleHeight = minimumSize / designHeight;\r\n                    const targetScale = scaleWidth < scaleHeight ? scaleWidth : scaleHeight;\r\n                    designWidth *= targetScale;\r\n                    designHeight *= targetScale;\r\n                }\r\n            }\r\n            sharedCanvas.width = designWidth;\r\n            sharedCanvas.height = designHeight;\r\n        }\r\n    }\r\n\r\n    private _initContentNode (): void {\r\n        if (this._openDataContext) {\r\n            const sharedCanvas: HTMLCanvasElement = this._openDataContext.canvas;\r\n\r\n            const image = this._imageAsset;\r\n            image.reset(sharedCanvas);\r\n            this._texture.image = image;\r\n            this._texture.create(sharedCanvas.width, sharedCanvas.height);\r\n\r\n            this._sprite = this._content.getComponent(Sprite);\r\n            if (!this._sprite) {\r\n                this._sprite = this._content.addComponent(Sprite);\r\n            }\r\n\r\n            if (this._sprite.spriteFrame) {\r\n                this._sprite.spriteFrame.texture = this._texture;\r\n            } else {\r\n                const sp = new SpriteFrame();\r\n                sp.texture = this._texture;\r\n                this._sprite.spriteFrame = sp;\r\n            }\r\n\r\n            this._content.parent = this.node;\r\n        }\r\n    }\r\n\r\n    private _updateSubContextView (): void {\r\n        if (!this._openDataContext) {\r\n            return;\r\n        }\r\n\r\n        // update subContextView size\r\n        // use SHOW_ALL policy to adapt subContextView\r\n        const nodeTrans = this.node.getComponent(UITransform) as UITransform;\r\n        const contentTrans = this._content.getComponent(UITransform) as UITransform;\r\n\r\n        const scaleX = nodeTrans.width / contentTrans.width;\r\n        const scaleY = nodeTrans.height / contentTrans.height;\r\n        const scale = scaleX > scaleY ? scaleY : scaleX;\r\n        contentTrans.width *= scale;\r\n        contentTrans.height *= scale;\r\n\r\n        // update viewport in subContextView\r\n        const viewportRect = view.getViewportRect();\r\n        const box = contentTrans.getBoundingBoxToWorld();\r\n        const visibleSize = view.getVisibleSize();\r\n        const dpr = screenAdapter.devicePixelRatio;\r\n\r\n        // TODO: the visibleSize need to be the size of Canvas node where the content node is.\r\n        const x = (viewportRect.width * (box.x / visibleSize.width) + viewportRect.x) / dpr;\r\n        const y = (viewportRect.height * (box.y / visibleSize.height) + viewportRect.y) / dpr;\r\n        const width = viewportRect.width * (box.width / visibleSize.width) / dpr;\r\n        const height = viewportRect.height * (box.height / visibleSize.height) / dpr;\r\n\r\n        this._openDataContext.postMessage({\r\n            fromEngine: true,  // compatible deprecated property\r\n            type: 'engine',\r\n            event: 'viewport',\r\n            x,\r\n            y,\r\n            width,\r\n            height,\r\n        });\r\n    }\r\n\r\n    private _updateSubContextTexture (): void {\r\n        const img = this._imageAsset;\r\n        if (!img || !this._openDataContext) {\r\n            return;\r\n        }\r\n\r\n        if (img.width <= 0 || img.height <= 0) {\r\n            return;\r\n        }\r\n\r\n        const sharedCanvas: HTMLCanvasElement = this._openDataContext.canvas;\r\n        img.reset(sharedCanvas);\r\n        if (sharedCanvas.width > img.width || sharedCanvas.height > img.height) {\r\n            this._texture.create(sharedCanvas.width, sharedCanvas.height);\r\n        }\r\n\r\n        this._texture.uploadData(sharedCanvas);\r\n    }\r\n\r\n    private _registerNodeEvent (): void {\r\n        this.node.on(NodeEventType.TRANSFORM_CHANGED, this._updateSubContextView, this);\r\n        this.node.on(NodeEventType.SIZE_CHANGED, this._updateSubContextView, this);\r\n        this.node.on(NodeEventType.LAYER_CHANGED, this._updateContentLayer, this);\r\n    }\r\n\r\n    private _unregisterNodeEvent (): void {\r\n        this.node.off(NodeEventType.TRANSFORM_CHANGED, this._updateSubContextView, this);\r\n        this.node.off(NodeEventType.SIZE_CHANGED, this._updateSubContextView, this);\r\n        this.node.off(NodeEventType.LAYER_CHANGED, this._updateContentLayer, this);\r\n    }\r\n\r\n    private _updateContentLayer (): void {\r\n        this._content.layer = this.node.layer;\r\n    }\r\n\r\n    public update (dt?: number): void {\r\n        const calledUpdateManually = (dt === undefined);\r\n        if (calledUpdateManually) {\r\n            this._updateSubContextTexture();\r\n            return;\r\n        }\r\n        const now = performance.now();\r\n        const deltaTime = (now - this._updatedTime);\r\n        if (deltaTime >= this._updateInterval) {\r\n            this._updatedTime += this._updateInterval;\r\n            this._updateSubContextTexture();\r\n        }\r\n    }\r\n\r\n    public onDestroy (): void {\r\n        this._content.destroy();\r\n        this._texture.destroy();\r\n        if (this._sprite) { this._sprite.destroy(); }\r\n        this._imageAsset.destroy();\r\n        this._openDataContext = null;\r\n    }\r\n}\r\n\r\nlegacyCC.SubContextView = SubContextView;\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { deprecateModuleExportedName } from '../core/utils/x-deprecated';\r\n\r\ndeprecateModuleExportedName({\r\n    ButtonComponent: {\r\n        newName: 'Button',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    EditBoxComponent: {\r\n        newName: 'EditBox',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    LayoutComponent: {\r\n        newName: 'Layout',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    ProgressBarComponent: {\r\n        newName: 'ProgressBar',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    ScrollViewComponent: {\r\n        newName: 'ScrollView',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    ScrollBarComponent: {\r\n        newName: 'ScrollBar',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    SliderComponent: {\r\n        newName: 'Slider',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    ToggleComponent: {\r\n        newName: 'Toggle',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    ToggleContainerComponent: {\r\n        newName: 'ToggleContainer',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    WidgetComponent: {\r\n        newName: 'Widget',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    PageViewComponent: {\r\n        newName: 'PageView',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    PageViewIndicatorComponent: {\r\n        newName: 'PageViewIndicator',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    SafeAreaComponent: {\r\n        newName: 'SafeArea',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    UICoordinateTrackerComponent: {\r\n        newName: 'UICoordinateTracker',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n    BlockInputEventsComponent: {\r\n        newName: 'BlockInputEvents',\r\n        since: '1.2.0',\r\n        removed: false,\r\n    },\r\n});\r\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport './deprecated-1.2.0';\r\nimport { UICoordinateTracker } from './ui-coordinate-tracker';\r\nimport { BlockInputEvents } from './block-input-events';\r\nimport { Button } from './button';\r\nimport { EditBox } from './editbox/edit-box';\r\nimport { Layout } from './layout';\r\nimport { ProgressBar } from './progress-bar';\r\nimport { ScrollView } from './scroll-view';\r\nimport { ScrollBar } from './scroll-bar';\r\nimport { Slider } from './slider';\r\nimport { Toggle } from './toggle';\r\nimport { ToggleContainer } from './toggle-container';\r\nimport { Widget } from './widget';\r\nimport { PageView } from './page-view';\r\nimport { PageViewIndicator } from './page-view-indicator';\r\nimport { SafeArea } from './safe-area';\r\nimport { warnID } from '../core/platform/debug';\r\nimport { ccclass } from '../core/data/class-decorator';\r\nimport { js, removeProperty, markAsWarning } from '../core';\r\nimport { legacyCC } from '../core/global-exports';\r\nimport { View } from './view';\r\n\r\n/**\r\n * @deprecated Since v1.2\r\n */\r\n@ccclass('cc.UIReorderComponent')\r\nexport class UIReorderComponent {\r\n    constructor () {\r\n        warnID(1408, 'UIReorderComponent');\r\n    }\r\n}\r\nlegacyCC.UIReorderComponent = UIReorderComponent;\r\n\r\n/**\r\n * Alias of [[Button]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Button as ButtonComponent };\r\nlegacyCC.ButtonComponent = Button;\r\njs.setClassAlias(Button, 'cc.ButtonComponent');\r\n/**\r\n * Alias of [[EditBox]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { EditBox as EditBoxComponent };\r\nlegacyCC.EditBoxComponent = EditBox;\r\njs.setClassAlias(EditBox, 'cc.EditBoxComponent');\r\n/**\r\n * Alias of [[Layout]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Layout as LayoutComponent };\r\nlegacyCC.LayoutComponent = Layout;\r\njs.setClassAlias(Layout, 'cc.LayoutComponent');\r\n/**\r\n * Alias of [[ProgressBar]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { ProgressBar as ProgressBarComponent };\r\nlegacyCC.ProgressBarComponent = ProgressBar;\r\njs.setClassAlias(ProgressBar, 'cc.ProgressBarComponent');\r\n/**\r\n * Alias of [[ScrollView]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { ScrollView as ScrollViewComponent };\r\nlegacyCC.ScrollViewComponent = ScrollView;\r\njs.setClassAlias(ScrollView, 'cc.ScrollViewComponent');\r\n/**\r\n * Alias of [[ScrollBar]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { ScrollBar as ScrollBarComponent };\r\nlegacyCC.ScrollBarComponent = ScrollBar;\r\njs.setClassAlias(ScrollBar, 'cc.ScrollBarComponent');\r\n/**\r\n * Alias of [[Slider]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Slider as SliderComponent };\r\nlegacyCC.SliderComponent = Slider;\r\njs.setClassAlias(Slider, 'cc.SliderComponent');\r\n/**\r\n * Alias of [[Toggle]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Toggle as ToggleComponent };\r\nlegacyCC.ToggleComponent = Toggle;\r\njs.setClassAlias(Toggle, 'cc.ToggleComponent');\r\n/**\r\n * Alias of [[ToggleContainer]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { ToggleContainer as ToggleContainerComponent };\r\nlegacyCC.ToggleContainerComponent = ToggleContainer;\r\njs.setClassAlias(ToggleContainer, 'cc.ToggleContainerComponent');\r\n/**\r\n * Alias of [[Widget]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { Widget as WidgetComponent };\r\nlegacyCC.WidgetComponent = Widget;\r\njs.setClassAlias(Widget, 'cc.WidgetComponent');\r\n/**\r\n * Alias of [[PageView]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { PageView as PageViewComponent };\r\nlegacyCC.PageViewComponent = PageView;\r\njs.setClassAlias(PageView, 'cc.PageViewComponent');\r\n/**\r\n * Alias of [[PageViewIndicator]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { PageViewIndicator as PageViewIndicatorComponent };\r\nlegacyCC.PageViewIndicatorComponent = PageViewIndicator;\r\njs.setClassAlias(PageViewIndicator, 'cc.PageViewIndicatorComponent');\r\n/**\r\n * Alias of [[SafeArea]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { SafeArea as SafeAreaComponent };\r\nlegacyCC.SafeAreaComponent = SafeArea;\r\njs.setClassAlias(SafeArea, 'cc.SafeAreaComponent');\r\n/**\r\n * Alias of [[UICoordinateTracker]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { UICoordinateTracker as UICoordinateTrackerComponent };\r\njs.setClassAlias(UICoordinateTracker, 'cc.UICoordinateTrackerComponent');\r\n/**\r\n * Alias of [[BlockInputEvents]]\r\n * @deprecated Since v1.2\r\n */\r\nexport { BlockInputEvents as BlockInputEventsComponent };\r\nlegacyCC.BlockInputEventsComponent = BlockInputEvents;\r\njs.setClassAlias(BlockInputEvents, 'cc.BlockInputEventsComponent');\r\n\r\n// #region deprecation on view\r\nremoveProperty(View.prototype, 'View.prototype', [\r\n    {\r\n        name: 'isAntiAliasEnabled',\r\n        suggest: 'The API of Texture2d have been largely modified, no alternative',\r\n    },\r\n    {\r\n        name: 'enableAntiAlias',\r\n        suggest: 'The API of Texture2d have been largely modified, no alternative',\r\n    },\r\n]);\r\nmarkAsWarning(View.prototype, 'View.prototype', [\r\n    {\r\n        name: 'adjustViewportMeta',\r\n    },\r\n    {\r\n        name: 'enableAutoFullScreen',\r\n        suggest: 'use screen.requestFullScreen() instead.',\r\n    },\r\n    {\r\n        name: 'isAutoFullScreenEnabled',\r\n    },\r\n    {\r\n        name: 'setCanvasSize',\r\n        suggest: 'setting size in CSS pixels is not recommended, please use screen.windowSize instead.',\r\n    },\r\n    {\r\n        name: 'getCanvasSize',\r\n        suggest: 'please use screen.windowSize instead.',\r\n    },\r\n    {\r\n        name: 'getFrameSize',\r\n        suggest: 'getting size in CSS pixels is not recommended, please use screen.windowSize instead.',\r\n    },\r\n    {\r\n        name: 'setFrameSize',\r\n        suggest: 'setting size in CSS pixels is not recommended, please use screen.windowSize instead.',\r\n    },\r\n    {\r\n        name: 'getDevicePixelRatio',\r\n        suggest: 'use screen.devicePixelRatio instead.',\r\n    },\r\n    {\r\n        name: 'convertToLocationInView',\r\n    },\r\n    {\r\n        name: 'enableRetina',\r\n    },\r\n    {\r\n        name: 'isRetinaEnabled',\r\n    },\r\n    {\r\n        name: 'setRealPixelResolution',\r\n    },\r\n]);\r\n"],"names":["Transition","State","ButtonEventType","minigame","_tempColor","Color","ccenum","Button","ccclass","executionOrder","_dec3","requireComponent","UITransform","_dec4","type","Node","_dec5","SpriteFrame","_dec10","ComponentEventHandler","_dec","_class","_dec2","_class3","_Component","_this","call","this","clickEvents","_initializer","_interactable","_initializer2","_transition","_initializer3","_normalColor","_initializer4","_hoverColor","_initializer5","_pressedColor","_initializer6","_disabledColor","_initializer7","_normalSprite","_initializer8","_hoverSprite","_initializer9","_pressedSprite","_initializer10","_disabledSprite","_initializer11","_duration","_initializer12","_zoomScale","_initializer13","_target","_initializer14","_pressed","_hovered","_fromColor","_toColor","_time","_transitionFinished","_fromScale","v3","_toScale","_originalScale","_sprite","_targetScale","_inheritsLoose","_proto","prototype","__preload","target","node","_applyTarget","_resetState","onEnable","_registerNodeEvent","onDisable","_unregisterNodeEvent","onDestroy","isValid","_unregisterTargetEvent","update","dt","COLOR","SCALE","ratio","renderComp","_uiProps","uiComp","lerp","color","transition","getScale","x","y","setScale","_resizeNodeToTargetNode","_getUITransformComp","getComponent","UIRenderer","self","on","NodeEventType","TOUCH_START","_onTouchBegan","TOUCH_MOVE","_onTouchMove","TOUCH_END","_onTouchEnded","TOUCH_CANCEL","_onTouchCancel","MOUSE_ENTER","_onMouseMoveIn","MOUSE_LEAVE","_onMouseMoveOut","XrUIPressEventType","XRUI_HOVER_ENTERED","_xrHoverEnter","XRUI_HOVER_EXITED","_xrHoverExit","XRUI_CLICK","_xrClick","XRUI_UNCLICK","_xrUnClick","_registerTargetEvent","TRANSFORM_CHANGED","_onTargetTransformChanged","off","_getTargetSprite","sprite","Sprite","Vec3","copy","scale","_onTargetSpriteFrameChanged","comp","SPRITE","_setCurrentStateSpriteFrame","spriteFrame","_getButtonState","NORMAL","HOVER","PRESSED","DISABLED","_onTargetColorChanged","_setCurrentStateColor","transformBit","TransformBit","event","enabledInHierarchy","_updateState","propagationStopped","touch","state","hit","hitTest","getLocation","windowId","multiplyScalar","_applyTransition","emitEvents","emit","CLICK","interactable","_updateColorTransition","_this$target","_getColorByState","clone","_updateSpriteTransition","_getSpriteFrameByState","_updateScaleTransition","_zoomUp","_zoomBack","hoverSprite","warn","_createClass","key","get","set","value","Component","EventType","_applyDecoratedDescriptor","_class2","Object","getOwnPropertyDescriptor","_dec6","_dec7","_dec8","_dec9","_applyDecoratedInitializer","serializable","NONE","WHITE","exports","ButtonComponent","legacyCC","KeyboardReturnType","InputMode","InputFlag","tabIndexUtil","add","editBoxImpl","list","_tabIndexList","indexOf","push","remove","index","splice","resort","sort","a","b","_delegate","tabIndex","next","setFocus","nextImpl","Enum","EditBoxEventType","EditBoxImplBase","_editing","init","beforeDraw","endEditing","clear","setTabIndex","setSize","beginEditing","isFocused","ccdocument","ccwindow","document","_matrix","Mat4","_matrix_temp","_vec3","_currentEditBoxImpl","_domCount","EditBoxImpl","_EditBoxImplBase","_inputMode","_inputFlag","_returnType","__eventListeners","__autoResize","__orientationChanged","_edTxt","_isTextArea","_textLabelFont","_textLabelFontSize","_textLabelFontColor","_textLabelAlign","_placeholderLabelFont","_placeholderLabelFontSize","_placeholderLabelFontColor","_placeholderLabelAlign","_placeholderLineHeight","_placeholderStyleSheet","_domId","_forceUpdate","delegate","inputMode","ANY","_createTextArea","_createInput","_initStyleSheet","_registerEventListeners","_addDomToGameContainer","View","instance","_resize","screenAdapter","_removeEventListeners","_removeDomFromGameContainer","hasChangedFlags","_updateMatrix","width","height","elem","style","_editBoxEditingDidBegan","_showDom","focus","blur","createElement","game","container","appendChild","head","contains","removeChild","_updateMaxLength","_updateInputType","_updateStyleSheet","display","_hideLabels","sys","isMobile","_showDomOnMobile","_hideDom","_showLabels","_hideDomOnMobile","os","OS","ANDROID","OHOS","handleResizeEvent","_adjustWindowScroll","_scrollBackWindow","_isElementInViewport","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","_this2","setTimeout","scrollY","scrollIntoView","block","inline","behavior","browserType","BrowserType","WECHAT","IOS","scrollTo","scaleX","view","getScaleX","scaleY","getScaleY","viewport","getViewportRect","dpr","devicePixelRatio","getWorldMatrix","transform","anchorX","anchorY","z","camera","director","root","batcher2D","getFirstRenderCamera","getWorldRT","m12","m13","center","visibleRect","m00","m04","m01","m05","offsetX","parseInt","paddingLeft","offsetY","paddingBottom","multiply","matrix","tx","inputFlag","returnType","INITIAL_CAPS_ALL_CHARACTERS","INITIAL_CAPS_WORD","textTransform","PASSWORD","EMAIL_ADDR","NUMERIC","DECIMAL","PHONE_NUMBER","addEventListener","URL","SEARCH","maxLength","border","background","outline","padding","position","LEFT_PADDING","className","fontFamily","id","resize","overflowY","string","_updateTextLabel","textLabel","font","BitmapFont","_fontFamily","fontSize","fontColor","horizontalAlign","toCSS","Label","HorizontalAlign","LEFT","textAlign","CENTER","RIGHT","_updatePlaceholderLabel","placeholderLabel","styleEl","lineHeight","innerHTML","EDGE","_this3","inputLock","cbs","compositionStart","compositionEnd","_editBoxTextChanged","onInput","slice","onClick","onKeydown","e","keyCode","KeyCode","ENTER","_editBoxEditingReturn","TAB","preventDefault","onBlur","_editBoxEditingDidEnded","removeEventListener","EditBox","LayoutType","LayoutResizeMode","LayoutAxisDirection","LayoutVerticalDirection","LayoutHorizontalDirection","LayoutConstraint","editingDidBegan","textChanged","editingDidEnded","editingReturn","_impl","_background","_textLabel","_placeholderLabel","_string","_tabIndex","_backgroundImage","_maxLength","_isLabelVisible","_init","_registerEvent","_ensureBackgroundSprite","_beforeDraw","_unregisterEvent","_unregisterBackgroundEvent","DirectorEvent","BEFORE_DRAW","EDITING_DID_BEGAN","text","EDITING_DID_ENDED","_updateLabelStringStyle","TEXT_CHANGED","EDITING_RETURN","_updateLabels","active","SIZE_CHANGED","_resizeChildNodes","_EditBoxImpl","_updateString","_syncSize","addComponent","Type","SLICED","_registerBackgroundEvent","getChildByName","layer","parent","verticalAlign","VerticalTextAlignment","TOP","enableWrapText","placeholder","trans","size","contentSize","bgTrans","anchorPoint","setContentSize","_updateLabelPosition","content","displayText","ignorePassword","str","toUpperCase","replace","INITIAL_CAPS_SENTENCE","charAt","passwordString","len","length","i","XrKeyboardEventType","XR_KEYBOARD_INPUT","_xrKeyBoardInput","_onBackgroundSpriteFrameChanged","backgroundImage","SpriteEventType","SPRITE_FRAME_CHANGED","offX","offY","setPosition","textLabelNode","placeholderLabelNode","backgroundNode","XR_EDITING_DID_BEGAN","oldValue","_dec11","_dec12","_dec13","DEFAULT","EditBoxComponent","window","MINIGAME","JSB","RUNTIME_BASED","internal","Mode","_tempVec3","Layout","_resizeMode","_layoutType","_cellSize","_startAxis","_paddingLeft","_paddingRight","_paddingTop","_paddingBottom","_spacingX","_spacingY","_verticalDirection","_horizontalDirection","_constraint","_constraintNum","_affectedByScale","_initializer15","_isAlign","_initializer16","_layoutSize","Size","_layoutDirty","_childrenDirty","_usefulLayoutObj","updateLayout","force","_doLayout","_addEventListeners","equals","ZERO","_childrenChanged","_checkUsefulObj","children","child","uiTrans","activeInHierarchy","AFTER_UPDATE","_resized","ANCHOR_CHANGED","_doLayoutDirty","CHILD_ADDED","_childAdded","CHILD_REMOVED","_childRemoved","CHILDREN_ORDER_CHANGED","_addChildrenEventListeners","_removeChildrenEventListeners","_transformDirty","ACTIVE_IN_HIERARCHY_CHANGED","_doLayoutHorizontally","baseWidth","rowBreak","fnPositionY","applyChildren","layoutAnchor","limit","_getFixedBreakingNum","sign","paddingX","RIGHT_TO_LEFT","startPos","nextX","totalHeight","rowMaxHeight","tempMaxHeight","maxHeight","isBreak","activeChildCount","newChildWidth","paddingH","_getPaddingH","GRID","CHILDREN","childTrans","childScaleX","_getUsedScaleValue","childScaleY","Math","abs","childBoundingBoxWidth","childBoundingBoxHeight","max","rightBoundaryOfChild","boundary","rowBreakBoundary","finalPositionY","_getPaddingV","_doLayoutVertically","baseHeight","columnBreak","fnPositionX","paddingY","TOP_TO_BOTTOM","nextY","tempMaxWidth","maxWidth","colMaxWidth","totalWidth","newChildHeight","paddingV","topBoundaryOfChild","columnBreakBoundary","finalPositionX","getPosition","_doLayoutGridAxisHorizontal","layoutSize","bottomBoundaryOfLayout","topOffset","newHeight","CONTAINER","_doLayoutGridAxisVertical","leftBoundaryOfLayout","leftOffset","newWidth","_doLayoutGrid","startAxis","HORIZONTAL","VERTICAL","_getHorizontalBaseWidth","baseSize","_getVerticalBaseHeight","_this4","POSITION","num","FIXED_ROW","ceil","FIXED_COL","warnID","VerticalDirection","HorizontalDirection","ResizeMode","AxisDirection","Constraint","LEFT_TO_RIGHT","LayoutComponent","ProgressBar","_barSprite","_mode","_totalLength","_progress","_reverse","onLoad","_updateBarStatus","_initBarSprite","entity","nodeSize","nodeAnchor","barSpriteSize","fillType","FillType","RADIAL","FILLED","totalLength","fillRange","entTrans","entityAnchorPoint","entitySize","Vec2","progress","clamp01","actualLenth","finalContentSize","anchorOffsetX","anchorOffsetY","finalPosition","add3f","setAnchorPoint","fillStart","ProgressBarComponent","ScrollBarDirection","_tempPos_1","_tempPos_2","defaultAnchor","_tempVec2","ScrollBar","_scrollView","_handle","_direction","_enableAutoHide","_autoHideTime","_touching","_opacity","_autoHideRemainingTime","hide","_setOpacity","show","onScroll","outOfBoundary","scrollViewSize","barSize","_conditionalDisableScrollBar","contentMeasure","scrollViewMeasure","outOfBoundaryValue","contentPosition","handleNodeMeasure","outOfContentPosition","_convertToScrollViewSpace","_calculateLength","_calculatePosition","_updateLength","_updateHandlerPosition","setScrollView","scrollView","onTouchBegan","onTouchEnded","start","_processAutoHide","out","scrollTrans","contentTrans","convertToWorldSpaceAR","scrollViewSpacePos","convertToNodeSpaceAR","opacity","oldPosition","_fixupHandlerPosition","barAnchor","handleSize","handle","handleParent","leftBottomWorldPosition","fixupPosition","direction","denominatorValue","positionRatio","handleTrans","handleNodeSize","anchor","deltaTime","Direction","ScrollBarComponent","ViewGroup","apply","arguments","ScrollViewEventType","XrhoverType","EPSILON","_tempVec3_1","v2","_tempVec2_1","getTimeInMilliseconds","Date","getMilliseconds","eventMap","scrolling","_moveDeltaOptions","applyToHorizontal","applyToVertical","assignMoveDeltaOption","ScrollView","_ViewGroup","bounceDuration","brake","elastic","inertia","horizontal","vertical","cancelInnerEvents","scrollEvents","_autoScrolling","_scrolling","_content","_horizontalScrollBar","_verticalScrollBar","_topBoundary","_bottomBoundary","_leftBoundary","_rightBoundary","_touchMoveDisplacements","_touchMoveTimeDeltas","_touchMovePreviousTimestamp","_touchMoved","_autoScrollAttenuate","_autoScrollStartPosition","_autoScrollTargetDelta","_autoScrollTotalTime","_autoScrollAccumulatedTime","_autoScrollCurrentlyOutOfBoundary","_autoScrollBraking","_autoScrollBrakingStartPosition","_outOfBoundaryAmount","_outOfBoundaryAmountDirty","_stopMouseWheel","_mouseWheelEventElapsedTime","_isScrollEndedWithThresholdEventFired","_scrollEventEmitMask","_isBouncing","_contentPos","_deltaPos","_deltaAmount","_hoverIn","scrollToBottom","timeInSecond","attenuated","_doScroll","scrollToTop","scrollToLeft","scrollToRight","scrollToTopLeft","scrollToTopRight","scrollToBottomLeft","scrollToBottomRight","scrollToOffset","offset","maxScrollOffset","getMaxScrollOffset","getScrollOffset","topDelta","_getContentTopBoundary","leftDelta","_getContentLeftBoundary","horizontalMaximizeOffset","verticalMaximizeOffset","scrollToPercentHorizontal","percent","scrollToPercentVertical","moveDelta","_calculateMovePercentDelta","_startAutoScroll","_moveContent","stopAutoScroll","setContentPosition","_setContentPosition","contentPos","_getContentPosition","getContentPosition","isScrolling","isAutoScrolling","getScrollEndedEventTiming","_calculateBoundary","once","_adjustContentOutOfBoundary","_scaleChanged","_updateScrollBarState","deltaAmount","_processAutoScrolling","_processDeltaMove","_hideScrollBar","_onTouchMoved","_onTouchCancelled","MOUSE_WHEEL","_onMouseWheel","input","InputEventType","HANDLE_INPUT","_dispatchEventHandleInput","GAMEPAD_INPUT","captureListeners","_hasNestedViewGroup","getScrollY","deltaMove","_handlePressLogic","schedule","_checkMouseWheel","_stopPropagationIfTargetIsMe","_handleMoveLogic","getUILocation","subtract","getUIStartLocation","cancelEvent","EventTouch","getTouches","bubbles","SystemEventType","simulate","dispatchEvent","_dispatchEvent","TOUCH_UP","_handleReleaseLogic","layout","viewTrans","_moveContentToTopLeft","eventPhase","Event","CAPTURING_PHASE","listener","_startInertiaScroll","touchMoveVelocity","_startAttenuatingAutoScroll","_calculateAttenuatedFactor","distance","initialVelocity","targetDelta","normalize","totalMoveWidth","totalMoveHeight","attenuatedFactorX","attenuatedFactorY","originalMoveLength","factor","sqrt","time","_calculateAutoScrollTimeByInitialSpeed","initialSpeed","adjustedDeltaMove","_flattenVectorByDirection","_getHowMuchOutOfBoundary","_calculateTouchMoveVelocity","totalTime","reduce","totalMovement","vector","canStartBounceBack","adjustedMove","round","_updateScrollBar","_startBounceBackIfNeeded","_getContentRightBoundary","_getContentBottomBoundary","addition","outOfBoundaryAmount","tempLeftBoundary","tempRightBoundary","tempTopBoundary","tempBottomBoundary","_clampDelta","_onScrollBarTouchBegan","_onScrollBarTouchEnded","SCROLL_ENDED","SCROLL_TO_TOP","SCROLL_TO_BOTTOM","SCROLL_TO_LEFT","SCROLL_TO_RIGHT","flag","verticalScrollBar","approx","horizontalScrollBar","AT_TARGET","_scrollChildren","_gatherTouchMove","_getLocalAxisAlignDelta","_processInertiaScroll","uiTransformComp","getUIPreviousLocation","realMove","verticalScrollEventType","horizontalScrollEventType","_ref2","pos","SCROLL_BEGAN","SCROLLING","delta","clampDt","shift","timeStamp","bounceBackAmount","bounceBackTime","BOUNCE_TOP","BOUNCE_BOTTOM","BOUNCE_RIGHT","BOUNCE_LEFT","_isOutOfBoundary","_isNecessaryAutoScrollBrake","isAutoScrollBrake","brakingFactor","percentage","min","clonedAutoScrollTargetDelta","clonedAutoScrollStartPosition","reachedEnd","SCROLL_ENG_WITH_THRESHOLD","brakeOffsetPosition","unschedule","options","clampf","ONE","bottomDelta","totalScrollDelta","scrollSize","deviceType","DeviceType","Left","Right","handleInputDevice","EventGamepad","gamepad","EventHandle","leftStick","getValue","_xrThumbStickMove","rightStick","NaN","logID","errorID","name","ScrollViewComponent","_tempPos","ToggleEventType","Slider","EventHandler","slideEvents","_offset","_dragging","_touchHandle","_handleLocalPos","_touchPos","_updateHandlePosition","XRUI_HOVER_STAY","_xrHoverStay","handleNode","_onHandleDragStart","touhPos","_handleSliderLogic","_updateProgress","_emitSlideEvent","touchPos","localTouchPos","Horizontal","_changeLayout","_xrHandleProgress","point","hitPoint","extendsEnum","_len","enums","Array","_key","assign","SliderComponent","Toggle","_Button","checkEvents","_isChecked","_checkMark","_internalToggle","isChecked","_set","emitEvent","group","_toggleContainer","enabled","anyTogglesChecked","allowSwitchOff","notifyToggleCheck","playEffect","_emitToggleEvents","setIsCheckedWithoutNotify","TOGGLE","isNode","ToggleComponent","ToggleContainer","_allowSwitchOff","ensureValidState","activeToggles","toggleItems","filter","find","toggle","item","toggles","firstToggle","map","Boolean","ToggleContainerComponent","AlignMode","AlignFlags","_tempScale","getReadonlyNodeSize","parentUITransform","Scene","computeInverseTransForTarget","widgetNode","out_inverseTranslate","out_inverseScale","translateX","translateY","sx","sy","TOP_BOT","BOT","LEFT_RIGHT","Widget","_lastPos","_lastSize","_dirty","_hadAlignOnce","_alignFlags","_left","_right","_top","_bottom","_horizontalCenter","_verticalCenter","_isAbsLeft","_isAbsRight","_isAbsTop","_isAbsBottom","_isAbsHorizontalCenter","_isAbsVerticalCenter","_originalWidth","_originalHeight","_alignMode","_initializer17","_lockFlags","_initializer18","updateAlignment","cclegacy","_widgetManager","_validateTargetInDEV","setDirty","_recursiveDirty","_registerTargetEvents","_unregisterTargetEvents","_removeParentEvent","_adjustWidgetToAllowMovingInEditor","_adjustWidgetToAllowResizingInEditor","_adjustWidgetToAnchorChanged","_adjustTargetToParentChanged","oldParent","_unregisterOldParentEvents","getParent","_setDirtyByMode","PARENT_CHANGED","_autoChangedValue","isAbs","parentUiProps","parentTrans","isAlignLeft","isAlignRight","isAlignHorizontalCenter","isAlignTop","isAlignBottom","isAbsoluteVerticalCenter","MID","alignMode","ALWAYS","EDITOR_NOT_IN_PREVIEW","_setAlign","isAlign","isHorizontal","isStretchWidth","isAlignVerticalCenter","isStretchHeight","ON_WINDOW_RESIZE","editorOnly","WidgetComponent","_color","PageViewIndicator","spacing","_spriteFrame","_layout","_pageView","_indicators","_updateLayout","setPageView","_refresh","spacingX","spacingY","resizeMode","_createIndicator","sizeMode","SizeMode","CUSTOM","_changedState","indicators","idx","curPageIdx","pages","getPages","PageViewIndicatorComponent","PageViewDirection","PageViewEventType","PageView","_ScrollView","autoPageTurningThreshold","pageTurningSpeed","pageEvents","_sizeMode","_scrollThreshold","_pageTurningEventTiming","_indicator","_curPageIdx","_lastPageIdx","_pages","_initContentPos","_scrollCenterOffsetX","_scrollCenterOffsetY","_touchBeganPosition","_touchEndPosition","_updateAllPagesSize","_dispatchPageTurningEvent","_initPages","indicator","getCurrentPageIndex","setCurrentPageIndex","scrollToPage","addPage","page","addChild","_updatePageView","insertPage","insertChild","removePage","removePageAtIndex","pageList","removeAllPages","locPages","_moveOffsetValue","pageTurningEventTiming","pageCount","Unified","selfSize","_autoScrollToPage","_syncScrollDirection","_syncSizeMode","Free","firstPageTrans","lastPageTrans","paddingRight","paddingTop","PAGE_TURNING","_isQuicklyScrollable","_getDragDirection","moveOffset","_isScrollable","nextIndex","curPageCenter","nextPageCenter","scrollThreshold","ScrollEventType","override","PageViewComponent","_defaultAnchor","tInverseTranslate","tInverseScale","_tempVec2_2","align","widget","ONCE","hasTarget","inverseTranslate","inverseScale","targetSize","useGlobal","targetAnchor","isRoot","alignFlags","localLeft","localRight","targetWidth","isAbsoluteLeft","isAbsoluteRight","localHorizontalCenter","isAbsoluteHorizontalCenter","horizontalCenter","targetCenter","localTop","localBottom","targetHeight","isAbsoluteBottom","isAbsoluteTop","localVerticalCenter","verticalCenter","targetMiddle","visitNode","activeWidgets","_step","_iterator","_createForOfIteratorHelperLoose","done","refreshScene","scene","getScene","widgetManager","isAligning","_nodesOrderDirty","iterator","_activeWidgetsIterator","js","animationState","AFTER_SCENE_LAUNCH","onResized","thisOnResized","bind","refreshWidgetOnResized","_step2","_iterator2","updateOffsetsToStayPut","t","c","widgetParent","zero","one","parentAP","matchSize","myAP","widgetNodeScale","temp","l","r","INIT","SafeArea","_symmetric","updateArea","uiTransComp","lastPos","lastAnchorPoint","visibleSize","getVisibleSize","screenWidth","screenHeight","safeArea","getSafeAreaRect","curPos","SafeAreaComponent","UICoordinateTracker","Camera","syncEvents","_camera","_useScale","_distance","_transformPos","_viewPos","_canMove","_lastWPos","_lastCameraPos","_checkCanMove","wPos","worldPosition","convertToUINode","transformMat4","matView","data","UICoordinateTrackerComponent","BlockEvents","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","stopPropagation","BlockInputEvents","BlockInputEventsComponent","SubContextView","_fps","_imageAsset","ImageAsset","_texture","Texture2D","_updatedTime","_updateInterval","_openDataContext","_designResolutionSize","hideFlags","CCObjectFlags","DontSave","HideInHierarchy","performance","now","getOpenDataContext","_initSharedCanvas","_initContentNode","_updateSubContextView","_updateContentLayer","sharedCanvas","canvas","designWidth","designHeight","image","reset","create","texture","sp","nodeTrans","viewportRect","box","getBoundingBoxToWorld","postMessage","fromEngine","_updateSubContextTexture","img","uploadData","LAYER_CHANGED","undefined","destroy","deprecateModuleExportedName","newName","since","removed","UIReorderComponent","removeProperty","suggest","markAsWarning"],"mappings":"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"}